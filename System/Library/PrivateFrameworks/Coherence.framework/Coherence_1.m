uint64_t CRKeyPath.description.getter()
{
  sub_1C3FF44C8();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  return 10278;
}

void CRKeyPath.init(from:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v121 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v118 = *(void *)(v121 - 8);
  MEMORY[0x1F4188790](v121);
  v110 = (char *)&v102 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  v109 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v117 = (uint64_t)&v102 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v111 = (uint64_t)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v115 = (uint64_t)&v102 - v12;
  uint64_t v123 = type metadata accessor for Proto_Reference(0);
  uint64_t v13 = MEMORY[0x1F4188790](v123);
  uint64_t v108 = (uint64_t)&v102 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v116 = (uint64_t)&v102 - v15;
  uint64_t v16 = type metadata accessor for Proto_Value(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v113 = (uint64_t)&v102 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v114 = (uint64_t)&v102 - v20;
  uint64_t v107 = sub_1C4496678();
  uint64_t v106 = *(void *)(v107 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v107);
  v105 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v120 = (uint64_t)&v102 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v112 = (uint64_t)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  v119 = (char *)&v102 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  v31 = (char *)&v102 - v30;
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  v34 = (char *)&v102 - v33;
  MEMORY[0x1F4188790](v32);
  v36 = (char *)&v102 - v35;
  uint64_t v37 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v37, (uint64_t)v36, &qword_1EBBC0540);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  uint64_t v124 = v16;
  v128 = v38;
  LODWORD(v16) = v38(v36, 1, v16);
  swift_retain();
  sub_1C3F962E0((uint64_t)v36, &qword_1EBBC0540);
  if (v16 == 1)
  {
    v104 = a2;
    sub_1C3FE3FF0();
    v39 = (void *)swift_allocError();
    *(void *)uint64_t v40 = 0xD000000000000017;
    *(void *)(v40 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v40 + 16) = 0;
    id v122 = v39;
    swift_willThrow();
    uint64_t v41 = a1;
    swift_release();
  }
  else
  {
    type metadata accessor for CRDecoder.CRValueContainer();
    *(void *)(swift_initStackObject() + 16) = a1;
    id v42 = v122;
    uint64_t v43 = sub_1C3F8D610();
    if (!v42)
    {
      uint64_t v75 = v43;
      uint64_t v76 = v44;
      swift_release();
      swift_release();
      goto LABEL_38;
    }
    v104 = a2;
    uint64_t v41 = a1;
    swift_release();
    id v122 = v42;
  }
  sub_1C3F970C4(v37, (uint64_t)v34, &qword_1EBBC0540);
  uint64_t v45 = v124;
  unsigned int v46 = v128(v34, 1, v124);
  sub_1C3F962E0((uint64_t)v34, &qword_1EBBC0540);
  if (v46 != 1)
  {
    type metadata accessor for CRDecoder.CRValueContainer();
    *(void *)(swift_initStackObject() + 16) = v41;
    uint64_t v50 = v120;
    sub_1C3F91D38(v120);
    uint64_t v67 = v106;
    v68 = v105;
    uint64_t v69 = v107;
    (*(void (**)(char *, uint64_t, uint64_t))(v106 + 16))(v105, v50, v107);
    uint64_t v126 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9D8F8);
    uint64_t v127 = v70;
    uint64_t v71 = sub_1C3F5DF48();
    unint64_t v73 = v72;
    sub_1C4496588();
    sub_1C3F7E2CC(v71, v73);
    v74 = *(void (**)(char *, uint64_t))(v67 + 8);
    v74(v68, v69);

    swift_release();
    uint64_t v75 = v126;
    uint64_t v76 = v127;
    v74((char *)v50, v69);
    a2 = v104;
LABEL_38:
    *a2 = v75;
    a2[1] = v76;
    return;
  }
  sub_1C3FE3FF0();
  uint64_t v47 = swift_allocError();
  *(void *)uint64_t v48 = 0xD000000000000017;
  *(void *)(v48 + 8) = 0x80000001C44B0F00;
  *(unsigned char *)(v48 + 16) = 0;
  swift_willThrow();
  uint64_t v120 = 0;
  uint64_t v49 = v41;
  sub_1C3F970C4(v37, (uint64_t)v31, &qword_1EBBC0540);
  v51 = v128;
  uint64_t v52 = v45;
  unsigned int v53 = v128(v31, 1, v45);
  sub_1C3F962E0((uint64_t)v31, &qword_1EBBC0540);
  if (v53 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v54 = 0xD000000000000017;
    *(void *)(v54 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v54 + 16) = 0;
    swift_willThrow();
    swift_release();
    v55 = (void *)v47;
LABEL_22:

    return;
  }
  uint64_t v56 = v37;
  v57 = v119;
  sub_1C3F970C4(v56, (uint64_t)v119, &qword_1EBBC0540);
  if (v51(v57, 1, v52) == 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  uint64_t v58 = v114;
  sub_1C3F8AB70((uint64_t)v57, v114, type metadata accessor for Proto_Value);
  uint64_t v59 = *(void *)(v58 + *(int *)(v52 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v60 = v115;
  sub_1C3F970C4(v59, v115, &qword_1EBBBF8A0);
  uint64_t v61 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v62 = *(void *)(v61 - 8);
  v119 = *(char **)(v62 + 48);
  uint64_t v107 = v62 + 48;
  int v63 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v119)(v60, 1, v61);
  uint64_t v103 = v49;
  if (v63 == 1)
  {
    swift_retain();
    sub_1C3F962E0(v60, &qword_1EBBBF8A0);
    uint64_t v64 = v116;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v64 = v116;
    if (EnumCaseMultiPayload == 7)
    {
      v66 = (void *)v47;
      sub_1C3F8AB70(v60, v116, type metadata accessor for Proto_Reference);
      goto LABEL_20;
    }
    swift_retain();
    sub_1C3F8B048(v60, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v77 = *(int *)(v123 + 20);
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  v66 = (void *)v47;
  *(void *)(v64 + v77) = qword_1EBBBC808;
LABEL_20:
  swift_retain();
  sub_1C3F8B048(v58, type metadata accessor for Proto_Value);
  uint64_t v78 = *(void *)(v64 + *(int *)(v123 + 20))
      + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  uint64_t v79 = v117;
  sub_1C3F970C4(v78, v117, &qword_1EBBC0560);
  v80 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
  LODWORD(v78) = v80(v79, 1, v121);
  sub_1C3F962E0(v79, &qword_1EBBC0560);
  sub_1C3F8B048(v64, type metadata accessor for Proto_Reference);
  if (v78 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v81 = 0xD00000000000001DLL;
    *(void *)(v81 + 8) = 0x80000001C44B1150;
    *(unsigned char *)(v81 + 16) = 0;
    swift_willThrow();
    swift_release_n();
    v55 = v66;
    goto LABEL_22;
  }
  uint64_t v82 = v103 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  uint64_t v83 = v82;
  uint64_t v84 = v112;
  sub_1C3F970C4(v83, v112, &qword_1EBBC0540);
  uint64_t v85 = v124;
  if (v128((char *)v84, 1, v124) != 1)
  {
    v86 = v66;
    uint64_t v87 = v84;
    uint64_t v88 = v113;
    sub_1C3F8AB70(v87, v113, type metadata accessor for Proto_Value);
    uint64_t v89 = *(void *)(v88 + *(int *)(v85 + 20))
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    uint64_t v90 = v89;
    uint64_t v91 = v111;
    sub_1C3F970C4(v90, v111, &qword_1EBBBF8A0);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v119)(v91, 1, v61) == 1)
    {
      sub_1C3F962E0(v91, &qword_1EBBBF8A0);
      v92 = v110;
      uint64_t v93 = v121;
      uint64_t v94 = (uint64_t)v109;
      uint64_t v95 = v108;
    }
    else
    {
      BOOL v96 = swift_getEnumCaseMultiPayload() == 7;
      uint64_t v97 = v91;
      v92 = v110;
      uint64_t v93 = v121;
      uint64_t v94 = (uint64_t)v109;
      uint64_t v95 = v108;
      if (v96)
      {
        sub_1C3F8AB70(v97, v108, type metadata accessor for Proto_Reference);
LABEL_32:
        sub_1C3F8B048(v113, type metadata accessor for Proto_Value);
        uint64_t v99 = *(void *)(v95 + *(int *)(v123 + 20))
            + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
        swift_beginAccess();
        sub_1C3F970C4(v99, v94, &qword_1EBBC0560);
        if (v80(v94, 1, v93) == 1)
        {
          void *v92 = MEMORY[0x1E4FBC860];
          v92[1] = sub_1C4496868();
          v92[2] = v100;
          sub_1C4496888();
          sub_1C3F962E0(v94, &qword_1EBBC0560);
        }
        else
        {
          sub_1C3F8AB70(v94, (uint64_t)v92, type metadata accessor for Proto_KeyPath);
        }
        a2 = v104;
        uint64_t v101 = v120;
        sub_1C3F8B048(v95, type metadata accessor for Proto_Reference);
        sub_1C3F766DC((uint64_t)v92, v125);
        if (v101)
        {

          swift_release();
          return;
        }

        swift_release();
        uint64_t v75 = v125[0];
        uint64_t v76 = v125[1];
        goto LABEL_38;
      }
      sub_1C3F8B048(v97, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    }
    sub_1C4496888();
    uint64_t v98 = *(int *)(v123 + 20);
    if (qword_1EBBBC818 != -1) {
      swift_once();
    }
    *(void *)(v95 + v98) = qword_1EBBBC808;
    swift_retain();
    goto LABEL_32;
  }
LABEL_40:
  __break(1u);
}

uint64_t CRKeyPath.encode(to:)()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  uint64_t result = sub_1C3F6DD10();
  if (!v1)
  {
    swift_beginAccess();
    swift_retain();
    sub_1C3F7E324(v2, v3);
    sub_1C43EFB20(v2, v3);
    return swift_release();
  }
  return result;
}

void CRKeyPath.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t CRKeyPath.hashValue.getter()
{
  return sub_1C4498628();
}

uint64_t sub_1C3FF5AF0()
{
  return sub_1C4498628();
}

uint64_t sub_1C3FF5B3C()
{
  return sub_1C4496568();
}

uint64_t sub_1C3FF5B44()
{
  return sub_1C4498628();
}

uint64_t sub_1C3FF5B8C()
{
  return 10278;
}

uint64_t sub_1C3FF5BF4(uint64_t a1, uint64_t a2)
{
  return sub_1C3FAD630(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

void sub_1C3FF5C08(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_1C3FF5C20()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  uint64_t result = sub_1C3F6DD10();
  if (!v1)
  {
    swift_beginAccess();
    swift_retain();
    sub_1C3F7E324(v2, v3);
    sub_1C43EFB20(v2, v3);
    return swift_release();
  }
  return result;
}

BOOL sub_1C3FF5CC4(long long *a1, long long *a2)
{
  long long v2 = *a1;
  long long v4 = *a2;
  long long v5 = v2;
  return (_s9Coherence9CRKeyPathV1loiySbAC_ACtFZ_0((uint64_t *)&v4, (uint64_t)&v5) & 1) == 0;
}

BOOL sub_1C3FF5D00(long long *a1, long long *a2)
{
  long long v2 = *a1;
  long long v4 = *a2;
  long long v5 = v2;
  return (_s9Coherence9CRKeyPathV1loiySbAC_ACtFZ_0((uint64_t *)&v5, (uint64_t)&v4) & 1) == 0;
}

uint64_t sub_1C3FF5D3C(long long *a1, long long *a2)
{
  long long v2 = *a1;
  long long v4 = *a2;
  long long v5 = v2;
  return _s9Coherence9CRKeyPathV1loiySbAC_ACtFZ_0((uint64_t *)&v4, (uint64_t)&v5) & 1;
}

uint64_t sub_1C3FF5D74@<X0>(void *__s1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, unsigned char *a7@<X8>)
{
  __s2[2] = *MEMORY[0x1E4F143B8];
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v27 = (a3 >> 32) - (int)a3;
      if (a3 >> 32 < (int)a3)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
      }
      else
      {
        sub_1C3F7E324(a3, a4);
        uint64_t v28 = sub_1C4496298();
        if (!v28) {
          goto LABEL_21;
        }
        uint64_t v29 = sub_1C44962C8();
        if (!__OFSUB__((int)a3, v29))
        {
          v28 += (int)a3 - v29;
LABEL_21:
          uint64_t v30 = sub_1C44962B8();
          if (v30 >= v27) {
            uint64_t v31 = (a3 >> 32) - (int)a3;
          }
          else {
            uint64_t v31 = v30;
          }
          uint64_t v32 = v28 + v31;
          if (v28) {
            uint64_t v33 = v32;
          }
          else {
            uint64_t v33 = 0;
          }
          sub_1C3FF605C(v28, __s1, v33, a2, a5, a6, a3, a4, (BOOL *)__s2);
          if (!v7)
          {
            uint64_t result = sub_1C3F7E2CC(a3, a4);
            goto LABEL_29;
          }
LABEL_36:
          sub_1C3F7E2CC(a3, a4);
          __break(1u);
          JUMPOUT(0x1C3FF604CLL);
        }
      }
      __break(1u);
      return result;
    case 2uLL:
      uint64_t v15 = *(void *)(a3 + 16);
      uint64_t v16 = *(void *)(a3 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = sub_1C4496298();
      if (!v17) {
        goto LABEL_6;
      }
      uint64_t v18 = sub_1C44962C8();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_33;
      }
      v17 += v15 - v18;
LABEL_6:
      BOOL v19 = __OFSUB__(v16, v15);
      uint64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_32;
      }
      uint64_t v21 = sub_1C44962B8();
      if (v21 >= v20) {
        uint64_t v22 = v20;
      }
      else {
        uint64_t v22 = v21;
      }
      uint64_t v23 = v17 + v22;
      if (v17) {
        uint64_t v24 = v23;
      }
      else {
        uint64_t v24 = 0;
      }
      sub_1C3FF605C(v17, __s1, v24, a2, a5, a6, a3, a4, (BOOL *)__s2);
      if (v7)
      {
        swift_release();
        swift_release();
        __break(1u);
        goto LABEL_36;
      }
      swift_release();
      uint64_t result = swift_release();
LABEL_29:
      char v26 = __s2[0];
LABEL_30:
      *a7 = v26;
      return result;
    case 3uLL:
      memset(__s2, 0, 14);
      uint64_t v14 = (char *)__s2;
      goto LABEL_16;
    default:
      __s2[0] = a3;
      LOWORD(__s2[1]) = a4;
      BYTE2(__s2[1]) = BYTE2(a4);
      BYTE3(__s2[1]) = BYTE3(a4);
      BYTE4(__s2[1]) = BYTE4(a4);
      BYTE5(__s2[1]) = BYTE5(a4);
      uint64_t v14 = (char *)__s2 + BYTE6(a4);
LABEL_16:
      uint64_t result = sub_1C3FF605C((uint64_t)__s2, __s1, (uint64_t)v14, a2, a5, a6, a3, a4, (BOOL *)&v37);
      char v26 = v37;
      goto LABEL_30;
  }
}

uint64_t sub_1C3FF605C@<X0>(uint64_t __s2@<X0>, void *__s1@<X2>, uint64_t a3@<X1>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, BOOL *a9@<X8>)
{
  BOOL v10 = 0;
  if (__s1 && __s2)
  {
    size_t v15 = a4 - (void)__s1;
    if (a3 - __s2 < a4 - (uint64_t)__s1) {
      size_t v15 = a3 - __s2;
    }
    __s2 = memcmp(__s1, (const void *)__s2, v15);
    if ((__s2 & 0x80000000) != 0)
    {
      BOOL v10 = 1;
    }
    else if (__s2)
    {
      BOOL v10 = 0;
    }
    else
    {
      uint64_t v16 = 0;
      switch(a6 >> 62)
      {
        case 1uLL:
          LODWORD(v16) = HIDWORD(a5) - a5;
          if (__OFSUB__(HIDWORD(a5), a5))
          {
            __break(1u);
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
            JUMPOUT(0x1C3FF61A8);
          }
          uint64_t v16 = (int)v16;
LABEL_14:
          uint64_t v20 = 0;
          switch(a8 >> 62)
          {
            case 1uLL:
              LODWORD(v20) = HIDWORD(a7) - a7;
              if (__OFSUB__(HIDWORD(a7), a7)) {
                goto LABEL_23;
              }
              uint64_t v20 = (int)v20;
LABEL_19:
              BOOL v10 = v16 < v20;
              break;
            case 2uLL:
              uint64_t v22 = *(void *)(a7 + 16);
              uint64_t v21 = *(void *)(a7 + 24);
              BOOL v19 = __OFSUB__(v21, v22);
              uint64_t v20 = v21 - v22;
              if (!v19) {
                goto LABEL_19;
              }
              goto LABEL_24;
            case 3uLL:
              goto LABEL_19;
            default:
              uint64_t v20 = BYTE6(a8);
              goto LABEL_19;
          }
          break;
        case 2uLL:
          uint64_t v18 = *(void *)(a5 + 16);
          uint64_t v17 = *(void *)(a5 + 24);
          BOOL v19 = __OFSUB__(v17, v18);
          uint64_t v16 = v17 - v18;
          if (!v19) {
            goto LABEL_14;
          }
          goto LABEL_22;
        case 3uLL:
          goto LABEL_14;
        default:
          uint64_t v16 = BYTE6(a6);
          goto LABEL_14;
      }
    }
  }
  *a9 = v10;
  return __s2;
}

uint64_t CRKeyPath.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C4498668();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1C3FF678C();
    sub_1C4498318();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v6;
    a2[1] = v7;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t CRKeyPath.encode(to:)(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C4498698();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1C3FF6830();
  sub_1C4498348();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1C3FF6348@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CRKeyPath.init(from:)(a1, a2);
}

uint64_t sub_1C3FF6360(void *a1)
{
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C4498698();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1C3FF6830();
  sub_1C4498348();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1C3FF6408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = sub_1C4496298();
  if (v10)
  {
    uint64_t v11 = sub_1C44962C8();
    if (__OFSUB__(a1, v11))
    {
LABEL_9:
      __break(1u);
      JUMPOUT(0x1C3FF64C0);
    }
    v10 += a1 - v11;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C44962B8();
  sub_1C3FAD970(v10, a4, a5, &v14);
  if (!v5) {
    char v12 = v14;
  }
  return v12 & 1;
}

uint64_t _s9Coherence9CRKeyPathV1loiySbAC_ACtFZ_0(uint64_t *a1, uint64_t a2)
{
  __s1[3] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v5 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  switch(v3 >> 62)
  {
    case 1uLL:
      if (v2 >> 32 < (int)v2) {
        __break(1u);
      }
      sub_1C3F7E324(*(void *)a2, *(void *)(a2 + 8));
      sub_1C3F7E324(v2, v3);
      char v9 = sub_1C412C7BC((int)v2, v2 >> 32, v3 & 0x3FFFFFFFFFFFFFFFLL, v5, v4, v2, v3);
      goto LABEL_8;
    case 2uLL:
      uint64_t v7 = *(void *)(v2 + 16);
      uint64_t v8 = *(void *)(v2 + 24);
      sub_1C3F7E324(*(void *)a2, *(void *)(a2 + 8));
      sub_1C3F7E324(v2, v3);
      swift_retain();
      swift_retain();
      char v9 = sub_1C412C7BC(v7, v8, v3 & 0x3FFFFFFFFFFFFFFFLL, v5, v4, v2, v3);
      swift_release();
      swift_release();
LABEL_8:
      sub_1C3F7E2CC(v5, v4);
      sub_1C3F7E2CC(v2, v3);
      return v9 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      sub_1C3F7E324(v5, v4);
      uint64_t v6 = (char *)__s1;
      goto LABEL_5;
    default:
      __s1[0] = *a1;
      LOWORD(__s1[1]) = v3;
      BYTE2(__s1[1]) = BYTE2(v3);
      BYTE3(__s1[1]) = BYTE3(v3);
      BYTE4(__s1[1]) = BYTE4(v3);
      BYTE5(__s1[1]) = BYTE5(v3);
      sub_1C3F7E324(v5, v4);
      uint64_t v6 = (char *)__s1 + BYTE6(v3);
LABEL_5:
      sub_1C3FF5D74(__s1, (uint64_t)v6, v5, v4, v2, v3, &v11);
      sub_1C3F7E2CC(v5, v4);
      sub_1C3F7E2CC(v2, v3);
      char v9 = v11;
      return v9 & 1;
  }
}

unint64_t sub_1C3FF678C()
{
  unint64_t result = qword_1EA39BFF8;
  if (!qword_1EA39BFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39BFF8);
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_1C3FF6830()
{
  unint64_t result = qword_1EA39C000[0];
  if (!qword_1EA39C000[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA39C000);
  }
  return result;
}

unint64_t sub_1C3FF6888()
{
  unint64_t result = qword_1EBBBF128;
  if (!qword_1EBBBF128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBBF128);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CRKeyPath(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1C3F7E324(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t *assignWithCopy for CRKeyPath(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_1C3F7E324(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1C3F7E2CC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for CRKeyPath(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1C3F7E2CC(v3, v4);
  return a1;
}

uint64_t sub_1C3FF69A8(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *))(v2 + 16))((char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1C44974D8();
}

uint64_t sub_1C3FF6A68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[1] = *v2;
  swift_getWitnessTable();
  uint64_t result = sub_1C44978A8();
  if ((v9 & 1) == 0)
  {
    sub_1C44974F8();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return result;
}

id sub_1C3FF6B94(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v3[1];
  uint64_t v23 = *v3;
  uint64_t v24 = v5;
  uint64_t v6 = a3[3];
  uint64_t v13 = a3[2];
  uint64_t v14 = v6;
  uint64_t v15 = a3[4];
  uint64_t v16 = a1;
  uint64_t v7 = type metadata accessor for TreeNode();
  swift_retain();
  swift_retain();
  uint64_t v17 = v13;
  uint64_t v18 = v7;
  uint64_t v19 = v6;
  uint64_t v20 = v15;
  uint64_t v21 = &off_1F1F9D5B8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v8 = type metadata accessor for CROrderedDictionary();
  uint64_t v9 = CROrderedDictionary.index(where:)((uint64_t (*)(char *, char *))sub_1C3FFA6D8, (uint64_t)&v12, v8);
  LOBYTE(v5) = v10;
  swift_release();
  id result = (id)swift_release();
  if ((v5 & 1) == 0) {
    return sub_1C4215210(a2, v9, v8);
  }
  return result;
}

uint64_t sub_1C3FF6CB4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  MEMORY[0x1F4188790](a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v5, v2);
  sub_1C4497528();
  return sub_1C44974D8();
}

uint64_t CROrderedTree.moveOrInsert(_:inParent:at:)(void (*a1)(void, void, void), char *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3FF6D94(a1, a2, a3, 1, a4);
}

uint64_t sub_1C3FF6D94(void (*a1)(void, void, void), char *a2, uint64_t a3, int a4, uint64_t a5)
{
  int v122 = a4;
  uint64_t v146 = a3;
  v143 = a1;
  uint64_t v6 = *(void *)(a5 + 16);
  uint64_t v130 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  v129 = (char *)v121 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v124 = (char *)v121 - v10;
  MEMORY[0x1F4188790](v9);
  v125 = (char *)v121 - v11;
  uint64_t v13 = v12[3];
  uint64_t v14 = v12[4];
  v139 = v12;
  uint64_t v144 = type metadata accessor for TreeNode();
  uint64_t v135 = *(void *)(v144 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v144);
  v128 = (char *)v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v123 = (char *)v121 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v131 = (char *)v121 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v127 = (char *)v121 - v22;
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)v121 - v23;
  uint64_t v145 = v6;
  uint64_t v25 = sub_1C4497B38();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)v121 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v32 = (char *)v121 - v31;
  MEMORY[0x1F4188790](v30);
  v34 = (char *)v121 - v33;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
  v141 = a2;
  v36 = a2;
  uint64_t v38 = v37;
  v35((char *)v121 - v33, v36, v37);
  v35(v32, v34, v38);
  if (v146 < 0)
  {
    uint64_t v120 = *(void (**)(char *, uint64_t))(v26 + 8);
    v120(v32, v38);
    v120(v34, v38);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v142 = v26 + 16;
  v35(v29, v32, v38);
  v132 = v29;
  uint64_t v140 = v13;
  uint64_t v134 = v14;
  sub_1C444E42C((uint64_t)v29, v145, v24);
  uint64_t v39 = *(void *)(v147 + 16);
  uint64_t v40 = sub_1C4497528();
  uint64_t v41 = v144;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v133 = v40;
  MEMORY[0x1C877FC90](&v150, v24, v39, v41, v40, WitnessTable);
  uint64_t v43 = v135 + 8;
  v138 = *(void (**)(char *, uint64_t))(v135 + 8);
  v138(v24, v41);
  uint64_t v44 = v35;
  uint64_t v137 = v38;
  if (v150)
  {
    uint64_t v45 = v145;
    uint64_t v46 = MEMORY[0x1C8780110](v150, v145);
    swift_bridgeObjectRelease();
    uint64_t v47 = *(void (**)(char *, uint64_t))(v26 + 8);
    v47(v32, v38);
    v47(v34, v38);
  }
  else
  {
    uint64_t v48 = *(void (**)(char *, uint64_t))(v26 + 8);
    v48(v32, v38);
    v48(v34, v38);
    swift_bridgeObjectRelease();
    uint64_t v46 = 0;
    uint64_t v45 = v145;
  }
  uint64_t v49 = (void *)v147;
  uint64_t v50 = v143;
  v51 = v141;
  if (v46 < v146) {
    goto LABEL_36;
  }
  v136 = v44;
  uint64_t v52 = *(void *)(v147 + 24);
  uint64_t v150 = *(void *)v147;
  long long v151 = *(_OWORD *)(v147 + 8);
  uint64_t v152 = v52;
  unsigned int v53 = v139;
  uint64_t result = sub_1C439194C(v143, v141, v139);
  if ((result & 1) == 0) {
    return result;
  }
  sub_1C4392004((uint64_t)v50, v53);
  uint64_t v55 = (uint64_t)v132;
  v136(v132, v51, v137);
  uint64_t v56 = v45;
  v57 = v127;
  sub_1C444E42C(v55, v56, v127);
  uint64_t v58 = v49[2];
  uint64_t v59 = v144;
  uint64_t v126 = swift_getWitnessTable();
  MEMORY[0x1C877FC90](&v150, v57, v58, v59, v133);
  v138(v57, v59);
  v121[1] = v43;
  if (!v150)
  {
LABEL_15:
    uint64_t v76 = (uint64_t)v132;
    v136(v132, v51, v137);
    uint64_t v77 = v131;
    uint64_t v78 = v140;
    uint64_t v79 = v134;
    sub_1C444E42C(v76, v56, v131);
    uint64_t v80 = v144;
    uint64_t v81 = swift_getWitnessTable();
    uint64_t v150 = v56;
    *(void *)&long long v151 = v80;
    *((void *)&v151 + 1) = v78;
    uint64_t v152 = v79;
    v153 = &off_1F1F9D5B8;
    uint64_t v154 = v81;
    uint64_t v82 = type metadata accessor for CROrderedDictionary();
    CROrderedDictionary.append(value:forKey:)((uint64_t)v77, (uint64_t)v50, v82);
    v138(v77, v80);
    v136((char *)v76, v141, v137);
    uint64_t v83 = v80;
    uint64_t v84 = v128;
    sub_1C444E42C(v76, v56, v128);
    uint64_t v85 = (void *)swift_allocObject();
    v85[2] = v56;
    v85[3] = v78;
    v85[4] = v79;
    (*(void (**)(char *, void, uint64_t))(v130 + 16))(v129, v50, v56);
    v86 = (void *)swift_allocObject();
    v86[2] = v56;
    v86[3] = v78;
    v86[4] = v79;
    v86[5] = sub_1C3FFA78C;
    v86[6] = v85;
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v150 = v49[2];
    uint64_t v87 = v150;
    v49[2] = 0x8000000000000000;
    sub_1C3F88430((uint64_t)v84, v83, v126);
    if (!__OFADD__(*(void *)(v87 + 16), (v88 & 1) == 0))
    {
      char v89 = v88;
      sub_1C4497EF8();
      char v90 = sub_1C4497EC8();
      uint64_t v91 = v147;
      v92 = v128;
      if ((v90 & 1) == 0 || (sub_1C3F88430((uint64_t)v128, v83, v126), (v89 & 1) == (v93 & 1)))
      {
        *(void *)(v91 + 16) = v150;
        swift_bridgeObjectRelease();
        if (v89)
        {
          swift_bridgeObjectRetain();
        }
        else
        {
          uint64_t v94 = swift_bridgeObjectRetain();
          uint64_t v150 = ((uint64_t (*)(uint64_t))v86[5])(v94);
          (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v131, v92, v83);
          sub_1C4497EE8();
        }
        swift_bridgeObjectRelease();
        sub_1C44974D8();
        v138(v92, v83);
        uint64_t v95 = 0;
        BOOL v96 = 0;
        uint64_t v97 = sub_1C3FFA71C;
        uint64_t v98 = sub_1C3FFA78C;
        goto LABEL_33;
      }
LABEL_40:
      uint64_t result = sub_1C4498558();
      __break(1u);
      return result;
    }
    goto LABEL_37;
  }
  uint64_t v60 = MEMORY[0x1C8780110](v150, v56);
  uint64_t v61 = v56;
  if (v60 <= 0)
  {
LABEL_14:
    uint64_t v56 = v61;
    swift_bridgeObjectRelease();
    uint64_t v50 = v143;
    goto LABEL_15;
  }
  uint64_t v62 = v60;
  uint64_t v63 = v146;
  uint64_t v64 = v125;
  sub_1C4497568();
  v129 = (char *)v121;
  uint64_t v65 = v49[1];
  v148 = (void *)*v49;
  uint64_t v149 = v65;
  MEMORY[0x1F4188790](v148);
  uint64_t v66 = v140;
  v121[-4] = v61;
  v121[-3] = v66;
  uint64_t v67 = v134;
  v121[-2] = v134;
  v121[-1] = v64;
  swift_retain();
  swift_retain();
  uint64_t v68 = v144;
  uint64_t v69 = swift_getWitnessTable();
  uint64_t v150 = v61;
  *(void *)&long long v151 = v68;
  *((void *)&v151 + 1) = v66;
  uint64_t v152 = v67;
  v153 = &off_1F1F9D5B8;
  uint64_t v154 = v69;
  v128 = (char *)type metadata accessor for CROrderedDictionary();
  uint64_t v70 = CROrderedDictionary.index(where:)((uint64_t (*)(char *, char *))sub_1C3FFA76C, (uint64_t)&v121[-6], (uint64_t)v128);
  char v72 = v71;
  uint64_t v49 = v148;
  swift_release();
  swift_release();
  if (v72)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  swift_bridgeObjectRelease();
  uint64_t v73 = v147;
  uint64_t v61 = v134;
  if (v62 != v63)
  {
    uint64_t v75 = v131;
    v51 = v132;
    goto LABEL_23;
  }
  BOOL v74 = __OFADD__(v70++, 1);
  uint64_t v75 = v131;
  v51 = v132;
  if (v74)
  {
    __break(1u);
    goto LABEL_14;
  }
LABEL_23:
  uint64_t v99 = v136;
  uint64_t v100 = v137;
  if (v122)
  {
    v136(v51, v141, v137);
    uint64_t v101 = v145;
    uint64_t v102 = v140;
    sub_1C444E42C((uint64_t)v51, v145, v75);
    CROrderedDictionary.moveOrInsert(value:forKey:to:)((uint64_t)v75, (uint64_t)v143, v70, v128);
  }
  else
  {
    v136(v51, v141, v137);
    uint64_t v101 = v145;
    uint64_t v102 = v140;
    sub_1C444E42C((uint64_t)v51, v145, v75);
    CROrderedDictionary.insert(value:forKey:at:)((uint64_t)v75, (uint64_t)v143, v70, (uint64_t)v128);
  }
  uint64_t v103 = v144;
  v138(v75, v144);
  v99(v51, v141, v100);
  uint64_t v104 = v103;
  v105 = v123;
  sub_1C444E42C((uint64_t)v51, v101, v123);
  uint64_t v106 = (void *)swift_allocObject();
  v106[2] = v101;
  v106[3] = v102;
  v106[4] = v61;
  (*(void (**)(char *, void, uint64_t))(v130 + 16))(v124, v143, v101);
  uint64_t v107 = (void *)swift_allocObject();
  uint64_t v108 = v102;
  v109 = v107;
  v107[2] = v101;
  v107[3] = v108;
  v107[4] = v61;
  v107[5] = sub_1C3FFA78C;
  v107[6] = v106;
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v110 = v73;
  uint64_t v111 = *(void *)(v73 + 16);
  uint64_t v150 = v111;
  *(void *)(v110 + 16) = 0x8000000000000000;
  sub_1C3F88430((uint64_t)v105, v104, v126);
  if (__OFADD__(*(void *)(v111 + 16), (v112 & 1) == 0)) {
    goto LABEL_38;
  }
  char v113 = v112;
  sub_1C4497EF8();
  char v114 = sub_1C4497EC8();
  uint64_t v115 = v147;
  uint64_t v116 = v123;
  uint64_t v117 = v145;
  if (v114)
  {
    sub_1C3F88430((uint64_t)v123, v104, v126);
    if ((v113 & 1) != (v118 & 1)) {
      goto LABEL_40;
    }
  }
  *(void *)(v115 + 16) = v150;
  swift_bridgeObjectRelease();
  if (v113)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v119 = swift_bridgeObjectRetain();
    uint64_t v150 = ((uint64_t (*)(uint64_t))v109[5])(v119);
    (*(void (**)(char *, char *, uint64_t))(v135 + 16))(v131, v116, v104);
    sub_1C4497EE8();
  }
  swift_bridgeObjectRelease();
  sub_1C44974E8();
  v138(v116, v104);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v125, v117);
  uint64_t v98 = 0;
  uint64_t v97 = 0;
  BOOL v96 = sub_1C3FFA788;
  uint64_t v95 = sub_1C3FFA78C;
LABEL_33:
  sub_1C4392574((unint64_t)v143, v139);
  sub_1C3F7E5BC((uint64_t)v95);
  sub_1C3F7E5BC((uint64_t)v96);
  sub_1C3F7E5BC((uint64_t)v98);
  return sub_1C3F7E5BC((uint64_t)v97);
}

uint64_t CROrderedTree.insert(_:inParent:at:)(void (*a1)(void, void, void), char *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3FF6D94(a1, a2, a3, 0, a4);
}

uint64_t sub_1C3FF7C58@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t CROrderedTree.append(_:inParent:)(void (*a1)(void, void, void), char *a2, void *a3)
{
  uint64_t v4 = (void *)v3;
  uint64_t v8 = a3[2];
  uint64_t v9 = (void *)a3[4];
  uint64_t v114 = a3[3];
  uint64_t v115 = v9;
  uint64_t v10 = type metadata accessor for TreeNode();
  uint64_t v119 = *(void *)(v10 - 8);
  uint64_t v120 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  char v118 = (char *)v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  char v113 = (char *)v93 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v107 = (char *)v93 - v15;
  uint64_t v16 = sub_1C4497B38();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  char v112 = (char *)v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v108 = (char *)v93 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)v93 - v23;
  uint64_t v25 = *(void **)(v8 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v22);
  uint64_t v117 = (char *)v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  v105 = (char *)v93 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v111 = (char *)v93 - v30;
  uint64_t v31 = *(void **)(v3 + 24);
  uint64_t v123 = *(void *)v3;
  long long v124 = *(_OWORD *)(v3 + 8);
  v125 = v31;
  uint64_t result = sub_1C439194C(a1, a2, a3);
  if ((result & 1) == 0) {
    return result;
  }
  unint64_t v116 = (unint64_t)a1;
  uint64_t v102 = a3;
  sub_1C4392004((uint64_t)a1, a3);
  uint64_t v103 = v17;
  uint64_t v33 = v17 + 16;
  v34 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v109 = a2;
  v34(v24, a2, v16);
  uint64_t v35 = (uint64_t (*)(char *, uint64_t, uint64_t))v25[6];
  int v36 = v35(v24, 1, v8);
  uint64_t v37 = v16;
  uint64_t v110 = v4;
  uint64_t v104 = v25;
  uint64_t v106 = v16;
  if (v36 == 1)
  {
    uint64_t v38 = v24;
    uint64_t v39 = v114;
    uint64_t v40 = v115;
    uint64_t v41 = (uint64_t)v112;
    uint64_t v42 = v103;
LABEL_11:
    uint64_t v73 = v38;
    uint64_t v74 = v37;
    (*(void (**)(char *, uint64_t))(v42 + 8))(v73, v37);
    v34((char *)v41, v109, v74);
    uint64_t v75 = v113;
    sub_1C444E42C(v41, v8, v113);
    uint64_t v71 = v120;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v123 = v8;
    *(void *)&long long v124 = v71;
    *((void *)&v124 + 1) = v39;
    v125 = v40;
    uint64_t v126 = &off_1F1F9D5B8;
    uint64_t v127 = WitnessTable;
    uint64_t v77 = (void *)type metadata accessor for CROrderedDictionary();
    uint64_t v70 = v110;
    CROrderedDictionary.moveOrAppend(value:forKey:)((uint64_t)v75, v116, v77);
    uint64_t v107 = *(char **)(v119 + 8);
    ((void (*)(char *, uint64_t))v107)(v75, v71);
    v34((char *)v41, v109, v106);
    goto LABEL_12;
  }
  uint64_t v43 = v25;
  uint64_t v98 = v35;
  uint64_t v100 = v34;
  uint64_t v101 = v33;
  uint64_t v44 = (void (*)(char *, char *, uint64_t))v25[4];
  uint64_t v45 = v111;
  uint64_t v97 = v25 + 4;
  BOOL v96 = v44;
  v44(v111, v24, v8);
  uint64_t v46 = (void (*)(char *, char *, uint64_t))v25[2];
  uint64_t v41 = (uint64_t)v112;
  uint64_t v95 = v25 + 2;
  uint64_t v94 = v46;
  v46(v112, v45, v8);
  uint64_t v48 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v25[7];
  uint64_t v47 = v25 + 7;
  uint64_t v99 = v48;
  v48((char *)v41, 0, 1, v8);
  uint64_t v49 = v107;
  sub_1C444E42C(v41, v8, v107);
  uint64_t v50 = v4[2];
  uint64_t v51 = sub_1C4497528();
  uint64_t v52 = v120;
  uint64_t v53 = swift_getWitnessTable();
  MEMORY[0x1C877FC90](&v123, v49, v50, v52, v51, v53);
  uint64_t v54 = *(char **)(v119 + 8);
  v93[2] = v119 + 8;
  ((void (*)(char *, uint64_t))v54)(v49, v52);
  if (!v123)
  {
    uint64_t v38 = v108;
    v99(v108, 1, 1, v8);
    uint64_t v42 = v103;
    goto LABEL_10;
  }
  v93[1] = v47;
  uint64_t v107 = v54;
  uint64_t v121 = v123;
  swift_getWitnessTable();
  uint64_t v55 = v108;
  sub_1C44970A8();
  swift_bridgeObjectRelease();
  int v56 = v98(v55, 1, v8);
  uint64_t v38 = v55;
  uint64_t v42 = v103;
  if (v56 == 1)
  {
LABEL_10:
    ((void (*)(char *, uint64_t))v43[1])(v111, v8);
    uint64_t v39 = v114;
    uint64_t v40 = v115;
    v34 = v100;
    uint64_t v37 = v106;
    goto LABEL_11;
  }
  v57 = v105;
  v96(v105, v38, v8);
  uint64_t v58 = v4[1];
  uint64_t v121 = *v4;
  uint64_t v122 = v58;
  MEMORY[0x1F4188790](v121);
  uint64_t v60 = v114;
  uint64_t v59 = v115;
  v93[-4] = v8;
  v93[-3] = v60;
  v93[-2] = v59;
  v93[-1] = v57;
  swift_retain();
  swift_retain();
  uint64_t v61 = v120;
  uint64_t v62 = swift_getWitnessTable();
  uint64_t v123 = v8;
  *(void *)&long long v124 = v61;
  *((void *)&v124 + 1) = v60;
  v125 = v59;
  uint64_t v126 = &off_1F1F9D5B8;
  uint64_t v127 = v62;
  uint64_t v63 = (void *)type metadata accessor for CROrderedDictionary();
  uint64_t v64 = CROrderedDictionary.index(where:)((uint64_t (*)(char *, char *))sub_1C3FFA76C, (uint64_t)&v93[-6], (uint64_t)v63);
  char v66 = v65;
  swift_release();
  swift_release();
  if (v66)
  {
LABEL_22:
    __break(1u);
LABEL_23:
    uint64_t result = sub_1C4498558();
    __break(1u);
    return result;
  }
  uint64_t v68 = v111;
  uint64_t v67 = (uint64_t)v112;
  v94(v112, v111, v8);
  v99((char *)v67, 0, 1, v8);
  uint64_t v69 = v113;
  uint64_t v39 = v60;
  sub_1C444E42C(v67, v8, v113);
  if (__OFADD__(v64, 1))
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v70 = v110;
  CROrderedDictionary.moveOrInsert(value:forKey:to:)((uint64_t)v69, v116, v64 + 1, v63);
  uint64_t v71 = v120;
  ((void (*)(char *, uint64_t))v107)(v69, v120);
  char v72 = (void (*)(char *, uint64_t))v104[1];
  v72(v68, v8);
  v72(v57, v8);
  uint64_t v40 = v115;
  uint64_t v41 = (uint64_t)v112;
  v100(v112, v109, v106);
LABEL_12:
  uint64_t v78 = v118;
  sub_1C444E42C(v41, v8, v118);
  uint64_t v79 = (void *)swift_allocObject();
  v79[2] = v8;
  v79[3] = v39;
  v79[4] = v40;
  ((void (*)(char *, unint64_t, uint64_t))v104[2])(v117, v116, v8);
  uint64_t v80 = (void *)swift_allocObject();
  uint64_t v81 = v40;
  uint64_t v82 = v80;
  v80[2] = v8;
  v80[3] = v39;
  v80[4] = v81;
  v80[5] = sub_1C3FFA78C;
  v80[6] = v79;
  swift_isUniquelyReferenced_nonNull_native();
  uint64_t v123 = v70[2];
  uint64_t v83 = v123;
  v70[2] = 0x8000000000000000;
  uint64_t v84 = swift_getWitnessTable();
  sub_1C3F88430((uint64_t)v78, v71, v84);
  if (__OFADD__(*(void *)(v83 + 16), (v85 & 1) == 0))
  {
    __break(1u);
    goto LABEL_21;
  }
  char v86 = v85;
  sub_1C4497528();
  sub_1C4497EF8();
  char v87 = sub_1C4497EC8();
  char v88 = v118;
  char v89 = v110;
  if (v87)
  {
    sub_1C3F88430((uint64_t)v118, v120, v84);
    if ((v86 & 1) != (v90 & 1)) {
      goto LABEL_23;
    }
  }
  uint64_t v115 = v79;
  v89[2] = v123;
  swift_bridgeObjectRelease();
  if (v86)
  {
    swift_bridgeObjectRetain();
    uint64_t v91 = v120;
  }
  else
  {
    uint64_t v92 = swift_bridgeObjectRetain();
    uint64_t v123 = ((uint64_t (*)(uint64_t))v82[5])(v92);
    uint64_t v91 = v120;
    (*(void (**)(char *, char *, uint64_t))(v119 + 16))(v113, v88, v120);
    sub_1C4497EE8();
  }
  swift_bridgeObjectRelease();
  sub_1C44974D8();
  ((void (*)(char *, uint64_t))v107)(v88, v91);
  sub_1C4392574(v116, v102);
  swift_release();
  return swift_release();
}

uint64_t sub_1C3FF87AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for TreeNode();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))((char *)&v13 - v10, a1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], a2, v7);
  LOBYTE(a4) = sub_1C4497178();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, TupleTypeMetadata2);
  return a4 & 1;
}

uint64_t sub_1C3FF8948()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3FF8958()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t CROrderedTree.init<A>(uniqueNodesAndParents:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v194 = a6;
  uint64_t v221 = a5;
  uint64_t v202 = a4;
  uint64_t v173 = a1;
  v169 = a7;
  uint64_t v9 = sub_1C4497B38();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v222 = *(char **)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  v176 = (char *)&v165 - v10;
  uint64_t v224 = type metadata accessor for TreeNode();
  v217 = *(char **)(v224 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v224);
  v211 = (char *)&v165 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v199 = (char *)&v165 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v180 = (char *)&v165 - v16;
  uint64_t v17 = *(void *)(a2 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  v210 = (char *)&v165 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v166 = (char *)&v165 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v178 = (char *)&v165 - v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  v182 = (char *)&v165 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v165 - v26;
  uint64_t v28 = swift_getTupleTypeMetadata2();
  uint64_t v29 = sub_1C4497B38();
  uint64_t v30 = MEMORY[0x1F4188790](v29 - 8);
  v190 = (char *)&v165 - v31;
  uint64_t v172 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v33 = (char *)&v165 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = v34;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v168 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v36 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v38 = (char *)&v165 - v37;
  uint64_t v171 = *(void *)(v9 - 8);
  uint64_t v39 = MEMORY[0x1F4188790](v36);
  v170 = (char *)&v165 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  v175 = (char *)&v165 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  v219 = (char *)&v165 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  v181 = (char *)&v165 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  v188 = (char *)&v165 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  uint64_t v51 = (char *)&v165 - v50;
  MEMORY[0x1F4188790](v49);
  uint64_t v53 = (char *)&v165 - v52;
  CROrderedTree.init()(&v227);
  uint64_t v232 = v227;
  long long v233 = v228;
  uint64_t v234 = v229;
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  v197 = v53;
  uint64_t v201 = v17 + 56;
  v203 = v54;
  v54(v53, 1, 1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v172 + 16))(v33, v173, v35);
  sub_1C44972B8();
  uint64_t v193 = v35;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  int v56 = v190;
  v189 = v38;
  uint64_t v187 = AssociatedConformanceWitness;
  sub_1C4497B58();
  v57 = v56;
  uint64_t v58 = *(void *)(v28 - 8);
  v186 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48);
  uint64_t v185 = v58 + 48;
  int v59 = v186(v56, 1, v28);
  uint64_t v60 = 0;
  uint64_t v61 = 0;
  if (v59 == 1)
  {
LABEL_2:
    uint64_t v62 = (uint64_t)v60;
    (*(void (**)(char *, uint64_t))(v168 + 8))(v189, AssociatedTypeWitness);
    uint64_t v63 = (void *)type metadata accessor for CROrderedTree();
    sub_1C4393014(1, v63);
    (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v173, v193);
    (*(void (**)(char *, uint64_t))(v171 + 8))(v197, v9);
    uint64_t v64 = v232;
    uint64_t v65 = v234;
    sub_1C3F7E5BC(v62);
    uint64_t result = sub_1C3F7E5BC((uint64_t)v61);
    uint64_t v67 = v169;
    uint64_t *v169 = v64;
    *(_OWORD *)(v67 + 1) = v233;
    v67[3] = v65;
    return result;
  }
  v191 = 0;
  uint64_t v68 = 0;
  uint64_t v61 = 0;
  uint64_t v69 = 0;
  uint64_t v60 = 0;
  uint64_t v174 = 0;
  uint64_t v71 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  uint64_t v70 = v17 + 32;
  v196 = v71;
  v184 = (void (**)(char *, char *, uint64_t))(v171 + 32);
  v223 = (char **)(v171 + 16);
  v198 = (uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 16);
  v214 = (void (**)(char *, char *, uint64_t))(v70 - 16);
  v218 = (void (**)(char *, uint64_t))(v217 + 8);
  v200 = (void (**)(char *, uint64_t))(v70 - 24);
  v213 = (void (**)(char *, uint64_t))(v171 + 8);
  v167 = (void (**)(char *, uint64_t))(v222 + 8);
  v179 = (void (**)(char *, char *, uint64_t))(v217 + 16);
  uint64_t v216 = a2;
  uint64_t v195 = v70;
  v217 = v51;
  uint64_t v220 = v9;
  v209 = v27;
  uint64_t v183 = v28;
  while (1)
  {
    v205 = v69;
    v206 = v68;
    v207 = v60;
    v208 = v61;
    uint64_t v77 = &v57[*(int *)(v28 + 48)];
    uint64_t v78 = v196;
    v196(v27, v57, a2);
    (*v184)(v51, v77, v9);
    uint64_t v79 = v188;
    v222 = *v223;
    ((void (*)(char *, char *, uint64_t))v222)(v188, v51, v9);
    uint64_t v80 = *v198;
    int v81 = (*v198)(v79, 1, a2);
    uint64_t v82 = v214;
    unint64_t v204 = (unint64_t)v214 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v83 = a2;
    if (v81 != 1)
    {
      char v86 = v182;
      v78(v182, v79, a2);
      char v87 = *v82;
      uint64_t v88 = (uint64_t)v219;
      v87(v219, v86, a2);
      char v89 = v203;
      v203((char *)v88, 0, 1, a2);
      char v90 = v180;
      sub_1C444E42C(v88, a2, v180);
      uint64_t v91 = *((void *)&v233 + 1);
      uint64_t v92 = sub_1C4497528();
      uint64_t v93 = v224;
      uint64_t WitnessTable = swift_getWitnessTable();
      MEMORY[0x1C877FC90](&v227, v90, v91, v93, v92, WitnessTable);
      uint64_t v95 = *v218;
      (*v218)(v90, v93);
      if (v227)
      {
        v215 = v95;
        uint64_t v225 = v227;
        swift_getWitnessTable();
        BOOL v96 = v181;
        sub_1C44970A8();
        swift_bridgeObjectRelease();
        uint64_t v83 = a2;
        if (v80(v96, 1, a2) != 1)
        {
          uint64_t v97 = v178;
          v196(v178, v96, a2);
          uint64_t v98 = v175;
          v87(v175, v97, a2);
          v203(v98, 0, 1, a2);
          uint64_t v99 = v176;
          uint64_t v100 = &v176[*(int *)(TupleTypeMetadata2 + 48)];
          uint64_t v101 = v220;
          uint64_t v102 = (void (*)(char *, char *, uint64_t))v222;
          ((void (*)(char *, char *, uint64_t))v222)(v176, v197, v220);
          v102(v100, v98, v101);
          if (v80(v99, 1, v83) == 1)
          {
            uint64_t v103 = *v213;
            (*v213)(v98, v101);
            int v104 = v80(v100, 1, v83);
            uint64_t v105 = (uint64_t)v191;
            v212 = v103;
            if (v104 == 1)
            {
              v103(v176, v101);
              uint64_t v106 = v202;
              uint64_t v107 = v199;
              uint64_t v108 = v182;
LABEL_28:
              v143 = v203;
              uint64_t v144 = v221;
LABEL_31:
              uint64_t v155 = (uint64_t)v219;
              v87(v219, v108, v83);
              v143((char *)v155, 0, 1, v83);
              sub_1C444E42C(v155, v83, v107);
              BOOL v156 = __OFADD__(v105, 1);
              uint64_t v157 = v105 + 1;
              if (v156) {
                goto LABEL_35;
              }
              uint64_t v158 = v224;
              uint64_t v159 = swift_getWitnessTable();
              uint64_t v227 = v83;
              *(void *)&long long v228 = v158;
              *((void *)&v228 + 1) = v106;
              uint64_t v229 = v144;
              v230 = &off_1F1F9D5B8;
              uint64_t v231 = v159;
              uint64_t v160 = type metadata accessor for CROrderedDictionary();
              uint64_t v161 = (uint64_t)v209;
              v191 = (char *)v157;
              CROrderedDictionary.insert(value:forKey:at:)((uint64_t)v107, (uint64_t)v209, v157, v160);
              uint64_t v120 = v216;
              v215(v107, v158);
              v162 = *v200;
              v163 = v108;
              uint64_t v117 = v161;
              (*v200)(v163, v120);
              v164 = v197;
              v212(v197, v220);
              v87(v164, (char *)v117, v120);
              v203(v164, 0, 1, v120);
              v162(v178, v120);
              goto LABEL_17;
            }
            uint64_t v108 = v182;
            uint64_t v99 = v176;
          }
          else
          {
            v136 = v170;
            v102(v170, v99, v101);
            int v137 = v80(v100, 1, v83);
            uint64_t v105 = (uint64_t)v191;
            if (v137 != 1)
            {
              v138 = v166;
              v196(v166, v100, v83);
              char v139 = sub_1C4497178();
              uint64_t v140 = *v200;
              (*v200)(v138, v216);
              v141 = v99;
              uint64_t v142 = *v213;
              (*v213)(v175, v101);
              v140(v136, v216);
              uint64_t v83 = v216;
              v212 = v142;
              v142(v141, v101);
              uint64_t v108 = v182;
              if (v139)
              {
                uint64_t v106 = v202;
                uint64_t v107 = v199;
                goto LABEL_28;
              }
LABEL_29:
              uint64_t v225 = v232;
              uint64_t v226 = v233;
              MEMORY[0x1F4188790](v232);
              uint64_t v145 = v193;
              *(&v165 - 6) = v83;
              *(&v165 - 5) = v145;
              uint64_t v146 = v83;
              uint64_t v147 = v202;
              uint64_t v148 = v221;
              *(&v165 - 4) = v202;
              *(&v165 - 3) = v148;
              uint64_t v149 = v178;
              *(&v165 - 2) = v194;
              *(&v165 - 1) = (uint64_t)v149;
              swift_retain();
              swift_retain();
              uint64_t v150 = v224;
              uint64_t v151 = swift_getWitnessTable();
              uint64_t v227 = v146;
              *(void *)&long long v228 = v150;
              *((void *)&v228 + 1) = v147;
              uint64_t v229 = v148;
              v230 = &off_1F1F9D5B8;
              uint64_t v231 = v151;
              uint64_t v152 = type metadata accessor for CROrderedDictionary();
              uint64_t v153 = v174;
              uint64_t v105 = CROrderedDictionary.index(where:)((uint64_t (*)(char *, char *))sub_1C3FFA47C, (uint64_t)(&v165 - 8), v152);
              LOBYTE(v150) = v154;
              uint64_t v174 = v153;
              swift_release();
              swift_release();
              if (v150) {
                goto LABEL_36;
              }
              uint64_t v144 = v221;
              uint64_t v106 = v202;
              uint64_t v83 = v216;
              uint64_t v107 = v199;
              v143 = v203;
              goto LABEL_31;
            }
            v212 = *v213;
            v212(v175, v101);
            (*v200)(v136, v83);
            uint64_t v108 = v182;
          }
          (*v167)(v99, TupleTypeMetadata2);
          goto LABEL_29;
        }
      }
      else
      {
        BOOL v96 = v181;
        v89(v181, 1, 1, a2);
        uint64_t v83 = a2;
      }
      (*v200)(v86, v83);
      char v85 = *v213;
      v109 = v96;
      uint64_t v84 = v220;
      (*v213)(v109, v220);
      uint64_t v51 = v217;
      goto LABEL_15;
    }
    uint64_t v84 = v9;
    char v85 = *v213;
    (*v213)(v79, v9);
LABEL_15:
    uint64_t v110 = v221;
    uint64_t v111 = (uint64_t)v219;
    ((void (*)(char *, char *, uint64_t))v222)(v219, v51, v84);
    char v112 = v199;
    uint64_t v106 = v202;
    sub_1C444E42C(v111, v83, v199);
    uint64_t v113 = v224;
    uint64_t v114 = swift_getWitnessTable();
    uint64_t v227 = v83;
    *(void *)&long long v228 = v113;
    *((void *)&v228 + 1) = v106;
    uint64_t v229 = v110;
    v230 = &off_1F1F9D5B8;
    uint64_t v231 = v114;
    uint64_t v115 = type metadata accessor for CROrderedDictionary();
    uint64_t v116 = v83;
    uint64_t v117 = (uint64_t)v209;
    CROrderedDictionary.append(value:forKey:)((uint64_t)v112, (uint64_t)v209, v115);
    v215 = *v218;
    v215(v112, v113);
    char v118 = v197;
    v85(v197, v84);
    char v87 = *v214;
    (*v214)(v118, (char *)v117, v116);
    v203(v118, 0, 1, v116);
    uint64_t v227 = v232;
    *(void *)&long long v228 = v233;
    uint64_t v119 = (char *)CROrderedDictionary.count.getter();
    if (__OFSUB__(v119, 1)) {
      goto LABEL_34;
    }
    v212 = v85;
    v191 = v119 - 1;
    uint64_t v120 = v216;
LABEL_17:
    uint64_t v121 = (uint64_t)v219;
    ((void (*)(char *, char *, uint64_t))v222)(v219, v217, v220);
    uint64_t v122 = v211;
    uint64_t v123 = v221;
    sub_1C444E42C(v121, v120, v211);
    long long v124 = (void *)swift_allocObject();
    uint64_t v125 = v193;
    v124[2] = v120;
    v124[3] = v125;
    v124[4] = v106;
    v124[5] = v123;
    uint64_t v126 = v194;
    v124[6] = v194;
    sub_1C3F7E5BC((uint64_t)v207);
    v87(v210, (char *)v117, v120);
    uint64_t v127 = (void *)swift_allocObject();
    v127[2] = v120;
    v127[3] = v125;
    v127[4] = v106;
    v127[5] = v123;
    v127[6] = v126;
    v127[7] = sub_1C3FFA430;
    v127[8] = v124;
    sub_1C3F7E5BC((uint64_t)v208);
    uint64_t v128 = *((void *)&v233 + 1);
    swift_isUniquelyReferenced_nonNull_native();
    uint64_t v227 = v128;
    *((void *)&v233 + 1) = 0x8000000000000000;
    uint64_t v129 = v224;
    uint64_t v130 = swift_getWitnessTable();
    sub_1C3F88430((uint64_t)v122, v129, v130);
    if (__OFADD__(*(void *)(v128 + 16), (v131 & 1) == 0)) {
      break;
    }
    char v132 = v131;
    sub_1C4497528();
    sub_1C4497EF8();
    char v133 = sub_1C4497EC8();
    uint64_t v134 = v211;
    if (v133)
    {
      sub_1C3F88430((uint64_t)v211, v224, v130);
      if ((v132 & 1) != (v135 & 1)) {
        goto LABEL_37;
      }
    }
    *((void *)&v233 + 1) = v227;
    swift_bridgeObjectRelease();
    if (v132)
    {
      swift_bridgeObjectRetain();
      uint64_t v73 = v224;
    }
    else
    {
      uint64_t v72 = swift_bridgeObjectRetain();
      uint64_t v227 = ((uint64_t (*)(uint64_t))v127[7])(v72);
      uint64_t v73 = v224;
      (*v179)(v199, v134, v224);
      sub_1C4497EE8();
    }
    swift_bridgeObjectRelease();
    sub_1C44974D8();
    v215(v134, v73);
    uint64_t v51 = v217;
    uint64_t v9 = v220;
    v212(v217, v220);
    uint64_t v27 = v209;
    a2 = v216;
    (*v200)(v209, v216);
    uint64_t v74 = v190;
    sub_1C4497B58();
    v57 = v74;
    uint64_t v75 = v74;
    uint64_t v28 = v183;
    int v76 = v186(v75, 1, v183);
    uint64_t v61 = sub_1C3FFA44C;
    uint64_t v60 = sub_1C3FFA430;
    uint64_t v68 = v127;
    uint64_t v69 = v124;
    if (v76 == 1) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  uint64_t result = sub_1C4498558();
  __break(1u);
  return result;
}

uint64_t sub_1C3FFA078(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for TreeNode();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))((char *)&v13 - v10, a1, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(&v11[*(int *)(TupleTypeMetadata2 + 48)], a2, v7);
  LOBYTE(a4) = sub_1C4497178();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, TupleTypeMetadata2);
  return a4 & 1;
}

uint64_t CROrderedTree.children(of:)(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = sub_1C4497B38();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = type metadata accessor for TreeNode();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v16 - v10;
  uint64_t v12 = *(void *)(v2 + 16);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v16, v4);
  sub_1C444E42C((uint64_t)v7, v3, v11);
  uint64_t v13 = sub_1C4497528();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C877FC90](&v17, v11, v12, v8, v13, WitnessTable);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t result = v17;
  if (!v17) {
    return sub_1C4497478();
  }
  return result;
}

uint64_t type metadata accessor for CROrderedTree()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C3FFA420()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C3FFA430()
{
  return sub_1C4497478();
}

uint64_t sub_1C3FFA43C()
{
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C3FFA44C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 56))();
  *a1 = result;
  return result;
}

uint64_t sub_1C3FFA47C(uint64_t a1, uint64_t a2)
{
  return sub_1C3FFA078(a1, a2, *(void *)(v2 + 56), *(void *)(v2 + 16)) & 1;
}

_UNKNOWN **sub_1C3FFA4A4()
{
  return &protocol witness table for CROrderedTree<A>.MergeableDelta;
}

uint64_t sub_1C3FFA4B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t sub_1C3FFA4B8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *sub_1C3FFA504(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *sub_1C3FFA55C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_OWORD *sub_1C3FFA5F8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C3FFA650(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C3FFA698(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C3FFA6D8(uint64_t a1, uint64_t a2)
{
  return sub_1C3FF87AC(a1, a2, *(void *)(v2 + 40), *(void *)(v2 + 16)) & 1;
}

uint64_t sub_1C3FFA6FC()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3FFA70C()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C3FFA71C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 40))();
  *a1 = result;
  return result;
}

uint64_t sub_1C3FFA74C()
{
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C3FFA75C()
{
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C3FFA76C(uint64_t a1, uint64_t a2)
{
  return sub_1C3FFA6D8(a1, a2) & 1;
}

uint64_t sub_1C3FFA790(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v36 = *(void *)(a1 + 16);
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1C401261C(0, v1, 0);
  uint64_t v2 = v38;
  uint64_t result = sub_1C4014388(a1);
  uint64_t v4 = result;
  uint64_t v6 = v36;
  uint64_t v5 = a1;
  uint64_t v8 = v7;
  uint64_t v9 = 0;
  char v11 = v10 & 1;
  uint64_t v12 = a1 + 64;
  uint64_t v13 = v7;
  uint64_t v14 = a1 + 96;
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(v5 + 32))
  {
    unint64_t v16 = (unint64_t)v4 >> 6;
    if ((*(void *)(v12 + 8 * ((unint64_t)v4 >> 6)) & (1 << v4)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(v5 + 36) != v8) {
      goto LABEL_29;
    }
    uint64_t v17 = *(void *)(*(void *)(v5 + 56) + 8 * v4);
    unint64_t v19 = *(void *)(v38 + 16);
    unint64_t v18 = *(void *)(v38 + 24);
    if (v19 >= v18 >> 1)
    {
      uint64_t v34 = v13;
      uint64_t v35 = v12;
      uint64_t v33 = v14;
      char v32 = v11;
      uint64_t result = sub_1C401261C(v18 > 1, v19 + 1, 1);
      char v11 = v32;
      uint64_t v14 = v33;
      uint64_t v13 = v34;
      uint64_t v12 = v35;
      uint64_t v6 = v36;
      uint64_t v5 = a1;
    }
    *(void *)(v38 + 16) = v19 + 1;
    *(void *)(v38 + 8 * v19 + 32) = v17;
    int64_t v15 = 1 << *(unsigned char *)(v5 + 32);
    if (v4 >= v15) {
      goto LABEL_30;
    }
    uint64_t v20 = *(void *)(v12 + 8 * v16);
    if ((v20 & (1 << v4)) == 0) {
      goto LABEL_31;
    }
    if (*(_DWORD *)(v5 + 36) != v8) {
      goto LABEL_32;
    }
    unint64_t v21 = v20 & (-2 << (v4 & 0x3F));
    if (v21)
    {
      int64_t v15 = __clz(__rbit64(v21)) | v4 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v22 = v16 + 1;
      unint64_t v23 = (unint64_t)(v15 + 63) >> 6;
      if (v16 + 1 < v23)
      {
        unint64_t v24 = *(void *)(v12 + 8 * v22);
        if (!v24)
        {
          unint64_t v22 = v16 + 2;
          if (v16 + 2 >= v23) {
            goto LABEL_4;
          }
          unint64_t v24 = *(void *)(v12 + 8 * v22);
          if (!v24)
          {
            unint64_t v22 = v16 + 3;
            if (v16 + 3 >= v23) {
              goto LABEL_4;
            }
            unint64_t v24 = *(void *)(v12 + 8 * v22);
            if (!v24)
            {
              while (v23 - 4 != v16)
              {
                unint64_t v24 = *(void *)(v14 + 8 * v16++);
                if (v24)
                {
                  uint64_t v25 = v4;
                  uint64_t v26 = v12;
                  uint64_t v27 = v13;
                  uint64_t v28 = v14;
                  uint64_t result = sub_1C3F882B0(v25, v8, v11 & 1);
                  uint64_t v14 = v28;
                  uint64_t v13 = v27;
                  uint64_t v12 = v26;
                  uint64_t v6 = v36;
                  uint64_t v5 = a1;
                  unint64_t v22 = v16 + 3;
                  goto LABEL_17;
                }
              }
              uint64_t v29 = v12;
              uint64_t v30 = v13;
              uint64_t v31 = v14;
              uint64_t result = sub_1C3F882B0(v4, v8, v11 & 1);
              uint64_t v14 = v31;
              uint64_t v13 = v30;
              uint64_t v12 = v29;
              uint64_t v6 = v36;
              uint64_t v5 = a1;
              goto LABEL_4;
            }
          }
        }
LABEL_17:
        int64_t v15 = __clz(__rbit64(v24)) + (v22 << 6);
      }
    }
LABEL_4:
    char v11 = 0;
    ++v9;
    uint64_t v8 = v13;
    uint64_t v4 = v15;
    if (v9 == v6) {
      return v2;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C3FFAA3C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (!v1) {
    return v2;
  }
  uint64_t v26 = MEMORY[0x1E4FBC860];
  sub_1C401261C(0, v1, 0);
  uint64_t v2 = v26;
  uint64_t result = sub_1C4479730(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v22 = v1;
  int v23 = v5;
  uint64_t v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_26;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v6);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    uint64_t v25 = *(void *)(*(void *)(a1 + 56) + 16 * v6 + 8);
    sub_1C3F7E324(*v12, v14);
    swift_retain();
    sub_1C3F7E324(v13, v14);
    swift_retain();
    sub_1C3F7E2CC(v13, v14);
    swift_release();
    sub_1C3F7E2CC(v13, v14);
    uint64_t result = swift_release();
    unint64_t v16 = *(void *)(v26 + 16);
    unint64_t v15 = *(void *)(v26 + 24);
    if (v16 >= v15 >> 1) {
      uint64_t result = sub_1C401261C(v15 > 1, v16 + 1, 1);
    }
    *(void *)(v26 + 16) = v16 + 1;
    *(void *)(v26 + 8 * v16 + 32) = v25;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_27;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v17 = *(void *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0) {
      goto LABEL_28;
    }
    int v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_29;
    }
    unint64_t v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      int64_t v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v22;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v22;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v19);
        if (!v21)
        {
          unint64_t v19 = v11 + 2;
          if (v11 + 2 >= v20) {
            goto LABEL_4;
          }
          unint64_t v21 = *(void *)(v24 + 8 * v19);
          if (!v21)
          {
            while (v20 - 3 != v11)
            {
              unint64_t v21 = *(void *)(a1 + 88 + 8 * v11++);
              if (v21)
              {
                unint64_t v19 = v11 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
      }
    }
LABEL_4:
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t CREncoder.__allocating_init(_:version:)(uint64_t a1, char *a2)
{
  uint64_t result = swift_allocObject();
  uint64_t v5 = MEMORY[0x1E4FBC860];
  uint64_t v6 = MEMORY[0x1E4FBC868];
  char v7 = *a2;
  *(void *)(result + 32) = MEMORY[0x1E4FBC868];
  *(void *)(result + 40) = v5;
  *(void *)(result + 48) = v5;
  *(void *)(result + 56) = v6;
  *(void *)(result + 64) = v5;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = v5;
  *(unsigned char *)(result + 72) = v7;
  return result;
}

uint64_t sub_1C3FFAD20(void *a1, char *a2)
{
  return sub_1C3FFAD54(a1, *a2, *v2, sub_1C4007EB0);
}

uint64_t sub_1C3FFAD54(void *a1, char a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  type metadata accessor for CREncoder();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC868];
  *(void *)(v8 + 32) = MEMORY[0x1E4FBC868];
  *(void *)(v8 + 40) = v9;
  *(void *)(v8 + 48) = v9;
  *(void *)(v8 + 56) = v10;
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 80) = 0;
  *(void *)(v8 + 88) = 0;
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v9;
  *(unsigned char *)(v8 + 72) = a2;
  id v11 = a1;
  uint64_t v12 = a4(a3);
  swift_release();
  return v12;
}

uint64_t sub_1C3FFAE08@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C3FFBAA0(a1, a2, (void (*)(uint64_t))CRString.init(from:), a3);
}

char *sub_1C3FFAE34(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBFC98);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  unint64_t v14 = (char *)&v22 - v13;
  unint64_t v15 = (char *)&v22 + *(int *)(v12 + 64) - v13;
  sub_1C3FACEA0((unsigned char *)&v22 - v13, (uint64_t)v15, a1, a2);
  if (v3)
  {
    sub_1C3F7E2CC(a1, a2);
  }
  else
  {
    __int16 v17 = v16;
    int v23 = a3;
    *((_WORD *)v14 + 1) = v16;
    uint64_t v18 = (uint64_t)&v11[*(int *)(v8 + 64)];
    char v19 = *v14;
    *id v11 = *v14;
    *((_WORD *)v11 + 1) = v16;
    sub_1C3FA1CCC((uint64_t)v15, v18, type metadata accessor for Proto_Document);
    char v24 = v19;
    if (qword_1EBBC09E0 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_1EBBC5A30;
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    swift_retain();
    sub_1C3FA1984(&v24, v17, v18, 0, v20);
    uint64_t v5 = sub_1C3FFC1F4((uint64_t)v15, v23);
    swift_release();
    sub_1C3F7E2CC(a1, a2);
    sub_1C3F962E0((uint64_t)v14, &qword_1EBBBFC98);
  }
  return v5;
}

uint64_t sub_1C3FFB060(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  uint64_t result = 0;
  while (*(unsigned __int8 *)(a2 + 32 + result) != a1)
  {
    if (v2 == ++result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C3FFB0A8(unsigned __int16 a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 0;
  }
  int v3 = a1;
  if (*(unsigned __int16 *)(a2 + 32) == a1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v5 = v2 - 1;
  while (v5 != result)
  {
    int v6 = *(unsigned __int16 *)(a2 + 34 + 2 * result++);
    if (v6 == v3) {
      return result;
    }
  }
  return 0;
}

uint64_t sub_1C3FFB10C(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C3FFB174@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

void sub_1C3FFB204(unsigned char *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_1C44968B8();
  MEMORY[0x1F4188790](v8 - 8);
  switch(a4 >> 62)
  {
    case 1uLL:
      LODWORD(v9) = HIDWORD(a3) - a3;
      if (__OFSUB__(HIDWORD(a3), a3)) {
        goto LABEL_18;
      }
      uint64_t v9 = (int)v9;
LABEL_6:
      if (v9 < 8)
      {
LABEL_16:
        *a1 = 1;
        type metadata accessor for Proto_Document(0);
        sub_1C3F7E324(a3, a4);
        sub_1C44968A8();
        sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
        sub_1C4496A98();
      }
      else
      {
        if (qword_1EBBC0320 != -1) {
          swift_once();
        }
        uint64_t v14 = qword_1EBBC59D8;
        unint64_t v13 = qword_1EBBC59E0;
        switch(qword_1EBBC59E0 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(qword_1EBBC59D8), qword_1EBBC59D8)) {
              goto LABEL_20;
            }
            uint64_t v15 = HIDWORD(qword_1EBBC59D8) - (int)qword_1EBBC59D8;
LABEL_13:
            if (v15 < 0)
            {
              __break(1u);
LABEL_18:
              __break(1u);
LABEL_19:
              __break(1u);
LABEL_20:
              __break(1u);
LABEL_21:
              __break(1u);
              JUMPOUT(0x1C3FFB4B0);
            }
LABEL_14:
            uint64_t v18 = sub_1C4496528();
            unint64_t v20 = v19;
            char v21 = sub_1C3FAD630(v18, v19, v14, v13);
            sub_1C3F7E2CC(v18, v20);
            if ((v21 & 1) == 0) {
              goto LABEL_16;
            }
            sub_1C3FACEA0(a1, a2, a3, a4);
            break;
          case 2uLL:
            uint64_t v17 = *(void *)(qword_1EBBC59D8 + 16);
            uint64_t v16 = *(void *)(qword_1EBBC59D8 + 24);
            uint64_t v15 = v16 - v17;
            if (!__OFSUB__(v16, v17)) {
              goto LABEL_13;
            }
            goto LABEL_21;
          default:
            goto LABEL_14;
        }
      }
      return;
    case 2uLL:
      uint64_t v11 = *(void *)(a3 + 16);
      uint64_t v10 = *(void *)(a3 + 24);
      BOOL v12 = __OFSUB__(v10, v11);
      uint64_t v9 = v10 - v11;
      if (!v12) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_16;
    default:
      uint64_t v9 = BYTE6(a4);
      goto LABEL_6;
  }
}

BOOL static CRCodableVersion.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

void static CRCodableVersion.latest.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

BOOL static CRCodableVersion.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CRCodableVersion.hash(into:)()
{
  return sub_1C4498608();
}

uint64_t CRCodableVersion.hashValue.getter()
{
  return sub_1C4498628();
}

BOOL sub_1C3FFB598(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C3FFB5AC()
{
  return sub_1C4498628();
}

uint64_t sub_1C3FFB5F4()
{
  return sub_1C4498608();
}

uint64_t sub_1C3FFB620()
{
  return sub_1C4498628();
}

BOOL sub_1C3FFB664(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1C3FFB678(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1C3FFB68C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1C3FFB6A0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

void CRDT.init(_:serializedData:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t CRDT.serializedData()(uint64_t a1, uint64_t a2)
{
  char v3 = 0;
  return CRDT.serializedData(version:)(&v3, a1, a2);
}

uint64_t CRDT.serializedData(version:)(char *a1, uint64_t a2, uint64_t a3)
{
  char v6 = *a1;
  uint64_t v14 = 0;
  memset(v13, 0, sizeof(v13));
  id v7 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v13);
  sub_1C3F962E0((uint64_t)v13, qword_1EBBC0C90);
  type metadata accessor for CREncoder();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = MEMORY[0x1E4FBC860];
  uint64_t v10 = MEMORY[0x1E4FBC868];
  *(void *)(v8 + 32) = MEMORY[0x1E4FBC868];
  *(void *)(v8 + 40) = v9;
  *(void *)(v8 + 48) = v9;
  *(void *)(v8 + 56) = v10;
  *(void *)(v8 + 64) = v9;
  *(void *)(v8 + 80) = 0;
  *(void *)(v8 + 88) = 0;
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = v9;
  *(unsigned char *)(v8 + 72) = v6;
  uint64_t v11 = sub_1C3F5A8C0(v3, a2, a3);
  swift_release();
  return v11;
}

uint64_t CRDT.serializedData(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3FFB958(a1, a2, a3, sub_1C3F5A8C0);
}

void CRValue.init(_:serializedData:)(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
}

uint64_t CRValue.serializedData()(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = 0;
  memset(v7, 0, sizeof(v7));
  id v4 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v7);
  sub_1C3F962E0((uint64_t)v7, qword_1EBBC0C90);
  uint64_t v5 = CRValue.serializedData(_:)(v4, a1, a2);

  return v5;
}

uint64_t CRValue.serializedData(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3FFB958(a1, a2, a3, sub_1C400AA5C);
}

uint64_t sub_1C3FFB958(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  type metadata accessor for CREncoder();
  uint64_t v9 = swift_allocObject();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBC868];
  *(void *)(v9 + 32) = MEMORY[0x1E4FBC868];
  *(void *)(v9 + 40) = v10;
  *(void *)(v9 + 48) = v10;
  *(void *)(v9 + 56) = v11;
  *(void *)(v9 + 64) = v10;
  *(void *)(v9 + 80) = 0;
  *(void *)(v9 + 88) = 0;
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = v10;
  *(unsigned char *)(v9 + 72) = 1;
  id v12 = a1;
  uint64_t v13 = a4(v4, a2, a3);
  swift_release();
  return v13;
}

uint64_t CRValue.serializedData(_:version:)(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3F51968(a1, a2, a3, a4, sub_1C400AA5C);
}

void CRDT<>.init(_:serializedData:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t sub_1C3FFBAA0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void (*a3)(uint64_t)@<X2>, void *a4@<X8>)
{
  uint64_t v22 = a4;
  int v23 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBFC98);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v21 - v12;
  uint64_t v14 = (char *)&v21 + *(int *)(v11 + 64) - v12;
  sub_1C3FACEA0((unsigned char *)&v21 - v12, (uint64_t)v14, a1, a2);
  if (v4) {
    return sub_1C3F7E2CC(a1, a2);
  }
  __int16 v17 = v15;
  unint64_t v21 = a2;
  *((_WORD *)v13 + 1) = v15;
  uint64_t v18 = (uint64_t)&v10[*(int *)(v7 + 64)];
  char v19 = *v13;
  *uint64_t v10 = *v13;
  *((_WORD *)v10 + 1) = v15;
  sub_1C3FA1CCC((uint64_t)v14, v18, type metadata accessor for Proto_Document);
  char v25 = v19;
  if (qword_1EBBC09E0 != -1) {
    swift_once();
  }
  uint64_t v20 = qword_1EBBC5A30;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1C3FA1984(&v25, v17, v18, 0, v20);
  sub_1C3FFC4C0((uint64_t)v14, v23);
  swift_release();
  sub_1C3F7E2CC(a1, v21);
  uint64_t result = sub_1C3F962E0((uint64_t)v13, &qword_1EBBBFC98);
  *uint64_t v22 = v24;
  return result;
}

uint64_t CRDT<>.init(serializedData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v33 = a5;
  uint64_t v34 = a4;
  uint64_t v35 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBFC98);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  __int16 v17 = (unsigned __int8 *)&v28 - v16;
  uint64_t v18 = (char *)&v28 + *(int *)(v15 + 64) - v16;
  sub_1C3FACEA0((unsigned char *)&v28 - v16, (uint64_t)v18, a1, a2);
  if (v5) {
    return sub_1C3F7E2CC(a1, a2);
  }
  uint64_t v29 = v10;
  uint64_t v30 = 0;
  uint64_t v31 = a1;
  unint64_t v32 = a2;
  *((_WORD *)v17 + 1) = v19;
  uint64_t v21 = (uint64_t)&v14[*(int *)(v11 + 64)];
  uint64_t v22 = *v17;
  *uint64_t v14 = *v17;
  *((_WORD *)v14 + 1) = v19;
  __int16 v23 = v19;
  sub_1C3FA1CCC((uint64_t)v18, v21, type metadata accessor for Proto_Document);
  char v36 = v22;
  if (qword_1EBBC09E0 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_1EBBC5A30;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  uint64_t v25 = v30;
  sub_1C3FA1984(&v36, v23, v21, 0, v24);
  uint64_t v26 = v35;
  if (v25)
  {
    sub_1C3F7E2CC(v31, v32);
    return sub_1C3F962E0((uint64_t)v17, &qword_1EBBBFC98);
  }
  else
  {
    uint64_t v27 = v29;
    sub_1C3FADBD4(a3, (uint64_t)v18, a3, v34);
    swift_release();
    sub_1C3F7E2CC(v31, v32);
    sub_1C3F962E0((uint64_t)v17, &qword_1EBBBFC98);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v33, v27, a3);
  }
}

void PartialCRDT.init(_:serializedData:)(void *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
}

uint64_t PartialCRDT.init(serializedData:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1C3F7E324(a1, a2);
  if (qword_1EBBC09E0 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_1EBBC5A30;
  type metadata accessor for CRDecodeContext();
  uint64_t v9 = (void *)swift_allocObject();
  uint64_t v10 = MEMORY[0x1E4FBC868];
  v9[2] = MEMORY[0x1E4FBC868];
  v9[3] = v10;
  v9[4] = v8;
  type metadata accessor for CRDecoder(0);
  uint64_t v11 = swift_allocObject();
  swift_retain();
  sub_1C3FFEF38(a1, a2, (uint64_t)v9);
  if (!v4) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 + 8) + 8))(v11, a3);
  }
  return sub_1C3F7E2CC(a1, a2);
}

void *PartialCRDT.deltaSerializedData(_:version:)(void *result, char *a2, uint64_t a3, uint64_t a4)
{
  char v5 = *a2;
  if (*a2)
  {
    uint64_t v8 = result;
    type metadata accessor for CREncoder();
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t v11 = MEMORY[0x1E4FBC868];
    *(void *)(v9 + 32) = MEMORY[0x1E4FBC868];
    *(void *)(v9 + 40) = v10;
    *(void *)(v9 + 48) = v10;
    *(void *)(v9 + 56) = v11;
    *(void *)(v9 + 64) = v10;
    *(void *)(v9 + 80) = 0;
    *(void *)(v9 + 88) = 0;
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = v10;
    *(unsigned char *)(v9 + 72) = v5;
    uint64_t v12 = sub_1C400A264(v8, v4, a3, a4);
    swift_release();
    return (void *)v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void CRDecoder.version.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 49);
}

char *sub_1C3FFC1F4(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_CRDT(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void *)(a1 + *(int *)(type metadata accessor for Proto_Document(0) + 20))
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  sub_1C3F970C4(v15, (uint64_t)v8, &qword_1EBBC0598);
  uint64_t v16 = type metadata accessor for Proto_Document.OneOf_Root(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v8, 1, v16) == 1)
  {
    sub_1C3F962E0((uint64_t)v8, &qword_1EBBC0598);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1C3F9775C((uint64_t)v8, (uint64_t)v14, type metadata accessor for Proto_CRDT);
      sub_1C3FA1CCC((uint64_t)v14, (uint64_t)v12, type metadata accessor for Proto_CRDT);
      type metadata accessor for CRDecoder(0);
      swift_allocObject();
      swift_retain();
      uint64_t v19 = sub_1C3FB9A38((uint64_t)v12, v4);
      swift_release();
      uint64_t v12 = (char *)a2(v19);
      sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_CRDT);
      return v12;
    }
    sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_Document.OneOf_Root);
  }
  sub_1C3FE3FF0();
  swift_allocError();
  *(void *)uint64_t v17 = 0xD000000000000014;
  *(void *)(v17 + 8) = 0x80000001C44B1530;
  *(unsigned char *)(v17 + 16) = 0;
  swift_willThrow();
  return v12;
}

uint64_t sub_1C3FFC4C0(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_CRDT(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = *(void *)(a1 + *(int *)(type metadata accessor for Proto_Document(0) + 20))
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  sub_1C3F970C4(v15, (uint64_t)v8, &qword_1EBBC0598);
  uint64_t v16 = type metadata accessor for Proto_Document.OneOf_Root(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v8, 1, v16) == 1)
  {
    sub_1C3F962E0((uint64_t)v8, &qword_1EBBC0598);
LABEL_5:
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v17 = 0xD000000000000014;
    *(void *)(v17 + 8) = 0x80000001C44B1530;
    *(unsigned char *)(v17 + 16) = 0;
    return swift_willThrow();
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_Document.OneOf_Root);
    goto LABEL_5;
  }
  sub_1C3F9775C((uint64_t)v8, (uint64_t)v14, type metadata accessor for Proto_CRDT);
  sub_1C3FA1CCC((uint64_t)v14, (uint64_t)v12, type metadata accessor for Proto_CRDT);
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  uint64_t v19 = sub_1C3FB9A38((uint64_t)v12, v4);
  swift_release();
  a2(v19);
  return sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_CRDT);
}

uint64_t sub_1C3FFC790@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Version(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto_Value(0);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C3FA1E08(a1);
  if (!v3)
  {
    uint64_t v26 = v10;
    uint64_t v18 = *(void *)(a1 + *(int *)(type metadata accessor for Proto_Document(0) + 20))
        + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
    swift_beginAccess();
    sub_1C3F970C4(v18, (uint64_t)v13, &qword_1EBBC0598);
    uint64_t v19 = type metadata accessor for Proto_Document.OneOf_Root(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v13, 1, v19) == 1)
    {
      sub_1C3F962E0((uint64_t)v13, &qword_1EBBC0598);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1C3F9775C((uint64_t)v13, (uint64_t)v16, type metadata accessor for Proto_Value);
        goto LABEL_10;
      }
      sub_1C3F9229C((uint64_t)v13, type metadata accessor for Proto_Document.OneOf_Root);
    }
    sub_1C4496888();
    uint64_t v20 = *(int *)(v14 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)&v16[v20] = qword_1EBBBF8B8;
    swift_retain();
LABEL_10:
    uint64_t v21 = *(void *)&v16[*(int *)(v14 + 20)]
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v21, (uint64_t)v7, &qword_1EBBBF8A0);
    uint64_t v22 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v7, 1, v22) == 1)
    {
      sub_1C3F962E0((uint64_t)v7, &qword_1EBBBF8A0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        __int16 v23 = v26;
        sub_1C3F9775C((uint64_t)v7, (uint64_t)v26, type metadata accessor for Proto_Version);
        uint64_t v24 = v27;
LABEL_16:
        sub_1C3F9229C((uint64_t)v16, type metadata accessor for Proto_Value);
        swift_retain();
        return sub_1C3F8F9D0(v23, v2, v24);
      }
      sub_1C3F9229C((uint64_t)v7, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    }
    __int16 v23 = v26;
    uint64_t v24 = v27;
    uint64_t v25 = MEMORY[0x1E4FBC860];
    *uint64_t v26 = MEMORY[0x1E4FBC860];
    v23[1] = v25;
    sub_1C4496888();
    goto LABEL_16;
  }
  return result;
}

double sub_1C3FFCBA8(_OWORD *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v39 = a1;
  uint64_t v38 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_Version(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v43;
  sub_1C3FFB204(v42, (uint64_t)v18, a3, a4);
  if (!v19)
  {
    uint64_t v43 = v8;
    uint64_t v21 = v40;
    sub_1C3FA1E08((uint64_t)v18);
    uint64_t v22 = (uint64_t)v18;
    uint64_t v23 = *(int *)(v16 + 20);
    uint64_t v37 = v22;
    uint64_t v24 = *(void *)(v22 + v23)
        + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    sub_1C3F970C4(v24, (uint64_t)v11, &qword_1EBBC0578);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
    {
      uint64_t v25 = MEMORY[0x1E4FBC860];
      *uint64_t v15 = MEMORY[0x1E4FBC860];
      v15[1] = v25;
      sub_1C4496888();
      sub_1C3F962E0((uint64_t)v11, &qword_1EBBC0578);
    }
    else
    {
      sub_1C3F9775C((uint64_t)v11, (uint64_t)v15, type metadata accessor for Proto_Version);
    }
    uint64_t v26 = v37;
    swift_retain();
    sub_1C3F8F9D0(v15, v21, &v41);
    long long v40 = v41;
    uint64_t v27 = (uint64_t *)(*(void *)(v26 + v23)
                    + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__versionUuid);
    swift_beginAccess();
    uint64_t v29 = *v27;
    unint64_t v28 = v27[1];
    sub_1C3F7E324(v29, v28);
    uint64_t v30 = (uint64_t)v43;
    sub_1C3FA2BEC(v29, v28);
    uint64_t v31 = sub_1C4496678();
    uint64_t v32 = *(void *)(v31 - 8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v32 + 56))(v30, 0, 1, v31);
    int v33 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31);
    uint64_t v35 = v38;
    uint64_t v34 = v39;
    if (v33 == 1)
    {
      sub_1C4496668();
      sub_1C3F9229C(v37, type metadata accessor for Proto_Document);
      sub_1C3F962E0(v30, &qword_1EBBC07E8);
    }
    else
    {
      sub_1C3F9229C(v37, type metadata accessor for Proto_Document);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v35, v30, v31);
    }
    double result = *(double *)&v40;
    _OWORD *v34 = v40;
  }
  return result;
}

void sub_1C3FFD070(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, unsigned int (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v15 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FACEA0(&v19, (uint64_t)v17, a1, a2);
  if (!v7)
  {
    sub_1C3FFD184((uint64_t)v17, a3, a4, a5, a6, a7);
    sub_1C3F9229C((uint64_t)v17, type metadata accessor for Proto_Document);
  }
}

void sub_1C3FFD184(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int (*a3)(uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  void (*v95)(long long *__return_ptr, uint64_t);
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  uint64_t v102;
  void *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void (*v116)(uint64_t);
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t (**v130)(uint64_t, uint64_t, uint64_t);
  unsigned int (**v131)(uint64_t, uint64_t, uint64_t);
  uint64_t v132;
  uint64_t v133;
  void *v134;
  void *v135;
  uint64_t v136;
  void *v137;
  char *v138;
  void *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  unsigned int (*v159)(uint64_t, uint64_t, uint64_t);
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  long long v163;
  long long v164;
  long long v165;
  uint64_t v166;

  uint64_t v152 = a5;
  uint64_t v151 = a4;
  uint64_t v159 = a3;
  uint64_t v150 = a2;
  char v139 = a6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v7 - 8);
  v143 = (uint64_t)&v125 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for Proto_CRDT(0);
  uint64_t v147 = *(void *)(v142 - 8);
  MEMORY[0x1F4188790](v142);
  v141 = (uint64_t)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v149);
  uint64_t v157 = (uint64_t)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v158 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v154 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v146 = *(void *)(v154 - 8);
  MEMORY[0x1F4188790](v154);
  uint64_t v153 = (uint64_t *)((char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v155 = type metadata accessor for Proto_Reference(0);
  uint64_t v145 = *(void *)(v155 - 8);
  MEMORY[0x1F4188790](v155);
  uint64_t v148 = (char *)&v125 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v140 = (uint64_t)&v125 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v144 = (unint64_t)&v125 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v125 - v20;
  uint64_t v22 = type metadata accessor for Proto_Version(0);
  BOOL v156 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  unint64_t v28 = (char *)&v125 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v125 - v29;
  uint64_t v31 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v31);
  int v33 = (char *)&v125 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v166 = MEMORY[0x1E4FBC868];
  uint64_t v34 = v160;
  sub_1C3FA1E08(a1);
  if (v34) {
    goto LABEL_9;
  }
  v136 = v31;
  int v137 = v30;
  v138 = v21;
  char v135 = v28;
  uint64_t v134 = v25;
  uint64_t v160 = v22;
  uint64_t v35 = a1;
  sub_1C3FA1CCC(a1, (uint64_t)v33, type metadata accessor for Proto_Document);
  type metadata accessor for CRProtoDecodeContext();
  swift_allocObject();
  uint64_t v36 = v161;
  swift_retain();
  uint64_t v37 = (uint64_t)v159;
  swift_retain();
  *(void *)(v36 + 16) = sub_1C3FA2F18((uint64_t)v33, v36, v37);
  swift_release();
  uint64_t v38 = *(int *)(v136 + 20);
  uint64_t v39 = *(void *)(a1 + v38)
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  uint64_t v40 = v39;
  uint64_t v41 = (uint64_t)v138;
  sub_1C3F970C4(v40, (uint64_t)v138, &qword_1EBBC0578);
  uint64_t v42 = v156 + 48;
  uint64_t v43 = v160;
  uint64_t v159 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v156 + 48);
  if (v159(v41, 1, v160) == 1)
  {
    uint64_t v44 = MEMORY[0x1E4FBC860];
    uint64_t v45 = v137;
    *int v137 = MEMORY[0x1E4FBC860];
    v45[1] = v44;
    sub_1C4496888();
    sub_1C3F962E0(v41, &qword_1EBBC0578);
  }
  else
  {
    uint64_t v45 = v137;
    sub_1C3F9775C(v41, (uint64_t)v137, type metadata accessor for Proto_Version);
  }
  uint64_t v46 = (uint64_t)v158;
  swift_retain();
  sub_1C3F8F9D0(v45, v36, &v165);
  long long v47 = v165;
  v138 = (char *)v35;
  uint64_t v48 = *(void *)(v35 + v38)
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__minVersion;
  swift_beginAccess();
  uint64_t v49 = v48;
  unint64_t v50 = v144;
  sub_1C3F970C4(v49, v144, &qword_1EBBC0578);
  BOOL v156 = v42;
  if (v159(v50, 1, v43) == 1)
  {
    uint64_t v51 = MEMORY[0x1E4FBC860];
    uint64_t v52 = v135;
    *char v135 = MEMORY[0x1E4FBC860];
    v52[1] = v51;
    sub_1C4496888();
    uint64_t v53 = v50;
    uint64_t v54 = v52;
    sub_1C3F962E0(v53, &qword_1EBBC0578);
  }
  else
  {
    uint64_t v55 = v50;
    uint64_t v54 = v135;
    sub_1C3F9775C(v55, (uint64_t)v135, type metadata accessor for Proto_Version);
  }
  uint64_t v56 = v147;
  uint64_t v57 = v146;
  uint64_t v58 = v145;
  swift_retain();
  sub_1C3F8F9D0(v54, v36, &v164);
  uint64_t v128 = *((void *)&v47 + 1);
  uint64_t v129 = v47;
  uint64_t v145 = 0;
  uint64_t v126 = *((void *)&v164 + 1);
  uint64_t v127 = v164;
  uint64_t v59 = *(void *)&v138[v38]
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__deltaReferences;
  swift_beginAccess();
  uint64_t v60 = *(void *)v59;
  uint64_t v61 = *(void *)(*(void *)v59 + 16);
  if (!v61) {
    goto LABEL_39;
  }
  uint64_t v62 = v58;
  uint64_t v63 = v60 + ((*(unsigned __int8 *)(v58 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v58 + 80));
  uint64_t v64 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  char v131 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  uint64_t v146 = *(void *)(v62 + 72);
  uint64_t v125 = v60;
  swift_bridgeObjectRetain();
  uint64_t v65 = (uint64_t)v148;
  uint64_t v66 = v155;
  uint64_t v130 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  while (2)
  {
    sub_1C3FA1CCC(v63, v65, type metadata accessor for Proto_Reference);
    uint64_t v67 = *(int *)(v66 + 20);
    uint64_t v68 = *(void *)(v65 + v67)
        + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
    swift_beginAccess();
    sub_1C3F970C4(v68, v46, &qword_1EBBC0560);
    int v69 = (*v64)(v46, 1, v154);
    uint64_t v147 = v67;
    uint64_t v70 = v153;
    if (v69 == 1)
    {
      *uint64_t v153 = MEMORY[0x1E4FBC860];
      v70[1] = sub_1C4496868();
      v70[2] = v71;
      sub_1C4496888();
      sub_1C3F962E0(v46, &qword_1EBBC0560);
    }
    else
    {
      sub_1C3F9775C(v46, (uint64_t)v153, type metadata accessor for Proto_KeyPath);
    }
    uint64_t v73 = v70[1];
    unint64_t v72 = v70[2];
    switch(v72 >> 62)
    {
      case 1uLL:
        uint64_t v74 = (int)v73;
        uint64_t v75 = v73 >> 32;
        goto LABEL_23;
      case 2uLL:
        uint64_t v74 = *(void *)(v73 + 16);
        uint64_t v75 = *(void *)(v73 + 24);
LABEL_23:
        if (v74 != v75) {
          goto LABEL_24;
        }
        goto LABEL_37;
      case 3uLL:
        goto LABEL_37;
      default:
        if ((v72 & 0xFF000000000000) == 0)
        {
LABEL_37:
          sub_1C3FE3FF0();
          swift_allocError();
          *(void *)uint64_t v111 = 0xD000000000000016;
          *(void *)(v111 + 8) = 0x80000001C44B1170;
          *(unsigned char *)(v111 + 16) = 0;
          swift_willThrow();
          sub_1C3F9229C((uint64_t)v70, type metadata accessor for Proto_KeyPath);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v112 = v65;
          goto LABEL_48;
        }
LABEL_24:
        sub_1C3F7E324(v70[1], v70[2]);
        sub_1C3F9229C((uint64_t)v70, type metadata accessor for Proto_KeyPath);
        uint64_t v76 = type metadata accessor for Capsule();
        uint64_t v77 = v157;
        sub_1C3FB05E4(v76, v157);
        uint64_t v78 = *(void *)(v77 + *(int *)(v149 + 20));
        uint64_t v46 = (uint64_t)v158;
        if (!*(void *)(v78 + 16)) {
          goto LABEL_13;
        }
        sub_1C3F7E324(v73, v72);
        sub_1C3F7E324(v73, v72);
        uint64_t v79 = sub_1C3F850CC(v73, v72);
        if ((v80 & 1) == 0)
        {
          sub_1C3F7E2CC(v73, v72);
          sub_1C3F7E2CC(v73, v72);
LABEL_13:
          sub_1C3F9229C(v157, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
          sub_1C3F9229C(v65, type metadata accessor for Proto_Reference);
          sub_1C3F7E2CC(v73, v72);
          goto LABEL_14;
        }
        char v132 = v63;
        int v81 = (uint64_t *)(*(void *)(v78 + 56) + 48 * v79);
        uint64_t v82 = *v81;
        uint64_t v84 = (void *)v81[2];
        uint64_t v83 = v81[3];
        char v85 = (void *)v81[4];
        uint64_t v86 = v81[5];
        swift_retain();
        int v137 = v84;
        swift_bridgeObjectRetain();
        v136 = v83;
        swift_bridgeObjectRetain();
        char v135 = v85;
        swift_bridgeObjectRetain();
        char v133 = v86;
        swift_bridgeObjectRetain();
        sub_1C3F7E2CC(v73, v72);
        v138 = (char *)v73;
        uint64_t v144 = v72;
        sub_1C3F7E2CC(v73, v72);
        sub_1C3F9229C(v157, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
        uint64_t v87 = v147;
        uint64_t v88 = *(void *)(v65 + v147)
            + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
        swift_beginAccess();
        uint64_t v89 = v143;
        sub_1C3F970C4(v88, v143, &qword_1EBBC04F8);
        uint64_t v90 = v142;
        if ((*v131)(v89, 1, v142) == 1)
        {
          uint64_t v91 = v141;
          sub_1C4496888();
          uint64_t v92 = *(int *)(v90 + 20);
          if (qword_1EBBC0668 != -1) {
            swift_once();
          }
          *(void *)(v91 + v92) = qword_1EBBC0660;
          swift_retain();
          sub_1C3F962E0(v89, &qword_1EBBC04F8);
        }
        else
        {
          uint64_t v91 = v141;
          sub_1C3F9775C(v89, v141, type metadata accessor for Proto_CRDT);
        }
        type metadata accessor for CRDecoder(0);
        swift_allocObject();
        uint64_t v93 = v161;
        swift_retain();
        uint64_t v94 = sub_1C3FB9A38(v91, v93);
        swift_release();
        if (!v82)
        {
          __break(1u);
LABEL_50:
          __break(1u);
LABEL_51:
          __break(1u);
          JUMPOUT(0x1C3FFE498);
        }
        uint64_t v95 = *(void (**)(long long *__return_ptr, uint64_t))(*(void *)v82 + 232);
        swift_retain();
        BOOL v96 = v145;
        v95(&v163, v94);
        if (!v96)
        {
          swift_release();
          uint64_t v97 = v163;
          uint64_t v98 = *(void *)&v148[v87]
              + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
          swift_beginAccess();
          uint64_t v99 = v98;
          uint64_t v100 = v140;
          sub_1C3F970C4(v99, v140, &qword_1EBBC0578);
          if (v159(v100, 1, v160) == 1)
          {
            uint64_t v101 = v134;
            uint64_t v102 = MEMORY[0x1E4FBC860];
            *uint64_t v134 = MEMORY[0x1E4FBC860];
            v101[1] = v102;
            uint64_t v103 = v101;
            sub_1C4496888();
            sub_1C3F962E0(v100, &qword_1EBBC0578);
          }
          else
          {
            uint64_t v103 = v134;
            sub_1C3F9775C(v100, (uint64_t)v134, type metadata accessor for Proto_Version);
          }
          swift_retain();
          sub_1C3F8F9D0(v103, v94, &v163);
          uint64_t v145 = 0;
          uint64_t v105 = *((void *)&v163 + 1);
          int v104 = v163;
          uint64_t v147 = v82;
          uint64_t v106 = (uint64_t)v138;
          uint64_t v107 = v144;
          sub_1C3F7E324((uint64_t)v138, v144);
          swift_retain();
          uint64_t v108 = v166;
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v163 = v108;
          uint64_t v110 = v105;
          uint64_t v65 = (uint64_t)v148;
          sub_1C4421590(v104, v110, v97, v106, v107, isUniquelyReferenced_nonNull_native);
          v166 = v163;
          swift_bridgeObjectRelease();
          sub_1C3F7E2CC(v106, v107);
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1C3F7E2CC(v106, v107);
          sub_1C3F9229C(v65, type metadata accessor for Proto_Reference);
          uint64_t v63 = v132;
          uint64_t v64 = v130;
LABEL_14:
          v63 += v146;
          --v61;
          uint64_t v66 = v155;
          if (!v61)
          {
            swift_bridgeObjectRelease();
            uint64_t v36 = v161;
LABEL_39:
            uint64_t v113 = *(void *)(v36 + 16);
            uint64_t v114 = v129;
            uint64_t v115 = v128;
            if (!v113) {
              goto LABEL_50;
            }
            uint64_t v116 = *(void (**)(uint64_t))(*(void *)v113 + 168);
            swift_retain();
            uint64_t v117 = v145;
            v116(v36);
            if (v117)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_release();
              if (!*(void *)(v36 + 16)) {
                goto LABEL_51;
              }
              swift_beginAccess();
              char v118 = swift_bridgeObjectRetain();
              uint64_t v119 = sub_1C3FFE4A8(v118, (uint64_t)&v166);
              swift_bridgeObjectRelease();
              uint64_t v120 = v139;
              if (*(void *)(v119 + 16))
              {
                __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C0D8);
                uint64_t v121 = sub_1C4497FD8();
              }
              else
              {
                uint64_t v121 = MEMORY[0x1E4FBC868];
              }
              v162 = v121;
              sub_1C4013E68(v119, 1, &v162);
              uint64_t v122 = v162;
              uint64_t v123 = v166;
              *uint64_t v120 = v114;
              v120[1] = v115;
              long long v124 = v126;
              v120[2] = v127;
              v120[3] = v124;
              v120[4] = v123;
              v120[5] = v122;
              v120[6] = MEMORY[0x1E4FBC870];
            }
            return;
          }
          continue;
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C3F7E2CC((uint64_t)v138, v144);
        swift_release();
        char v112 = (uint64_t)v148;
LABEL_48:
        sub_1C3F9229C(v112, type metadata accessor for Proto_Reference);
        swift_bridgeObjectRelease();
LABEL_9:
        swift_bridgeObjectRelease();
        return;
    }
  }
}

uint64_t sub_1C3FFE4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v25 = (void *)MEMORY[0x1E4FBC860];
  while (1)
  {
    if (v4)
    {
      uint64_t v30 = (v4 - 1) & v4;
      int64_t v31 = v6;
      unint64_t v7 = __clz(__rbit64(v4)) | (v6 << 6);
      goto LABEL_24;
    }
    int64_t v8 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_36;
    }
    if (v8 >= v27) {
      goto LABEL_34;
    }
    unint64_t v9 = *(void *)(v26 + 8 * v8);
    int64_t v10 = v6 + 1;
    if (!v9)
    {
      int64_t v10 = v6 + 2;
      if (v6 + 2 >= v27) {
        goto LABEL_34;
      }
      unint64_t v9 = *(void *)(v26 + 8 * v10);
      if (!v9)
      {
        int64_t v10 = v6 + 3;
        if (v6 + 3 >= v27) {
          goto LABEL_34;
        }
        unint64_t v9 = *(void *)(v26 + 8 * v10);
        if (!v9)
        {
          int64_t v10 = v6 + 4;
          if (v6 + 4 >= v27) {
            goto LABEL_34;
          }
          unint64_t v9 = *(void *)(v26 + 8 * v10);
          if (!v9) {
            break;
          }
        }
      }
    }
LABEL_23:
    uint64_t v30 = (v9 - 1) & v9;
    int64_t v31 = v10;
    unint64_t v7 = __clz(__rbit64(v9)) + (v10 << 6);
LABEL_24:
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v7);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    uint64_t v15 = (uint64_t *)(*(void *)(a1 + 56) + 48 * v7);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[2];
    uint64_t v18 = v15[3];
    uint64_t v19 = *(void *)(*(void *)a2 + 16);
    sub_1C3F7E324(*v12, v14);
    if (v19)
    {
      sub_1C3F7E324(v13, v14);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F850CC(v13, v14);
      char v21 = v20;
      sub_1C3F7E2CC(v13, v14);
      if (v21)
      {
        sub_1C3F7E2CC(v13, v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t result = swift_release();
        goto LABEL_5;
      }
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_1C3F7E324(v13, v14);
    if (!v16) {
      goto LABEL_37;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C3F7E2CC(v13, v14);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C3FF1AC8(0, v25[2] + 1, 1, v25);
      uint64_t v25 = (void *)result;
    }
    unint64_t v23 = v25[2];
    unint64_t v22 = v25[3];
    if (v23 >= v22 >> 1)
    {
      uint64_t result = (uint64_t)sub_1C3FF1AC8((void *)(v22 > 1), v23 + 1, 1, v25);
      uint64_t v25 = (void *)result;
    }
    v25[2] = v23 + 1;
    uint64_t v24 = &v25[5 * v23];
    v24[4] = v13;
    v24[5] = v14;
    v24[6] = v17;
    v24[7] = v18;
    v24[8] = v16;
LABEL_5:
    int64_t v6 = v31;
    unint64_t v4 = v30;
  }
  uint64_t v11 = v6 + 5;
  if (v6 + 5 >= v27)
  {
LABEL_34:
    swift_release();
    return (uint64_t)v25;
  }
  unint64_t v9 = *(void *)(v26 + 8 * v11);
  if (v9)
  {
    int64_t v10 = v6 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_34;
    }
    unint64_t v9 = *(void *)(v26 + 8 * v10);
    ++v11;
    if (v9) {
      goto LABEL_23;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C3FFE834()
{
  return sub_1C3FFEBB4((void (*)(uint64_t))type metadata accessor for CRDecoder.CRValueContainer, 0xD000000000000017, 0x80000001C44B0F00);
}

uint64_t sub_1C3FFE878()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v4, (uint64_t)v3, &qword_1EBBC04F8);
  uint64_t v5 = type metadata accessor for Proto_CRDT(0);
  LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  sub_1C3F962E0((uint64_t)v3, &qword_1EBBC04F8);
  if (v4 == 1)
  {
    sub_1C3FE3FF0();
    uint64_t v6 = swift_allocError();
    *(void *)uint64_t v7 = 0xD000000000000014;
    *(void *)(v7 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v7 + 16) = 0;
    uint64_t v8 = v6;
    swift_willThrow();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v0;
    *(void *)(v8 + 24) = 0;
    *(unsigned char *)(v8 + 32) = 1;
    swift_retain();
  }
  return v8;
}

uint64_t sub_1C3FFE9FC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v4, (uint64_t)v3, &qword_1EBBC04F8);
  uint64_t v5 = type metadata accessor for Proto_CRDT(0);
  LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  sub_1C3F962E0((uint64_t)v3, &qword_1EBBC04F8);
  if (v4 == 1)
  {
    sub_1C3FE3FF0();
    uint64_t v6 = swift_allocError();
    *(void *)uint64_t v7 = 0xD00000000000001ELL;
    *(void *)(v7 + 8) = 0x80000001C44B1190;
    *(unsigned char *)(v7 + 16) = 0;
    uint64_t v8 = v6;
    swift_willThrow();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTKeyedContainer();
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v0;
    swift_retain();
  }
  return v8;
}

uint64_t sub_1C3FFEB70()
{
  return sub_1C3FFEBB4((void (*)(uint64_t))type metadata accessor for CRDecoder.CRValueKeyedContainer, 0xD000000000000021, 0x80000001C44B11B0);
}

uint64_t sub_1C3FFEBB4(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v7 - 8);
  unint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v10, (uint64_t)v9, &qword_1EBBC0540);
  uint64_t v11 = type metadata accessor for Proto_Value(0);
  LODWORD(v10) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v9, 1, v11);
  uint64_t v12 = sub_1C3F962E0((uint64_t)v9, &qword_1EBBC0540);
  if (v10 == 1)
  {
    sub_1C3FE3FF0();
    uint64_t v13 = swift_allocError();
    *(void *)uint64_t v14 = a2;
    *(void *)(v14 + 8) = a3;
    *(unsigned char *)(v14 + 16) = 0;
    uint64_t v15 = v13;
    swift_willThrow();
  }
  else
  {
    a1(v12);
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v3;
    swift_retain();
  }
  return v15;
}

uint64_t sub_1C3FFED30(uint64_t *a1, char *a2)
{
  uint64_t v5 = MEMORY[0x1E4FBC860];
  char v6 = *a2;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = v5;
  uint64_t v7 = MEMORY[0x1E4FBC868];
  *(void *)(v2 + 32) = v5;
  *(void *)(v2 + 40) = v7;
  *(unsigned char *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  uint64_t v8 = v2 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  uint64_t v9 = type metadata accessor for Proto_CRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = v2 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  uint64_t v11 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = sub_1C3FA29A4(*a1, a1[1]);
  if (v3)
  {
    type metadata accessor for CRDecoder(0);
    sub_1C3F9229C((uint64_t)a1, type metadata accessor for Proto_Constants);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3F962E0(v2 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
    sub_1C3F962E0(v2 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v2 + 24) = v12;
    swift_bridgeObjectRelease();
    uint64_t v13 = a1[2];
    swift_bridgeObjectRetain();
    sub_1C3F9229C((uint64_t)a1, type metadata accessor for Proto_Constants);
    *(void *)(v2 + 32) = v13;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v2 + 49) = v6;
  }
  return v2;
}

uint64_t sub_1C3FFEF38(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v56 = a3;
  unint64_t v58 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v54 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v52 = (uint64_t)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBFC98);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v53 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v55 = (char *)&v49 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v49 - v14;
  uint64_t v16 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = v16;
  uint64_t v17 = MEMORY[0x1E4FBC868];
  *(void *)(v3 + 32) = v16;
  *(void *)(v3 + 40) = v17;
  *(unsigned char *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  uint64_t v18 = v3 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  uint64_t v19 = type metadata accessor for Proto_CRDT(0);
  uint64_t v20 = *(void *)(v19 - 8);
  char v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
  uint64_t v22 = v20 + 56;
  v21(v18, 1, 1, v19);
  uint64_t v23 = v3 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  uint64_t v24 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
  uint64_t v25 = v9;
  uint64_t v26 = (uint64_t)&v15[*(int *)(v9 + 64)];
  uint64_t v27 = a1;
  uint64_t v28 = a1;
  uint64_t v29 = v57;
  unint64_t v30 = v58;
  sub_1C3FACEA0(v15, v26, v28, v58);
  if (!v29)
  {
    uint64_t v49 = v22;
    unint64_t v50 = v21;
    uint64_t v51 = v19;
    uint64_t v57 = v27;
    *((_WORD *)v15 + 1) = v31;
    uint64_t v32 = *(int *)(v25 + 64);
    int v33 = v55;
    uint64_t v34 = (uint64_t)&v55[v32];
    char v35 = *v15;
    unsigned char *v55 = *v15;
    *((_WORD *)v33 + 1) = v31;
    sub_1C3FA1CCC(v26, (uint64_t)&v33[v32], type metadata accessor for Proto_Document);
    *(unsigned char *)(v3 + 49) = v35;
    sub_1C3F9229C(v34, type metadata accessor for Proto_Document);
    sub_1C3FA1E08(v26);
    *(void *)(v3 + 16) = v56;
    swift_retain();
    swift_release();
    uint64_t v36 = v53;
    uint64_t v37 = (uint64_t)&v53[*(int *)(v25 + 64)];
    *uint64_t v53 = *v15;
    *((_WORD *)v36 + 1) = *((_WORD *)v15 + 1);
    sub_1C3FA1CCC(v26, v37, type metadata accessor for Proto_Document);
    uint64_t v38 = *(void *)(v37 + *(int *)(type metadata accessor for Proto_Document(0) + 20))
        + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
    swift_beginAccess();
    uint64_t v39 = v54;
    sub_1C3F970C4(v38, v54, &qword_1EBBC0598);
    uint64_t v40 = type metadata accessor for Proto_Document.OneOf_Root(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48))(v39, 1, v40) == 1)
    {
      sub_1C3F962E0(v39, &qword_1EBBC0598);
      uint64_t v42 = v57;
      unint64_t v41 = v58;
      uint64_t v43 = v51;
      uint64_t v44 = v52;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v43 = v51;
      if (!EnumCaseMultiPayload)
      {
        uint64_t v44 = v52;
        sub_1C3F9775C(v39, v52, type metadata accessor for Proto_CRDT);
        uint64_t v42 = v57;
        unint64_t v41 = v58;
LABEL_10:
        swift_release();
        sub_1C3F7E2CC(v42, v41);
        sub_1C3F962E0((uint64_t)v15, &qword_1EBBBFC98);
        sub_1C3F9229C(v37, type metadata accessor for Proto_Document);
        v50(v44, 0, 1, v43);
        uint64_t v47 = v3 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
        swift_beginAccess();
        sub_1C3F98338(v44, v47, &qword_1EBBC04F8);
        swift_endAccess();
        return v3;
      }
      sub_1C3F9229C(v39, type metadata accessor for Proto_Document.OneOf_Root);
      uint64_t v42 = v57;
      unint64_t v41 = v58;
      uint64_t v44 = v52;
    }
    sub_1C4496888();
    uint64_t v46 = *(int *)(v43 + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)(v44 + v46) = qword_1EBBC0660;
    swift_retain();
    uint64_t v43 = v51;
    goto LABEL_10;
  }
  swift_release();
  sub_1C3F7E2CC(v27, v30);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3F962E0(v3 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
  sub_1C3F962E0(v3 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
  type metadata accessor for CRDecoder(0);
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t sub_1C3FFF55C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v38 = a3;
  unint64_t v39 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  MEMORY[0x1F4188790](v5 - 8);
  char v35 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 16) = 0;
  *(void *)(v3 + 24) = v13;
  uint64_t v14 = MEMORY[0x1E4FBC868];
  *(void *)(v3 + 32) = v13;
  *(void *)(v3 + 40) = v14;
  *(unsigned char *)(v3 + 48) = 0;
  *(void *)(v3 + 56) = 0;
  uint64_t v15 = v3 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  uint64_t v16 = type metadata accessor for Proto_CRDT(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
  uint64_t v19 = v17 + 56;
  v18(v15, 1, 1, v16);
  uint64_t v20 = v3 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  uint64_t v21 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v36 = a1;
  uint64_t v22 = v37;
  sub_1C3FFB204(v40, (uint64_t)v12, a1, v39);
  if (!v22)
  {
    uint64_t v23 = (uint64_t)v35;
    v33[1] = v19;
    uint64_t v34 = v18;
    uint64_t v24 = v38;
    *(unsigned char *)(v3 + 49) = v40[0];
    sub_1C3FA1E08((uint64_t)v12);
    uint64_t v37 = 0;
    *(void *)(v3 + 16) = v24;
    swift_retain();
    swift_release();
    uint64_t v25 = *(void *)&v12[*(int *)(v10 + 20)]
        + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
    swift_beginAccess();
    sub_1C3F970C4(v25, v23, &qword_1EBBC0598);
    uint64_t v26 = type metadata accessor for Proto_Document.OneOf_Root(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v23, 1, v26) == 1)
    {
      sub_1C3F962E0(v23, &qword_1EBBC0598);
      uint64_t v27 = (uint64_t)v9;
      uint64_t v28 = v16;
    }
    else
    {
      uint64_t v28 = v16;
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v27 = (uint64_t)v9;
        sub_1C3F9775C(v23, (uint64_t)v9, type metadata accessor for Proto_CRDT);
        unint64_t v30 = (void *)&unk_1EBBC5000;
LABEL_10:
        swift_release();
        sub_1C3F7E2CC(v36, v39);
        sub_1C3F9229C((uint64_t)v12, type metadata accessor for Proto_Document);
        v34(v27, 0, 1, v28);
        uint64_t v31 = v3 + v30[317];
        swift_beginAccess();
        sub_1C3F98338(v27, v31, &qword_1EBBC04F8);
        swift_endAccess();
        return v3;
      }
      sub_1C3F9229C(v23, type metadata accessor for Proto_Document.OneOf_Root);
      uint64_t v27 = (uint64_t)v9;
    }
    sub_1C4496888();
    uint64_t v29 = *(int *)(v28 + 20);
    unint64_t v30 = &unk_1EBBC5000;
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)(v27 + v29) = qword_1EBBC0660;
    swift_retain();
    goto LABEL_10;
  }
  swift_release();
  sub_1C3F7E2CC(v36, v39);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3F962E0(v3 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
  sub_1C3F962E0(v3 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
  type metadata accessor for CRDecoder(0);
  swift_deallocPartialClassInstance();
  return v3;
}

uint64_t sub_1C3FFFA80(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0350);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v44 = &v41[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v41[-v8];
  uint64_t v10 = type metadata accessor for Proto_Constants(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v43 = (uint64_t *)&v41[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (uint64_t *)&v41[-v14];
  uint64_t v16 = MEMORY[0x1E4FBC860];
  int v42 = *a2;
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = v16;
  uint64_t v17 = MEMORY[0x1E4FBC868];
  *(void *)(v2 + 32) = v16;
  *(void *)(v2 + 40) = v17;
  *(unsigned char *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  uint64_t v18 = v2 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  uint64_t v19 = type metadata accessor for Proto_CRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v18, 1, 1, v19);
  uint64_t v20 = v2 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  uint64_t v21 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = *(int *)(type metadata accessor for Proto_RetainCounts(0) + 20);
  uint64_t v45 = a1;
  uint64_t v23 = *(void *)(a1 + v22)
      + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  sub_1C3F970C4(v23, (uint64_t)v9, &qword_1EBBC0350);
  uint64_t v24 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48);
  if (v24(v9, 1, v10) == 1)
  {
    *uint64_t v15 = sub_1C4496868();
    v15[1] = v25;
    v15[2] = v16;
    sub_1C4496888();
    sub_1C3F962E0((uint64_t)v9, &qword_1EBBC0350);
  }
  else
  {
    sub_1C3F9775C((uint64_t)v9, (uint64_t)v15, type metadata accessor for Proto_Constants);
  }
  uint64_t v26 = *v15;
  unint64_t v27 = v15[1];
  sub_1C3F7E324(*v15, v27);
  sub_1C3F9229C((uint64_t)v15, type metadata accessor for Proto_Constants);
  uint64_t v28 = v46;
  uint64_t v29 = sub_1C3FA29A4(v26, v27);
  if (v28)
  {
    sub_1C3F7E2CC(v26, v27);
    type metadata accessor for CRDecoder(0);
    sub_1C3F9229C(v45, type metadata accessor for Proto_RetainCounts);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3F962E0(v2 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
    sub_1C3F962E0(v2 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v30 = v29;
    sub_1C3F7E2CC(v26, v27);
    *(void *)(v2 + 24) = v30;
    swift_bridgeObjectRelease();
    uint64_t v31 = *(void *)(v45 + v22);
    uint64_t v32 = v45;
    uint64_t v33 = v31
        + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
    swift_beginAccess();
    uint64_t v34 = v33;
    char v35 = v44;
    sub_1C3F970C4(v34, (uint64_t)v44, &qword_1EBBC0350);
    unsigned int v36 = v24(v35, 1, v10);
    uint64_t v37 = v43;
    if (v36 == 1)
    {
      *uint64_t v37 = sub_1C4496868();
      v37[1] = v38;
      v37[2] = MEMORY[0x1E4FBC860];
      sub_1C4496888();
      sub_1C3F962E0((uint64_t)v35, &qword_1EBBC0350);
    }
    else
    {
      sub_1C3F9775C((uint64_t)v35, (uint64_t)v43, type metadata accessor for Proto_Constants);
    }
    sub_1C3F9229C(v32, type metadata accessor for Proto_RetainCounts);
    uint64_t v39 = v37[2];
    swift_bridgeObjectRetain();
    sub_1C3F9229C((uint64_t)v37, type metadata accessor for Proto_Constants);
    *(void *)(v2 + 32) = v39;
    swift_bridgeObjectRelease();
    *(unsigned char *)(v2 + 49) = v42;
  }
  return v2;
}

uint64_t sub_1C3FFFF8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v9);
  uint64_t v10 = *(void *)(v3 + 16);
  swift_retain();
  return sub_1C41FAA24((uint64_t)v9, v10, a1, a2, a3);
}

uint64_t sub_1C4000040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v9);
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  swift_retain();
  return sub_1C42346A4((uint64_t)v9, v10, a1, a2, a3);
}

uint64_t sub_1C40000F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v11);
  uint64_t v12 = *(void *)(v4 + 16);
  swift_retain();
  return sub_1C437A938((uint64_t)v11, v12, a1, a2, a3, a4);
}

uint64_t sub_1C40001B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v15 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v17);
  uint64_t v18 = *(void *)(v7 + 16);
  swift_retain();
  return sub_1C4144014((uint64_t)v17, v18, a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1C4000290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v13 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v15);
  uint64_t v16 = *(void *)(v6 + 16);
  swift_retain();
  return sub_1C4481804((uint64_t)v15, v16, a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C4000364@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v22 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Proto_OrderedSet(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Proto_CRDT(0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v16);
  uint64_t v17 = *(void *)&v16[*(int *)(v14 + 28)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v17, (uint64_t)v9, &qword_1EBBC0648);
  uint64_t v18 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v9, 1, v18) == 1)
  {
    sub_1C3F962E0((uint64_t)v9, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_1C3F9775C((uint64_t)v9, (uint64_t)v12, type metadata accessor for Proto_OrderedSet);
      goto LABEL_9;
    }
    sub_1C3F9229C((uint64_t)v9, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v19 = *(int *)(v10 + 20);
  if (qword_1EBBBC060 != -1) {
    swift_once();
  }
  *(void *)&v12[v19] = qword_1EBBBC058;
  swift_retain();
LABEL_9:
  sub_1C3F9229C((uint64_t)v16, type metadata accessor for Proto_CRDT);
  uint64_t v20 = *(void *)(v4 + 16);
  swift_retain();
  return sub_1C4103D5C((uint64_t)v12, v20, a1, v22, v23, a4);
}

uint64_t sub_1C4000610@<X0>(uint64_t **a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Sequence(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v22 - v10;
  uint64_t v12 = type metadata accessor for Proto_CRDT(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v15);
  uint64_t v16 = *(void *)&v15[*(int *)(v13 + 28)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v5, &qword_1EBBC0648);
  uint64_t v17 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v5, 1, v17) == 1)
  {
    sub_1C3F962E0((uint64_t)v5, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_1C3F9775C((uint64_t)v5, (uint64_t)v11, type metadata accessor for Proto_Sequence);
      goto LABEL_9;
    }
    sub_1C3F9229C((uint64_t)v5, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v18 = *(int *)(v6 + 20);
  if (qword_1EBBBC000 != -1) {
    swift_once();
  }
  *(void *)&v11[v18] = qword_1EBBBBFF0;
  swift_retain();
LABEL_9:
  sub_1C3F9229C((uint64_t)v15, type metadata accessor for Proto_CRDT);
  uint64_t v19 = *(void *)(v1 + 16);
  sub_1C3FA1CCC((uint64_t)v11, (uint64_t)v9, type metadata accessor for Proto_Sequence);
  type metadata accessor for CRStringRef();
  swift_allocObject();
  swift_retain();
  uint64_t v20 = sub_1C3FE5470((uint64_t)v9, v19);
  uint64_t result = sub_1C3F9229C((uint64_t)v11, type metadata accessor for Proto_Sequence);
  if (!v2) {
    *uint64_t v23 = v20;
  }
  return result;
}

uint64_t sub_1C400093C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_CRDT(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v15);
  uint64_t v16 = *(void *)&v15[*(int *)(v13 + 28)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v8, &qword_1EBBC0648);
  uint64_t v17 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v8, 1, v17) == 1)
  {
    sub_1C3F962E0((uint64_t)v8, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_1C3F9775C((uint64_t)v8, (uint64_t)v11, type metadata accessor for Proto_Sequence);
      goto LABEL_9;
    }
    sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v18 = *(int *)(v9 + 20);
  if (qword_1EBBBC000 != -1) {
    swift_once();
  }
  *(void *)&v11[v18] = qword_1EBBBBFF0;
  swift_retain();
LABEL_9:
  sub_1C3F9229C((uint64_t)v15, type metadata accessor for Proto_CRDT);
  uint64_t v19 = *(void *)(v3 + 16);
  swift_retain();
  return sub_1C4414AB4((uint64_t)v11, v19, a1, v22, a3);
}

uint64_t sub_1C4000BE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v5);
  uint64_t v6 = *(void *)(v1 + 16);
  swift_retain();
  return sub_1C43B6AFC((uint64_t)v5, v6, a1);
}

uint64_t sub_1C4000C7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_CRDT(0);
  uint64_t v13 = v12 - 8;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v15);
  uint64_t v16 = *(void *)&v15[*(int *)(v13 + 28)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v8, &qword_1EBBC0648);
  uint64_t v17 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v8, 1, v17) == 1)
  {
    sub_1C3F962E0((uint64_t)v8, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_1C3F9775C((uint64_t)v8, (uint64_t)v11, type metadata accessor for Proto_Sequence);
      goto LABEL_9;
    }
    sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v18 = *(int *)(v9 + 20);
  if (qword_1EBBBC000 != -1) {
    swift_once();
  }
  *(void *)&v11[v18] = qword_1EBBBBFF0;
  swift_retain();
LABEL_9:
  sub_1C3F9229C((uint64_t)v15, type metadata accessor for Proto_CRDT);
  uint64_t v19 = *(void *)(v3 + 16);
  swift_retain();
  return sub_1C437314C((uint64_t)v11, v19, a1, v22, a3);
}

uint64_t sub_1C4000F20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v30 = a6;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v26 = a2;
  unint64_t v27 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Proto_OrderedSet(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_CRDT(0);
  uint64_t v17 = v16 - 8;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v19);
  uint64_t v20 = *(void *)&v19[*(int *)(v17 + 28)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v12, &qword_1EBBC0648);
  uint64_t v21 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v12, 1, v21) == 1)
  {
    sub_1C3F962E0((uint64_t)v12, &qword_1EBBC0648);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 8)
    {
      sub_1C3F9775C((uint64_t)v12, (uint64_t)v15, type metadata accessor for Proto_OrderedSet);
      goto LABEL_9;
    }
    sub_1C3F9229C((uint64_t)v12, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v22 = *(int *)(v13 + 20);
  if (qword_1EBBBC060 != -1) {
    swift_once();
  }
  *(void *)&v15[v22] = qword_1EBBBC058;
  swift_retain();
LABEL_9:
  sub_1C3F9229C((uint64_t)v19, type metadata accessor for Proto_CRDT);
  uint64_t v23 = *(void *)(v7 + 16);
  swift_retain();
  return sub_1C420A788((uint64_t)v15, v23, a1, v26, v27, v28, v29, v30, a7);
}

void *sub_1C40011D4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Proto_CustomCRDT(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Proto_CRDT(0);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3FBA924((uint64_t)v10);
  uint64_t v11 = *(void *)&v10[*(int *)(v8 + 28)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v11, (uint64_t)v3, &qword_1EBBC0648);
  uint64_t v12 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v3, 1, v12) == 1)
  {
    sub_1C3F962E0((uint64_t)v3, &qword_1EBBC0648);
LABEL_6:
    *uint64_t v6 = MEMORY[0x1E4FBC860];
    sub_1C4496888();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 9)
  {
    sub_1C3F9229C((uint64_t)v3, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_6;
  }
  sub_1C3F9775C((uint64_t)v3, (uint64_t)v6, type metadata accessor for Proto_CustomCRDT);
LABEL_7:
  sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_CRDT);
  uint64_t v13 = *v6;
  swift_bridgeObjectRetain();
  sub_1C3F9229C((uint64_t)v6, type metadata accessor for Proto_CustomCRDT);
  swift_retain();
  uint64_t v14 = sub_1C4014BFC(v13, v0);
  swift_bridgeObjectRelease();
  swift_release();
  return v14;
}

uint64_t CRDecoder.CRDTContainer.deinit()
{
  swift_release();
  return v0;
}

uint64_t CRDecoder.CRDTContainer.__deallocating_deinit()
{
  return sub_1C3F554DC();
}

uint64_t sub_1C40014A0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)(v1 + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v9, (uint64_t)v8, &qword_1EBBC04F8);
  uint64_t v10 = type metadata accessor for Proto_CRDT(0);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10);
  if (result != 1)
  {
    uint64_t v12 = *(void *)&v8[*(int *)(v10 + 20)]
        + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v12, (uint64_t)v5, &qword_1EBBC0648);
    uint64_t v13 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v5, 1, v13) == 1)
    {
      sub_1C3F962E0((uint64_t)v5, &qword_1EBBC0648);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_1C3F9775C((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_Struct);
        return sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_CRDT);
      }
      sub_1C3F9229C((uint64_t)v5, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    *a1 = MEMORY[0x1E4FBC860];
    a1[1] = v14;
    a1[2] = v14;
    type metadata accessor for Proto_Struct(0);
    sub_1C4496888();
    return sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_CRDT);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4001718()
{
  uint64_t v1 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C40014A0(v3);
  uint64_t v4 = *v3;
  swift_bridgeObjectRetain();
  sub_1C3F9229C((uint64_t)v3, type metadata accessor for Proto_Struct);
  swift_retain();
  uint64_t v5 = sub_1C4015050(v4, v0);
  swift_bridgeObjectRelease();
  swift_release();
  return v5;
}

uint64_t sub_1C40017F0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Proto_CRDT(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Struct(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (uint64_t *)((char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (uint64_t *)((char *)&v34 - v13);
  uint64_t v15 = *(void *)(v2 + 16);
  uint64_t v16 = *(void **)(v15 + 32);
  uint64_t v17 = v16[2];
  if (!v17) {
    return 0;
  }
  BOOL v18 = v16[4] == a1 && v16[5] == a2;
  uint64_t v35 = v6;
  if (!v18 && (sub_1C44982E8() & 1) == 0)
  {
    uint64_t v30 = v16 + 7;
    uint64_t v31 = 1;
    while (v17 != v31)
    {
      uint64_t v19 = v31;
      if (*(v30 - 1) != a1 || *v30 != a2)
      {
        char v33 = sub_1C44982E8();
        uint64_t v31 = v19 + 1;
        v30 += 2;
        if ((v33 & 1) == 0) {
          continue;
        }
      }
      goto LABEL_8;
    }
    return 0;
  }
  uint64_t v19 = 0;
LABEL_8:
  sub_1C40014A0(v14);
  uint64_t v20 = *v14;
  swift_bridgeObjectRetain();
  sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_Struct);
  uint64_t v21 = *(void *)(v20 + 16);
  if (!v21)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (*(void *)(v20 + 32) != v19)
  {
    uint64_t v22 = 0;
    uint64_t v23 = v21 - 1;
    while (v23 != v22)
    {
      uint64_t v24 = *(void *)(v20 + 40 + 8 * v22++);
      if (v24 == v19) {
        goto LABEL_14;
      }
    }
    goto LABEL_17;
  }
  uint64_t v22 = 0;
LABEL_14:
  swift_bridgeObjectRelease();
  sub_1C40014A0(v12);
  uint64_t v25 = v12[1];
  swift_bridgeObjectRetain();
  sub_1C3F9229C((uint64_t)v12, type metadata accessor for Proto_Struct);
  uint64_t v26 = *(void *)(v25 + 16);
  swift_bridgeObjectRelease();
  if (v22 >= v26) {
    return 0;
  }
  sub_1C40014A0(v12);
  uint64_t v27 = v12[1];
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C3F9229C((uint64_t)v12, type metadata accessor for Proto_Struct);
  if (v22 < *(void *)(v27 + 16))
  {
    sub_1C3FA1CCC(v27+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v22, (uint64_t)v8, type metadata accessor for Proto_CRDT);
    swift_bridgeObjectRelease();
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    swift_retain();
    uint64_t v29 = sub_1C3FB9A38((uint64_t)v8, v15);
    swift_release();
    return v29;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4001B18(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for Proto_CRDT(0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = &v21[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = &v21[-v15];
  swift_retain();
  uint64_t v17 = sub_1C4015188(a1, v2);
  swift_release();
  sub_1C40014A0(v6);
  sub_1C4001DC8(v17, (uint64_t)v9);
  sub_1C3F9229C((uint64_t)v6, type metadata accessor for Proto_Struct);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_1C3F962E0((uint64_t)v9, &qword_1EBBC04F8);
    return 0;
  }
  else
  {
    sub_1C3F9775C((uint64_t)v9, (uint64_t)v16, type metadata accessor for Proto_CRDT);
    sub_1C3FA1CCC((uint64_t)v16, (uint64_t)v14, type metadata accessor for Proto_CRDT);
    uint64_t v19 = *(void *)(v2 + 16);
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    swift_retain();
    uint64_t v18 = sub_1C3FB9A38((uint64_t)v14, v19);
    swift_release();
    sub_1C3F9229C((uint64_t)v16, type metadata accessor for Proto_CRDT);
  }
  return v18;
}

uint64_t sub_1C4001DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (uint64_t *)((char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 16);
  if (!v15) {
    goto LABEL_11;
  }
  uint64_t v16 = *v2;
  uint64_t v17 = *(void *)(*v2 + 16);
  if (!v17) {
    goto LABEL_11;
  }
  uint64_t v18 = *(void *)(a1 + 32);
  if (*(void *)(v16 + 32) != v18)
  {
    uint64_t v19 = 0;
    uint64_t v20 = v16 + 40;
    uint64_t v21 = v17 - 1;
    while (v21 != v19)
    {
      uint64_t v22 = *(void *)(v20 + 8 * v19++);
      if (v22 == v18) {
        goto LABEL_8;
      }
    }
    goto LABEL_11;
  }
  uint64_t v19 = 0;
LABEL_8:
  uint64_t v23 = v2[1];
  if (v19 >= *(void *)(v23 + 16))
  {
LABEL_11:
    uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 56);
    uint64_t v26 = a2;
    uint64_t v27 = 1;
    goto LABEL_12;
  }
  uint64_t v24 = v23
      + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))
      + *(void *)(v12 + 72) * v19;
  if (v15 != 1)
  {
    sub_1C3FA1CCC(v24, (uint64_t)v14, type metadata accessor for Proto_CRDT);
    uint64_t v29 = *(void *)&v14[*(int *)(v11 + 20)]
        + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v29, (uint64_t)v7, &qword_1EBBC0648);
    uint64_t v30 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 48))(v7, 1, v30) == 1)
    {
      sub_1C3F962E0((uint64_t)v7, &qword_1EBBC0648);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_1C3F9775C((uint64_t)v7, (uint64_t)v10, type metadata accessor for Proto_Struct);
LABEL_21:
        sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_CRDT);
        uint64_t v32 = swift_bridgeObjectRetain();
        sub_1C40021B0(v32, a1 + 32, 1, (2 * v15) | 1, a2);
        swift_bridgeObjectRelease();
        return sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Struct);
      }
      sub_1C3F9229C((uint64_t)v7, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    }
    uint64_t v31 = MEMORY[0x1E4FBC860];
    *uint64_t v10 = MEMORY[0x1E4FBC860];
    v10[1] = v31;
    v10[2] = v31;
    sub_1C4496888();
    goto LABEL_21;
  }
  uint64_t v33 = v12;
  sub_1C3FA1CCC(v24, a2, type metadata accessor for Proto_CRDT);
  uint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
  uint64_t v26 = a2;
  uint64_t v27 = 0;
LABEL_12:
  return v25(v26, v27, 1, v11);
}

uint64_t sub_1C40021B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  v37[1] = a1;
  uint64_t v38 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (void *)((char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for Proto_CRDT(0);
  uint64_t result = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v20 = a4 >> 1;
  if (a4 >> 1 == a3) {
    goto LABEL_13;
  }
  if ((uint64_t)(a4 >> 1) <= a3)
  {
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v21 = *v5;
  uint64_t v22 = *(void *)(*v5 + 16);
  if (!v22) {
    goto LABEL_13;
  }
  uint64_t v23 = *(void *)(v38 + 8 * a3);
  if (*(void *)(v21 + 32) != v23)
  {
    unint64_t v24 = 0;
    uint64_t v25 = v22 - 1;
    uint64_t v26 = v21 + 40;
    while (v25 != v24)
    {
      uint64_t v27 = *(void *)(v26 + 8 * v24++);
      if (v27 == v23) {
        goto LABEL_9;
      }
    }
    goto LABEL_13;
  }
  unint64_t v24 = 0;
LABEL_9:
  uint64_t v28 = v5[1];
  if (v24 >= *(void *)(v28 + 16))
  {
LABEL_13:
    uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    uint64_t v31 = a5;
    uint64_t v32 = 1;
    goto LABEL_14;
  }
  if (__OFSUB__(v20, a3))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v29 = v28
      + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))
      + *(void *)(v17 + 72) * v24;
  if (v20 - a3 != 1)
  {
    v37[0] = v20 - a3;
    sub_1C3FA1CCC(v29, (uint64_t)v19, type metadata accessor for Proto_CRDT);
    uint64_t v33 = *(void *)&v19[*(int *)(v15 + 20)]
        + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v33, (uint64_t)v11, &qword_1EBBC0648);
    uint64_t v34 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v11, 1, v34) == 1)
    {
      sub_1C3F962E0((uint64_t)v11, &qword_1EBBC0648);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_1C3F9775C((uint64_t)v11, (uint64_t)v14, type metadata accessor for Proto_Struct);
LABEL_23:
        uint64_t result = sub_1C3F9229C((uint64_t)v19, type metadata accessor for Proto_CRDT);
        if (!v37[0]) {
          goto LABEL_27;
        }
        if (__OFADD__(a3, 1))
        {
LABEL_33:
          __break(1u);
          return result;
        }
        if (v20 >= a3 + 1)
        {
          int64_t v20 = a3 + 1;
LABEL_27:
          if (v20 >= a3)
          {
            uint64_t v36 = swift_unknownObjectRetain();
            sub_1C40021B0(v36, v38, v20, a4);
            swift_unknownObjectRelease();
            return sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_Struct);
          }
          goto LABEL_32;
        }
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1C3F9229C((uint64_t)v11, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    }
    uint64_t v35 = MEMORY[0x1E4FBC860];
    *uint64_t v14 = MEMORY[0x1E4FBC860];
    v14[1] = v35;
    v14[2] = v35;
    sub_1C4496888();
    goto LABEL_23;
  }
  uint64_t v38 = v17;
  sub_1C3FA1CCC(v29, a5, type metadata accessor for Proto_CRDT);
  uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 56);
  uint64_t v31 = a5;
  uint64_t v32 = 0;
LABEL_14:
  return v30(v31, v32, 1, v15);
}

uint64_t CRDecoder.CRDTKeyedContainer.__deallocating_deinit()
{
  return sub_1C3F554DC();
}

uint64_t sub_1C40025F0@<X0>(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)(v1 + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v9, (uint64_t)v8, &qword_1EBBC0540);
  uint64_t v10 = type metadata accessor for Proto_Value(0);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v8, 1, v10);
  if (result != 1)
  {
    uint64_t v12 = *(void *)&v8[*(int *)(v10 + 20)]
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v12, (uint64_t)v5, &qword_1EBBBF8A0);
    uint64_t v13 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v5, 1, v13) == 1)
    {
      sub_1C3F962E0((uint64_t)v5, &qword_1EBBBF8A0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 13)
      {
        sub_1C3F9775C((uint64_t)v5, (uint64_t)a1, type metadata accessor for Proto_CustomCRValue);
        return sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_Value);
      }
      sub_1C3F9229C((uint64_t)v5, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    }
    uint64_t v14 = MEMORY[0x1E4FBC860];
    *a1 = MEMORY[0x1E4FBC860];
    a1[1] = v14;
    type metadata accessor for Proto_CustomCRValue(0);
    sub_1C4496888();
    return sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_Value);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4002864()
{
  uint64_t v0 = type metadata accessor for Proto_CustomCRValue(0);
  MEMORY[0x1F4188790](v0 - 8);
  uint64_t v2 = (uint64_t *)((char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C40025F0(v2);
  uint64_t v3 = *v2;
  swift_bridgeObjectRetain();
  sub_1C3F9229C((uint64_t)v2, type metadata accessor for Proto_CustomCRValue);
  int64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v12 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C40127E0(0, v4, 0);
    uint64_t v6 = 0;
    uint64_t v7 = v12;
    while (1)
    {
      uint64_t v8 = *(void *)(v3 + 8 * v6 + 32);
      if (v8 < 0) {
        break;
      }
      uint64_t v12 = v7;
      unint64_t v10 = *(void *)(v7 + 16);
      unint64_t v9 = *(void *)(v7 + 24);
      if (v10 >= v9 >> 1)
      {
        uint64_t result = sub_1C40127E0(v9 > 1, v10 + 1, 1);
        uint64_t v7 = v12;
      }
      ++v6;
      *(void *)(v7 + 16) = v10 + 1;
      *(void *)(v7 + 8 * v10 + 32) = v8;
      if (v4 == v6)
      {
        swift_bridgeObjectRelease();
        return v7;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

uint64_t sub_1C40029C4(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Proto_Value(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_CustomCRValue(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  unint64_t v10 = (uint64_t *)((char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (uint64_t *)((char *)&v24 - v11);
  sub_1C40025F0((uint64_t *)((char *)&v24 - v11));
  uint64_t v13 = *v12;
  swift_bridgeObjectRetain();
  sub_1C3F9229C((uint64_t)v12, type metadata accessor for Proto_CustomCRValue);
  if (a1 < 0) {
    goto LABEL_15;
  }
  uint64_t v14 = *(void *)(v13 + 16);
  if (!v14) {
    goto LABEL_11;
  }
  if (*(void *)(v13 + 32) != a1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = v14 - 1;
    while (v16 != v15)
    {
      uint64_t v17 = *(void *)(v13 + 40 + 8 * v15++);
      if (v17 == a1) {
        goto LABEL_8;
      }
    }
LABEL_11:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v15 = 0;
LABEL_8:
  swift_bridgeObjectRelease();
  sub_1C40025F0(v10);
  uint64_t v18 = v10[1];
  swift_bridgeObjectRetain();
  sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_CustomCRValue);
  uint64_t v19 = *(void *)(v18 + 16);
  swift_bridgeObjectRelease();
  if (v15 >= v19) {
    return 0;
  }
  sub_1C40025F0(v10);
  uint64_t v20 = v10[1];
  swift_bridgeObjectRetain();
  sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_CustomCRValue);
  if (v15 < *(void *)(v20 + 16))
  {
    sub_1C3FA1CCC(v20+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(void *)(v4 + 72) * v15, (uint64_t)v6, type metadata accessor for Proto_Value);
    swift_bridgeObjectRelease();
    uint64_t v21 = *(void *)(v1 + 16);
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    swift_retain();
    uint64_t v22 = sub_1C3F974B0((uint64_t)v6, v21);
    swift_release();
    return v22;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C4497F48();
  __break(1u);
  return result;
}

uint64_t CRDecoder.CRValueKeyedContainer.__deallocating_deinit()
{
  return sub_1C3F554DC();
}

uint64_t sub_1C4002CB8()
{
  return sub_1C3F8BCEC();
}

uint64_t sub_1C4002CD0()
{
  return sub_1C4016134();
}

uint64_t sub_1C4002CE8()
{
  uint64_t v1 = sub_1C3F8C540();
  if (!v0) {
    swift_bridgeObjectRetain();
  }
  return v1;
}

uint64_t sub_1C4002D24()
{
  return sub_1C3F8D610();
}

uint64_t sub_1C4002D3C()
{
  return sub_1C40157D8();
}

uint64_t sub_1C4002D54()
{
  return sub_1C4015C7C();
}

uint64_t sub_1C4002D6C@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Value(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_Version(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (uint64_t *)((char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v24 - v16;
  uint64_t v18 = *(void *)(v1 + 16);
  uint64_t v19 = v18 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v19, (uint64_t)v7, &qword_1EBBC0540);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C3F9775C((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Value);
    uint64_t v21 = *(void *)&v11[*(int *)(v8 + 20)]
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v21, (uint64_t)v4, &qword_1EBBBF8A0);
    sub_1C3F9229C((uint64_t)v11, type metadata accessor for Proto_Value);
    uint64_t v22 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v4, 1, v22) == 1)
    {
      sub_1C3F962E0((uint64_t)v4, &qword_1EBBBF8A0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        sub_1C3F9775C((uint64_t)v4, (uint64_t)v17, type metadata accessor for Proto_Version);
        sub_1C3FA1CCC((uint64_t)v17, (uint64_t)v15, type metadata accessor for Proto_Version);
        swift_retain();
        sub_1C3F8F9D0(v15, v18, v25);
        return sub_1C3F9229C((uint64_t)v17, type metadata accessor for Proto_Version);
      }
      sub_1C3F9229C((uint64_t)v4, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    }
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v23 = 0xD00000000000001BLL;
    *(void *)(v23 + 8) = 0x80000001C44B1220;
    *(unsigned char *)(v23 + 16) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1C4003154@<X0>(void *a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Value(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_Asset(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v1 + 16);
  uint64_t v16 = v15 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v7, &qword_1EBBC0540);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_1C3F9775C((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Value);
  uint64_t v18 = *(void *)&v11[*(int *)(v8 + 20)]
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v4, &qword_1EBBBF8A0);
  sub_1C3F9229C((uint64_t)v11, type metadata accessor for Proto_Value);
  uint64_t v19 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v4, 1, v19) != 1)
  {
    if (swift_getEnumCaseMultiPayload() != 12)
    {
      sub_1C3F9229C((uint64_t)v4, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      goto LABEL_9;
    }
    uint64_t result = sub_1C3F9775C((uint64_t)v4, (uint64_t)v14, type metadata accessor for Proto_Asset);
    uint64_t v20 = *(void *)(v15 + 16);
    if (*(unsigned char *)(v15 + 48) != 1)
    {
      if (v20)
      {
        uint64_t v24 = *((void *)v14 + 1);
        unint64_t v25 = *((void *)v14 + 2);
        uint64_t v26 = *(void (**)(uint64_t, uint64_t, unint64_t))(*(void *)v20 + 200);
        swift_retain();
        sub_1C3F7E324(v24, v25);
        v26(v15, v24, v25);
        sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_Asset);
        sub_1C3F7E2CC(v24, v25);
        return swift_release();
      }
      goto LABEL_15;
    }
    if (v20)
    {
      uint64_t v21 = *((void *)v14 + 1);
      unint64_t v22 = *((void *)v14 + 2);
      swift_retain();
      sub_1C3F7E324(v21, v22);
      sub_1C43C63D4(v21, v22, v28);
      sub_1C3F7E2CC(v21, v22);
      swift_release();
      return sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_Asset);
    }
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    return result;
  }
  sub_1C3F962E0((uint64_t)v4, &qword_1EBBBF8A0);
LABEL_9:
  sub_1C3FE3FF0();
  swift_allocError();
  *(void *)uint64_t v23 = 0xD000000000000019;
  *(void *)(v23 + 8) = 0x80000001C44B1240;
  *(unsigned char *)(v23 + 16) = 0;
  return swift_willThrow();
}

uint64_t sub_1C40035C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v46 = a2;
  uint64_t v47 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v45 = (uint64_t)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v42 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = type metadata accessor for Proto_Value(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v44 = (uint64_t)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v42 - v19;
  uint64_t v21 = type metadata accessor for Proto_Optional(0);
  MEMORY[0x1F4188790](v21);
  uint64_t v50 = (uint64_t)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)(v3 + 16);
  uint64_t v23 = v43 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v23, (uint64_t)v14, &qword_1EBBC0540);
  uint64_t v24 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t result = v24(v14, 1, v15);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  sub_1C3F9775C((uint64_t)v14, (uint64_t)v20, type metadata accessor for Proto_Value);
  uint64_t v26 = *(void *)&v20[*(int *)(v15 + 20)]
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v26, (uint64_t)v6, &qword_1EBBBF8A0);
  sub_1C3F9229C((uint64_t)v20, type metadata accessor for Proto_Value);
  uint64_t v27 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v6, 1, v27) == 1)
  {
    sub_1C3F962E0((uint64_t)v6, &qword_1EBBBF8A0);
LABEL_8:
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v34 = 0xD00000000000001ALL;
    *(void *)(v34 + 8) = 0x80000001C44B1260;
    *(unsigned char *)(v34 + 16) = 0;
    return swift_willThrow();
  }
  if (swift_getEnumCaseMultiPayload() != 8)
  {
    sub_1C3F9229C((uint64_t)v6, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_8;
  }
  uint64_t v28 = v50;
  sub_1C3F9775C((uint64_t)v6, v50, type metadata accessor for Proto_Optional);
  uint64_t v29 = *(int *)(v21 + 20);
  uint64_t v30 = *(void *)(v28 + v29)
      + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  sub_1C3F970C4(v30, (uint64_t)v12, &qword_1EBBC0540);
  LODWORD(v30) = v24(v12, 1, v15);
  sub_1C3F962E0((uint64_t)v12, &qword_1EBBC0540);
  if (v30 == 1)
  {
    sub_1C3F9229C(v28, type metadata accessor for Proto_Optional);
    uint64_t v31 = 1;
    uint64_t v32 = v48;
    uint64_t v33 = v47;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v33, v31, 1, v32);
  }
  uint64_t v35 = *(void *)(v28 + v29)
      + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  uint64_t v36 = v45;
  sub_1C3F970C4(v35, v45, &qword_1EBBC0540);
  if (v24((char *)v36, 1, v15) == 1)
  {
    uint64_t v37 = v44;
    sub_1C4496888();
    uint64_t v38 = *(int *)(v15 + 20);
    uint64_t v33 = v47;
    uint64_t v32 = v48;
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)(v37 + v38) = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0(v36, &qword_1EBBC0540);
  }
  else
  {
    uint64_t v37 = v44;
    sub_1C3F9775C(v36, v44, type metadata accessor for Proto_Value);
    uint64_t v33 = v47;
    uint64_t v32 = v48;
  }
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  uint64_t v39 = v43;
  swift_retain();
  uint64_t v40 = sub_1C3F974B0(v37, v39);
  swift_release();
  uint64_t v41 = v49;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v46 + 8) + 8) + 8))(v40, v32);
  uint64_t result = sub_1C3F9229C(v28, type metadata accessor for Proto_Optional);
  if (!v41)
  {
    uint64_t v31 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v33, v31, 1, v32);
  }
  return result;
}

uint64_t sub_1C4003C00(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Value(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v2 + 16);
  uint64_t v13 = v12 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v13, (uint64_t)v7, &qword_1EBBC0540);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C3F9775C((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto_Value);
    swift_retain();
    return sub_1C41279DC((uint64_t)v11, v12, a1, a2);
  }
  return result;
}

uint64_t sub_1C4003DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v16 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Value(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v3 + 16);
  uint64_t v14 = v13 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v14, (uint64_t)v8, &qword_1EBBC0540);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C3F9775C((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto_Value);
    swift_retain();
    return sub_1C412965C((uint64_t)v12, v13, a1, a2, v16);
  }
  return result;
}

uint64_t sub_1C4003F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v19 = a4;
  uint64_t v20 = a5;
  uint64_t v18 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Proto_Value(0);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v5 + 16);
  uint64_t v16 = v15 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v10, &qword_1EBBC0540);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1C3F9775C((uint64_t)v10, (uint64_t)v14, type metadata accessor for Proto_Value);
    swift_retain();
    return sub_1C4241E4C((uint64_t)v14, v15, a1, a2, v18, v19, v20);
  }
  return result;
}

uint64_t sub_1C4004128()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v33 = (uint64_t)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t v9 = type metadata accessor for Proto_Value(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v31 = (uint64_t)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = type metadata accessor for Proto_TaggedValue(0);
  MEMORY[0x1F4188790](v15);
  uint64_t v32 = (uint64_t)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v0 + 16);
  uint64_t v18 = v17 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v8, &qword_1EBBC0540);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t result = v19(v8, 1, v9);
  if (result != 1)
  {
    sub_1C3F9775C((uint64_t)v8, (uint64_t)v14, type metadata accessor for Proto_Value);
    uint64_t v21 = *(void *)&v14[*(int *)(v9 + 20)]
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v21, (uint64_t)v3, &qword_1EBBBF8A0);
    sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_Value);
    uint64_t v22 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v3, 1, v22) == 1)
    {
      sub_1C3F962E0((uint64_t)v3, &qword_1EBBBF8A0);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 11)
      {
        uint64_t v23 = v32;
        sub_1C3F9775C((uint64_t)v3, v32, type metadata accessor for Proto_TaggedValue);
        uint64_t v24 = *(void *)(v23 + *(int *)(v15 + 20));
        swift_beginAccess();
        uint64_t v3 = *(char **)(v24 + 16);
        uint64_t v25 = v24
            + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
        swift_beginAccess();
        uint64_t v26 = v33;
        sub_1C3F970C4(v25, v33, &qword_1EBBC0540);
        if (v19((char *)v26, 1, v9) == 1)
        {
          uint64_t v27 = v31;
          sub_1C4496888();
          uint64_t v28 = *(int *)(v9 + 20);
          if (qword_1EBBBF8C8 != -1) {
            swift_once();
          }
          *(void *)(v27 + v28) = qword_1EBBBF8B8;
          swift_retain();
          sub_1C3F962E0(v26, &qword_1EBBC0540);
        }
        else
        {
          uint64_t v27 = v31;
          sub_1C3F9775C(v26, v31, type metadata accessor for Proto_Value);
        }
        type metadata accessor for CRDecoder(0);
        swift_allocObject();
        swift_retain();
        sub_1C3F974B0(v27, v17);
        swift_release();
        sub_1C3F9229C(v23, type metadata accessor for Proto_TaggedValue);
        return (uint64_t)v3;
      }
      sub_1C3F9229C((uint64_t)v3, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    }
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v29 = 0xD00000000000001ELL;
    *(void *)(v29 + 8) = 0x80000001C44B1280;
    *(unsigned char *)(v29 + 16) = 0;
    swift_willThrow();
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t CRDecoder.deinit()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3F962E0(v0 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
  sub_1C3F962E0(v0 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
  return v0;
}

uint64_t (*sub_1C40046BC())()
{
  return j__swift_endAccess;
}

void CREncoder.version.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 72);
}

uint64_t CREncoder.__allocating_init()()
{
  uint64_t v5 = 0;
  memset(v4, 0, sizeof(v4));
  id v0 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v4);
  sub_1C3F962E0((uint64_t)v4, qword_1EBBC0C90);
  type metadata accessor for CREncoder();
  uint64_t result = swift_allocObject();
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = MEMORY[0x1E4FBC868];
  *(void *)(result + 32) = MEMORY[0x1E4FBC868];
  *(void *)(result + 40) = v2;
  *(void *)(result + 48) = v2;
  *(void *)(result + 56) = v3;
  *(void *)(result + 64) = v2;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 16) = v0;
  *(void *)(result + 24) = v2;
  *(unsigned char *)(result + 72) = 1;
  return result;
}

uint64_t CREncoder.__allocating_init(_:)(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = MEMORY[0x1E4FBC868];
  *(void *)(result + 32) = MEMORY[0x1E4FBC868];
  *(void *)(result + 40) = v3;
  *(void *)(result + 48) = v3;
  *(void *)(result + 56) = v4;
  *(void *)(result + 64) = v3;
  *(void *)(result + 80) = 0;
  *(void *)(result + 88) = 0;
  *(void *)(result + 16) = a1;
  *(void *)(result + 24) = v3;
  *(unsigned char *)(result + 72) = 1;
  return result;
}

uint64_t CREncoder.init(_:)(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v3 = MEMORY[0x1E4FBC868];
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC868];
  *(void *)(v1 + 40) = v2;
  *(void *)(v1 + 48) = v2;
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = v2;
  *(void *)(v1 + 80) = 0;
  *(void *)(v1 + 88) = 0;
  *(void *)(v1 + 16) = a1;
  *(void *)(v1 + 24) = v2;
  *(unsigned char *)(v1 + 72) = 1;
  return v1;
}

uint64_t CREncoder.init(_:version:)(uint64_t a1, char *a2)
{
  uint64_t v3 = MEMORY[0x1E4FBC860];
  uint64_t v4 = MEMORY[0x1E4FBC868];
  char v5 = *a2;
  *(void *)(v2 + 32) = MEMORY[0x1E4FBC868];
  *(void *)(v2 + 40) = v3;
  *(void *)(v2 + 48) = v3;
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = v3;
  *(void *)(v2 + 80) = 0;
  *(void *)(v2 + 88) = 0;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  *(unsigned char *)(v2 + 72) = v5;
  return v2;
}

uint64_t sub_1C4004870(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_beginAccess();
  uint64_t v6 = *(void *)(v2 + 56);
  if (*(void *)(v6 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_1C3FB9894(a1, a2);
    if (v8)
    {
      uint64_t v9 = *(void *)(*(void *)(v6 + 56) + 8 * v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 0x8000000000000000) == 0) {
        return v9;
      }
      sub_1C4497F48();
      __break(1u);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = (void *)(v3 + 40);
  swift_beginAccess();
  uint64_t v9 = *(void *)(*(void *)(v3 + 40) + 16);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *(void *)(v3 + 56);
  *(void *)(v3 + 56) = 0x8000000000000000;
  sub_1C44207F4(v9, a1, a2, isUniquelyReferenced_nonNull_native);
  *(void *)(v3 + 56) = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v12 = *(void **)(v3 + 40);
  swift_bridgeObjectRetain();
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v3 + 40) = v12;
  if ((v13 & 1) == 0)
  {
    uint64_t v12 = sub_1C3FF1198(0, v12[2] + 1, 1, v12);
    *uint64_t v10 = v12;
  }
  unint64_t v15 = v12[2];
  unint64_t v14 = v12[3];
  if (v15 >= v14 >> 1)
  {
    uint64_t v12 = sub_1C3FF1198((void *)(v14 > 1), v15 + 1, 1, v12);
    *uint64_t v10 = v12;
  }
  v12[2] = v15 + 1;
  uint64_t v16 = &v12[2 * v15];
  v16[4] = a1;
  v16[5] = a2;
  swift_endAccess();
  return v9;
}

uint64_t sub_1C4004AA0@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1;
  sub_1C4496888();
  uint64_t v15 = *(int *)(type metadata accessor for Proto_Document(0) + 20);
  if (qword_1EBBC0328 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1EBBC05C0;
  *(void *)(a3 + v15) = qword_1EBBC05C0;
  MEMORY[0x1F4188790](v16);
  v24[-2] = &v25;
  v24[-1] = v6;
  swift_retain();
  sub_1C3F5585C(a2, (uint64_t)v14);
  if (v4) {
    return sub_1C3F9229C(a3, type metadata accessor for Proto_Document);
  }
  sub_1C3FA1CCC((uint64_t)v14, (uint64_t)v11, type metadata accessor for Proto_CRDT);
  uint64_t v18 = type metadata accessor for Proto_Document.OneOf_Root(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 0, 1, v18);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v19 = swift_retain();
    *(void *)(a3 + v15) = sub_1C3F7CB4C(v19);
    swift_release();
  }
  uint64_t v20 = *(void *)(a3 + v15)
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v11, v20, &qword_1EBBC0598);
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  uint64_t v21 = *(void *)(v6 + 64);
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v22 = swift_retain();
    *(void *)(a3 + v15) = sub_1C3F7CB4C(v22);
    swift_release();
  }
  uint64_t v23 = (void *)(*(void *)(a3 + v15)
                 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__references);
  swift_beginAccess();
  *uint64_t v23 = v21;
  swift_bridgeObjectRelease();
  sub_1C3FB065C(a3);
  return sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_CRDT);
}

uint64_t sub_1C4004E20()
{
  uint64_t v1 = type metadata accessor for Proto_CustomCRDT(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (uint64_t *)((char *)&v11 - v5);
  uint64_t result = sub_1C3F62C10();
  if (!v0)
  {
    uint64_t v8 = result;
    swift_retain();
    sub_1C4496888();
    swift_retain();
    uint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = sub_1C4161CFC(v9, v8);
    swift_bridgeObjectRelease();
    swift_release();
    *uint64_t v6 = v10;
    sub_1C3FA1CCC((uint64_t)v6, (uint64_t)v4, type metadata accessor for Proto_CustomCRDT);
    swift_beginAccess();
    sub_1C43EF638((uint64_t)v4);
    swift_release();
    return sub_1C3F9229C((uint64_t)v6, type metadata accessor for Proto_CustomCRDT);
  }
  return result;
}

uint64_t sub_1C4004FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_1C3F62C10();
  if (!v2)
  {
    uint64_t v9 = result;
    type metadata accessor for CREncoder.CRDTKeyedContainer();
    uint64_t inited = swift_initStackObject();
    uint64_t v11 = MEMORY[0x1E4FBC860];
    *(void *)(inited + 16) = v9;
    *(void *)(inited + 24) = a2;
    *uint64_t v7 = v11;
    v7[1] = v11;
    _OWORD v7[2] = v11;
    swift_retain();
    swift_retain();
    sub_1C4496888();
    swift_beginAccess();
    sub_1C3F62D84((uint64_t)v7);
    sub_1C4248678(inited, a1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C40050E8()
{
  uint64_t v1 = type metadata accessor for Proto_Counter(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C3F62C10();
  if (!v0)
  {
    uint64_t v8 = result;
    uint64_t v9 = *(void *)(result + 16);
    swift_retain();
    sub_1C4496888();
    uint64_t v10 = *(int *)(v4 + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)&v6[v10] = qword_1EBBC0660;
    swift_retain();
    sub_1C43BA640();
    sub_1C43BA71C(v9, (uint64_t)v3);
    swift_release();
    sub_1C43F1D5C((uint64_t)v3);
    uint64_t v11 = v8 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v6, v11, type metadata accessor for Proto_CRDT);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C40052B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_Value(0);
  MEMORY[0x1F4188790](v12 - 8);
  unint64_t v14 = (char *)v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4496888();
  uint64_t v15 = *(int *)(type metadata accessor for Proto_Document(0) + 20);
  if (qword_1EBBC0328 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_1EBBC05C0;
  *(void *)(a4 + v15) = qword_1EBBC05C0;
  MEMORY[0x1F4188790](v16);
  v22[-4] = a2;
  v22[-3] = a3;
  v22[-2] = a1;
  v22[-1] = v4;
  swift_retain();
  uint64_t v17 = v22[5];
  sub_1C3F6DC00((void (*)(uint64_t))sub_1C4018244, (uint64_t)v14);
  if (v17) {
    return sub_1C3F9229C(a4, type metadata accessor for Proto_Document);
  }
  sub_1C3FA1CCC((uint64_t)v14, (uint64_t)v11, type metadata accessor for Proto_Value);
  uint64_t v19 = type metadata accessor for Proto_Document.OneOf_Root(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 0, 1, v19);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v20 = swift_retain();
    *(void *)(a4 + v15) = sub_1C3F7CB4C(v20);
    swift_release();
  }
  uint64_t v21 = *(void *)(a4 + v15)
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v11, v21, &qword_1EBBC0598);
  swift_endAccess();
  swift_release();
  sub_1C3FB065C(a4);
  return sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_Value);
}

uint64_t sub_1C40055A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3F5A1A8(a1, a2, a3, (void (*)(uint64_t))sub_1C4018204, a4);
}

uint64_t sub_1C40055D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4496888();
  uint64_t v13 = *(int *)(type metadata accessor for Proto_Document(0) + 20);
  if (qword_1EBBC0328 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EBBC05C0;
  *(void *)(a2 + v13) = qword_1EBBC05C0;
  MEMORY[0x1F4188790](v14);
  *(&v19 - 2) = a1;
  *(&v19 - 1) = v4;
  swift_retain();
  sub_1C3F5585C((void (*)(uint64_t))sub_1C40181A0, (uint64_t)v12);
  if (v3) {
    return sub_1C3F9229C(a2, type metadata accessor for Proto_Document);
  }
  sub_1C3FA1CCC((uint64_t)v12, (uint64_t)v9, type metadata accessor for Proto_CRDT);
  uint64_t v16 = type metadata accessor for Proto_Document.OneOf_Root(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v9, 0, 1, v16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v17 = swift_retain();
    *(void *)(a2 + v13) = sub_1C3F7CB4C(v17);
    swift_release();
  }
  uint64_t v18 = *(void *)(a2 + v13)
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v9, v18, &qword_1EBBC0598);
  swift_endAccess();
  swift_release();
  sub_1C3FB065C(a2);
  return sub_1C3F9229C((uint64_t)v12, type metadata accessor for Proto_CRDT);
}

unsigned char *sub_1C40058B4()
{
  uint64_t v0 = sub_1C4496678();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Capsule();
  Capsule<>.rootID.getter((uint64_t *)&v10);
  long long v9 = v10;
  Capsule.version.getter(v4, &v8);
  long long v7 = v8;
  Capsule.versionUUID.getter(v4, (uint64_t)v3);
  uint64_t v5 = sub_1C4005A28((uint64_t *)&v9, &v7, 0, (uint64_t)v3);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3F7E2CC(v9, *((unint64_t *)&v9 + 1));
  return v5;
}

unsigned char *sub_1C4005A28(uint64_t *a1, long long *a2, int a3, uint64_t a4)
{
  uint64_t v82 = a4;
  int v71 = a3;
  uint64_t v92 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v83 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  int v81 = &v70[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v9);
  char v80 = &v70[-v11];
  uint64_t v12 = type metadata accessor for Proto_Version(0);
  uint64_t v78 = *(void *)(v12 - 8);
  uint64_t v79 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v77 = &v70[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v76 = &v70[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = &v70[-v17];
  uint64_t v85 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v75 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v20 = &v70[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = &v70[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v24);
  uint64_t v26 = &v70[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = *a1;
  unint64_t v27 = a1[1];
  long long v74 = *a2;
  sub_1C4496888();
  uint64_t v72 = v24;
  uint64_t v29 = *(int *)(v24 + 20);
  if (qword_1EBBC0328 != -1) {
    swift_once();
  }
  *(void *)&v26[v29] = qword_1EBBC05C0;
  swift_retain();
  sub_1C4496888();
  uint64_t v30 = *(int *)(v21 + 20);
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)&v23[v30] = qword_1EBBBC808;
  *uint64_t v20 = MEMORY[0x1E4FBC860];
  swift_retain();
  uint64_t v31 = sub_1C4496868();
  uint64_t v86 = v23;
  unint64_t v33 = v32;
  sub_1C4496888();
  sub_1C3F7E324(v28, v27);
  unint64_t v34 = v33;
  uint64_t v35 = (uint64_t)v86;
  sub_1C3F7E2CC(v31, v34);
  v20[1] = v28;
  v20[2] = v27;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    uint64_t v36 = swift_retain();
    *(void *)(v35 + v30) = sub_1C3FB0204(v36);
    swift_release();
  }
  uint64_t v37 = *(void *)(v35 + v30);
  sub_1C3F9775C((uint64_t)v20, (uint64_t)v18, type metadata accessor for Proto_KeyPath);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v75 + 56))(v18, 0, 1, v85);
  uint64_t v38 = v76;
  sub_1C3F961BC((uint64_t)v18, (uint64_t)v76, &qword_1EBBC0560);
  uint64_t v39 = v37 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v38, v39, &qword_1EBBC0560);
  swift_endAccess();
  swift_release();
  long long v91 = v74;
  uint64_t v40 = v77;
  uint64_t v41 = v84;
  sub_1C3F9FF10(v84, v77);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v42 = swift_retain();
    *(void *)&v26[v29] = sub_1C3F7CB4C(v42);
    swift_release();
  }
  uint64_t v43 = *(void *)&v26[v29];
  uint64_t v44 = (uint64_t)v40;
  uint64_t v45 = v80;
  sub_1C3F9775C(v44, (uint64_t)v80, type metadata accessor for Proto_Version);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v78 + 56))(v45, 0, 1, v79);
  uint64_t v46 = v81;
  sub_1C3F961BC((uint64_t)v45, (uint64_t)v81, &qword_1EBBC0578);
  uint64_t v47 = v43 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v46, v47, &qword_1EBBC0578);
  swift_endAccess();
  swift_release();
  uint64_t v48 = sub_1C3F5DF48();
  uint64_t v50 = v49;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v51 = swift_retain();
    *(void *)&v26[v29] = sub_1C3F7CB4C(v51);
    swift_release();
  }
  uint64_t v52 = (uint64_t *)(*(void *)&v26[v29]
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__versionUuid);
  swift_beginAccess();
  uint64_t v53 = *v52;
  unint64_t v54 = v52[1];
  *uint64_t v52 = v48;
  v52[1] = v50;
  sub_1C3F7E2CC(v53, v54);
  uint64_t v55 = (uint64_t)v86;
  uint64_t v56 = v83;
  sub_1C3FA1CCC((uint64_t)v86, (uint64_t)v83, type metadata accessor for Proto_Reference);
  uint64_t v57 = type metadata accessor for Proto_Document.OneOf_Root(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v58 = swift_retain();
    *(void *)&v26[v29] = sub_1C3F7CB4C(v58);
    swift_release();
  }
  uint64_t v59 = *(void *)&v26[v29]
      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v56, v59, &qword_1EBBC0598);
  swift_endAccess();
  swift_release();
  uint64_t v60 = (unsigned char *)v41;
  sub_1C3FB065C((uint64_t)v26);
  if (*(unsigned char *)(v41 + 72))
  {
    if (*(unsigned char *)(v41 + 72) == 1)
    {
      sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
      uint64_t v60 = v26;
      uint64_t v61 = v73;
      uint64_t v62 = sub_1C4496AA8();
      if (!v61) {
        uint64_t v60 = (unsigned char *)v62;
      }
    }
    else
    {
      memset(v87, 0, sizeof(v87));
      unsigned __int8 v88 = 8;
      uint64_t v64 = v73;
      sub_1C3F73B18((uint64_t)v87, (uint64_t)&v87[8], 6, v71);
      uint64_t v89 = *(unsigned char **)v87;
      unint64_t v90 = *(unsigned int *)&v87[8] | ((unint64_t)v87[12] << 32) | ((unint64_t)v87[13] << 40) | ((unint64_t)v88 << 48);
      sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
      uint64_t v60 = v26;
      uint64_t v65 = sub_1C4496AA8();
      if (!v64)
      {
        uint64_t v67 = v65;
        unint64_t v68 = v66;
        sub_1C4496588();
        sub_1C3F7E2CC(v67, v68);
        uint64_t v60 = v89;
      }
    }
  }
  else
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v63 = 0xD000000000000026;
    *(void *)(v63 + 8) = 0x80000001C44B1550;
    *(unsigned char *)(v63 + 16) = 3;
    swift_willThrow();
  }
  sub_1C3F9229C(v55, type metadata accessor for Proto_Reference);
  sub_1C3F9229C((uint64_t)v26, type metadata accessor for Proto_Document);
  return v60;
}

uint64_t sub_1C4006430@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = &v24[-v11];
  uint64_t v13 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = &v24[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = *a1;
  sub_1C4496888();
  uint64_t v17 = *(int *)(type metadata accessor for Proto_Document(0) + 20);
  if (qword_1EBBC0328 != -1) {
    swift_once();
  }
  *(void *)(a2 + v17) = qword_1EBBC05C0;
  swift_beginAccess();
  *(void *)(v4 + 48) = 0;
  swift_retain();
  swift_bridgeObjectRelease();
  swift_retain();
  uint64_t v18 = swift_retain();
  sub_1C400BB3C(v18, v16, v4, (uint64_t)v15);
  if (v3) {
    return sub_1C3F9229C(a2, type metadata accessor for Proto_Document);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v20 = swift_retain();
    *(void *)(a2 + v17) = sub_1C3F7CB4C(v20);
    swift_release();
  }
  uint64_t v21 = *(void *)(a2 + v17);
  sub_1C3F9775C((uint64_t)v15, (uint64_t)v12, type metadata accessor for Proto_CRDT);
  uint64_t v22 = type metadata accessor for Proto_Document.OneOf_Root(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v12, 0, 1, v22);
  sub_1C3F961BC((uint64_t)v12, (uint64_t)v10, &qword_1EBBC0598);
  uint64_t v23 = v21 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v10, v23, &qword_1EBBC0598);
  swift_endAccess();
  swift_release();
  return sub_1C3FB065C(a2);
}

uint64_t sub_1C400672C(uint64_t *a1)
{
  v18[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = type metadata accessor for Proto_Document(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = &v16[-v8 - 8];
  if (*(unsigned char *)(v1 + 72))
  {
    if (*(unsigned char *)(v1 + 72) == 1)
    {
      v18[0] = *a1;
      sub_1C4006430(v18, (uint64_t)&v16[-v8 - 8]);
      if (!v2)
      {
        sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
        uint64_t v1 = sub_1C4496AA8();
LABEL_9:
        sub_1C3F9229C((uint64_t)v9, type metadata accessor for Proto_Document);
      }
    }
    else
    {
      v18[0] = *a1;
      sub_1C4006430(v18, (uint64_t)v7);
      if (!v2)
      {
        memset(v16, 0, sizeof(v16));
        unsigned __int8 v17 = 8;
        sub_1C3F73B18((uint64_t)v16, (uint64_t)&v16[8], 6, 0);
        v18[0] = *(void *)v16;
        v18[1] = *(unsigned int *)&v16[8] | ((unint64_t)v16[12] << 32) | ((unint64_t)v16[13] << 40) | ((unint64_t)v17 << 48);
        sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
        uint64_t v12 = sub_1C4496AA8();
        unint64_t v14 = v13;
        sub_1C4496588();
        sub_1C3F7E2CC(v12, v14);
        uint64_t v1 = v18[0];
        uint64_t v9 = v7;
        goto LABEL_9;
      }
    }
  }
  else
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v10 = 0xD000000000000026;
    *(void *)(v10 + 8) = 0x80000001C44B1550;
    *(unsigned char *)(v10 + 16) = 3;
    swift_willThrow();
  }
  return v1;
}

uint64_t sub_1C4006A2C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t isEscapingClosureAtFileLocation@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v56 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v48 - v11;
  uint64_t v57 = type metadata accessor for Proto_Version(0);
  uint64_t v64 = *(void *)(v57 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v57);
  uint64_t v53 = (uint64_t *)((char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (uint64_t *)((char *)&v48 - v15);
  unsigned __int8 v17 = *(NSObject **)a2;
  uint64_t v18 = *(void *)(a2 + 8);
  uint64_t v19 = *(void **)(a2 + 24);
  uint64_t v52 = *(NSObject **)(a2 + 16);
  uint64_t v20 = *(void *)(a2 + 32);
  uint64_t v21 = *(void *)(a2 + 40);
  uint64_t v54 = v20;
  swift_beginAccess();
  *(void *)(v4 + 24) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v4 + 32) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v4 + 48) = 0;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v4 + 72))
  {
    uint64_t v50 = v21;
    uint64_t v49 = a1;
    sub_1C4496888();
    uint64_t v22 = *(int *)(type metadata accessor for Proto_Document(0) + 20);
    if (qword_1EBBC0328 != -1) {
      goto LABEL_20;
    }
    while (1)
    {
      *(void *)(isEscapingClosureAtFileLocation + v22) = qword_1EBBC05C0;
      aBlock = v17;
      uint64_t v59 = v18;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F9FF10(v4, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Document._StorageClass(0);
        swift_allocObject();
        uint64_t v23 = swift_retain();
        *(void *)(isEscapingClosureAtFileLocation + v22) = sub_1C3F7CB4C(v23);
        swift_release();
      }
      uint64_t v24 = *(void *)(isEscapingClosureAtFileLocation + v22);
      sub_1C3F9775C((uint64_t)v16, (uint64_t)v12, type metadata accessor for Proto_Version);
      uint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56);
      v64 += 56;
      uint64_t v51 = v25;
      v25(v12, 0, 1, v57);
      uint64_t v26 = v56;
      sub_1C3F961BC((uint64_t)v12, v56, &qword_1EBBC0578);
      uint64_t v27 = v24
          + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v26, v27, &qword_1EBBC0578);
      swift_endAccess();
      swift_release();
      aBlock = v52;
      uint64_t v59 = (uint64_t)v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v28 = v53;
      sub_1C3F9FF10(v4, v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Document._StorageClass(0);
        swift_allocObject();
        uint64_t v29 = swift_retain();
        *(void *)(isEscapingClosureAtFileLocation + v22) = sub_1C3F7CB4C(v29);
        swift_release();
      }
      uint64_t v30 = *(void *)(isEscapingClosureAtFileLocation + v22);
      sub_1C3F9775C((uint64_t)v28, (uint64_t)v12, type metadata accessor for Proto_Version);
      v51(v12, 0, 1, v57);
      uint64_t v31 = v56;
      sub_1C3F961BC((uint64_t)v12, v56, &qword_1EBBC0578);
      uint64_t v32 = v30
          + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__minVersion;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v31, v32, &qword_1EBBC0578);
      swift_endAccess();
      swift_release();
      swift_retain();
      uint64_t v33 = swift_bridgeObjectRetain();
      uint64_t v34 = v55;
      uint64_t v35 = sub_1C4015408(v33, v4, sub_1C4479730, (void (*)(uint64_t, void *, uint64_t))sub_1C400BD28);
      uint64_t v18 = v34;
      swift_bridgeObjectRelease();
      swift_release();
      if (v34) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Document._StorageClass(0);
        swift_allocObject();
        uint64_t v36 = swift_retain();
        *(void *)(isEscapingClosureAtFileLocation + v22) = sub_1C3F7CB4C(v36);
        swift_release();
      }
      uint64_t v37 = (uint64_t *)(*(void *)(isEscapingClosureAtFileLocation + v22)
                      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__deltaReferences);
      swift_beginAccess();
      *uint64_t v37 = v35;
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v38 = swift_bridgeObjectRetain();
      uint64_t v39 = sub_1C4015408(v38, v4, sub_1C4479730, (void (*)(uint64_t, void *, uint64_t))sub_1C400BF9C);
      swift_bridgeObjectRelease();
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Document._StorageClass(0);
        swift_allocObject();
        uint64_t v42 = swift_retain();
        *(void *)(isEscapingClosureAtFileLocation + v22) = sub_1C3F7CB4C(v42);
        swift_release();
      }
      uint64_t v43 = (uint64_t *)(*(void *)(isEscapingClosureAtFileLocation + v22)
                      + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__references);
      swift_beginAccess();
      *uint64_t v43 = v39;
      swift_bridgeObjectRelease();
      sub_1C3FB065C(isEscapingClosureAtFileLocation);
      if (qword_1EBBC10F0 != -1) {
        swift_once();
      }
      uint64_t v44 = *(void **)(qword_1EBBC5A60 + 40);
      uint64_t v16 = (void *)swift_allocObject();
      uint64_t v19 = v49;
      v16[2] = v49;
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = sub_1C3F5F33C;
      *(void *)(v45 + 24) = v16;
      uint64_t v62 = sub_1C3F5F2E0;
      uint64_t v63 = v45;
      aBlock = MEMORY[0x1E4F143A8];
      uint64_t v59 = 1107296256;
      uint64_t v60 = sub_1C3F5F2B8;
      uint64_t v61 = &block_descriptor_270;
      uint64_t v46 = _Block_copy(&aBlock);
      uint64_t v4 = v63;
      unsigned __int8 v17 = v44;
      id v47 = v19;
      swift_retain();
      swift_release();
      dispatch_sync(v17, v46);

      _Block_release(v46);
      isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      uint64_t result = swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0) {
        return result;
      }
      __break(1u);
LABEL_20:
      swift_once();
    }
    return sub_1C3F9229C(isEscapingClosureAtFileLocation, type metadata accessor for Proto_Document);
  }
  else
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v41 = 0xD00000000000002CLL;
    *(void *)(v41 + 8) = 0x80000001C44B1640;
    *(unsigned char *)(v41 + 16) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1C40072B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void (*a4)(uint64_t, void *, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t v76 = a4;
  unint64_t v68 = a3;
  uint64_t v77 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v67 = (uint64_t)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v66 = (uint64_t)&v59 - v10;
  uint64_t v65 = type metadata accessor for Proto_Version(0);
  uint64_t v64 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v63 = (uint64_t *)((char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v62 = (uint64_t)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v61 = (uint64_t)&v59 - v15;
  uint64_t v60 = type metadata accessor for Proto_CRDT(0);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v73 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v72 = (uint64_t)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v59 - v20;
  uint64_t v22 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v69 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (uint64_t *)((char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v26 = *a1;
  unint64_t v25 = a1[1];
  uint64_t v74 = a1[2];
  uint64_t v79 = a1[3];
  uint64_t v71 = a1[4];
  sub_1C4496888();
  uint64_t v27 = *(int *)(type metadata accessor for Proto_Reference(0) + 20);
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)(a5 + v27) = qword_1EBBBC808;
  *uint64_t v24 = MEMORY[0x1E4FBC860];
  swift_retain();
  uint64_t v28 = sub_1C4496868();
  uint64_t v29 = a5;
  unint64_t v31 = v30;
  uint64_t v70 = v22;
  sub_1C4496888();
  sub_1C3F7E324(v26, v25);
  unint64_t v32 = v31;
  uint64_t v33 = v29;
  uint64_t v34 = v27;
  sub_1C3F7E2CC(v28, v32);
  v24[1] = v26;
  v24[2] = v25;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    uint64_t v35 = swift_retain();
    *(void *)(v33 + v27) = sub_1C3FB0204(v35);
    swift_release();
  }
  uint64_t v36 = *(void *)(v33 + v27);
  sub_1C3F9775C((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_KeyPath);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v21, 0, 1, v70);
  uint64_t v37 = v72;
  sub_1C3F961BC((uint64_t)v21, v72, &qword_1EBBC0560);
  uint64_t v38 = v36 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v37, v38, &qword_1EBBC0560);
  swift_endAccess();
  swift_release();
  sub_1C3F7E324(v26, v25);
  v78[0] = v26;
  v78[1] = v25;
  uint64_t v39 = v74;
  v78[2] = v74;
  v78[3] = v79;
  v78[4] = v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v40 = v77;
  uint64_t v41 = swift_retain();
  uint64_t v42 = v73;
  uint64_t v43 = v75;
  v76(v41, v78, v40);
  if (v43)
  {
    uint64_t result = sub_1C3F9229C(v33, type metadata accessor for Proto_Reference);
    void *v68 = v43;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Reference._StorageClass(0);
      swift_allocObject();
      uint64_t v45 = swift_retain();
      *(void *)(v33 + v34) = sub_1C3FB0204(v45);
      swift_release();
    }
    uint64_t v46 = *(void *)(v33 + v34);
    uint64_t v47 = (uint64_t)v42;
    uint64_t v48 = v61;
    sub_1C3F9775C(v47, v61, type metadata accessor for Proto_CRDT);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v59 + 56))(v48, 0, 1, v60);
    uint64_t v49 = v34;
    uint64_t v50 = v62;
    sub_1C3F961BC(v48, v62, &qword_1EBBC04F8);
    uint64_t v51 = v46 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
    swift_beginAccess();
    swift_retain();
    sub_1C3F98338(v50, v51, &qword_1EBBC04F8);
    swift_endAccess();
    swift_release();
    v78[5] = v39;
    v78[6] = v79;
    uint64_t v52 = v63;
    sub_1C3F9FF10(v40, v63);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Reference._StorageClass(0);
      swift_allocObject();
      uint64_t v53 = swift_retain();
      *(void *)(v33 + v49) = sub_1C3FB0204(v53);
      swift_release();
    }
    uint64_t v54 = *(void *)(v33 + v49);
    uint64_t v55 = (uint64_t)v52;
    uint64_t v56 = v66;
    sub_1C3F9775C(v55, v66, type metadata accessor for Proto_Version);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v64 + 56))(v56, 0, 1, v65);
    uint64_t v57 = v67;
    sub_1C3F961BC(v56, v67, &qword_1EBBC0578);
    uint64_t v58 = v54 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    swift_retain();
    sub_1C3F98338(v57, v58, &qword_1EBBC0578);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C4007A4C(long long *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v29 = (uint64_t)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v28 - v5;
  uint64_t v7 = type metadata accessor for Proto_Version(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (void *)((char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for Proto_Value(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v28 = *a1;
  sub_1C4496888();
  uint64_t v19 = *(int *)(v16 + 20);
  if (qword_1EBBC0328 != -1) {
    swift_once();
  }
  *(void *)&v18[v19] = qword_1EBBC05C0;
  swift_retain();
  sub_1C4496888();
  uint64_t v20 = *(int *)(v10 + 20);
  if (qword_1EBBBF8C8 != -1) {
    swift_once();
  }
  *(void *)&v15[v20] = qword_1EBBBF8B8;
  long long v30 = v28;
  swift_retain();
  sub_1C3F9FF10(v31, v9);
  sub_1C43EF158((uint64_t)v9);
  sub_1C3FA1CCC((uint64_t)v15, (uint64_t)v13, type metadata accessor for Proto_Value);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v21 = swift_retain();
    *(void *)&v18[v19] = sub_1C3F7CB4C(v21);
    swift_release();
  }
  uint64_t v22 = *(void *)&v18[v19];
  sub_1C3F9775C((uint64_t)v13, (uint64_t)v6, type metadata accessor for Proto_Value);
  uint64_t v23 = type metadata accessor for Proto_Document.OneOf_Root(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v6, 0, 1, v23);
  uint64_t v24 = v29;
  sub_1C3F961BC((uint64_t)v6, v29, &qword_1EBBC0598);
  uint64_t v25 = v22 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v24, v25, &qword_1EBBC0598);
  swift_endAccess();
  swift_release();
  sub_1C3FB065C((uint64_t)v18);
  sub_1C3F9229C((uint64_t)v15, type metadata accessor for Proto_Value);
  sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
  uint64_t v26 = sub_1C4496AA8();
  sub_1C3F9229C((uint64_t)v18, type metadata accessor for Proto_Document);
  return v26;
}

uint64_t sub_1C4007EB0(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = type metadata accessor for Proto4_Root(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 24) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1E4FBC868];
  *(void *)(v3 + 32) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  uint64_t v13 = a1;
  uint64_t v14 = v3;
  sub_1C4004AA0(v13, (void (*)(uint64_t))sub_1C4018484, (uint64_t)v10);
  if (v2) {
    return v14;
  }
  if (*(unsigned char *)(v3 + 72))
  {
    LODWORD(v36) = *(unsigned __int8 *)(v3 + 72);
    uint64_t v15 = *(void **)(v3 + 16);
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    uint64_t v16 = *(void **)(qword_1EBBC5A60 + 40);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    uint64_t v7 = (char *)swift_allocObject();
    *((void *)v7 + 2) = sub_1C3F5F33C;
    *((void *)v7 + 3) = v17;
    uint64_t v41 = sub_1C3F5F2E0;
    uint64_t v42 = v7;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v39 = sub_1C3F5F2B8;
    uint64_t v40 = &block_descriptor_248;
    uint64_t v18 = _Block_copy(&aBlock);
    uint64_t v19 = v16;
    id v20 = v15;
    swift_retain();
    swift_release();
    dispatch_sync(v19, v18);

    _Block_release(v18);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      *(void *)((char *)&v37 + 6) = 0;
      *(void *)&long long v37 = 0;
      BYTE14(v37) = 8;
      sub_1C3F73B18((uint64_t)&v37, (uint64_t)&v37 + 8, (v36 + 4), 0);
      *(void *)&long long aBlock = v37;
      *((void *)&aBlock + 1) = DWORD2(v37) | ((unint64_t)BYTE12(v37) << 32) | ((unint64_t)BYTE13(v37) << 40) | ((unint64_t)BYTE14(v37) << 48);
      sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
      uint64_t v24 = sub_1C4496AA8();
      unint64_t v26 = v25;
      sub_1C4496588();
      sub_1C3F7E2CC(v24, v26);
      uint64_t v14 = aBlock;
      sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Document);
      return v14;
    }
    __break(1u);
  }
  else
  {
    type metadata accessor for Upgrade4to5();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v11;
    v22[3] = v12;
    v22[4] = v11;
    v22[5] = v12;
    void v22[6] = 0;
    v22[7] = 0;
    sub_1C43A7A18((uint64_t)v10, (uint64_t)v7);
    *(void *)((char *)&aBlock + 6) = 0;
    *(void *)&long long aBlock = 0;
    BYTE14(aBlock) = 8;
    sub_1C3F73B18((uint64_t)&aBlock, (uint64_t)&aBlock + 8, 4, 0);
    *(void *)&long long v37 = aBlock;
    *((void *)&v37 + 1) = DWORD2(aBlock) | ((unint64_t)BYTE12(aBlock) << 32) | ((unint64_t)BYTE13(aBlock) << 40) | ((unint64_t)BYTE14(aBlock) << 48);
    sub_1C3FAD5C8(&qword_1EA39C098, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
    uint64_t v27 = sub_1C4496AA8();
    unint64_t v29 = v28;
    sub_1C4496588();
    sub_1C3F7E2CC(v27, v29);
    uint64_t isEscapingClosureAtFileLocation = *(void *)(v3 + 16);
    if (qword_1EBBC10F0 == -1) {
      goto LABEL_10;
    }
  }
  swift_once();
LABEL_10:
  long long v30 = *(void **)(qword_1EBBC5A60 + 40);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = isEscapingClosureAtFileLocation;
  uint64_t v32 = swift_allocObject();
  id v36 = (id)isEscapingClosureAtFileLocation;
  *(void *)(v32 + 16) = sub_1C3F5F33C;
  *(void *)(v32 + 24) = v31;
  uint64_t v41 = sub_1C3F5F2E0;
  uint64_t v42 = (char *)v32;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v39 = sub_1C3F5F2B8;
  uint64_t v40 = &block_descriptor_259;
  uint64_t v33 = _Block_copy(&aBlock);
  uint64_t v34 = v30;
  id v35 = v36;
  swift_retain();
  swift_release();
  dispatch_sync(v34, v33);

  _Block_release(v33);
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  if (v33) {
    __break(1u);
  }
  sub_1C3F9229C((uint64_t)v7, type metadata accessor for Proto4_Root);
  sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Document);
  return v37;
}

uint64_t sub_1C40085C8(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = type metadata accessor for Proto4_Root(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 24) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1E4FBC868];
  *(void *)(v3 + 32) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  uint64_t v13 = a1;
  uint64_t v14 = v3;
  sub_1C4004AA0(v13, (void (*)(uint64_t))sub_1C4018170, (uint64_t)v10);
  if (v2) {
    return v14;
  }
  if (*(unsigned char *)(v3 + 72))
  {
    LODWORD(v36) = *(unsigned __int8 *)(v3 + 72);
    uint64_t v15 = *(void **)(v3 + 16);
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    uint64_t v16 = *(void **)(qword_1EBBC5A60 + 40);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    uint64_t v7 = (char *)swift_allocObject();
    *((void *)v7 + 2) = sub_1C3F5F33C;
    *((void *)v7 + 3) = v17;
    uint64_t v41 = sub_1C3F5F2E0;
    uint64_t v42 = v7;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v39 = sub_1C3F5F2B8;
    uint64_t v40 = &block_descriptor_167;
    uint64_t v18 = _Block_copy(&aBlock);
    uint64_t v19 = v16;
    id v20 = v15;
    swift_retain();
    swift_release();
    dispatch_sync(v19, v18);

    _Block_release(v18);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      *(void *)((char *)&v37 + 6) = 0;
      *(void *)&long long v37 = 0;
      BYTE14(v37) = 8;
      sub_1C3F73B18((uint64_t)&v37, (uint64_t)&v37 + 8, (v36 + 4), 0);
      *(void *)&long long aBlock = v37;
      *((void *)&aBlock + 1) = DWORD2(v37) | ((unint64_t)BYTE12(v37) << 32) | ((unint64_t)BYTE13(v37) << 40) | ((unint64_t)BYTE14(v37) << 48);
      sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
      uint64_t v24 = sub_1C4496AA8();
      unint64_t v26 = v25;
      sub_1C4496588();
      sub_1C3F7E2CC(v24, v26);
      uint64_t v14 = aBlock;
      sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Document);
      return v14;
    }
    __break(1u);
  }
  else
  {
    type metadata accessor for Upgrade4to5();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v11;
    v22[3] = v12;
    v22[4] = v11;
    v22[5] = v12;
    void v22[6] = 0;
    v22[7] = 0;
    sub_1C43A7A18((uint64_t)v10, (uint64_t)v7);
    *(void *)((char *)&aBlock + 6) = 0;
    *(void *)&long long aBlock = 0;
    BYTE14(aBlock) = 8;
    sub_1C3F73B18((uint64_t)&aBlock, (uint64_t)&aBlock + 8, 4, 0);
    *(void *)&long long v37 = aBlock;
    *((void *)&v37 + 1) = DWORD2(aBlock) | ((unint64_t)BYTE12(aBlock) << 32) | ((unint64_t)BYTE13(aBlock) << 40) | ((unint64_t)BYTE14(aBlock) << 48);
    sub_1C3FAD5C8(&qword_1EA39C098, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
    uint64_t v27 = sub_1C4496AA8();
    unint64_t v29 = v28;
    sub_1C4496588();
    sub_1C3F7E2CC(v27, v29);
    uint64_t isEscapingClosureAtFileLocation = *(void *)(v3 + 16);
    if (qword_1EBBC10F0 == -1) {
      goto LABEL_10;
    }
  }
  swift_once();
LABEL_10:
  long long v30 = *(void **)(qword_1EBBC5A60 + 40);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = isEscapingClosureAtFileLocation;
  uint64_t v32 = swift_allocObject();
  id v36 = (id)isEscapingClosureAtFileLocation;
  *(void *)(v32 + 16) = sub_1C3F5F33C;
  *(void *)(v32 + 24) = v31;
  uint64_t v41 = sub_1C3F5F2E0;
  uint64_t v42 = (char *)v32;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v39 = sub_1C3F5F2B8;
  uint64_t v40 = &block_descriptor_178;
  uint64_t v33 = _Block_copy(&aBlock);
  uint64_t v34 = v30;
  id v35 = v36;
  swift_retain();
  swift_release();
  dispatch_sync(v34, v33);

  _Block_release(v33);
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  if (v33) {
    __break(1u);
  }
  sub_1C3F9229C((uint64_t)v7, type metadata accessor for Proto4_Root);
  sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Document);
  return v37;
}

uint64_t sub_1C4008CE0(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = type metadata accessor for Proto4_Root(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 24) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1E4FBC868];
  *(void *)(v3 + 32) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  uint64_t v13 = a1;
  uint64_t v14 = v3;
  sub_1C4004AA0(v13, (void (*)(uint64_t))sub_1C4018130, (uint64_t)v10);
  if (v2) {
    return v14;
  }
  if (*(unsigned char *)(v3 + 72))
  {
    LODWORD(v36) = *(unsigned __int8 *)(v3 + 72);
    uint64_t v15 = *(void **)(v3 + 16);
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    uint64_t v16 = *(void **)(qword_1EBBC5A60 + 40);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    uint64_t v7 = (char *)swift_allocObject();
    *((void *)v7 + 2) = sub_1C3F5F340;
    *((void *)v7 + 3) = v17;
    uint64_t v41 = sub_1C3F5F30C;
    uint64_t v42 = v7;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v39 = sub_1C3F5F2B8;
    uint64_t v40 = &block_descriptor_1;
    uint64_t v18 = _Block_copy(&aBlock);
    uint64_t v19 = v16;
    id v20 = v15;
    swift_retain();
    swift_release();
    dispatch_sync(v19, v18);

    _Block_release(v18);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      *(void *)((char *)&v37 + 6) = 0;
      *(void *)&long long v37 = 0;
      BYTE14(v37) = 8;
      sub_1C3F73B18((uint64_t)&v37, (uint64_t)&v37 + 8, (v36 + 4), 0);
      *(void *)&long long aBlock = v37;
      *((void *)&aBlock + 1) = DWORD2(v37) | ((unint64_t)BYTE12(v37) << 32) | ((unint64_t)BYTE13(v37) << 40) | ((unint64_t)BYTE14(v37) << 48);
      sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
      uint64_t v24 = sub_1C4496AA8();
      unint64_t v26 = v25;
      sub_1C4496588();
      sub_1C3F7E2CC(v24, v26);
      uint64_t v14 = aBlock;
      sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Document);
      return v14;
    }
    __break(1u);
  }
  else
  {
    type metadata accessor for Upgrade4to5();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v11;
    v22[3] = v12;
    v22[4] = v11;
    v22[5] = v12;
    void v22[6] = 0;
    v22[7] = 0;
    sub_1C43A7A18((uint64_t)v10, (uint64_t)v7);
    *(void *)((char *)&aBlock + 6) = 0;
    *(void *)&long long aBlock = 0;
    BYTE14(aBlock) = 8;
    sub_1C3F73B18((uint64_t)&aBlock, (uint64_t)&aBlock + 8, 4, 0);
    *(void *)&long long v37 = aBlock;
    *((void *)&v37 + 1) = DWORD2(aBlock) | ((unint64_t)BYTE12(aBlock) << 32) | ((unint64_t)BYTE13(aBlock) << 40) | ((unint64_t)BYTE14(aBlock) << 48);
    sub_1C3FAD5C8(&qword_1EA39C098, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
    uint64_t v27 = sub_1C4496AA8();
    unint64_t v29 = v28;
    sub_1C4496588();
    sub_1C3F7E2CC(v27, v29);
    uint64_t isEscapingClosureAtFileLocation = *(void *)(v3 + 16);
    if (qword_1EBBC10F0 == -1) {
      goto LABEL_10;
    }
  }
  swift_once();
LABEL_10:
  long long v30 = *(void **)(qword_1EBBC5A60 + 40);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = isEscapingClosureAtFileLocation;
  uint64_t v32 = swift_allocObject();
  id v36 = (id)isEscapingClosureAtFileLocation;
  *(void *)(v32 + 16) = sub_1C3F5F33C;
  *(void *)(v32 + 24) = v31;
  uint64_t v41 = sub_1C3F5F2E0;
  uint64_t v42 = (char *)v32;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v39 = sub_1C3F5F2B8;
  uint64_t v40 = &block_descriptor_156;
  uint64_t v33 = _Block_copy(&aBlock);
  uint64_t v34 = v30;
  id v35 = v36;
  swift_retain();
  swift_release();
  dispatch_sync(v34, v33);

  _Block_release(v33);
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  if (v33) {
    __break(1u);
  }
  sub_1C3F9229C((uint64_t)v7, type metadata accessor for Proto4_Root);
  sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Document);
  return v37;
}

uint64_t sub_1C40093F8(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v43 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = type metadata accessor for Proto4_Root(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)(v3 + 24) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = MEMORY[0x1E4FBC868];
  *(void *)(v3 + 32) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  uint64_t v13 = a1;
  uint64_t v14 = v3;
  sub_1C4004AA0(v13, (void (*)(uint64_t))sub_1C4018444, (uint64_t)v10);
  if (v2) {
    return v14;
  }
  if (*(unsigned char *)(v3 + 72))
  {
    LODWORD(v36) = *(unsigned __int8 *)(v3 + 72);
    uint64_t v15 = *(void **)(v3 + 16);
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    uint64_t v16 = *(void **)(qword_1EBBC5A60 + 40);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    uint64_t v7 = (char *)swift_allocObject();
    *((void *)v7 + 2) = sub_1C3F5F33C;
    *((void *)v7 + 3) = v17;
    uint64_t v41 = sub_1C3F5F2E0;
    uint64_t v42 = v7;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v39 = sub_1C3F5F2B8;
    uint64_t v40 = &block_descriptor_226;
    uint64_t v18 = _Block_copy(&aBlock);
    uint64_t v19 = v16;
    id v20 = v15;
    swift_retain();
    swift_release();
    dispatch_sync(v19, v18);

    _Block_release(v18);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      *(void *)((char *)&v37 + 6) = 0;
      *(void *)&long long v37 = 0;
      BYTE14(v37) = 8;
      sub_1C3F73B18((uint64_t)&v37, (uint64_t)&v37 + 8, (v36 + 4), 0);
      *(void *)&long long aBlock = v37;
      *((void *)&aBlock + 1) = DWORD2(v37) | ((unint64_t)BYTE12(v37) << 32) | ((unint64_t)BYTE13(v37) << 40) | ((unint64_t)BYTE14(v37) << 48);
      sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
      uint64_t v24 = sub_1C4496AA8();
      unint64_t v26 = v25;
      sub_1C4496588();
      sub_1C3F7E2CC(v24, v26);
      uint64_t v14 = aBlock;
      sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Document);
      return v14;
    }
    __break(1u);
  }
  else
  {
    type metadata accessor for Upgrade4to5();
    uint64_t v22 = (void *)swift_allocObject();
    v22[2] = v11;
    v22[3] = v12;
    v22[4] = v11;
    v22[5] = v12;
    void v22[6] = 0;
    v22[7] = 0;
    sub_1C43A7A18((uint64_t)v10, (uint64_t)v7);
    *(void *)((char *)&aBlock + 6) = 0;
    *(void *)&long long aBlock = 0;
    BYTE14(aBlock) = 8;
    sub_1C3F73B18((uint64_t)&aBlock, (uint64_t)&aBlock + 8, 4, 0);
    *(void *)&long long v37 = aBlock;
    *((void *)&v37 + 1) = DWORD2(aBlock) | ((unint64_t)BYTE12(aBlock) << 32) | ((unint64_t)BYTE13(aBlock) << 40) | ((unint64_t)BYTE14(aBlock) << 48);
    sub_1C3FAD5C8(&qword_1EA39C098, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
    uint64_t v27 = sub_1C4496AA8();
    unint64_t v29 = v28;
    sub_1C4496588();
    sub_1C3F7E2CC(v27, v29);
    uint64_t isEscapingClosureAtFileLocation = *(void *)(v3 + 16);
    if (qword_1EBBC10F0 == -1) {
      goto LABEL_10;
    }
  }
  swift_once();
LABEL_10:
  long long v30 = *(void **)(qword_1EBBC5A60 + 40);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = isEscapingClosureAtFileLocation;
  uint64_t v32 = swift_allocObject();
  id v36 = (id)isEscapingClosureAtFileLocation;
  *(void *)(v32 + 16) = sub_1C3F5F33C;
  *(void *)(v32 + 24) = v31;
  uint64_t v41 = sub_1C3F5F2E0;
  uint64_t v42 = (char *)v32;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v39 = sub_1C3F5F2B8;
  uint64_t v40 = &block_descriptor_237;
  uint64_t v33 = _Block_copy(&aBlock);
  uint64_t v34 = v30;
  id v35 = v36;
  swift_retain();
  swift_release();
  dispatch_sync(v34, v33);

  _Block_release(v33);
  LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  if (v33) {
    __break(1u);
  }
  sub_1C3F9229C((uint64_t)v7, type metadata accessor for Proto4_Root);
  sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Document);
  return v37;
}

uint64_t sub_1C4009B10(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v50 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = type metadata accessor for Proto4_Root(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = MEMORY[0x1E4FBC860];
  *(void *)(v1 + 24) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v1 + 32) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  sub_1C4004AA0(a1, (void (*)(uint64_t))sub_1C40183DC, (uint64_t)v10);
  if (v2) {
    return v1;
  }
  v40[1] = v5;
  uint64_t v41 = a1;
  uint64_t v42 = (void *)v8;
  uint64_t v43 = v10;
  uint64_t v12 = (uint64_t)v7;
  int v13 = *(unsigned __int8 *)(v3 + 72);
  if (*(unsigned char *)(v3 + 72))
  {
    uint64_t v14 = *(void **)(v3 + 16);
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    uint64_t v15 = *(void **)(qword_1EBBC5A60 + 40);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v14;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_1C3F5F33C;
    *(void *)(v17 + 24) = v16;
    uint64_t v48 = sub_1C3F5F2E0;
    uint64_t v49 = v17;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v46 = sub_1C3F5F2B8;
    uint64_t v47 = &block_descriptor_204;
    uint64_t v18 = _Block_copy(&aBlock);
    uint64_t v19 = v15;
    id v20 = v14;
    swift_retain();
    swift_release();
    dispatch_sync(v19, v18);

    _Block_release(v18);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t v21 = swift_release();
    uint64_t v22 = v42;
    if ((v18 & 1) == 0)
    {
      __int16 v23 = (*(uint64_t (**)(uint64_t))(*(void *)v41 + 200))(v21);
      *(void *)((char *)&v44 + 6) = 0;
      *(void *)&long long v44 = 0;
      BYTE14(v44) = 8;
      sub_1C3F73B18((uint64_t)&v44, (uint64_t)&v44 + 8, (v13 + 4), v23);
      *(void *)&long long aBlock = v44;
      *((void *)&aBlock + 1) = DWORD2(v44) | ((unint64_t)BYTE12(v44) << 32) | ((unint64_t)BYTE13(v44) << 40) | ((unint64_t)BYTE14(v44) << 48);
      sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
      uint64_t v24 = (uint64_t)v43;
      uint64_t v28 = sub_1C4496AA8();
      unint64_t v30 = v29;
      sub_1C4496588();
      sub_1C3F7E2CC(v28, v30);
      uint64_t v1 = aBlock;
      sub_1C3F9229C(v24, type metadata accessor for Proto_Document);
      return v1;
    }
    __break(1u);
  }
  else
  {
    type metadata accessor for Upgrade4to5();
    unint64_t v25 = (void *)swift_allocObject();
    v25[2] = v11;
    uint64_t v26 = MEMORY[0x1E4FBC868];
    v25[3] = MEMORY[0x1E4FBC868];
    v25[4] = v11;
    v25[5] = v26;
    v25[6] = 0;
    v25[7] = 0;
    uint64_t v17 = v12;
    sub_1C43A7A18((uint64_t)v43, v12);
    *(void *)((char *)&aBlock + 6) = 0;
    *(void *)&long long aBlock = 0;
    BYTE14(aBlock) = 8;
    sub_1C3F73B18((uint64_t)&aBlock, (uint64_t)&aBlock + 8, 4, 0);
    *(void *)&long long v44 = aBlock;
    *((void *)&v44 + 1) = DWORD2(aBlock) | ((unint64_t)BYTE12(aBlock) << 32) | ((unint64_t)BYTE13(aBlock) << 40) | ((unint64_t)BYTE14(aBlock) << 48);
    sub_1C3FAD5C8(&qword_1EA39C098, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
    uint64_t v31 = sub_1C4496AA8();
    unint64_t v33 = v32;
    sub_1C4496588();
    sub_1C3F7E2CC(v31, v33);
    uint64_t v22 = *(void **)(v3 + 16);
    if (qword_1EBBC10F0 == -1) {
      goto LABEL_10;
    }
  }
  swift_once();
LABEL_10:
  uint64_t v34 = *(void **)(qword_1EBBC5A60 + 40);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v22;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_1C3F5F33C;
  *(void *)(v36 + 24) = v35;
  uint64_t v48 = sub_1C3F5F2E0;
  uint64_t v49 = v36;
  *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v46 = sub_1C3F5F2B8;
  uint64_t v47 = &block_descriptor_215;
  long long v37 = _Block_copy(&aBlock);
  uint64_t v38 = v34;
  id v39 = v22;
  swift_retain();
  swift_release();
  dispatch_sync(v38, v37);

  _Block_release(v37);
  LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  swift_release();
  if (v37) {
    __break(1u);
  }
  sub_1C3F9229C(v17, type metadata accessor for Proto4_Root);
  sub_1C3F9229C((uint64_t)v43, type metadata accessor for Proto_Document);
  return v44;
}

uint64_t sub_1C400A264(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v36 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = &v28[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess();
  *(void *)(v4 + 24) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v4 + 32) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  sub_1C40055A4(a2, a3, a4, (uint64_t)v12);
  if (!v5)
  {
    int v13 = *(unsigned __int8 *)(v4 + 72);
    if (*(unsigned char *)(v4 + 72))
    {
      memset(v28, 0, sizeof(v28));
      unsigned __int8 v29 = 8;
      sub_1C3F73B18((uint64_t)v28, (uint64_t)&v28[8], (v13 + 4), 0);
      uint64_t aBlock = *(void *)v28;
      unint64_t v31 = *(unsigned int *)&v28[8] | ((unint64_t)v28[12] << 32) | ((unint64_t)v28[13] << 40) | ((unint64_t)v29 << 48);
      sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
      uint64_t v14 = sub_1C4496AA8();
      unint64_t v16 = v15;
      sub_1C4496588();
      sub_1C3F7E2CC(v14, v16);
      uint64_t v4 = aBlock;
      if (qword_1EBBC10F0 != -1) {
        swift_once();
      }
      uint64_t v17 = *(void **)(qword_1EBBC5A60 + 40);
      uint64_t v18 = swift_allocObject();
      *(void *)(v18 + 16) = a1;
      uint64_t v19 = v18;
      uint64_t v27 = v18;
      uint64_t v20 = swift_allocObject();
      *(void *)(v20 + 16) = sub_1C3F5F33C;
      *(void *)(v20 + 24) = v19;
      uint64_t v34 = sub_1C3F5F2E0;
      uint64_t v35 = v20;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      unint64_t v31 = 1107296256;
      unint64_t v32 = sub_1C3F5F2B8;
      unint64_t v33 = &block_descriptor_307;
      uint64_t v21 = _Block_copy(&aBlock);
      uint64_t v22 = v17;
      id v23 = a1;
      swift_retain();
      swift_release();
      dispatch_sync(v22, v21);

      _Block_release(v21);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
    }
    else
    {
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v25 = 0xD00000000000002CLL;
      *(void *)(v25 + 8) = 0x80000001C44B1640;
      *(unsigned char *)(v25 + 16) = 3;
      swift_willThrow();
    }
    sub_1C3F9229C((uint64_t)v12, type metadata accessor for Proto_Document);
  }
  return v4;
}

uint64_t sub_1C400A668(void *a1, uint64_t a2)
{
  uint64_t v32 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = &v24[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess();
  *(void *)(v2 + 24) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v2 + 32) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  sub_1C40055D0(a2, (uint64_t)v8);
  if (!v3)
  {
    int v9 = *(unsigned __int8 *)(v2 + 72);
    if (*(unsigned char *)(v2 + 72))
    {
      memset(v24, 0, sizeof(v24));
      unsigned __int8 v25 = 8;
      sub_1C3F73B18((uint64_t)v24, (uint64_t)&v24[8], (v9 + 4), 0);
      uint64_t aBlock = *(void *)v24;
      unint64_t v27 = *(unsigned int *)&v24[8] | ((unint64_t)v24[12] << 32) | ((unint64_t)v24[13] << 40) | ((unint64_t)v25 << 48);
      sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
      uint64_t v10 = sub_1C4496AA8();
      unint64_t v12 = v11;
      sub_1C4496588();
      sub_1C3F7E2CC(v10, v12);
      uint64_t v2 = aBlock;
      if (qword_1EBBC10F0 != -1) {
        swift_once();
      }
      int v13 = *(void **)(qword_1EBBC5A60 + 40);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = a1;
      uint64_t v15 = v14;
      uint64_t v23 = v14;
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = sub_1C3F5F33C;
      *(void *)(v16 + 24) = v15;
      unint64_t v30 = sub_1C3F5F2E0;
      uint64_t v31 = v16;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      unint64_t v27 = 1107296256;
      uint64_t v28 = sub_1C3F5F2B8;
      unsigned __int8 v29 = &block_descriptor_292;
      uint64_t v17 = _Block_copy(&aBlock);
      uint64_t v18 = v13;
      id v19 = a1;
      swift_retain();
      swift_release();
      dispatch_sync(v18, v17);

      _Block_release(v17);
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
    }
    else
    {
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v21 = 0xD00000000000002CLL;
      *(void *)(v21 + 8) = 0x80000001C44B1670;
      *(unsigned char *)(v21 + 16) = 3;
      swift_willThrow();
    }
    sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_Document);
  }
  return v2;
}

uint64_t sub_1C400AA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v22 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = &v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  swift_beginAccess();
  *(void *)(v3 + 24) = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v3 + 32) = MEMORY[0x1E4FBC868];
  swift_bridgeObjectRelease();
  sub_1C40052B0(a1, a2, a3, (uint64_t)v10);
  if (!v4)
  {
    uint64_t v11 = *(unsigned __int8 *)(v3 + 72) + 4;
    __int16 v12 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 8) + 8) + 40))(a2);
    memset(v18, 0, sizeof(v18));
    unsigned __int8 v19 = 8;
    sub_1C3F73B18((uint64_t)v18, (uint64_t)&v18[8], v11, v12);
    uint64_t v20 = *(void *)v18;
    unint64_t v21 = *(unsigned int *)&v18[8] | ((unint64_t)v18[12] << 32) | ((unint64_t)v18[13] << 40) | ((unint64_t)v19 << 48);
    sub_1C3FAD5C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
    uint64_t v14 = sub_1C4496AA8();
    unint64_t v16 = v15;
    sub_1C4496588();
    sub_1C3F7E2CC(v14, v16);
    uint64_t v3 = v20;
    sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Document);
  }
  return v3;
}

uint64_t sub_1C400ACCC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0350);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v68 = (uint64_t)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  __int16 v12 = (uint64_t *)((char *)v64 - v11);
  MEMORY[0x1F4188790](v10);
  uint64_t v69 = (uint64_t)v64 - v13;
  uint64_t v14 = type metadata accessor for Proto_Constants(0);
  uint64_t v71 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v70 = (uint64_t)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v73 = (char *)v64 - v17;
  unint64_t v18 = type metadata accessor for Proto_RetainCounts(0);
  MEMORY[0x1F4188790](v18);
  uint64_t v20 = (char *)v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4496888();
  int64_t v21 = *(int *)(v18 + 20);
  if (qword_1EA39B6D8 != -1) {
LABEL_45:
  }
    swift_once();
  *(void *)&v20[v21] = qword_1EA39B6D0;
  swift_retain();
  swift_retain();
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_1C4014878(v22);
  swift_bridgeObjectRelease();
  swift_release();
  if (v4)
  {
    sub_1C3F9229C((uint64_t)v20, type metadata accessor for Proto_RetainCounts);
    return (uint64_t)v12;
  }
  uint64_t v67 = v5;
  v64[0] = (uint64_t)v12;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_RetainCounts._StorageClass(0);
    swift_allocObject();
    uint64_t v24 = swift_retain();
    *(void *)&v20[v21] = sub_1C43F54D8(v24);
    swift_release();
  }
  unsigned __int8 v25 = (uint64_t *)(*(void *)&v20[v21]
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceKeys);
  swift_beginAccess();
  *unsigned __int8 v25 = v23;
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_bridgeObjectRetain();
  unint64_t v4 = sub_1C3FFA790(v26);
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_RetainCounts._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = swift_retain();
    *(void *)&v20[v21] = sub_1C43F54D8(v27);
    swift_release();
  }
  __int16 v12 = (uint64_t *)(*(void *)&v20[v21]
                  + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceRetainCounts);
  swift_beginAccess();
  *__int16 v12 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v29 = *(void *)(a2 + 16);
  if (v29 >> 58)
  {
    __break(1u);
    goto LABEL_47;
  }
  v64[1] = 0;
  int64_t v65 = v21;
  unint64_t v66 = v18;
  uint64_t v74 = sub_1C3FB0FAC(32 * v29);
  unint64_t v75 = v30;
  uint64_t v5 = a2 + 64;
  uint64_t v31 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v18 = v32 & *(void *)(a2 + 64);
  int64_t v33 = (unint64_t)(v31 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v21 = 0;
  while (1)
  {
    if (v18)
    {
      unint64_t v34 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v35 = v34 | (v21 << 6);
      goto LABEL_13;
    }
    int64_t v38 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v38 >= v33)
    {
LABEL_33:
      swift_release();
      uint64_t v41 = v74;
      unint64_t v42 = v75;
      sub_1C3F7E324(v74, v75);
      int64_t v43 = v65;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_RetainCounts._StorageClass(0);
        swift_allocObject();
        uint64_t v44 = swift_retain();
        *(void *)&v20[v43] = sub_1C43F54D8(v44);
        swift_release();
      }
      uint64_t v45 = (uint64_t *)(*(void *)&v20[v43]
                      + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetDigests);
      swift_beginAccess();
      uint64_t v46 = *v45;
      unint64_t v47 = v45[1];
      *uint64_t v45 = v41;
      v45[1] = v42;
      sub_1C3F7E2CC(v46, v47);
      uint64_t v48 = swift_bridgeObjectRetain();
      uint64_t v49 = sub_1C3FFAA3C(v48);
      swift_bridgeObjectRelease();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v51 = v43;
      uint64_t v52 = v72;
      uint64_t v53 = (uint64_t)v73;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        type metadata accessor for Proto_RetainCounts._StorageClass(0);
        swift_allocObject();
        uint64_t v54 = swift_retain();
        *(void *)&v20[v51] = sub_1C43F54D8(v54);
        swift_release();
      }
      uint64_t v55 = (uint64_t *)(*(void *)&v20[v51]
                      + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__assetRetainCounts);
      swift_beginAccess();
      uint64_t *v55 = v49;
      swift_bridgeObjectRelease();
      uint64_t v56 = v69;
      sub_1C3FB08D0(v69);
      uint64_t v57 = v71;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v56, 1, v52) == 1)
      {
        sub_1C3F962E0(v56, &qword_1EBBC0350);
      }
      else
      {
        sub_1C3F9775C(v56, v53, type metadata accessor for Proto_Constants);
        sub_1C3FA1CCC(v53, v70, type metadata accessor for Proto_Constants);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for Proto_RetainCounts._StorageClass(0);
          swift_allocObject();
          uint64_t v58 = swift_retain();
          *(void *)&v20[v51] = sub_1C43F54D8(v58);
          swift_release();
        }
        uint64_t v59 = *(void *)&v20[v51];
        uint64_t v60 = v64[0];
        sub_1C3F9775C(v70, v64[0], type metadata accessor for Proto_Constants);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v57 + 56))(v60, 0, 1, v52);
        uint64_t v61 = v60;
        uint64_t v62 = v68;
        sub_1C3F961BC(v61, v68, &qword_1EBBC0350);
        uint64_t v63 = v59
            + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
        swift_beginAccess();
        swift_retain();
        sub_1C3F98338(v62, v63, &qword_1EBBC0350);
        swift_endAccess();
        swift_release();
        sub_1C3F9229C(v53, type metadata accessor for Proto_Constants);
      }
      sub_1C3FAD5C8(&qword_1EA39B6F0, (void (*)(uint64_t))type metadata accessor for Proto_RetainCounts);
      __int16 v12 = (uint64_t *)sub_1C4496AA8();
      sub_1C3F7E2CC(v74, v75);
      sub_1C3F9229C((uint64_t)v20, type metadata accessor for Proto_RetainCounts);
      return (uint64_t)v12;
    }
    unint64_t v39 = *(void *)(v5 + 8 * v38);
    ++v21;
    if (!v39)
    {
      int64_t v21 = v38 + 1;
      if (v38 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v39 = *(void *)(v5 + 8 * v21);
      if (!v39)
      {
        int64_t v21 = v38 + 2;
        if (v38 + 2 >= v33) {
          goto LABEL_33;
        }
        unint64_t v39 = *(void *)(v5 + 8 * v21);
        if (!v39)
        {
          int64_t v21 = v38 + 3;
          if (v38 + 3 >= v33) {
            goto LABEL_33;
          }
          unint64_t v39 = *(void *)(v5 + 8 * v21);
          if (!v39)
          {
            int64_t v21 = v38 + 4;
            if (v38 + 4 >= v33) {
              goto LABEL_33;
            }
            unint64_t v39 = *(void *)(v5 + 8 * v21);
            if (!v39) {
              break;
            }
          }
        }
      }
    }
LABEL_32:
    unint64_t v18 = (v39 - 1) & v39;
    unint64_t v35 = __clz(__rbit64(v39)) + (v21 << 6);
LABEL_13:
    uint64_t v36 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v35);
    uint64_t v37 = *v36;
    unint64_t v4 = v36[1];
    sub_1C3F7E324(*v36, v4);
    __int16 v12 = &v74;
    sub_1C4496588();
    uint64_t result = sub_1C3F7E2CC(v37, v4);
  }
  int64_t v40 = v38 + 5;
  if (v40 >= v33) {
    goto LABEL_33;
  }
  unint64_t v39 = *(void *)(v5 + 8 * v40);
  if (v39)
  {
    int64_t v21 = v40;
    goto LABEL_32;
  }
  while (1)
  {
    int64_t v21 = v40 + 1;
    if (__OFADD__(v40, 1)) {
      break;
    }
    if (v21 >= v33) {
      goto LABEL_33;
    }
    unint64_t v39 = *(void *)(v5 + 8 * v21);
    ++v40;
    if (v39) {
      goto LABEL_32;
    }
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_1C400B57C()
{
  return sub_1C400B5D4(sub_1C3F6DD10);
}

uint64_t sub_1C400B5A8()
{
  return sub_1C400B5D4(sub_1C3F62C10);
}

uint64_t sub_1C400B5D4(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (!v1) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C400B600()
{
  uint64_t v3 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1C3F62C10();
  if (!v1)
  {
    uint64_t v7 = v6;
    type metadata accessor for CREncoder.CRDTKeyedContainer();
    uint64_t v2 = swift_allocObject();
    uint64_t v8 = MEMORY[0x1E4FBC860];
    *(void *)(v2 + 16) = v7;
    *(void *)(v2 + 24) = v0;
    *uint64_t v5 = v8;
    v5[1] = v8;
    v5[2] = v8;
    swift_retain_n();
    swift_retain();
    sub_1C4496888();
    swift_beginAccess();
    sub_1C3F62D84((uint64_t)v5);
    swift_release();
  }
  return v2;
}

uint64_t sub_1C400B720()
{
  uint64_t v3 = type metadata accessor for Proto_CustomCRValue(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1C3F6DD10();
  if (!v1)
  {
    uint64_t v7 = v6;
    type metadata accessor for CREncoder.CRValueKeyedContainer();
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = v7;
    *(void *)(v2 + 24) = v0;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    *uint64_t v5 = MEMORY[0x1E4FBC860];
    v5[1] = v8;
    swift_retain_n();
    swift_retain();
    sub_1C4496888();
    swift_beginAccess();
    sub_1C3F6FE54((uint64_t)v5);
    swift_release();
  }
  return v2;
}

uint64_t sub_1C400B83C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C400B854(a1, a2, a3, a4);
}

uint64_t sub_1C400B854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v10 = *(void *)(a1 + 88);
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  swift_retain();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)a2 + 152))(a3);
  if (!v4)
  {
    uint64_t v12 = sub_1C3F6DD10() + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
    swift_beginAccess();
    sub_1C3FA1CCC(v12, a4, type metadata accessor for Proto_Value);
    *(void *)(a1 + 80) = v9;
    swift_retain();
    swift_release();
    *(void *)(a1 + 88) = v10;
  }
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1C400B9A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a1 + 80);
  uint64_t v9 = *(void *)(a1 + 88);
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  swift_retain();
  swift_release();
  uint64_t v15 = a3;
  uint64_t v10 = *(void (**)(uint64_t))(*(void *)a2 + 152);
  uint64_t v11 = swift_retain();
  v10(v11);
  if (v4)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v13 = sub_1C3F6DD10() + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
    swift_beginAccess();
    sub_1C3FA1CCC(v13, a4, type metadata accessor for Proto_Value);
    *(void *)(a1 + 80) = v8;
    swift_retain();
    swift_release();
    *(void *)(a1 + 88) = v9;

    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C400BB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v9 = *(void *)(a1 + 88);
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  swift_retain();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)a2 + 176))(a3);
  if (v4)
  {
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    if (*(void *)(a1 + 80) || *(void *)(a1 + 88))
    {
      uint64_t v12 = sub_1C3F62C10();
      *(void *)(a1 + 80) = v10;
      swift_retain();
      swift_retain();
      swift_release();
      *(void *)(a1 + 88) = v9;
      swift_release();
      swift_release();
      uint64_t v13 = v12 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
      swift_beginAccess();
      sub_1C3FA1CCC(v13, a4, type metadata accessor for Proto_CRDT);
      swift_release();
    }
    else
    {
      sub_1C4496888();
      uint64_t v14 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
      if (qword_1EBBC0668 != -1) {
        swift_once();
      }
      *(void *)(a4 + v14) = qword_1EBBC0660;
      swift_retain();
      swift_release();
      swift_release();
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C400BD28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *a2;
  unint64_t v7 = a2[1];
  uint64_t v9 = a2[4];
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 88);
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  swift_retain();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v9 + 104))(a3);
  if (v4)
  {
    swift_release();
    swift_release();
    sub_1C3F7E2CC(v8, v7);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (*(void *)(a1 + 80) || *(void *)(a1 + 88))
  {
    uint64_t v12 = sub_1C3F62C10();
    *(void *)(a1 + 80) = v10;
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)(a1 + 88) = v11;
    swift_release();
    swift_release();
    uint64_t v13 = v12 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FA1CCC(v13, a4, type metadata accessor for Proto_CRDT);
    swift_release();
    sub_1C3F7E2CC(v8, v7);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_1C4496888();
    uint64_t v15 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)(a4 + v15) = qword_1EBBC0660;
    swift_retain();
    swift_release();
    swift_release();
    sub_1C3F7E2CC(v8, v7);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_1C400BF9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *a2;
  unint64_t v7 = a2[1];
  uint64_t v9 = a2[4];
  uint64_t v10 = *(void *)(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 88);
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  swift_retain();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)v9 + 176))(a3);
  if (v4)
  {
    swift_release();
    swift_release();
    sub_1C3F7E2CC(v8, v7);
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else if (*(void *)(a1 + 80) || *(void *)(a1 + 88))
  {
    uint64_t v12 = sub_1C3F62C10();
    *(void *)(a1 + 80) = v10;
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)(a1 + 88) = v11;
    swift_release();
    swift_release();
    uint64_t v13 = v12 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FA1CCC(v13, a4, type metadata accessor for Proto_CRDT);
    swift_release();
    sub_1C3F7E2CC(v8, v7);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    sub_1C4496888();
    uint64_t v15 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)(a4 + v15) = qword_1EBBC0660;
    swift_retain();
    swift_release();
    swift_release();
    sub_1C3F7E2CC(v8, v7);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
}

uint64_t sub_1C400C210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(a1 + 80);
  uint64_t v8 = *(void *)(a1 + 88);
  *(void *)(a1 + 80) = 0;
  *(void *)(a1 + 88) = 0;
  swift_retain();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)a2 + 176))(a3);
  if (v4)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (*(void *)(a1 + 80) || *(void *)(a1 + 88))
    {
      uint64_t v11 = sub_1C3F62C10();
      *(void *)(a1 + 80) = v9;
      swift_retain();
      swift_retain();
      swift_release();
      *(void *)(a1 + 88) = v8;
      swift_release();
      swift_release();
      uint64_t v12 = v11 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
      swift_beginAccess();
      sub_1C3FA1CCC(v12, a4, type metadata accessor for Proto_CRDT);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1C4496888();
      uint64_t v13 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
      if (qword_1EBBC0668 != -1) {
        swift_once();
      }
      *(void *)(a4 + v13) = qword_1EBBC0660;
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1C400C434(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C400CCCC(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for CRRegister, sub_1C41FC378);
}

uint64_t sub_1C400C474()
{
  uint64_t v2 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = type metadata accessor for CRDTRegister();
  uint64_t result = sub_1C42351A4(v5, v6, (uint64_t)v4);
  if (!v1)
  {
    uint64_t v8 = v0 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v4, v8, type metadata accessor for Proto_CRDT);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1C400C588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C3F51D40(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t, uint64_t))type metadata accessor for CRMaxRegister, (uint64_t (*)(uint64_t, uint64_t))sub_1C4122444);
}

uint64_t sub_1C400C5C8(void *a1)
{
  uint64_t v4 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = *a1;
  uint64_t v7 = *(void *)(v1 + 16);
  type metadata accessor for CRSet();
  uint64_t result = sub_1C437ABB8(v7, (uint64_t)v6);
  if (!v2)
  {
    uint64_t v9 = v1 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v6, v9, type metadata accessor for Proto_CRDT);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1C400C6EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v16 = type metadata accessor for Proto_OrderedSet(0);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1[1];
  v24[6] = *a1;
  v24[7] = v19;
  uint64_t v20 = *(void *)(v8 + 16);
  v24[0] = a2;
  v24[1] = a3;
  v24[2] = a4;
  void v24[3] = a5;
  v24[4] = a6;
  v24[5] = a7;
  uint64_t v21 = type metadata accessor for CROrderedDictionary();
  uint64_t v22 = v24[9];
  uint64_t result = sub_1C420B040(v20, v21, (uint64_t)v18);
  if (!v22)
  {
    swift_beginAccess();
    return sub_1C3F59F38((uint64_t)v18);
  }
  return result;
}

uint64_t sub_1C400C808(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v16 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v16 - 8);
  unint64_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24[9] = *a1;
  uint64_t v19 = *(void *)(v8 + 16);
  v24[2] = a2;
  void v24[3] = a3;
  v24[4] = a4;
  v24[5] = a5;
  v24[6] = a6;
  v24[7] = a7;
  uint64_t v20 = (void *)type metadata accessor for CRDictionary();
  uint64_t v21 = v24[1];
  uint64_t result = sub_1C41442A8(v19, v20, (uint64_t)v18);
  if (!v21)
  {
    uint64_t v23 = v8 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v18, v23, type metadata accessor for Proto_CRDT);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1C400C944(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = v6;
  uint64_t v15 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[7] = *a1;
  uint64_t v18 = *(void *)(v8 + 16);
  v22[1] = a2;
  v22[2] = a3;
  v22[3] = a4;
  v22[4] = a5;
  v22[5] = a6;
  uint64_t v19 = (void *)type metadata accessor for CRDTDictionary();
  uint64_t result = sub_1C4481B54(v18, v19, (uint64_t)v17);
  if (!v7)
  {
    uint64_t v21 = v8 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v17, v21, type metadata accessor for Proto_CRDT);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1C400CA7C(void *a1)
{
  uint64_t v4 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[1];
  v12[1] = *a1;
  v12[2] = v7;
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v9 = type metadata accessor for CRArray();
  uint64_t result = sub_1C4103EAC(v8, v9, (uint64_t)v6);
  if (!v2)
  {
    uint64_t v11 = v1 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v6, v11, type metadata accessor for Proto_CRDT);
    return swift_endAccess();
  }
  return result;
}

void sub_1C400CBA0(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *a1;
  sub_1C3FF0478(*(void *)(v3 + 16), (uint64_t)v7);
  if (!v2)
  {
    uint64_t v8 = v3 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v7, v8, type metadata accessor for Proto_CRDT);
    swift_endAccess();
  }
}

uint64_t sub_1C400CC8C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C400CCCC(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for CRAttributedString, (uint64_t (*)(uint64_t, uint64_t))sub_1C4414D00);
}

uint64_t sub_1C400CCCC(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, uint64_t), uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v9 = v5;
  uint64_t v13 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = *a1;
  uint64_t v16 = *(void *)(v9 + 16);
  uint64_t v17 = a4(0, a2, a3);
  uint64_t result = a5(v16, v17);
  if (!v6)
  {
    uint64_t v19 = v9 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v15, v19, type metadata accessor for Proto_CRDT);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1C400CDF8()
{
  uint64_t v1 = type metadata accessor for Proto_Counter(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Proto_CRDT(0);
  uint64_t v5 = v4 - 8;
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v0 + 16);
  sub_1C4496888();
  uint64_t v9 = *(int *)(v5 + 28);
  if (qword_1EBBC0668 != -1) {
    swift_once();
  }
  *(void *)&v7[v9] = qword_1EBBC0660;
  swift_retain();
  sub_1C43BA640();
  sub_1C43BA71C(v8, (uint64_t)v3);
  swift_release();
  sub_1C43F1D5C((uint64_t)v3);
  uint64_t v10 = v0 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
  swift_beginAccess();
  sub_1C3FBD334((uint64_t)v7, v10, type metadata accessor for Proto_CRDT);
  return swift_endAccess();
}

void sub_1C400CF9C(void *a1)
{
  uint64_t v4 = type metadata accessor for Proto_Sequence(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *a1;
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = type metadata accessor for CRSequence();
  sub_1C437329C(v7, v8, (uint64_t)v6);
  if (!v2)
  {
    swift_beginAccess();
    sub_1C43EF3C8((uint64_t)v6);
  }
}

uint64_t sub_1C400D090(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v57 = (uint64_t)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for Proto_CustomCRDT(0);
  MEMORY[0x1F4188790](v54);
  uint64_t v55 = (uint64_t *)((char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v53 = (uint64_t)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v48 = (uint64_t)&v47 - v12;
  uint64_t v13 = type metadata accessor for Proto_Version(0);
  uint64_t v51 = *(void *)(v13 - 8);
  uint64_t v52 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v50 = (uint64_t)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (uint64_t *)((char *)&v47 - v17);
  MEMORY[0x1F4188790](v16);
  uint64_t v49 = (uint64_t)&v47 - v19;
  uint64_t v20 = type metadata accessor for Proto_CustomCRDT.Sibling(0);
  uint64_t v21 = v20 - 8;
  uint64_t v56 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v47 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *a3;
  uint64_t v24 = a3[1];
  sub_1C4496888();
  uint64_t v26 = *(int *)(v21 + 28);
  if (qword_1EA39AE88 != -1) {
    swift_once();
  }
  *(void *)&v23[v26] = qword_1EA39AE78;
  swift_retain();
  sub_1C3F7E324(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_CustomCRDT.Sibling._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = swift_retain();
    *(void *)&v23[v26] = sub_1C4401FE4(v27);
    swift_release();
  }
  uint64_t v28 = (uint64_t *)(*(void *)&v23[v26]
                  + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
  swift_beginAccess();
  uint64_t v29 = *v28;
  unint64_t v30 = v28[1];
  *uint64_t v28 = a1;
  v28[1] = a2;
  sub_1C3F7E2CC(v29, v30);
  uint64_t v31 = v55;
  if (v25)
  {
    uint64_t v58 = v25;
    uint64_t v59 = v24;
    uint64_t v32 = *(void *)(v60 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3F9FF10(v32, v18);
    sub_1C3F870F4(v25);
    uint64_t v33 = v49;
    sub_1C3F9775C((uint64_t)v18, v49, type metadata accessor for Proto_Version);
    uint64_t v34 = v50;
    sub_1C3FA1CCC(v33, v50, type metadata accessor for Proto_Version);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_CustomCRDT.Sibling._StorageClass(0);
      swift_allocObject();
      uint64_t v35 = swift_retain();
      *(void *)&v23[v26] = sub_1C4401FE4(v35);
      swift_release();
    }
    uint64_t v36 = *(void *)&v23[v26];
    uint64_t v37 = v48;
    sub_1C3F9775C(v34, v48, type metadata accessor for Proto_Version);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v37, 0, 1, v52);
    uint64_t v38 = v53;
    sub_1C3F961BC(v37, v53, &qword_1EBBC0578);
    uint64_t v39 = v36
        + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    swift_retain();
    sub_1C3F98338(v38, v39, &qword_1EBBC0578);
    swift_endAccess();
    swift_release();
    sub_1C3F9229C(v33, type metadata accessor for Proto_Version);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C088);
  unint64_t v40 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_1C449B490;
  sub_1C3FA1CCC((uint64_t)v23, v41 + v40, type metadata accessor for Proto_CustomCRDT.Sibling);
  uint64_t v42 = v60 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
  swift_beginAccess();
  uint64_t v43 = *(void *)(v42 + *(int *)(type metadata accessor for Proto_CRDT(0) + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v44 = v57;
  sub_1C3F970C4(v43, v57, &qword_1EBBC0648);
  uint64_t v45 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v44, 1, v45) == 1)
  {
    sub_1C3F962E0(v44, &qword_1EBBC0648);
LABEL_14:
    uint64_t *v31 = MEMORY[0x1E4FBC860];
    sub_1C4496888();
    goto LABEL_15;
  }
  if (swift_getEnumCaseMultiPayload() != 9)
  {
    sub_1C3F9229C(v44, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_14;
  }
  sub_1C3F9775C(v44, (uint64_t)v31, type metadata accessor for Proto_CustomCRDT);
LABEL_15:
  swift_bridgeObjectRelease();
  uint64_t *v31 = v41;
  sub_1C43EF638((uint64_t)v31);
  swift_endAccess();
  return sub_1C3F9229C((uint64_t)v23, type metadata accessor for Proto_CustomCRDT.Sibling);
}

uint64_t sub_1C400D768(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_CustomCRDT(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (uint64_t *)((char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = type metadata accessor for Proto_CustomCRDT.Sibling(0);
  uint64_t v13 = v12 - 8;
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4496888();
  uint64_t v17 = *(int *)(v13 + 28);
  if (qword_1EA39AE88 != -1) {
    swift_once();
  }
  *(void *)&v16[v17] = qword_1EA39AE78;
  swift_retain();
  sub_1C3F7E324(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_CustomCRDT.Sibling._StorageClass(0);
    swift_allocObject();
    uint64_t v28 = v11;
    uint64_t v18 = swift_retain();
    uint64_t v11 = v28;
    *(void *)&v16[v17] = sub_1C4401FE4(v18);
    swift_release();
  }
  uint64_t v19 = (uint64_t *)(*(void *)&v16[v17]
                  + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
  swift_beginAccess();
  uint64_t v20 = *v19;
  unint64_t v21 = v19[1];
  *uint64_t v19 = a1;
  v19[1] = a2;
  sub_1C3F7E2CC(v20, v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C088);
  unint64_t v22 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C449B490;
  sub_1C3FA1CCC((uint64_t)v16, v23 + v22, type metadata accessor for Proto_CustomCRDT.Sibling);
  uint64_t v24 = v3 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
  swift_beginAccess();
  uint64_t v25 = *(void *)(v24 + *(int *)(type metadata accessor for Proto_CRDT(0) + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v25, (uint64_t)v8, &qword_1EBBC0648);
  uint64_t v26 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v8, 1, v26) == 1)
  {
    sub_1C3F962E0((uint64_t)v8, &qword_1EBBC0648);
LABEL_10:
    *uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C4496888();
    goto LABEL_11;
  }
  if (swift_getEnumCaseMultiPayload() != 9)
  {
    sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_10;
  }
  sub_1C3F9775C((uint64_t)v8, (uint64_t)v11, type metadata accessor for Proto_CustomCRDT);
LABEL_11:
  swift_bridgeObjectRelease();
  *uint64_t v11 = v23;
  sub_1C43EF638((uint64_t)v11);
  swift_endAccess();
  return sub_1C3F9229C((uint64_t)v16, type metadata accessor for Proto_CustomCRDT.Sibling);
}

uint64_t CREncoder.CRDTContainer.deinit()
{
  return sub_1C4010D24(&OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt, type metadata accessor for Proto_CRDT);
}

uint64_t sub_1C400DBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v27 = (uint64_t)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v25);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  if (result)
  {
    uint64_t v24 = v12;
    MEMORY[0x1F4188790](result);
    *(&v24 - 4) = (void *)a3;
    *(&v24 - 3) = (void *)a4;
    *(&v24 - 2) = (void *)a1;
    *(&v24 - 1) = (void *)v4;
    uint64_t result = sub_1C3F5585C((void (*)(uint64_t))sub_1C4016644, (uint64_t)v15);
    if (!v5)
    {
      swift_retain();
      uint64_t v17 = sub_1C401530C(v26);
      swift_release();
      uint64_t v18 = *(void *)(v4 + 16) + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
      swift_beginAccess();
      uint64_t v19 = *(void *)(v18 + *(int *)(v13 + 20))
          + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
      swift_beginAccess();
      uint64_t v20 = v27;
      sub_1C3F970C4(v19, v27, &qword_1EBBC0648);
      uint64_t v21 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v20, 1, v21) == 1)
      {
        sub_1C3F962E0(v20, &qword_1EBBC0648);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 3)
        {
          unint64_t v22 = v24;
          sub_1C3F9775C(v20, (uint64_t)v24, type metadata accessor for Proto_Struct);
LABEL_9:
          sub_1C400DF18((uint64_t)v15, v17);
          sub_1C3F62D84((uint64_t)v22);
          swift_endAccess();
          sub_1C3F9229C((uint64_t)v15, type metadata accessor for Proto_CRDT);
          return swift_bridgeObjectRelease();
        }
        sub_1C3F9229C(v20, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
      }
      unint64_t v22 = v24;
      uint64_t v23 = MEMORY[0x1E4FBC860];
      *uint64_t v24 = MEMORY[0x1E4FBC860];
      v22[1] = v23;
      v22[2] = v23;
      sub_1C4496888();
      goto LABEL_9;
    }
  }
  return result;
}

uint64_t sub_1C400DF18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for Proto_CRDT(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t result = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(a2 + 16);
  if (v14 == 1)
  {
    uint64_t v15 = *(void *)(a2 + 32);
    uint64_t v16 = *(void **)v3;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v16 = sub_1C3FA1854(0, v16[2] + 1, 1, v16);
    }
    unint64_t v18 = v16[2];
    unint64_t v17 = v16[3];
    if (v18 >= v17 >> 1) {
      uint64_t v16 = sub_1C3FA1854((void *)(v17 > 1), v18 + 1, 1, v16);
    }
    v16[2] = v18 + 1;
    v16[v18 + 4] = v15;
    *(void *)uint64_t v3 = v16;
    sub_1C3FA1CCC(a1, (uint64_t)v13, type metadata accessor for Proto_CRDT);
    unint64_t v19 = *(void *)(v3 + 8);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v19 = sub_1C3FF1600(0, *(void *)(v19 + 16) + 1, 1, v19);
    }
    unint64_t v21 = *(void *)(v19 + 16);
    unint64_t v20 = *(void *)(v19 + 24);
    if (v21 >= v20 >> 1) {
      unint64_t v19 = sub_1C3FF1600(v20 > 1, v21 + 1, 1, v19);
    }
    *(void *)(v19 + 16) = v21 + 1;
    uint64_t result = sub_1C3F9775C((uint64_t)v13, v19+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v21, type metadata accessor for Proto_CRDT);
    *(void *)(v3 + 8) = v19;
  }
  else if (v14)
  {
    uint64_t v22 = *(void *)(a2 + 32);
    unint64_t v23 = (2 * v14) | 1;
    swift_bridgeObjectRetain();
    sub_1C4010D6C(v22, v8);
    sub_1C400E1B4(a1, a2, (void *)(a2 + 32), 1, v23);
    swift_bridgeObjectRelease();
    return sub_1C4011048((uint64_t)v8, v22);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C400E1B4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = type metadata accessor for Proto_CRDT(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = MEMORY[0x1F4188790](v15 - 8);
  unint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v20 = a5 >> 1;
  uint64_t v21 = (a5 >> 1) - a4;
  if (__OFSUB__(a5 >> 1, a4))
  {
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v21 != 1)
  {
    if (v20 == a4)
    {
      __break(1u);
    }
    else if (v20 > a4)
    {
      uint64_t v27 = a3[a4];
      if (v21) {
        unint64_t v28 = a4 + 1;
      }
      else {
        unint64_t v28 = a5 >> 1;
      }
      swift_unknownObjectRetain();
      sub_1C4010D6C(v27, v14);
      sub_1C400E1B4(a1, a2, a3, v28, a5);
      swift_unknownObjectRelease();
      return sub_1C4011048((uint64_t)v14, v27);
    }
    __break(1u);
    return result;
  }
  if (v20 == a4) {
    goto LABEL_20;
  }
  if (v20 <= a4)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  a5 = a3[a4];
  a3 = *(void **)v6;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_22:
  }
    a3 = sub_1C3FA1854(0, a3[2] + 1, 1, a3);
  unint64_t v23 = a3[2];
  unint64_t v22 = a3[3];
  if (v23 >= v22 >> 1) {
    a3 = sub_1C3FA1854((void *)(v22 > 1), v23 + 1, 1, a3);
  }
  a3[2] = v23 + 1;
  a3[v23 + 4] = a5;
  *(void *)uint64_t v6 = a3;
  sub_1C3FA1CCC(a1, (uint64_t)v19, type metadata accessor for Proto_CRDT);
  unint64_t v24 = *(void *)(v6 + 8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v24 = sub_1C3FF1600(0, *(void *)(v24 + 16) + 1, 1, v24);
  }
  unint64_t v26 = *(void *)(v24 + 16);
  unint64_t v25 = *(void *)(v24 + 24);
  if (v26 >= v25 >> 1) {
    unint64_t v24 = sub_1C3FF1600(v25 > 1, v26 + 1, 1, v24);
  }
  *(void *)(v24 + 16) = v26 + 1;
  uint64_t result = sub_1C3F9775C((uint64_t)v19, v24+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v26, type metadata accessor for Proto_CRDT);
  *(void *)(v6 + 8) = v24;
  return result;
}

uint64_t sub_1C400E494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C400E4B8(a1, a2, 1, a3, a4);
}

uint64_t sub_1C400E4B8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t v67 = a5;
  uint64_t v6 = v5;
  uint64_t v65 = a2;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v60 = (uint64_t)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v59 = (uint64_t)&v57 - v13;
  uint64_t v63 = type metadata accessor for Proto_CustomCRValue(0);
  uint64_t v14 = MEMORY[0x1F4188790](v63);
  uint64_t v62 = (uint64_t *)((char *)&v57 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v64 = (uint64_t *)((char *)&v57 - v16);
  uint64_t v58 = type metadata accessor for Proto_Value(0);
  uint64_t v61 = *(void *)(v58 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v58);
  uint64_t v66 = (uint64_t)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v72 = (uint64_t)&v57 - v20;
  uint64_t v21 = *(void *)(a4 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  unint64_t v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  unint64_t v26 = (char *)&v57 - v25;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  v27((char *)&v57 - v25, a1, a4);
  if (a3)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v26, a4);
  }
  else
  {
    v27(v24, (uint64_t)v26, a4);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF878);
    if (swift_dynamicCast())
    {
      uint64_t v29 = *((void *)&v70 + 1);
      uint64_t v30 = v71;
      __swift_project_boxed_opaque_existential_1(&v69, *((uint64_t *)&v70 + 1));
      char v31 = (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v26, a4);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v69);
      if (v31) {
        return result;
      }
    }
    else
    {
      uint64_t v71 = 0;
      long long v69 = 0u;
      long long v70 = 0u;
      (*(void (**)(char *, uint64_t))(v21 + 8))(v26, a4);
      uint64_t result = sub_1C3F962E0((uint64_t)&v69, (uint64_t *)&unk_1EBBBBF20);
    }
  }
  MEMORY[0x1F4188790](result);
  uint64_t v32 = v68;
  uint64_t result = sub_1C3F6DC00((void (*)(uint64_t))sub_1C4016644, v72);
  if (!v32)
  {
    if (v65 < 0)
    {
      uint64_t result = sub_1C4497F48();
      __break(1u);
      return result;
    }
    uint64_t v33 = *(void *)(v6 + 16) + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
    swift_beginAccess();
    uint64_t v34 = *(int *)(v58 + 20);
    uint64_t v35 = *(void *)(v33 + v34)
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    uint64_t v36 = v59;
    sub_1C3F970C4(v35, v59, &qword_1EBBBF8A0);
    uint64_t v37 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48);
    int v39 = v38(v36, 1, v37);
    uint64_t v40 = MEMORY[0x1E4FBC860];
    if (v39 == 1)
    {
      sub_1C3F962E0(v36, &qword_1EBBBF8A0);
      uint64_t v41 = v64;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v41 = v64;
      if (EnumCaseMultiPayload == 13)
      {
        sub_1C3F9775C(v36, (uint64_t)v64, type metadata accessor for Proto_CustomCRValue);
        goto LABEL_15;
      }
      sub_1C3F9229C(v36, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    }
    *uint64_t v41 = v40;
    v41[1] = v40;
    sub_1C4496888();
LABEL_15:
    uint64_t v43 = (void *)*v41;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v43 = sub_1C3FA1854(0, v43[2] + 1, 1, v43);
    }
    unint64_t v45 = v43[2];
    unint64_t v44 = v43[3];
    if (v45 >= v44 >> 1) {
      uint64_t v43 = sub_1C3FA1854((void *)(v44 > 1), v45 + 1, 1, v43);
    }
    v43[2] = v45 + 1;
    uint64_t v46 = v64;
    v43[v45 + 4] = v65;
    *uint64_t v46 = v43;
    sub_1C3F6FE54((uint64_t)v46);
    sub_1C3FA1CCC(v72, v66, type metadata accessor for Proto_Value);
    uint64_t v47 = *(void *)(v33 + v34)
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    uint64_t v48 = v47;
    uint64_t v49 = v60;
    sub_1C3F970C4(v48, v60, &qword_1EBBBF8A0);
    if (v38(v49, 1, v37) == 1)
    {
      sub_1C3F962E0(v49, &qword_1EBBBF8A0);
      uint64_t v51 = v61;
      uint64_t v50 = v62;
    }
    else
    {
      int v52 = swift_getEnumCaseMultiPayload();
      uint64_t v51 = v61;
      if (v52 == 13)
      {
        uint64_t v50 = v62;
        sub_1C3F9775C(v49, (uint64_t)v62, type metadata accessor for Proto_CustomCRValue);
LABEL_25:
        unint64_t v54 = v50[1];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v54 = sub_1C3F6DE60(0, *(void *)(v54 + 16) + 1, 1, v54);
        }
        unint64_t v56 = *(void *)(v54 + 16);
        unint64_t v55 = *(void *)(v54 + 24);
        if (v56 >= v55 >> 1) {
          unint64_t v54 = sub_1C3F6DE60(v55 > 1, v56 + 1, 1, v54);
        }
        *(void *)(v54 + 16) = v56 + 1;
        sub_1C3F9775C(v66, v54+ ((*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80))+ *(void *)(v51 + 72) * v56, type metadata accessor for Proto_Value);
        v50[1] = v54;
        sub_1C3F6FE54((uint64_t)v50);
        swift_endAccess();
        return sub_1C3F9229C(v72, type metadata accessor for Proto_Value);
      }
      sub_1C3F9229C(v49, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      uint64_t v50 = v62;
    }
    uint64_t v53 = MEMORY[0x1E4FBC860];
    *uint64_t v50 = MEMORY[0x1E4FBC860];
    v50[1] = v53;
    sub_1C4496888();
    goto LABEL_25;
  }
  return result;
}

uint64_t _s9Coherence9CREncoderC18CRDTKeyedContainerCfd_0()
{
  swift_release();
  swift_release();
  return v0;
}

uint64_t _s9Coherence9CREncoderC18CRDTKeyedContainerCfD_0()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C400ED00(uint64_t a1)
{
  return sub_1C3FA10C4(a1);
}

uint64_t sub_1C400ED2C(uint64_t a1)
{
  if (*(unsigned char *)(*(void *)(v1 + 16) + 72) == 1)
  {
    swift_beginAccess();
    return sub_1C43EEEE0(a1);
  }
  else
  {
    swift_beginAccess();
    return sub_1C3F700C4(a1);
  }
}

uint64_t sub_1C400EDB8(uint64_t result)
{
  uint64_t v2 = result;
  if (*(unsigned char *)(*(void *)(v1 + 16) + 72) == 1 && result < 0)
  {
    __break(1u);
  }
  else
  {
    swift_beginAccess();
    return sub_1C43EEEE0(v2);
  }
  return result;
}

uint64_t sub_1C400EE34(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_1C4004870(a1, a2);
  swift_beginAccess();
  return sub_1C43EF8A8(v2);
}

uint64_t sub_1C400EEA4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v50 = a1;
  uint64_t v3 = type metadata accessor for Proto_Value(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  uint64_t v48 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v46 = (char *)&v45 - v8;
  uint64_t v9 = type metadata accessor for Proto_RepeatedValue(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (uint64_t *)((char *)&v45 - v13);
  uint64_t v15 = sub_1C44965D8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_1C4496858();
  uint64_t v19 = MEMORY[0x1F4188790](v51);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v45 - v22;
  uint64_t v49 = v2;
  if (*(unsigned char *)(*(void *)(v2 + 16) + 72))
  {
    if (*(unsigned char *)(*(void *)(v2 + 16) + 72) == 1)
    {
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v24 = 0xD00000000000001FLL;
      *(void *)(v24 + 8) = 0x80000001C44B11E0;
      *(unsigned char *)(v24 + 16) = 0;
      return swift_willThrow();
    }
    else
    {
      uint64_t v38 = v20;
      (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v50, v15);
      sub_1C4496818();
      sub_1C3FAD5C8((unint64_t *)&qword_1EA39AD60, MEMORY[0x1E4F70C60]);
      uint64_t v39 = v51;
      uint64_t v40 = v52;
      uint64_t v41 = sub_1C4496AA8();
      if (v40)
      {
        return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v23, v39);
      }
      else
      {
        uint64_t v43 = v41;
        unint64_t v44 = v42;
        swift_beginAccess();
        sub_1C3F7E324(v43, v44);
        sub_1C43EFB20(v43, v44);
        (*(void (**)(char *, uint64_t))(v38 + 8))(v23, v39);
        return sub_1C3F7E2CC(v43, v44);
      }
    }
  }
  else
  {
    uint64_t v26 = (uint64_t)v7;
    uint64_t v45 = v20;
    uint64_t v27 = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v50, v15);
    sub_1C4496818();
    sub_1C4496888();
    uint64_t v28 = (uint64_t)v46;
    sub_1C4496888();
    uint64_t v29 = v47;
    uint64_t v30 = *(int *)(v47 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    uint64_t v31 = qword_1EBBBF8B8;
    *(void *)(v28 + v30) = qword_1EBBBF8B8;
    swift_retain();
    uint64_t v32 = sub_1C4496848();
    sub_1C3F700C4(v32);
    sub_1C4496888();
    *(void *)(v26 + *(int *)(v29 + 20)) = v31;
    swift_retain();
    int v33 = sub_1C4496828();
    sub_1C3F700C4(v33);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC680);
    uint64_t v34 = *(void *)(v48 + 72);
    unint64_t v35 = (*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1C449B4A0;
    uint64_t v37 = v36 + v35;
    sub_1C3FA1CCC(v28, v37, type metadata accessor for Proto_Value);
    sub_1C3FA1CCC(v26, v37 + v34, type metadata accessor for Proto_Value);
    *uint64_t v14 = v36;
    sub_1C3FA1CCC((uint64_t)v14, (uint64_t)v12, type metadata accessor for Proto_RepeatedValue);
    swift_beginAccess();
    sub_1C43EF8B0((uint64_t)v12);
    sub_1C3F9229C(v26, type metadata accessor for Proto_Value);
    sub_1C3F9229C(v28, type metadata accessor for Proto_Value);
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v27, v51);
    return sub_1C3F9229C((uint64_t)v14, type metadata accessor for Proto_RepeatedValue);
  }
}

uint64_t sub_1C400F484(uint64_t a1, unint64_t a2)
{
  return sub_1C43EFB20(a1, a2);
}

uint64_t sub_1C400F4F8(double a1)
{
  return sub_1C43EFD7C(a1);
}

uint64_t sub_1C400F558(float a1)
{
  if (*(unsigned __int8 *)(*(void *)(v1 + 16) + 72) >= 2u)
  {
    swift_beginAccess();
    return sub_1C43EFFD8(a1);
  }
  else
  {
    swift_beginAccess();
    return sub_1C43EFD7C(a1);
  }
}

uint64_t sub_1C400F5F8(uint64_t a1)
{
  uint64_t v1 = sub_1C3FA10C4(a1);
  swift_beginAccess();
  return sub_1C3F703BC(v1);
}

uint64_t sub_1C400F668(long long *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Proto_Version(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (void *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  long long v8 = *a1;
  sub_1C3F9FF10(*(void *)(v2 + 16), v6);
  swift_beginAccess();
  return sub_1C43EF158((uint64_t)v6);
}

void sub_1C400F720(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0980);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v51 = (char *)v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v6 - 8);
  long long v8 = (char *)v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Asset(0);
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v49 = (uint64_t)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (void *)((char *)v48 - v12);
  uint64_t v14 = *a1;
  uint64_t v15 = *(void *)(v14 + 16);
  unint64_t v16 = *(void *)(v14 + 24);
  uint64_t v17 = v2 + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
  swift_beginAccess();
  uint64_t v18 = *(void *)(v17 + *(int *)(type metadata accessor for Proto_Value(0) + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v8, &qword_1EBBBF8A0);
  uint64_t v19 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v8, 1, v19) == 1)
  {
    sub_1C3F7E324(v15, v16);
    sub_1C3F962E0((uint64_t)v8, &qword_1EBBBF8A0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 12)
    {
      sub_1C3F9775C((uint64_t)v8, (uint64_t)v13, type metadata accessor for Proto_Asset);
      sub_1C3F7E324(v15, v16);
      goto LABEL_7;
    }
    sub_1C3F7E324(v15, v16);
    sub_1C3F9229C((uint64_t)v8, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  *uint64_t v13 = 0;
  v13[1] = sub_1C4496868();
  _OWORD v13[2] = v20;
  v13[3] = sub_1C4496868();
  v13[4] = v21;
  sub_1C4496888();
LABEL_7:
  sub_1C3F7E2CC(v13[1], v13[2]);
  v13[1] = v15;
  _OWORD v13[2] = v16;
  sub_1C43F0234((uint64_t)v13);
  swift_endAccess();
  uint64_t v22 = *(void *)(v2 + 16);
  swift_beginAccess();
  if (*(void *)(v22 + 48))
  {
    uint64_t v23 = swift_allocBox();
    uint64_t v25 = v24;
    *uint64_t v24 = 0;
    v24[1] = sub_1C4496868();
    v25[2] = v26;
    v25[3] = sub_1C4496868();
    v25[4] = v27;
    sub_1C4496888();
    uint64_t v28 = *(void *)(v14 + 16);
    unint64_t v29 = *(void *)(v14 + 24);
    v48[0] = v22;
    uint64_t v30 = v25[1];
    unint64_t v31 = v25[2];
    v25[1] = v28;
    v25[2] = v29;
    sub_1C3F7E324(v28, v29);
    sub_1C3F7E2CC(v30, v31);
    dispatch_semaphore_t v32 = dispatch_semaphore_create(0);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v23;
    *(void *)(v33 + 24) = v32;
    uint64_t v34 = sub_1C44975A8();
    uint64_t v35 = (uint64_t)v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v51, 1, 1, v34);
    uint64_t v36 = swift_allocObject();
    swift_weakInit();
    uint64_t v37 = (void *)swift_allocObject();
    void v37[2] = 0;
    v37[3] = 0;
    v37[4] = v36;
    v37[5] = v14;
    v37[6] = sub_1C40166DC;
    v37[7] = v33;
    v48[1] = v23;
    swift_retain();
    uint64_t v38 = v32;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C4011E50(v35, (uint64_t)&unk_1EA39C090, (uint64_t)v37);
    sub_1C3F962E0(v35, (uint64_t *)&unk_1EBBC0980);
    sub_1C4496CF8();
    swift_allocObject();
    sub_1C4496D08();
    swift_release();
    swift_release();
    swift_release();
    sub_1C4497AD8();
    uint64_t v40 = sub_1C40046BC();
    if (*v39)
    {
      uint64_t v41 = v39;
      swift_beginAccess();
      uint64_t v42 = (uint64_t)v25;
      uint64_t v43 = v49;
      sub_1C3FA1CCC(v42, v49, type metadata accessor for Proto_Asset);
      unint64_t v44 = *v41;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v41 = v44;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v44 = sub_1C3FF1634(0, *(void *)(v44 + 16) + 1, 1, v44);
        *uint64_t v41 = v44;
      }
      unint64_t v47 = *(void *)(v44 + 16);
      unint64_t v46 = *(void *)(v44 + 24);
      if (v47 >= v46 >> 1)
      {
        unint64_t v44 = sub_1C3FF1634(v46 > 1, v47 + 1, 1, v44);
        *uint64_t v41 = v44;
      }
      *(void *)(v44 + 16) = v47 + 1;
      sub_1C3F9775C(v43, v44+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v47, type metadata accessor for Proto_Asset);
      ((void (*)(unsigned char *, void))v40)(v52, 0);
    }
    else
    {
      ((void (*)(unsigned char *, void))v40)(v52, 0);
    }
    swift_release();
  }
}

uint64_t sub_1C400FD4C()
{
  type metadata accessor for Proto_Asset(0);
  uint64_t v0 = swift_projectBox();
  uint64_t v1 = sub_1C44964B8();
  uint64_t v3 = v2;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v0 + 24);
  unint64_t v5 = *(void *)(v0 + 32);
  *(void *)(v0 + 24) = v1;
  *(void *)(v0 + 32) = v3;
  sub_1C3F7E2CC(v4, v5);
  return sub_1C4497AE8();
}

uint64_t sub_1C400FE00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a1;
  uint64_t v41 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v39 = (uint64_t)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Optional(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v40 = (uint64_t)&v38 - v10;
  uint64_t v38 = type metadata accessor for Proto_Value(0);
  MEMORY[0x1F4188790](v38);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C4497B38();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v38 - v16;
  uint64_t v18 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v42, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, a2) != 1)
  {
    uint64_t v23 = v6;
    uint64_t v24 = (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(v20, v17, a2);
    MEMORY[0x1F4188790](v24);
    uint64_t v25 = v41;
    *(&v38 - 4) = a2;
    *(&v38 - 3) = v25;
    *(&v38 - 2) = (uint64_t)v20;
    *(&v38 - 1) = v26;
    uint64_t v27 = v43;
    sub_1C3F6DC00((void (*)(uint64_t))sub_1C4016848, (uint64_t)v12);
    uint64_t v28 = v20;
    if (v27) {
      return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v20, a2);
    }
    uint64_t v29 = (uint64_t)v12;
    uint64_t v30 = a2;
    uint64_t v43 = v28;
    uint64_t v31 = v44 + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
    swift_beginAccess();
    uint64_t v32 = *(void *)(v31 + *(int *)(v38 + 20))
        + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    uint64_t v33 = v39;
    sub_1C3F970C4(v32, v39, &qword_1EBBBF8A0);
    uint64_t v34 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34) == 1)
    {
      sub_1C3F962E0(v33, &qword_1EBBBF8A0);
      uint64_t v35 = v40;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v35 = v40;
      if (EnumCaseMultiPayload == 8)
      {
        sub_1C3F9775C(v33, v40, type metadata accessor for Proto_Optional);
LABEL_15:
        sub_1C43F04A4(v29);
        sub_1C43F0700(v35);
        swift_endAccess();
        return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v43, v30);
      }
      sub_1C3F9229C(v33, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    }
    sub_1C4496888();
    uint64_t v37 = *(int *)(v23 + 20);
    if (qword_1EBBBB580 != -1) {
      swift_once();
    }
    *(void *)(v35 + v37) = qword_1EBBBB578;
    swift_retain();
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  sub_1C4496888();
  uint64_t v21 = *(int *)(v6 + 20);
  if (qword_1EBBBB580 != -1) {
    swift_once();
  }
  *(void *)&v9[v21] = qword_1EBBBB578;
  swift_beginAccess();
  swift_retain();
  return sub_1C43F0700((uint64_t)v9);
}

uint64_t sub_1C401038C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = type metadata accessor for Proto_Value(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C4127F74(*(void *)(v3 + 16), a1, a2, a3, (uint64_t)v10);
  if (!v4)
  {
    uint64_t v12 = v3 + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v10, v12, type metadata accessor for Proto_Value);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1C4010484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v10 = type metadata accessor for Proto_Value(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C4129C78(*(void *)(v4 + 16), a1, a2, a3, a4, (uint64_t)v12);
  if (!v5)
  {
    uint64_t v14 = v4 + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v12, v14, type metadata accessor for Proto_Value);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1C401058C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v14 = type metadata accessor for Proto_Value(0);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1C42429E0(*(void *)(v6 + 16), a1, a2, a3, a4, a5, a6, (uint64_t)v16);
  if (!v7)
  {
    uint64_t v18 = v6 + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v16, v18, type metadata accessor for Proto_Value);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_1C40106AC(uint64_t a1)
{
  uint64_t v49 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v46 = (uint64_t)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v45 = (uint64_t)&v42 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v47 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = type metadata accessor for Proto_TaggedValue(0);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = type metadata accessor for Proto_Value(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v1 + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
  swift_beginAccess();
  sub_1C3FA1CCC(v21, (uint64_t)v20, type metadata accessor for Proto_Value);
  swift_beginAccess();
  uint64_t v44 = *(int *)(v17 + 20);
  uint64_t v22 = *(void *)(v21 + v44)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v22, (uint64_t)v10, &qword_1EBBBF8A0);
  uint64_t v23 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v42 = v24 + 48;
  if (v43(v10, 1, v23) == 1)
  {
    sub_1C3F962E0((uint64_t)v10, &qword_1EBBBF8A0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 11)
    {
      sub_1C3F9775C((uint64_t)v10, (uint64_t)v16, type metadata accessor for Proto_TaggedValue);
      goto LABEL_9;
    }
    sub_1C3F9229C((uint64_t)v10, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v25 = *(int *)(v11 + 20);
  if (qword_1EA39AF70 != -1) {
    swift_once();
  }
  *(void *)&v16[v25] = qword_1EA39AF60;
  swift_retain();
LABEL_9:
  uint64_t v48 = v11;
  uint64_t v26 = *(int *)(v11 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_TaggedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = swift_retain();
    *(void *)&v16[v26] = sub_1C4400A40(v27);
    swift_release();
  }
  uint64_t v28 = *(void *)&v16[v26];
  uint64_t v29 = v45;
  sub_1C3F9775C((uint64_t)v20, v45, type metadata accessor for Proto_Value);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v29, 0, 1, v17);
  uint64_t v30 = v46;
  sub_1C3F961BC(v29, v46, &qword_1EBBC0540);
  uint64_t v31 = v28 + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v30, v31, &qword_1EBBC0540);
  swift_endAccess();
  swift_release();
  sub_1C43F0970((uint64_t)v16);
  uint64_t v32 = *(void *)(v21 + v44)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v33 = v32;
  uint64_t v34 = v47;
  sub_1C3F970C4(v33, v47, &qword_1EBBBF8A0);
  if (v43((char *)v34, 1, v23) == 1)
  {
    sub_1C3F962E0(v34, &qword_1EBBBF8A0);
    uint64_t v35 = v48;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v35 = v48;
    if (EnumCaseMultiPayload == 11)
    {
      sub_1C3F9775C(v34, (uint64_t)v14, type metadata accessor for Proto_TaggedValue);
      goto LABEL_19;
    }
    sub_1C3F9229C(v34, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v37 = *(int *)(v35 + 20);
  if (qword_1EA39AF70 != -1) {
    swift_once();
  }
  *(void *)&v14[v37] = qword_1EA39AF60;
  swift_retain();
LABEL_19:
  uint64_t v38 = *(int *)(v35 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_TaggedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v39 = swift_retain();
    *(void *)&v14[v38] = sub_1C4400A40(v39);
    swift_release();
  }
  uint64_t v40 = *(void *)&v14[v38];
  swift_beginAccess();
  *(void *)(v40 + 16) = v49;
  sub_1C43F0970((uint64_t)v14);
  return swift_endAccess();
}

uint64_t CREncoder.CRValueContainer.deinit()
{
  return sub_1C4010D24(&OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value, type metadata accessor for Proto_Value);
}

uint64_t sub_1C4010D24(void *a1, uint64_t (*a2)(void))
{
  swift_release();
  sub_1C3F9229C(v2 + *a1, a2);
  return v2;
}

uint64_t sub_1C4010D6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto_CRDT(0);
  uint64_t result = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v2;
  uint64_t v14 = *(void *)(*v2 + 16);
  if (!v14)
  {
LABEL_10:
    uint64_t v22 = MEMORY[0x1E4FBC860];
    *a2 = MEMORY[0x1E4FBC860];
    a2[1] = v22;
    a2[2] = v22;
    type metadata accessor for Proto_Struct(0);
    return sub_1C4496888();
  }
  if (*(void *)(v13 + 32) != a1)
  {
    uint64_t v15 = 0;
    uint64_t v16 = v13 + 40;
    uint64_t v17 = v14 - 1;
    while (v17 != v15)
    {
      uint64_t v18 = *(void *)(v16 + 8 * v15++);
      if (v18 == a1) {
        goto LABEL_7;
      }
    }
    goto LABEL_10;
  }
  uint64_t v15 = 0;
LABEL_7:
  uint64_t v19 = v2[1];
  if (v15 >= *(void *)(v19 + 16))
  {
    __break(1u);
    return result;
  }
  sub_1C3FA1CCC(v19+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v15, (uint64_t)v12, type metadata accessor for Proto_CRDT);
  uint64_t v20 = *(void *)&v12[*(int *)(v8 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v7, &qword_1EBBC0648);
  uint64_t v21 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v7, 1, v21) == 1)
  {
    sub_1C3F962E0((uint64_t)v7, &qword_1EBBC0648);
LABEL_14:
    uint64_t v23 = MEMORY[0x1E4FBC860];
    *a2 = MEMORY[0x1E4FBC860];
    a2[1] = v23;
    a2[2] = v23;
    type metadata accessor for Proto_Struct(0);
    sub_1C4496888();
    return sub_1C3F9229C((uint64_t)v12, type metadata accessor for Proto_CRDT);
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_1C3F9229C((uint64_t)v7, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_14;
  }
  sub_1C3F9775C((uint64_t)v7, (uint64_t)a2, type metadata accessor for Proto_Struct);
  return sub_1C3F9229C((uint64_t)v12, type metadata accessor for Proto_CRDT);
}

uint64_t sub_1C4011048(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Proto_CRDT(0);
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = type metadata accessor for Proto_Struct(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v33 - v16;
  uint64_t v18 = (void *)*v3;
  uint64_t v19 = *(void *)(*v3 + 16);
  if (!v19)
  {
LABEL_11:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = sub_1C3FA1854(0, v18[2] + 1, 1, v18);
    }
    unint64_t v28 = v18[2];
    unint64_t v27 = v18[3];
    if (v28 >= v27 >> 1) {
      uint64_t v18 = sub_1C3FA1854((void *)(v27 > 1), v28 + 1, 1, v18);
    }
    v18[2] = v28 + 1;
    v18[v28 + 4] = a2;
    *uint64_t v3 = v18;
    sub_1C4496888();
    uint64_t v29 = *(int *)(v6 + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)&v11[v29] = qword_1EBBC0660;
    sub_1C3FA1CCC(a1, (uint64_t)v15, type metadata accessor for Proto_Struct);
    swift_retain();
    sub_1C3F62D84((uint64_t)v15);
    sub_1C3FA1CCC((uint64_t)v11, (uint64_t)v9, type metadata accessor for Proto_CRDT);
    unint64_t v30 = v3[1];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v30 = sub_1C3FF1600(0, *(void *)(v30 + 16) + 1, 1, v30);
    }
    unint64_t v32 = *(void *)(v30 + 16);
    unint64_t v31 = *(void *)(v30 + 24);
    if (v32 >= v31 >> 1) {
      unint64_t v30 = sub_1C3FF1600(v31 > 1, v32 + 1, 1, v30);
    }
    *(void *)(v30 + 16) = v32 + 1;
    sub_1C3F9775C((uint64_t)v9, v30+ ((*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80))+ *(void *)(v34 + 72) * v32, type metadata accessor for Proto_CRDT);
    v3[1] = v30;
    sub_1C3F9229C(a1, type metadata accessor for Proto_Struct);
    uint64_t v25 = type metadata accessor for Proto_CRDT;
    uint64_t v26 = (uint64_t)v11;
    return sub_1C3F9229C(v26, v25);
  }
  if (v18[4] != a2)
  {
    uint64_t v20 = 0;
    uint64_t v21 = v19 - 1;
    while (v21 != v20)
    {
      uint64_t v22 = v18[v20++ + 5];
      if (v22 == a2) {
        goto LABEL_7;
      }
    }
    goto LABEL_11;
  }
  uint64_t v20 = 0;
LABEL_7:
  sub_1C3FA1CCC(a1, (uint64_t)&v33 - v16, type metadata accessor for Proto_Struct);
  unint64_t v23 = v3[1];
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = sub_1C4232818(v23);
    unint64_t v23 = result;
  }
  if (v20 < *(void *)(v23 + 16))
  {
    sub_1C3F62D84((uint64_t)v17);
    v3[1] = v23;
    uint64_t v25 = type metadata accessor for Proto_Struct;
    uint64_t v26 = a1;
    return sub_1C3F9229C(v26, v25);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4011448(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C40114B0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C4011528(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C4011590@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT<>.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C4011608(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C4011670@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C40116E8(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C4011750@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C40117C8(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C4011830@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C40118A8(void *a1, char *a2)
{
  return sub_1C3FFAD54(a1, *a2, *v2, sub_1C40085C8);
}

char *sub_1C40118DC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t result = sub_1C3FFAE34(a1, a2, (uint64_t (*)(uint64_t))sub_1C41618CC);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1C401191C(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C4011984@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT<>.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C40119FC(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C4011A64@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C4011ADC(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C4011B44@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C4011BBC(void *a1, char *a2)
{
  return sub_1C3FFAD54(a1, *a2, *v2, sub_1C4008CE0);
}

char *sub_1C4011BF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t result = sub_1C3FFAE34(a1, a2, sub_1C4341D38);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_1C4011C30(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C4011C98@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C4011D10(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C4011D78@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C4011DF0(void *a1, char *a2)
{
  return sub_1C3FFAD54(a1, *a2, *v2, sub_1C40093F8);
}

uint64_t sub_1C4011E24@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C3FFBAA0(a1, a2, (void (*)(uint64_t))CRCounter.init(from:), a3);
}

uint64_t sub_1C4011E50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0980);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3F970C4(a1, (uint64_t)v8, (uint64_t *)&unk_1EBBC0980);
  uint64_t v9 = sub_1C44975A8();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C3F962E0((uint64_t)v8, (uint64_t *)&unk_1EBBC0980);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_1C4497578();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1C4497598();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1C4012044(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C40120AC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C4012124(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C401218C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C4012204(void *a1, char *a2)
{
  return sub_1C3FFAD54(a1, *a2, *v2, sub_1C4009B10);
}

uint64_t sub_1C4012238@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C3FFBAA0(a1, a2, (void (*)(uint64_t))AnyCRDT.init(from:), a3);
}

uint64_t sub_1C4012264(void *a1, char *a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.serializedData(_:version:)(a1, a2, a3, WitnessTable);
}

uint64_t sub_1C40122CC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return CRDT.init(serializedData:)(a1, a2, a3, WitnessTable, a4);
}

uint64_t sub_1C4012344(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, &qword_1EBBBC6D0, type metadata accessor for Proto_RLE);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C4012380(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, &qword_1EA39C0B0, type metadata accessor for Proto_Set.Element);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C40123BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, qword_1EBBBF298, type metadata accessor for Proto_CRDT);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C40123F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, &qword_1EBBBB2C0, type metadata accessor for Proto_Subsequence);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C4012434(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, &qword_1EA39C088, type metadata accessor for Proto_CustomCRDT.Sibling);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C4012470(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, (uint64_t *)&unk_1EBBBC168, type metadata accessor for Proto_Reference);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C40124AC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C4012914(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C40124CC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C4012A80(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C40124EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C4012C28(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C401250C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C40130DC(a1, a2, a3, *v3, &qword_1EA39BFB0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C401253C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3F69010(a1, a2, a3, (void *)*v3, &qword_1EA39C148, &qword_1EA39C150);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C401256C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3F69010(a1, a2, a3, (void *)*v3, &qword_1EA39C158, &qword_1EA39C160);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C401259C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C4012DD0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C40125BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3F69010(a1, a2, a3, (void *)*v3, &qword_1EA39C128, &qword_1EA39C130);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C40125EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C4013804(a1, a2, a3, (void *)*v3, &qword_1EA39C0C8, &qword_1EA39C0D0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C401261C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3F6ECD4(a1, a2, a3, *v3, qword_1EBBBC6D8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C4012644(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, &qword_1EA39B890, type metadata accessor for Proto_KeyPath);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C4012680(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C4012F5C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C40126A0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C40130DC(a1, a2, a3, *v3, (uint64_t *)&unk_1EA39B898);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C40126D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, &qword_1EA39C0A0, type metadata accessor for Proto4_Version.Seen);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C401270C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, &qword_1EA39C0B8, type metadata accessor for Proto4_Struct.Field);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C4012748(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, &qword_1EA39C0A8, type metadata accessor for Proto4_Set.Element);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C4012784(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, &qword_1EA39C0C0, type metadata accessor for Proto4_Reference);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C40127C0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C401324C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C40127E0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3F6ECD4(a1, a2, a3, *v3, qword_1EA39B148);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C4012808(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C40133D8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C4012828(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C4013538(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C4012848(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C4013804(a1, a2, a3, (void *)*v3, &qword_1EA39C0E0, &qword_1EA39C0E8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C4012878(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C40139B0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C4012898(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C4013B1C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C40128B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C3FB5970(a1, a2, a3, (void *)*v3, &qword_1EBBBB2B8, type metadata accessor for Proto_Timestamp);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C40128F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C4013CC0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C4012914(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BF10);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C4012A80(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C108);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C110);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C4012C28(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C118);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C120);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C4012DD0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C138);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C140);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C4012F5C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBBF48);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C40130C8(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C3F69010(a1, a2, a3, a4, &qword_1EBBBC688, &qword_1EBBBC690);
}

uint64_t sub_1C40130DC(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C401324C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B098);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39AE48);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C40133D8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BF68);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C4013538(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA228);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    int64_t v12 = v11 - 32;
    if (v11 < 32) {
      int64_t v12 = v11 - 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = v12 & 0xFFFFFFFFFFFFFFFELL;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[2 * v8]) {
      memmove(v13, v14, 2 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[2 * v8] || v13 >= &v14[2 * v8])
  {
    memcpy(v13, v14, 2 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C4013694(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B0A0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  int64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C40137E4(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C3FB5970(a1, a2, a3, a4, &qword_1EA39C0F0, (uint64_t (*)(void))type metadata accessor for Replica);
}

uint64_t sub_1C4013804(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    unint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    _OWORD v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
  }
  else
  {
    unint64_t v13 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 24 * v11) {
      memmove(v13 + 4, a4 + 4, 24 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 24 * v11 || v15 >= v16 + 24 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C40139B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BFB8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C4013B1C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C0F8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C100);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C4013CC0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BF88);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 24 * v8) {
      memmove(v10 + 4, a4 + 4, 24 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 24 * v8 || v12 >= v13 + 24 * v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BF90);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

void sub_1C4013E68(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v6)
  {
    if (!*(void *)(a1 + 16))
    {
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    long long v50 = *(_OWORD *)(a1 + 56);
    unint64_t v8 = *(void *)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v9 = *(void *)(a1 + 32);
    sub_1C3F7E324(v9, v8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v7)
    {
      uint64_t v48 = a1;
      uint64_t v52 = v9;
      unint64_t v53 = v8;
      uint64_t v49 = a3;
      uint64_t v10 = *a3;
      unint64_t v12 = sub_1C3F850CC(v9, v8);
      uint64_t v13 = *(void *)(v10 + 16);
      BOOL v14 = (v11 & 1) == 0;
      uint64_t v15 = v13 + v14;
      if (__OFADD__(v13, v14))
      {
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      char v16 = v11;
      if (*(void *)(v10 + 24) >= v15)
      {
        if (a2)
        {
          if ((v11 & 1) == 0) {
            goto LABEL_14;
          }
        }
        else
        {
          sub_1C406A508();
          if ((v16 & 1) == 0) {
            goto LABEL_14;
          }
        }
      }
      else
      {
        sub_1C406656C(v15, a2 & 1);
        uint64_t v17 = sub_1C3F850CC(v9, v8);
        if ((v16 & 1) != (v18 & 1))
        {
LABEL_30:
          sub_1C4498558();
          __break(1u);
LABEL_31:
          sub_1C4497D28();
          sub_1C4497268();
          sub_1C4497E88();
          sub_1C4497268();
          sub_1C4497F58();
          __break(1u);
          return;
        }
        unint64_t v12 = v17;
        if ((v16 & 1) == 0)
        {
LABEL_14:
          uint64_t v22 = v49;
          unint64_t v23 = (void *)*v49;
          *(void *)(*v49 + 8 * (v12 >> 6) + 64) |= 1 << v12;
          uint64_t v24 = (uint64_t *)(v23[6] + 16 * v12);
          *uint64_t v24 = v9;
          v24[1] = v8;
          uint64_t v25 = v23[7] + 24 * v12;
          *(void *)uint64_t v25 = v7;
          *(_OWORD *)(v25 + 8) = v50;
          uint64_t v26 = v23[2];
          BOOL v27 = __OFADD__(v26, 1);
          uint64_t v28 = v26 + 1;
          if (v27)
          {
LABEL_29:
            __break(1u);
            goto LABEL_30;
          }
          v23[2] = v28;
          uint64_t v29 = v48;
          if (v6 != 1)
          {
            unint64_t v30 = (_OWORD *)(v48 + 96);
            unint64_t v31 = 1;
            while (v31 < *(void *)(v29 + 16))
            {
              long long v51 = *v30;
              unint64_t v33 = *((void *)v30 - 2);
              uint64_t v32 = *((void *)v30 - 1);
              uint64_t v34 = *((void *)v30 - 3);
              sub_1C3F7E324(v34, v33);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              if (!v32) {
                goto LABEL_25;
              }
              uint64_t v52 = v34;
              unint64_t v53 = v33;
              uint64_t v35 = *v22;
              unint64_t v36 = sub_1C3F850CC(v34, v33);
              uint64_t v38 = *(void *)(v35 + 16);
              BOOL v39 = (v37 & 1) == 0;
              BOOL v27 = __OFADD__(v38, v39);
              uint64_t v40 = v38 + v39;
              if (v27) {
                goto LABEL_28;
              }
              char v41 = v37;
              if (*(void *)(v35 + 24) < v40)
              {
                sub_1C406656C(v40, 1);
                unint64_t v36 = sub_1C3F850CC(v34, v33);
                if ((v41 & 1) != (v42 & 1)) {
                  goto LABEL_30;
                }
              }
              if (v41) {
                goto LABEL_11;
              }
              uint64_t v22 = v49;
              uint64_t v43 = (void *)*v49;
              *(void *)(*v49 + 8 * (v36 >> 6) + 64) |= 1 << v36;
              uint64_t v44 = (uint64_t *)(v43[6] + 16 * v36);
              *uint64_t v44 = v34;
              v44[1] = v33;
              uint64_t v45 = v43[7] + 24 * v36;
              *(void *)uint64_t v45 = v32;
              *(_OWORD *)(v45 + 8) = v51;
              uint64_t v46 = v43[2];
              BOOL v27 = __OFADD__(v46, 1);
              uint64_t v47 = v46 + 1;
              if (v27) {
                goto LABEL_29;
              }
              ++v31;
              v43[2] = v47;
              unint64_t v30 = (_OWORD *)((char *)v30 + 40);
              uint64_t v29 = v48;
              if (v6 == v31) {
                goto LABEL_25;
              }
            }
            goto LABEL_27;
          }
          goto LABEL_25;
        }
      }
LABEL_11:
      sub_1C3FE3FF0();
      uint64_t v19 = (void *)swift_allocError();
      *(void *)uint64_t v20 = 0xD000000000000015;
      *(void *)(v20 + 8) = 0x80000001C44B15C0;
      *(unsigned char *)(v20 + 16) = 0;
      swift_willThrow();
      id v21 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C3F7E2CC(v52, v53);
        swift_bridgeObjectRelease();

        return;
      }
      goto LABEL_31;
    }
  }
LABEL_25:
  swift_bridgeObjectRelease_n();
}

uint64_t sub_1C40142D8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  uint64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1C4014388(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_1C4014410(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for Proto_CRDT(0);
  MEMORY[0x1F4188790](v3 - 8);
  char v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  uint64_t result = sub_1C3F62C10();
  if (!v1)
  {
    uint64_t v8 = result;
    v11[1] = v6;
    uint64_t v9 = *(void *)(result + 16);
    swift_retain();
    sub_1C3FF0478(v9, (uint64_t)v5);
    uint64_t v10 = v8 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
    swift_beginAccess();
    sub_1C3FBD334((uint64_t)v5, v10, type metadata accessor for Proto_CRDT);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t _s9Coherence13CRCodingErrorO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  char v4 = *(unsigned char *)(a1 + 16);
  uint64_t v5 = *(void *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  switch(v4)
  {
    case 1:
      if (v7 != 1) {
        goto LABEL_27;
      }
      sub_1C4016918(*(void *)a1, v3, 1);
      uint64_t v12 = v5;
      uint64_t v13 = v6;
      char v14 = 1;
      goto LABEL_19;
    case 2:
      if (v7 != 2) {
        goto LABEL_27;
      }
      sub_1C4016918(*(void *)a1, v3, 2);
      uint64_t v12 = v5;
      uint64_t v13 = v6;
      char v14 = 2;
LABEL_19:
      sub_1C4016918(v12, v13, v14);
      char v9 = v2 == v5;
      break;
    case 3:
      if (v7 != 3) {
        goto LABEL_26;
      }
      if (v2 == v5 && v3 == v6) {
        char v9 = 1;
      }
      else {
        char v9 = sub_1C44982E8();
      }
      sub_1C40168EC(v5, v6, 3);
      sub_1C40168EC(v2, v3, 3);
      sub_1C4016918(v2, v3, 3);
      sub_1C4016918(v5, v6, 3);
      break;
    case 4:
      switch(v2)
      {
        case 1:
          if (v7 != 4 || v5 != 1 || v6 != 0) {
            goto LABEL_27;
          }
          sub_1C4016918(*(void *)a1, v3, 4);
          char v9 = 1;
          sub_1C4016918(1, 0, 4);
          return v9 & 1;
        case 2:
          if (v7 != 4 || v5 != 2 || v6 != 0) {
            goto LABEL_27;
          }
          sub_1C4016918(*(void *)a1, v3, 4);
          uint64_t v11 = 2;
          goto LABEL_56;
        case 3:
          if (v7 != 4 || v5 != 3 || v6 != 0) {
            goto LABEL_27;
          }
          sub_1C4016918(*(void *)a1, v3, 4);
          uint64_t v11 = 3;
          goto LABEL_56;
        default:
          if (v7 != 4 || (v6 | v5) != 0) {
            goto LABEL_27;
          }
          sub_1C4016918(*(void *)a1, v3, 4);
          uint64_t v11 = 0;
LABEL_56:
          sub_1C4016918(v11, 0, 4);
          char v9 = 1;
          break;
      }
      return v9 & 1;
    default:
      if (*(unsigned char *)(a2 + 16))
      {
LABEL_26:
        swift_bridgeObjectRetain();
LABEL_27:
        sub_1C40168EC(v5, v6, v7);
        sub_1C4016918(v2, v3, v4);
        sub_1C4016918(v5, v6, v7);
        char v9 = 0;
      }
      else
      {
        if (v2 == v5 && v3 == v6) {
          char v9 = 1;
        }
        else {
          char v9 = sub_1C44982E8();
        }
        sub_1C40168EC(v5, v6, 0);
        sub_1C40168EC(v2, v3, 0);
        sub_1C4016918(v2, v3, 0);
        sub_1C4016918(v5, v6, 0);
      }
      break;
  }
  return v9 & 1;
}

uint64_t type metadata accessor for CRDecoder.CRDTKeyedContainer()
{
  return self;
}

uint64_t type metadata accessor for CRDecoder.CRValueKeyedContainer()
{
  return self;
}

uint64_t sub_1C4014878(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v42 = *(void *)(v3 - 8);
  uint64_t v43 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6) {
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v37 = v1;
  uint64_t v47 = MEMORY[0x1E4FBC860];
  sub_1C4012644(0, v6, 0);
  uint64_t v8 = v47;
  uint64_t result = sub_1C40142D8(a1);
  uint64_t v11 = result;
  uint64_t v12 = 0;
  int v14 = v13 & 1;
  uint64_t v15 = a1 + 64;
  int64_t v39 = v6;
  uint64_t v40 = v10;
  uint64_t v36 = a1 + 96;
  uint64_t v41 = a1 + 64;
  while ((v11 & 0x8000000000000000) == 0 && v11 < 1 << *(unsigned char *)(a1 + 32))
  {
    if ((*(void *)(v15 + 8 * ((unint64_t)v11 >> 6)) & (1 << v11)) == 0) {
      goto LABEL_30;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_31;
    }
    uint64_t v45 = v10;
    unint64_t v46 = (unint64_t)v11 >> 6;
    int v38 = v14;
    uint64_t v44 = v12;
    uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    *uint64_t v5 = v7;
    sub_1C3F7E324(v18, v19);
    uint64_t v20 = v8;
    uint64_t v21 = sub_1C4496868();
    uint64_t v22 = a1;
    unint64_t v24 = v23;
    sub_1C4496888();
    uint64_t v25 = v21;
    uint64_t v8 = v20;
    sub_1C3F7E2CC(v25, v24);
    v5[1] = v18;
    v5[2] = v19;
    uint64_t v47 = v20;
    unint64_t v27 = *(void *)(v20 + 16);
    unint64_t v26 = *(void *)(v20 + 24);
    if (v27 >= v26 >> 1)
    {
      sub_1C4012644(v26 > 1, v27 + 1, 1);
      uint64_t v8 = v47;
    }
    *(void *)(v8 + 16) = v27 + 1;
    uint64_t result = sub_1C3F9775C((uint64_t)v5, v8+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v27, type metadata accessor for Proto_KeyPath);
    int64_t v16 = 1 << *(unsigned char *)(v22 + 32);
    uint64_t v15 = v41;
    if (v11 >= v16) {
      goto LABEL_32;
    }
    unint64_t v28 = v46;
    uint64_t v29 = *(void *)(v41 + 8 * v46);
    if ((v29 & (1 << v11)) == 0) {
      goto LABEL_33;
    }
    a1 = v22;
    if (*(_DWORD *)(v22 + 36) != v45) {
      goto LABEL_34;
    }
    unint64_t v30 = v29 & (-2 << (v11 & 0x3F));
    if (v30)
    {
      int64_t v16 = __clz(__rbit64(v30)) | v11 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v7 = MEMORY[0x1E4FBC860];
    }
    else
    {
      unint64_t v31 = v46 + 1;
      unint64_t v32 = (unint64_t)(v16 + 63) >> 6;
      uint64_t v7 = MEMORY[0x1E4FBC860];
      if (v46 + 1 < v32)
      {
        unint64_t v33 = *(void *)(v41 + 8 * v31);
        if (!v33)
        {
          unint64_t v31 = v46 + 2;
          if (v46 + 2 >= v32) {
            goto LABEL_4;
          }
          unint64_t v33 = *(void *)(v41 + 8 * v31);
          if (!v33)
          {
            unint64_t v31 = v46 + 3;
            if (v46 + 3 >= v32) {
              goto LABEL_4;
            }
            unint64_t v33 = *(void *)(v41 + 8 * v31);
            if (!v33)
            {
              while (v32 - 4 != v28)
              {
                unint64_t v33 = *(void *)(v36 + 8 * v28++);
                if (v33)
                {
                  unint64_t v34 = v28;
                  uint64_t result = sub_1C3F882B0(v11, v45, v38 & 1);
                  unint64_t v31 = v34 + 3;
                  goto LABEL_17;
                }
              }
              uint64_t result = sub_1C3F882B0(v11, v45, v38 & 1);
              goto LABEL_4;
            }
          }
        }
LABEL_17:
        int64_t v16 = __clz(__rbit64(v33)) + (v31 << 6);
      }
    }
LABEL_4:
    uint64_t v10 = v40;
    int v14 = 0;
    uint64_t v12 = v44 + 1;
    uint64_t v11 = v16;
    if (v44 + 1 == v39) {
      return v8;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void *sub_1C4014BFC(uint64_t a1, uint64_t a2)
{
  uint64_t v42 = a2;
  uint64_t v48 = type metadata accessor for Proto_Version(0);
  uint64_t v4 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  int64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v47 = (uint64_t)&v39 - v10;
  int64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    uint64_t v40 = v6;
    uint64_t v46 = v2;
    unint64_t v54 = (void *)MEMORY[0x1E4FBC860];
    sub_1C40127C0(0, v11, 0);
    uint64_t v45 = type metadata accessor for Proto_CustomCRDT.Sibling(0);
    uint64_t v12 = a1
        + ((*(unsigned __int8 *)(*(void *)(v45 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v45 - 8) + 80));
    uint64_t v43 = *(void *)(*(void *)(v45 - 8) + 72);
    uint64_t v44 = v4 + 48;
    unint64_t v13 = 0x1EA39A000uLL;
    int v14 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
    while (1)
    {
      int64_t v49 = v11;
      uint64_t v50 = v12;
      uint64_t v15 = *(int *)(v45 + 20);
      uint64_t v16 = *(void *)(v12 + v15);
      uint64_t v17 = (uint64_t *)(v16
                      + OBJC_IVAR____TtCVV9Coherence16Proto_CustomCRDT7SiblingP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__data);
      swift_beginAccess();
      uint64_t v19 = *v17;
      unint64_t v18 = v17[1];
      uint64_t v20 = v16 + *(void *)(v13 + 3736);
      swift_beginAccess();
      uint64_t v21 = v47;
      sub_1C3F970C4(v20, v47, &qword_1EBBC0578);
      uint64_t v22 = *v14;
      LODWORD(v20) = (*v14)(v21, 1, v48);
      unint64_t v51 = v18;
      uint64_t v52 = v19;
      sub_1C3F7E324(v19, v18);
      sub_1C3F962E0(v21, &qword_1EBBC0578);
      if (v20 == 1)
      {
        uint64_t v23 = 0;
        uint64_t v24 = 0;
        int64_t v26 = v49;
        uint64_t v25 = v50;
      }
      else
      {
        uint64_t v25 = v50;
        uint64_t v27 = *(void *)(v50 + v15) + *(void *)(v13 + 3736);
        swift_beginAccess();
        uint64_t v28 = v41;
        sub_1C3F970C4(v27, v41, &qword_1EBBC0578);
        int v29 = v22(v28, 1, v48);
        uint64_t v30 = v46;
        unint64_t v31 = v40;
        if (v29 == 1)
        {
          uint64_t v32 = MEMORY[0x1E4FBC860];
          *uint64_t v40 = MEMORY[0x1E4FBC860];
          v31[1] = v32;
          sub_1C4496888();
          sub_1C3F962E0(v28, &qword_1EBBC0578);
        }
        else
        {
          sub_1C3F9775C(v28, (uint64_t)v40, type metadata accessor for Proto_Version);
        }
        int64_t v26 = v49;
        uint64_t v33 = *(void *)(v42 + 16);
        swift_retain();
        sub_1C3F8F9D0(v31, v33, &v53);
        if (v30)
        {
          sub_1C3F7E2CC(v52, v51);
          swift_release();
          return v31;
        }
        uint64_t v46 = 0;
        uint64_t v24 = *((void *)&v53 + 1);
        uint64_t v23 = v53;
      }
      unint64_t v31 = v54;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C40127C0(0, v31[2] + 1, 1);
        unint64_t v31 = v54;
      }
      unint64_t v35 = v31[2];
      unint64_t v34 = v31[3];
      if (v35 >= v34 >> 1)
      {
        sub_1C40127C0(v34 > 1, v35 + 1, 1);
        unint64_t v31 = v54;
      }
      v31[2] = v35 + 1;
      uint64_t v36 = &v31[4 * v35];
      unint64_t v37 = v51;
      v36[4] = v52;
      v36[5] = v37;
      v36[6] = v23;
      v36[7] = v24;
      uint64_t v12 = v25 + v43;
      int64_t v11 = v26 - 1;
      unint64_t v13 = 0x1EA39A000;
      if (!v11) {
        return v31;
      }
    }
  }
  return (void *)MEMORY[0x1E4FBC860];
}

uint64_t sub_1C4015050(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C3F67EA0(0, v2, 0);
    uint64_t v3 = v21;
    int64_t v6 = (unint64_t *)(a1 + 32);
    uint64_t v7 = *(void *)(a2 + 16);
    while (1)
    {
      unint64_t v9 = *v6++;
      unint64_t v8 = v9;
      uint64_t v10 = *(void *)(v7 + 32);
      unint64_t v11 = *(void *)(v10 + 16);
      if (!v11 || v8 >= v11) {
        break;
      }
      uint64_t v13 = v10 + 16 * v8;
      uint64_t v15 = *(void *)(v13 + 32);
      uint64_t v14 = *(void *)(v13 + 40);
      unint64_t v17 = *(void *)(v21 + 16);
      unint64_t v16 = *(void *)(v21 + 24);
      swift_bridgeObjectRetain();
      if (v17 >= v16 >> 1) {
        sub_1C3F67EA0(v16 > 1, v17 + 1, 1);
      }
      *(void *)(v21 + 16) = v17 + 1;
      uint64_t v18 = v21 + 16 * v17;
      *(void *)(v18 + 32) = v15;
      *(void *)(v18 + 40) = v14;
      if (!--v2) {
        return v3;
      }
    }
    sub_1C3FE3FF0();
    swift_allocError();
    *(_OWORD *)uint64_t v19 = xmmword_1C449B6C0;
    *(unsigned char *)(v19 + 16) = 0;
    swift_willThrow();
    swift_release();
  }
  return v3;
}

uint64_t sub_1C4015188(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = MEMORY[0x1E4FBC860];
  if (v2)
  {
    uint64_t v24 = MEMORY[0x1E4FBC860];
    sub_1C3F6ECAC(0, v2, 0);
    uint64_t v6 = 0;
    uint64_t v3 = v24;
    uint64_t v22 = a1 + 32;
    uint64_t v23 = *(void *)(a2 + 16);
    while (1)
    {
      uint64_t v7 = *(void **)(v23 + 32);
      uint64_t v8 = v7[2];
      if (!v8) {
        goto LABEL_18;
      }
      unint64_t v9 = (uint64_t *)(v22 + 16 * v6);
      uint64_t v10 = *v9;
      uint64_t v11 = v9[1];
      BOOL v12 = v7[4] == *v9 && v7[5] == v11;
      if (!v12 && (sub_1C44982E8() & 1) == 0) {
        break;
      }
      uint64_t v13 = 0;
LABEL_19:
      unint64_t v20 = *(void *)(v24 + 16);
      unint64_t v19 = *(void *)(v24 + 24);
      if (v20 >= v19 >> 1) {
        sub_1C3F6ECAC(v19 > 1, v20 + 1, 1);
      }
      ++v6;
      *(void *)(v24 + 16) = v20 + 1;
      *(void *)(v24 + 8 * v20 + 32) = v13;
      if (v6 == v2) {
        return v3;
      }
    }
    uint64_t v14 = 0;
    uint64_t v15 = v7 + 7;
    uint64_t v16 = 1;
    while (v8 != v16)
    {
      ++v14;
      if (*(v15 - 1) == v10 && *v15 == v11)
      {
        uint64_t v13 = v14;
        goto LABEL_19;
      }
      uint64_t v13 = v16;
      char v18 = sub_1C44982E8();
      uint64_t v16 = v13 + 1;
      v15 += 2;
      if (v18) {
        goto LABEL_19;
      }
    }
LABEL_18:
    uint64_t v13 = 0x7FFFFFFFFFFFFFFFLL;
    goto LABEL_19;
  }
  return v3;
}

uint64_t sub_1C401530C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x1E4FBC860];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x1E4FBC860];
    sub_1C3F6ECAC(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_1C4004870(v5, v6);
      swift_bridgeObjectRelease();
      unint64_t v9 = *(void *)(v11 + 16);
      unint64_t v8 = *(void *)(v11 + 24);
      if (v9 >= v8 >> 1) {
        sub_1C3F6ECAC(v8 > 1, v9 + 1, 1);
      }
      v4 += 2;
      *(void *)(v11 + 16) = v9 + 1;
      *(void *)(v11 + 8 * v9 + 32) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1C4015408(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), void (*a4)(uint64_t, void *, uint64_t))
{
  uint64_t v41 = a2;
  uint64_t v42 = a4;
  uint64_t v6 = type metadata accessor for Proto_Reference(0);
  uint64_t v40 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v44 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = MEMORY[0x1E4FBC860];
  if (!v8) {
    return v9;
  }
  uint64_t v48 = MEMORY[0x1E4FBC860];
  sub_1C4012470(0, v8, 0);
  uint64_t v9 = v48;
  uint64_t result = a3(a1);
  uint64_t v12 = result;
  uint64_t v13 = 0;
  uint64_t v14 = a1 + 64;
  char v15 = *(unsigned char *)(a1 + 32);
  uint64_t v35 = a1 + 88;
  int64_t v36 = v8;
  uint64_t v38 = a1 + 64;
  uint64_t v39 = a1;
  uint64_t v37 = v11;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << v15)
  {
    unint64_t v18 = (unint64_t)v12 >> 6;
    if ((*(void *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(a1 + 36) != v11) {
      goto LABEL_29;
    }
    uint64_t v43 = v13;
    unint64_t v19 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v21 = *v19;
    unint64_t v20 = v19[1];
    uint64_t v22 = (uint64_t *)(*(void *)(a1 + 56) + 24 * v12);
    uint64_t v23 = *v22;
    uint64_t v24 = v22[1];
    uint64_t v25 = v22[2];
    v47[0] = v21;
    v47[1] = v20;
    v47[2] = v23;
    v47[3] = v24;
    v47[4] = v25;
    sub_1C3F7E324(v21, v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C3F7E324(v21, v20);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C3F7E2CC(v21, v20);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = v45;
    sub_1C40072B4(v47, v41, &v46, v42, v44);
    if (v26)
    {
      sub_1C3F7E2CC(v21, v20);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
    uint64_t v45 = 0;
    sub_1C3F7E2CC(v21, v20);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = v9;
    unint64_t v28 = *(void *)(v9 + 16);
    unint64_t v27 = *(void *)(v9 + 24);
    if (v28 >= v27 >> 1)
    {
      sub_1C4012470(v27 > 1, v28 + 1, 1);
      uint64_t v9 = v48;
    }
    *(void *)(v9 + 16) = v28 + 1;
    uint64_t result = sub_1C3F9775C(v44, v9+ ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80))+ *(void *)(v40 + 72) * v28, type metadata accessor for Proto_Reference);
    a1 = v39;
    char v15 = *(unsigned char *)(v39 + 32);
    unint64_t v16 = 1 << v15;
    if (v12 >= 1 << v15) {
      goto LABEL_30;
    }
    uint64_t v14 = v38;
    uint64_t v29 = *(void *)(v38 + 8 * v18);
    if ((v29 & (1 << v12)) == 0) {
      goto LABEL_31;
    }
    LODWORD(v11) = v37;
    if (*(_DWORD *)(v39 + 36) != v37) {
      goto LABEL_32;
    }
    unint64_t v30 = v29 & (-2 << (v12 & 0x3F));
    if (v30)
    {
      unint64_t v16 = __clz(__rbit64(v30)) | v12 & 0xFFFFFFFFFFFFFFC0;
      int64_t v17 = v36;
    }
    else
    {
      unint64_t v31 = v18 + 1;
      unint64_t v32 = (v16 + 63) >> 6;
      int64_t v17 = v36;
      if (v18 + 1 < v32)
      {
        unint64_t v33 = *(void *)(v38 + 8 * v31);
        if (!v33)
        {
          unint64_t v31 = v18 + 2;
          if (v18 + 2 >= v32) {
            goto LABEL_4;
          }
          unint64_t v33 = *(void *)(v38 + 8 * v31);
          if (!v33)
          {
            while (v32 - 3 != v18)
            {
              unint64_t v33 = *(void *)(v35 + 8 * v18++);
              if (v33)
              {
                unint64_t v31 = v18 + 2;
                goto LABEL_18;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_18:
        unint64_t v16 = __clz(__rbit64(v33)) + (v31 << 6);
      }
    }
LABEL_4:
    uint64_t v13 = v43 + 1;
    uint64_t v12 = v16;
    if (v43 + 1 == v17) {
      return v9;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C40157D8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v29 = (uint64_t)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v28 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for Proto_Value(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  char v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  int64_t v17 = (char *)&v28 - v16;
  uint64_t v18 = *(void *)(v0 + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v10, &qword_1EBBC0540);
  unint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t result = v30(v10, 1, v11);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_14;
  }
  sub_1C3F9775C((uint64_t)v10, (uint64_t)v17, type metadata accessor for Proto_Value);
  uint64_t v20 = *(void *)&v17[*(int *)(v11 + 20)]
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v5, &qword_1EBBBF8A0);
  sub_1C3F9229C((uint64_t)v17, type metadata accessor for Proto_Value);
  uint64_t v21 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  if (v22(v5, 1, v21) == 1)
  {
    sub_1C3F962E0((uint64_t)v5, &qword_1EBBBF8A0);
  }
  else
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 1) {
      return result;
    }
    sub_1C3F9229C((uint64_t)v5, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  uint64_t v23 = v31;
  sub_1C3F970C4(v18, v31, &qword_1EBBC0540);
  uint64_t result = v30((char *)v23, 1, v11);
  if (result == 1)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  sub_1C3F9775C(v23, (uint64_t)v15, type metadata accessor for Proto_Value);
  uint64_t v24 = *(void *)&v15[*(int *)(v11 + 20)]
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v25 = v24;
  uint64_t v26 = v29;
  sub_1C3F970C4(v25, v29, &qword_1EBBBF8A0);
  sub_1C3F9229C((uint64_t)v15, type metadata accessor for Proto_Value);
  if (v22((char *)v26, 1, v21) == 1)
  {
    sub_1C3F962E0(v26, &qword_1EBBBF8A0);
LABEL_12:
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v27 = 0xD000000000000018;
    *(void *)(v27 + 8) = 0x80000001C44B16C0;
    *(unsigned char *)(v27 + 16) = 0;
    return swift_willThrow();
  }
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 14)
  {
    sub_1C3F9229C(v26, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1C4015C7C()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v31 = (uint64_t)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v29 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v33 = (uint64_t)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = type metadata accessor for Proto_Value(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v30 = (uint64_t)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v29 - v15;
  uint64_t v17 = *(void *)(v0 + 16);
  uint64_t v18 = v17 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v10, &qword_1EBBC0540);
  unint64_t v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t result = v32(v10, 1, v11);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_15;
  }
  sub_1C3F9775C((uint64_t)v10, (uint64_t)v16, type metadata accessor for Proto_Value);
  uint64_t v20 = *(void *)&v16[*(int *)(v11 + 20)]
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v5, &qword_1EBBBF8A0);
  sub_1C3F9229C((uint64_t)v16, type metadata accessor for Proto_Value);
  uint64_t v21 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  if (v22(v5, 1, v21) == 1)
  {
    sub_1C3F962E0((uint64_t)v5, &qword_1EBBBF8A0);
  }
  else
  {
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 14) {
      return result;
    }
    sub_1C3F9229C((uint64_t)v5, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  if (*(unsigned __int8 *)(v17 + 49) > 1u)
  {
LABEL_13:
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v28 = 0xD000000000000017;
    *(void *)(v28 + 8) = 0x80000001C44B16A0;
    *(unsigned char *)(v28 + 16) = 0;
    return swift_willThrow();
  }
  uint64_t v23 = v33;
  sub_1C3F970C4(v18, v33, &qword_1EBBC0540);
  uint64_t result = v32((char *)v23, 1, v11);
  if (result == 1)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v24 = v30;
  sub_1C3F9775C(v23, v30, type metadata accessor for Proto_Value);
  uint64_t v25 = *(void *)(v24 + *(int *)(v11 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v26 = v25;
  uint64_t v27 = v31;
  sub_1C3F970C4(v26, v31, &qword_1EBBBF8A0);
  sub_1C3F9229C(v24, type metadata accessor for Proto_Value);
  if (v22((char *)v27, 1, v21) == 1)
  {
    sub_1C3F962E0(v27, &qword_1EBBBF8A0);
    goto LABEL_13;
  }
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result != 1)
  {
    sub_1C3F9229C(v27, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_13;
  }
  return result;
}

uint64_t sub_1C4016134()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v29 = (uint64_t *)((char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v28 - v4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v31 = (uint64_t)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for Proto_Value(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v18 = *(void *)(v0 + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v10, &qword_1EBBC0540);
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
  uint64_t result = v30(v10, 1, v11);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_17;
  }
  sub_1C3F9775C((uint64_t)v10, (uint64_t)v17, type metadata accessor for Proto_Value);
  uint64_t v20 = *(void *)&v17[*(int *)(v11 + 20)]
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v5, &qword_1EBBBF8A0);
  sub_1C3F9229C((uint64_t)v17, type metadata accessor for Proto_Value);
  uint64_t v21 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48);
  if (v22(v5, 1, v21) == 1)
  {
    sub_1C3F962E0((uint64_t)v5, &qword_1EBBBF8A0);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload()) {
      return *(void *)v5;
    }
    sub_1C3F9229C((uint64_t)v5, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  uint64_t v23 = v31;
  sub_1C3F970C4(v18, v31, &qword_1EBBC0540);
  uint64_t result = v30((char *)v23, 1, v11);
  if (result == 1)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  sub_1C3F9775C(v23, (uint64_t)v15, type metadata accessor for Proto_Value);
  uint64_t v24 = *(void *)&v15[*(int *)(v11 + 20)]
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v25 = v24;
  uint64_t v26 = v29;
  sub_1C3F970C4(v25, (uint64_t)v29, &qword_1EBBBF8A0);
  sub_1C3F9229C((uint64_t)v15, type metadata accessor for Proto_Value);
  if (v22((char *)v26, 1, v21) == 1)
  {
    sub_1C3F962E0((uint64_t)v26, &qword_1EBBBF8A0);
LABEL_13:
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v27 = 0xD000000000000016;
    *(void *)(v27 + 8) = 0x80000001C44B1700;
    *(unsigned char *)(v27 + 16) = 0;
    return swift_willThrow();
  }
  if (swift_getEnumCaseMultiPayload() != 4)
  {
LABEL_12:
    sub_1C3F9229C((uint64_t)v26, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_13;
  }
  uint64_t result = *v26;
  if (*v26 < 0)
  {
    sub_1C4497F48();
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

uint64_t type metadata accessor for CREncoder.CRValueKeyedContainer()
{
  return self;
}

uint64_t sub_1C4016644()
{
  return sub_1C401665C();
}

uint64_t sub_1C401665C()
{
  return (*(uint64_t (**)(void, void))(v0[3] + 16))(*(void *)(v0[5] + 24), v0[2]);
}

uint64_t sub_1C401669C()
{
  swift_release();

  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C40166DC()
{
  return sub_1C400FD4C();
}

uint64_t sub_1C40166E4()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C401671C()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C401676C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_1C40185EC;
  return sub_1C43D0DB0(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_1C4016840()
{
  return sub_1C43D14F4(v0);
}

uint64_t sub_1C4016848()
{
  return (*(uint64_t (**)(void, void))(*(void *)(*(void *)(v0[3] + 8) + 8) + 16))(*(void *)(v0[5] + 16), v0[2]);
}

unint64_t sub_1C4016894()
{
  unint64_t result = qword_1EA39AE70;
  if (!qword_1EA39AE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39AE70);
  }
  return result;
}

uint64_t sub_1C40168EC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 3 || a3 == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for CRCodingError(uint64_t a1)
{
  return sub_1C4016918(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_1C4016918(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 3 || a3 == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9Coherence13CRCodingErrorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C40168EC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CRCodingError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1C40168EC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_1C4016918(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for CRCodingError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_1C4016918(v4, v5, v6);
  return a1;
}

uint64_t sub_1C4016A20(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_1C4016A38(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)uint64_t result = a2 - 4;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CRCodingError()
{
  return &type metadata for CRCodingError;
}

uint64_t getEnumTagSinglePayload for CRCodableVersion(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CRCodableVersion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C4016BBCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1C4016BE4(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1C4016BEC()
{
  return type metadata accessor for CRDecoder(0);
}

uint64_t method lookup function for CRDecoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CRDecoder);
}

uint64_t dispatch thunk of CRDecoder.valueContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 392))();
}

uint64_t dispatch thunk of CRDecoder.crdtContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 400))();
}

uint64_t dispatch thunk of CRDecoder.keyedContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 408))();
}

uint64_t dispatch thunk of CRDecoder.keyedValueContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 416))();
}

uint64_t method lookup function for CRDecoder.CRDTContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CRDecoder.CRDTContainer);
}

uint64_t dispatch thunk of CRDecoder.CRDTContainer.decode<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CRDecoder.CRDTContainer.decode<A, B>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of CRDecoder.CRDTContainer.decode(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of CRDecoder.CRDTContainer.decodeCustomSiblings()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t method lookup function for CRDecoder.CRDTKeyedContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CRDecoder.CRDTKeyedContainer);
}

uint64_t dispatch thunk of CRDecoder.CRDTKeyedContainer.allKeys()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of CRDecoder.CRDTKeyedContainer.decoder(forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of CRDecoder.CRDTKeyedContainer.decoder(forKeyPath:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t method lookup function for CRDecoder.CRValueKeyedContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CRDecoder.CRValueKeyedContainer);
}

uint64_t dispatch thunk of CRDecoder.CRValueKeyedContainer.allKeys()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of CRDecoder.CRValueKeyedContainer.decoder(forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t method lookup function for CRDecoder.CRValueContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CRDecoder.CRValueContainer);
}

uint64_t dispatch thunk of CRDecoder.CRValueContainer.decode(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of CRDecoder.CRValueContainer.decodeAsset()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of CRDecoder.CRValueContainer.decode<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CRDecoder.CRValueContainer.decode<A, B>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of CRDecoder.CRValueContainer.decodeTaggedContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t method lookup function for CREncoder(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CREncoder);
}

uint64_t dispatch thunk of CREncoder.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of CREncoder.__allocating_init(_:version:)()
{
  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t dispatch thunk of CREncoder.valueContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 576))();
}

uint64_t dispatch thunk of CREncoder.crdtContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 584))();
}

uint64_t dispatch thunk of CREncoder.keyedContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 592))();
}

uint64_t dispatch thunk of CREncoder.keyedValueContainer()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 600))();
}

uint64_t sub_1C4017594()
{
  return type metadata accessor for CREncoder.CRDTContainer(0);
}

uint64_t sub_1C401759C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C4017A00(a1, a2, a3, type metadata accessor for Proto_CRDT);
}

uint64_t method lookup function for CREncoder.CRDTContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CREncoder.CRDTContainer);
}

uint64_t dispatch thunk of CREncoder.CRDTContainer.encode<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of CREncoder.CRDTContainer.encode<A, B>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of CREncoder.CRDTContainer.encode(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of CREncoder.CRDTContainer.encodeCustom(_:version:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of CREncoder.CRDTContainer.encodeSibling(data:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t method lookup function for CREncoder.CRDTKeyedContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CREncoder.CRDTKeyedContainer);
}

uint64_t dispatch thunk of CREncoder.CRDTKeyedContainer.encode<A>(_:forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of CREncoder.CRDTKeyedContainer.encode<A>(_:forKeyPath:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t method lookup function for CREncoder.CRValueKeyedContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CREncoder.CRValueKeyedContainer);
}

uint64_t dispatch thunk of CREncoder.CRValueKeyedContainer.encode<A>(_:forKey:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of CREncoder.CRValueKeyedContainer.encode<A>(_:forKey:encodeDefaultValues:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t sub_1C40179E0()
{
  return type metadata accessor for CREncoder.CRValueContainer(0);
}

uint64_t sub_1C40179E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C4017A00(a1, a2, a3, type metadata accessor for Proto_Value);
}

uint64_t sub_1C4017A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CREncoder.CRValueContainer(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CREncoder.CRValueContainer);
}

uint64_t dispatch thunk of CREncoder.CRValueContainer.encodeUUID(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of CREncoder.CRValueContainer.encode(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of CREncoder.CRValueContainer.encodeAsset(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of CREncoder.CRValueContainer.encode<A>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of CREncoder.CRValueContainer.encode<A, B>(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of CREncoder.CRValueContainer.encode(tag:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_1C4017E00(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v4 - 8);
  unsigned int v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = v7;
  uint64_t v8 = MEMORY[0x1E4FBC868];
  *(void *)(v2 + 32) = v7;
  *(void *)(v2 + 40) = v8;
  *(unsigned char *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = 0;
  uint64_t v9 = v2 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  uint64_t v10 = type metadata accessor for Proto_CRDT(0);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
  v11(v9, 1, 1, v10);
  uint64_t v12 = v2 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  uint64_t v13 = type metadata accessor for Proto_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_beginAccess();
  *(void *)(v2 + 24) = *(void *)(a1 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *(void *)(v2 + 32) = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (qword_1EBBC09E0 != -1) {
    swift_once();
  }
  uint64_t v14 = qword_1EBBC5A30;
  type metadata accessor for CRDecodeContext();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v8;
  v15[3] = v8;
  v15[4] = v14;
  *(void *)(v2 + 16) = v15;
  swift_retain();
  swift_release();
  uint64_t v16 = sub_1C3F62C10() + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
  swift_beginAccess();
  sub_1C3FA1CCC(v16, (uint64_t)v6, type metadata accessor for Proto_CRDT);
  v11((uint64_t)v6, 0, 1, v10);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v6, v9, &qword_1EBBC04F8);
  swift_endAccess();
  *(unsigned char *)(v2 + 49) = *(unsigned char *)(a1 + 72);
  return v2;
}

uint64_t sub_1C40180D8()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C4018110()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018120()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018130()
{
  return sub_1C4004FA8(**(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C4018150()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018160()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018170()
{
  return sub_1C4004E20();
}

uint64_t sub_1C4018190()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C40181A0()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 + 8) + 16))(v2, v3);
}

uint64_t sub_1C4018204()
{
  return (*(uint64_t (**)(void, void))(*(void *)(v0[3] + 8) + 16))(v0[5], v0[2]);
}

uint64_t sub_1C4018244()
{
  return (*(uint64_t (**)(void, void))(*(void *)(*(void *)(v0[3] + 8) + 8) + 16))(v0[5], v0[2]);
}

uint64_t sub_1C4018288()
{
  sub_1C3F7E2CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  swift_release();
  return MEMORY[0x1F4186498](v0, 40, 7);
}

uint64_t sub_1C40182C8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C40183BC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C40183CC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C40183DC()
{
  return (*(uint64_t (**)(void))(***(void ***)(v0 + 16) + 176))(*(void *)(v0 + 24));
}

uint64_t sub_1C4018424()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018434()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018444()
{
  return sub_1C40050E8();
}

uint64_t sub_1C4018464()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018474()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018484()
{
  return sub_1C4014410(*(uint64_t **)(v0 + 16));
}

uint64_t sub_1C40184A0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C40184B0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C40184C0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C40184D0()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018508()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018518()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4018528()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t WrappedObservableDifference.contents.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790]();
  unsigned int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, a1);
    uint64_t v9 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
    uint64_t v9 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(a2, v9, 1, v7);
}

BOOL WrappedObservableDifference.isIdentityChanged.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  BOOL v5 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 48))(v4, 1) == 1;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return v5;
}

uint64_t sub_1C401887C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 56))(a2, 1, 1);
}

uint64_t static WrappedObservableDifference<A>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v32 = a2;
  uint64_t v6 = *(void *)(a3 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v29 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v28 = (char *)&v28 - v9;
  uint64_t v10 = type metadata accessor for WrappedObservableDifference();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v33 = (char *)&v28 - v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v17 = (char *)&v28 - v16;
  uint64_t v18 = (char *)&v28 + *(int *)(v15 + 48) - v16;
  uint64_t v31 = v11;
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v19((char *)&v28 - v16, a1, v10);
  v19(v18, v32, v10);
  uint64_t v32 = v6;
  uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (v20(v17, 1, a3) == 1)
  {
    char v21 = 1;
    if (v20(v18, 1, a3) == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    v19(v33, (uint64_t)v17, v10);
    if (v20(v18, 1, a3) != 1)
    {
      uint64_t v22 = v32;
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
      uint64_t v24 = v28;
      v23(v28, v33, a3);
      uint64_t v25 = v29;
      v23(v29, v18, a3);
      char v21 = sub_1C4497178();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v22 + 8);
      v26(v25, a3);
      v26(v24, a3);
LABEL_8:
      uint64_t v14 = v31;
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, a3);
  }
  char v21 = 0;
  uint64_t v10 = TupleTypeMetadata2;
LABEL_9:
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v10);
  return v21 & 1;
}

uint64_t type metadata accessor for WrappedObservableDifference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C4018C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static WrappedObservableDifference<A>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a4 - 8));
}

uint64_t Optional<A>.observableDifference(from:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v62 = a2;
  uint64_t v66 = a5;
  uint64_t v67 = a1;
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v63 = *(void *)(a4 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C4497B38();
  uint64_t v60 = *(void *)(v10 - 8);
  uint64_t v61 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v64 = (char *)&v57 - v12;
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v69 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v59 = (char *)&v57 - v14;
  uint64_t v15 = *(void *)(a3 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v65 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v57 - v19;
  uint64_t v21 = *(void *)(v8 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v18);
  uint64_t v24 = (char *)&v57 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v57 - v25;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v28 = v6;
  uint64_t v29 = a3;
  v27(v20, v28, a3);
  uint64_t v68 = v21;
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v21 + 48);
  if (v30((uint64_t)v20, 1, v8) == 1)
  {
    uint64_t v31 = v66;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v29);
    if (v30(v67, 1, v8) == 1)
    {
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v31, 1, 1, v70);
    }
    else
    {
      uint64_t v41 = v70;
      uint64_t v42 = swift_conformsToProtocol2();
      if (v42) {
        uint64_t v43 = v42;
      }
      else {
        uint64_t v43 = 0;
      }
      if (v42) {
        uint64_t v44 = v41;
      }
      else {
        uint64_t v44 = 0;
      }
      if (v44)
      {
        uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
        *((void *)&v72 + 1) = v44;
        uint64_t v73 = v43;
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v71);
        v45(v44, v43);
      }
      else
      {
        uint64_t v73 = 0;
        long long v71 = 0u;
        long long v72 = 0u;
      }
      __swift_instantiateConcreteTypeFromMangledName(qword_1EA39C168);
      int v56 = swift_dynamicCast();
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v31, v56 ^ 1u, 1, v41);
    }
  }
  else
  {
    uint64_t v58 = v24;
    uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v68 + 32);
    v57(v26, v20, v8);
    uint64_t v33 = v65;
    v27(v65, v67, v29);
    if (v30((uint64_t)v33, 1, v8) == 1)
    {
      uint64_t v34 = v26;
      uint64_t v35 = v68;
      (*(void (**)(char *, uint64_t))(v15 + 8))(v33, v29);
      uint64_t v36 = v70;
      uint64_t v37 = swift_conformsToProtocol2();
      if (v37) {
        uint64_t v38 = v37;
      }
      else {
        uint64_t v38 = 0;
      }
      if (v37) {
        uint64_t v39 = v36;
      }
      else {
        uint64_t v39 = 0;
      }
      if (v39)
      {
        uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
        *((void *)&v72 + 1) = v39;
        uint64_t v73 = v38;
        __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v71);
        v40(v39, v38);
        (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v8);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v35 + 8))(v34, v8);
        uint64_t v73 = 0;
        long long v71 = 0u;
        long long v72 = 0u;
      }
      unint64_t v54 = v66;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EA39C168);
      int v55 = swift_dynamicCast();
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v69 + 56))(v54, v55 ^ 1u, 1, v36);
    }
    else
    {
      uint64_t v46 = v58;
      v57(v58, v33, v8);
      uint64_t v47 = v64;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 40))(v46, v62, v8);
      uint64_t v48 = *(void (**)(char *, uint64_t))(v68 + 8);
      v48(v46, v8);
      v48(v26, v8);
      uint64_t v50 = v69;
      uint64_t v49 = v70;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v47, 1, v70) == 1)
      {
        (*(void (**)(char *, uint64_t))(v60 + 8))(v47, v61);
        return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v50 + 56))(v66, 1, 1, v49);
      }
      else
      {
        unint64_t v51 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
        uint64_t v52 = v59;
        v51(v59, v47, v49);
        long long v53 = v66;
        v51(v66, v52, v49);
        return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v53, 0, 1, v49);
      }
    }
  }
}

uint64_t Optional<A>.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790]();
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v4);
  uint64_t v10 = *(void *)(v4 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 + 8) + 48))(a1, v10);
    uint64_t v6 = v11;
    uint64_t v4 = v10;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v4);
}

uint64_t Optional<A>.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v19 = a3;
  uint64_t v20 = a1;
  uint64_t v8 = *(void *)(a2 - 8);
  uint64_t v9 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v17(v11, v5, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v11, 1, v13) == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, a2);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v17)(a4, v5, a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v11, v13);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 + 8) + 24))(v20, v13);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a4, 0, 1, v13);
  }
}

uint64_t Optional<A>.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v8 = a1;
  swift_bridgeObjectRetain();
  Optional<A>.copy(renamingReferences:)((uint64_t)&v8, a2, a3, a4);
  return swift_bridgeObjectRelease();
}

uint64_t Optional<A>.needToFinalizeTimestamps()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) == 1)
  {
    char v10 = 0;
  }
  else
  {
    char v10 = (*(uint64_t (**)(uint64_t))(*(void *)(a2 + 8) + 56))(v8);
    uint64_t v4 = v9;
    uint64_t v3 = v8;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v10 & 1;
}

uint64_t Optional<A>.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v3, 1, v6);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 + 8) + 64);
    return v8(a1, v6);
  }
  return result;
}

uint64_t Optional<A>.minEncodingVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, a1);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a1);
    char v13 = 0;
  }
  else
  {
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(*(void *)(a2 + 8) + 8) + 32))(&v15, v10);
    char v13 = v15;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v8, v10);
  }
  *a3 = v13;
  return result;
}

uint64_t static Optional<A>.canContainAssets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(a2 + 8) + 72))() & 1;
}

uint64_t sub_1C4019AD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Optional<A>.copy(renamingReferences:)(a1, a2, *(void *)(a3 - 8), a4);
}

uint64_t sub_1C4019AD8@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Optional<A>.copy(renamingReferences:)(a1, a2, *(void *)(a3 - 8), a4);
}

uint64_t sub_1C4019AE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X8>)
{
  return Optional<A>.observableDifference(from:with:)(a1, a2, a3, *(void *)(a4 - 8), a5);
}

uint64_t sub_1C4019AE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Optional<A>.visitReferences(_:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t sub_1C4019AF0(uint64_t a1, uint64_t a2)
{
  return Optional<A>.needToFinalizeTimestamps()(a1, *(void *)(a2 - 8));
}

uint64_t sub_1C4019AF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Optional<A>.finalizeTimestamps(_:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t sub_1C4019B00(uint64_t a1, uint64_t a2)
{
  return static Optional<A>.canContainAssets.getter(*(void *)(a1 + 16), *(void *)(a2 - 8));
}

uint64_t sub_1C4019B0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Optional<A>.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a3 - 8), a4);
}

uint64_t Optional<A>.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v15[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F8BC84(v11, (uint64_t)v10);
  uint64_t v12 = type metadata accessor for Proto_Value(0);
  LODWORD(v11) = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12);
  sub_1C4019CD0((uint64_t)v10);
  if (v11 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v13 = 0xD000000000000017;
    *(void *)(v13 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v13 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    type metadata accessor for CRDecoder.CRValueContainer();
    *(void *)(swift_initStackObject() + 16) = a1;
    sub_1C40035C8(a2, a3, a4);
  }
  return swift_release();
}

uint64_t sub_1C4019CD0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C4019D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Optional<A>.encode(to:)(a1, a2, *(void *)(a3 - 8));
}

uint64_t Optional<A>.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1C3F6DD10();
  if (!v4)
  {
    uint64_t v8 = *(void *)(a2 + 16);
    swift_retain();
    sub_1C400FE00(v3, v8, a3);
    return swift_release();
  }
  return result;
}

{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  void v15[2];
  unsigned char v16[24];
  uint64_t v17;
  uint64_t v18;

  v15[1] = a3;
  uint64_t v4 = *(void *)(a2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = (void *)MEMORY[0x1F4188790](v5);
  uint64_t v13 = (char *)v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  sub_1C4498698();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v18, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a2);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
    sub_1C4498358();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v7, v9);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v16, v17);
    sub_1C4498348();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
}

uint64_t sub_1C4019DC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  return Optional<A>.minEncodingVersion.getter(a1, *(void *)(a2 - 8), a3);
}

uint64_t sub_1C401A018(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C401A068(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C401A0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 8);
}

uint64_t sub_1C401A0C0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1C401A13C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1C401A278(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1C401A33C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1C401A434(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_1C401A5A0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1C401A698(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_1C401A804(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1C401A9A4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1C401ABE0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1C401AC08(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 48))(a1, 1);
}

uint64_t sub_1C401AC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 56))(a1, a2, 1);
}

uint64_t sub_1C401AC68(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C4496D68();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v39 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1C4496DA8();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v37 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v11 - 8);
  int v15 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v33 - v17;
  uint64_t v19 = a1[1];
  uint64_t v20 = *a2;
  uint64_t v21 = a2[1];
  if (*(void *)(v19 + 16) || *(void *)(v21 + 16))
  {
    uint64_t v22 = *a1;
    uint64_t v23 = *(void *)(v41 + 40);
    uint64_t v34 = v8;
    uint64_t v35 = v23;
    uint64_t v24 = v20;
    sub_1C3F970C4(a3, (uint64_t)&v33 - v17, &qword_1EBBC0FA0);
    sub_1C3F970C4(a4, (uint64_t)v15, &qword_1EBBC0FA0);
    uint64_t v25 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v26 = (v25 + 56) & ~v25;
    uint64_t v27 = (v13 + v25 + v26) & ~v25;
    uint64_t v28 = (void *)swift_allocObject();
    v28[2] = v22;
    v28[3] = v19;
    v28[4] = v24;
    v28[5] = v21;
    v28[6] = v41;
    sub_1C3F961BC((uint64_t)v18, (uint64_t)v28 + v26, &qword_1EBBC0FA0);
    sub_1C3F961BC((uint64_t)v15, (uint64_t)v28 + v27, &qword_1EBBC0FA0);
    aBlock[4] = sub_1C4021E84;
    aBlock[5] = v28;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C3F61AC0;
    aBlock[3] = &block_descriptor_7;
    uint64_t v29 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v30 = v37;
    sub_1C4496D88();
    uint64_t v42 = MEMORY[0x1E4FBC860];
    sub_1C3F70940((unint64_t *)&qword_1EBBC07F0, MEMORY[0x1E4FBCB00]);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
    sub_1C3F70AF0((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
    uint64_t v31 = v39;
    uint64_t v32 = v34;
    sub_1C4497BF8();
    MEMORY[0x1C87806C0](0, v30, v31, v29);
    _Block_release(v29);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v31, v32);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v30, v40);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C401B094()
{
  uint64_t v0 = sub_1C4496C58();
  __swift_allocate_value_buffer(v0, qword_1EA39C1F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA39C1F0);
  return sub_1C4496C48();
}

uint64_t sub_1C401B10C()
{
  type metadata accessor for CRGlobalContext();
  swift_allocObject();
  uint64_t result = sub_1C401B148();
  qword_1EBBC5A60 = result;
  return result;
}

uint64_t sub_1C401B148()
{
  v9[0] = sub_1C4497A38();
  uint64_t v1 = *(void *)(v9[0] - 8);
  MEMORY[0x1F4188790](v9[0]);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C4497A08();
  MEMORY[0x1F4188790](v4);
  uint64_t v5 = sub_1C4496DA8();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  unint64_t v7 = sub_1C3FE4338(MEMORY[0x1E4FBC860]);
  *(void *)(v0 + 16) = 0;
  *(unsigned char *)(v0 + 24) = 0;
  *(void *)(v0 + 32) = v7;
  sub_1C3F60AA0();
  sub_1C4496D88();
  v9[1] = v6;
  sub_1C3F70940(qword_1EBBC1060, MEMORY[0x1E4FBCC10]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC1040);
  sub_1C3F70AF0((unint64_t *)&qword_1EBBC1050, (uint64_t *)&unk_1EBBC1040);
  sub_1C4497BF8();
  (*(void (**)(char *, void, void))(v1 + 104))(v3, *MEMORY[0x1E4FBCC58], v9[0]);
  *(void *)(v0 + 40) = sub_1C4497A78();
  return v0;
}

uint64_t sub_1C401B3A8(uint64_t a1, uint64_t a2)
{
  uint64_t v96 = a1;
  uint64_t v3 = type metadata accessor for RetainedMapRun(0);
  long long v124 = *(char **)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v118 = (uint64_t)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v94 = (uint64_t)&v92 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v119 = (char *)&v92 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBEF70);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v93 = (uint64_t)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int v15 = (char *)&v92 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v125 = (uint64_t)&v92 - v16;
  uint64_t v114 = sub_1C44967A8();
  uint64_t v17 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114 - 8);
  uint64_t v116 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBCA78);
  MEMORY[0x1F4188790](v95);
  uint64_t v113 = (char *)&v92 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_1C44967E8();
  uint64_t v20 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v22 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Replica();
  uint64_t v92 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  uint64_t v105 = (uint64_t)&v92 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v92 - v26;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07A0);
  uint64_t v29 = MEMORY[0x1F4188790](v28 - 8);
  uint64_t v102 = (uint64_t)&v92 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v103 = (uint64_t)&v92 - v31;
  unint64_t v32 = *(void *)(v96 + 16);
  uint64_t v109 = a2 + 16;
  uint64_t v99 = (void (**)(char *, uint64_t, uint64_t))(v20 + 32);
  uint64_t v108 = (uint64_t *)(a2 + 32);
  uint64_t v115 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v110 = (void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v121 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v124 + 56);
  uint64_t v122 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v124 + 48);
  uint64_t v97 = (void (**)(char *, uint64_t))(v20 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v34 = 0;
  uint64_t v120 = v15;
  uint64_t v35 = v22;
  uint64_t v101 = v22;
  unint64_t v100 = v32;
  int v104 = v27;
  while (1)
  {
    if (v34 == v32)
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
      uint64_t v37 = v102;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v102, 1, 1, v36);
      unint64_t v107 = v32;
    }
    else
    {
      if (v34 >= v32) {
        goto LABEL_54;
      }
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
      uint64_t v39 = *(void *)(v38 - 8);
      uint64_t v40 = v102;
      sub_1C3F970C4(v96+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v34, v102, &qword_1EBBC0798);
      unint64_t v107 = v34 + 1;
      uint64_t v41 = v40;
      uint64_t v37 = v40;
      uint64_t v27 = v104;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v41, 0, 1, v38);
    }
    uint64_t v42 = v103;
    sub_1C3F961BC(v37, v103, &qword_1EBBC07A0);
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v42, 1, v43) == 1) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v44 = v42 + *(int *)(v43 + 48);
    sub_1C3F8F6E0(v42, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for Replica);
    (*v99)(v35, v44, v106);
    uint64_t v45 = v105;
    sub_1C3F8EF24((uint64_t)v27, v105, (uint64_t (*)(void))type metadata accessor for Replica);
    swift_beginAccess();
    uint64_t v46 = sub_1C3FAA6E8(&v128, v45);
    if (!*v47)
    {
      ((void (*)(uint64_t *, void))v46)(&v128, 0);
      goto LABEL_11;
    }
    uint64_t v48 = v47;
    uint64_t v98 = v46;
    uint64_t v49 = v116;
    sub_1C44967C8();
    uint64_t v50 = v114;
    unint64_t v51 = v113;
    sub_1C4496798();
    char v112 = *v115;
    v112(v49, v50);
    uint64_t v52 = &v51[*(int *)(v95 + 36)];
    uint64_t v53 = (uint64_t)v51;
    uint64_t v54 = sub_1C3F70940((unint64_t *)&qword_1EBBBEE28, MEMORY[0x1E4F27CE0]);
    uint64_t v55 = *(void *)v52;
    sub_1C4497818();
    if (v55 != v126) {
      break;
    }
LABEL_9:
    sub_1C3F962E0(v53, &qword_1EBBBCA78);
    ((void (*)(uint64_t *, void))v98)(&v128, 0);
LABEL_11:
    swift_endAccess();
    sub_1C3F9024C(v105, (uint64_t (*)(void))type metadata accessor for Replica);
    swift_beginAccess();
    uint64_t v56 = *v108;
    uint64_t v27 = v104;
    unint64_t v32 = v100;
    if (!*(void *)(*v108 + 16) || (unint64_t v57 = sub_1C3F8F160((uint64_t)v104), (v58 & 1) == 0))
    {
      uint64_t v126 = 0;
      uint64_t v127 = 0;
      uint64_t v59 = v101;
      unint64_t v34 = v107;
LABEL_20:
      sub_1C3F962E0((uint64_t)&v126, qword_1EBBBEE40);
      swift_endAccess();
      goto LABEL_21;
    }
    sub_1C3FAA63C(*(void *)(v56 + 56) + 16 * v57, (uint64_t)&v126);
    uint64_t v59 = v101;
    unint64_t v34 = v107;
    if (!v126) {
      goto LABEL_20;
    }
    sub_1C3FAA63C((uint64_t)&v126, (uint64_t)&v129);
    sub_1C3F962E0((uint64_t)&v126, qword_1EBBBEE40);
    swift_endAccess();
    uint64_t v60 = *(void *)(v129 + 16);
    if (!v60)
    {
      sub_1C3F903E8((uint64_t)&v129);
      goto LABEL_41;
    }
    if (v60 != 1)
    {
      sub_1C3F903E8((uint64_t)&v129);
      goto LABEL_21;
    }
    uint64_t v61 = v94;
    sub_1C3F970C4(v129 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), v94, qword_1EBBBF0A0);
    uint64_t v62 = v93;
    sub_1C3F961BC(v61 + *(int *)(v5 + 36), v93, qword_1EBBBEF70);
    LODWORD(v61) = (*v122)(v62, 1, v3);
    uint64_t v59 = v101;
    unint64_t v32 = v100;
    sub_1C3F962E0(v62, qword_1EBBBEF70);
    sub_1C3F903E8((uint64_t)&v129);
    BOOL v63 = v61 == 1;
    unint64_t v34 = v107;
    if (v63)
    {
LABEL_41:
      swift_beginAccess();
      uint64_t v86 = v108;
      swift_bridgeObjectRetain();
      unint64_t v87 = sub_1C3F8F160((uint64_t)v27);
      char v89 = v88;
      swift_bridgeObjectRelease();
      if (v89)
      {
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v91 = *v86;
        uint64_t v126 = *v86;
        uint64_t *v86 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1C4067C04();
          uint64_t v91 = v126;
        }
        sub_1C3F9024C(*(void *)(v91 + 48) + *(void *)(v92 + 72) * v87, (uint64_t (*)(void))type metadata accessor for Replica);
        sub_1C3FAAC94(*(void *)(v91 + 56) + 16 * v87, (uint64_t)&v129);
        sub_1C3FAE060(v87, v91);
        uint64_t *v86 = v91;
        swift_bridgeObjectRelease();
        sub_1C3FAAC94((uint64_t)&v129, (uint64_t)&v126);
      }
      else
      {
        uint64_t v126 = 0;
        uint64_t v127 = 0;
      }
      unint64_t v32 = v100;
      swift_endAccess();
      sub_1C3F962E0((uint64_t)&v126, qword_1EBBBEE40);
      uint64_t v35 = v101;
      (*v97)(v101, v106);
      uint64_t result = sub_1C3F9024C((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for Replica);
      unint64_t v34 = v107;
    }
    else
    {
LABEL_21:
      uint64_t v35 = v59;
      (*v97)(v59, v106);
      uint64_t result = sub_1C3F9024C((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for Replica);
    }
  }
  long long v124 = v52;
  uint64_t v111 = v54;
  while (1)
  {
    uint64_t v65 = (void (*)(uint64_t *, void))sub_1C44978C8();
    uint64_t v66 = v53;
    uint64_t v68 = v67[1];
    uint64_t v123 = *v67;
    v65(&v126, 0);
    uint64_t v69 = v116;
    uint64_t v70 = v66;
    long long v71 = v124;
    (*v110)(v116, v70, v50);
    sub_1C4497828();
    v112(v69, v50);
    uint64_t result = sub_1C3FB3D7C(v123, v68);
    uint64_t v117 = result;
    uint64_t v73 = (uint64_t)v119;
    if (result != v72) {
      break;
    }
LABEL_23:
    sub_1C3F9043C(v117, v72);
    uint64_t v64 = *(void *)v71;
    uint64_t v53 = (uint64_t)v113;
    uint64_t v50 = v114;
    sub_1C4497818();
    if (v64 == v126) {
      goto LABEL_9;
    }
  }
  if (v72 < v117)
  {
    __break(1u);
    goto LABEL_53;
  }
  unint64_t v74 = v117;
  uint64_t v123 = v72;
  if (v117 >= v72)
  {
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    return result;
  }
  while ((v74 & 0x8000000000000000) == 0)
  {
    if (v74 >= *(void *)(*v48 + 16)) {
      goto LABEL_49;
    }
    unint64_t v75 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    unint64_t v76 = *(void *)(v6 + 72) * v74;
    sub_1C3F970C4(*v48 + v75 + v76, v73, qword_1EBBBF0A0);
    sub_1C3F970C4(v73 + *(int *)(v5 + 36), (uint64_t)v15, qword_1EBBBEF70);
    if ((*v122)((uint64_t)v15, 1, v3) == 1)
    {
      sub_1C3F962E0((uint64_t)v15, qword_1EBBBEF70);
    }
    else
    {
      uint64_t v77 = v6;
      uint64_t v78 = v5;
      uint64_t v79 = (uint64_t)v15;
      uint64_t v80 = v118;
      sub_1C3F8F6E0(v79, v118, type metadata accessor for RetainedMapRun);
      uint64_t v81 = *(void *)(v80 + *(int *)(v3 + 20));
      uint64_t v82 = v81 - 1;
      if (v81 > 1)
      {
        uint64_t v83 = v125;
        sub_1C3F970C4(v80, v125, &qword_1EBBBF870);
        *(void *)(v83 + *(int *)(v3 + 20)) = v82;
        sub_1C3F9024C(v80, type metadata accessor for RetainedMapRun);
        (*v121)(v83, 0, 1, v3);
        uint64_t v5 = v78;
        uint64_t v6 = v77;
        uint64_t v73 = (uint64_t)v119;
        goto LABEL_35;
      }
      sub_1C3F9024C(v80, type metadata accessor for RetainedMapRun);
      uint64_t v6 = v77;
      uint64_t v73 = (uint64_t)v119;
    }
    (*v121)(v125, 1, 1, v3);
LABEL_35:
    sub_1C3F962E0(v73, qword_1EBBBF0A0);
    unint64_t v84 = *v48;
    char v85 = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v48 = v84;
    if ((v85 & 1) == 0)
    {
      unint64_t v84 = sub_1C4232804(v84);
      *uint64_t v48 = v84;
    }
    if (v74 >= *(void *)(v84 + 16)) {
      goto LABEL_50;
    }
    ++v74;
    sub_1C3FB43E4(v125, v84 + v75 + *(int *)(v5 + 36) + v76);
    int64_t v72 = v123;
    long long v71 = v124;
    int v15 = v120;
    if (v123 == v74) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C401C29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v394 = a7;
  uint64_t v397 = a6;
  uint64_t v442 = a4;
  uint64_t v459 = type metadata accessor for RetainedMapRun(0);
  uint64_t v9 = *(void *)(v459 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v459);
  uint64_t v448 = (uint64_t)&v376 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v439 = (uint64_t)&v376 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v438 = (uint64_t)&v376 - v14;
  uint64_t v433 = sub_1C44967A8();
  uint64_t v383 = *(void *)(v433 - 8);
  MEMORY[0x1F4188790](v433);
  v428 = (char *)&v376 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v395 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBCA78);
  uint64_t v16 = MEMORY[0x1F4188790](v395);
  v424 = (char *)&v376 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v412 = (char *)&v376 - v19;
  MEMORY[0x1F4188790](v18);
  v408 = (char *)&v376 - v20;
  uint64_t v406 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA210);
  uint64_t v21 = MEMORY[0x1F4188790](v406);
  uint64_t v403 = (uint64_t)&v376 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v411 = (uint64_t)&v376 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v388 = (uint64_t)&v376 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v393 = (uint64_t)&v376 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v376 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v401 = (uint64_t)&v376 - v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBEF70);
  uint64_t v34 = MEMORY[0x1F4188790](v33 - 8);
  uint64_t v452 = (uint64_t)&v376 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v456 = (uint64_t)&v376 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v446 = (uint64_t)&v376 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v451 = (uint64_t)&v376 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v445 = (uint64_t)&v376 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v46 = (char *)&v376 - v45;
  MEMORY[0x1F4188790](v44);
  v404 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v376 - v47);
  uint64_t v458 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0);
  uint64_t v455 = *(void *)(v458 - 8);
  uint64_t v48 = MEMORY[0x1F4188790](v458);
  uint64_t v457 = (uint64_t)&v376 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v450 = (uint64_t)&v376 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  uint64_t v449 = (uint64_t)&v376 - v53;
  MEMORY[0x1F4188790](v52);
  uint64_t v396 = (uint64_t)&v376 - v54;
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC09D0);
  uint64_t v56 = MEMORY[0x1F4188790](v55 - 8);
  v410 = (char *)&v376 - ((v57 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v56);
  v427 = (void (*)(char *, uint64_t))((char *)&v376 - v58);
  uint64_t v447 = sub_1C44967E8();
  uint64_t v59 = *(void *)(v447 - 8);
  uint64_t v60 = MEMORY[0x1F4188790](v447);
  v385 = (char *)&v376 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = MEMORY[0x1F4188790](v60);
  v420 = (char *)&v376 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  v425 = (char *)&v376 - v65;
  uint64_t v66 = MEMORY[0x1F4188790](v64);
  v405 = (uint64_t *)((char *)&v376 - v67);
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  v400 = (char *)&v376 - v69;
  uint64_t v70 = MEMORY[0x1F4188790](v68);
  v399 = (char *)&v376 - v71;
  uint64_t v72 = MEMORY[0x1F4188790](v70);
  v409 = (char *)&v376 - v73;
  uint64_t v74 = MEMORY[0x1F4188790](v72);
  v398 = (char *)&v376 - v75;
  uint64_t v76 = MEMORY[0x1F4188790](v74);
  v413 = (char *)&v376 - v77;
  MEMORY[0x1F4188790](v76);
  uint64_t v79 = (char *)&v376 - v78;
  uint64_t v418 = type metadata accessor for Replica();
  v432 = *(void **)(v418 - 8);
  uint64_t v80 = MEMORY[0x1F4188790](v418);
  uint64_t v402 = (uint64_t)&v376 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = MEMORY[0x1F4188790](v80);
  uint64_t v387 = (uint64_t)&v376 - v83;
  uint64_t v84 = MEMORY[0x1F4188790](v82);
  uint64_t v380 = (uint64_t)&v376 - v85;
  uint64_t v86 = MEMORY[0x1F4188790](v84);
  uint64_t v379 = (uint64_t)&v376 - v87;
  uint64_t v88 = MEMORY[0x1F4188790](v86);
  uint64_t v378 = (uint64_t)&v376 - v89;
  uint64_t v90 = MEMORY[0x1F4188790](v88);
  uint64_t v389 = (uint64_t)&v376 - v91;
  uint64_t v92 = MEMORY[0x1F4188790](v90);
  v391 = (char *)&v376 - v93;
  uint64_t v94 = MEMORY[0x1F4188790](v92);
  uint64_t v382 = (uint64_t)&v376 - v95;
  uint64_t v96 = MEMORY[0x1F4188790](v94);
  uint64_t v381 = (uint64_t)&v376 - v97;
  uint64_t v98 = MEMORY[0x1F4188790](v96);
  uint64_t v419 = (uint64_t)&v376 - v99;
  uint64_t v100 = MEMORY[0x1F4188790](v98);
  unint64_t v422 = (unint64_t)&v376 - v101;
  uint64_t v102 = MEMORY[0x1F4188790](v100);
  v426 = (uint64_t *)((char *)&v376 - v103);
  MEMORY[0x1F4188790](v102);
  v453 = (char *)&v376 - v104;
  uint64_t v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07A0);
  uint64_t v106 = MEMORY[0x1F4188790](v105 - 8);
  uint64_t v108 = (char *)&v376 - ((v107 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = MEMORY[0x1F4188790](v106);
  uint64_t v415 = (uint64_t)&v376 - v110;
  uint64_t v111 = MEMORY[0x1F4188790](v109);
  v430 = (uint64_t *)((char *)&v376 - v112);
  MEMORY[0x1F4188790](v111);
  v429 = (char *)&v376 - v113;
  uint64_t v114 = *(void *)(a2 + 64);
  uint64_t v417 = a2 + 64;
  uint64_t v115 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v116 = -1;
  if (v115 < 64) {
    uint64_t v116 = ~(-1 << v115);
  }
  unint64_t v117 = v116 & v114;
  uint64_t v444 = a5 + 16;
  v441 = (void (**)(char *, char *, uint64_t))(v59 + 16);
  v437 = (void (**)(char *, uint64_t, uint64_t))(v59 + 32);
  v434 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56);
  uint64_t v421 = v59 + 48;
  v443 = (void *)(a5 + 32);
  uint64_t v436 = v59;
  v440 = (void (**)(char *, uint64_t))(v59 + 8);
  v384 = (uint64_t (*)())v9;
  v454 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  int64_t v423 = (unint64_t)(v115 + 63) >> 6;
  uint64_t v390 = v423 - 1;
  uint64_t v431 = a2;
  swift_bridgeObjectRetain();
  uint64_t v435 = 0;
  v416 = v108;
  v392 = v31;
  if (!v117) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v118 = __clz(__rbit64(v117));
  v117 &= v117 - 1;
  uint64_t v119 = v118 | (v435 << 6);
  uint64_t v120 = (uint64_t)v430;
LABEL_5:
  uint64_t v121 = v431;
  sub_1C3F8EF24(*(void *)(v431 + 48) + v432[9] * v119, v120, (uint64_t (*)(void))type metadata accessor for Replica);
  uint64_t v122 = v436;
  uint64_t v123 = *(void *)(v121 + 56) + *(void *)(v436 + 72) * v119;
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v122 + 16))(v120 + *(int *)(v124 + 48), v123, v447);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v120, 0, 1, v124);
  while (1)
  {
    uint64_t v129 = v120;
    uint64_t v130 = v429;
    sub_1C3F961BC(v129, (uint64_t)v429, &qword_1EBBC07A0);
    uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
    uint64_t v132 = *(void *)(v131 - 8);
    char v133 = *(unsigned int (**)(void, void, void))(v132 + 48);
    if (v133(v130, 1, v131) == 1)
    {
      v414 = (uint64_t (*)())(v132 + 48);
      uint64_t v417 = v131;
      swift_release();
      uint64_t v172 = *(void *)(v442 + 64);
      uint64_t v390 = v442 + 64;
      uint64_t v173 = 1 << *(unsigned char *)(v442 + 32);
      uint64_t v174 = -1;
      if (v173 < 64) {
        uint64_t v174 = ~(-1 << v173);
      }
      unint64_t v175 = v174 & v172;
      unint64_t v176 = (unint64_t)(v173 + 63) >> 6;
      v413 = (char *)(v132 + 56);
      v405 = v432 + 7;
      v404 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v432 + 6);
      v386 = &v463;
      v430 = (uint64_t *)(v383 + 8);
      v429 = (char *)(v383 + 16);
      v177 = (void (**)(uint64_t, void, uint64_t))((char *)v384 + 56);
      uint64_t v376 = v176 - 1;
      uint64_t v178 = swift_bridgeObjectRetain();
      int64_t v179 = 0;
      uint64_t v396 = v176;
      unint64_t v180 = v175;
      unint64_t v377 = v176 - 5;
      uint64_t v383 = v178 + 104;
      v453 = v46;
      uint64_t v181 = v447;
      v182 = v420;
      uint64_t v183 = v419;
      uint64_t v184 = (uint64_t)v416;
      v407 = v133;
LABEL_60:
      if (v180)
      {
        unint64_t v422 = (v180 - 1) & v180;
        int64_t v423 = v179;
        unint64_t v187 = __clz(__rbit64(v180)) | (v179 << 6);
        goto LABEL_62;
      }
      uint64_t v192 = v179 + 1;
      if (__OFADD__(v179, 1)) {
        goto LABEL_208;
      }
      if (v192 >= v396)
      {
        int64_t v423 = v179;
        unint64_t v422 = 0;
        uint64_t v191 = 1;
      }
      else
      {
        unint64_t v193 = *(void *)(v390 + 8 * v192);
        if (v193)
        {
LABEL_66:
          unint64_t v422 = (v193 - 1) & v193;
          unint64_t v187 = __clz(__rbit64(v193)) + (v192 << 6);
          int64_t v423 = v192;
LABEL_62:
          uint64_t v188 = v178;
          sub_1C3F8EF24(*(void *)(v178 + 48) + v432[9] * v187, v184, (uint64_t (*)(void))type metadata accessor for Replica);
          unint64_t v189 = *(void *)(v188 + 56) + *(void *)(v436 + 72) * v187;
          uint64_t v190 = v417;
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v436 + 16))(v184 + *(int *)(v417 + 48), v189, v181);
          uint64_t v191 = 0;
LABEL_69:
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v413)(v184, v191, 1, v190);
          uint64_t v194 = v415;
          sub_1C3F961BC(v184, v415, &qword_1EBBC07A0);
          if (v133(v194, 1, v190) == 1) {
            return swift_release();
          }
          uint64_t v195 = v194 + *(int *)(v190 + 48);
          uint64_t v196 = v183;
          sub_1C3F8F6E0(v194, v183, (uint64_t (*)(void))type metadata accessor for Replica);
          v197 = *v437;
          (*v437)(v425, v195, v181);
          uint64_t v198 = v431;
          if (*(void *)(v431 + 16) && (unint64_t v199 = sub_1C3F8F160(v183), (v200 & 1) != 0))
          {
            uint64_t v201 = *(void *)(v198 + 56);
            uint64_t v202 = v436;
            v203 = *(void (**)(char *, unint64_t, uint64_t))(v436 + 16);
            uint64_t v204 = (uint64_t)v410;
            uint64_t v181 = v447;
            v203(v410, v201 + *(void *)(v436 + 72) * v199, v447);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v202 + 56))(v204, 0, 1, v181);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v202 + 48))(v204, 1, v181) != 1)
            {
              v205 = v385;
              v197(v385, v204, v181);
              v206 = v425;
              v203(v398, (unint64_t)v425, v181);
              v203(v399, (unint64_t)v206, v181);
              v203(v400, (unint64_t)v205, v181);
              sub_1C3F70940(&qword_1EBBBC330, MEMORY[0x1E4F27D00]);
              v207 = v409;
              sub_1C4497BE8();
              sub_1C4497BC8();
              v208 = v440;
              v209 = *v440;
              uint64_t v196 = v419;
              (*v440)(v207, v181);
              v210 = v205;
              v182 = v420;
              v209(v210, v181);
              goto LABEL_76;
            }
          }
          else
          {
            uint64_t v204 = (uint64_t)v410;
            uint64_t v181 = v447;
            (*v434)(v410, 1, 1, v447);
          }
          sub_1C3F962E0(v204, (uint64_t *)&unk_1EBBC09D0);
          (*v441)(v182, v425, v181);
          v208 = v440;
LABEL_76:
          if ((sub_1C4496768() & 1) == 0)
          {
            uint64_t v211 = v401;
            sub_1C3F8EF24(v196, v401, (uint64_t (*)(void))type metadata accessor for Replica);
            uint64_t v212 = v418;
            uint64_t v435 = *v405;
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v435)(v211, 0, 1, v418);
            uint64_t v213 = v411;
            uint64_t v214 = v411 + *(int *)(v406 + 48);
            sub_1C3F970C4(v397, v411, &qword_1EBBC0FA0);
            sub_1C3F970C4(v211, v214, &qword_1EBBC0FA0);
            v215 = *v404;
            if ((*v404)(v213, 1, v212) == 1)
            {
              sub_1C3F962E0(v211, &qword_1EBBC0FA0);
              uint64_t v216 = &qword_1EBBBA210;
              if (v215(v214, 1, v212) == 1)
              {
                sub_1C3F962E0(v411, &qword_1EBBC0FA0);
                goto LABEL_80;
              }
LABEL_92:
              sub_1C3F962E0(v411, v216);
LABEL_93:
              uint64_t v239 = v393;
              sub_1C3F8EF24(v196, v393, (uint64_t (*)(void))type metadata accessor for Replica);
              uint64_t v240 = v418;
              ((void (*)(uint64_t, void, uint64_t, uint64_t))v435)(v239, 0, 1, v418);
              uint64_t v241 = v403;
              uint64_t v242 = v403 + *(int *)(v406 + 48);
              sub_1C3F970C4(v394, v403, &qword_1EBBC0FA0);
              sub_1C3F970C4(v239, v242, &qword_1EBBC0FA0);
              if (v215(v241, 1, v240) == 1)
              {
                uint64_t v243 = v196;
                sub_1C3F962E0(v239, &qword_1EBBC0FA0);
                unsigned int v244 = v215(v242, 1, v240);
                v245 = &qword_1EBBBA210;
                if (v244 == 1)
                {
                  sub_1C3F962E0(v403, &qword_1EBBC0FA0);
                  v246 = v443;
                  goto LABEL_96;
                }
LABEL_145:
                sub_1C3F962E0(v403, v245);
                v246 = v443;
LABEL_146:
                uint64_t v327 = v402;
                sub_1C3F8EF24(v243, v402, (uint64_t (*)(void))type metadata accessor for Replica);
                swift_beginAccess();
                int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v464 = (void *)*v246;
                v329 = v464;
                void *v246 = 0x8000000000000000;
                unint64_t v331 = sub_1C3F8F160(v327);
                uint64_t v332 = v329[2];
                BOOL v333 = (v330 & 1) == 0;
                uint64_t v334 = v332 + v333;
                if (__OFADD__(v332, v333)) {
                  goto LABEL_209;
                }
                char v335 = v330;
                if (v329[3] >= v334)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                  {
                    sub_1C4067C04();
                    v329 = v464;
                  }
                }
                else
                {
                  sub_1C3FB7274(v334, isUniquelyReferenced_nonNull_native);
                  v329 = v464;
                  unint64_t v336 = sub_1C3F8F160(v402);
                  if ((v335 & 1) != (v337 & 1)) {
                    goto LABEL_212;
                  }
                  unint64_t v331 = v336;
                }
                void *v246 = v329;
                swift_bridgeObjectRelease();
                v338 = (void *)*v246;
                if ((v335 & 1) == 0)
                {
                  uint64_t v462 = MEMORY[0x1E4FBC860];
                  swift_weakInit();
                  swift_weakAssign();
                  sub_1C3FAAC94((uint64_t)&v462, (uint64_t)&v464);
                  uint64_t v339 = v387;
                  sub_1C3F8EF24(v402, v387, (uint64_t (*)(void))type metadata accessor for Replica);
                  sub_1C3FB71B8(v331, v339, (uint64_t)&v464, v338);
                }
                unint64_t v340 = v331;
                uint64_t v341 = v338[7];
                v342 = v428;
                sub_1C44967C8();
                uint64_t v343 = (uint64_t)v424;
                sub_1C4496798();
                v427 = (void (*)(char *, uint64_t))*v430;
                v427(v342, v433);
                v344 = (void *)(v343 + *(int *)(v395 + 36));
                sub_1C3F70940((unint64_t *)&qword_1EBBBEE28, MEMORY[0x1E4F27CE0]);
                v345 = (void *)*v344;
                sub_1C4497818();
                BOOL v346 = v345 == v464;
                uint64_t v347 = v433;
                if (!v346)
                {
                  v349 = (unint64_t *)(v341 + 16 * v340);
                  v426 = v344;
                  while (1)
                  {
                    v351 = (void (*)(void **, void))sub_1C44978C8();
                    uint64_t v435 = *v352;
                    uint64_t v353 = v347;
                    uint64_t v354 = v352[1];
                    v351(&v464, 0);
                    v355 = v428;
                    (*(void (**)(char *, uint64_t, uint64_t))v429)(v428, v343, v353);
                    sub_1C4497828();
                    v427(v355, v353);
                    uint64_t v356 = sub_1C3FB3D7C(v435, v354);
                    unint64_t v358 = v357;
                    uint64_t v435 = v356;
                    if (v356 != v357) {
                      break;
                    }
LABEL_160:
                    sub_1C3F9043C(v435, v358);
                    v350 = (void *)*v426;
                    uint64_t v343 = (uint64_t)v424;
                    uint64_t v347 = v433;
                    sub_1C4497818();
                    if (v350 == v464) {
                      goto LABEL_156;
                    }
                  }
                  if (v357 >= v435)
                  {
                    unint64_t v359 = v435;
                    if (v435 >= v357) {
                      goto LABEL_203;
                    }
                    while ((v359 & 0x8000000000000000) == 0)
                    {
                      if (v359 >= *(void *)(*v349 + 16)) {
                        goto LABEL_190;
                      }
                      unint64_t v360 = (*(unsigned __int8 *)(v455 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v455 + 80);
                      unint64_t v361 = *(void *)(v455 + 72) * v359;
                      uint64_t v362 = v457;
                      sub_1C3F970C4(*v349 + v360 + v361, v457, qword_1EBBBF0A0);
                      uint64_t v363 = v362 + *(int *)(v458 + 36);
                      uint64_t v364 = v452;
                      sub_1C3F970C4(v363, v452, qword_1EBBBEF70);
                      if ((*v454)(v364, 1, v459) == 1)
                      {
                        sub_1C3F962E0(v364, qword_1EBBBEF70);
                        uint64_t v365 = type metadata accessor for FinalizedTimestamp(0);
                        uint64_t v366 = v456;
                        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v365 - 8) + 56))(v456, 1, 1, v365);
                        *(void *)(v366 + *(int *)(v459 + 20)) = 1;
                        (*v177)(v366, 0, 1);
                      }
                      else
                      {
                        uint64_t v367 = v364;
                        uint64_t v368 = v448;
                        sub_1C3F8F6E0(v367, v448, type metadata accessor for RetainedMapRun);
                        uint64_t v369 = v456;
                        sub_1C3F970C4(v368, v456, &qword_1EBBBF870);
                        uint64_t v370 = *(int *)(v459 + 20);
                        uint64_t v371 = *(void *)(v368 + v370);
                        BOOL v299 = __OFADD__(v371, 1);
                        uint64_t v372 = v371 + 1;
                        if (v299) {
                          goto LABEL_192;
                        }
                        *(void *)(v369 + v370) = v372;
                        sub_1C3F9024C(v368, type metadata accessor for RetainedMapRun);
                        ((void (*)(uint64_t, void, uint64_t, uint64_t))*v177)(v369, 0, 1, v459);
                      }
                      sub_1C3F962E0(v457, qword_1EBBBF0A0);
                      unint64_t v373 = *v349;
                      char v374 = swift_isUniquelyReferenced_nonNull_native();
                      unint64_t *v349 = v373;
                      if ((v374 & 1) == 0)
                      {
                        unint64_t v373 = sub_1C4232804(v373);
                        unint64_t *v349 = v373;
                      }
                      if (v359 >= *(void *)(v373 + 16)) {
                        goto LABEL_191;
                      }
                      ++v359;
                      sub_1C3FB43E4(v456, v373 + v360 + *(int *)(v458 + 36) + v361);
                      uint64_t v46 = v453;
                      if (v358 == v359) {
                        goto LABEL_160;
                      }
                    }
                    __break(1u);
LABEL_190:
                    __break(1u);
LABEL_191:
                    __break(1u);
LABEL_192:
                    __break(1u);
LABEL_193:
                    __break(1u);
LABEL_194:
                    __break(1u);
LABEL_195:
                    __break(1u);
LABEL_196:
                    __break(1u);
LABEL_197:
                    __break(1u);
LABEL_198:
                    __break(1u);
LABEL_199:
                    __break(1u);
LABEL_200:
                    __break(1u);
                    break;
                  }
                  goto LABEL_202;
                }
LABEL_156:
                sub_1C3F962E0(v343, &qword_1EBBBCA78);
                swift_endAccess();
                uint64_t v227 = &v434;
LABEL_157:
                uint64_t v265 = (uint64_t)*(v227 - 32);
                goto LABEL_158;
              }
              uint64_t v257 = v388;
              sub_1C3F970C4(v241, v388, &qword_1EBBC0FA0);
              unsigned int v258 = v215(v242, 1, v240);
              v245 = &qword_1EBBBA210;
              if (v258 != 1)
              {
                uint64_t v259 = v378;
                sub_1C3F8F6E0(v242, v378, (uint64_t (*)(void))type metadata accessor for Replica);
                uint64_t v260 = *(int *)(v418 + 20);
                uint64_t v261 = *(void *)(v257 + v260);
                uint64_t v435 = *(void *)(v259 + v260);
                uint64_t v262 = v379;
                sub_1C3F8EF24(v257, v379, (uint64_t (*)(void))type metadata accessor for Replica);
                uint64_t v263 = v380;
                sub_1C3F8EF24(v259, v380, (uint64_t (*)(void))type metadata accessor for Replica);
                if (v261 == v435)
                {
                  char v264 = sub_1C4496618();
                  sub_1C3F9024C(v263, (uint64_t (*)(void))type metadata accessor for Replica);
                  sub_1C3F9024C(v262, (uint64_t (*)(void))type metadata accessor for Replica);
                  sub_1C3F9024C(v259, (uint64_t (*)(void))type metadata accessor for Replica);
                  sub_1C3F962E0(v239, &qword_1EBBC0FA0);
                  sub_1C3F9024C(v257, (uint64_t (*)(void))type metadata accessor for Replica);
                  sub_1C3F962E0(v403, &qword_1EBBC0FA0);
                  uint64_t v243 = v419;
                  v246 = v443;
                  if ((v264 & 1) == 0) {
                    goto LABEL_146;
                  }
LABEL_96:
                  swift_beginAccess();
                  int v247 = swift_isUniquelyReferenced_nonNull_native();
                  v464 = (void *)*v246;
                  v248 = v464;
                  void *v246 = 0x8000000000000000;
                  unint64_t v250 = sub_1C3F8F160(v243);
                  uint64_t v251 = v248[2];
                  BOOL v252 = (v249 & 1) == 0;
                  uint64_t v253 = v251 + v252;
                  if (__OFADD__(v251, v252)) {
                    goto LABEL_210;
                  }
                  char v254 = v249;
                  if (v248[3] >= v253)
                  {
                    if ((v247 & 1) == 0)
                    {
                      sub_1C4067C04();
                      v248 = v464;
                    }
                  }
                  else
                  {
                    sub_1C3FB7274(v253, v247);
                    v248 = v464;
                    unint64_t v255 = sub_1C3F8F160(v419);
                    if ((v254 & 1) != (v256 & 1)) {
                      goto LABEL_212;
                    }
                    unint64_t v250 = v255;
                  }
                  void *v246 = v248;
                  swift_bridgeObjectRelease();
                  v266 = (void *)*v246;
                  if ((v254 & 1) == 0)
                  {
                    uint64_t v462 = MEMORY[0x1E4FBC860];
                    swift_weakInit();
                    swift_weakAssign();
                    sub_1C3FAAC94((uint64_t)&v462, (uint64_t)&v464);
                    uint64_t v267 = v387;
                    sub_1C3F8EF24(v419, v387, (uint64_t (*)(void))type metadata accessor for Replica);
                    sub_1C3FB71B8(v250, v267, (uint64_t)&v464, v266);
                  }
                  unint64_t v268 = v250;
                  uint64_t v269 = v266[7];
                  v270 = v428;
                  sub_1C44967C8();
                  uint64_t v271 = (uint64_t)v412;
                  sub_1C4496798();
                  uint64_t v435 = *v430;
                  ((void (*)(char *, uint64_t))v435)(v270, v433);
                  v272 = (char *)(v271 + *(int *)(v395 + 36));
                  v273 = (void *)sub_1C3F70940((unint64_t *)&qword_1EBBBEE28, MEMORY[0x1E4F27CE0]);
                  v274 = *(void **)v272;
                  sub_1C4497818();
                  uint64_t v275 = v433;
                  if (v274 != v464)
                  {
                    v276 = (unint64_t *)(v269 + 16 * v268);
                    v427 = (void (*)(char *, uint64_t))v272;
                    v426 = v273;
                    while (1)
                    {
                      v278 = (void (*)(void **, void))sub_1C44978C8();
                      uint64_t v280 = *v279;
                      uint64_t v281 = v279[1];
                      v278(&v464, 0);
                      v282 = v428;
                      (*(void (**)(char *, uint64_t, uint64_t))v429)(v428, v271, v275);
                      sub_1C4497828();
                      ((void (*)(char *, uint64_t))v435)(v282, v275);
                      uint64_t v283 = sub_1C3FB3D7C(v280, v281);
                      unint64_t v285 = v284;
                      uint64_t v286 = v283;
                      if (v283 != v284) {
                        break;
                      }
LABEL_112:
                      sub_1C3F9043C(v286, v285);
                      v277 = *(void **)v427;
                      uint64_t v271 = (uint64_t)v412;
                      uint64_t v275 = v433;
                      sub_1C4497818();
                      if (v277 == v464) {
                        goto LABEL_111;
                      }
                    }
                    if (v284 >= v283)
                    {
                      unint64_t v287 = v283;
                      if (v283 >= v284) {
                        goto LABEL_205;
                      }
                      while ((v287 & 0x8000000000000000) == 0)
                      {
                        if (v287 >= *(void *)(*v276 + 16)) {
                          goto LABEL_194;
                        }
                        unint64_t v288 = (*(unsigned __int8 *)(v455 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v455 + 80);
                        unint64_t v289 = *(void *)(v455 + 72) * v287;
                        uint64_t v290 = v450;
                        sub_1C3F970C4(*v276 + v288 + v289, v450, qword_1EBBBF0A0);
                        uint64_t v291 = v290 + *(int *)(v458 + 36);
                        uint64_t v292 = v446;
                        sub_1C3F970C4(v291, v446, qword_1EBBBEF70);
                        if ((*v454)(v292, 1, v459) == 1)
                        {
                          sub_1C3F962E0(v292, qword_1EBBBEF70);
                          uint64_t v293 = type metadata accessor for FinalizedTimestamp(0);
                          uint64_t v294 = v451;
                          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v293 - 8) + 56))(v451, 1, 1, v293);
                          *(void *)(v294 + *(int *)(v459 + 20)) = 2;
                          (*v177)(v294, 0, 1);
                        }
                        else
                        {
                          uint64_t v295 = v292;
                          uint64_t v296 = v439;
                          sub_1C3F8F6E0(v295, v439, type metadata accessor for RetainedMapRun);
                          uint64_t v294 = v451;
                          sub_1C3F970C4(v296, v451, &qword_1EBBBF870);
                          uint64_t v297 = *(int *)(v459 + 20);
                          uint64_t v298 = *(void *)(v296 + v297);
                          BOOL v299 = __OFADD__(v298, 1);
                          uint64_t v300 = v298 + 1;
                          if (v299) {
                            goto LABEL_199;
                          }
                          *(void *)(v294 + v297) = v300;
                          sub_1C3F9024C(v296, type metadata accessor for RetainedMapRun);
                          (*v177)(v294, 0, 1);
                        }
                        sub_1C3F962E0(v450, qword_1EBBBF0A0);
                        unint64_t v301 = *v276;
                        char v302 = swift_isUniquelyReferenced_nonNull_native();
                        unint64_t *v276 = v301;
                        if ((v302 & 1) == 0)
                        {
                          unint64_t v301 = sub_1C4232804(v301);
                          unint64_t *v276 = v301;
                        }
                        if (v287 >= *(void *)(v301 + 16)) {
                          goto LABEL_195;
                        }
                        ++v287;
                        sub_1C3FB43E4(v294, v301 + v288 + *(int *)(v458 + 36) + v289);
                        if (v285 == v287) {
                          goto LABEL_112;
                        }
                      }
                      goto LABEL_193;
                    }
                    goto LABEL_204;
                  }
LABEL_111:
                  sub_1C3F962E0(v271, &qword_1EBBBCA78);
                  swift_endAccess();
                  goto LABEL_159;
                }
                sub_1C3F9024C(v263, (uint64_t (*)(void))type metadata accessor for Replica);
                sub_1C3F9024C(v262, (uint64_t (*)(void))type metadata accessor for Replica);
                sub_1C3F9024C(v259, (uint64_t (*)(void))type metadata accessor for Replica);
                v245 = &qword_1EBBC0FA0;
              }
              sub_1C3F962E0(v239, &qword_1EBBC0FA0);
              sub_1C3F9024C(v257, (uint64_t (*)(void))type metadata accessor for Replica);
              uint64_t v243 = v419;
              goto LABEL_145;
            }
            uint64_t v228 = (uint64_t)v392;
            sub_1C3F970C4(v213, (uint64_t)v392, &qword_1EBBC0FA0);
            unsigned int v229 = v215(v214, 1, v212);
            uint64_t v216 = &qword_1EBBBA210;
            uint64_t v230 = (uint64_t)v391;
            if (v229 != 1)
            {
              uint64_t v231 = v381;
              sub_1C3F8F6E0(v214, v381, (uint64_t (*)(void))type metadata accessor for Replica);
              uint64_t v232 = *(int *)(v418 + 20);
              uint64_t v233 = *(void *)(v228 + v232);
              uint64_t v234 = v228;
              uint64_t v235 = *(void *)(v231 + v232);
              uint64_t v236 = v228;
              uint64_t v237 = v382;
              sub_1C3F8EF24(v236, v382, (uint64_t (*)(void))type metadata accessor for Replica);
              sub_1C3F8EF24(v231, v230, (uint64_t (*)(void))type metadata accessor for Replica);
              if (v233 == v235)
              {
                char v238 = sub_1C4496618();
                sub_1C3F9024C(v230, (uint64_t (*)(void))type metadata accessor for Replica);
                sub_1C3F9024C(v237, (uint64_t (*)(void))type metadata accessor for Replica);
                sub_1C3F9024C(v231, (uint64_t (*)(void))type metadata accessor for Replica);
                sub_1C3F962E0(v401, &qword_1EBBC0FA0);
                sub_1C3F9024C(v234, (uint64_t (*)(void))type metadata accessor for Replica);
                sub_1C3F962E0(v411, &qword_1EBBC0FA0);
                uint64_t v46 = v453;
                uint64_t v196 = v419;
                if ((v238 & 1) == 0) {
                  goto LABEL_93;
                }
LABEL_80:
                uint64_t v217 = v389;
                sub_1C3F8EF24(v196, v389, (uint64_t (*)(void))type metadata accessor for Replica);
                swift_beginAccess();
                v218 = sub_1C3FAA6E8(&v464, v217);
                if (*v219)
                {
                  uint64_t v220 = v219;
                  v384 = v218;
                  uint64_t v221 = v428;
                  sub_1C44967C8();
                  uint64_t v222 = (uint64_t)v408;
                  sub_1C4496798();
                  uint64_t v223 = v433;
                  uint64_t v435 = *v430;
                  ((void (*)(char *, uint64_t))v435)(v221, v433);
                  uint64_t v224 = (char *)(v222 + *(int *)(v395 + 36));
                  uint64_t v225 = (void *)sub_1C3F70940((unint64_t *)&qword_1EBBBEE28, MEMORY[0x1E4F27CE0]);
                  uint64_t v226 = *(void *)v224;
                  sub_1C4497818();
                  if (v226 != v460)
                  {
                    v427 = (void (*)(char *, uint64_t))v224;
                    v426 = v225;
                    while (1)
                    {
                      v304 = (void (*)(uint64_t *, void))sub_1C44978C8();
                      uint64_t v305 = v223;
                      uint64_t v307 = *v306;
                      uint64_t v308 = v306[1];
                      v304(&v460, 0);
                      v309 = v428;
                      (*(void (**)(char *, uint64_t, uint64_t))v429)(v428, v222, v305);
                      sub_1C4497828();
                      ((void (*)(char *, uint64_t))v435)(v309, v305);
                      uint64_t v310 = sub_1C3FB3D7C(v307, v308);
                      uint64_t v312 = v310;
                      unint64_t v313 = v311;
                      if (v310 != v311) {
                        break;
                      }
LABEL_128:
                      sub_1C3F9043C(v312, v313);
                      v303 = *(void **)v427;
                      uint64_t v222 = (uint64_t)v408;
                      uint64_t v223 = v433;
                      sub_1C4497818();
                      if (v303 == (void *)v460) {
                        goto LABEL_82;
                      }
                    }
                    if (v311 < v310) {
                      goto LABEL_206;
                    }
                    unint64_t v314 = v310;
                    if (v310 >= v311) {
                      goto LABEL_207;
                    }
                    while ((v314 & 0x8000000000000000) == 0)
                    {
                      if (v314 >= *(void *)(*v220 + 16)) {
                        goto LABEL_197;
                      }
                      unint64_t v315 = (*(unsigned __int8 *)(v455 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v455 + 80);
                      unint64_t v316 = *(void *)(v455 + 72) * v314;
                      uint64_t v317 = v449;
                      sub_1C3F970C4(*v220 + v315 + v316, v449, qword_1EBBBF0A0);
                      uint64_t v318 = v317 + *(int *)(v458 + 36);
                      uint64_t v319 = v445;
                      sub_1C3F970C4(v318, v445, qword_1EBBBEF70);
                      if ((*v454)(v319, 1, v459) == 1)
                      {
                        sub_1C3F962E0(v319, qword_1EBBBEF70);
                        ((void (*)(char *, uint64_t, uint64_t, uint64_t))*v177)(v46, 1, 1, v459);
                      }
                      else
                      {
                        uint64_t v320 = v319;
                        uint64_t v321 = v438;
                        sub_1C3F8F6E0(v320, v438, type metadata accessor for RetainedMapRun);
                        sub_1C3F970C4(v321, (uint64_t)v46, &qword_1EBBBF870);
                        uint64_t v322 = *(int *)(v459 + 20);
                        uint64_t v323 = *(void *)(v321 + v322);
                        BOOL v299 = __OFADD__(v323, 1);
                        uint64_t v324 = v323 + 1;
                        if (v299) {
                          goto LABEL_200;
                        }
                        *(void *)&v46[v322] = v324;
                        sub_1C3F9024C(v321, type metadata accessor for RetainedMapRun);
                        ((void (*)(char *, void, uint64_t, uint64_t))*v177)(v46, 0, 1, v459);
                      }
                      sub_1C3F962E0(v449, qword_1EBBBF0A0);
                      unint64_t v325 = *v220;
                      char v326 = swift_isUniquelyReferenced_nonNull_native();
                      *uint64_t v220 = v325;
                      if ((v326 & 1) == 0)
                      {
                        unint64_t v325 = sub_1C4232804(v325);
                        *uint64_t v220 = v325;
                      }
                      if (v314 >= *(void *)(v325 + 16)) {
                        goto LABEL_198;
                      }
                      ++v314;
                      sub_1C3FB43E4((uint64_t)v46, v325 + v315 + *(int *)(v458 + 36) + v316);
                      if (v313 == v314) {
                        goto LABEL_128;
                      }
                    }
                    goto LABEL_196;
                  }
LABEL_82:
                  sub_1C3F962E0(v222, &qword_1EBBBCA78);
                  ((void (*)(void **, void))v384)(&v464, 0);
                  swift_endAccess();
                  uint64_t v227 = (void (***)(char *, uint64_t, uint64_t, uint64_t))&v421;
                  goto LABEL_157;
                }
                ((void (*)(void **, void))v218)(&v464, 0);
                swift_endAccess();
                uint64_t v265 = v217;
LABEL_158:
                sub_1C3F9024C(v265, (uint64_t (*)(void))type metadata accessor for Replica);
LABEL_159:
                v348 = *v440;
                v182 = v420;
                uint64_t v181 = v447;
                (*v440)(v420, v447);
                v348(v425, v181);
                uint64_t v186 = v419;
LABEL_59:
                uint64_t v184 = (uint64_t)v416;
                uint64_t v183 = v186;
                sub_1C3F9024C(v186, (uint64_t (*)(void))type metadata accessor for Replica);
                uint64_t v178 = v442;
                char v133 = v407;
                int64_t v179 = v423;
                unint64_t v180 = v422;
                goto LABEL_60;
              }
              sub_1C3F9024C(v230, (uint64_t (*)(void))type metadata accessor for Replica);
              sub_1C3F9024C(v237, (uint64_t (*)(void))type metadata accessor for Replica);
              sub_1C3F9024C(v231, (uint64_t (*)(void))type metadata accessor for Replica);
              uint64_t v216 = &qword_1EBBC0FA0;
              uint64_t v228 = v234;
              uint64_t v211 = v401;
              uint64_t v196 = v419;
            }
            sub_1C3F962E0(v211, &qword_1EBBC0FA0);
            sub_1C3F9024C(v228, (uint64_t (*)(void))type metadata accessor for Replica);
            uint64_t v46 = v453;
            goto LABEL_92;
          }
          uint64_t v185 = *v208;
          (*v208)(v182, v181);
          v185(v425, v181);
          uint64_t v186 = v196;
          goto LABEL_59;
        }
        if (v179 + 2 >= v396)
        {
          unint64_t v422 = 0;
          uint64_t v191 = 1;
          goto LABEL_176;
        }
        unint64_t v193 = *(void *)(v390 + 8 * (v179 + 2));
        if (v193)
        {
          uint64_t v192 = v179 + 2;
          goto LABEL_66;
        }
        if (v179 + 3 >= v396)
        {
          unint64_t v422 = 0;
          uint64_t v191 = 1;
          int64_t v423 = v179 + 2;
        }
        else
        {
          unint64_t v193 = *(void *)(v390 + 8 * (v179 + 3));
          if (v193)
          {
            uint64_t v192 = v179 + 3;
            goto LABEL_66;
          }
          uint64_t v192 = v179 + 4;
          if (v179 + 4 >= v396)
          {
            unint64_t v422 = 0;
            uint64_t v191 = 1;
            int64_t v423 = v179 + 3;
          }
          else
          {
            unint64_t v193 = *(void *)(v390 + 8 * v192);
            if (v193) {
              goto LABEL_66;
            }
            while (v377 != v179)
            {
              unint64_t v193 = *(void *)(v383 + 8 * v179++);
              if (v193)
              {
                uint64_t v192 = v179 + 4;
                goto LABEL_66;
              }
            }
            unint64_t v422 = 0;
            uint64_t v191 = 1;
            uint64_t v192 = v376;
LABEL_176:
            int64_t v423 = v192;
          }
        }
      }
      uint64_t v190 = v417;
      goto LABEL_69;
    }
    uint64_t v134 = &v130[*(int *)(v131 + 48)];
    uint64_t v135 = (uint64_t)v453;
    sub_1C3F8F6E0((uint64_t)v130, (uint64_t)v453, (uint64_t (*)(void))type metadata accessor for Replica);
    v136 = *v437;
    uint64_t v137 = v447;
    (*v437)(v79, (uint64_t)v134, v447);
    if (*(void *)(v442 + 16) && (unint64_t v138 = sub_1C3F8F160(v135), (v139 & 1) != 0))
    {
      uint64_t v140 = v436;
      v141 = *(void (**)(char *, unint64_t, uint64_t))(v436 + 16);
      uint64_t v142 = (uint64_t)v427;
      v141((char *)v427, *(void *)(v442 + 56) + *(void *)(v436 + 72) * v138, v137);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v140 + 56))(v142, 0, 1, v137);
      v143 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
      uint64_t v135 = (uint64_t)v453;
      if (v143(v142, 1, v137) != 1)
      {
        uint64_t v144 = v413;
        uint64_t v145 = v447;
        v136(v413, v142, v447);
        uint64_t v146 = v422;
        sub_1C3F8EF24(v135, v422, (uint64_t (*)(void))type metadata accessor for Replica);
        swift_beginAccess();
        uint64_t v147 = sub_1C3FAA6E8(&v464, v146);
        if (*v148)
        {
          v414 = v147;
          v141(v409, (unint64_t)v79, v145);
          v141(v400, (unint64_t)v79, v145);
          v141((char *)v405, (unint64_t)v144, v145);
          sub_1C3F70940(&qword_1EBBBC330, MEMORY[0x1E4F27D00]);
          uint64_t v149 = v144;
          uint64_t v150 = v399;
          sub_1C4497BE8();
          uint64_t v151 = v398;
          sub_1C4497BC8();
          uint64_t v152 = *v440;
          (*v440)(v150, v145);
          sub_1C4478A04();
          ((void (*)(void **, void))v414)(&v464, 0);
          swift_endAccess();
          uint64_t v153 = v151;
          uint64_t v135 = (uint64_t)v453;
          v152(v153, v145);
          sub_1C3F9024C(v422, (uint64_t (*)(void))type metadata accessor for Replica);
          v152(v149, v145);
        }
        else
        {
          ((void (*)(void **, void))v147)(&v464, 0);
          swift_endAccess();
          sub_1C3F9024C(v146, (uint64_t (*)(void))type metadata accessor for Replica);
          (*v440)(v144, v145);
        }
        goto LABEL_34;
      }
    }
    else
    {
      uint64_t v142 = (uint64_t)v427;
      (*v434)((char *)v427, 1, 1, v137);
    }
    sub_1C3F962E0(v142, (uint64_t *)&unk_1EBBC09D0);
    uint64_t v154 = v135;
    uint64_t v155 = v426;
    sub_1C3F8EF24(v154, (uint64_t)v426, (uint64_t (*)(void))type metadata accessor for Replica);
    swift_beginAccess();
    BOOL v156 = sub_1C3FAA6E8(&v464, (uint64_t)v155);
    if (*v157) {
      sub_1C4478A04();
    }
    ((void (*)(void **, void))v156)(&v464, 0);
    swift_endAccess();
    sub_1C3F9024C((uint64_t)v155, (uint64_t (*)(void))type metadata accessor for Replica);
    uint64_t v135 = (uint64_t)v453;
LABEL_34:
    swift_beginAccess();
    uint64_t v158 = *v443;
    if (!*(void *)(*v443 + 16) || (unint64_t v159 = sub_1C3F8F160(v135), (v160 & 1) == 0))
    {
      uint64_t v460 = 0;
      uint64_t v461 = 0;
      uint64_t v161 = v447;
LABEL_42:
      sub_1C3F962E0((uint64_t)&v460, qword_1EBBBEE40);
      swift_endAccess();
LABEL_43:
      (*v440)(v79, v161);
      sub_1C3F9024C(v135, (uint64_t (*)(void))type metadata accessor for Replica);
      if (v117) {
        goto LABEL_4;
      }
      goto LABEL_6;
    }
    sub_1C3FAA63C(*(void *)(v158 + 56) + 16 * v159, (uint64_t)&v460);
    uint64_t v161 = v447;
    if (!v460) {
      goto LABEL_42;
    }
    sub_1C3FAA63C((uint64_t)&v460, (uint64_t)&v462);
    sub_1C3F962E0((uint64_t)&v460, qword_1EBBBEE40);
    swift_endAccess();
    uint64_t v162 = *(void *)(v462 + 16);
    if (!v162)
    {
      sub_1C3F903E8((uint64_t)&v462);
      goto LABEL_46;
    }
    if (v162 != 1)
    {
      sub_1C3F903E8((uint64_t)&v462);
      goto LABEL_43;
    }
    uint64_t v163 = v396;
    sub_1C3F970C4(v462 + ((*(unsigned __int8 *)(v455 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v455 + 80)), v396, qword_1EBBBF0A0);
    v164 = v404;
    sub_1C3F961BC(v163 + *(int *)(v458 + 36), (uint64_t)v404, qword_1EBBBEF70);
    LODWORD(v163) = (*v454)((uint64_t)v164, 1, v459);
    uint64_t v135 = (uint64_t)v453;
    sub_1C3F962E0((uint64_t)v164, qword_1EBBBEF70);
    sub_1C3F903E8((uint64_t)&v462);
    if (v163 != 1) {
      goto LABEL_43;
    }
LABEL_46:
    swift_beginAccess();
    uint64_t v165 = v135;
    v166 = v443;
    swift_bridgeObjectRetain();
    unint64_t v167 = sub_1C3F8F160(v165);
    LOBYTE(v165) = v168;
    swift_bridgeObjectRelease();
    if (v165)
    {
      char v169 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v170 = *v166;
      uint64_t v460 = *v166;
      uint64_t *v166 = 0x8000000000000000;
      if ((v169 & 1) == 0)
      {
        sub_1C4067C04();
        uint64_t v170 = v460;
      }
      sub_1C3F9024C(*(void *)(v170 + 48) + v432[9] * v167, (uint64_t (*)(void))type metadata accessor for Replica);
      sub_1C3FAAC94(*(void *)(v170 + 56) + 16 * v167, (uint64_t)&v462);
      sub_1C3FAE060(v167, v170);
      uint64_t *v166 = v170;
      swift_bridgeObjectRelease();
      sub_1C3FAAC94((uint64_t)&v462, (uint64_t)&v460);
    }
    else
    {
      uint64_t v460 = 0;
      uint64_t v461 = 0;
    }
    uint64_t v171 = v447;
    swift_endAccess();
    sub_1C3F962E0((uint64_t)&v460, qword_1EBBBEE40);
    (*v440)(v79, v171);
    sub_1C3F9024C((uint64_t)v453, (uint64_t (*)(void))type metadata accessor for Replica);
    if (v117) {
      goto LABEL_4;
    }
LABEL_6:
    uint64_t v125 = v435 + 1;
    uint64_t v120 = (uint64_t)v430;
    if (__OFADD__(v435, 1)) {
      break;
    }
    if (v125 < v423)
    {
      unint64_t v126 = *(void *)(v417 + 8 * v125);
      if (v126) {
        goto LABEL_9;
      }
      uint64_t v127 = v435 + 2;
      ++v435;
      if (v125 + 1 < v423)
      {
        unint64_t v126 = *(void *)(v417 + 8 * v127);
        if (v126) {
          goto LABEL_12;
        }
        uint64_t v435 = v125 + 1;
        if (v125 + 2 < v423)
        {
          unint64_t v126 = *(void *)(v417 + 8 * (v125 + 2));
          if (v126)
          {
            v125 += 2;
            goto LABEL_9;
          }
          uint64_t v127 = v125 + 3;
          uint64_t v435 = v125 + 2;
          if (v125 + 3 < v423)
          {
            unint64_t v126 = *(void *)(v417 + 8 * v127);
            if (!v126)
            {
              while (1)
              {
                uint64_t v125 = v127 + 1;
                if (__OFADD__(v127, 1)) {
                  goto LABEL_211;
                }
                if (v125 >= v423)
                {
                  uint64_t v435 = v390;
                  goto LABEL_23;
                }
                unint64_t v126 = *(void *)(v417 + 8 * v125);
                ++v127;
                if (v126) {
                  goto LABEL_9;
                }
              }
            }
LABEL_12:
            uint64_t v125 = v127;
LABEL_9:
            unint64_t v117 = (v126 - 1) & v126;
            uint64_t v119 = __clz(__rbit64(v126)) + (v125 << 6);
            uint64_t v435 = v125;
            goto LABEL_5;
          }
        }
      }
    }
LABEL_23:
    uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v128 - 8) + 56))(v120, 1, 1, v128);
    unint64_t v117 = 0;
  }
  __break(1u);
LABEL_202:
  __break(1u);
LABEL_203:
  __break(1u);
LABEL_204:
  __break(1u);
LABEL_205:
  __break(1u);
LABEL_206:
  __break(1u);
LABEL_207:
  __break(1u);
LABEL_208:
  __break(1u);
LABEL_209:
  __break(1u);
LABEL_210:
  __break(1u);
LABEL_211:
  __break(1u);
LABEL_212:
  uint64_t result = sub_1C4498558();
  __break(1u);
  return result;
}

unsigned int (*sub_1C401F788(uint64_t a1, uint64_t (**a2)(), uint64_t a3, uint64_t a4))(uint64_t, uint64_t, uint64_t)
{
  uint64_t v5 = v4;
  uint64_t v235 = a4;
  uint64_t v230 = a2;
  v248[2] = *MEMORY[0x1E4F143B8];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0778);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v223 = (uint64_t)&v182 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v203 = (uint64_t)&v182 - v10;
  uint64_t v232 = sub_1C4496678();
  uint64_t v11 = *(void *)(v232 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v232);
  uint64_t v222 = (char *)&v182 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v221 = (char *)&v182 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v202 = (char *)&v182 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v201 = (char *)&v182 - v19;
  MEMORY[0x1F4188790](v18);
  unint64_t v189 = (char *)&v182 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBEF70);
  MEMORY[0x1F4188790](v21 - 8);
  unint64_t v199 = (char *)&v182 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBF0A0);
  uint64_t v193 = *(void *)(v198 - 8);
  MEMORY[0x1F4188790](v198);
  uint64_t v196 = (uint64_t *)((char *)&v182 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC6B0);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v197 = (uint64_t)&v182 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v205 = (uint64_t)&v182 - v27;
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF870);
  uint64_t v29 = MEMORY[0x1F4188790](v28 - 8);
  uint64_t v192 = (char *)&v182 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v212 = (char *)&v182 - v31;
  uint64_t v238 = type metadata accessor for FinalizedTimestamp(0);
  unint64_t v240 = *(void *)(v238 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v238);
  uint64_t v187 = (uint64_t)&v182 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v186 = (uint64_t)&v182 - v34;
  uint64_t v217 = (void *)sub_1C4496688();
  uint64_t v35 = *(v217 - 1);
  uint64_t v36 = MEMORY[0x1F4188790](v217);
  uint64_t v224 = (void (**)(uint64_t, uint64_t))((char *)&v182 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v36);
  uint64_t v220 = (char *)&v182 - v38;
  uint64_t v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF188);
  MEMORY[0x1F4188790](v188);
  uint64_t v228 = (char *)&v182 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1C44967E8();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v44 = (char *)&v182 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x1F4188790](v42);
  uint64_t v213 = (char *)&v182 - v46;
  MEMORY[0x1F4188790](v45);
  uint64_t v190 = (char *)&v182 - v47;
  uint64_t v234 = type metadata accessor for Replica();
  uint64_t v48 = MEMORY[0x1F4188790](v234);
  uint64_t v237 = (uint64_t)&v182 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v236 = (uint64_t)&v182 - v51;
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  v206 = (char *)&v182 - v53;
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  uint64_t v56 = (char *)&v182 - v55;
  MEMORY[0x1F4188790](v54);
  unsigned int v229 = (void (**)(char *, uint64_t, uint64_t))((char *)&v182 - v57);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07A0);
  uint64_t v59 = MEMORY[0x1F4188790](v58 - 8);
  uint64_t v61 = (char *)&v182 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = MEMORY[0x1F4188790](v59);
  uint64_t v233 = (uint64_t)&v182 - v63;
  uint64_t v64 = MEMORY[0x1F4188790](v62);
  MEMORY[0x1F4188790](v64);
  uint64_t v68 = (void (**)(void))((char *)&v182 - v67);
  char v244 = 0;
  char v243 = 0;
  uint64_t v242 = MEMORY[0x1E4FBC868];
  v218 = v5;
  uint64_t v241 = v44;
  uint64_t v231 = v61;
  uint64_t v191 = v41;
  uint64_t v219 = a1;
  uint64_t v204 = v56;
  if (v65)
  {
    uint64_t v128 = a1;
    uint64_t v70 = v11;
  }
  else
  {
    uint64_t v226 = v66;
    int v185 = v65;
    v209 = v5 + 2;
    uint64_t v214 = (void (**)(char *, char *, uint64_t))(v41 + 32);
    uint64_t v227 = *(void (***)(char *, uint64_t, uint64_t))(a1 + 16);
    uint64_t v239 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 8);
    uint64_t v216 = (void (**)(char *, char *, void *))(v35 + 16);
    uint64_t v211 = (void (**)(char *, void *))(v35 + 8);
    v208 = (void (**)(char *, uint64_t, uint64_t))(v41 + 16);
    uint64_t v195 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v193 + 56);
    uint64_t v194 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v193 + 48);
    char v200 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v240 + 48);
    uint64_t v184 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    uint64_t v183 = (void (**)(char *, char *, uint64_t))(v11 + 32);
    v215 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v240 + 56);
    swift_bridgeObjectRetain();
    unint64_t v69 = 0;
    uint64_t v70 = v11;
    uint64_t v207 = v11;
    uint64_t v71 = v190;
    uint64_t v225 = v68;
LABEL_3:
    uint64_t v72 = v229;
    uint64_t v73 = v227;
    BOOL v74 = v69 >= (unint64_t)v227;
    if ((void (**)(char *, uint64_t, uint64_t))v69 == v227)
    {
LABEL_4:
      uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
      uint64_t v76 = v226;
      (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8)
                                                                                               + 56))(v226, 1, 1, v75);
      unint64_t v240 = (unint64_t)v73;
      goto LABEL_7;
    }
    while (1)
    {
      if (v74) {
        goto LABEL_74;
      }
      uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
      uint64_t v78 = *(void *)(v77 - 8);
      uint64_t v76 = v226;
      sub_1C3F970C4(v219+ ((*(unsigned __int8 *)(v78 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80))+ *(void *)(v78 + 72) * v69, (uint64_t)v226, &qword_1EBBC0798);
      unint64_t v240 = v69 + 1;
      (*(void (**)(void (**)(char *, uint64_t), void, uint64_t, uint64_t))(v78 + 56))(v76, 0, 1, v77);
      uint64_t v70 = v207;
LABEL_7:
      uint64_t v79 = v225;
      sub_1C3F961BC((uint64_t)v76, (uint64_t)v225, &qword_1EBBC07A0);
      uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
      if ((*(unsigned int (**)(void (**)(void), uint64_t, uint64_t))(*(void *)(v80 - 8) + 48))(v79, 1, v80) == 1)break; {
      uint64_t v81 = (char *)v79 + *(int *)(v80 + 48);
      }
      sub_1C3F8F6E0((uint64_t)v79, (uint64_t)v72, (uint64_t (*)(void))type metadata accessor for Replica);
      (*v214)(v71, v81, v40);
      if (*(void (**)(char *, uint64_t, uint64_t))((char *)v72 + *(int *)(v234 + 20)))
      {
        uint64_t v82 = v228;
        sub_1C44966C8();
        uint64_t v83 = &v82[*(int *)(v188 + 36)];
        v210 = *v216;
        while (1)
        {
          uint64_t v86 = v220;
          uint64_t v87 = v217;
          v210(v220, v83, v217);
          sub_1C3F70940(qword_1EBBBBCE8, MEMORY[0x1E4F27D00]);
          uint64_t v88 = v224;
          uint64_t v89 = (uint64_t)v228;
          sub_1C4497818();
          sub_1C3F70940(&qword_1EBBBBCD0, MEMORY[0x1E4F27CC8]);
          char v90 = sub_1C4497178();
          uint64_t v91 = *v211;
          (*v211)((char *)v88, v87);
          v91(v86, v87);
          if (v90)
          {
            sub_1C3F962E0(v89, &qword_1EBBBF188);
            uint64_t v71 = v190;
            ((void (*)(char *, uint64_t))*v239)(v190, v40);
            sub_1C3F9024C((uint64_t)v229, (uint64_t (*)(void))type metadata accessor for Replica);
            uint64_t v61 = v231;
            uint64_t v70 = v207;
            unint64_t v69 = v240;
            uint64_t v56 = v204;
            goto LABEL_3;
          }
          uint64_t v92 = (void (*)(uint64_t *, void))sub_1C44978C8();
          uint64_t v94 = *v93;
          v92(&v245, 0);
          uint64_t v95 = v213;
          (*v208)(v213, v89, v40);
          sub_1C4497828();
          ((void (*)(char *, uint64_t))*v239)(v95, v40);
          swift_beginAccess();
          uint64_t v96 = v218[4];
          if (!*((void *)v96 + 2) || (unint64_t v97 = sub_1C3F8F160((uint64_t)v229), (v98 & 1) == 0))
          {
            uint64_t v247 = 0;
            v248[0] = 0;
            uint64_t v84 = v238;
LABEL_13:
            sub_1C3F962E0((uint64_t)&v247, qword_1EBBBEE40);
            swift_endAccess();
            uint64_t v85 = (uint64_t)v212;
            (*v215)(v212, 1, 1, v84);
            goto LABEL_14;
          }
          sub_1C3FAA63C(*((void *)v96 + 7) + 16 * v97, (uint64_t)&v247);
          uint64_t v84 = v238;
          if (!v247) {
            goto LABEL_13;
          }
          sub_1C3FAA63C((uint64_t)&v247, (uint64_t)&v246);
          sub_1C3F962E0((uint64_t)&v247, qword_1EBBBEE40);
          swift_endAccess();
          unint64_t v99 = *(void *)(v246 + 16);
          if (v99
            && (uint64_t v100 = v246
                     + ((*(unsigned __int8 *)(v193 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v193 + 80)),
                uint64_t v101 = *(void *)(v193 + 72),
                v94 < *(void *)(v100 + v101 * (v99 - 1) + 8)))
          {
            unint64_t v102 = sub_1C3FB42D8(v94, 0, v246);
            if (v102 >= v99) {
              goto LABEL_75;
            }
            uint64_t v103 = v205;
            sub_1C3F970C4(v100 + v102 * v101, v205, qword_1EBBBF0A0);
            uint64_t v104 = 0;
            uint64_t v105 = v198;
          }
          else
          {
            uint64_t v104 = 1;
            uint64_t v105 = v198;
            uint64_t v103 = v205;
          }
          (*v195)(v103, v104, 1, v105);
          uint64_t v106 = v197;
          sub_1C3F970C4(v103, v197, &qword_1EBBBC6B0);
          BOOL v107 = (*v194)(v106, 1, v105) == 1;
          uint64_t v108 = v103;
          uint64_t v109 = (uint64_t)v199;
          if (v107)
          {
            sub_1C3F962E0(v108, &qword_1EBBBC6B0);
            sub_1C3F962E0(v106, &qword_1EBBBC6B0);
            uint64_t v110 = v238;
          }
          else
          {
            uint64_t v111 = v106;
            uint64_t v112 = v196;
            sub_1C3F961BC(v111, (uint64_t)v196, qword_1EBBBF0A0);
            sub_1C3F970C4((uint64_t)v112 + *(int *)(v105 + 36), v109, qword_1EBBBEF70);
            uint64_t v113 = type metadata accessor for RetainedMapRun(0);
            int v114 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 48))(v109, 1, v113);
            if (v114 == 1)
            {
              sub_1C3F962E0(v109, qword_1EBBBEF70);
              uint64_t v115 = (uint64_t)v192;
              uint64_t v110 = v238;
              (*v215)(v192, 1, 1, v238);
            }
            else
            {
              uint64_t v115 = (uint64_t)v192;
              sub_1C3F970C4(v109, (uint64_t)v192, &qword_1EBBBF870);
              sub_1C3F9024C(v109, type metadata accessor for RetainedMapRun);
              uint64_t v110 = v238;
              if ((*v200)(v115, 1, v238) != 1)
              {
                uint64_t v119 = v187;
                sub_1C3F8F6E0(v115, v187, type metadata accessor for FinalizedTimestamp);
                (*v184)(v189, v119, v232);
                uint64_t v120 = v119;
                uint64_t v121 = *(void *)(v119 + *(int *)(v110 + 20));
                uint64_t v122 = v121 + v94;
                if (__OFADD__(v121, v94)) {
                  goto LABEL_77;
                }
                uint64_t v123 = v196;
                uint64_t v124 = *v196;
                sub_1C3F9024C(v120, type metadata accessor for FinalizedTimestamp);
                sub_1C3F962E0((uint64_t)v123, qword_1EBBBF0A0);
                sub_1C3F962E0(v205, &qword_1EBBBC6B0);
                BOOL v125 = __OFSUB__(v122, v124);
                uint64_t v126 = v122 - v124;
                if (v125) {
                  goto LABEL_78;
                }
                uint64_t v127 = v212;
                (*v183)(v212, v189, v232);
                uint64_t v110 = v238;
                *(void *)&v127[*(int *)(v238 + 20)] = v126;
                uint64_t v85 = (uint64_t)v127;
                (*v215)(v127, 0, 1, v110);
                goto LABEL_32;
              }
            }
            sub_1C3F962E0((uint64_t)v196, qword_1EBBBF0A0);
            sub_1C3F962E0(v205, &qword_1EBBBC6B0);
            sub_1C3F962E0(v115, &qword_1EBBBF870);
          }
          uint64_t v85 = (uint64_t)v212;
          (*v215)(v212, 1, 1, v110);
LABEL_32:
          sub_1C3F903E8((uint64_t)&v246);
          if ((*v200)(v85, 1, v110) == 1)
          {
LABEL_14:
            sub_1C3F962E0(v85, &qword_1EBBBF870);
          }
          else
          {
            uint64_t v116 = v85;
            uint64_t v117 = v186;
            sub_1C3F8F6E0(v116, v186, type metadata accessor for FinalizedTimestamp);
            unint64_t v118 = v230;
            if (*(void *)(v117 + *(int *)(v110 + 20)) > (uint64_t)v230) {
              unint64_t v118 = *(uint64_t (***)())(v117 + *(int *)(v110 + 20));
            }
            uint64_t v230 = v118;
            sub_1C3F9024C(v117, type metadata accessor for FinalizedTimestamp);
          }
        }
      }
      ((void (*)(char *, uint64_t))*v239)(v71, v40);
      sub_1C3F9024C((uint64_t)v72, (uint64_t (*)(void))type metadata accessor for Replica);
      uint64_t v73 = v227;
      unint64_t v69 = v240;
      BOOL v74 = v240 >= (unint64_t)v227;
      if ((void (**)(char *, uint64_t, uint64_t))v240 == v227) {
        goto LABEL_4;
      }
    }
    uint64_t v129 = v219;
    swift_bridgeObjectRelease();
    uint64_t v128 = v129;
    LOBYTE(v65) = v185;
  }
  LODWORD(v228) = v65 & 1;
  uint64_t v130 = v218;
  uint64_t v131 = v218 + 2;
  uint64_t v132 = OBJC_IVAR___CRContext_crdtDatabase;
  unsigned int v229 = (void (**)(char *, uint64_t, uint64_t))(v191 + 32);
  uint64_t v239 = v218 + 4;
  char v133 = *(char **)(v128 + 16);
  uint64_t v217 = v248;
  uint64_t v227 = (void (**)(char *, uint64_t, uint64_t))(v70 + 16);
  uint64_t v226 = (void (**)(char *, uint64_t))(v70 + 8);
  uint64_t v225 = (void (**)(void))(v70 + 32);
  uint64_t v224 = (void (**)(uint64_t, uint64_t))(v191 + 8);
  swift_bridgeObjectRetain();
  unint64_t v134 = 0;
  uint64_t v135 = v235;
  uint64_t v238 = v132;
  uint64_t v220 = v133;
  while (1)
  {
    if ((char *)v134 == v133)
    {
      uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v144 - 8) + 56))(v61, 1, 1, v144);
      unint64_t v240 = (unint64_t)v133;
    }
    else
    {
      if (v134 >= (unint64_t)v133)
      {
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
        goto LABEL_76;
      }
      uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
      uint64_t v146 = *(void *)(v145 - 8);
      sub_1C3F970C4(v219+ ((*(unsigned __int8 *)(v146 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v146 + 80))+ *(void *)(v146 + 72) * v134, (uint64_t)v61, &qword_1EBBC0798);
      unint64_t v240 = v134 + 1;
      (*(void (**)(char *, void, uint64_t, uint64_t))(v146 + 56))(v61, 0, 1, v145);
      uint64_t v135 = v235;
    }
    uint64_t v147 = v233;
    sub_1C3F961BC((uint64_t)v61, v233, &qword_1EBBC07A0);
    uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0798);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v148 - 8) + 48))(v147, 1, v148) == 1) {
      break;
    }
    uint64_t v149 = v147 + *(int *)(v148 + 48);
    sub_1C3F8F6E0(v147, (uint64_t)v56, (uint64_t (*)(void))type metadata accessor for Replica);
    (*v229)(v241, v149, v40);
    swift_beginAccess();
    uint64_t v150 = *v239;
    if (!*((void *)*v239 + 2) || (unint64_t v151 = sub_1C3F8F160((uint64_t)v56), (v152 & 1) == 0))
    {
      uint64_t v247 = 0;
      v248[0] = 0;
LABEL_63:
      sub_1C3F962E0((uint64_t)&v247, qword_1EBBBEE40);
      swift_endAccess();
      goto LABEL_64;
    }
    sub_1C3FAA63C(*((void *)v150 + 7) + 16 * v151, (uint64_t)&v247);
    if (!v247) {
      goto LABEL_63;
    }
    uint64_t Strong = swift_weakLoadStrong();
    sub_1C3F962E0((uint64_t)&v247, qword_1EBBBEE40);
    swift_endAccess();
    if (Strong)
    {
      uint64_t v154 = Strong + OBJC_IVAR____TtC9Coherence17CRReplicaDatabase_replica;
      swift_beginAccess();
      uint64_t v155 = v154;
      uint64_t v156 = v203;
      sub_1C3F970C4(v155, v203, &qword_1EBBC0778);
      uint64_t v157 = type metadata accessor for CRReplicaDatabase.Replica(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v157 - 8) + 48))(v156, 1, v157) == 1) {
        goto LABEL_80;
      }
      uint64_t v158 = v202;
      uint64_t v159 = v232;
      (*v227)(v202, v156, v232);
      sub_1C3F9024C(v156, type metadata accessor for CRReplicaDatabase.Replica);
      sub_1C4496658();
      sub_1C4496658();
      sub_1C4496648();
      (*v226)(v158, v159);
      uint64_t v160 = (uint64_t)v206;
      (*v225)();
      *(void *)(v160 + *(int *)(v234 + 20)) = 0;
      uint64_t v161 = (uint64_t)v56;
      uint64_t v140 = (uint64_t)v241;
      uint64_t v130 = v218;
      sub_1C3FB1680(v161, (uint64_t)v241, v160, Strong, &v242, v230, (int)v228, v218, &v243, &v244);
      uint64_t v135 = v235;
      uint64_t v132 = v238;
      if (Strong == *(void *)(v235 + v238))
      {
        swift_release();
        uint64_t v142 = v160;
      }
      else
      {
        sub_1C3F5F394();
        if (qword_1EA39B8A8 != -1) {
          swift_once();
        }
        uint64_t v162 = sub_1C4496C58();
        __swift_project_value_buffer(v162, (uint64_t)qword_1EA39C1F0);
        uint64_t v163 = sub_1C4496C38();
        os_log_type_t v164 = sub_1C44979E8();
        if (os_log_type_enabled(v163, v164))
        {
          uint64_t v165 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v165 = 0;
          _os_log_impl(&dword_1C3F4F000, v163, v164, "Using multiple contexts with the same CRDT. This will be inefficient.", v165, 2u);
          v166 = v165;
          uint64_t v135 = v235;
          MEMORY[0x1C8782060](v166, -1, -1);
        }
        swift_release();

        uint64_t v142 = (uint64_t)v206;
        uint64_t v130 = v218;
      }
      uint64_t v61 = v231;
      uint64_t v143 = (uint64_t)v204;
      goto LABEL_45;
    }
LABEL_64:
    uint64_t v167 = v40;
    char v168 = v130;
    uint64_t v169 = *(void *)(v135 + v132) + OBJC_IVAR____TtC9Coherence17CRReplicaDatabase_replica;
    swift_beginAccess();
    uint64_t v170 = v169;
    uint64_t v171 = v223;
    sub_1C3F970C4(v170, v223, &qword_1EBBC0778);
    uint64_t v172 = type metadata accessor for CRReplicaDatabase.Replica(0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v172 - 8) + 48))(v171, 1, v172) == 1) {
      goto LABEL_79;
    }
    uint64_t v173 = v222;
    uint64_t v174 = v232;
    (*v227)(v222, v171, v232);
    sub_1C3F9024C(v171, type metadata accessor for CRReplicaDatabase.Replica);
    sub_1C4496658();
    sub_1C4496658();
    unint64_t v175 = v221;
    sub_1C4496648();
    (*v226)(v173, v174);
    uint64_t v176 = v236;
    ((void (*)(uint64_t, char *, uint64_t))*v225)(v236, v175, v174);
    *(void *)(v176 + *(int *)(v234 + 20)) = 0;
    uint64_t v177 = v237;
    sub_1C3F8EF24((uint64_t)v56, v237, (uint64_t (*)(void))type metadata accessor for Replica);
    swift_beginAccess();
    uint64_t v178 = sub_1C3FAA6E8(&v245, v177);
    if (*v179)
    {
      uint64_t v135 = v235;
      uint64_t v136 = v238;
      swift_weakAssign();
      ((void (*)(uint64_t *, void))v178)(&v245, 0);
      uint64_t v61 = v231;
      uint64_t v130 = v168;
    }
    else
    {
      ((void (*)(uint64_t *, void))v178)(&v245, 0);
      uint64_t v135 = v235;
      uint64_t v61 = v231;
      uint64_t v130 = v168;
      uint64_t v136 = v238;
    }
    swift_endAccess();
    sub_1C3F9024C(v237, (uint64_t (*)(void))type metadata accessor for Replica);
    uint64_t v137 = *(void *)(v135 + v136);
    swift_retain();
    unint64_t v138 = v56;
    uint64_t v139 = (uint64_t)v56;
    uint64_t v140 = (uint64_t)v241;
    uint64_t v141 = v236;
    sub_1C3FB1680(v139, (uint64_t)v241, v236, v137, &v242, v230, (int)v228, v130, &v243, &v244);
    swift_release();
    uint64_t v142 = v141;
    uint64_t v40 = v167;
    uint64_t v143 = (uint64_t)v138;
    uint64_t v132 = v238;
    char v133 = v220;
LABEL_45:
    sub_1C3F9024C(v142, (uint64_t (*)(void))type metadata accessor for Replica);
    (*v224)(v140, v40);
    sub_1C3F9024C(v143, (uint64_t (*)(void))type metadata accessor for Replica);
    uint64_t v56 = (char *)v143;
    unint64_t v134 = v240;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (v243)
  {
    swift_beginAccess();
    if (!__OFADD__(*v131, 1))
    {
      char *v131 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)*v131 + 1);
      goto LABEL_72;
    }
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
  }
LABEL_72:
  swift_beginAccess();
  unint64_t v180 = *v131;
  swift_beginAccess();
  swift_beginAccess();
  return v180;
}

uint64_t sub_1C40215D0@<X0>(uint64_t a1@<X1>, uint64_t (**a2)()@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  sub_1C401F788(a1, a2, 0, a3);
  char v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = sub_1C401F788(a4, 0, 1, a3);
  char v15 = v14;
  uint64_t v17 = v16;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = v12;
  sub_1C4021724(v17, (uint64_t)sub_1C4021C40, 0, isUniquelyReferenced_nonNull_native, &v22);
  if (v5)
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    char v19 = v10 | v15;
    uint64_t v20 = v22;
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)a5 = v13;
    *(unsigned char *)(a5 + 8) = v19 & 1;
    *(void *)(a5 + 16) = v20;
  }
  return result;
}

uint64_t sub_1C40216C0()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRGlobalContext()
{
  return self;
}

uint64_t sub_1C4021724(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  v48[0] = type metadata accessor for Replica();
  uint64_t v10 = *(void *)(v48[0] - 8);
  MEMORY[0x1F4188790](v48[0]);
  uint64_t v12 = (char *)v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBBBB0);
  MEMORY[0x1F4188790](v13 - 8);
  char v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v17 = ~v16;
  uint64_t v18 = *(void *)(a1 + 64);
  uint64_t v19 = -v16;
  uint64_t v50 = a1;
  uint64_t v51 = a1 + 64;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  uint64_t v52 = v17;
  uint64_t v53 = 0;
  uint64_t v54 = v20 & v18;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  v48[1] = a1;
  swift_bridgeObjectRetain();
  void v48[2] = a3;
  swift_retain();
  sub_1C4121F38((uint64_t)v15);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBC0FB0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 48))(v15, 1, v21) == 1)
  {
LABEL_22:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C3F7FCE8();
    return swift_release();
  }
  uint64_t v22 = (uint64_t)&v15[*(int *)(v21 + 48)];
  sub_1C3F8F6E0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Replica);
  sub_1C3FAAC94(v22, (uint64_t)v49);
  uint64_t v23 = *a5;
  unint64_t v25 = sub_1C3F8F160((uint64_t)v12);
  uint64_t v26 = *(void *)(v23 + 16);
  BOOL v27 = (v24 & 1) == 0;
  uint64_t v28 = v26 + v27;
  if (__OFADD__(v26, v27)) {
    goto LABEL_23;
  }
  LOBYTE(v22) = v24;
  if (*(void *)(v23 + 24) >= v28)
  {
    if ((a4 & 1) == 0) {
      goto LABEL_25;
    }
    if ((v24 & 1) == 0)
    {
      do
      {
LABEL_12:
        uint64_t v22 = *a5;
        *(void *)(*a5 + 8 * (v25 >> 6) + 64) |= 1 << v25;
        sub_1C3F8F6E0((uint64_t)v12, *(void *)(v22 + 48) + *(void *)(v10 + 72) * v25, (uint64_t (*)(void))type metadata accessor for Replica);
        sub_1C3FAAC94((uint64_t)v49, *(void *)(v22 + 56) + 16 * v25);
        uint64_t v31 = *(void *)(v22 + 16);
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (!v32)
        {
          *(void *)(v22 + 16) = v33;
          sub_1C4121F38((uint64_t)v15);
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBC0FB0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v15, 1, v34) == 1) {
            goto LABEL_22;
          }
          uint64_t v22 = (uint64_t)qword_1EBBC0FB0;
          while (1)
          {
            uint64_t v35 = (uint64_t)&v15[*(int *)(v34 + 48)];
            sub_1C3F8F6E0((uint64_t)v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Replica);
            sub_1C3FAAC94(v35, (uint64_t)v49);
            uint64_t v36 = *a5;
            unint64_t v38 = sub_1C3F8F160((uint64_t)v12);
            uint64_t v39 = *(void *)(v36 + 16);
            BOOL v40 = (v37 & 1) == 0;
            uint64_t v41 = v39 + v40;
            if (__OFADD__(v39, v40)) {
              break;
            }
            unint64_t v25 = v37;
            if (*(void *)(v36 + 24) < v41)
            {
              sub_1C3FB7274(v41, 1);
              unint64_t v42 = sub_1C3F8F160((uint64_t)v12);
              if ((v25 & 1) != (v43 & 1)) {
                goto LABEL_27;
              }
              unint64_t v38 = v42;
            }
            if (v25) {
              goto LABEL_26;
            }
            uint64_t v44 = (void *)*a5;
            *(void *)(*a5 + 8 * (v38 >> 6) + 64) |= 1 << v38;
            sub_1C3F8F6E0((uint64_t)v12, v44[6] + *(void *)(v10 + 72) * v38, (uint64_t (*)(void))type metadata accessor for Replica);
            sub_1C3FAAC94((uint64_t)v49, v44[7] + 16 * v38);
            uint64_t v45 = v44[2];
            BOOL v32 = __OFADD__(v45, 1);
            uint64_t v46 = v45 + 1;
            if (v32) {
              goto LABEL_24;
            }
            v44[2] = v46;
            sub_1C4121F38((uint64_t)v15);
            uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBC0FB0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v15, 1, v34) == 1) {
              goto LABEL_22;
            }
          }
LABEL_23:
          __break(1u);
        }
LABEL_24:
        __break(1u);
LABEL_25:
        sub_1C4067C04();
      }
      while ((v22 & 1) == 0);
    }
    goto LABEL_26;
  }
  sub_1C3FB7274(v28, a4 & 1);
  unint64_t v29 = sub_1C3F8F160((uint64_t)v12);
  if ((v22 & 1) == (v30 & 1))
  {
    unint64_t v25 = v29;
    if ((v22 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_26:
    sub_1C4497F58();
    __break(1u);
  }
LABEL_27:
  uint64_t result = sub_1C4498558();
  __break(1u);
  return result;
}

uint64_t sub_1C4021C40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBB2A8) + 48);
  uint64_t v5 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EBBC0FB0) + 48);
  sub_1C3F8EF24(a1, a2, (uint64_t (*)(void))type metadata accessor for Replica);
  return sub_1C3FAA63C(v4, v5);
}

uint64_t sub_1C4021CD0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = (v4 + v2 + v3) & ~v2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = v0 + v3;
  uint64_t v7 = type metadata accessor for Replica();
  uint64_t v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48);
  if (!v8(v6, 1, v7))
  {
    uint64_t v9 = sub_1C4496678();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
  }
  if (!v8(v0 + v5, 1, v7))
  {
    uint64_t v10 = sub_1C4496678();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v0 + v5, v10);
  }
  return MEMORY[0x1F4186498](v0, v5 + v4, v2 | 7);
}

uint64_t sub_1C4021E84()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 56) & ~v2;
  uint64_t v4 = v0[2];
  uint64_t v5 = v0[3];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  uint64_t v9 = (uint64_t)v0 + ((*(void *)(v1 + 64) + v2 + v3) & ~v2);
  return sub_1C401C29C(v4, v5, v6, v7, v8, (uint64_t)v0 + v3, v9);
}

uint64_t CRDataStoreBundleReadFileVersionPolicy.hash(into:)()
{
  return sub_1C4498608();
}

BOOL static CRDataStoreBundleReadFileVersionPolicy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t CRDataStoreBundleReadFileVersionPolicy.hashValue.getter()
{
  return sub_1C4498628();
}

uint64_t CRDataStoreBundle.publisher.getter()
{
  return sub_1C446A530();
}

uint64_t CRDataStoreBundle.__allocating_init(_:sync:at:allowedEncodings:allowedAppFormats:writableAppFormats:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = sub_1C4027E1C(a1, a2, a3, a4, a5, a6);
  type metadata accessor for Capsule();
  uint64_t v9 = sub_1C4497B38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a2, v9);

  return v8;
}

uint64_t CRDataStoreBundle.init(_:sync:at:allowedEncodings:allowedAppFormats:writableAppFormats:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = sub_1C4027C1C(a1, a2, a3, a4, a5, a6);
  type metadata accessor for Capsule();
  uint64_t v9 = sub_1C4497B38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(a2, v9);

  return v8;
}

uint64_t CRDataStoreBundle.__allocating_init(_:sync:at:allowedEncodings:allowedAppFormats:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_1C4496498();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, v10);
  swift_allocObject();
  uint64_t v14 = sub_1C4027C1C(a1, a2, (uint64_t)v13, a4, a5, 0);

  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a3, v10);
  type metadata accessor for Capsule();
  uint64_t v15 = sub_1C4497B38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a2, v15);
  return v14;
}

uint64_t CRDataStoreBundle.__allocating_init(_:sync:at:version:fileFormatVersion:)(void *a1, uint64_t a2, uint64_t a3, unsigned char *a4, int a5)
{
  uint64_t v7 = sub_1C4027E98(a1, a2, a3, a4, a5 & 0x1FFFF);
  type metadata accessor for Capsule();
  uint64_t v8 = sub_1C4497B38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a2, v8);

  return v7;
}

uint64_t CRDataStoreBundle.__allocating_init(_:sync:at:fileFormatVersion:)(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8 = sub_1C4496498();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  char v16 = 1;
  uint64_t v12 = sub_1C4027E98(a1, a2, (uint64_t)v11, &v16, a4 & 0x1FFFF);

  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a3, v8);
  type metadata accessor for Capsule();
  uint64_t v13 = sub_1C4497B38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a2, v13);
  return v12;
}

uint64_t CRDataStoreBundle.__allocating_init(sync:at:fileFormatVersion:)(uint64_t a1, uint64_t a2, int a3)
{
  int v25 = a3;
  uint64_t v23 = a2;
  uint64_t v24 = sub_1C4496498();
  uint64_t v5 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v3;
  uint64_t v8 = type metadata accessor for Capsule();
  uint64_t v21 = sub_1C4497B38();
  uint64_t v9 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  id v12 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v26);
  sub_1C3F962E0((uint64_t)v26, qword_1EBBC0C90);
  uint64_t v13 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v8);
  uint64_t v14 = (uint64_t)v7;
  uint64_t v15 = v7;
  uint64_t v17 = v23;
  uint64_t v16 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v15, v23, v24);
  LOBYTE(v26[0]) = 1;
  uint64_t v18 = sub_1C4027E98(v12, (uint64_t)v11, v14, v26, v25 & 0x1FFFF);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v21);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v17, v16);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a1, v8);
  return v18;
}

uint64_t static CRDataStoreBundle.read(_:url:fileFormatVersion:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned __int8 v11 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA228);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C449B490;
  if ((a3 & 0x10000) != 0) {
    __int16 v9 = 0;
  }
  else {
    __int16 v9 = a3;
  }
  *(_WORD *)(v8 + 32) = v9;
  static CRDataStoreBundle.read(_:url:fileVersionPolicy:allowedEncodings:allowedAppFormats:)(a1, a2, &v11, &unk_1F1F9A610, v8, a4);
  return swift_bridgeObjectRelease();
}

void static CRDataStoreBundle.read(_:url:fileVersionPolicy:allowedEncodings:allowedAppFormats:)(void *a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v62 = a5;
  id v63 = a1;
  uint64_t v46 = a6;
  v65[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v10 = *(void *)(v6 + 88);
  uint64_t v60 = *(void *)(v6 + 80);
  uint64_t v61 = v10;
  uint64_t v11 = type metadata accessor for Capsule();
  uint64_t v12 = sub_1C4497B38();
  uint64_t v49 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v51 = (char *)&v45 - v13;
  uint64_t v56 = sub_1C4496498();
  uint64_t v14 = *(void *)(v56 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v56);
  uint64_t v54 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v58 = *a3;
  uint64_t v16 = &unk_1F1F9A638;
  if (a4) {
    uint64_t v16 = a4;
  }
  uint64_t v57 = v16;
  v65[0] = 0;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = 0;
  uint64_t v53 = (void **)(v17 + 16);
  id v18 = objc_allocWithZone(MEMORY[0x1E4F28CA0]);
  swift_bridgeObjectRetain();
  id v19 = objc_msgSend(v18, sel_init);
  id v55 = v19;
  uint64_t v50 = v12;
  uint64_t v20 = swift_allocBox();
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
  uint64_t v47 = v22;
  uint64_t v52 = v11;
  v21(v22, 1, 1, v11);
  uint64_t v59 = sub_1C4496418();
  uint64_t v23 = v56;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v56);
  unint64_t v24 = (*(unsigned __int8 *)(v14 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v61;
  *(void *)(v25 + 16) = v60;
  *(void *)(v25 + 24) = v26;
  id v27 = v63;
  *(void *)(v25 + 32) = v17;
  *(void *)(v25 + 40) = v27;
  uint64_t v28 = v62;
  *(void *)(v25 + 48) = v57;
  *(void *)(v25 + 56) = v28;
  *(void *)(v25 + 64) = v19;
  *(void *)(v25 + 72) = v20;
  *(unsigned char *)(v25 + 80) = v58;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v25 + v24, v54, v23);
  *(void *)(v25 + ((v15 + v24 + 7) & 0xFFFFFFFFFFFFFFF8)) = v65;
  unint64_t v29 = (void *)swift_allocObject();
  v29[2] = sub_1C4028240;
  v29[3] = v25;
  aBlock[4] = sub_1C402830C;
  aBlock[5] = v29;
  aBlock[0] = (id)MEMORY[0x1E4F143A8];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1C4023C54;
  aBlock[3] = &block_descriptor_3;
  char v30 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  id v31 = v63;
  id v32 = v55;
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  uint64_t v33 = (void *)v59;
  objc_msgSend(v32, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v59, 0, aBlock, v30);
  _Block_release(v30);

  id v34 = aBlock[0];
  LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v30) {
    __break(1u);
  }
  if (v34) {
    goto LABEL_9;
  }
  if (v65[0])
  {
    v65[0];
LABEL_9:
    id v38 = v34;
    swift_willThrow();
    swift_release();

    swift_release();
    id v39 = v65[0];
    swift_release();

    return;
  }
  uint64_t v35 = v53;
  swift_beginAccess();
  uint64_t v36 = *v35;
  if (v36)
  {
    id v37 = v36;
    goto LABEL_9;
  }
  uint64_t v40 = v47;
  swift_beginAccess();
  uint64_t v41 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v51, v40, v50);
  uint64_t v42 = v48;
  uint64_t v43 = v52;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v41, 1, v52) == 1)
  {
    __break(1u);
  }
  else
  {

    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v46, v41, v43);
    swift_release();
    swift_release();
    id v44 = v65[0];
    swift_release();
  }
}

void sub_1C4022DF4(unint64_t a1, uint64_t a2, void *a3, char *a4, uint64_t a5, void *a6, uint64_t a7, char a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  id aBlock[6] = *MEMORY[0x1E4F143B8];
  id v17 = objc_msgSend(self, sel_defaultManager);
  sub_1C4496488();
  id v18 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  unsigned int v19 = objc_msgSend(v17, sel_fileExistsAtPath_, v18);

  if (!v19)
  {
    sub_1C3FE3FF0();
    uint64_t v24 = swift_allocError();
    *(_OWORD *)uint64_t v25 = xmmword_1C449BBC0;
    *(unsigned char *)(v25 + 16) = 0;
    swift_beginAccess();
    uint64_t v26 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = v24;

    return;
  }
  uint64_t v20 = self;
  uint64_t v21 = (void *)sub_1C4496418();
  id v22 = objc_msgSend(v20, sel_otherVersionsOfItemAtURL_, v21);

  if (v22)
  {
    sub_1C4028AC0();
    unint64_t v23 = sub_1C44973F8();
  }
  else
  {
    unint64_t v23 = MEMORY[0x1E4FBC860];
  }
  if (a8 == 2)
  {
    if (v23 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1C4497FA8();
      swift_bridgeObjectRelease();
      if (v35)
      {
LABEL_9:
        uint64_t v36 = (void *)sub_1C4496418();
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = a11;
        *(void *)(v27 + 24) = a12;
        *(void *)(v27 + 32) = a3;
        *(void *)(v27 + 40) = a4;
        *(void *)(v27 + 48) = a5;
        *(void *)(v27 + 56) = a6;
        *(void *)(v27 + 64) = a7;
        *(void *)(v27 + 72) = v23;
        *(unsigned char *)(v27 + 80) = 2;
        *(void *)(v27 + 88) = a2;
        *(unsigned char *)(v27 + 96) = 0;
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = sub_1C4028A68;
        *(void *)(v28 + 24) = v27;
        aBlock[4] = sub_1C4028B20;
        aBlock[5] = v28;
        aBlock[0] = MEMORY[0x1E4F143A8];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1C4023C54;
        aBlock[3] = &block_descriptor_49;
        unint64_t v29 = _Block_copy(aBlock);
        swift_bridgeObjectRetain();
        id v30 = a6;
        swift_retain();
        swift_retain();
        swift_retain();
        id v31 = a3;
        swift_bridgeObjectRetain();
        swift_release();
        aBlock[0] = *a10;
        objc_msgSend(v30, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v36, 0, aBlock, v29);
        _Block_release(v29);

        id v32 = (void *)aBlock[0];
        uint64_t v33 = (void *)*a10;
        *a10 = aBlock[0];
        id v34 = v32;

        LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        swift_release();
        if (v33) {
          __break(1u);
        }
        return;
      }
    }
    else if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_9;
    }
  }
  sub_1C4023224(a1, 1, a3, a4, a5, (uint64_t)a6, a7, v23, a8, a2, a11, a12);
  swift_bridgeObjectRelease();
}

void sub_1C4023224(unint64_t a1, int a2, void *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, char a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  unint64_t v103 = a8;
  id v104 = a3;
  uint64_t v107 = a6;
  uint64_t v105 = a4;
  LODWORD(v106) = a2;
  v109[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v91 = *(void *)(a12 + 16);
  uint64_t v98 = type metadata accessor for Capsule();
  uint64_t v94 = sub_1C4497B38();
  uint64_t v95 = *(void (***)(uint64_t, char *, uint64_t))(v94 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v94);
  uint64_t v102 = (uint64_t)v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v90 = (uint64_t)v84 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  unint64_t v97 = (char *)v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v84 - v20;
  uint64_t v22 = sub_1C4496498();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v96 = (char *)v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v93 = (char *)v84 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v101 = (char *)v84 - v29;
  MEMORY[0x1F4188790](v28);
  id v31 = (char *)v84 - v30;
  uint64_t v99 = swift_projectBox();
  uint64_t v108 = (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for CRDataStoreBundleNonCoordinated();
  id v32 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
  v32(v31, a1, v22);
  unint64_t v100 = a1;
  v32(v21, a1, v22);
  uint64_t v89 = v23;
  uint64_t v33 = v23 + 56;
  id v34 = *(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56);
  v34(v21, 0, 1, v22);
  uint64_t v92 = a11;
  uint64_t v35 = type metadata accessor for CRDataStoreBundleNonCoordinated.ModelStorage();
  uint64_t v36 = sub_1C421666C();
  uint64_t v37 = a5;
  swift_bridgeObjectRetain();
  id v38 = (char *)v104;
  id v39 = v105;
  swift_bridgeObjectRetain();
  uint64_t v40 = (void *)sub_1C42166A4(v38, v31, (uint64_t)v21, (int)v106, v36, 0, 0, (uint64_t)v39, v37, 0);
  uint64_t v87 = v38;
  v84[1] = v35;
  v84[2] = v33;
  uint64_t v85 = (void (*)(uint64_t, void, uint64_t, uint64_t))v34;
  uint64_t v41 = v95;
  uint64_t v42 = v94;
  uint64_t v86 = v37;
  uint64_t v88 = v22;
  sub_1C4216750();
  uint64_t v44 = v90;
  id v104 = v40;
  sub_1C42167A0(v90);
  uint64_t v45 = v99;
  swift_beginAccess();
  uint64_t v46 = v41 + 5;
  uint64_t v47 = (uint64_t)v41[5];
  ((void (*)(uint64_t, uint64_t, uint64_t))v47)(v45, v44, v42);
  unint64_t v48 = v103;
  if (v103 >> 62)
  {
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1C4497FA8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v49 = *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v50 = v88;
  uint64_t v51 = (uint64_t)v97;
  uint64_t v52 = v96;
  if (!v49) {
    goto LABEL_14;
  }
  uint64_t v106 = (char *)v49;
  if (a9 != 1)
  {
    if (a9 == 2)
    {
      uint64_t v108 = (void (*)(uint64_t, uint64_t, uint64_t))v47;
      uint64_t v95 = v46;
      unint64_t v53 = v48 & 0xC000000000000001;
      uint64_t v54 = (void (**)(uint64_t, uint64_t))(v89 + 8);
      swift_bridgeObjectRetain();
      uint64_t v55 = 4;
      uint64_t v47 = (uint64_t)v101;
      do
      {
        uint64_t v46 = (void (**)(uint64_t, char *, uint64_t))(v55 - 4);
        if (v53) {
          id v56 = (id)MEMORY[0x1C8780A10](v55 - 4, v48);
        }
        else {
          id v56 = *(id *)(v48 + 8 * v55);
        }
        uint64_t v57 = v56;
        id v39 = (char *)(v55 - 3);
        if (__OFADD__(v46, 1))
        {
          __break(1u);
          goto LABEL_26;
        }
        id v58 = objc_msgSend(v56, sel_URL);
        sub_1C4496478();

        sub_1C4216878();
        (*v54)(v47, v50);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        ++v55;
        unint64_t v48 = v103;
      }
      while (v39 != v106);
      swift_bridgeObjectRelease();
      uint64_t v59 = self;
      uint64_t v60 = (void *)sub_1C4496418();
      v109[0] = 0;
      unsigned int v61 = objc_msgSend(v59, sel_removeOtherVersionsOfItemAtURL_error_, v60, v109);

      id v62 = v109[0];
      uint64_t v63 = v90;
      if (v61)
      {
        sub_1C42167A0(v90);
        id v64 = v62;
        swift_release();
        uint64_t v65 = v99;
        swift_beginAccess();
        v108(v65, v63, v94);
      }
      else
      {
        id v82 = v109[0];
        uint64_t v83 = sub_1C44963A8();

        swift_willThrow();
        swift_release();
        swift_beginAccess();
        uint64_t v43 = *(void **)(a10 + 16);
        *(void *)(a10 + 16) = v83;
      }
      return;
    }
LABEL_14:
    swift_release();
    return;
  }
  unint64_t v100 = v48 & 0xC000000000000001;
  uint64_t v95 = (void (**)(uint64_t, char *, uint64_t))(v89 + 32);
  uint64_t v94 = v98 - 8;
  swift_bridgeObjectRetain();
  uint64_t v47 = 4;
  while (1)
  {
    uint64_t v46 = (void (**)(uint64_t, char *, uint64_t))(v47 - 4);
    if (v100) {
      id v66 = (id)MEMORY[0x1C8780A10](v47 - 4, v48);
    }
    else {
      id v66 = *(id *)(v48 + 8 * v47);
    }
    uint64_t v67 = v66;
    uint64_t v68 = v102;
    if (__OFADD__(v46, 1))
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v101 = (char *)(v47 - 3);
    uint64_t v105 = v87;
    id v69 = objc_msgSend(v67, sel_URL);
    uint64_t v70 = v93;
    sub_1C4496478();

    uint64_t v71 = v67;
    id v72 = objc_msgSend(v67, sel_URL);
    sub_1C4496478();

    uint64_t v73 = v88;
    (*v95)(v51, v52, v88);
    v85(v51, 0, 1, v73);
    uint64_t v74 = sub_1C421666C();
    swift_bridgeObjectRetain();
    uint64_t v75 = swift_bridgeObjectRetain();
    sub_1C42166A4(v105, v70, v51, 1, v74, 0, 1, (uint64_t)v39, v75, 0);
    sub_1C4216750();
    uint64_t v76 = v39;
    sub_1C42167A0(v68);
    uint64_t v77 = v98;
    uint64_t v78 = *(void *)(v98 - 8);
    uint64_t v79 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48);
    if (v79(v68, 1, v98) == 1) {
      break;
    }
    uint64_t v80 = v99;
    swift_beginAccess();
    if (v79(v80, 1, v77) == 1) {
      goto LABEL_29;
    }
    uint64_t v81 = v102;
    Capsule.merge<A>(_:)(v102, v77);
    swift_endAccess();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v81, v77);
    ++v47;
    id v39 = v76;
    uint64_t v52 = v96;
    uint64_t v51 = (uint64_t)v97;
    unint64_t v48 = v103;
    if (v101 == v106)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
}

uint64_t sub_1C4023C2C(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1C4023C54(uint64_t a1)
{
  uint64_t v2 = sub_1C4496498();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  sub_1C4496478();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void static CRDataStoreBundle.write(_:model:url:allowedEncodings:allowedAppFormats:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v44 = a2;
  v48[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v10 = *(void *)(v5 + 80);
  uint64_t v45 = *(void *)(v5 + 88);
  uint64_t v46 = v10;
  uint64_t v11 = type metadata accessor for Capsule();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = *(void *)(a4 + 16);
  if (!v16)
  {
LABEL_5:
    uint64_t v37 = v6;
    v48[0] = 0;
    id v41 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_init);
    uint64_t v43 = sub_1C4496418();
    uint64_t v42 = sub_1C4496418();
    uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
    uint64_t v39 = v11;
    v19(v15, v44, v11);
    unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    unint64_t v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v44 = a4;
    unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
    id v40 = a1;
    unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
    id v38 = v15;
    uint64_t v24 = (char *)swift_allocObject();
    uint64_t v25 = v45;
    *((void *)v24 + 2) = v46;
    *((void *)v24 + 3) = v25;
    *((void *)v24 + 4) = v48;
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v24[v20], v38, v39);
    *(void *)&v24[v21] = a1;
    *(void *)&v24[v22] = v44;
    *(void *)&v24[v23] = a5;
    uint64_t v26 = v41;
    *(void *)&v24[(v23 + 15) & 0xFFFFFFFFFFFFFFF8] = v41;
    uint64_t v27 = (void *)swift_allocObject();
    v27[2] = sub_1C40284EC;
    v27[3] = v24;
    aBlock[4] = sub_1C40285E4;
    aBlock[5] = v27;
    aBlock[0] = (id)MEMORY[0x1E4F143A8];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1C4024894;
    aBlock[3] = &block_descriptor_16;
    uint64_t v28 = _Block_copy(aBlock);
    id v29 = v40;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v30 = v26;
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    id v32 = (void *)v42;
    id v31 = (void *)v43;
    objc_msgSend(v30, sel_coordinateReadingItemAtURL_options_writingItemAtURL_options_error_byAccessor_, v43, 0, v42, 0, aBlock, v28);
    _Block_release(v28);

    id v33 = aBlock[0];
    LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v31) {
      __break(1u);
    }
    if (!v33)
    {
      if (!v48[0])
      {

        swift_release();
        return;
      }
      id v34 = v48[0];
    }
    id v35 = v33;
    swift_willThrow();

    swift_release();
    return;
  }
  uint64_t v17 = (unsigned __int8 *)(a4 + 32);
  while (*v17++)
  {
    if (!--v16) {
      goto LABEL_5;
    }
  }
  sub_1C3FE3FF0();
  swift_allocError();
  *(void *)uint64_t v36 = 0xD00000000000002ALL;
  *(void *)(v36 + 8) = 0x80000001C44B18A0;
  *(unsigned char *)(v36 + 16) = 0;
  swift_willThrow();
}

void sub_1C4024144(uint64_t a1, uint64_t a2, void **a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, char *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v78 = a7;
  uint64_t v79 = a6;
  id v77 = a5;
  uint64_t v74 = a4;
  id v82 = a3;
  void v84[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v76 = (char *)&v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = a9;
  uint64_t v81 = a10;
  uint64_t v70 = type metadata accessor for Capsule();
  uint64_t v14 = sub_1C4497B38();
  uint64_t v72 = *(void *)(v14 - 8);
  uint64_t v73 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v71 = (char *)&v66 - v15;
  uint64_t v16 = sub_1C4496498();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v75 = (char *)&v66 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)&v66 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v66 - v23;
  unsigned __int8 v83 = 0;
  uint64_t v25 = self;
  id v26 = objc_msgSend(v25, sel_defaultManager);
  sub_1C4496488();
  uint64_t v27 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  unsigned __int8 v28 = objc_msgSend(v26, sel_fileExistsAtPath_isDirectory_, v27, &v83);

  uint64_t v29 = a1;
  id v30 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  v30(v24, a1, v16);
  if (v28)
  {
    id v69 = a8;
    int v31 = v83;
    v30(v22, (uint64_t)v24, v16);
    if (v31 == 1)
    {
      uint64_t v68 = v30;
      uint64_t v67 = a1;
      id v32 = objc_msgSend(v25, sel_defaultManager);
      sub_1C4496488();
      id v33 = (void *)sub_1C4497188();
      swift_bridgeObjectRelease();
      v84[0] = 0;
      id v34 = objc_msgSend(v32, sel_contentsOfDirectoryAtPath_error_, v33, v84);

      id v35 = v84[0];
      uint64_t v36 = (void (**)(char *, uint64_t))(v17 + 8);
      if (v34)
      {
        uint64_t v37 = sub_1C44973F8();
        id v38 = v35;

        uint64_t v39 = *(void *)(v37 + 16);
        swift_bridgeObjectRelease();
        id v40 = *v36;
        (*v36)(v22, v16);
        v40(v24, v16);
        a8 = v69;
        uint64_t v29 = v67;
        if (!v39) {
          goto LABEL_7;
        }
      }
      else
      {
        id v61 = v84[0];
        id v62 = (void *)sub_1C44963A8();

        swift_willThrow();
        uint64_t v63 = *v36;
        (*v36)(v22, v16);
        v63(v24, v16);
      }
    }
    else
    {
      uint64_t v60 = *(void (**)(char *, uint64_t))(v17 + 8);
      v60(v22, v16);
      v60(v24, v16);
    }
    sub_1C3FE3FF0();
    uint64_t v59 = swift_allocError();
    *(void *)uint64_t v64 = 0xD000000000000014;
    *(void *)(v64 + 8) = 0x80000001C44B19B0;
    *(unsigned char *)(v64 + 16) = 0;
    goto LABEL_13;
  }
  uint64_t v68 = v30;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
LABEL_7:
  id v41 = objc_msgSend(v25, sel_defaultManager);
  uint64_t v42 = (void *)sub_1C4496418();
  v84[0] = 0;
  unsigned int v43 = objc_msgSend(v41, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v42, 1, 0, v84);

  id v44 = v84[0];
  if (v43)
  {
    id v69 = a8;
    type metadata accessor for CRDataStoreBundleNonCoordinated.ModelStorage();
    uint64_t v45 = sub_1C421666C();
    uint64_t v46 = v70;
    uint64_t v47 = v71;
    uint64_t v48 = *(void *)(v70 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v71, v74, v70);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))(v47, 0, 1, v46);
    uint64_t v49 = v45 + *(void *)(*(void *)v45 + 96);
    swift_beginAccess();
    uint64_t v50 = *(void (**)(uint64_t, char *, uint64_t))(v72 + 40);
    id v51 = v44;
    v50(v49, v47, v73);
    swift_endAccess();
    type metadata accessor for CRDataStoreBundleNonCoordinated();
    uint64_t v52 = v75;
    unint64_t v53 = v68;
    v68(v75, v29, v16);
    uint64_t v54 = (uint64_t)v76;
    v53(v76, v29, v16);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v54, 0, 1, v16);
    uint64_t v55 = (char *)v77;
    swift_retain();
    uint64_t v56 = v79;
    swift_bridgeObjectRetain();
    uint64_t v57 = swift_bridgeObjectRetain();
    sub_1C42166A4(v55, v52, v54, 0, v45, 0, 0, v56, v57, 0);
    sub_1C42168D8(v69);
    swift_release();
    swift_release();
    return;
  }
  id v58 = v84[0];
  uint64_t v59 = sub_1C44963A8();

  swift_willThrow();
LABEL_13:
  uint64_t v65 = *v82;
  *id v82 = (void *)v59;
}

uint64_t sub_1C402486C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_1C4024894(uint64_t a1)
{
  uint64_t v2 = sub_1C4496498();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - v7;
  __int16 v9 = *(void (**)(char *, char *))(a1 + 32);
  sub_1C4496478();
  sub_1C4496478();
  v9(v8, v6);
  uint64_t v10 = *(void (**)(char *, uint64_t))(v3 + 8);
  v10(v6, v2);
  return ((uint64_t (*)(char *, uint64_t))v10)(v8, v2);
}

uint64_t static CRDataStoreBundle.write(_:model:url:version:fileFormatVersion:)(void *a1, uint64_t a2, uint64_t a3, char *a4, int a5)
{
  char v9 = *a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B0A0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C449B490;
  *(unsigned char *)(v10 + 32) = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA228);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1C449B490;
  if ((a5 & 0x10000) != 0) {
    __int16 v12 = 0;
  }
  else {
    __int16 v12 = a5;
  }
  *(_WORD *)(v11 + 32) = v12;
  static CRDataStoreBundle.write(_:model:url:allowedEncodings:allowedAppFormats:)(a1, a2, a3, v10, v11);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t static CRDataStoreBundle.write(_:model:url:fileFormatVersion:)(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA228);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C449B490;
  if ((a4 & 0x10000) != 0) {
    __int16 v9 = 0;
  }
  else {
    __int16 v9 = a4;
  }
  *(_WORD *)(v8 + 32) = v9;
  static CRDataStoreBundle.write(_:model:url:allowedEncodings:allowedAppFormats:)(a1, a2, a3, (uint64_t)&unk_1F1F9A688, v8);
  return swift_bridgeObjectRelease();
}

uint64_t static CRDataStoreBundle.write(_:url:fileFormatVersion:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v11 = 0;
  memset(v10, 0, sizeof(v10));
  id v6 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v10);
  sub_1C3F962E0((uint64_t)v10, qword_1EBBC0C90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA228);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1C449B490;
  if ((a3 & 0x10000) != 0) {
    __int16 v8 = 0;
  }
  else {
    __int16 v8 = a3;
  }
  *(_WORD *)(v7 + 32) = v8;
  static CRDataStoreBundle.write(_:model:url:allowedEncodings:allowedAppFormats:)(v6, a1, a2, (uint64_t)&unk_1F1F9A660, v7);

  return swift_bridgeObjectRelease();
}

uint64_t static CRDataStoreBundle.canRead(url:allowedEncodings:allowedAppFormats:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  char v13 = 1;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_init);
  id v6 = (void *)sub_1C4496418();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = &v13;
  v7[3] = a2;
  v7[4] = a3;
  __int16 v8 = (void *)swift_allocObject();
  void v8[2] = sub_1C4028624;
  v8[3] = v7;
  void v12[4] = sub_1C4028B20;
  v12[5] = v8;
  v12[0] = (id)MEMORY[0x1E4F143A8];
  v12[1] = (id)1107296256;
  v12[2] = sub_1C4023C54;
  v12[3] = &block_descriptor_28;
  __int16 v9 = _Block_copy(v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  v12[0] = 0;
  objc_msgSend(v5, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v6, 0, v12, v9);
  _Block_release(v9);

  id v10 = v12[0];
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v5) {
    __break(1u);
  }
  if (v13 == 1)
  {
    swift_release();
    if (!v10) {
      return 1;
    }
  }
  else
  {
    swift_release();
  }

  return 0;
}

void sub_1C4024E4C(uint64_t a1, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v26 = a4;
  uint64_t v6 = sub_1C4496498();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  __int16 v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(self, sel_defaultManager);
  sub_1C4496488();
  uint64_t v11 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  unsigned int v12 = objc_msgSend(v10, sel_fileExistsAtPath_, v11);

  if (v12)
  {
    v25[1] = a2;
    sub_1C4496438();
    uint64_t v13 = sub_1C4496488();
    unint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v29 = 0;
    memset(v28, 0, sizeof(v28));
    int64_t v16 = *(void *)(a3 + 16);
    uint64_t v17 = MEMORY[0x1E4FBC860];
    if (v16)
    {
      uint64_t v18 = v13;
      uint64_t v27 = MEMORY[0x1E4FBC860];
      sub_1C4012828(0, v16, 0);
      uint64_t v17 = v27;
      uint64_t v19 = (unsigned __int8 *)(a3 + 32);
      unint64_t v20 = *(void *)(v27 + 16);
      do
      {
        unsigned int v21 = *v19++;
        if (v21 < 2) {
          __int16 v22 = 1;
        }
        else {
          __int16 v22 = 2;
        }
        uint64_t v27 = v17;
        unint64_t v23 = *(void *)(v17 + 24);
        if (v20 >= v23 >> 1)
        {
          sub_1C4012828(v23 > 1, v20 + 1, 1);
          uint64_t v17 = v27;
        }
        *(void *)(v17 + 16) = v20 + 1;
        *(_WORD *)(v17 + 2 * v20++ + 32) = v22;
        --v16;
      }
      while (v16);
      uint64_t v13 = v18;
    }
    type metadata accessor for CRSQLStore();
    swift_initStackObject();
    uint64_t v24 = v26;
    swift_bridgeObjectRetain();
    sub_1C3FDB4C8(v13, v15, (uint64_t)v28, 0, 1, 0, v17, v24);
    swift_release();
  }
  else
  {
    *a2 = 0;
  }
}

uint64_t CRDataStoreBundle.getModel(reader:)(uint64_t a1, uint64_t a2)
{
  return sub_1C4025108(a1, a2);
}

uint64_t sub_1C4025108(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_1C4496D68();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C4496DA8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)(v2 + 32);
  uint64_t v13 = (void *)swift_allocObject();
  _OWORD v13[2] = a1;
  v13[3] = a2;
  v13[4] = v2;
  aBlock[4] = sub_1C40289F4;
  aBlock[5] = v13;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C3F61AC0;
  aBlock[3] = &block_descriptor_39;
  unint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_1C4496D88();
  v16[1] = MEMORY[0x1E4FBC860];
  sub_1C3FBD45C();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0960);
  sub_1C3F815A4((unint64_t *)&qword_1EBBC0968, &qword_1EBBC0960);
  sub_1C4497BF8();
  MEMORY[0x1C87806C0](0, v12, v8, v14);
  _Block_release(v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return swift_release();
}

uint64_t CRDataStoreBundle.sync(_:)(uint64_t a1)
{
  return sub_1C446A670(a1);
}

uint64_t CRDataStoreBundle.sync(_:finished:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C446AA3C(a1, a2, a3);
}

uint64_t CRDataStoreBundle.merge<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C446ACF4(a1, a2, a3);
}

uint64_t CRDataStoreBundle.updates.getter()
{
  return sub_1C446E62C();
}

uint64_t CRDataStoreBundle.deinit()
{
  swift_release();
  return v0;
}

uint64_t CRDataStoreBundle.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1C4025490@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 128) + *(void *)(**(void **)(v1 + 128) + 96);
  swift_beginAccess();
  type metadata accessor for Capsule();
  uint64_t v4 = sub_1C4497B38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t (*sub_1C4025568(uint64_t a1))()
{
  *(void *)(a1 + 24) = *(void *)(v1 + 128);
  swift_beginAccess();
  swift_retain();
  return sub_1C40255EC;
}

uint64_t sub_1C40255EC()
{
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C4025624(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 128) + *(void *)(**(void **)(v1 + 128) + 96);
  swift_beginAccess();
  type metadata accessor for Capsule();
  uint64_t v4 = sub_1C4497B38();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  swift_retain();
  v6(v3, a1, v4);
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

uint64_t sub_1C4025758(void (*a1)(char *))
{
  type metadata accessor for Capsule();
  uint64_t v2 = sub_1C4497B38();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v7 - v4;
  sub_1C4025490((uint64_t)&v7 - v4);
  a1(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C4025874()
{
  return sub_1C4496438();
}

uint64_t sub_1C40258B0@<X0>(char *a1@<X8>)
{
  id v30 = a1;
  v32[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = sub_1C4496678();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1C4496498();
  uint64_t v31 = *(void *)(v29 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v29);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_defaultManager);
  unsigned int v12 = (void *)sub_1C4496418();
  v32[0] = 0;
  id v13 = objc_msgSend(v11, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 99, 1, v12, 1, v32);

  id v14 = v32[0];
  if (v13)
  {
    sub_1C4496478();
    id v15 = v14;

    sub_1C4496438();
    int64_t v16 = *(uint64_t (**)(char *, uint64_t))(v31 + 8);
    uint64_t v17 = v7;
    uint64_t v18 = v29;
    v31 += 8;
    unsigned __int8 v28 = v16;
    v16(v17, v29);
    sub_1C4496668();
    sub_1C44965F8();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v32[0] = (id)0x636E657265686F43;
    v32[1] = (id)0xEA00000000002D65;
    sub_1C4497268();
    swift_bridgeObjectRelease();
    uint64_t v19 = v30;
    sub_1C4496438();
    swift_bridgeObjectRelease();
    id v20 = objc_msgSend(v10, sel_defaultManager);
    unsigned int v21 = (void *)sub_1C4496418();
    v32[0] = 0;
    unsigned __int8 v22 = objc_msgSend(v20, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v21, 1, 0, v32);

    if (v22)
    {
      id v23 = v32[0];
      return v28(v9, v18);
    }
    else
    {
      id v26 = v32[0];
      sub_1C44963A8();

      swift_willThrow();
      uint64_t v27 = v28;
      v28(v19, v18);
      return v27(v9, v18);
    }
  }
  else
  {
    id v25 = v32[0];
    sub_1C44963A8();

    return swift_willThrow();
  }
}

uint64_t sub_1C4025C94(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = sub_1C4496498();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  unsigned int v12 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v46 - v13;
  uint64_t result = sub_1C40258B0((char *)&v46 - v13);
  if (!v4)
  {
    int v54 = a2;
    uint64_t v56 = v3;
    uint64_t v53 = a3;
    id v16 = objc_msgSend(self, sel_defaultManager);
    uint64_t v55 = a1;
    sub_1C4496438();
    uint64_t v17 = (void *)sub_1C4496418();
    id v20 = *(void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v19 = v9 + 8;
    uint64_t v18 = v20;
    v20(v12, v8);
    sub_1C4496438();
    unsigned int v21 = (void *)sub_1C4496418();
    v20(v12, v8);
    id v57 = 0;
    unsigned int v22 = objc_msgSend(v16, sel_copyItemAtURL_toURL_error_, v17, v21, &v57);

    id v23 = v57;
    if (v22)
    {
      uint64_t v51 = v19;
      uint64_t v52 = v18;
      uint64_t v24 = v55;
      uint64_t v25 = v56;
      if (*(void *)(v56 + 48))
      {
        id v26 = *(void **)(v56 + 40);
        unint64_t v49 = *(void *)(v56 + 48);
        uint64_t v50 = v26;
        id v57 = (id)sub_1C4496488();
        unint64_t v58 = v27;
        uint64_t v61 = 47;
        unint64_t v62 = 0xE100000000000000;
        sub_1C4028934();
        uint64_t v28 = MEMORY[0x1E4FBB1A0];
        uint64_t v29 = (void *)sub_1C4497B88();
        swift_bridgeObjectRelease();
        uint64_t v30 = v29[2];
        unint64_t v31 = v30 - 1;
        if (!v30) {
          unint64_t v31 = 0;
        }
        id v57 = v29;
        unint64_t v58 = (unint64_t)(v29 + 4);
        unint64_t v59 = v31;
        uint64_t v60 = (2 * v30) | 1;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C210);
        sub_1C3F815A4(&qword_1EA39C218, &qword_1EA39C210);
        uint64_t v32 = sub_1C44970B8();
        uint64_t v47 = v33;
        uint64_t v48 = v32;
        swift_bridgeObjectRelease();
        id v57 = (id)sub_1C4496488();
        unint64_t v58 = v34;
        uint64_t v61 = 47;
        unint64_t v62 = 0xE100000000000000;
        id v35 = (void *)sub_1C4497B88();
        swift_bridgeObjectRelease();
        unint64_t v36 = v35[2];
        unint64_t v37 = v36 - 2;
        if (v36 < 2) {
          unint64_t v37 = 0;
        }
        id v57 = v35;
        unint64_t v58 = (unint64_t)(v35 + 4);
        unint64_t v59 = v37;
        uint64_t v60 = (2 * v36) | 1;
        uint64_t v38 = sub_1C44970B8();
        uint64_t v46 = v39;
        swift_bridgeObjectRelease();
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
        uint64_t v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = xmmword_1C449BBD0;
        id v57 = 0;
        unint64_t v58 = 0xE000000000000000;
        sub_1C4497D28();
        unint64_t v41 = v49;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        id v57 = v50;
        unint64_t v58 = v41;
        sub_1C4497268();
        unint64_t v42 = v58;
        *(void *)(v40 + 32) = v57;
        *(void *)(v40 + 40) = v42;
        uint64_t v43 = v48;
        *(void *)(v40 + 56) = v28;
        *(void *)(v40 + 64) = v43;
        *(void *)(v40 + 72) = v47;
        *(void *)(v40 + 88) = v28;
        *(void *)(v40 + 96) = 15917;
        *(void *)(v40 + 104) = 0xE200000000000000;
        *(void *)(v40 + 152) = v28;
        *(void *)(v40 + 120) = v28;
        *(void *)(v40 + 128) = v38;
        *(void *)(v40 + 136) = v46;
        sub_1C44985C8();
        uint64_t v25 = v56;
        swift_bridgeObjectRelease();
        uint64_t v24 = v55;
      }
      uint64_t result = sub_1C40261DC((uint64_t)v14, v24);
      uint64_t v45 = v52;
      if (v54)
      {
        if (*(void *)(v25 + 120))
        {
          swift_retain();
          sub_1C4216750();
          v45(v14, v8);
          return swift_release();
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        return ((uint64_t (*)(char *, uint64_t))v52)(v14, v8);
      }
    }
    else
    {
      id v44 = v23;
      sub_1C44963A8();

      swift_willThrow();
      return ((uint64_t (*)(char *, uint64_t))v18)(v14, v8);
    }
  }
  return result;
}

uint64_t sub_1C40261DC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v24 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C4496498();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CRDataStoreBundleNonCoordinated();
  unsigned int v12 = (void *)v3[9];
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v13(v11, a1, v8);
  v13(v7, v24, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
  uint64_t v14 = v3[16];
  uint64_t v15 = v3[17];
  uint64_t v17 = v3[18];
  uint64_t v16 = v3[19];
  swift_bridgeObjectRetain();
  uint64_t v18 = v12;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = v18;
  uint64_t v20 = v25;
  uint64_t result = sub_1C42166A4(v19, v11, (uint64_t)v7, 0, v14, 1, 0, v16, v15, v17);
  if (!v20)
  {
    v3[15] = result;
    uint64_t result = swift_release();
    uint64_t v22 = v3[15];
    if (v22) {
      *(unsigned char *)(v22 + qword_1EA3B89A8) = 1;
    }
  }
  return result;
}

uint64_t sub_1C4026420(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v63 = a3;
  uint64_t v66 = a2;
  uint64_t v6 = *(void *)(*v4 + 632);
  v62[1] = *(void *)(*v4 + 640);
  v62[2] = v6;
  uint64_t v7 = type metadata accessor for Capsule();
  uint64_t v8 = sub_1C4497B38();
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v68 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v64 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  v62[0] = (uint64_t)v62 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v62 - v13;
  uint64_t v15 = sub_1C4496498();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v62 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = objc_msgSend(self, sel_defaultManager);
  uint64_t v65 = a1;
  sub_1C4496438();
  sub_1C4496488();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v20 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  LODWORD(v18) = objc_msgSend(v19, sel_fileExistsAtPath_, v20);

  if (!v18)
  {
    LOBYTE(v31) = 0;
    return v31 & 1;
  }
  sub_1C4025490((uint64_t)v14);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48);
  int v23 = v22(v14, 1, v7);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v14, v68);
  uint64_t v24 = (uint64_t)v4;
  if (v23 == 1)
  {
    unint64_t v25 = v4[6];
    uint64_t v26 = v72;
    if (v25)
    {
      uint64_t v27 = *(void *)(v24 + 40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
      char v28 = v24;
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1C449B490;
      uint64_t v70 = 0;
      unint64_t v71 = 0xE000000000000000;
      sub_1C4497D28();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v70 = v27;
      unint64_t v71 = v25;
      sub_1C4497268();
      uint64_t v29 = v70;
      unint64_t v30 = v71;
      *(void *)(v24 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v24 + 32) = v29;
      *(void *)(v24 + 40) = v30;
      sub_1C44985C8();
      LOBYTE(v24) = v28;
      swift_bridgeObjectRelease();
    }
    LOBYTE(v31) = v24;
    sub_1C4025C94(v65, 1, v66);
    if (!v26)
    {
      sub_1C446CC64();
      LOBYTE(v31) = 0;
    }
    return v31 & 1;
  }
  uint64_t v67 = v21;
  uint64_t v68 = v7;
  uint64_t v31 = v4[15];
  unint64_t v32 = v4[6];
  uint64_t v33 = v72;
  if (v31)
  {
    if (v32)
    {
      uint64_t v34 = *(void *)(v24 + 40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
      uint64_t v35 = v24;
      uint64_t v36 = swift_allocObject();
      *(_OWORD *)(v36 + 16) = xmmword_1C449B490;
      uint64_t v70 = 0;
      unint64_t v71 = 0xE000000000000000;
      sub_1C4497D28();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v70 = v34;
      unint64_t v71 = v32;
      sub_1C4497268();
      uint64_t v37 = v70;
      unint64_t v38 = v71;
      *(void *)(v36 + 56) = MEMORY[0x1E4FBB1A0];
      *(void *)(v36 + 32) = v37;
      *(void *)(v36 + 40) = v38;
      sub_1C44985C8();
      uint64_t v24 = v35;
      swift_bridgeObjectRelease();
      uint64_t v31 = *(void *)(v35 + 120);
      uint64_t v39 = (uint64_t)v64;
      if (!v31)
      {
        __break(1u);
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t v39 = (uint64_t)v64;
    }
    swift_retain();
    sub_1C4216878();
    swift_release();
    if (!v33)
    {
      uint64_t v53 = v70;
      uint64_t v54 = v71;
      sub_1C446CC64();
      sub_1C4025490(v39);
      uint64_t v55 = v68;
      uint64_t result = v22((char *)v39, 1, v68);
      if (result != 1)
      {
        Capsule.version.getter(v55, &v70);
        uint64_t v56 = v70;
        uint64_t v57 = v71;
        (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v39, v55);
        if (sub_1C4112134(v57, v54)) {
          LOBYTE(v31) = 1;
        }
        else {
          LOBYTE(v31) = sub_1C4112134(v56, v53);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v31 & 1;
      }
      __break(1u);
      goto LABEL_32;
    }
    return v31 & 1;
  }
LABEL_12:
  if (v32)
  {
    uint64_t v40 = *(void *)(v24 + 40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
    uint64_t v41 = v24;
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1C449B490;
    uint64_t v70 = 0;
    unint64_t v71 = 0xE000000000000000;
    sub_1C4497D28();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v70 = v40;
    unint64_t v71 = v32;
    sub_1C4497268();
    uint64_t v43 = v70;
    unint64_t v44 = v71;
    *(void *)(v42 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v42 + 32) = v43;
    *(void *)(v42 + 40) = v44;
    sub_1C44985C8();
    uint64_t v24 = v41;
    swift_bridgeObjectRelease();
  }
  LOBYTE(v31) = v24;
  uint64_t result = sub_1C4025C94(v65, 0, v66);
  if (v33) {
    return v31 & 1;
  }
  uint64_t v46 = *(void *)(v24 + 120);
  if (!v46)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v47 = *(void **)(v24 + 72);
  uint64_t v48 = type metadata accessor for CRSQLStoreBundleCapsule();
  unint64_t v49 = v47;
  swift_retain();
  v69[0] = sub_1C4217420(v49, v46);
  uint64_t v50 = (char *)(*(void *)(v24 + 128) + *(void *)(**(void **)(v24 + 128) + 96));
  swift_beginAccess();
  uint64_t v51 = v68;
  uint64_t result = v22(v50, 1, v68);
  if (result == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  swift_retain();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1C443EF38((uint64_t)v69, v51, v48, WitnessTable);
  swift_endAccess();
  swift_release();
  sub_1C446CC64();
  sub_1C421F1D4(&v70);
  uint64_t v58 = v71;
  uint64_t v72 = v70;
  uint64_t v59 = v62[0];
  sub_1C4025490(v62[0]);
  uint64_t result = v22((char *)v59, 1, v51);
  if (result != 1)
  {
    Capsule.version.getter(v51, v69);
    uint64_t v60 = v69[0];
    uint64_t v61 = v69[1];
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v59, v51);
    if (sub_1C4112134(v61, v58)) {
      LOBYTE(v31) = 1;
    }
    else {
      LOBYTE(v31) = sub_1C4112134(v60, v72);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v31 & 1;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1C4026CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v51 = a2;
  uint64_t v58 = a1;
  uint64_t v6 = sub_1C4496498();
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v48 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v49 = (char *)&v44 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v44 - v11;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v14 = sub_1C4497B38();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v44 - v16;
  sub_1C4025490((uint64_t)&v44 - v16);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v17, 1, v13);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v18 == 1) {
    return result;
  }
  uint64_t v20 = v5[15];
  if (v20)
  {
    uint64_t v21 = v5[6];
    if (!v21) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v43 = v58;
    uint64_t result = sub_1C40258B0(v12);
    if (v3) {
      return result;
    }
    sub_1C40261DC((uint64_t)v12, v43);
    uint64_t v4 = 0;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v12, v6);
    uint64_t v20 = v5[15];
    uint64_t v21 = v5[6];
    if (!v21) {
      goto LABEL_10;
    }
  }
  uint64_t v47 = v6;
  if (!v20)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v46 = v5[5];
  uint64_t v52 = sub_1C4496488();
  uint64_t v53 = v22;
  uint64_t v56 = 47;
  unint64_t v57 = 0xE100000000000000;
  sub_1C4028934();
  uint64_t v23 = MEMORY[0x1E4FBB1A0];
  uint64_t v24 = sub_1C4497B88();
  swift_bridgeObjectRelease();
  unint64_t v25 = *(void *)(v24 + 16);
  unint64_t v26 = v25 - 2;
  if (v25 < 2) {
    unint64_t v26 = 0;
  }
  uint64_t v52 = v24;
  uint64_t v53 = v24 + 32;
  unint64_t v54 = v26;
  uint64_t v55 = (2 * v25) | 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C210);
  sub_1C3F815A4(&qword_1EA39C218, &qword_1EA39C210);
  uint64_t v27 = sub_1C44970B8();
  uint64_t v44 = v28;
  uint64_t v45 = v27;
  swift_bridgeObjectRelease();
  uint64_t v52 = sub_1C4496488();
  uint64_t v53 = v29;
  uint64_t v56 = 47;
  unint64_t v57 = 0xE100000000000000;
  uint64_t v30 = sub_1C4497B88();
  swift_bridgeObjectRelease();
  unint64_t v31 = *(void *)(v30 + 16);
  unint64_t v32 = v31 - 2;
  if (v31 < 2) {
    unint64_t v32 = 0;
  }
  uint64_t v52 = v30;
  uint64_t v53 = v30 + 32;
  unint64_t v54 = v32;
  uint64_t v55 = (2 * v31) | 1;
  uint64_t v33 = sub_1C44970B8();
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_1C449BBD0;
  uint64_t v52 = v46;
  uint64_t v53 = v21;
  swift_bridgeObjectRetain();
  sub_1C4497268();
  uint64_t v37 = v53;
  *(void *)(v36 + 32) = v52;
  *(void *)(v36 + 40) = v37;
  uint64_t v38 = v45;
  *(void *)(v36 + 56) = v23;
  *(void *)(v36 + 64) = v38;
  *(void *)(v36 + 72) = v44;
  *(void *)(v36 + 88) = v23;
  *(void *)(v36 + 96) = 15917;
  *(void *)(v36 + 104) = 0xE200000000000000;
  *(void *)(v36 + 152) = v23;
  *(void *)(v36 + 120) = v23;
  *(void *)(v36 + 128) = v33;
  *(void *)(v36 + 136) = v35;
  sub_1C44985C8();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v20 = v5[15];
  uint64_t v6 = v47;
LABEL_10:
  if (!v20)
  {
    __break(1u);
    goto LABEL_21;
  }
  swift_retain();
  sub_1C4217478();
  uint64_t result = swift_release();
  uint64_t v39 = v58;
  if (!v4)
  {
    if (v5[15])
    {
      uint64_t v40 = v49;
      sub_1C4496438();
      uint64_t v41 = v48;
      uint64_t result = sub_1C4496438();
      if (v5[15])
      {
        MEMORY[0x1F4188790](result);
        *(&v44 - 4) = (uint64_t)v5;
        *(&v44 - 3) = v39;
        *(&v44 - 2) = (uint64_t)v40;
        *(&v44 - 1) = (uint64_t)v41;
        swift_retain();
        sub_1C42174D0();
        swift_release();
        uint64_t v42 = *(void (**)(char *, uint64_t))(v50 + 8);
        v42(v41, v6);
        return ((uint64_t (*)(char *, uint64_t))v42)(v40, v6);
      }
      goto LABEL_23;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  return result;
}

void sub_1C40272DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v54 = a4;
  v60[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v53 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C4496678();
  uint64_t v56 = *(void *)(v8 - 8);
  uint64_t v57 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_1C4496498();
  uint64_t v11 = *(void *)(v59 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v59);
  uint64_t v58 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v49 - v15;
  MEMORY[0x1F4188790](v14);
  int v18 = (char *)&v49 - v17;
  uint64_t v52 = a1;
  if (!*(void *)(a1 + 120)) {
    __break(1u);
  }
  swift_retain();
  sub_1C3FDA68C();
  swift_release();
  id v19 = self;
  id v20 = objc_msgSend(v19, sel_defaultManager);
  uint64_t v21 = (void *)sub_1C4496418();
  v60[0] = 0;
  id v22 = objc_msgSend(v20, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 99, 1, v21, 1, v60);

  id v23 = v60[0];
  if (!v22)
  {
    id v42 = v60[0];
    sub_1C44963A8();

    swift_willThrow();
    return;
  }
  uint64_t v51 = a3;
  sub_1C4496478();
  id v24 = v23;

  sub_1C4496438();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v25 = v11 + 8;
  unint64_t v26 = v27;
  uint64_t v28 = v59;
  v27(v16, v59);
  id v29 = objc_msgSend(v19, sel_defaultManager);
  uint64_t v30 = (void *)sub_1C4496418();
  v60[0] = 0;
  unsigned int v31 = objc_msgSend(v29, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v30, 1, 0, v60);

  if (!v31)
  {
    id v43 = v60[0];
    sub_1C44963A8();

    swift_willThrow();
    v26(v18, v28);
    return;
  }
  uint64_t v49 = v25;
  uint64_t v50 = v26;
  id v32 = v60[0];
  sub_1C4496668();
  sub_1C44965F8();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v10, v57);
  strcpy((char *)v60, "CoherenceTemp-");
  HIBYTE(v60[1]) = -18;
  sub_1C4497268();
  swift_bridgeObjectRelease();
  uint64_t v33 = v58;
  sub_1C4496438();
  swift_bridgeObjectRelease();
  id v34 = objc_msgSend(v19, sel_defaultManager);
  uint64_t v35 = (void *)sub_1C4496418();
  uint64_t v36 = (void *)sub_1C4496418();
  v60[0] = 0;
  unsigned int v37 = objc_msgSend(v34, sel_copyItemAtURL_toURL_error_, v35, v36, v60);

  if (!v37)
  {
    id v44 = v60[0];
    sub_1C44963A8();

    swift_willThrow();
    goto LABEL_10;
  }
  id v38 = v60[0];
  id v39 = objc_msgSend(v19, sel_defaultManager);
  uint64_t v40 = (uint64_t)v53;
  uint64_t v41 = v55;
  sub_1C44979A8();
  if (v41)
  {

LABEL_10:
    uint64_t v45 = v59;
    uint64_t v46 = v50;
    v50(v33, v59);
    v46(v18, v45);
    return;
  }
  sub_1C3F962E0(v40, &qword_1EBBC0760);

  uint64_t v47 = v59;
  uint64_t v48 = v50;
  if (*(void *)(v52 + 120))
  {
    swift_retain();
    sub_1C3F5B2F8();
    swift_release();
    v48(v33, v47);
    v48(v18, v47);
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1C40278AC()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C40278F4()
{
  uint64_t v0 = sub_1C446A4AC();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C4027944()
{
  sub_1C40278F4();
  return swift_deallocClassInstance();
}

uint64_t CRDataStoreBundle.receive(subscription:)(void *a1)
{
  return sub_1C4028640(a1);
}

uint64_t CRDataStoreBundle.receive(_:)(uint64_t a1)
{
  uint64_t v1 = sub_1C446A670(a1);
  return MEMORY[0x1F40D6900](v1);
}

uint64_t sub_1C40279DC(void *a1)
{
  return sub_1C4028640(a1);
}

uint64_t sub_1C40279E8(uint64_t a1)
{
  return CRDataStoreBundle.receive(_:)(a1);
}

uint64_t sub_1C4027A0C()
{
  return sub_1C4496C78();
}

void *sub_1C4027A30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v9 = v8;
  uint64_t v25 = a7;
  uint64_t v26 = a8;
  uint64_t v24 = a2;
  uint64_t v15 = sub_1C4496498();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  int v18 = (char *)&v23 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[15] = 0;
  type metadata accessor for CRDataStoreBundleNonCoordinated.ModelStorage();
  v8[16] = sub_1C421666C();
  v8[19] = a4;
  swift_retain();
  uint64_t v19 = sub_1C411EE98(a5);
  swift_bridgeObjectRelease();
  uint64_t v20 = sub_1C411DAD0(v19);
  swift_bridgeObjectRelease();
  uint64_t v27 = v20;
  swift_retain();
  sub_1C4225964(&v27);
  swift_release();
  v9[17] = v27;
  v9[18] = a6;
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a3, v15);
  uint64_t v21 = sub_1C4472CE4(a1, v24, v18, v25, v26);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a3, v15);
  return v21;
}

uint64_t sub_1C4027C1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v23 = a6;
  uint64_t v13 = sub_1C4496498();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(a4 + 16);
  if (v17)
  {
    int v18 = (unsigned __int8 *)(a4 + 32);
    while (*v18++)
    {
      if (!--v17) {
        goto LABEL_5;
      }
    }
    uint64_t result = sub_1C4497F58();
    __break(1u);
  }
  else
  {
LABEL_5:
    type metadata accessor for CRDataStoreBundleInternals();
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a3, v13);
    swift_allocObject();
    uint64_t v20 = sub_1C4027A30(a1, a2, (uint64_t)v16, a4, a5, v23, 0, 0);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a3, v13);
    *(void *)(v7 + 16) = v20;
    return v7;
  }
  return result;
}

uint64_t sub_1C4027E1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_1C4027C1C(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1C4027E98(void *a1, uint64_t a2, uint64_t a3, unsigned char *a4, int a5)
{
  int v24 = a5;
  uint64_t v23 = a3;
  uint64_t v25 = a1;
  uint64_t v8 = sub_1C4496498();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Capsule();
  uint64_t v12 = sub_1C4497B38();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v22 - v14;
  LOBYTE(a4) = *a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v22 - v14, a2, v12);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a3, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B0A0);
  uint64_t v16 = swift_allocObject();
  long long v22 = xmmword_1C449B490;
  *(_OWORD *)(v16 + 16) = xmmword_1C449B490;
  *(unsigned char *)(v16 + 32) = (_BYTE)a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA228);
  uint64_t inited = swift_initStackObject();
  uint64_t v18 = inited;
  *(_OWORD *)(inited + 16) = v22;
  __int16 v19 = v24;
  if ((v24 & 0x10000) != 0) {
    __int16 v19 = 0;
  }
  *(_WORD *)(inited + 32) = v19;
  swift_allocObject();
  uint64_t v20 = sub_1C4027C1C(v25, (uint64_t)v15, (uint64_t)v11, v16, v18, 0);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v23, v8);
  return v20;
}

uint64_t sub_1C4028108()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C4028140()
{
  uint64_t v1 = sub_1C4496498();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 81) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v6, v5);
}

void sub_1C4028240(unint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(sub_1C4496498() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 81) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_1C4022DF4(a1, *(void *)(v1 + 32), *(void **)(v1 + 40), *(char **)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80), v1 + v6, *(void **)(v1 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)), v3, v4);
}

uint64_t sub_1C40282FC()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C402830C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C4028334()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for Capsule();
  uint64_t v3 = *(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(*(void *)(v2 - 8) + 64);
  unint64_t v6 = (uint64_t *)(v0 + v4);
  unint64_t v7 = *(void *)(v0 + v4 + 8);
  if (v7 >> 60 != 15) {
    sub_1C3F7E2CC(*v6, v7);
  }
  uint64_t v8 = (char *)v6 + *(int *)(v2 + 36);
  uint64_t v9 = *(void *)(v1 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v1)) {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v1);
  }
  unint64_t v10 = (v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (((((v10 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return MEMORY[0x1F4186498](v0, v11 + 8, v3 | 7);
}

void sub_1C40284EC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(type metadata accessor for Capsule() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1C4024144(a1, a2, *(void ***)(v2 + 32), v2 + v8, *(void **)(v2 + v9), *(void *)(v2 + ((v9 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(char **)(v2 + ((((((v9 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), v5, v6);
}

uint64_t sub_1C40285D4()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C40285E4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C402860C()
{
  return objectdestroy_20Tm(MEMORY[0x1E4FBC898]);
}

void sub_1C4028624(uint64_t a1)
{
  sub_1C4024E4C(a1, *(unsigned char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C4028630()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4028640(void *a1)
{
  return sub_1C4496CD8();
}

unint64_t sub_1C4028688()
{
  unint64_t result = qword_1EA39C208;
  if (!qword_1EA39C208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39C208);
  }
  return result;
}

uint64_t sub_1C40286DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C40286F8()
{
  return MEMORY[0x1E4FBC278];
}

unsigned char *storeEnumTagSinglePayload for CRDataStoreBundleReadFileVersionPolicy(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C40287D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRDataStoreBundleReadFileVersionPolicy()
{
  return &type metadata for CRDataStoreBundleReadFileVersionPolicy;
}

uint64_t sub_1C402880C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CRDataStoreBundle()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for CRDataStoreBundle(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CRDataStoreBundle);
}

uint64_t dispatch thunk of CRDataStoreBundle.__allocating_init(_:sync:at:allowedEncodings:allowedAppFormats:writableAppFormats:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t sub_1C4028898()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CRDataStoreBundleInternals()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C4028914()
{
  sub_1C40272DC(v0[2], v0[3], v0[4], v0[5]);
}

unint64_t sub_1C4028934()
{
  unint64_t result = qword_1EBBBC5C8[0];
  if (!qword_1EBBBC5C8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBBBC5C8);
  }
  return result;
}

uint64_t sub_1C4028988()
{
  return objectdestroy_20Tm(MEMORY[0x1E4FBC8D0]);
}

uint64_t objectdestroy_20Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));
  a1(*(void *)(v1 + 32));
  return MEMORY[0x1F4186498](v1, 40, 7);
}

uint64_t sub_1C40289F4()
{
  return sub_1C4025758(*(void (**)(char *))(v0 + 16));
}

uint64_t sub_1C4028A00()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return MEMORY[0x1F4186498](v0, 97, 7);
}

void sub_1C4028A68(unint64_t a1)
{
  sub_1C4023224(a1, *(unsigned __int8 *)(v1 + 96), *(void **)(v1 + 32), *(char **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C4028AB0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

unint64_t sub_1C4028AC0()
{
  unint64_t result = qword_1EBBBBF30;
  if (!qword_1EBBBBF30)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBBBBF30);
  }
  return result;
}

uint64_t sub_1C4028B24(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8F0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  unsigned int v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = &v19[-v7];
  uint64_t v9 = *(int *)(type metadata accessor for Proto4_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v10 = *(void *)(v1 + v9);
    type metadata accessor for Proto4_Value._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v13 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = v10
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v14, (uint64_t)v8, &qword_1EA39C8F0);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v8, v12, &qword_1EA39C8F0);
    swift_endAccess();
    *(void *)(v1 + v9) = v11;
    swift_release();
  }
  uint64_t v15 = *(void *)(v1 + v9);
  *unint64_t v8 = a1;
  uint64_t v16 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1C3F961BC((uint64_t)v8, (uint64_t)v6, &qword_1EA39C8F0);
  uint64_t v17 = v15 + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v6, v17, &qword_1EA39C8F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C4028D78(double a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8F0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  unsigned int v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  unint64_t v8 = (double *)&v19[-v7];
  uint64_t v9 = *(int *)(type metadata accessor for Proto4_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v10 = *(void *)(v1 + v9);
    type metadata accessor for Proto4_Value._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v13 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = v10
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v14, (uint64_t)v8, &qword_1EA39C8F0);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v8, v12, &qword_1EA39C8F0);
    swift_endAccess();
    *(void *)(v1 + v9) = v11;
    swift_release();
  }
  uint64_t v15 = *(void *)(v1 + v9);
  *unint64_t v8 = a1;
  uint64_t v16 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(double *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1C3F961BC((uint64_t)v8, (uint64_t)v6, &qword_1EA39C8F0);
  uint64_t v17 = v15 + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v6, v17, &qword_1EA39C8F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C4028FD4(uint64_t a1, uint64_t a2)
{
  return sub_1C4028FE4(a1, a2, 2);
}

uint64_t sub_1C4028FDC(uint64_t a1, uint64_t a2)
{
  return sub_1C4028FE4(a1, a2, 3);
}

uint64_t sub_1C4028FE4(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8F0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (void *)((char *)v24 - v11);
  uint64_t v13 = *(int *)(type metadata accessor for Proto4_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v14 = *(void *)(v3 + v13);
    type metadata accessor for Proto4_Value._StorageClass(0);
    uint64_t v15 = swift_allocObject();
    void v24[3] = a3;
    uint64_t v16 = v15;
    uint64_t v17 = v15
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v18 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    uint64_t v19 = v14
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v19, (uint64_t)v12, &qword_1EA39C8F0);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v12, v17, &qword_1EA39C8F0);
    swift_endAccess();
    *(void *)(v3 + v13) = v16;
    swift_release();
  }
  uint64_t v20 = *(void *)(v3 + v13);
  *uint64_t v12 = a1;
  v12[1] = a2;
  uint64_t v21 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v12, 0, 1, v21);
  sub_1C3F961BC((uint64_t)v12, (uint64_t)v10, &qword_1EA39C8F0);
  uint64_t v22 = v20 + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v10, v22, &qword_1EA39C8F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C402924C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8F0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  unsigned int v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v20[-v7];
  uint64_t v9 = *(int *)(type metadata accessor for Proto4_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v10 = *(void *)(v1 + v9);
    type metadata accessor for Proto4_Value._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v13 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = v10
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v14, (uint64_t)v8, &qword_1EA39C8F0);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v8, v12, &qword_1EA39C8F0);
    swift_endAccess();
    *(void *)(v1 + v9) = v11;
    swift_release();
  }
  uint64_t v15 = *(void *)(v1 + v9);
  uint64_t v16 = sub_1C4496858();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v8, a1, v16);
  uint64_t v17 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v8, 0, 1, v17);
  sub_1C3F961BC((uint64_t)v8, (uint64_t)v6, &qword_1EA39C8F0);
  uint64_t v18 = v15 + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v6, v18, &qword_1EA39C8F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C40294D8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8F0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  unsigned int v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v19[-v7];
  uint64_t v9 = *(int *)(type metadata accessor for Proto4_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v10 = *(void *)(v1 + v9);
    type metadata accessor for Proto4_Value._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v13 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = v10
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v14, (uint64_t)v8, &qword_1EA39C8F0);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v8, v12, &qword_1EA39C8F0);
    swift_endAccess();
    *(void *)(v1 + v9) = v11;
    swift_release();
  }
  uint64_t v15 = *(void *)(v1 + v9);
  sub_1C404D5A4(a1, (uint64_t)v8, type metadata accessor for Proto4_Reference);
  uint64_t v16 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1C3F961BC((uint64_t)v8, (uint64_t)v6, &qword_1EA39C8F0);
  uint64_t v17 = v15 + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v6, v17, &qword_1EA39C8F0);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C402974C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C948);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  unsigned int v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v19[-v7];
  uint64_t v9 = *(int *)(type metadata accessor for Proto4_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v10 = *(void *)(v1 + v9);
    type metadata accessor for Proto4_CRDT._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v13 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v14, (uint64_t)v8, &qword_1EA39C948);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v8, v12, &qword_1EA39C948);
    swift_endAccess();
    *(void *)(v1 + v9) = v11;
    swift_release();
  }
  uint64_t v15 = *(void *)(v1 + v9);
  sub_1C404D5A4(a1, (uint64_t)v8, type metadata accessor for Proto4_Register);
  uint64_t v16 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1C3F961BC((uint64_t)v8, (uint64_t)v6, &qword_1EA39C948);
  uint64_t v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v6, v17, &qword_1EA39C948);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C40299BC(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C948);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  unsigned int v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v19[-v7];
  uint64_t v9 = *(int *)(type metadata accessor for Proto4_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v10 = *(void *)(v1 + v9);
    type metadata accessor for Proto4_CRDT._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v13 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v14, (uint64_t)v8, &qword_1EA39C948);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v8, v12, &qword_1EA39C948);
    swift_endAccess();
    *(void *)(v1 + v9) = v11;
    swift_release();
  }
  uint64_t v15 = *(void *)(v1 + v9);
  sub_1C404D5A4(a1, (uint64_t)v8, type metadata accessor for Proto4_Set);
  uint64_t v16 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1C3F961BC((uint64_t)v8, (uint64_t)v6, &qword_1EA39C948);
  uint64_t v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v6, v17, &qword_1EA39C948);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C4029C2C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C948);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  unsigned int v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v19[-v7];
  uint64_t v9 = *(int *)(type metadata accessor for Proto4_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v10 = *(void *)(v1 + v9);
    type metadata accessor for Proto4_CRDT._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v13 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v14, (uint64_t)v8, &qword_1EA39C948);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v8, v12, &qword_1EA39C948);
    swift_endAccess();
    *(void *)(v1 + v9) = v11;
    swift_release();
  }
  uint64_t v15 = *(void *)(v1 + v9);
  sub_1C404D5A4(a1, (uint64_t)v8, type metadata accessor for Proto4_Struct);
  uint64_t v16 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1C3F961BC((uint64_t)v8, (uint64_t)v6, &qword_1EA39C948);
  uint64_t v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v6, v17, &qword_1EA39C948);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C4029E9C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C948);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  unsigned int v6 = &v19[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = &v19[-v7];
  uint64_t v9 = *(int *)(type metadata accessor for Proto4_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v10 = *(void *)(v1 + v9);
    type metadata accessor for Proto4_CRDT._StorageClass(0);
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = v11 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v13 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
    uint64_t v14 = v10 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v14, (uint64_t)v8, &qword_1EA39C948);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v8, v12, &qword_1EA39C948);
    swift_endAccess();
    *(void *)(v1 + v9) = v11;
    swift_release();
  }
  uint64_t v15 = *(void *)(v1 + v9);
  sub_1C404D5A4(a1, (uint64_t)v8, type metadata accessor for Proto4_Counter);
  uint64_t v16 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v8, 0, 1, v16);
  sub_1C3F961BC((uint64_t)v8, (uint64_t)v6, &qword_1EA39C948);
  uint64_t v17 = v15 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v6, v17, &qword_1EA39C948);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C402A110(uint64_t a1)
{
  return sub_1C402A128(a1, &OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__positive);
}

uint64_t sub_1C402A11C(uint64_t a1)
{
  return sub_1C402A128(a1, &OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__negative);
}

uint64_t sub_1C402A128(uint64_t a1, void *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v17 - v9;
  uint64_t v11 = *(int *)(type metadata accessor for Proto4_Counter(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_Counter._StorageClass(0);
    swift_allocObject();
    uint64_t v12 = swift_retain();
    *(void *)(v2 + v11) = sub_1C4036704(v12);
    swift_release();
  }
  uint64_t v13 = *(void *)(v2 + v11);
  sub_1C404D5A4(a1, (uint64_t)v10, type metadata accessor for Proto4_Version);
  uint64_t v14 = type metadata accessor for Proto4_Version(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v10, 0, 1, v14);
  sub_1C3F961BC((uint64_t)v10, (uint64_t)v8, &qword_1EA39CA18);
  uint64_t v15 = v13 + *a2;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338((uint64_t)v8, v15, &qword_1EA39CA18);
  swift_endAccess();
  return swift_release();
}

void sub_1C402A2EC(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
}

unint64_t sub_1C402A2FC@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = result < 2;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1C402A314()
{
  if (v0[8]) {
    return *(void *)v0 != 0;
  }
  else {
    return *(void *)v0;
  }
}

void *sub_1C402A330@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2 = *result >= 2uLL;
  *(void *)a2 = *result;
  char v3 = !v2;
  *(unsigned char *)(a2 + 8) = v3;
  *(unsigned char *)(a2 + 9) = 0;
  return result;
}

void sub_1C402A34C(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  if (*((unsigned char *)v1 + 8)) {
    uint64_t v2 = *v1 != 0;
  }
  *a1 = v2;
}

uint64_t sub_1C402A36C()
{
  return sub_1C4498628();
}

uint64_t sub_1C402A3D8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1C404EEA0();
  return MEMORY[0x1F4127160](a1, a2, v4);
}

uint64_t sub_1C402A424()
{
  return sub_1C4498628();
}

BOOL sub_1C402A48C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  if (*((unsigned char *)a1 + 8)) {
    uint64_t v2 = *a1 != 0;
  }
  uint64_t v3 = *a2 != 0;
  if (!*((unsigned char *)a2 + 8)) {
    uint64_t v3 = *a2;
  }
  return v2 == v3;
}

uint64_t sub_1C402A4C8()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8A18);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8A18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449B4A0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "root";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "references";
  *((void *)v10 + 1) = 10;
  v10[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C402A680()
{
  type metadata accessor for Proto4_Root._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__root;
  uint64_t v2 = type metadata accessor for Proto4_CRDT(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(void *)(v0
            + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__references) = MEMORY[0x1E4FBC860];
  qword_1EA39C228 = v0;
  return result;
}

uint64_t sub_1C402A71C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__root;
  uint64_t v7 = type metadata accessor for Proto4_CRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (void *)(v1
                + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__references);
  *(void *)(v1
            + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__references) = MEMORY[0x1E4FBC860];
  uint64_t v9 = a1 + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__root;
  swift_beginAccess();
  sub_1C3F970C4(v9, (uint64_t)v5, &qword_1EA39C8C8);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v6, &qword_1EA39C8C8);
  swift_endAccess();
  uint64_t v10 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__references);
  swift_beginAccess();
  uint64_t v11 = *v10;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *uint64_t v8 = v11;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C402A8B8()
{
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__root, &qword_1EA39C8C8);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C402A934()
{
  return type metadata accessor for Proto4_Root._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Root._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C2B8);
}

void sub_1C402A95C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t type metadata accessor for Proto4_CRDT(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C608);
}

uint64_t sub_1C402A9A8()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto4_CRDT(0);
        sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
        uint64_t v4 = v3;
        sub_1C4496A78();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1C4496908();
    }
    swift_beginAccess();
    type metadata accessor for Proto4_Reference(0);
    sub_1C404BA6C(&qword_1EA39C720, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
    uint64_t v4 = v3;
    sub_1C4496A68();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C402AB58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v16[9] = a4;
  v16[1] = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto4_CRDT(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1 + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__root;
  swift_beginAccess();
  sub_1C3F970C4(v13, (uint64_t)v8, &qword_1EA39C8C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C3F962E0((uint64_t)v8, &qword_1EA39C8C8);
  }
  else
  {
    sub_1C404D5A4((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto4_CRDT);
    sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
    sub_1C4496BD8();
    uint64_t result = sub_1C4049E78((uint64_t)v12, type metadata accessor for Proto4_CRDT);
    if (v4) {
      return result;
    }
  }
  uint64_t v15 = a1 + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__references;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v15 + 16))
  {
    type metadata accessor for Proto4_Reference(0);
    sub_1C404BA6C(&qword_1EA39C720, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
    swift_bridgeObjectRetain();
    sub_1C4496BC8();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C402AE28(uint64_t a1, uint64_t a2)
{
  uint64_t v32 = a2;
  uint64_t v3 = type metadata accessor for Proto4_CRDT(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v31 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D0);
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v31 - v14;
  uint64_t v16 = a1 + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__root;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v15, &qword_1EA39C8C8);
  uint64_t v17 = v32;
  uint64_t v18 = v32 + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__root;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_1C3F970C4((uint64_t)v15, (uint64_t)v9, &qword_1EA39C8C8);
  sub_1C3F970C4(v18, v19, &qword_1EA39C8C8);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v9, 1, v3) != 1)
  {
    sub_1C3F970C4((uint64_t)v9, (uint64_t)v13, &qword_1EA39C8C8);
    if (v20(v19, 1, v3) != 1)
    {
      uint64_t v23 = v31;
      sub_1C404D5A4(v19, v31, type metadata accessor for Proto4_CRDT);
      sub_1C404BA6C(&qword_1EA39BED0, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
      uint64_t v22 = a1;
      swift_retain();
      swift_retain();
      char v24 = sub_1C4497178();
      sub_1C4049E78(v23, type metadata accessor for Proto4_CRDT);
      sub_1C3F962E0((uint64_t)v15, &qword_1EA39C8C8);
      sub_1C4049E78((uint64_t)v13, type metadata accessor for Proto4_CRDT);
      sub_1C3F962E0((uint64_t)v9, &qword_1EA39C8C8);
      if (v24) {
        goto LABEL_8;
      }
LABEL_9:
      char v29 = 0;
      goto LABEL_10;
    }
    swift_retain();
    swift_retain();
    sub_1C3F962E0((uint64_t)v15, &qword_1EA39C8C8);
    sub_1C4049E78((uint64_t)v13, type metadata accessor for Proto4_CRDT);
LABEL_6:
    sub_1C3F962E0((uint64_t)v9, &qword_1EA39C8D0);
    goto LABEL_9;
  }
  swift_retain();
  swift_retain();
  sub_1C3F962E0((uint64_t)v15, &qword_1EA39C8C8);
  unsigned int v21 = v20(v19, 1, v3);
  uint64_t v22 = a1;
  if (v21 != 1) {
    goto LABEL_6;
  }
  sub_1C3F962E0((uint64_t)v9, &qword_1EA39C8C8);
LABEL_8:
  uint64_t v25 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__references);
  swift_beginAccess();
  uint64_t v26 = *v25;
  uint64_t v27 = (uint64_t *)(v17
                  + OBJC_IVAR____TtCV9Coherence11Proto4_RootP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__references);
  swift_beginAccess();
  uint64_t v28 = *v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v29 = sub_1C3FE92EC(v26, v28);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_10:
  swift_release();
  swift_release();
  return v29 & 1;
}

uint64_t sub_1C402B28C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B8C0, &qword_1EA39C228, a2);
}

uint64_t sub_1C402B2B0()
{
  return 0x522E346F746F7250;
}

uint64_t (*sub_1C402B2D8())()
{
  return nullsub_1;
}

uint64_t sub_1C402B2F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_Root, (void (*)(void))type metadata accessor for Proto4_Root._StorageClass, sub_1C402A71C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C402A9A8);
}

uint64_t sub_1C402B360(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Root, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C402AB58);
}

uint64_t sub_1C402B3A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C8C0, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C402B420(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Root, sub_1C402AE28) & 1;
}

uint64_t sub_1C402B464@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B8B8, (uint64_t)qword_1EA3B8A18, a1);
}

uint64_t sub_1C402B488(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C098, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C402B4F8()
{
  sub_1C404BA6C(&qword_1EA39C098, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
  return sub_1C4496AC8();
}

uint64_t sub_1C402B578()
{
  sub_1C404BA6C(&qword_1EA39C8C0, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
  return sub_1C44968D8();
}

uint64_t sub_1C402B5FC()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8A30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8A30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1C449BDC0;
  unint64_t v4 = v23 + v3;
  unint64_t v5 = v23 + v3 + v1[14];
  *(void *)(v23 + v3) = 1;
  *(void *)unint64_t v5 = "int";
  *(void *)(v5 + 8) = 3;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x1E4F70FB8];
  uint64_t v7 = sub_1C4496BE8();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "double";
  *(void *)(v9 + 8) = 6;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "string";
  *((void *)v11 + 1) = 6;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "data";
  *((void *)v13 + 1) = 4;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "date";
  *((void *)v15 + 1) = 4;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  *uint64_t v16 = 6;
  *(void *)uint64_t v17 = "reference";
  *((void *)v17 + 1) = 9;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "optional";
  *((void *)v19 + 1) = 8;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  unsigned int v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)unsigned int v21 = "taggedValue";
  *((void *)v21 + 1) = 11;
  unsigned char v21[16] = 2;
  v8();
  return sub_1C4496BF8();
}

uint64_t sub_1C402B92C(uint64_t a1)
{
  return sub_1C402E7D0(a1, (void (*)(void))type metadata accessor for Proto4_Value._StorageClass, &OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf, &qword_1EA39C230);
}

uint64_t sub_1C402B968()
{
  return sub_1C3F5E2CC(&OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf, &qword_1EA39C8F0);
}

uint64_t sub_1C402B97C()
{
  return type metadata accessor for Proto4_Value._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Value._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C2D8);
}

void sub_1C402B9A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C402B9C4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C4497B38();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C5C8);
}

uint64_t sub_1C402BA38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8F0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(type metadata accessor for Proto4_Value(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v12 = *(void *)(v3 + v11);
    type metadata accessor for Proto4_Value._StorageClass(0);
    uint64_t v13 = swift_allocObject();
    uint64_t v25 = v4;
    uint64_t v14 = v13;
    uint64_t v24 = a1;
    uint64_t v15 = a2;
    uint64_t v16 = a3;
    uint64_t v17 = v13
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v18 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    uint64_t v19 = v12
        + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v19, (uint64_t)v10, &qword_1EA39C8F0);
    swift_beginAccess();
    uint64_t v20 = v17;
    a3 = v16;
    a2 = v15;
    a1 = v24;
    sub_1C3F98338((uint64_t)v10, v20, &qword_1EA39C8F0);
    swift_endAccess();
    *(void *)(v3 + v11) = v14;
    swift_release();
  }
  uint64_t v21 = swift_retain();
  sub_1C402BC10(v21, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C402BC10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v216 = a4;
  uint64_t v207 = type metadata accessor for Proto4_TaggedValue(0);
  v208 = *(void (***)(void *, void, uint64_t, uint64_t))(v207 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v207);
  uint64_t v186 = (uint64_t)&v168 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v182 = (uint64_t)&v168 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8F8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  unint64_t v199 = (char *)&v168 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v204 = (uint64_t)&v168 - v13;
  uint64_t v211 = type metadata accessor for Proto4_Optional(0);
  uint64_t v198 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v211 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v211);
  uint64_t v185 = (uint64_t)&v168 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v181 = (uint64_t)&v168 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C900);
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v215 = (uint64_t)&v168 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v203 = (char *)&v168 - v20;
  uint64_t v206 = type metadata accessor for Proto4_Reference(0);
  uint64_t v197 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v206 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v206);
  uint64_t v184 = (uint64_t)&v168 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v180 = (uint64_t)&v168 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C908);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v219 = (uint64_t)&v168 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v212 = (uint64_t)&v168 - v27;
  uint64_t v210 = sub_1C4496858();
  *(void *)&long long v196 = *(void *)(v210 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v210);
  uint64_t v183 = (char *)&v168 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  int64_t v179 = (char *)&v168 - v30;
  uint64_t v221 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
  uint64_t v195 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v221 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v221);
  uint64_t v192 = (uint64_t)&v168 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v191 = (uint64_t)&v168 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v188 = (uint64_t)&v168 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v190 = (uint64_t)&v168 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v187 = (uint64_t)&v168 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v189 = (uint64_t)&v168 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  uint64_t v194 = (uint64_t)&v168 - v44;
  MEMORY[0x1F4188790](v43);
  uint64_t v217 = (char *)&v168 - v45;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C910);
  uint64_t v47 = MEMORY[0x1F4188790](v46 - 8);
  uint64_t v214 = (char *)&v168 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v47);
  uint64_t v50 = (char *)&v168 - v49;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8F0);
  uint64_t v52 = MEMORY[0x1F4188790](v51 - 8);
  uint64_t v54 = (char *)&v168 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = MEMORY[0x1F4188790](v52);
  uint64_t v57 = (char *)&v168 - v56;
  uint64_t v58 = MEMORY[0x1F4188790](v55);
  uint64_t v60 = (char *)&v168 - v59;
  uint64_t v61 = MEMORY[0x1F4188790](v58);
  uint64_t v205 = (uint64_t)&v168 - v62;
  uint64_t v63 = MEMORY[0x1F4188790](v61);
  uint64_t v65 = (char *)&v168 - v64;
  uint64_t v66 = MEMORY[0x1F4188790](v63);
  uint64_t v202 = (uint64_t)&v168 - v67;
  uint64_t v68 = MEMORY[0x1F4188790](v66);
  uint64_t v201 = (uint64_t)&v168 - v69;
  uint64_t v70 = MEMORY[0x1F4188790](v68);
  uint64_t v72 = (char *)&v168 - v71;
  uint64_t v73 = MEMORY[0x1F4188790](v70);
  uint64_t v213 = (uint64_t *)((char *)&v168 - v74);
  MEMORY[0x1F4188790](v73);
  uint64_t v200 = (uint64_t)&v168 - v75;
  uint64_t v76 = a1 + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v224 = a2;
  uint64_t v77 = v222;
  uint64_t v222 = a3;
  uint64_t result = sub_1C4496908();
  if (!v77)
  {
    uint64_t v220 = v76;
    v209 = v72;
    uint64_t v174 = v65;
    unint64_t v175 = v60;
    uint64_t v176 = v57;
    uint64_t v177 = v54;
    uint64_t v193 = v50;
    uint64_t v178 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v208 + 7);
    v218 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v195 + 6);
    uint64_t v173 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v208 + 6);
    v208 = (void (**)(void *, void, uint64_t, uint64_t))(v195 + 7);
    uint64_t v195 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v198 + 7);
    uint64_t v172 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v198 + 6);
    uint64_t v198 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v197 + 7);
    uint64_t v171 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v197 + 6);
    uint64_t v197 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v196 + 56);
    uint64_t v169 = (void (**)(char *, uint64_t, uint64_t))(v196 + 32);
    uint64_t v170 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v196 + 48);
    long long v196 = xmmword_1C449BDD0;
    uint64_t v81 = v215;
    uint64_t v80 = v216;
    uint64_t v82 = v219;
    uint64_t v83 = v210;
    uint64_t v84 = (uint64_t)v217;
    uint64_t v85 = (uint64_t)v214;
    while ((v79 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          uint64_t v90 = v200;
          sub_1C3F970C4(v220, v200, &qword_1EA39C8F0);
          int v91 = (*v218)(v90, 1, v221);
          sub_1C3F962E0(v90, &qword_1EA39C8F0);
          if (v91 != 1) {
            sub_1C4496918();
          }
          *(void *)&long long v223 = 0;
          BYTE8(v223) = 1;
          sub_1C44969A8();
          uint64_t v82 = v219;
          if ((BYTE8(v223) & 1) == 0) {
            goto LABEL_12;
          }
          goto LABEL_6;
        case 2:
          uint64_t v98 = v201;
          sub_1C3F970C4(v220, v201, &qword_1EA39C8F0);
          int v99 = (*v218)(v98, 1, v221);
          sub_1C3F962E0(v98, &qword_1EA39C8F0);
          if (v99 != 1) {
            sub_1C4496918();
          }
          *(void *)&long long v223 = 0;
          BYTE8(v223) = 1;
          sub_1C44969F8();
          uint64_t v82 = v219;
          if ((BYTE8(v223) & 1) == 0)
          {
LABEL_12:
            uint64_t v92 = v213;
            *uint64_t v213 = v223;
            uint64_t v93 = v80;
            uint64_t v94 = v83;
            uint64_t v95 = v85;
            uint64_t v96 = v81;
            uint64_t v97 = v221;
            goto LABEL_4;
          }
          goto LABEL_6;
        case 3:
          uint64_t v100 = v202;
          sub_1C3F970C4(v220, v202, &qword_1EA39C8F0);
          int v101 = (*v218)(v100, 1, v221);
          sub_1C3F962E0(v100, &qword_1EA39C8F0);
          if (v101 != 1) {
            sub_1C4496918();
          }
          long long v223 = 0uLL;
          sub_1C4496A18();
          uint64_t v82 = v219;
          uint64_t v102 = *((void *)&v223 + 1);
          if (*((void *)&v223 + 1)) {
            goto LABEL_20;
          }
          goto LABEL_6;
        case 4:
          uint64_t v103 = (uint64_t)v174;
          sub_1C3F970C4(v220, (uint64_t)v174, &qword_1EA39C8F0);
          int v104 = (*v218)(v103, 1, v221);
          sub_1C3F962E0(v103, &qword_1EA39C8F0);
          if (v104 != 1) {
            sub_1C4496918();
          }
          long long v223 = v196;
          sub_1C4496978();
          uint64_t v82 = v219;
          uint64_t v102 = *((void *)&v223 + 1);
          if (*((void *)&v223 + 1) >> 60 != 15)
          {
LABEL_20:
            uint64_t v92 = v213;
            *uint64_t v213 = v223;
            v92[1] = v102;
            uint64_t v93 = v80;
            uint64_t v94 = v83;
            uint64_t v95 = v85;
            uint64_t v96 = v81;
            uint64_t v97 = v221;
LABEL_4:
            swift_storeEnumTagMultiPayload();
            uint64_t v86 = v97;
            uint64_t v81 = v96;
            uint64_t v85 = v95;
            uint64_t v83 = v94;
            uint64_t v80 = v93;
            (*v208)(v92, 0, 1, v86);
            uint64_t v87 = (uint64_t)v209;
            sub_1C3F961BC((uint64_t)v92, (uint64_t)v209, &qword_1EA39C8F0);
            uint64_t v88 = v220;
            swift_beginAccess();
            uint64_t v89 = v87;
            uint64_t v84 = (uint64_t)v217;
            goto LABEL_5;
          }
          goto LABEL_6;
        case 5:
          uint64_t v105 = *v197;
          (*v197)(v193, 1, 1, v83);
          uint64_t v106 = v205;
          sub_1C3F970C4(v220, v205, &qword_1EA39C8F0);
          if ((*v218)(v106, 1, v221) == 1)
          {
            sub_1C3F962E0(v205, &qword_1EA39C8F0);
          }
          else
          {
            sub_1C404D5A4(v205, v84, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v115 = v194;
            sub_1C404D5A4(v84, v194, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 4)
            {
              uint64_t v116 = (uint64_t)v193;
              sub_1C3F962E0((uint64_t)v193, &qword_1EA39C910);
              uint64_t v117 = v84;
              unint64_t v118 = *v169;
              uint64_t v119 = v179;
              (*v169)(v179, v194, v83);
              v118((char *)v116, (uint64_t)v119, v83);
              uint64_t v84 = v117;
              uint64_t v81 = v215;
              uint64_t v80 = v216;
              uint64_t v85 = (uint64_t)v214;
              v105((char *)v116, 0, 1, v83);
            }
            else
            {
              sub_1C4049E78(v115, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            }
          }
          sub_1C404BA6C((unint64_t *)&qword_1EA39AD60, MEMORY[0x1E4F70C60]);
          uint64_t v139 = (uint64_t)v193;
          sub_1C4496A78();
          sub_1C3F961BC(v139, v85, &qword_1EA39C910);
          if ((*v170)(v85, 1, v83) == 1)
          {
            sub_1C3F962E0(v85, &qword_1EA39C910);
          }
          else
          {
            uint64_t v140 = *v169;
            uint64_t v141 = v84;
            uint64_t v142 = v183;
            (*v169)(v183, v85, v83);
            uint64_t v143 = v213;
            uint64_t v144 = v142;
            uint64_t v84 = v141;
            uint64_t v81 = v215;
            v140((char *)v213, (uint64_t)v144, v83);
            uint64_t v145 = v221;
            swift_storeEnumTagMultiPayload();
            (*v208)(v143, 0, 1, v145);
            uint64_t v146 = (uint64_t)v209;
            sub_1C3F961BC((uint64_t)v143, (uint64_t)v209, &qword_1EA39C8F0);
            uint64_t v147 = v220;
            swift_beginAccess();
            sub_1C3F98338(v146, v147, &qword_1EA39C8F0);
            swift_endAccess();
          }
          uint64_t v82 = v219;
          goto LABEL_6;
        case 6:
          uint64_t v107 = *v198;
          (*v198)(v212, 1, 1, v206);
          uint64_t v108 = (uint64_t)v175;
          sub_1C3F970C4(v220, (uint64_t)v175, &qword_1EA39C8F0);
          if ((*v218)(v108, 1, v221) == 1)
          {
            sub_1C3F962E0(v108, &qword_1EA39C8F0);
          }
          else
          {
            uint64_t v120 = v108;
            uint64_t v121 = v189;
            sub_1C404D5A4(v120, v189, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v122 = v121;
            uint64_t v123 = v187;
            sub_1C404D5A4(v122, v187, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 5)
            {
              uint64_t v124 = v212;
              sub_1C3F962E0(v212, &qword_1EA39C908);
              uint64_t v125 = v123;
              uint64_t v126 = v180;
              sub_1C404D5A4(v125, v180, type metadata accessor for Proto4_Reference);
              uint64_t v82 = v219;
              sub_1C404D5A4(v126, v124, type metadata accessor for Proto4_Reference);
              v107(v124, 0, 1, v206);
            }
            else
            {
              sub_1C4049E78(v123, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            }
          }
          sub_1C404BA6C(&qword_1EA39C720, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
          uint64_t v148 = v206;
          uint64_t v80 = v216;
          sub_1C4496A78();
          uint64_t v85 = (uint64_t)v214;
          sub_1C3F961BC(v212, v82, &qword_1EA39C908);
          if ((*v171)(v82, 1, v148) == 1)
          {
            sub_1C3F962E0(v82, &qword_1EA39C908);
          }
          else
          {
            uint64_t v149 = v184;
            sub_1C404D5A4(v219, v184, type metadata accessor for Proto4_Reference);
            uint64_t v150 = v213;
            uint64_t v82 = v219;
            sub_1C404D5A4(v149, (uint64_t)v213, type metadata accessor for Proto4_Reference);
            uint64_t v151 = v221;
            swift_storeEnumTagMultiPayload();
            (*v208)(v150, 0, 1, v151);
            uint64_t v152 = (uint64_t)v209;
            sub_1C3F961BC((uint64_t)v150, (uint64_t)v209, &qword_1EA39C8F0);
            uint64_t v153 = v220;
            swift_beginAccess();
            sub_1C3F98338(v152, v153, &qword_1EA39C8F0);
            swift_endAccess();
          }
          uint64_t v84 = (uint64_t)v217;
          uint64_t v81 = v215;
          goto LABEL_6;
        case 7:
          uint64_t v109 = *v195;
          uint64_t v110 = (uint64_t)v203;
          (*v195)(v203, 1, 1, v211);
          uint64_t v111 = (uint64_t)v176;
          sub_1C3F970C4(v220, (uint64_t)v176, &qword_1EA39C8F0);
          if ((*v218)(v111, 1, v221) == 1)
          {
            sub_1C3F962E0(v111, &qword_1EA39C8F0);
          }
          else
          {
            uint64_t v127 = v111;
            uint64_t v128 = v190;
            sub_1C404D5A4(v127, v190, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v129 = v128;
            uint64_t v130 = v188;
            sub_1C404D5A4(v129, v188, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 6)
            {
              sub_1C3F962E0(v110, &qword_1EA39C900);
              uint64_t v131 = v130;
              uint64_t v132 = v181;
              sub_1C404D5A4(v131, v181, type metadata accessor for Proto4_Optional);
              uint64_t v82 = v219;
              sub_1C404D5A4(v132, v110, type metadata accessor for Proto4_Optional);
              v109((char *)v110, 0, 1, v211);
            }
            else
            {
              sub_1C4049E78(v130, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            }
          }
          sub_1C404BA6C(&qword_1EA39C708, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
          sub_1C4496A78();
          uint64_t v154 = v215;
          sub_1C3F961BC(v110, v215, &qword_1EA39C900);
          if ((*v172)(v154, 1, v211) == 1)
          {
            sub_1C3F962E0(v154, &qword_1EA39C900);
          }
          else
          {
            uint64_t v155 = v185;
            sub_1C404D5A4(v154, v185, type metadata accessor for Proto4_Optional);
            uint64_t v156 = v213;
            uint64_t v82 = v219;
            sub_1C404D5A4(v155, (uint64_t)v213, type metadata accessor for Proto4_Optional);
            uint64_t v157 = v221;
            swift_storeEnumTagMultiPayload();
            (*v208)(v156, 0, 1, v157);
            uint64_t v158 = (uint64_t)v209;
            sub_1C3F961BC((uint64_t)v156, (uint64_t)v209, &qword_1EA39C8F0);
            uint64_t v159 = v220;
            swift_beginAccess();
            sub_1C3F98338(v158, v159, &qword_1EA39C8F0);
            swift_endAccess();
          }
          uint64_t v84 = (uint64_t)v217;
          uint64_t v81 = v154;
          goto LABEL_60;
        case 8:
          uint64_t v112 = *v178;
          uint64_t v113 = v204;
          (*v178)(v204, 1, 1, v207);
          uint64_t v114 = (uint64_t)v177;
          sub_1C3F970C4(v220, (uint64_t)v177, &qword_1EA39C8F0);
          if ((*v218)(v114, 1, v221) == 1)
          {
            sub_1C3F962E0(v114, &qword_1EA39C8F0);
          }
          else
          {
            uint64_t v133 = v114;
            uint64_t v134 = v191;
            sub_1C404D5A4(v133, v191, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v135 = v192;
            sub_1C404D5A4(v134, v192, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 7)
            {
              uint64_t v136 = v204;
              sub_1C3F962E0(v204, &qword_1EA39C8F8);
              uint64_t v137 = v182;
              sub_1C404D5A4(v135, v182, type metadata accessor for Proto4_TaggedValue);
              uint64_t v113 = v136;
              uint64_t v138 = (uint64_t)v199;
              uint64_t v82 = v219;
              sub_1C404D5A4(v137, v136, type metadata accessor for Proto4_TaggedValue);
              v112(v136, 0, 1, v207);
              goto LABEL_58;
            }
            sub_1C4049E78(v135, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
            uint64_t v113 = v204;
          }
          uint64_t v138 = (uint64_t)v199;
LABEL_58:
          sub_1C404BA6C(&qword_1EA39C6C8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
          uint64_t v160 = v207;
          sub_1C4496A78();
          sub_1C3F961BC(v113, v138, &qword_1EA39C8F8);
          if ((*v173)(v138, 1, v160) == 1)
          {
            sub_1C3F962E0(v138, &qword_1EA39C8F8);
            uint64_t v84 = (uint64_t)v217;
            uint64_t v81 = v215;
LABEL_60:
            uint64_t v85 = (uint64_t)v214;
            uint64_t v83 = v210;
          }
          else
          {
            uint64_t v161 = v186;
            sub_1C404D5A4(v138, v186, type metadata accessor for Proto4_TaggedValue);
            uint64_t v162 = v161;
            uint64_t v163 = v213;
            os_log_type_t v164 = v214;
            uint64_t v165 = v210;
            uint64_t v84 = (uint64_t)v217;
            uint64_t v166 = v221;
            uint64_t v81 = v215;
            uint64_t v82 = v219;
            sub_1C404D5A4(v162, (uint64_t)v213, type metadata accessor for Proto4_TaggedValue);
            swift_storeEnumTagMultiPayload();
            (*v208)(v163, 0, 1, v166);
            uint64_t v167 = (uint64_t)v209;
            sub_1C3F961BC((uint64_t)v163, (uint64_t)v209, &qword_1EA39C8F0);
            uint64_t v88 = v220;
            swift_beginAccess();
            uint64_t v89 = v167;
            uint64_t v85 = (uint64_t)v164;
            uint64_t v83 = v165;
            uint64_t v80 = v216;
LABEL_5:
            sub_1C3F98338(v89, v88, &qword_1EA39C8F0);
            swift_endAccess();
          }
LABEL_6:
          uint64_t result = sub_1C4496908();
          break;
        default:
          goto LABEL_6;
      }
    }
  }
  return result;
}

uint64_t sub_1C402D7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v35 = a2;
  uint64_t v36 = a4;
  uint64_t v33 = a3;
  uint64_t v34 = type metadata accessor for Proto4_TaggedValue(0);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto4_Optional(0);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto4_Reference(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C4496858();
  uint64_t v31 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8F0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (uint64_t *)((char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = a1 + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v17, &qword_1EA39C8F0);
  uint64_t v19 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v17, 1, v19);
  if (result != 1)
  {
    uint64_t v29 = v14;
    uint64_t v30 = v9;
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        return sub_1C4496B78();
      case 2u:
        sub_1C4496B98();
        return swift_bridgeObjectRelease();
      case 3u:
        uint64_t v21 = *v17;
        unint64_t v22 = v17[1];
        sub_1C4496B38();
        return sub_1C3F7E2CC(v21, v22);
      case 4u:
        uint64_t v23 = v31;
        uint64_t v24 = v29;
        (*(void (**)(char *, uint64_t *, uint64_t))(v31 + 32))(v29, v17, v12);
        sub_1C404BA6C((unint64_t *)&qword_1EA39AD60, MEMORY[0x1E4F70C60]);
        sub_1C4496BD8();
        return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v24, v12);
      case 5u:
        sub_1C404D5A4((uint64_t)v17, (uint64_t)v11, type metadata accessor for Proto4_Reference);
        sub_1C404BA6C(&qword_1EA39C720, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
        sub_1C4496BD8();
        uint64_t v25 = type metadata accessor for Proto4_Reference;
        goto LABEL_11;
      case 6u:
        sub_1C404D5A4((uint64_t)v17, (uint64_t)v8, type metadata accessor for Proto4_Optional);
        sub_1C404BA6C(&qword_1EA39C708, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
        sub_1C4496BD8();
        uint64_t v26 = type metadata accessor for Proto4_Optional;
        uint64_t v27 = (uint64_t)v8;
        goto LABEL_12;
      case 7u:
        uint64_t v11 = v32;
        sub_1C404D5A4((uint64_t)v17, (uint64_t)v32, type metadata accessor for Proto4_TaggedValue);
        sub_1C404BA6C(&qword_1EA39C6C8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
        sub_1C4496BD8();
        uint64_t v25 = type metadata accessor for Proto4_TaggedValue;
LABEL_11:
        uint64_t v26 = v25;
        uint64_t v27 = (uint64_t)v11;
LABEL_12:
        uint64_t result = sub_1C4049E78(v27, v26);
        break;
      default:
        uint64_t result = sub_1C4496B58();
        break;
    }
  }
  return result;
}

BOOL sub_1C402DDDC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v25 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C918);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8F0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = a1 + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v17, (uint64_t)v16, &qword_1EA39C8F0);
  uint64_t v18 = a2 + OBJC_IVAR____TtCV9Coherence12Proto4_ValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1C3F970C4((uint64_t)v16, (uint64_t)v10, &qword_1EA39C8F0);
  sub_1C3F970C4(v18, v19, &qword_1EA39C8F0);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v10, 1, v4) == 1)
  {
    sub_1C3F962E0((uint64_t)v16, &qword_1EA39C8F0);
    if (v20(v19, 1, v4) == 1)
    {
      sub_1C3F962E0((uint64_t)v10, &qword_1EA39C8F0);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1C3F970C4((uint64_t)v10, (uint64_t)v14, &qword_1EA39C8F0);
  if (v20(v19, 1, v4) == 1)
  {
    sub_1C3F962E0((uint64_t)v16, &qword_1EA39C8F0);
    sub_1C4049E78((uint64_t)v14, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
LABEL_6:
    sub_1C3F962E0((uint64_t)v10, &qword_1EA39C918);
    return 0;
  }
  uint64_t v21 = v25;
  sub_1C404D5A4(v19, v25, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
  char v22 = sub_1C404E3DC((uint64_t)v14, v21);
  sub_1C4049E78(v21, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
  sub_1C3F962E0((uint64_t)v16, &qword_1EA39C8F0);
  sub_1C4049E78((uint64_t)v14, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
  sub_1C3F962E0((uint64_t)v10, &qword_1EA39C8F0);
  return (v22 & 1) != 0;
}

uint64_t sub_1C402E13C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B8D0, &qword_1EA39C230, a2);
}

uint64_t sub_1C402E160()
{
  return 0x562E346F746F7250;
}

uint64_t sub_1C402E180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C402BA38(a1, a2, a3);
}

uint64_t sub_1C402E198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Value, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C402D7E8);
}

uint64_t sub_1C402E1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C8E8, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C402E254(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Value, (uint64_t (*)(uint64_t, uint64_t))sub_1C402DDDC) & 1;
}

uint64_t sub_1C402E298@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B8C8, (uint64_t)qword_1EA3B8A30, a1);
}

uint64_t sub_1C402E2BC(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C402E328()
{
  sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
  return sub_1C4496AC8();
}

uint64_t sub_1C402E3A4()
{
  sub_1C404BA6C(&qword_1EA39C8E8, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
  return sub_1C44968D8();
}

uint64_t sub_1C402E428()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8A48);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8A48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1C449BDE0;
  unint64_t v4 = v24 + v3;
  unint64_t v5 = v24 + v3 + v1[14];
  *(void *)(v24 + v3) = 1;
  *(void *)unint64_t v5 = "register";
  *(void *)(v5 + 8) = 8;
  *(unsigned char *)(v5 + 16) = 2;
  uint64_t v6 = *MEMORY[0x1E4F70FB8];
  uint64_t v7 = sub_1C4496BE8();
  uint64_t v8 = *(void (**)(void))(*(void *)(v7 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v8)(v5, v6, v7);
  unint64_t v9 = v4 + v2 + v1[14];
  *(void *)(v4 + v2) = 2;
  *(void *)unint64_t v9 = "set";
  *(void *)(v9 + 8) = 3;
  *(unsigned char *)(v9 + 16) = 2;
  v8();
  uint64_t v10 = (void *)(v4 + 2 * v2);
  uint64_t v11 = (char *)v10 + v1[14];
  *uint64_t v10 = 3;
  *(void *)uint64_t v11 = "dictionary";
  *((void *)v11 + 1) = 10;
  v11[16] = 2;
  v8();
  uint64_t v12 = (void *)(v4 + 3 * v2);
  uint64_t v13 = (char *)v12 + v1[14];
  *uint64_t v12 = 4;
  *(void *)uint64_t v13 = "composite";
  *((void *)v13 + 1) = 9;
  v13[16] = 2;
  v8();
  uint64_t v14 = (void *)(v4 + 4 * v2);
  uint64_t v15 = (char *)v14 + v1[14];
  *uint64_t v14 = 5;
  *(void *)uint64_t v15 = "string";
  *((void *)v15 + 1) = 6;
  v15[16] = 2;
  v8();
  uint64_t v16 = (void *)(v4 + 5 * v2);
  uint64_t v17 = (char *)v16 + v1[14];
  *uint64_t v16 = 6;
  *(void *)uint64_t v17 = "array";
  *((void *)v17 + 1) = 5;
  v17[16] = 2;
  v8();
  uint64_t v18 = (void *)(v4 + 6 * v2);
  uint64_t v19 = (char *)v18 + v1[14];
  *uint64_t v18 = 7;
  *(void *)uint64_t v19 = "counter";
  *((void *)v19 + 1) = 7;
  v19[16] = 2;
  v8();
  uint64_t v20 = (void *)(v4 + 7 * v2);
  uint64_t v21 = (char *)v20 + v1[14];
  *uint64_t v20 = 8;
  *(void *)uint64_t v21 = "taggedCRDT";
  *((void *)v21 + 1) = 10;
  unsigned char v21[16] = 2;
  v8();
  uint64_t v22 = v4 + 8 * v2 + v1[14];
  *(void *)(v4 + 8 * v2) = 9;
  *(void *)uint64_t v22 = "customCRDT";
  *(void *)(v22 + 8) = 10;
  *(unsigned char *)(v22 + 16) = 2;
  v8();
  return sub_1C4496BF8();
}

uint64_t sub_1C402E794(uint64_t a1)
{
  return sub_1C402E7D0(a1, (void (*)(void))type metadata accessor for Proto4_CRDT._StorageClass, &OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf, &qword_1EA39C238);
}

uint64_t sub_1C402E7D0(uint64_t a1, void (*a2)(void), void *a3, uint64_t (*a4)(void), uint64_t *a5)
{
  a2(0);
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = v8 + *a3;
  uint64_t v10 = a4(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *a5 = v8;
  return result;
}

uint64_t sub_1C402E86C()
{
  return sub_1C3F5E2CC(&OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf, &qword_1EA39C948);
}

uint64_t sub_1C402E880()
{
  return type metadata accessor for Proto4_CRDT._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_CRDT._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C2F8);
}

void sub_1C402E8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C548);
}

uint64_t sub_1C402E8E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C948);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(int *)(type metadata accessor for Proto4_CRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v12 = *(void *)(v3 + v11);
    type metadata accessor for Proto4_CRDT._StorageClass(0);
    uint64_t v13 = swift_allocObject();
    uint64_t v25 = v4;
    uint64_t v14 = v13;
    uint64_t v24 = a1;
    uint64_t v15 = a2;
    uint64_t v16 = a3;
    uint64_t v17 = v13 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    uint64_t v18 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    uint64_t v19 = v12 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v19, (uint64_t)v10, &qword_1EA39C948);
    swift_beginAccess();
    uint64_t v20 = v17;
    a3 = v16;
    a2 = v15;
    a1 = v24;
    sub_1C3F98338((uint64_t)v10, v20, &qword_1EA39C948);
    swift_endAccess();
    *(void *)(v3 + v11) = v14;
    swift_release();
  }
  uint64_t v21 = swift_retain();
  sub_1C402EAC0(v21, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C402EAC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v381 = a1;
  uint64_t v383 = a4;
  uint64_t v379 = type metadata accessor for Proto4_CustomCRDT(0);
  uint64_t v369 = *(void (***)(uint64_t, void, uint64_t, uint64_t))(v379 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v379);
  uint64_t v343 = (char *)&v290 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v312 = (uint64_t)&v290 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C950);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v334 = (uint64_t)&v290 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v371 = (uint64_t)&v290 - v12;
  uint64_t v370 = type metadata accessor for Proto4_TaggedCRDT(0);
  unint64_t v360 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v370 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v370);
  v342 = (char *)&v290 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v311 = (uint64_t)&v290 - v15;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C958);
  uint64_t v17 = MEMORY[0x1F4188790](v16 - 8);
  uint64_t v336 = (uint64_t)&v290 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v353 = (char *)&v290 - v19;
  uint64_t v365 = type metadata accessor for Proto4_Counter(0);
  unint64_t v359 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v365 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v365);
  uint64_t v315 = (uint64_t)&v290 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v305 = (uint64_t)&v290 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C960);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  uint64_t v335 = (uint64_t)&v290 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v363 = (uint64_t)&v290 - v26;
  uint64_t v372 = type metadata accessor for Proto4_Sequence(0);
  unint64_t v358 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v372 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v372);
  uint64_t v341 = (char *)&v290 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v310 = (uint64_t)&v290 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  unint64_t v340 = (char *)&v290 - v32;
  MEMORY[0x1F4188790](v31);
  uint64_t v309 = (uint64_t)&v290 - v33;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C968);
  uint64_t v35 = MEMORY[0x1F4188790](v34 - 8);
  uint64_t v333 = (uint64_t)&v290 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v362 = (uint64_t)&v290 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v332 = (uint64_t)&v290 - v40;
  MEMORY[0x1F4188790](v39);
  uint64_t v361 = (uint64_t)&v290 - v41;
  uint64_t v374 = type metadata accessor for Proto4_Struct(0);
  uint64_t v357 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v374 - 8);
  uint64_t v42 = MEMORY[0x1F4188790](v374);
  uint64_t v339 = (char *)&v290 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v308 = (uint64_t)&v290 - v44;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C970);
  uint64_t v46 = MEMORY[0x1F4188790](v45 - 8);
  uint64_t v331 = (uint64_t)&v290 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v46);
  uint64_t v368 = (uint64_t)&v290 - v48;
  uint64_t v376 = type metadata accessor for Proto4_Set(0);
  uint64_t v356 = *(void (***)(uint64_t, uint64_t, uint64_t, uint64_t))(v376 - 8);
  uint64_t v49 = MEMORY[0x1F4188790](v376);
  v338 = (char *)&v290 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  uint64_t v307 = (uint64_t)&v290 - v52;
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  char v337 = (char *)&v290 - v54;
  MEMORY[0x1F4188790](v53);
  uint64_t v306 = (uint64_t)&v290 - v55;
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C978);
  uint64_t v57 = MEMORY[0x1F4188790](v56 - 8);
  uint64_t v330 = (uint64_t)&v290 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = MEMORY[0x1F4188790](v57);
  uint64_t v367 = (uint64_t)&v290 - v60;
  uint64_t v61 = MEMORY[0x1F4188790](v59);
  uint64_t v329 = (uint64_t)&v290 - v62;
  MEMORY[0x1F4188790](v61);
  uint64_t v366 = (uint64_t)&v290 - v63;
  uint64_t v364 = type metadata accessor for Proto4_Register(0);
  v355 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v364 - 8);
  uint64_t v64 = MEMORY[0x1F4188790](v364);
  uint64_t v314 = (uint64_t)&v290 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v64);
  uint64_t v304 = (uint64_t)&v290 - v66;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C948);
  uint64_t v68 = MEMORY[0x1F4188790](v67 - 8);
  uint64_t v352 = (uint64_t)&v290 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = MEMORY[0x1F4188790](v68);
  uint64_t v351 = (uint64_t)&v290 - v71;
  uint64_t v72 = MEMORY[0x1F4188790](v70);
  uint64_t v350 = (uint64_t)&v290 - v73;
  uint64_t v74 = MEMORY[0x1F4188790](v72);
  uint64_t v349 = (uint64_t)&v290 - v75;
  uint64_t v76 = MEMORY[0x1F4188790](v74);
  uint64_t v348 = (uint64_t)&v290 - v77;
  uint64_t v78 = MEMORY[0x1F4188790](v76);
  uint64_t v347 = (uint64_t)&v290 - v79;
  uint64_t v80 = MEMORY[0x1F4188790](v78);
  uint64_t v346 = (uint64_t)&v290 - v81;
  uint64_t v82 = MEMORY[0x1F4188790](v80);
  uint64_t v345 = (uint64_t)&v290 - v83;
  uint64_t v84 = MEMORY[0x1F4188790](v82);
  uint64_t v373 = (uint64_t)&v290 - v85;
  uint64_t v86 = MEMORY[0x1F4188790](v84);
  uint64_t v375 = (uint64_t)&v290 - v87;
  MEMORY[0x1F4188790](v86);
  uint64_t v344 = (uint64_t)&v290 - v88;
  uint64_t v380 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
  uint64_t v354 = *(void (***)(char *, uint64_t, uint64_t, uint64_t))(v380 - 8);
  uint64_t v89 = MEMORY[0x1F4188790](v380);
  uint64_t v321 = (uint64_t)&v290 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = MEMORY[0x1F4188790](v89);
  uint64_t v327 = (uint64_t)&v290 - v92;
  uint64_t v93 = MEMORY[0x1F4188790](v91);
  uint64_t v320 = (uint64_t)&v290 - v94;
  uint64_t v95 = MEMORY[0x1F4188790](v93);
  uint64_t v326 = (uint64_t)&v290 - v96;
  uint64_t v97 = MEMORY[0x1F4188790](v95);
  uint64_t v319 = (uint64_t)&v290 - v98;
  uint64_t v99 = MEMORY[0x1F4188790](v97);
  uint64_t v325 = (uint64_t)&v290 - v100;
  uint64_t v101 = MEMORY[0x1F4188790](v99);
  uint64_t v318 = (uint64_t)&v290 - v102;
  uint64_t v103 = MEMORY[0x1F4188790](v101);
  uint64_t v324 = (uint64_t)&v290 - v104;
  uint64_t v105 = MEMORY[0x1F4188790](v103);
  uint64_t v317 = (uint64_t)&v290 - v106;
  uint64_t v107 = MEMORY[0x1F4188790](v105);
  uint64_t v323 = (uint64_t)&v290 - v108;
  uint64_t v109 = MEMORY[0x1F4188790](v107);
  uint64_t v316 = (uint64_t)&v290 - v110;
  uint64_t v111 = MEMORY[0x1F4188790](v109);
  uint64_t v113 = (char *)&v290 - v112;
  uint64_t v114 = MEMORY[0x1F4188790](v111);
  uint64_t v116 = (char *)&v290 - v115;
  uint64_t v117 = MEMORY[0x1F4188790](v114);
  uint64_t v119 = (char *)&v290 - v118;
  uint64_t v120 = MEMORY[0x1F4188790](v117);
  uint64_t v122 = (char *)&v290 - v121;
  uint64_t v123 = MEMORY[0x1F4188790](v120);
  uint64_t v322 = (uint64_t)&v290 - v124;
  uint64_t v125 = MEMORY[0x1F4188790](v123);
  uint64_t v127 = (char *)&v290 - v126;
  MEMORY[0x1F4188790](v125);
  uint64_t v129 = (char *)&v290 - v128;
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C980);
  uint64_t v131 = MEMORY[0x1F4188790](v130 - 8);
  uint64_t v328 = (uint64_t)&v290 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v131);
  uint64_t v134 = (char *)&v290 - v133;
  uint64_t v377 = v381 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v135 = v382;
  uint64_t v381 = a2;
  uint64_t v382 = a3;
  uint64_t result = sub_1C4496908();
  if (!v135)
  {
    unint64_t v313 = v134;
    uint64_t v294 = v129;
    uint64_t v291 = v127;
    uint64_t v292 = v122;
    uint64_t v295 = v119;
    uint64_t v293 = v116;
    uint64_t v296 = v113;
    v303 = v369 + 7;
    uint64_t v378 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v354 + 6);
    uint64_t v300 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v369 + 6);
    uint64_t v369 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v354 + 7);
    uint64_t v354 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v360 + 7);
    BOOL v299 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v360 + 6);
    char v302 = v359 + 7;
    uint64_t v298 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v359 + 6);
    unint64_t v360 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v358 + 7);
    v358 += 6;
    unint64_t v301 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v357 + 7);
    uint64_t v297 = v357 + 6;
    unint64_t v359 = v356 + 7;
    uint64_t v357 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v356 + 6);
    uint64_t v356 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v355 + 7);
    v355 += 6;
    uint64_t v138 = v379;
    uint64_t v139 = v374;
    uint64_t v141 = v376;
    uint64_t v140 = v377;
    while (1)
    {
      if (v137) {
        return result;
      }
      switch(result)
      {
        case 1:
          uint64_t v145 = v139;
          uint64_t v146 = *v356;
          (*v356)((uint64_t)v313, 1, 1, v364);
          uint64_t v147 = v344;
          sub_1C3F970C4(v140, v344, &qword_1EA39C948);
          if ((*v378)(v147, 1, v380) == 1)
          {
            sub_1C3F962E0(v147, &qword_1EA39C948);
LABEL_28:
            uint64_t v179 = v375;
            uint64_t v180 = (uint64_t)v313;
            goto LABEL_29;
          }
          uint64_t v177 = (uint64_t)v294;
          sub_1C404D5A4(v147, (uint64_t)v294, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
          sub_1C4496918();
          uint64_t v178 = (uint64_t)v291;
          sub_1C404D5A4(v177, (uint64_t)v291, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
          if (swift_getEnumCaseMultiPayload())
          {
            sub_1C4049E78(v178, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            goto LABEL_28;
          }
          uint64_t v180 = (uint64_t)v313;
          sub_1C3F962E0((uint64_t)v313, &qword_1EA39C980);
          uint64_t v289 = v304;
          sub_1C404D5A4(v178, v304, type metadata accessor for Proto4_Register);
          uint64_t v138 = v379;
          sub_1C404D5A4(v289, v180, type metadata accessor for Proto4_Register);
          v146(v180, 0, 1, v364);
          uint64_t v179 = v375;
LABEL_29:
          sub_1C404BA6C(&qword_1EA39C7D0, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
          uint64_t v181 = v364;
          sub_1C4496A78();
          uint64_t v182 = v180;
          uint64_t v183 = v328;
          sub_1C3F961BC(v182, v328, &qword_1EA39C980);
          if ((*v355)(v183, 1, v181) == 1)
          {
            sub_1C3F962E0(v183, &qword_1EA39C980);
            uint64_t v140 = v377;
          }
          else
          {
            uint64_t v237 = v314;
            sub_1C404D5A4(v183, v314, type metadata accessor for Proto4_Register);
            uint64_t v138 = v379;
            sub_1C404D5A4(v237, v179, type metadata accessor for Proto4_Register);
            uint64_t v238 = v380;
            swift_storeEnumTagMultiPayload();
            (*v369)(v179, 0, 1, v238);
            uint64_t v239 = v373;
            sub_1C3F961BC(v179, v373, &qword_1EA39C948);
            uint64_t v140 = v377;
            swift_beginAccess();
            sub_1C3F98338(v239, v140, &qword_1EA39C948);
            swift_endAccess();
          }
          uint64_t v139 = v145;
          uint64_t v141 = v376;
LABEL_5:
          uint64_t result = sub_1C4496908();
          break;
        case 2:
          uint64_t v148 = v140;
          uint64_t v149 = v139;
          uint64_t v150 = *v359;
          (*v359)(v366, 1, 1, v141);
          uint64_t v151 = v148;
          uint64_t v152 = v148;
          uint64_t v153 = v345;
          sub_1C3F970C4(v152, v345, &qword_1EA39C948);
          if ((*v378)(v153, 1, v380) == 1)
          {
            sub_1C3F962E0(v153, &qword_1EA39C948);
          }
          else
          {
            uint64_t v184 = v322;
            sub_1C404D5A4(v153, v322, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v185 = (uint64_t)v292;
            sub_1C404D5A4(v184, (uint64_t)v292, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              uint64_t v186 = v185;
              uint64_t v187 = v366;
              sub_1C3F962E0(v366, &qword_1EA39C978);
              uint64_t v188 = v186;
              uint64_t v189 = v306;
              sub_1C404D5A4(v188, v306, type metadata accessor for Proto4_Set);
              uint64_t v138 = v379;
              sub_1C404D5A4(v189, v187, type metadata accessor for Proto4_Set);
              v150(v187, 0, 1, v141);
              uint64_t v190 = (uint64_t)v337;
              goto LABEL_54;
            }
            sub_1C4049E78(v185, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
          }
          uint64_t v190 = (uint64_t)v337;
LABEL_54:
          sub_1C404BA6C(&qword_1EA39C790, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
          uint64_t v240 = v366;
          sub_1C4496A78();
          uint64_t v241 = v240;
          uint64_t v242 = v329;
          sub_1C3F961BC(v241, v329, &qword_1EA39C978);
          if ((*v357)(v242, 1, v141) == 1)
          {
            sub_1C3F962E0(v242, &qword_1EA39C978);
          }
          else
          {
            sub_1C404D5A4(v242, v190, type metadata accessor for Proto4_Set);
            uint64_t v243 = v375;
            uint64_t v138 = v379;
            sub_1C404D5A4(v190, v375, type metadata accessor for Proto4_Set);
            uint64_t v244 = v380;
            swift_storeEnumTagMultiPayload();
            (*v369)(v243, 0, 1, v244);
            uint64_t v245 = v243;
            uint64_t v246 = v373;
            sub_1C3F961BC(v245, v373, &qword_1EA39C948);
            swift_beginAccess();
            sub_1C3F98338(v246, v151, &qword_1EA39C948);
            swift_endAccess();
          }
          uint64_t v139 = v149;
          uint64_t v140 = v151;
          goto LABEL_5;
        case 3:
          uint64_t v154 = *v359;
          (*v359)(v367, 1, 1, v141);
          uint64_t v155 = v346;
          sub_1C3F970C4(v140, v346, &qword_1EA39C948);
          if ((*v378)(v155, 1, v380) == 1)
          {
            sub_1C3F962E0(v155, &qword_1EA39C948);
            uint64_t v156 = (uint64_t)v338;
          }
          else
          {
            uint64_t v191 = (uint64_t)v295;
            sub_1C404D5A4(v155, (uint64_t)v295, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v192 = (uint64_t)v293;
            sub_1C404D5A4(v191, (uint64_t)v293, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 2)
            {
              uint64_t v193 = v192;
              uint64_t v194 = v367;
              sub_1C3F962E0(v367, &qword_1EA39C978);
              uint64_t v195 = v193;
              uint64_t v196 = v307;
              sub_1C404D5A4(v195, v307, type metadata accessor for Proto4_Set);
              uint64_t v138 = v379;
              sub_1C404D5A4(v196, v194, type metadata accessor for Proto4_Set);
              v154(v194, 0, 1, v141);
            }
            else
            {
              sub_1C4049E78(v192, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            }
            uint64_t v156 = (uint64_t)v338;
            uint64_t v140 = v377;
          }
          sub_1C404BA6C(&qword_1EA39C790, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
          uint64_t v247 = v367;
          sub_1C4496A78();
          uint64_t v248 = v247;
          uint64_t v249 = v330;
          sub_1C3F961BC(v248, v330, &qword_1EA39C978);
          if ((*v357)(v249, 1, v141) == 1)
          {
            sub_1C3F962E0(v249, &qword_1EA39C978);
            goto LABEL_77;
          }
          sub_1C404D5A4(v249, v156, type metadata accessor for Proto4_Set);
          uint64_t v250 = v375;
          uint64_t v138 = v379;
          sub_1C404D5A4(v156, v375, type metadata accessor for Proto4_Set);
          uint64_t v251 = v380;
          swift_storeEnumTagMultiPayload();
          (*v369)(v250, 0, 1, v251);
          uint64_t v252 = v250;
          uint64_t v253 = v373;
          sub_1C3F961BC(v252, v373, &qword_1EA39C948);
          swift_beginAccess();
          uint64_t v254 = v253;
          uint64_t v255 = v140;
          goto LABEL_76;
        case 4:
          uint64_t v157 = *v301;
          (*v301)(v368, 1, 1, v139);
          uint64_t v158 = v140;
          uint64_t v159 = v140;
          uint64_t v160 = v347;
          sub_1C3F970C4(v159, v347, &qword_1EA39C948);
          if ((*v378)(v160, 1, v380) == 1)
          {
            sub_1C3F962E0(v160, &qword_1EA39C948);
          }
          else
          {
            uint64_t v197 = v160;
            uint64_t v198 = (uint64_t)v296;
            sub_1C404D5A4(v197, (uint64_t)v296, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v199 = v316;
            sub_1C404D5A4(v198, v316, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 3)
            {
              uint64_t v200 = v368;
              sub_1C3F962E0(v368, &qword_1EA39C970);
              uint64_t v201 = v199;
              uint64_t v202 = v308;
              sub_1C404D5A4(v201, v308, type metadata accessor for Proto4_Struct);
              uint64_t v138 = v379;
              sub_1C404D5A4(v202, v200, type metadata accessor for Proto4_Struct);
              v157(v200, 0, 1, v139);
            }
            else
            {
              sub_1C4049E78(v199, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            }
          }
          uint64_t v256 = (uint64_t)v339;
          sub_1C404BA6C(&qword_1EA39C758, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
          uint64_t v257 = v368;
          sub_1C4496A78();
          uint64_t v258 = v257;
          uint64_t v259 = v331;
          sub_1C3F961BC(v258, v331, &qword_1EA39C970);
          if ((*v297)(v259, 1, v139) == 1)
          {
            sub_1C3F962E0(v259, &qword_1EA39C970);
            goto LABEL_81;
          }
          sub_1C404D5A4(v259, v256, type metadata accessor for Proto4_Struct);
          uint64_t v260 = v375;
          uint64_t v138 = v379;
          sub_1C404D5A4(v256, v375, type metadata accessor for Proto4_Struct);
          uint64_t v261 = v380;
          swift_storeEnumTagMultiPayload();
          (*v369)(v260, 0, 1, v261);
          uint64_t v262 = v373;
          sub_1C3F961BC(v260, v373, &qword_1EA39C948);
          swift_beginAccess();
          uint64_t v140 = v158;
          sub_1C3F98338(v262, v158, &qword_1EA39C948);
          swift_endAccess();
          uint64_t v141 = v376;
          goto LABEL_5;
        case 5:
          uint64_t v161 = *v360;
          (*v360)(v361, 1, 1, v372);
          uint64_t v162 = v348;
          sub_1C3F970C4(v140, v348, &qword_1EA39C948);
          if ((*v378)(v162, 1, v380) == 1)
          {
            sub_1C3F962E0(v162, &qword_1EA39C948);
          }
          else
          {
            uint64_t v203 = v323;
            sub_1C404D5A4(v162, v323, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v204 = v317;
            sub_1C404D5A4(v203, v317, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 4)
            {
              uint64_t v205 = v361;
              sub_1C3F962E0(v361, &qword_1EA39C968);
              uint64_t v206 = v204;
              uint64_t v207 = v309;
              sub_1C404D5A4(v206, v309, type metadata accessor for Proto4_Sequence);
              sub_1C404D5A4(v207, v205, type metadata accessor for Proto4_Sequence);
              v161(v205, 0, 1, v372);
              uint64_t v208 = (uint64_t)v340;
              goto LABEL_68;
            }
            sub_1C4049E78(v204, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
          }
          uint64_t v208 = (uint64_t)v340;
          uint64_t v205 = v361;
LABEL_68:
          sub_1C404BA6C(&qword_1EA39C670, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
          uint64_t v263 = v372;
          sub_1C4496A78();
          uint64_t v264 = v332;
          sub_1C3F961BC(v205, v332, &qword_1EA39C968);
          if ((*v358)(v264, 1, v263) == 1)
          {
            sub_1C3F962E0(v264, &qword_1EA39C968);
            uint64_t v139 = v374;
            uint64_t v138 = v379;
            uint64_t v141 = v376;
            uint64_t v140 = v377;
            goto LABEL_5;
          }
          sub_1C404D5A4(v264, v208, type metadata accessor for Proto4_Sequence);
          uint64_t v265 = v375;
          uint64_t v138 = v379;
          sub_1C404D5A4(v208, v375, type metadata accessor for Proto4_Sequence);
          uint64_t v266 = v380;
          swift_storeEnumTagMultiPayload();
          (*v369)(v265, 0, 1, v266);
          uint64_t v267 = v373;
          sub_1C3F961BC(v265, v373, &qword_1EA39C948);
          uint64_t v140 = v377;
          swift_beginAccess();
          sub_1C3F98338(v267, v140, &qword_1EA39C948);
          swift_endAccess();
          uint64_t v139 = v374;
          goto LABEL_83;
        case 6:
          uint64_t v163 = *v360;
          (*v360)(v362, 1, 1, v372);
          uint64_t v164 = v349;
          sub_1C3F970C4(v140, v349, &qword_1EA39C948);
          uint64_t v165 = v140;
          if ((*v378)(v164, 1, v380) == 1)
          {
            sub_1C3F962E0(v164, &qword_1EA39C948);
          }
          else
          {
            uint64_t v209 = v324;
            sub_1C404D5A4(v164, v324, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v210 = v318;
            sub_1C404D5A4(v209, v318, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 5)
            {
              uint64_t v211 = v362;
              sub_1C3F962E0(v362, &qword_1EA39C968);
              uint64_t v212 = v210;
              uint64_t v213 = v310;
              sub_1C404D5A4(v212, v310, type metadata accessor for Proto4_Sequence);
              uint64_t v138 = v379;
              sub_1C404D5A4(v213, v211, type metadata accessor for Proto4_Sequence);
              uint64_t v214 = v372;
              v163(v211, 0, 1, v372);
              uint64_t v215 = (uint64_t)v341;
              goto LABEL_73;
            }
            sub_1C4049E78(v210, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
          }
          uint64_t v215 = (uint64_t)v341;
          uint64_t v211 = v362;
          uint64_t v214 = v372;
LABEL_73:
          sub_1C404BA6C(&qword_1EA39C670, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
          sub_1C4496A78();
          uint64_t v268 = v211;
          uint64_t v269 = v214;
          uint64_t v270 = v333;
          sub_1C3F961BC(v268, v333, &qword_1EA39C968);
          if ((*v358)(v270, 1, v269) == 1)
          {
            sub_1C3F962E0(v270, &qword_1EA39C968);
            uint64_t v139 = v374;
            uint64_t v140 = v165;
          }
          else
          {
            sub_1C404D5A4(v270, v215, type metadata accessor for Proto4_Sequence);
            uint64_t v271 = v375;
            uint64_t v138 = v379;
            sub_1C404D5A4(v215, v375, type metadata accessor for Proto4_Sequence);
            uint64_t v272 = v380;
            swift_storeEnumTagMultiPayload();
            (*v369)(v271, 0, 1, v272);
            uint64_t v273 = v271;
            uint64_t v274 = v373;
            sub_1C3F961BC(v273, v373, &qword_1EA39C948);
            uint64_t v140 = v165;
            swift_beginAccess();
            uint64_t v254 = v274;
            uint64_t v255 = v165;
LABEL_76:
            sub_1C3F98338(v254, v255, &qword_1EA39C948);
            swift_endAccess();
LABEL_77:
            uint64_t v139 = v374;
          }
          goto LABEL_5;
        case 7:
          uint64_t v166 = *v302;
          (*v302)(v363, 1, 1, v365);
          uint64_t v167 = v350;
          sub_1C3F970C4(v140, v350, &qword_1EA39C948);
          if ((*v378)(v167, 1, v380) == 1)
          {
            uint64_t v158 = v140;
            uint64_t v168 = v138;
            sub_1C3F962E0(v167, &qword_1EA39C948);
            uint64_t v169 = v375;
            uint64_t v170 = v363;
          }
          else
          {
            uint64_t v216 = v325;
            sub_1C404D5A4(v167, v325, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v217 = v319;
            sub_1C404D5A4(v216, v319, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v170 = v363;
            if (EnumCaseMultiPayload == 6)
            {
              sub_1C3F962E0(v363, &qword_1EA39C960);
              uint64_t v219 = v217;
              uint64_t v220 = v305;
              sub_1C404D5A4(v219, v305, type metadata accessor for Proto4_Counter);
              uint64_t v168 = v379;
              sub_1C404D5A4(v220, v170, type metadata accessor for Proto4_Counter);
              v166(v170, 0, 1, v365);
            }
            else
            {
              uint64_t v168 = v138;
              sub_1C4049E78(v217, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            }
            uint64_t v169 = v375;
            uint64_t v158 = v377;
          }
          sub_1C404BA6C(&qword_1EA39C7B0, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
          uint64_t v275 = v365;
          sub_1C4496A78();
          uint64_t v276 = v170;
          uint64_t v277 = v335;
          sub_1C3F961BC(v276, v335, &qword_1EA39C960);
          if ((*v298)(v277, 1, v275) == 1)
          {
            sub_1C3F962E0(v277, &qword_1EA39C960);
            uint64_t v138 = v168;
LABEL_81:
            uint64_t v141 = v376;
            uint64_t v140 = v158;
          }
          else
          {
            uint64_t v278 = v315;
            sub_1C404D5A4(v277, v315, type metadata accessor for Proto4_Counter);
            uint64_t v138 = v379;
            sub_1C404D5A4(v278, v169, type metadata accessor for Proto4_Counter);
            uint64_t v279 = v380;
            swift_storeEnumTagMultiPayload();
            uint64_t v140 = v377;
            (*v369)(v169, 0, 1, v279);
            uint64_t v280 = v373;
            sub_1C3F961BC(v169, v373, &qword_1EA39C948);
            swift_beginAccess();
            sub_1C3F98338(v280, v140, &qword_1EA39C948);
            swift_endAccess();
LABEL_83:
            uint64_t v141 = v376;
          }
          goto LABEL_5;
        case 8:
          uint64_t v171 = *v354;
          uint64_t v172 = (uint64_t)v353;
          (*v354)(v353, 1, 1, v370);
          uint64_t v173 = v140;
          uint64_t v174 = v351;
          sub_1C3F970C4(v173, v351, &qword_1EA39C948);
          if ((*v378)(v174, 1, v380) == 1)
          {
            sub_1C3F962E0(v174, &qword_1EA39C948);
          }
          else
          {
            uint64_t v221 = v174;
            uint64_t v222 = v326;
            sub_1C404D5A4(v221, v326, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            sub_1C4496918();
            uint64_t v223 = v222;
            uint64_t v224 = v320;
            sub_1C404D5A4(v223, v320, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
            if (swift_getEnumCaseMultiPayload() == 7)
            {
              sub_1C3F962E0(v172, &qword_1EA39C958);
              uint64_t v225 = v224;
              uint64_t v226 = v311;
              sub_1C404D5A4(v225, v311, type metadata accessor for Proto4_TaggedCRDT);
              uint64_t v138 = v379;
              sub_1C404D5A4(v226, v172, type metadata accessor for Proto4_TaggedCRDT);
              v171((char *)v172, 0, 1, v370);
              uint64_t v227 = (uint64_t)v342;
              goto LABEL_86;
            }
            sub_1C4049E78(v224, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
          }
          uint64_t v227 = (uint64_t)v342;
LABEL_86:
          sub_1C404BA6C(&qword_1EA39C6E8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
          sub_1C4496A78();
          uint64_t v281 = v172;
          uint64_t v282 = v336;
          sub_1C3F961BC(v281, v336, &qword_1EA39C958);
          if ((*v299)(v282, 1, v370) == 1)
          {
            sub_1C3F962E0(v282, &qword_1EA39C958);
            uint64_t v139 = v374;
            uint64_t v141 = v376;
            uint64_t v140 = v377;
          }
          else
          {
            sub_1C404D5A4(v282, v227, type metadata accessor for Proto4_TaggedCRDT);
            uint64_t v283 = v375;
            uint64_t v284 = v379;
            sub_1C404D5A4(v227, v375, type metadata accessor for Proto4_TaggedCRDT);
            uint64_t v285 = v380;
            swift_storeEnumTagMultiPayload();
            (*v369)(v283, 0, 1, v285);
            uint64_t v286 = v373;
            sub_1C3F961BC(v283, v373, &qword_1EA39C948);
            uint64_t v287 = v377;
            swift_beginAccess();
            uint64_t v138 = v284;
            sub_1C3F98338(v286, v287, &qword_1EA39C948);
            swift_endAccess();
            uint64_t v140 = v287;
            uint64_t v139 = v374;
            uint64_t v141 = v376;
          }
          goto LABEL_5;
        case 9:
          unint64_t v175 = *v303;
          (*v303)(v371, 1, 1, v138);
          uint64_t v176 = v352;
          sub_1C3F970C4(v140, v352, &qword_1EA39C948);
          if ((*v378)(v176, 1, v380) == 1)
          {
            sub_1C3F962E0(v176, &qword_1EA39C948);
LABEL_49:
            uint64_t v236 = (uint64_t)v343;
            goto LABEL_90;
          }
          uint64_t v228 = v140;
          uint64_t v229 = v327;
          sub_1C404D5A4(v176, v327, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
          sub_1C4496918();
          uint64_t v230 = v321;
          sub_1C404D5A4(v229, v321, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
          if (swift_getEnumCaseMultiPayload() == 8)
          {
            sub_1C3F962E0(v371, &qword_1EA39C950);
            uint64_t v231 = v312;
            sub_1C404D5A4(v230, v312, type metadata accessor for Proto4_CustomCRDT);
            uint64_t v232 = v231;
            uint64_t v141 = v376;
            uint64_t v233 = v377;
            uint64_t v139 = v374;
            uint64_t v234 = v371;
            uint64_t v138 = v379;
            sub_1C404D5A4(v232, v371, type metadata accessor for Proto4_CustomCRDT);
            uint64_t v235 = v234;
            uint64_t v140 = v233;
            v175(v235, 0, 1, v138);
            goto LABEL_49;
          }
          sub_1C4049E78(v230, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
          uint64_t v236 = (uint64_t)v343;
          uint64_t v140 = v228;
LABEL_90:
          sub_1C404BA6C(&qword_1EA39C6A8, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
          sub_1C4496A78();
          uint64_t v288 = v334;
          sub_1C3F961BC(v371, v334, &qword_1EA39C950);
          if ((*v300)(v288, 1, v138) == 1)
          {
            sub_1C3F962E0(v288, &qword_1EA39C950);
          }
          else
          {
            sub_1C404D5A4(v288, v236, type metadata accessor for Proto4_CustomCRDT);
            uint64_t v142 = v375;
            uint64_t v138 = v379;
            sub_1C404D5A4(v236, v375, type metadata accessor for Proto4_CustomCRDT);
            uint64_t v143 = v380;
            swift_storeEnumTagMultiPayload();
            uint64_t v140 = v377;
            (*v369)(v142, 0, 1, v143);
            uint64_t v144 = v373;
            sub_1C3F961BC(v142, v373, &qword_1EA39C948);
            swift_beginAccess();
            sub_1C3F98338(v144, v140, &qword_1EA39C948);
            swift_endAccess();
          }
          goto LABEL_5;
        default:
          goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1C4031B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v41 = a2;
  uint64_t v37 = type metadata accessor for Proto4_CustomCRDT(0);
  MEMORY[0x1F4188790](v37);
  uint64_t v38 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = type metadata accessor for Proto4_TaggedCRDT(0);
  MEMORY[0x1F4188790](v35);
  uint64_t v36 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for Proto4_Counter(0);
  MEMORY[0x1F4188790](v33);
  uint64_t v34 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Proto4_Sequence(0);
  uint64_t v8 = MEMORY[0x1F4188790](v40);
  uint64_t v32 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v31 = (char *)&v31 - v10;
  uint64_t v11 = type metadata accessor for Proto4_Struct(0);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for Proto4_Set(0);
  uint64_t v14 = MEMORY[0x1F4188790](v39);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = type metadata accessor for Proto4_Register(0);
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C948);
  MEMORY[0x1F4188790](v22 - 8);
  uint64_t v24 = (char *)&v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = a1 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v25, (uint64_t)v24, &qword_1EA39C948);
  uint64_t v26 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v24, 1, v26);
  if (result != 1)
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_1C404D5A4((uint64_t)v24, (uint64_t)v18, type metadata accessor for Proto4_Set);
        sub_1C404BA6C(&qword_1EA39C790, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
        sub_1C4496BD8();
        uint64_t v29 = type metadata accessor for Proto4_Set;
        uint64_t v30 = (uint64_t)v18;
        goto LABEL_14;
      case 2u:
        sub_1C404D5A4((uint64_t)v24, (uint64_t)v16, type metadata accessor for Proto4_Set);
        sub_1C404BA6C(&qword_1EA39C790, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
        sub_1C4496BD8();
        uint64_t v29 = type metadata accessor for Proto4_Set;
        uint64_t v30 = (uint64_t)v16;
        goto LABEL_14;
      case 3u:
        sub_1C404D5A4((uint64_t)v24, (uint64_t)v13, type metadata accessor for Proto4_Struct);
        sub_1C404BA6C(&qword_1EA39C758, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
        sub_1C4496BD8();
        uint64_t v29 = type metadata accessor for Proto4_Struct;
        uint64_t v30 = (uint64_t)v13;
        goto LABEL_14;
      case 4u:
        uint64_t v21 = v31;
        sub_1C404D5A4((uint64_t)v24, (uint64_t)v31, type metadata accessor for Proto4_Sequence);
        sub_1C404BA6C(&qword_1EA39C670, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
        goto LABEL_9;
      case 5u:
        uint64_t v21 = v32;
        sub_1C404D5A4((uint64_t)v24, (uint64_t)v32, type metadata accessor for Proto4_Sequence);
        sub_1C404BA6C(&qword_1EA39C670, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
LABEL_9:
        sub_1C4496BD8();
        uint64_t v28 = type metadata accessor for Proto4_Sequence;
        goto LABEL_13;
      case 6u:
        uint64_t v21 = v34;
        sub_1C404D5A4((uint64_t)v24, (uint64_t)v34, type metadata accessor for Proto4_Counter);
        sub_1C404BA6C(&qword_1EA39C7B0, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
        sub_1C4496BD8();
        uint64_t v28 = type metadata accessor for Proto4_Counter;
        goto LABEL_13;
      case 7u:
        uint64_t v21 = v36;
        sub_1C404D5A4((uint64_t)v24, (uint64_t)v36, type metadata accessor for Proto4_TaggedCRDT);
        sub_1C404BA6C(&qword_1EA39C6E8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
        sub_1C4496BD8();
        uint64_t v28 = type metadata accessor for Proto4_TaggedCRDT;
        goto LABEL_13;
      case 8u:
        uint64_t v21 = v38;
        sub_1C404D5A4((uint64_t)v24, (uint64_t)v38, type metadata accessor for Proto4_CustomCRDT);
        sub_1C404BA6C(&qword_1EA39C6A8, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
        sub_1C4496BD8();
        uint64_t v28 = type metadata accessor for Proto4_CustomCRDT;
        goto LABEL_13;
      default:
        sub_1C404D5A4((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto4_Register);
        sub_1C404BA6C(&qword_1EA39C7D0, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
        sub_1C4496BD8();
        uint64_t v28 = type metadata accessor for Proto4_Register;
LABEL_13:
        uint64_t v29 = v28;
        uint64_t v30 = (uint64_t)v21;
LABEL_14:
        uint64_t result = sub_1C4049E78(v30, v29);
        break;
    }
  }
  return result;
}

BOOL sub_1C40323D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v25 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C988);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C948);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = a1 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v17, (uint64_t)v16, &qword_1EA39C948);
  uint64_t v18 = a2 + OBJC_IVAR____TtCV9Coherence11Proto4_CRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1C3F970C4((uint64_t)v16, (uint64_t)v10, &qword_1EA39C948);
  sub_1C3F970C4(v18, v19, &qword_1EA39C948);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v10, 1, v4) == 1)
  {
    sub_1C3F962E0((uint64_t)v16, &qword_1EA39C948);
    if (v20(v19, 1, v4) == 1)
    {
      sub_1C3F962E0((uint64_t)v10, &qword_1EA39C948);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1C3F970C4((uint64_t)v10, (uint64_t)v14, &qword_1EA39C948);
  if (v20(v19, 1, v4) == 1)
  {
    sub_1C3F962E0((uint64_t)v16, &qword_1EA39C948);
    sub_1C4049E78((uint64_t)v14, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
LABEL_6:
    sub_1C3F962E0((uint64_t)v10, &qword_1EA39C988);
    return 0;
  }
  uint64_t v21 = v25;
  sub_1C404D5A4(v19, v25, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
  char v22 = sub_1C404D60C((uint64_t)v14, v21);
  sub_1C4049E78(v21, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
  sub_1C3F962E0((uint64_t)v16, &qword_1EA39C948);
  sub_1C4049E78((uint64_t)v14, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
  sub_1C3F962E0((uint64_t)v10, &qword_1EA39C948);
  return (v22 & 1) != 0;
}

uint64_t sub_1C4032734@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B8E0, &qword_1EA39C238, a2);
}

uint64_t sub_1C4032758()
{
  return 0x432E346F746F7250;
}

uint64_t sub_1C4032778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C402E8E8(a1, a2, a3);
}

uint64_t sub_1C4032790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_CRDT, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4031B00);
}

uint64_t sub_1C40327D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C940, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C403284C(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_CRDT, (uint64_t (*)(uint64_t, uint64_t))sub_1C40323D4) & 1;
}

uint64_t sub_1C4032890@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B8D8, (uint64_t)qword_1EA3B8A48, a1);
}

uint64_t sub_1C40328B4(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C4032920()
{
  sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
  return sub_1C4496AC8();
}

uint64_t sub_1C403299C()
{
  sub_1C404BA6C(&qword_1EA39C940, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
  return sub_1C44968D8();
}

uint64_t sub_1C4032A20(uint64_t a1)
{
  return sub_1C4041028(a1, qword_1EA3B8A60, (uint64_t)"components", 10);
}

uint64_t sub_1C4032A38()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Proto4_Value(0),
        sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value),
        uint64_t result = sub_1C4496BC8(),
        !v1))
  {
    type metadata accessor for Proto4_KeyPath(0);
    return sub_1C4496878();
  }
  return result;
}

uint64_t sub_1C4032B24()
{
  return 0x4B2E346F746F7250;
}

uint64_t (*sub_1C4032B50())()
{
  return nullsub_1;
}

uint64_t sub_1C4032B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C4041184(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Value, &qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
}

uint64_t sub_1C4032BD0()
{
  return sub_1C4032A38();
}

uint64_t sub_1C4032BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9D0, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4032C64(char *a1)
{
  return sub_1C404137C(a1, sub_1C3FE94D0, type metadata accessor for Proto4_KeyPath) & 1;
}

uint64_t sub_1C4032CA8@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B8E8, (uint64_t)qword_1EA3B8A60, a1);
}

uint64_t sub_1C4032CCC(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C860, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C4032D38()
{
  sub_1C404BA6C(&qword_1EA39C860, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
  return sub_1C4496AC8();
}

uint64_t sub_1C4032DB4()
{
  sub_1C404BA6C(&qword_1EA39C9D0, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
  return sub_1C44968D8();
}

uint64_t sub_1C4032E38()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8A78);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8A78);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449B4A0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "uuid";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "counter";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C4032FF0()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_1C4496B38();
      if (!v1)
      {
LABEL_8:
        if (!v0[2] || (uint64_t result = sub_1C4496B58(), !v1))
        {
          type metadata accessor for Proto4_Timestamp(0);
          return sub_1C4496878();
        }
      }
      return result;
  }
}

uint64_t sub_1C4033108(uint64_t *a1)
{
  uint64_t v3 = sub_1C4496898();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  if ((sub_1C3FAD630(*v1, v1[1], *a1, a1[1]) & 1) != 0 && v1[2] == a1[2])
  {
    uint64_t v10 = type metadata accessor for Proto4_Timestamp(0);
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v11(v9, (char *)v1 + *(int *)(v10 + 24), v3);
    v11(v7, (char *)a1 + *(int *)(v10 + 24), v3);
    sub_1C404BA6C(&qword_1EA39BEF0, MEMORY[0x1E4F70E60]);
    char v12 = sub_1C4497178();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
    v13(v7, v3);
    v13(v9, v3);
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1C40332D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C4034650(0, a1);
}

unint64_t sub_1C40332D8()
{
  return 0xD000000000000010;
}

uint64_t (*sub_1C40332FC())()
{
  return nullsub_1;
}

uint64_t sub_1C4033320(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C40342B4(a1, a2, a3, MEMORY[0x1E4F70EE8]);
}

uint64_t sub_1C403334C()
{
  return sub_1C4032FF0();
}

uint64_t sub_1C4033364(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9D8, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C40333E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B8F0, (uint64_t)qword_1EA3B8A78, a1);
}

uint64_t sub_1C4033408(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C840, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C4033474()
{
  sub_1C404BA6C(&qword_1EA39C840, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
  return sub_1C4496AC8();
}

uint64_t sub_1C40334F0()
{
  sub_1C404BA6C(&qword_1EA39C9D8, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
  return sub_1C44968D8();
}

uint64_t sub_1C4033574()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8A90);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8A90);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449B4A0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "uuidIndex";
  *(void *)(v6 + 8) = 9;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "counter";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C403372C()
{
  uint64_t result = sub_1C4496908();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1) {
        sub_1C44969B8();
      }
      uint64_t result = sub_1C4496908();
    }
  }
  return result;
}

uint64_t sub_1C40337C0()
{
  if (!*v0 || (uint64_t result = sub_1C4496B58(), !v1))
  {
    if (!v0[1] || (uint64_t result = sub_1C4496B58(), !v1))
    {
      type metadata accessor for Proto4_IndexedTimestamp(0);
      return sub_1C4496878();
    }
  }
  return result;
}

uint64_t sub_1C403387C(char *a1)
{
  uint64_t v3 = sub_1C4496898();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  if (*(void *)v1 == *(void *)a1 && *((void *)v1 + 1) == *((void *)a1 + 1))
  {
    uint64_t v10 = type metadata accessor for Proto4_IndexedTimestamp(0);
    uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
    v11(v9, &v1[*(int *)(v10 + 24)], v3);
    v11(v7, &a1[*(int *)(v10 + 24)], v3);
    sub_1C404BA6C(&qword_1EA39BEF0, MEMORY[0x1E4F70E60]);
    char v12 = sub_1C4497178();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
    v13(v7, v3);
    v13(v9, v3);
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

unint64_t sub_1C4033A44()
{
  return 0xD000000000000017;
}

uint64_t sub_1C4033A60()
{
  return sub_1C403372C();
}

uint64_t sub_1C4033A78()
{
  return sub_1C40337C0();
}

uint64_t sub_1C4033A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9E0, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4033B10@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B8F8, (uint64_t)qword_1EA3B8A90, a1);
}

uint64_t sub_1C4033B34(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C820, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C4033BA0()
{
  sub_1C404BA6C(&qword_1EA39C820, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
  return sub_1C4496AC8();
}

uint64_t sub_1C4033C1C()
{
  sub_1C404BA6C(&qword_1EA39C9E0, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
  return sub_1C44968D8();
}

uint64_t sub_1C4033CA0(uint64_t a1)
{
  return sub_1C4041028(a1, qword_1EA3B8AA8, (uint64_t)"seen", 4);
}

uint64_t sub_1C4033CB8()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Proto4_Version.Seen(0),
        sub_1C404BA6C(&qword_1EA39C7E8, (void (*)(uint64_t))type metadata accessor for Proto4_Version.Seen),
        uint64_t result = sub_1C4496BC8(),
        !v1))
  {
    type metadata accessor for Proto4_Version(0);
    return sub_1C4496878();
  }
  return result;
}

uint64_t sub_1C4033DA4()
{
  return 0x562E346F746F7250;
}

uint64_t sub_1C4033DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C4041184(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Version.Seen, &qword_1EA39C7E8, (void (*)(uint64_t))type metadata accessor for Proto4_Version.Seen);
}

uint64_t sub_1C4033E24()
{
  return sub_1C4033CB8();
}

uint64_t sub_1C4033E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9E8, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4033EB8(char *a1)
{
  return sub_1C404137C(a1, sub_1C3FE96B4, type metadata accessor for Proto4_Version) & 1;
}

uint64_t sub_1C4033EFC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B900, (uint64_t)qword_1EA3B8AA8, a1);
}

uint64_t sub_1C4033F20(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C4033F8C()
{
  sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  return sub_1C4496AC8();
}

uint64_t sub_1C4034008()
{
  sub_1C404BA6C(&qword_1EA39C9E8, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  return sub_1C44968D8();
}

uint64_t sub_1C403408C()
{
  strcpy((char *)v1, "Proto4.Version");
  HIBYTE(v1[1]) = -18;
  uint64_t result = sub_1C4497268();
  qword_1EA3B8AC0 = v1[0];
  *(void *)algn_1EA3B8AC8 = v1[1];
  return result;
}

uint64_t sub_1C40340FC()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8AD0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8AD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449B4A0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "uuid";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "runs";
  *((void *)v10 + 1) = 4;
  v10[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C40342B4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  uint64_t result = sub_1C4496908();
  if (!v5)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 2)
      {
        a4(v4 + 16, a2, a3);
      }
      else if (result == 1)
      {
        sub_1C4496988();
      }
      uint64_t result = sub_1C4496908();
    }
  }
  return result;
}

uint64_t sub_1C4034360()
{
  uint64_t v2 = *v0;
  unint64_t v3 = v0[1];
  switch(v3 >> 62)
  {
    case 1uLL:
      if ((int)v2 != v2 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v2 + 16) != *(void *)(v2 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v3 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      uint64_t result = sub_1C4496B38();
      if (!v1)
      {
LABEL_8:
        if (!*(void *)(v0[2] + 16) || (uint64_t result = sub_1C4496AD8(), !v1))
        {
          type metadata accessor for Proto4_Version.Seen(0);
          return sub_1C4496878();
        }
      }
      return result;
  }
}

uint64_t sub_1C403447C(uint64_t a1)
{
  uint64_t v3 = sub_1C4496898();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  if ((sub_1C3FAD630(*(void *)v1, *(void *)(v1 + 8), *(void *)a1, *(void *)(a1 + 8)) & 1) != 0
    && sub_1C3F6EED8(*(void **)(v1 + 16), *(void **)(a1 + 16)))
  {
    uint64_t v10 = type metadata accessor for Proto4_Version.Seen(0);
    uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v11(v9, v1 + *(int *)(v10 + 24), v3);
    v11(v7, a1 + *(int *)(v10 + 24), v3);
    sub_1C404BA6C(&qword_1EA39BEF0, MEMORY[0x1E4F70E60]);
    char v12 = sub_1C4497178();
    uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
    v13(v7, v3);
    v13(v9, v3);
  }
  else
  {
    char v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1C4034644@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C4034650(MEMORY[0x1E4FBC860], a1);
}

uint64_t sub_1C4034650@<X0>(uint64_t a1@<X2>, uint64_t *a2@<X8>)
{
  *a2 = sub_1C4496868();
  a2[1] = v4;
  a2[2] = a1;
  return sub_1C4496888();
}

uint64_t sub_1C4034698(uint64_t a1, uint64_t a2)
{
  return sub_1C404B454(a1, a2, &qword_1EA39B908, &qword_1EA3B8AC0);
}

uint64_t sub_1C40346C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 24);
  uint64_t v5 = sub_1C4496898();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1C4034730(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C4496898();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t sub_1C40347A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C40342B4(a1, a2, a3, MEMORY[0x1E4F70EA8]);
}

uint64_t sub_1C40347CC()
{
  return sub_1C4034360();
}

uint64_t sub_1C40347E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9F0, (void (*)(uint64_t))type metadata accessor for Proto4_Version.Seen);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4034864@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B910, (uint64_t)qword_1EA3B8AD0, a1);
}

uint64_t sub_1C4034888(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C7E8, (void (*)(uint64_t))type metadata accessor for Proto4_Version.Seen);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C40348F4()
{
  sub_1C404BA6C(&qword_1EA39C7E8, (void (*)(uint64_t))type metadata accessor for Proto4_Version.Seen);
  return sub_1C4496AC8();
}

uint64_t sub_1C4034970()
{
  sub_1C404BA6C(&qword_1EA39C9F0, (void (*)(uint64_t))type metadata accessor for Proto4_Version.Seen);
  return sub_1C44968D8();
}

uint64_t sub_1C40349F4()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8AE8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8AE8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449BDF0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "uuid";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "timestamp";
  *((void *)v10 + 1) = 9;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "value";
  *(void *)(v11 + 8) = 5;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C4034BF8()
{
  type metadata accessor for Proto4_Register._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1C4496868();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = v0 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__timestamp;
  uint64_t v3 = type metadata accessor for Proto4_Timestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = v0 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  uint64_t v5 = type metadata accessor for Proto4_Value(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  qword_1EA39C240 = v0;
  return result;
}

uint64_t sub_1C4034CD4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v21 = (uint64_t)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA00);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = sub_1C4496868();
  *(void *)(v1 + 24) = v8;
  uint64_t v9 = v1 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__timestamp;
  uint64_t v10 = type metadata accessor for Proto4_Timestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = v1 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  uint64_t v12 = type metadata accessor for Proto4_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 16);
  unint64_t v13 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v15 = *(void *)(v1 + 16);
  unint64_t v16 = *(void *)(v1 + 24);
  *(void *)(v1 + 16) = v14;
  *(void *)(v1 + 24) = v13;
  sub_1C3F7E324(v14, v13);
  sub_1C3F7E2CC(v15, v16);
  uint64_t v17 = a1 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1C3F970C4(v17, (uint64_t)v7, &qword_1EA39CA00);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v7, v9, &qword_1EA39CA00);
  swift_endAccess();
  uint64_t v18 = a1 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v19 = v21;
  sub_1C3F970C4(v18, v21, &qword_1EA39C9F8);
  swift_release();
  swift_beginAccess();
  sub_1C3F98338(v19, v11, &qword_1EA39C9F8);
  swift_endAccess();
  return v1;
}

uint64_t sub_1C4034F84()
{
  return sub_1C4036960(&OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__timestamp, &qword_1EA39CA00, &OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value, &qword_1EA39C9F8);
}

uint64_t sub_1C4034FA8()
{
  return type metadata accessor for Proto4_Register._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Register._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C320);
}

void sub_1C4034FD0()
{
  sub_1C402B9C4(319, &qword_1EA39C330, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
  if (v0 <= 0x3F)
  {
    sub_1C402B9C4(319, &qword_1EA39C338, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t type metadata accessor for Proto4_Timestamp(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C538);
}

uint64_t type metadata accessor for Proto4_Value(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C5B8);
}

uint64_t sub_1C403511C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), void (*a5)(void), uint64_t (*a6)(uint64_t), void (*a7)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v13 = *(int *)(a4(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    a5(0);
    swift_allocObject();
    uint64_t v14 = swift_retain();
    *(void *)(v7 + v13) = a6(v14);
    swift_release();
  }
  uint64_t v15 = swift_retain();
  a7(v15, a1, a2, a3);
  return swift_release();
}

uint64_t sub_1C4035210()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        swift_beginAccess();
        type metadata accessor for Proto4_Timestamp(0);
        sub_1C404BA6C(&qword_1EA39C840, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_1C4496988();
        goto LABEL_6;
      }
LABEL_7:
      uint64_t result = sub_1C4496908();
    }
    swift_beginAccess();
    type metadata accessor for Proto4_Value(0);
    sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
LABEL_5:
    uint64_t v4 = v3;
    sub_1C4496A78();
LABEL_6:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_1C40353E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t v28 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v26 = (uint64_t)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for Proto4_Value(0);
  uint64_t v25 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v24 = (uint64_t)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA00);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto4_Timestamp(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v16 = *(void *)(a1 + 16);
  unint64_t v17 = *(void *)(a1 + 24);
  switch(v17 >> 62)
  {
    case 1uLL:
      if ((int)v16 != v16 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v16 + 16) != *(void *)(v16 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v17 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      sub_1C3F7E324(*(void *)(a1 + 16), *(void *)(a1 + 24));
      sub_1C4496B38();
      uint64_t result = sub_1C3F7E2CC(v16, v17);
      if (v4) {
        return result;
      }
LABEL_8:
      uint64_t v19 = a1
          + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__timestamp;
      swift_beginAccess();
      sub_1C3F970C4(v19, (uint64_t)v11, &qword_1EA39CA00);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
      {
        sub_1C3F962E0((uint64_t)v11, &qword_1EA39CA00);
      }
      else
      {
        sub_1C404D5A4((uint64_t)v11, (uint64_t)v15, type metadata accessor for Proto4_Timestamp);
        sub_1C404BA6C(&qword_1EA39C840, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
        sub_1C4496BD8();
        uint64_t result = sub_1C4049E78((uint64_t)v15, type metadata accessor for Proto4_Timestamp);
        if (v4) {
          return result;
        }
      }
      uint64_t v20 = a1 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
      swift_beginAccess();
      uint64_t v21 = v26;
      sub_1C3F970C4(v20, v26, &qword_1EA39C9F8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v21, 1, v27) == 1) {
        return sub_1C3F962E0(v21, &qword_1EA39C9F8);
      }
      uint64_t v22 = v21;
      uint64_t v23 = v24;
      sub_1C404D5A4(v22, v24, type metadata accessor for Proto4_Value);
      sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
      sub_1C4496BD8();
      return sub_1C4049E78(v23, type metadata accessor for Proto4_Value);
  }
}

BOOL sub_1C403588C(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = type metadata accessor for Proto4_Value(0);
  uint64_t v56 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v50 = (uint64_t)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA08);
  MEMORY[0x1F4188790](v58);
  uint64_t v54 = (uint64_t)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v51 = (uint64_t)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (uint64_t)&v50 - v9;
  uint64_t v10 = type metadata accessor for Proto4_Timestamp(0);
  uint64_t v59 = *(void *)(v10 - 8);
  uint64_t v60 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v52 = (uint64_t)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA10);
  MEMORY[0x1F4188790](v57);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA00);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  unint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v50 - v18;
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 16);
  unint64_t v21 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v22 = *(void *)(a2 + 16);
  unint64_t v23 = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  sub_1C3F7E324(v20, v21);
  sub_1C3F7E324(v22, v23);
  char v24 = sub_1C3FAD630(v20, v21, v22, v23);
  sub_1C3F7E2CC(v22, v23);
  sub_1C3F7E2CC(v20, v21);
  if ((v24 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v25 = (uint64_t)v17;
  uint64_t v26 = v58;
  uint64_t v27 = a1 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1C3F970C4(v27, (uint64_t)v19, &qword_1EA39CA00);
  uint64_t v28 = a2 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__timestamp;
  swift_beginAccess();
  uint64_t v29 = (uint64_t)&v13[*(int *)(v57 + 48)];
  sub_1C3F970C4((uint64_t)v19, (uint64_t)v13, &qword_1EA39CA00);
  sub_1C3F970C4(v28, v29, &qword_1EA39CA00);
  uint64_t v30 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  uint64_t v31 = a1;
  if (v30((uint64_t)v13, 1, v60) == 1)
  {
    sub_1C3F962E0((uint64_t)v19, &qword_1EA39CA00);
    if (v30(v29, 1, v60) == 1)
    {
      uint64_t v32 = v26;
      sub_1C3F962E0((uint64_t)v13, &qword_1EA39CA00);
      uint64_t v33 = a2;
      goto LABEL_12;
    }
    goto LABEL_8;
  }
  uint64_t v59 = a1;
  uint64_t v34 = v25;
  sub_1C3F970C4((uint64_t)v13, v25, &qword_1EA39CA00);
  if (v30(v29, 1, v60) == 1)
  {
    sub_1C3F962E0((uint64_t)v19, &qword_1EA39CA00);
    sub_1C4049E78(v25, type metadata accessor for Proto4_Timestamp);
LABEL_8:
    sub_1C3F962E0((uint64_t)v13, &qword_1EA39CA10);
LABEL_9:
    swift_release();
    swift_release();
    return 0;
  }
  uint64_t v32 = v26;
  uint64_t v36 = v29;
  uint64_t v37 = v52;
  sub_1C404D5A4(v36, v52, type metadata accessor for Proto4_Timestamp);
  sub_1C404BA6C(&qword_1EA39C838, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
  char v38 = sub_1C4497178();
  sub_1C4049E78(v37, type metadata accessor for Proto4_Timestamp);
  sub_1C3F962E0((uint64_t)v19, &qword_1EA39CA00);
  sub_1C4049E78(v34, type metadata accessor for Proto4_Timestamp);
  sub_1C3F962E0((uint64_t)v13, &qword_1EA39CA00);
  uint64_t v33 = a2;
  uint64_t v31 = v59;
  if ((v38 & 1) == 0) {
    goto LABEL_9;
  }
LABEL_12:
  uint64_t v39 = v31 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v40 = v53;
  sub_1C3F970C4(v39, v53, &qword_1EA39C9F8);
  uint64_t v41 = v33 + OBJC_IVAR____TtCV9Coherence15Proto4_RegisterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v42 = v54;
  uint64_t v43 = v54 + *(int *)(v32 + 48);
  sub_1C3F970C4(v40, v54, &qword_1EA39C9F8);
  sub_1C3F970C4(v41, v43, &qword_1EA39C9F8);
  uint64_t v44 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v56 + 48);
  uint64_t v45 = v55;
  if (v44(v42, 1, v55) != 1)
  {
    uint64_t v46 = v51;
    sub_1C3F970C4(v42, v51, &qword_1EA39C9F8);
    if (v44(v43, 1, v45) == 1)
    {
      swift_release();
      swift_release();
      sub_1C3F962E0(v40, &qword_1EA39C9F8);
      sub_1C4049E78(v46, type metadata accessor for Proto4_Value);
      goto LABEL_17;
    }
    uint64_t v47 = v40;
    uint64_t v48 = v50;
    sub_1C404D5A4(v43, v50, type metadata accessor for Proto4_Value);
    sub_1C404BA6C(&qword_1EA39BEA0, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
    char v49 = sub_1C4497178();
    swift_release();
    swift_release();
    sub_1C4049E78(v48, type metadata accessor for Proto4_Value);
    sub_1C3F962E0(v47, &qword_1EA39C9F8);
    sub_1C4049E78(v46, type metadata accessor for Proto4_Value);
    sub_1C3F962E0(v42, &qword_1EA39C9F8);
    return (v49 & 1) != 0;
  }
  swift_release();
  swift_release();
  sub_1C3F962E0(v40, &qword_1EA39C9F8);
  if (v44(v43, 1, v45) != 1)
  {
LABEL_17:
    sub_1C3F962E0(v42, &qword_1EA39CA08);
    return 0;
  }
  sub_1C3F962E0(v42, &qword_1EA39C9F8);
  return 1;
}

uint64_t sub_1C40360FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B920, &qword_1EA39C240, a2);
}

uint64_t sub_1C4036120()
{
  return 0x522E346F746F7250;
}

uint64_t sub_1C4036144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_Register, (void (*)(void))type metadata accessor for Proto4_Register._StorageClass, sub_1C4034CD4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4035210);
}

uint64_t sub_1C40361AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Register, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C40353E0);
}

uint64_t sub_1C40361EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9C8, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4036268(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Register, (uint64_t (*)(uint64_t, uint64_t))sub_1C403588C) & 1;
}

uint64_t sub_1C40362AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B918, (uint64_t)qword_1EA3B8AE8, a1);
}

uint64_t sub_1C40362D0(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C7D0, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C403633C()
{
  sub_1C404BA6C(&qword_1EA39C7D0, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
  return sub_1C4496AC8();
}

uint64_t sub_1C40363B8()
{
  sub_1C404BA6C(&qword_1EA39C9C8, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
  return sub_1C44968D8();
}

uint64_t sub_1C403643C()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8B00);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8B00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  unint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449BDF0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "uuid";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "positive";
  *((void *)v10 + 1) = 8;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "negative";
  *(void *)(v11 + 8) = 8;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C403663C()
{
  type metadata accessor for Proto4_Counter._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1C4496868();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = v0 + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__positive;
  uint64_t v3 = type metadata accessor for Proto4_Version(0);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v4)(v0+ OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__negative, 1, 1, v3);
  qword_1EA39C248 = v0;
  return result;
}

uint64_t sub_1C4036704(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = sub_1C4496868();
  *(void *)(v1 + 24) = v6;
  uint64_t v7 = v1 + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__positive;
  uint64_t v8 = type metadata accessor for Proto4_Version(0);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56);
  v9(v7, 1, 1, v8);
  uint64_t v10 = v1 + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__negative;
  v9(v1 + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__negative, 1, 1, v8);
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 16);
  unint64_t v12 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v13 = *(void *)(v1 + 16);
  unint64_t v14 = *(void *)(v1 + 24);
  *(void *)(v1 + 16) = v11;
  *(void *)(v1 + 24) = v12;
  sub_1C3F7E324(v11, v12);
  sub_1C3F7E2CC(v13, v14);
  uint64_t v15 = a1 + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__positive;
  swift_beginAccess();
  sub_1C3F970C4(v15, (uint64_t)v5, &qword_1EA39CA18);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v7, &qword_1EA39CA18);
  swift_endAccess();
  uint64_t v16 = a1 + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__negative;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v5, &qword_1EA39CA18);
  swift_release();
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v10, &qword_1EA39CA18);
  swift_endAccess();
  return v1;
}

uint64_t sub_1C4036940()
{
  return sub_1C4036960(&OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__positive, &qword_1EA39CA18, &OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__negative, &qword_1EA39CA18);
}

uint64_t sub_1C4036960(void *a1, uint64_t *a2, void *a3, uint64_t *a4)
{
  sub_1C3F7E2CC(*(void *)(v4 + 16), *(void *)(v4 + 24));
  sub_1C3F962E0(v4 + *a1, a2);
  sub_1C3F962E0(v4 + *a3, a4);
  return swift_deallocClassInstance();
}

uint64_t sub_1C4036A04()
{
  return type metadata accessor for Proto4_Counter._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Counter._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C350);
}

void sub_1C4036A2C()
{
  sub_1C402B9C4(319, &qword_1EA39C360, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for Proto4_Version(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C528);
}

uint64_t sub_1C4036B04()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3 || result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_1C4496988();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1C4496908();
    }
    swift_beginAccess();
    type metadata accessor for Proto4_Version(0);
    sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
    uint64_t v4 = v3;
    sub_1C4496A78();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C4036CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a4;
  uint64_t v29 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v28 = (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = type metadata accessor for Proto4_Version(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v27 = (uint64_t)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v27 - v15;
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 16);
  unint64_t v18 = *(void *)(a1 + 24);
  switch(v18 >> 62)
  {
    case 1uLL:
      if ((int)v17 != v17 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v17 + 16) != *(void *)(v17 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v18 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      sub_1C3F7E324(*(void *)(a1 + 16), *(void *)(a1 + 24));
      sub_1C4496B38();
      uint64_t result = sub_1C3F7E2CC(v17, v18);
      if (v4) {
        return result;
      }
LABEL_8:
      uint64_t v20 = a1
          + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__positive;
      swift_beginAccess();
      sub_1C3F970C4(v20, (uint64_t)v10, &qword_1EA39CA18);
      unint64_t v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      if (v21(v10, 1, v11) == 1)
      {
        sub_1C3F962E0((uint64_t)v10, &qword_1EA39CA18);
      }
      else
      {
        sub_1C404D5A4((uint64_t)v10, (uint64_t)v16, type metadata accessor for Proto4_Version);
        sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
        sub_1C4496BD8();
        uint64_t result = sub_1C4049E78((uint64_t)v16, type metadata accessor for Proto4_Version);
        if (v4) {
          return result;
        }
      }
      uint64_t v22 = a1
          + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__negative;
      swift_beginAccess();
      uint64_t v23 = v22;
      uint64_t v24 = v28;
      sub_1C3F970C4(v23, v28, &qword_1EA39CA18);
      if (v21((char *)v24, 1, v11) == 1) {
        return sub_1C3F962E0(v24, &qword_1EA39CA18);
      }
      uint64_t v25 = v24;
      uint64_t v26 = v27;
      sub_1C404D5A4(v25, v27, type metadata accessor for Proto4_Version);
      sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
      sub_1C4496BD8();
      return sub_1C4049E78(v26, type metadata accessor for Proto4_Version);
  }
}

BOOL sub_1C40370F0(uint64_t a1, uint64_t a2)
{
  uint64_t v60 = type metadata accessor for Proto4_Version(0);
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v57 = (uint64_t)&v54 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA20);
  uint64_t v5 = MEMORY[0x1F4188790](v61);
  uint64_t v56 = (uint64_t)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v58 = (uint64_t)&v54 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v54 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v62 = (uint64_t)&v54 - v18;
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 16);
  unint64_t v19 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v21 = *(void *)(a2 + 16);
  unint64_t v22 = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  sub_1C3F7E324(v20, v19);
  sub_1C3F7E324(v21, v22);
  char v23 = sub_1C3FAD630(v20, v19, v21, v22);
  sub_1C3F7E2CC(v21, v22);
  sub_1C3F7E2CC(v20, v19);
  if ((v23 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v24 = (uint64_t)v17;
  uint64_t v55 = v14;
  uint64_t v54 = v11;
  uint64_t v25 = a1 + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__positive;
  swift_beginAccess();
  uint64_t v26 = v62;
  sub_1C3F970C4(v25, v62, &qword_1EA39CA18);
  uint64_t v27 = a2 + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__positive;
  swift_beginAccess();
  uint64_t v28 = v61;
  uint64_t v29 = v58;
  uint64_t v30 = v58 + *(int *)(v61 + 48);
  sub_1C3F970C4(v26, v58, &qword_1EA39CA18);
  sub_1C3F970C4(v27, v30, &qword_1EA39CA18);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  uint64_t v32 = v60;
  if (v31(v29, 1, v60) == 1)
  {
    sub_1C3F962E0(v62, &qword_1EA39CA18);
    if (v31(v30, 1, v32) == 1)
    {
      uint64_t v59 = a2;
      sub_1C3F962E0(v29, &qword_1EA39CA18);
      goto LABEL_12;
    }
    goto LABEL_8;
  }
  uint64_t v59 = a2;
  uint64_t v33 = v62;
  uint64_t v34 = v24;
  sub_1C3F970C4(v29, v24, &qword_1EA39CA18);
  unsigned int v35 = v31(v30, 1, v32);
  uint64_t v36 = v57;
  if (v35 == 1)
  {
    sub_1C3F962E0(v33, &qword_1EA39CA18);
    sub_1C4049E78(v24, type metadata accessor for Proto4_Version);
LABEL_8:
    sub_1C3F962E0(v29, &qword_1EA39CA20);
    swift_release();
    goto LABEL_9;
  }
  sub_1C404D5A4(v30, v57, type metadata accessor for Proto4_Version);
  sub_1C404BA6C(&qword_1EA39C800, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  uint64_t v38 = a1;
  uint64_t v39 = v34;
  char v40 = sub_1C4497178();
  sub_1C4049E78(v36, type metadata accessor for Proto4_Version);
  sub_1C3F962E0(v33, &qword_1EA39CA18);
  uint64_t v41 = v39;
  a1 = v38;
  sub_1C4049E78(v41, type metadata accessor for Proto4_Version);
  sub_1C3F962E0(v29, &qword_1EA39CA18);
  uint64_t v28 = v61;
  if ((v40 & 1) == 0)
  {
LABEL_5:
    swift_release();
LABEL_9:
    swift_release();
    return 0;
  }
LABEL_12:
  uint64_t v42 = a1 + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__negative;
  swift_beginAccess();
  uint64_t v43 = v59;
  uint64_t v44 = v28;
  uint64_t v45 = (uint64_t)v55;
  sub_1C3F970C4(v42, (uint64_t)v55, &qword_1EA39CA18);
  uint64_t v46 = v43 + OBJC_IVAR____TtCV9Coherence14Proto4_CounterP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__negative;
  swift_beginAccess();
  uint64_t v47 = *(int *)(v44 + 48);
  uint64_t v48 = v56;
  uint64_t v49 = v45;
  uint64_t v50 = v56 + v47;
  sub_1C3F970C4(v49, v56, &qword_1EA39CA18);
  sub_1C3F970C4(v46, v50, &qword_1EA39CA18);
  if (v31(v48, 1, v32) != 1)
  {
    uint64_t v51 = (uint64_t)v54;
    sub_1C3F970C4(v48, (uint64_t)v54, &qword_1EA39CA18);
    if (v31(v50, 1, v32) == 1)
    {
      swift_release();
      swift_release();
      sub_1C3F962E0((uint64_t)v55, &qword_1EA39CA18);
      sub_1C4049E78(v51, type metadata accessor for Proto4_Version);
      goto LABEL_17;
    }
    uint64_t v52 = v57;
    sub_1C404D5A4(v50, v57, type metadata accessor for Proto4_Version);
    sub_1C404BA6C(&qword_1EA39C800, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
    char v53 = sub_1C4497178();
    swift_release();
    swift_release();
    sub_1C4049E78(v52, type metadata accessor for Proto4_Version);
    sub_1C3F962E0((uint64_t)v55, &qword_1EA39CA18);
    sub_1C4049E78(v51, type metadata accessor for Proto4_Version);
    sub_1C3F962E0(v48, &qword_1EA39CA18);
    return (v53 & 1) != 0;
  }
  swift_release();
  swift_release();
  sub_1C3F962E0(v49, &qword_1EA39CA18);
  if (v31(v50, 1, v32) != 1)
  {
LABEL_17:
    sub_1C3F962E0(v48, &qword_1EA39CA20);
    return 0;
  }
  sub_1C3F962E0(v48, &qword_1EA39CA18);
  return 1;
}

uint64_t sub_1C40378B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B930, &qword_1EA39C248, a2);
}

uint64_t sub_1C40378DC()
{
  return 0x432E346F746F7250;
}

uint64_t sub_1C4037900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_Counter, (void (*)(void))type metadata accessor for Proto4_Counter._StorageClass, sub_1C4036704, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4036B04);
}

uint64_t sub_1C4037968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Counter, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4036CD0);
}

uint64_t sub_1C40379A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9A8, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4037A24(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Counter, (uint64_t (*)(uint64_t, uint64_t))sub_1C40370F0) & 1;
}

uint64_t sub_1C4037A68@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B928, (uint64_t)qword_1EA3B8B00, a1);
}

uint64_t sub_1C4037A8C(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C7B0, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C4037AF8()
{
  sub_1C404BA6C(&qword_1EA39C7B0, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
  return sub_1C4496AC8();
}

uint64_t sub_1C4037B74()
{
  sub_1C404BA6C(&qword_1EA39C9A8, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
  return sub_1C44968D8();
}

uint64_t sub_1C4037BF8()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8B18);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8B18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449BDF0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "uuid";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "version";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "insertions";
  *(void *)(v11 + 8) = 10;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C4037DFC()
{
  type metadata accessor for Proto4_Set._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1C4496868();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = v0 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  uint64_t v3 = type metadata accessor for Proto4_Version(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  *(void *)(v0 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__insertions) = MEMORY[0x1E4FBC860];
  qword_1EA39C250 = v0;
  return result;
}

uint64_t sub_1C4037EA0(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = sub_1C4496868();
  *(void *)(v1 + 24) = v6;
  uint64_t v7 = v1 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  uint64_t v8 = type metadata accessor for Proto4_Version(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__insertions);
  *(void *)(v1 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__insertions) = MEMORY[0x1E4FBC860];
  swift_beginAccess();
  uint64_t v10 = *(void *)(a1 + 16);
  unint64_t v11 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v12 = *(void *)(v1 + 16);
  unint64_t v13 = *(void *)(v1 + 24);
  *(void *)(v1 + 16) = v10;
  *(void *)(v1 + 24) = v11;
  sub_1C3F7E324(v10, v11);
  sub_1C3F7E2CC(v12, v13);
  uint64_t v14 = a1 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  sub_1C3F970C4(v14, (uint64_t)v5, &qword_1EA39CA18);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v7, &qword_1EA39CA18);
  swift_endAccess();
  uint64_t v15 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__insertions);
  swift_beginAccess();
  uint64_t v16 = *v15;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *uint64_t v9 = v16;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C40380B4()
{
  sub_1C3F7E2CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version, &qword_1EA39CA18);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C4038138()
{
  return type metadata accessor for Proto4_Set._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Set._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C378);
}

void sub_1C4038160()
{
  sub_1C402B9C4(319, &qword_1EA39C360, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C4038224()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        swift_beginAccess();
        type metadata accessor for Proto4_Version(0);
        sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
        uint64_t v4 = v3;
        sub_1C4496A78();
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_1C4496988();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1C4496908();
    }
    swift_beginAccess();
    type metadata accessor for Proto4_Set.Element(0);
    sub_1C404BA6C(&qword_1EA39C770, (void (*)(uint64_t))type metadata accessor for Proto4_Set.Element);
    uint64_t v4 = v3;
    sub_1C4496A68();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C4038408(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[11] = a4;
  v18[0] = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto4_Version(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 16);
  unint64_t v13 = *(void *)(a1 + 24);
  switch(v13 >> 62)
  {
    case 1uLL:
      if ((int)v14 != v14 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v14 + 16) != *(void *)(v14 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v13 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      sub_1C3F7E324(*(void *)(a1 + 16), *(void *)(a1 + 24));
      sub_1C4496B38();
      uint64_t result = sub_1C3F7E2CC(v14, v13);
      if (v4) {
        return result;
      }
LABEL_8:
      uint64_t v16 = a1 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
      swift_beginAccess();
      sub_1C3F970C4(v16, (uint64_t)v8, &qword_1EA39CA18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_1C3F962E0((uint64_t)v8, &qword_1EA39CA18);
      }
      else
      {
        sub_1C404D5A4((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto4_Version);
        sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
        sub_1C4496BD8();
        uint64_t result = sub_1C4049E78((uint64_t)v12, type metadata accessor for Proto4_Version);
        if (v4) {
          return result;
        }
      }
      uint64_t v17 = a1 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__insertions;
      uint64_t result = swift_beginAccess();
      if (*(void *)(*(void *)v17 + 16))
      {
        type metadata accessor for Proto4_Set.Element(0);
        sub_1C404BA6C(&qword_1EA39C770, (void (*)(uint64_t))type metadata accessor for Proto4_Set.Element);
        swift_bridgeObjectRetain();
        sub_1C4496BC8();
        return swift_bridgeObjectRelease();
      }
      return result;
  }
}

uint64_t sub_1C403877C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto4_Version(0);
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v34 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA20);
  MEMORY[0x1F4188790](v35);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v13 = (char *)&v33 - v12;
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 16);
  unint64_t v15 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v16 = *(void *)(a2 + 16);
  unint64_t v17 = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  sub_1C3F7E324(v14, v15);
  sub_1C3F7E324(v16, v17);
  char v18 = sub_1C3FAD630(v14, v15, v16, v17);
  sub_1C3F7E2CC(v16, v17);
  sub_1C3F7E2CC(v14, v15);
  if ((v18 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v19 = (uint64_t)v11;
  uint64_t v20 = (uint64_t)v34;
  uint64_t v21 = a1 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  sub_1C3F970C4(v21, (uint64_t)v13, &qword_1EA39CA18);
  uint64_t v22 = a2 + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  uint64_t v23 = (uint64_t)&v7[*(int *)(v35 + 48)];
  sub_1C3F970C4((uint64_t)v13, (uint64_t)v7, &qword_1EA39CA18);
  sub_1C3F970C4(v22, v23, &qword_1EA39CA18);
  uint64_t v24 = v37;
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v36 + 48);
  if (v25((uint64_t)v7, 1, v37) == 1)
  {
    sub_1C3F962E0((uint64_t)v13, &qword_1EA39CA18);
    if (v25(v23, 1, v24) == 1)
    {
      sub_1C3F962E0((uint64_t)v7, &qword_1EA39CA18);
LABEL_11:
      uint64_t v29 = (uint64_t *)(a1
                      + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__insertions);
      swift_beginAccess();
      uint64_t v30 = *v29;
      uint64_t v31 = (uint64_t *)(a2
                      + OBJC_IVAR____TtCV9Coherence10Proto4_SetP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__insertions);
      swift_beginAccess();
      uint64_t v32 = *v31;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v26 = sub_1C3FE9898(v30, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  sub_1C3F970C4((uint64_t)v7, v19, &qword_1EA39CA18);
  if (v25(v23, 1, v24) == 1)
  {
    sub_1C3F962E0((uint64_t)v13, &qword_1EA39CA18);
    sub_1C4049E78(v19, type metadata accessor for Proto4_Version);
LABEL_7:
    sub_1C3F962E0((uint64_t)v7, &qword_1EA39CA20);
    goto LABEL_8;
  }
  sub_1C404D5A4(v23, v20, type metadata accessor for Proto4_Version);
  sub_1C404BA6C(&qword_1EA39C800, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  char v28 = sub_1C4497178();
  sub_1C4049E78(v20, type metadata accessor for Proto4_Version);
  sub_1C3F962E0((uint64_t)v13, &qword_1EA39CA18);
  sub_1C4049E78(v19, type metadata accessor for Proto4_Version);
  sub_1C3F962E0((uint64_t)v7, &qword_1EA39CA18);
  if (v28) {
    goto LABEL_11;
  }
LABEL_8:
  char v26 = 0;
LABEL_9:
  swift_release();
  swift_release();
  return v26 & 1;
}

uint64_t sub_1C4038C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B940, &qword_1EA39C250, a2);
}

uint64_t sub_1C4038C68()
{
  return 0x532E346F746F7250;
}

uint64_t sub_1C4038C84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_Set, (void (*)(void))type metadata accessor for Proto4_Set._StorageClass, sub_1C4037EA0, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4038224);
}

uint64_t sub_1C4038CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Set, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4038408);
}

uint64_t sub_1C4038D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9C0, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4038DA8(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Set, sub_1C403877C) & 1;
}

uint64_t sub_1C4038DEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B938, (uint64_t)qword_1EA3B8B18, a1);
}

uint64_t sub_1C4038E10(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C790, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C4038E7C()
{
  sub_1C404BA6C(&qword_1EA39C790, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
  return sub_1C4496AC8();
}

uint64_t sub_1C4038EF8()
{
  sub_1C404BA6C(&qword_1EA39C9C0, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
  return sub_1C44968D8();
}

uint64_t sub_1C4038F7C()
{
  uint64_t result = sub_1C4497268();
  qword_1EA3B8B30 = 0x532E346F746F7250;
  *(void *)algn_1EA3B8B38 = 0xEA00000000007465;
  return result;
}

uint64_t sub_1C4038FE8()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8B40);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8B40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449BDF0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "key";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "value";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "addedBy";
  *(void *)(v11 + 8) = 7;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C40391EC()
{
  type metadata accessor for Proto4_Set.Element._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__key;
  uint64_t v2 = type metadata accessor for Proto4_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  uint64_t v4 = type metadata accessor for Proto4_CRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy;
  uint64_t v6 = type metadata accessor for Proto4_Version(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  qword_1EA39C258 = v0;
  return result;
}

uint64_t sub_1C403930C(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v22[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = &v22[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v22[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = v1 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__key;
  uint64_t v13 = type metadata accessor for Proto4_Value(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = v1 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  uint64_t v15 = type metadata accessor for Proto4_CRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  uint64_t v16 = v1
      + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy;
  uint64_t v17 = type metadata accessor for Proto4_Version(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  uint64_t v18 = a1 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__key;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v11, &qword_1EA39C9F8);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v11, v12, &qword_1EA39C9F8);
  swift_endAccess();
  uint64_t v19 = a1 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  sub_1C3F970C4(v19, (uint64_t)v8, &qword_1EA39C8C8);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v8, v14, &qword_1EA39C8C8);
  swift_endAccess();
  uint64_t v20 = a1
      + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy;
  swift_beginAccess();
  sub_1C3F970C4(v20, (uint64_t)v5, &qword_1EA39CA18);
  swift_release();
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v16, &qword_1EA39CA18);
  swift_endAccess();
  return v1;
}

uint64_t sub_1C4039640()
{
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__key, &qword_1EA39C9F8);
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value, &qword_1EA39C8C8);
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy, &qword_1EA39CA18);
  return swift_deallocClassInstance();
}

uint64_t sub_1C40396DC()
{
  return type metadata accessor for Proto4_Set.Element._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Set.Element._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C3A0);
}

void sub_1C4039704()
{
  sub_1C402B9C4(319, &qword_1EA39C338, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
  if (v0 <= 0x3F)
  {
    sub_1C402B9C4(319, &qword_1EA39C2C8, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
    if (v1 <= 0x3F)
    {
      sub_1C402B9C4(319, &qword_1EA39C360, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1C403985C()
{
  uint64_t result = sub_1C4496908();
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        swift_beginAccess();
        type metadata accessor for Proto4_CRDT(0);
        sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
        goto LABEL_5;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto4_Value(0);
        sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1C4496908();
    }
    swift_beginAccess();
    type metadata accessor for Proto4_Version(0);
    sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
LABEL_5:
    sub_1C4496A78();
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C4039A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v35 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Proto4_Version(0);
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v32 = (uint64_t)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Proto4_CRDT(0);
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v38 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v33 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto4_Value(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  uint64_t v21 = a1 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__key;
  swift_beginAccess();
  sub_1C3F970C4(v21, (uint64_t)v15, &qword_1EA39C9F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1C3F962E0((uint64_t)v15, &qword_1EA39C9F8);
    uint64_t v22 = v39;
    uint64_t v23 = v20;
  }
  else
  {
    sub_1C404D5A4((uint64_t)v15, (uint64_t)v19, type metadata accessor for Proto4_Value);
    sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
    uint64_t v24 = v39;
    sub_1C4496BD8();
    uint64_t v22 = v24;
    uint64_t result = sub_1C4049E78((uint64_t)v19, type metadata accessor for Proto4_Value);
    uint64_t v23 = v20;
    if (v24) {
      return result;
    }
  }
  uint64_t v26 = v23 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  sub_1C3F970C4(v26, (uint64_t)v10, &qword_1EA39C8C8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v10, 1, v38) == 1)
  {
    sub_1C3F962E0((uint64_t)v10, &qword_1EA39C8C8);
  }
  else
  {
    uint64_t v27 = v33;
    sub_1C404D5A4((uint64_t)v10, v33, type metadata accessor for Proto4_CRDT);
    sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
    sub_1C4496BD8();
    uint64_t result = sub_1C4049E78(v27, type metadata accessor for Proto4_CRDT);
    if (v22) {
      return result;
    }
  }
  uint64_t v28 = v23
      + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy;
  swift_beginAccess();
  uint64_t v29 = v35;
  sub_1C3F970C4(v28, v35, &qword_1EA39CA18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v34 + 48))(v29, 1, v36) == 1) {
    return sub_1C3F962E0(v29, &qword_1EA39CA18);
  }
  uint64_t v30 = v29;
  uint64_t v31 = v32;
  sub_1C404D5A4(v30, v32, type metadata accessor for Proto4_Version);
  sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  sub_1C4496BD8();
  return sub_1C4049E78(v31, type metadata accessor for Proto4_Version);
}

BOOL sub_1C403A044(uint64_t a1, uint64_t a2)
{
  uint64_t v86 = a2;
  uint64_t v74 = type metadata accessor for Proto4_Version(0);
  uint64_t v82 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v71 = (uint64_t)&v70 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA20);
  MEMORY[0x1F4188790](v73);
  uint64_t v75 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v83 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v77 = (char *)&v70 - v8;
  uint64_t v80 = type metadata accessor for Proto4_CRDT(0);
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v72 = (uint64_t)&v70 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D0);
  MEMORY[0x1F4188790](v78);
  uint64_t v81 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v76 = (uint64_t)&v70 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v84 = (uint64_t)&v70 - v14;
  uint64_t v15 = type metadata accessor for Proto4_Value(0);
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA08);
  uint64_t v20 = v19 - 8;
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  uint64_t v85 = (uint64_t)&v70 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v70 - v26;
  uint64_t v28 = a1;
  uint64_t v29 = a1 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__key;
  swift_beginAccess();
  sub_1C3F970C4(v29, (uint64_t)v27, &qword_1EA39C9F8);
  uint64_t v30 = v86;
  uint64_t v31 = v86 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__key;
  swift_beginAccess();
  uint64_t v32 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_1C3F970C4((uint64_t)v27, (uint64_t)v22, &qword_1EA39C9F8);
  sub_1C3F970C4(v31, v32, &qword_1EA39C9F8);
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  if (v33((uint64_t)v22, 1, v15) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1C3F962E0((uint64_t)v27, &qword_1EA39C9F8);
    uint64_t v34 = v28;
    if (v33(v32, 1, v15) == 1)
    {
      sub_1C3F962E0((uint64_t)v22, &qword_1EA39C9F8);
      goto LABEL_8;
    }
LABEL_6:
    uint64_t v36 = &qword_1EA39CA08;
    uint64_t v37 = (uint64_t)v22;
LABEL_14:
    sub_1C3F962E0(v37, v36);
    goto LABEL_15;
  }
  uint64_t v35 = v28;
  sub_1C3F970C4((uint64_t)v22, v85, &qword_1EA39C9F8);
  if (v33(v32, 1, v15) == 1)
  {
    swift_retain();
    swift_retain();
    sub_1C3F962E0((uint64_t)v27, &qword_1EA39C9F8);
    sub_1C4049E78(v85, type metadata accessor for Proto4_Value);
    goto LABEL_6;
  }
  uint64_t v38 = (uint64_t)v18;
  sub_1C404D5A4(v32, (uint64_t)v18, type metadata accessor for Proto4_Value);
  sub_1C404BA6C(&qword_1EA39BEA0, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
  uint64_t v34 = v35;
  swift_retain();
  swift_retain();
  uint64_t v39 = v85;
  char v40 = sub_1C4497178();
  sub_1C4049E78(v38, type metadata accessor for Proto4_Value);
  sub_1C3F962E0((uint64_t)v27, &qword_1EA39C9F8);
  sub_1C4049E78(v39, type metadata accessor for Proto4_Value);
  sub_1C3F962E0((uint64_t)v22, &qword_1EA39C9F8);
  if ((v40 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_8:
  uint64_t v41 = v34 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v42 = v84;
  sub_1C3F970C4(v41, v84, &qword_1EA39C8C8);
  uint64_t v43 = v30 + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v44 = v81;
  uint64_t v45 = v81 + *(int *)(v78 + 48);
  sub_1C3F970C4(v42, v81, &qword_1EA39C8C8);
  sub_1C3F970C4(v43, v45, &qword_1EA39C8C8);
  uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
  uint64_t v47 = v80;
  if (v46(v44, 1, v80) != 1)
  {
    uint64_t v52 = v76;
    sub_1C3F970C4(v44, v76, &qword_1EA39C8C8);
    int v53 = v46(v45, 1, v47);
    uint64_t v54 = v83;
    uint64_t v51 = v82;
    if (v53 == 1)
    {
      sub_1C3F962E0(v42, &qword_1EA39C8C8);
      sub_1C4049E78(v52, type metadata accessor for Proto4_CRDT);
      goto LABEL_13;
    }
    uint64_t v56 = v52;
    uint64_t v57 = v72;
    sub_1C404D5A4(v45, v72, type metadata accessor for Proto4_CRDT);
    sub_1C404BA6C(&qword_1EA39BED0, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
    char v58 = sub_1C4497178();
    sub_1C4049E78(v57, type metadata accessor for Proto4_CRDT);
    sub_1C3F962E0(v84, &qword_1EA39C8C8);
    sub_1C4049E78(v56, type metadata accessor for Proto4_CRDT);
    sub_1C3F962E0(v44, &qword_1EA39C8C8);
    uint64_t v49 = (uint64_t)v54;
    uint64_t v50 = (uint64_t)v77;
    if (v58) {
      goto LABEL_19;
    }
LABEL_15:
    swift_release();
    swift_release();
    return 0;
  }
  sub_1C3F962E0(v42, &qword_1EA39C8C8);
  int v48 = v46(v45, 1, v47);
  uint64_t v49 = (uint64_t)v83;
  uint64_t v50 = (uint64_t)v77;
  uint64_t v51 = v82;
  if (v48 != 1)
  {
LABEL_13:
    uint64_t v36 = &qword_1EA39C8D0;
    uint64_t v37 = v44;
    goto LABEL_14;
  }
  sub_1C3F962E0(v44, &qword_1EA39C8C8);
LABEL_19:
  uint64_t v59 = v34
      + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy;
  swift_beginAccess();
  sub_1C3F970C4(v59, v50, &qword_1EA39CA18);
  uint64_t v60 = v30
      + OBJC_IVAR____TtCVV9Coherence10Proto4_Set7ElementP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy;
  swift_beginAccess();
  uint64_t v61 = v75;
  uint64_t v62 = v75 + *(int *)(v73 + 48);
  sub_1C3F970C4(v50, v75, &qword_1EA39CA18);
  uint64_t v63 = v60;
  uint64_t v64 = v61;
  sub_1C3F970C4(v63, v62, &qword_1EA39CA18);
  uint64_t v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48);
  uint64_t v66 = v61;
  uint64_t v67 = v74;
  if (v65(v66, 1, v74) == 1)
  {
    swift_release();
    swift_release();
    sub_1C3F962E0(v50, &qword_1EA39CA18);
    if (v65(v62, 1, v67) == 1)
    {
      sub_1C3F962E0(v64, &qword_1EA39CA18);
      return 1;
    }
    goto LABEL_24;
  }
  sub_1C3F970C4(v64, v49, &qword_1EA39CA18);
  if (v65(v62, 1, v67) == 1)
  {
    swift_release();
    swift_release();
    sub_1C3F962E0(v50, &qword_1EA39CA18);
    sub_1C4049E78(v49, type metadata accessor for Proto4_Version);
LABEL_24:
    sub_1C3F962E0(v64, &qword_1EA39CA20);
    return 0;
  }
  uint64_t v68 = v71;
  sub_1C404D5A4(v62, v71, type metadata accessor for Proto4_Version);
  sub_1C404BA6C(&qword_1EA39C800, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  char v69 = sub_1C4497178();
  swift_release();
  swift_release();
  sub_1C4049E78(v68, type metadata accessor for Proto4_Version);
  sub_1C3F962E0(v50, &qword_1EA39CA18);
  sub_1C4049E78(v49, type metadata accessor for Proto4_Version);
  sub_1C3F962E0(v64, &qword_1EA39CA18);
  return (v69 & 1) != 0;
}

uint64_t sub_1C403ABE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B958, &qword_1EA39C258, a2);
}

uint64_t sub_1C403AC04(uint64_t a1, uint64_t a2)
{
  return sub_1C404B454(a1, a2, &qword_1EA39B948, &qword_1EA3B8B30);
}

uint64_t sub_1C403AC2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_Set.Element, (void (*)(void))type metadata accessor for Proto4_Set.Element._StorageClass, sub_1C403930C, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C403985C);
}

uint64_t sub_1C403AC94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Set.Element, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4039A68);
}

uint64_t sub_1C403ACD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39CA28, (void (*)(uint64_t))type metadata accessor for Proto4_Set.Element);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C403AD50(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Set.Element, (uint64_t (*)(uint64_t, uint64_t))sub_1C403A044) & 1;
}

uint64_t sub_1C403AD94@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B950, (uint64_t)qword_1EA3B8B40, a1);
}

uint64_t sub_1C403ADB8(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C770, (void (*)(uint64_t))type metadata accessor for Proto4_Set.Element);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C403AE24()
{
  sub_1C404BA6C(&qword_1EA39C770, (void (*)(uint64_t))type metadata accessor for Proto4_Set.Element);
  return sub_1C4496AC8();
}

uint64_t sub_1C403AEA0()
{
  sub_1C404BA6C(&qword_1EA39CA28, (void (*)(uint64_t))type metadata accessor for Proto4_Set.Element);
  return sub_1C44968D8();
}

uint64_t sub_1C403AF24(uint64_t a1)
{
  return sub_1C4041028(a1, qword_1EA3B8B58, (uint64_t)"fields", 6);
}

uint64_t sub_1C403AF3C()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Proto4_Struct.Field(0),
        sub_1C404BA6C(&qword_1EA39C738, (void (*)(uint64_t))type metadata accessor for Proto4_Struct.Field),
        uint64_t result = sub_1C4496BC8(),
        !v1))
  {
    type metadata accessor for Proto4_Struct(0);
    return sub_1C4496878();
  }
  return result;
}

uint64_t sub_1C403B028()
{
  return 0x532E346F746F7250;
}

uint64_t sub_1C403B04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C4041184(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Struct.Field, &qword_1EA39C738, (void (*)(uint64_t))type metadata accessor for Proto4_Struct.Field);
}

uint64_t sub_1C403B0A8()
{
  return sub_1C403AF3C();
}

uint64_t sub_1C403B0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9B8, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C403B13C(char *a1)
{
  return sub_1C404137C(a1, sub_1C3FE9A7C, type metadata accessor for Proto4_Struct) & 1;
}

uint64_t sub_1C403B180@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B960, (uint64_t)qword_1EA3B8B58, a1);
}

uint64_t sub_1C403B1A4(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C758, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C403B210()
{
  sub_1C404BA6C(&qword_1EA39C758, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
  return sub_1C4496AC8();
}

uint64_t sub_1C403B28C()
{
  sub_1C404BA6C(&qword_1EA39C9B8, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
  return sub_1C44968D8();
}

uint64_t sub_1C403B310()
{
  strcpy((char *)v1, "Proto4.Struct");
  HIWORD(v1[1]) = -4864;
  uint64_t result = sub_1C4497268();
  qword_1EA3B8B70 = v1[0];
  *(void *)algn_1EA3B8B78 = v1[1];
  return result;
}

uint64_t sub_1C403B380()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8B80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8B80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449B4A0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "key";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "value";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C403B538()
{
  type metadata accessor for Proto4_Struct.Field._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = 0;
  *(void *)(v0 + 24) = 0xE000000000000000;
  uint64_t v1 = v0 + OBJC_IVAR____TtCVV9Coherence13Proto4_Struct5FieldP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  uint64_t v2 = type metadata accessor for Proto4_CRDT(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  qword_1EA39C260 = v0;
  return result;
}

uint64_t sub_1C403B5C8(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  uint64_t v6 = v1 + OBJC_IVAR____TtCVV9Coherence13Proto4_Struct5FieldP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  uint64_t v7 = type metadata accessor for Proto4_CRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  swift_beginAccess();
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  swift_beginAccess();
  *(void *)(v1 + 16) = v9;
  *(void *)(v1 + 24) = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a1 + OBJC_IVAR____TtCVV9Coherence13Proto4_Struct5FieldP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
  swift_beginAccess();
  sub_1C3F970C4(v10, (uint64_t)v5, &qword_1EA39C8C8);
  swift_release();
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v6, &qword_1EA39C8C8);
  swift_endAccess();
  return v1;
}

uint64_t sub_1C403B764()
{
  swift_bridgeObjectRelease();
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCVV9Coherence13Proto4_Struct5FieldP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value, &qword_1EA39C8C8);
  return swift_deallocClassInstance();
}

uint64_t sub_1C403B7D8()
{
  return type metadata accessor for Proto4_Struct.Field._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Struct.Field._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C3B8);
}

void sub_1C403B800(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C403B828()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_1C4496A28();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1C4496908();
    }
    swift_beginAccess();
    type metadata accessor for Proto4_CRDT(0);
    sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
    uint64_t v4 = v3;
    sub_1C4496A78();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C403B97C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for Proto4_CRDT(0);
  uint64_t v11 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v14 = *(void *)(a1 + 24);
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = *(void *)(a1 + 16) & 0xFFFFFFFFFFFFLL;
  }
  v18[0] = a3;
  v18[1] = a4;
  if (!v15 || (swift_bridgeObjectRetain(), sub_1C4496B98(), uint64_t result = swift_bridgeObjectRelease(), !v4))
  {
    uint64_t v17 = a1
        + OBJC_IVAR____TtCVV9Coherence13Proto4_Struct5FieldP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
    swift_beginAccess();
    sub_1C3F970C4(v17, (uint64_t)v10, &qword_1EA39C8C8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, v19) == 1)
    {
      return sub_1C3F962E0((uint64_t)v10, &qword_1EA39C8C8);
    }
    else
    {
      sub_1C404D5A4((uint64_t)v10, (uint64_t)v13, type metadata accessor for Proto4_CRDT);
      sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
      sub_1C4496BD8();
      return sub_1C4049E78((uint64_t)v13, type metadata accessor for Proto4_CRDT);
    }
  }
  return result;
}

BOOL sub_1C403BBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto4_CRDT(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v27 = (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D0);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v26 - v14;
  swift_beginAccess();
  uint64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  swift_beginAccess();
  if (v16 == *(void *)(a2 + 16) && v17 == *(void *)(a2 + 24)
    || (char v18 = sub_1C44982E8(), result = 0, (v18 & 1) != 0))
  {
    uint64_t v20 = a1
        + OBJC_IVAR____TtCVV9Coherence13Proto4_Struct5FieldP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
    swift_beginAccess();
    sub_1C3F970C4(v20, (uint64_t)v15, &qword_1EA39C8C8);
    uint64_t v21 = a2
        + OBJC_IVAR____TtCVV9Coherence13Proto4_Struct5FieldP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__value;
    swift_beginAccess();
    uint64_t v22 = (uint64_t)&v9[*(int *)(v7 + 48)];
    sub_1C3F970C4((uint64_t)v15, (uint64_t)v9, &qword_1EA39C8C8);
    sub_1C3F970C4(v21, v22, &qword_1EA39C8C8);
    uint64_t v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    if (v23((uint64_t)v9, 1, v4) == 1)
    {
      sub_1C3F962E0((uint64_t)v15, &qword_1EA39C8C8);
      if (v23(v22, 1, v4) == 1)
      {
        sub_1C3F962E0((uint64_t)v9, &qword_1EA39C8C8);
        return 1;
      }
    }
    else
    {
      sub_1C3F970C4((uint64_t)v9, (uint64_t)v13, &qword_1EA39C8C8);
      if (v23(v22, 1, v4) != 1)
      {
        uint64_t v24 = v27;
        sub_1C404D5A4(v22, v27, type metadata accessor for Proto4_CRDT);
        sub_1C404BA6C(&qword_1EA39BED0, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
        char v25 = sub_1C4497178();
        sub_1C4049E78(v24, type metadata accessor for Proto4_CRDT);
        sub_1C3F962E0((uint64_t)v15, &qword_1EA39C8C8);
        sub_1C4049E78((uint64_t)v13, type metadata accessor for Proto4_CRDT);
        sub_1C3F962E0((uint64_t)v9, &qword_1EA39C8C8);
        return (v25 & 1) != 0;
      }
      sub_1C3F962E0((uint64_t)v15, &qword_1EA39C8C8);
      sub_1C4049E78((uint64_t)v13, type metadata accessor for Proto4_CRDT);
    }
    sub_1C3F962E0((uint64_t)v9, &qword_1EA39C8D0);
    return 0;
  }
  return result;
}

uint64_t sub_1C403BFFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B978, &qword_1EA39C260, a2);
}

uint64_t sub_1C403C020(uint64_t a1, uint64_t a2)
{
  return sub_1C404B454(a1, a2, &qword_1EA39B968, &qword_1EA3B8B70);
}

uint64_t sub_1C403C048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_Struct.Field, (void (*)(void))type metadata accessor for Proto4_Struct.Field._StorageClass, sub_1C403B5C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C403B828);
}

uint64_t sub_1C403C0B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Struct.Field, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C403B97C);
}

uint64_t sub_1C403C0F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39CA30, (void (*)(uint64_t))type metadata accessor for Proto4_Struct.Field);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C403C16C(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Struct.Field, (uint64_t (*)(uint64_t, uint64_t))sub_1C403BBFC) & 1;
}

uint64_t sub_1C403C1B0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B970, (uint64_t)qword_1EA3B8B80, a1);
}

uint64_t sub_1C403C1D4(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C738, (void (*)(uint64_t))type metadata accessor for Proto4_Struct.Field);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C403C240()
{
  sub_1C404BA6C(&qword_1EA39C738, (void (*)(uint64_t))type metadata accessor for Proto4_Struct.Field);
  return sub_1C4496AC8();
}

uint64_t sub_1C403C2BC()
{
  sub_1C404BA6C(&qword_1EA39CA30, (void (*)(uint64_t))type metadata accessor for Proto4_Struct.Field);
  return sub_1C44968D8();
}

uint64_t sub_1C403C340()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8B98);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8B98);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449BBD0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "uuid";
  *(void *)(v6 + 8) = 4;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "version";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "crdt";
  *((void *)v12 + 1) = 4;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "keyPath";
  *((void *)v14 + 1) = 7;
  v14[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C403C580()
{
  type metadata accessor for Proto4_Reference._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = sub_1C4496868();
  *(void *)(v0 + 24) = v1;
  uint64_t v2 = v0 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  uint64_t v3 = type metadata accessor for Proto4_Version(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = v0 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__crdt;
  uint64_t v5 = type metadata accessor for Proto4_CRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  uint64_t v6 = v0 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__keyPath;
  uint64_t v7 = type metadata accessor for Proto4_KeyPath(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  qword_1EA39C268 = v0;
  return result;
}

uint64_t sub_1C403C6A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA38);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v31 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  MEMORY[0x1F4188790](v8 - 8);
  unint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v1 + 16) = sub_1C4496868();
  uint64_t v11 = (uint64_t *)(v1 + 16);
  *(void *)(v2 + 24) = v12;
  uint64_t v13 = v2 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  uint64_t v14 = type metadata accessor for Proto4_Version(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = v2 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__crdt;
  uint64_t v16 = type metadata accessor for Proto4_CRDT(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = v2 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__keyPath;
  uint64_t v30 = v2 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__keyPath;
  uint64_t v18 = type metadata accessor for Proto4_KeyPath(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  swift_beginAccess();
  uint64_t v20 = *(void *)(a1 + 16);
  unint64_t v19 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v21 = *v11;
  unint64_t v22 = *(void *)(v2 + 24);
  *uint64_t v11 = v20;
  *(void *)(v2 + 24) = v19;
  sub_1C3F7E324(v20, v19);
  sub_1C3F7E2CC(v21, v22);
  uint64_t v23 = a1 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  sub_1C3F970C4(v23, (uint64_t)v10, &qword_1EA39CA18);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v10, v13, &qword_1EA39CA18);
  swift_endAccess();
  uint64_t v24 = a1 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__crdt;
  swift_beginAccess();
  uint64_t v25 = v31;
  sub_1C3F970C4(v24, v31, &qword_1EA39C8C8);
  swift_beginAccess();
  sub_1C3F98338(v25, v15, &qword_1EA39C8C8);
  swift_endAccess();
  uint64_t v26 = a1 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__keyPath;
  swift_beginAccess();
  uint64_t v27 = v32;
  sub_1C3F970C4(v26, v32, &qword_1EA39CA38);
  swift_release();
  uint64_t v28 = v30;
  swift_beginAccess();
  sub_1C3F98338(v27, v28, &qword_1EA39CA38);
  swift_endAccess();
  return v2;
}

uint64_t sub_1C403CA60()
{
  sub_1C3F7E2CC(*(void *)(v0 + 16), *(void *)(v0 + 24));
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version, &qword_1EA39CA18);
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__crdt, &qword_1EA39C8C8);
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__keyPath, &qword_1EA39CA38);
  return swift_deallocClassInstance();
}

uint64_t sub_1C403CB04()
{
  return type metadata accessor for Proto4_Reference._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Reference._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C3E0);
}

void sub_1C403CB2C()
{
  sub_1C402B9C4(319, &qword_1EA39C360, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  if (v0 <= 0x3F)
  {
    sub_1C402B9C4(319, &qword_1EA39C2C8, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
    if (v1 <= 0x3F)
    {
      sub_1C402B9C4(319, &qword_1EA39C3F0, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t type metadata accessor for Proto4_KeyPath(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C4F8);
}

uint64_t sub_1C403CCB0()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_1C4496988();
          goto LABEL_6;
        case 2:
          swift_beginAccess();
          type metadata accessor for Proto4_Version(0);
          sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for Proto4_CRDT(0);
          sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          type metadata accessor for Proto4_KeyPath(0);
          sub_1C404BA6C(&qword_1EA39C860, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
LABEL_5:
          uint64_t v4 = v3;
          sub_1C4496A78();
LABEL_6:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_1C4496908();
    }
  }
  return result;
}

uint64_t sub_1C403CF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a3;
  uint64_t v45 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA38);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v39 = (uint64_t)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Proto4_KeyPath(0);
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  uint64_t v36 = (uint64_t)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v42 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for Proto4_CRDT(0);
  uint64_t v41 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v37 = (uint64_t)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Proto4_Version(0);
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v19 = *(void *)(a1 + 16);
  unint64_t v18 = *(void *)(a1 + 24);
  switch(v18 >> 62)
  {
    case 1uLL:
      if ((int)v19 != v19 >> 32) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 2uLL:
      if (*(void *)(v19 + 16) != *(void *)(v19 + 24)) {
        goto LABEL_7;
      }
      goto LABEL_8;
    case 3uLL:
      goto LABEL_8;
    default:
      if ((v18 & 0xFF000000000000) == 0) {
        goto LABEL_8;
      }
LABEL_7:
      sub_1C3F7E324(*(void *)(a1 + 16), *(void *)(a1 + 24));
      uint64_t v20 = v46;
      sub_1C4496B38();
      uint64_t result = sub_1C3F7E2CC(v19, v18);
      uint64_t v46 = v20;
      if (v20) {
        return result;
      }
LABEL_8:
      uint64_t v22 = a1
          + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
      swift_beginAccess();
      sub_1C3F970C4(v22, (uint64_t)v13, &qword_1EA39CA18);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
      {
        sub_1C3F962E0((uint64_t)v13, &qword_1EA39CA18);
      }
      else
      {
        sub_1C404D5A4((uint64_t)v13, (uint64_t)v17, type metadata accessor for Proto4_Version);
        sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
        uint64_t v23 = v46;
        sub_1C4496BD8();
        uint64_t result = sub_1C4049E78((uint64_t)v17, type metadata accessor for Proto4_Version);
        uint64_t v46 = v23;
        if (v23) {
          return result;
        }
      }
      uint64_t v24 = a1 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__crdt;
      swift_beginAccess();
      uint64_t v25 = v24;
      uint64_t v26 = v42;
      sub_1C3F970C4(v25, v42, &qword_1EA39C8C8);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v26, 1, v43) == 1)
      {
        sub_1C3F962E0(v26, &qword_1EA39C8C8);
      }
      else
      {
        uint64_t v27 = v26;
        uint64_t v28 = v37;
        sub_1C404D5A4(v27, v37, type metadata accessor for Proto4_CRDT);
        sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
        uint64_t v29 = v46;
        sub_1C4496BD8();
        uint64_t result = sub_1C4049E78(v28, type metadata accessor for Proto4_CRDT);
        uint64_t v46 = v29;
        if (v29) {
          return result;
        }
      }
      uint64_t v30 = a1
          + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__keyPath;
      swift_beginAccess();
      uint64_t v31 = v30;
      uint64_t v32 = v39;
      sub_1C3F970C4(v31, v39, &qword_1EA39CA38);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v32, 1, v40) == 1) {
        return sub_1C3F962E0(v32, &qword_1EA39CA38);
      }
      uint64_t v33 = v32;
      uint64_t v34 = v36;
      sub_1C404D5A4(v33, v36, type metadata accessor for Proto4_KeyPath);
      sub_1C404BA6C(&qword_1EA39C860, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
      sub_1C4496BD8();
      return sub_1C4049E78(v34, type metadata accessor for Proto4_KeyPath);
  }
}

BOOL sub_1C403D598(uint64_t a1, uint64_t a2)
{
  uint64_t v74 = type metadata accessor for Proto4_KeyPath(0);
  uint64_t v79 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v71 = (uint64_t)&v70 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA40);
  MEMORY[0x1F4188790](v73);
  uint64_t v75 = (uint64_t)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA38);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v80 = (char *)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v78 = (char *)&v70 - v9;
  uint64_t v83 = type metadata accessor for Proto4_CRDT(0);
  uint64_t v82 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v72 = (uint64_t)&v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D0);
  MEMORY[0x1F4188790](v81);
  uint64_t v84 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v76 = (uint64_t)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v85 = (uint64_t)&v70 - v15;
  uint64_t v88 = type metadata accessor for Proto4_Version(0);
  uint64_t v87 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v77 = (uint64_t)&v70 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA20);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v86 = (uint64_t)&v70 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v70 - v23;
  swift_beginAccess();
  uint64_t v26 = *(void *)(a1 + 16);
  unint64_t v25 = *(void *)(a1 + 24);
  swift_beginAccess();
  uint64_t v27 = *(void *)(a2 + 16);
  unint64_t v28 = *(void *)(a2 + 24);
  swift_retain();
  swift_retain();
  sub_1C3F7E324(v26, v25);
  sub_1C3F7E324(v27, v28);
  char v29 = sub_1C3FAD630(v26, v25, v27, v28);
  sub_1C3F7E2CC(v27, v28);
  sub_1C3F7E2CC(v26, v25);
  if ((v29 & 1) == 0) {
    goto LABEL_17;
  }
  uint64_t v30 = a1 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  sub_1C3F970C4(v30, (uint64_t)v24, &qword_1EA39CA18);
  uint64_t v31 = a2 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  uint64_t v32 = (uint64_t)&v19[*(int *)(v17 + 48)];
  sub_1C3F970C4((uint64_t)v24, (uint64_t)v19, &qword_1EA39CA18);
  sub_1C3F970C4(v31, v32, &qword_1EA39CA18);
  uint64_t v33 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v87 + 48);
  uint64_t v34 = v88;
  uint64_t v35 = a2;
  uint64_t v36 = a1;
  if (v33((uint64_t)v19, 1, v88) == 1)
  {
    sub_1C3F962E0((uint64_t)v24, &qword_1EA39CA18);
    if (v33(v32, 1, v34) == 1)
    {
      sub_1C3F962E0((uint64_t)v19, &qword_1EA39CA18);
      goto LABEL_10;
    }
LABEL_8:
    uint64_t v38 = &qword_1EA39CA20;
    uint64_t v39 = (uint64_t)v19;
LABEL_16:
    sub_1C3F962E0(v39, v38);
    goto LABEL_17;
  }
  uint64_t v37 = v86;
  sub_1C3F970C4((uint64_t)v19, v86, &qword_1EA39CA18);
  if (v33(v32, 1, v34) == 1)
  {
    sub_1C3F962E0((uint64_t)v24, &qword_1EA39CA18);
    sub_1C4049E78(v37, type metadata accessor for Proto4_Version);
    goto LABEL_8;
  }
  uint64_t v40 = v77;
  sub_1C404D5A4(v32, v77, type metadata accessor for Proto4_Version);
  sub_1C404BA6C(&qword_1EA39C800, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  char v41 = sub_1C4497178();
  sub_1C4049E78(v40, type metadata accessor for Proto4_Version);
  sub_1C3F962E0((uint64_t)v24, &qword_1EA39CA18);
  sub_1C4049E78(v37, type metadata accessor for Proto4_Version);
  sub_1C3F962E0((uint64_t)v19, &qword_1EA39CA18);
  if ((v41 & 1) == 0)
  {
LABEL_17:
    swift_release();
    swift_release();
    return 0;
  }
LABEL_10:
  uint64_t v42 = v36 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__crdt;
  swift_beginAccess();
  uint64_t v43 = v85;
  sub_1C3F970C4(v42, v85, &qword_1EA39C8C8);
  uint64_t v44 = a2 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__crdt;
  swift_beginAccess();
  uint64_t v45 = v84;
  uint64_t v46 = v84 + *(int *)(v81 + 48);
  sub_1C3F970C4(v43, v84, &qword_1EA39C8C8);
  sub_1C3F970C4(v44, v46, &qword_1EA39C8C8);
  uint64_t v47 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
  uint64_t v48 = v83;
  if (v47(v45, 1, v83) == 1)
  {
    sub_1C3F962E0(v43, &qword_1EA39C8C8);
    int v49 = v47(v46, 1, v48);
    uint64_t v50 = (uint64_t)v80;
    uint64_t v51 = (uint64_t)v78;
    uint64_t v52 = v79;
    if (v49 == 1)
    {
      sub_1C3F962E0(v45, &qword_1EA39C8C8);
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  uint64_t v53 = v76;
  sub_1C3F970C4(v45, v76, &qword_1EA39C8C8);
  int v54 = v47(v46, 1, v48);
  uint64_t v55 = v80;
  uint64_t v52 = v79;
  if (v54 == 1)
  {
    sub_1C3F962E0(v43, &qword_1EA39C8C8);
    sub_1C4049E78(v53, type metadata accessor for Proto4_CRDT);
LABEL_15:
    uint64_t v38 = &qword_1EA39C8D0;
    uint64_t v39 = v45;
    goto LABEL_16;
  }
  uint64_t v57 = v53;
  uint64_t v58 = v72;
  sub_1C404D5A4(v46, v72, type metadata accessor for Proto4_CRDT);
  sub_1C404BA6C(&qword_1EA39BED0, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
  char v59 = sub_1C4497178();
  sub_1C4049E78(v58, type metadata accessor for Proto4_CRDT);
  sub_1C3F962E0(v85, &qword_1EA39C8C8);
  sub_1C4049E78(v57, type metadata accessor for Proto4_CRDT);
  sub_1C3F962E0(v45, &qword_1EA39C8C8);
  uint64_t v50 = (uint64_t)v55;
  uint64_t v51 = (uint64_t)v78;
  if ((v59 & 1) == 0) {
    goto LABEL_17;
  }
LABEL_20:
  uint64_t v60 = v36 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__keyPath;
  swift_beginAccess();
  sub_1C3F970C4(v60, v51, &qword_1EA39CA38);
  uint64_t v61 = v35 + OBJC_IVAR____TtCV9Coherence16Proto4_ReferenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__keyPath;
  swift_beginAccess();
  uint64_t v62 = v75;
  uint64_t v63 = v75 + *(int *)(v73 + 48);
  sub_1C3F970C4(v51, v75, &qword_1EA39CA38);
  uint64_t v64 = v62;
  sub_1C3F970C4(v61, v63, &qword_1EA39CA38);
  uint64_t v65 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
  uint64_t v66 = v62;
  uint64_t v67 = v74;
  if (v65(v66, 1, v74) != 1)
  {
    sub_1C3F970C4(v64, v50, &qword_1EA39CA38);
    if (v65(v63, 1, v67) == 1)
    {
      swift_release();
      swift_release();
      sub_1C3F962E0(v51, &qword_1EA39CA38);
      sub_1C4049E78(v50, type metadata accessor for Proto4_KeyPath);
      goto LABEL_25;
    }
    uint64_t v68 = v71;
    sub_1C404D5A4(v63, v71, type metadata accessor for Proto4_KeyPath);
    sub_1C404BA6C(&qword_1EA39C858, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
    char v69 = sub_1C4497178();
    swift_release();
    swift_release();
    sub_1C4049E78(v68, type metadata accessor for Proto4_KeyPath);
    sub_1C3F962E0(v51, &qword_1EA39CA38);
    sub_1C4049E78(v50, type metadata accessor for Proto4_KeyPath);
    sub_1C3F962E0(v64, &qword_1EA39CA38);
    return (v69 & 1) != 0;
  }
  swift_release();
  swift_release();
  sub_1C3F962E0(v51, &qword_1EA39CA38);
  if (v65(v63, 1, v67) != 1)
  {
LABEL_25:
    sub_1C3F962E0(v64, &qword_1EA39CA40);
    return 0;
  }
  sub_1C3F962E0(v64, &qword_1EA39CA38);
  return 1;
}

uint64_t sub_1C403E1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B988, &qword_1EA39C268, a2);
}

unint64_t sub_1C403E1F8()
{
  return 0xD000000000000010;
}

uint64_t sub_1C403E214(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_Reference, (void (*)(void))type metadata accessor for Proto4_Reference._StorageClass, sub_1C403C6A8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C403CCB0);
}

uint64_t sub_1C403E27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Reference, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C403CF0C);
}

uint64_t sub_1C403E2BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C938, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C403E338(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Reference, (uint64_t (*)(uint64_t, uint64_t))sub_1C403D598) & 1;
}

uint64_t sub_1C403E37C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B980, (uint64_t)qword_1EA3B8B98, a1);
}

uint64_t sub_1C403E3A0(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C720, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C403E40C()
{
  sub_1C404BA6C(&qword_1EA39C720, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
  return sub_1C4496AC8();
}

uint64_t sub_1C403E488()
{
  sub_1C404BA6C(&qword_1EA39C938, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
  return sub_1C44968D8();
}

uint64_t sub_1C403E50C(uint64_t a1)
{
  return sub_1C4041028(a1, qword_1EA3B8BB0, (uint64_t)"wrapped", 7);
}

uint64_t sub_1C403E524(uint64_t a1)
{
  return sub_1C402E7D0(a1, (void (*)(void))type metadata accessor for Proto4_Optional._StorageClass, &OBJC_IVAR____TtCV9Coherence15Proto4_OptionalP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped, type metadata accessor for Proto4_Value, &qword_1EA39C270);
}

uint64_t sub_1C403E560()
{
  return sub_1C3F5E2CC(&OBJC_IVAR____TtCV9Coherence15Proto4_OptionalP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped, &qword_1EA39C9F8);
}

uint64_t sub_1C403E574()
{
  return type metadata accessor for Proto4_Optional._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Optional._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C400);
}

void sub_1C403E59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C403E5BC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_1C402B9C4(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C403E654(uint64_t a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(int *)(type metadata accessor for Proto4_Optional(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v8 = *(void *)(v1 + v7);
    type metadata accessor for Proto4_Optional._StorageClass(0);
    uint64_t v9 = swift_allocObject();
    v15[9] = v2;
    uint64_t v10 = v9;
    v15[1] = a1;
    uint64_t v11 = v9 + OBJC_IVAR____TtCV9Coherence15Proto4_OptionalP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
    uint64_t v12 = type metadata accessor for Proto4_Value(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
    uint64_t v13 = v8 + OBJC_IVAR____TtCV9Coherence15Proto4_OptionalP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
    swift_beginAccess();
    sub_1C3F970C4(v13, (uint64_t)v6, &qword_1EA39C9F8);
    swift_beginAccess();
    sub_1C3F98338((uint64_t)v6, v11, &qword_1EA39C9F8);
    swift_endAccess();
    *(void *)(v1 + v7) = v10;
    swift_release();
  }
  swift_retain();
  sub_1C403E82C();
  return swift_release();
}

uint64_t sub_1C403E82C()
{
  uint64_t result = sub_1C4496908();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto4_Value(0);
        sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
        sub_1C4496A78();
        swift_endAccess();
      }
      uint64_t result = sub_1C4496908();
    }
  }
  return result;
}

uint64_t sub_1C403E94C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[5] = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Proto4_Value(0);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1 + OBJC_IVAR____TtCV9Coherence15Proto4_OptionalP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
  swift_beginAccess();
  sub_1C3F970C4(v12, (uint64_t)v7, &qword_1EA39C9F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1) {
    return sub_1C3F962E0((uint64_t)v7, &qword_1EA39C9F8);
  }
  sub_1C404D5A4((uint64_t)v7, (uint64_t)v11, type metadata accessor for Proto4_Value);
  sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
  sub_1C4496BD8();
  return sub_1C4049E78((uint64_t)v11, type metadata accessor for Proto4_Value);
}

BOOL sub_1C403EB68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto4_Value(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v25 = (uint64_t)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA08);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = a1 + OBJC_IVAR____TtCV9Coherence15Proto4_OptionalP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
  swift_beginAccess();
  sub_1C3F970C4(v17, (uint64_t)v16, &qword_1EA39C9F8);
  uint64_t v18 = a2 + OBJC_IVAR____TtCV9Coherence15Proto4_OptionalP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1C3F970C4((uint64_t)v16, (uint64_t)v10, &qword_1EA39C9F8);
  sub_1C3F970C4(v18, v19, &qword_1EA39C9F8);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v10, 1, v4) == 1)
  {
    sub_1C3F962E0((uint64_t)v16, &qword_1EA39C9F8);
    if (v20(v19, 1, v4) == 1)
    {
      sub_1C3F962E0((uint64_t)v10, &qword_1EA39C9F8);
      return 1;
    }
    goto LABEL_6;
  }
  sub_1C3F970C4((uint64_t)v10, (uint64_t)v14, &qword_1EA39C9F8);
  if (v20(v19, 1, v4) == 1)
  {
    sub_1C3F962E0((uint64_t)v16, &qword_1EA39C9F8);
    sub_1C4049E78((uint64_t)v14, type metadata accessor for Proto4_Value);
LABEL_6:
    sub_1C3F962E0((uint64_t)v10, &qword_1EA39CA08);
    return 0;
  }
  uint64_t v21 = v25;
  sub_1C404D5A4(v19, v25, type metadata accessor for Proto4_Value);
  sub_1C404BA6C(&qword_1EA39BEA0, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
  char v22 = sub_1C4497178();
  sub_1C4049E78(v21, type metadata accessor for Proto4_Value);
  sub_1C3F962E0((uint64_t)v16, &qword_1EA39C9F8);
  sub_1C4049E78((uint64_t)v14, type metadata accessor for Proto4_Value);
  sub_1C3F962E0((uint64_t)v10, &qword_1EA39C9F8);
  return (v22 & 1) != 0;
}

uint64_t sub_1C403EF04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B998, &qword_1EA39C270, a2);
}

uint64_t sub_1C403EF28()
{
  return 0x4F2E346F746F7250;
}

uint64_t sub_1C403EF4C(uint64_t a1)
{
  return sub_1C403E654(a1);
}

uint64_t sub_1C403EF64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Optional, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C403E94C);
}

uint64_t sub_1C403EFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C930, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C403F020(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Optional, (uint64_t (*)(uint64_t, uint64_t))sub_1C403EB68) & 1;
}

uint64_t sub_1C403F064@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B990, (uint64_t)qword_1EA3B8BB0, a1);
}

uint64_t sub_1C403F088(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C708, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C403F0F4()
{
  sub_1C404BA6C(&qword_1EA39C708, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
  return sub_1C4496AC8();
}

uint64_t sub_1C403F170()
{
  sub_1C404BA6C(&qword_1EA39C930, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
  return sub_1C44968D8();
}

uint64_t sub_1C403F1F4()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8BC8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8BC8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449B4A0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "tag";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "wrapped";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C403F3AC(uint64_t a1)
{
  return sub_1C404019C(a1, (void (*)(void))type metadata accessor for Proto4_TaggedCRDT._StorageClass, &OBJC_IVAR____TtCV9Coherence17Proto4_TaggedCRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped, type metadata accessor for Proto4_CRDT, &qword_1EA39C278);
}

uint64_t sub_1C403F3E8()
{
  return sub_1C3F5E2CC(&OBJC_IVAR____TtCV9Coherence17Proto4_TaggedCRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped, &qword_1EA39C8C8);
}

uint64_t sub_1C403F3FC()
{
  return type metadata accessor for Proto4_TaggedCRDT._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_TaggedCRDT._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C418);
}

void sub_1C403F424(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_1C403F450()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto4_TaggedCRDT(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_TaggedCRDT._StorageClass(0);
    swift_allocObject();
    uint64_t v2 = swift_retain();
    *(void *)(v0 + v1) = sub_1C404023C(v2, &qword_1EA39C8C8, &OBJC_IVAR____TtCV9Coherence17Proto4_TaggedCRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped, type metadata accessor for Proto4_CRDT);
    swift_release();
  }
  swift_retain();
  sub_1C403F540();
  return swift_release();
}

uint64_t sub_1C403F540()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_1C44969B8();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1C4496908();
    }
    swift_beginAccess();
    type metadata accessor for Proto4_CRDT(0);
    sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
    uint64_t v4 = v3;
    sub_1C4496A78();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C403F694(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for Proto4_CRDT(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (!*(void *)(a1 + 16) || (uint64_t result = sub_1C4496B58(), !v1))
  {
    uint64_t v11 = a1
        + OBJC_IVAR____TtCV9Coherence17Proto4_TaggedCRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
    swift_beginAccess();
    sub_1C3F970C4(v11, (uint64_t)v5, &qword_1EA39C8C8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      return sub_1C3F962E0((uint64_t)v5, &qword_1EA39C8C8);
    }
    else
    {
      sub_1C404D5A4((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto4_CRDT);
      sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
      sub_1C4496BD8();
      return sub_1C4049E78((uint64_t)v9, type metadata accessor for Proto4_CRDT);
    }
  }
  return result;
}

BOOL sub_1C403F8E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto4_CRDT(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D0);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8C8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v25 - v15;
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (v17 != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v26 = v7;
  uint64_t v18 = a1 + OBJC_IVAR____TtCV9Coherence17Proto4_TaggedCRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v16, &qword_1EA39C8C8);
  uint64_t v19 = a2 + OBJC_IVAR____TtCV9Coherence17Proto4_TaggedCRDTP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
  swift_beginAccess();
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1C3F970C4((uint64_t)v16, (uint64_t)v10, &qword_1EA39C8C8);
  sub_1C3F970C4(v19, v20, &qword_1EA39C8C8);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_1C3F962E0((uint64_t)v16, &qword_1EA39C8C8);
    if (v21(v20, 1, v4) == 1)
    {
      sub_1C3F962E0((uint64_t)v10, &qword_1EA39C8C8);
      return 1;
    }
    goto LABEL_7;
  }
  sub_1C3F970C4((uint64_t)v10, (uint64_t)v14, &qword_1EA39C8C8);
  if (v21(v20, 1, v4) == 1)
  {
    sub_1C3F962E0((uint64_t)v16, &qword_1EA39C8C8);
    sub_1C4049E78((uint64_t)v14, type metadata accessor for Proto4_CRDT);
LABEL_7:
    sub_1C3F962E0((uint64_t)v10, &qword_1EA39C8D0);
    return 0;
  }
  uint64_t v23 = (uint64_t)v26;
  sub_1C404D5A4(v20, (uint64_t)v26, type metadata accessor for Proto4_CRDT);
  sub_1C404BA6C(&qword_1EA39BED0, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
  char v24 = sub_1C4497178();
  sub_1C4049E78(v23, type metadata accessor for Proto4_CRDT);
  sub_1C3F962E0((uint64_t)v16, &qword_1EA39C8C8);
  sub_1C4049E78((uint64_t)v14, type metadata accessor for Proto4_CRDT);
  sub_1C3F962E0((uint64_t)v10, &qword_1EA39C8C8);
  return (v24 & 1) != 0;
}

uint64_t sub_1C403FCC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B9A8, &qword_1EA39C278, a2);
}

unint64_t sub_1C403FCE4()
{
  return 0xD000000000000011;
}

uint64_t sub_1C403FD00()
{
  return sub_1C403F450();
}

uint64_t sub_1C403FD18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_TaggedCRDT, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C403F694);
}

uint64_t sub_1C403FD58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9A0, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C403FDD4(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_TaggedCRDT, (uint64_t (*)(uint64_t, uint64_t))sub_1C403F8E8) & 1;
}

uint64_t sub_1C403FE18@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B9A0, (uint64_t)qword_1EA3B8BC8, a1);
}

uint64_t sub_1C403FE3C(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C6E8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C403FEA8()
{
  sub_1C404BA6C(&qword_1EA39C6E8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
  return sub_1C4496AC8();
}

uint64_t sub_1C403FF24()
{
  sub_1C404BA6C(&qword_1EA39C9A0, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
  return sub_1C44968D8();
}

uint64_t sub_1C403FFA8()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8BE0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8BE0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449B4A0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "tag";
  *(void *)(v6 + 8) = 3;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "wrapped";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C4040160(uint64_t a1)
{
  return sub_1C404019C(a1, (void (*)(void))type metadata accessor for Proto4_TaggedValue._StorageClass, &OBJC_IVAR____TtCV9Coherence18Proto4_TaggedValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped, type metadata accessor for Proto4_Value, &qword_1EA39C280);
}

uint64_t sub_1C404019C(uint64_t a1, void (*a2)(void), void *a3, uint64_t (*a4)(void), uint64_t *a5)
{
  a2(0);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = 0;
  uint64_t v9 = v8 + *a3;
  uint64_t v10 = a4(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  *a5 = v8;
  return result;
}

uint64_t sub_1C404023C(uint64_t a1, uint64_t *a2, void *a3, uint64_t (*a4)(void))
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)(v4 + 16) = 0;
  uint64_t v12 = v4 + *a3;
  uint64_t v13 = a4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a1 + 16);
  swift_beginAccess();
  *(void *)(v4 + 16) = v14;
  uint64_t v15 = a1 + *a3;
  swift_beginAccess();
  sub_1C3F970C4(v15, (uint64_t)v11, a2);
  swift_release();
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v11, v12, a2);
  swift_endAccess();
  return v4;
}

uint64_t sub_1C40403B4()
{
  return sub_1C3F5E2CC(&OBJC_IVAR____TtCV9Coherence18Proto4_TaggedValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped, &qword_1EA39C9F8);
}

uint64_t sub_1C40403C8()
{
  return type metadata accessor for Proto4_TaggedValue._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_TaggedValue._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C430);
}

void sub_1C40403F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C404041C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  sub_1C402B9C4(319, a5, a6);
  if (v6 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C40404B8()
{
  uint64_t v1 = *(int *)(type metadata accessor for Proto4_TaggedValue(0) + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto4_TaggedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v2 = swift_retain();
    *(void *)(v0 + v1) = sub_1C404023C(v2, &qword_1EA39C9F8, &OBJC_IVAR____TtCV9Coherence18Proto4_TaggedValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped, type metadata accessor for Proto4_Value);
    swift_release();
  }
  swift_retain();
  sub_1C40405A8();
  return swift_release();
}

uint64_t sub_1C40405A8()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        uint64_t v4 = v3;
        sub_1C44969B8();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1C4496908();
    }
    swift_beginAccess();
    type metadata accessor for Proto4_Value(0);
    sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
    uint64_t v4 = v3;
    sub_1C4496A78();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C40406FC(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for Proto4_Value(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  if (!*(void *)(a1 + 16) || (uint64_t result = sub_1C4496B58(), !v1))
  {
    uint64_t v11 = a1
        + OBJC_IVAR____TtCV9Coherence18Proto4_TaggedValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
    swift_beginAccess();
    sub_1C3F970C4(v11, (uint64_t)v5, &qword_1EA39C9F8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      return sub_1C3F962E0((uint64_t)v5, &qword_1EA39C9F8);
    }
    else
    {
      sub_1C404D5A4((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto4_Value);
      sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
      sub_1C4496BD8();
      return sub_1C4049E78((uint64_t)v9, type metadata accessor for Proto4_Value);
    }
  }
  return result;
}

BOOL sub_1C4040950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto4_Value(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA08);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C9F8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v25 - v15;
  swift_beginAccess();
  uint64_t v17 = *(void *)(a1 + 16);
  swift_beginAccess();
  if (v17 != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v26 = v7;
  uint64_t v18 = a1 + OBJC_IVAR____TtCV9Coherence18Proto4_TaggedValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v16, &qword_1EA39C9F8);
  uint64_t v19 = a2 + OBJC_IVAR____TtCV9Coherence18Proto4_TaggedValueP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__wrapped;
  swift_beginAccess();
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1C3F970C4((uint64_t)v16, (uint64_t)v10, &qword_1EA39C9F8);
  sub_1C3F970C4(v19, v20, &qword_1EA39C9F8);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_1C3F962E0((uint64_t)v16, &qword_1EA39C9F8);
    if (v21(v20, 1, v4) == 1)
    {
      sub_1C3F962E0((uint64_t)v10, &qword_1EA39C9F8);
      return 1;
    }
    goto LABEL_7;
  }
  sub_1C3F970C4((uint64_t)v10, (uint64_t)v14, &qword_1EA39C9F8);
  if (v21(v20, 1, v4) == 1)
  {
    sub_1C3F962E0((uint64_t)v16, &qword_1EA39C9F8);
    sub_1C4049E78((uint64_t)v14, type metadata accessor for Proto4_Value);
LABEL_7:
    sub_1C3F962E0((uint64_t)v10, &qword_1EA39CA08);
    return 0;
  }
  uint64_t v23 = (uint64_t)v26;
  sub_1C404D5A4(v20, (uint64_t)v26, type metadata accessor for Proto4_Value);
  sub_1C404BA6C(&qword_1EA39BEA0, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
  char v24 = sub_1C4497178();
  sub_1C4049E78(v23, type metadata accessor for Proto4_Value);
  sub_1C3F962E0((uint64_t)v16, &qword_1EA39C9F8);
  sub_1C4049E78((uint64_t)v14, type metadata accessor for Proto4_Value);
  sub_1C3F962E0((uint64_t)v10, &qword_1EA39C9F8);
  return (v24 & 1) != 0;
}

uint64_t sub_1C4040D28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B9B8, &qword_1EA39C280, a2);
}

unint64_t sub_1C4040D4C()
{
  return 0xD000000000000012;
}

uint64_t sub_1C4040D68()
{
  return sub_1C40404B8();
}

uint64_t sub_1C4040D80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_TaggedValue, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C40406FC);
}

uint64_t sub_1C4040DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C928, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4040E3C(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_TaggedValue, (uint64_t (*)(uint64_t, uint64_t))sub_1C4040950) & 1;
}

uint64_t sub_1C4040E80@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B9B0, (uint64_t)qword_1EA3B8BE0, a1);
}

uint64_t sub_1C4040EA4(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C6C8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C4040F10()
{
  sub_1C404BA6C(&qword_1EA39C6C8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
  return sub_1C4496AC8();
}

uint64_t sub_1C4040F8C()
{
  sub_1C404BA6C(&qword_1EA39C928, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
  return sub_1C44968D8();
}

uint64_t sub_1C4041010(uint64_t a1)
{
  return sub_1C4041028(a1, qword_1EA3B8BF8, (uint64_t)"siblings", 8);
}

uint64_t sub_1C4041028(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_1C4496C18();
  __swift_allocate_value_buffer(v7, a2);
  __swift_project_value_buffer(v7, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v8 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v8 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C449B490;
  unint64_t v11 = v10 + v9 + v8[14];
  *(void *)(v10 + v9) = 1;
  *(void *)unint64_t v11 = a3;
  *(void *)(v11 + 8) = a4;
  *(unsigned char *)(v11 + 16) = 2;
  uint64_t v12 = *MEMORY[0x1E4F70FB8];
  uint64_t v13 = sub_1C4496BE8();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  return sub_1C4496BF8();
}

uint64_t sub_1C4041184(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), unint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t result = sub_1C4496908();
  if (!v6)
  {
    while ((v10 & 1) == 0)
    {
      if (result == 1)
      {
        a4(0);
        sub_1C404BA6C(a5, a6);
        sub_1C4496A68();
      }
      uint64_t result = sub_1C4496908();
    }
  }
  return result;
}

uint64_t sub_1C4041290()
{
  if (!*(void *)(*(void *)v0 + 16)
    || (type metadata accessor for Proto4_CustomCRDT.Sibling(0),
        sub_1C404BA6C(&qword_1EA39C688, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT.Sibling), uint64_t result = sub_1C4496BC8(), !v1))
  {
    type metadata accessor for Proto4_CustomCRDT(0);
    return sub_1C4496878();
  }
  return result;
}

uint64_t sub_1C404137C(char *a1, uint64_t (*a2)(void, void), uint64_t (*a3)(void))
{
  uint64_t v7 = sub_1C4496898();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  unint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v19 - v12;
  if (a2(*(void *)v3, *(void *)a1))
  {
    uint64_t v14 = a3(0);
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v15(v13, &v3[*(int *)(v14 + 20)], v7);
    v15(v11, &a1[*(int *)(v14 + 20)], v7);
    sub_1C404BA6C(&qword_1EA39BEF0, MEMORY[0x1E4F70E60]);
    char v16 = sub_1C4497178();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v8 + 8);
    v17(v11, v7);
    v17(v13, v7);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

unint64_t sub_1C4041544()
{
  return 0xD000000000000011;
}

uint64_t sub_1C4041560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 20);
  uint64_t v5 = sub_1C4496898();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1C40415D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 20);
  uint64_t v5 = sub_1C4496898();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t sub_1C4041640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C4041184(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_CustomCRDT.Sibling, &qword_1EA39C688, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT.Sibling);
}

uint64_t sub_1C404169C()
{
  return sub_1C4041290();
}

uint64_t sub_1C40416B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C998, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4041730(char *a1)
{
  return sub_1C404137C(a1, sub_1C3FE9C60, type metadata accessor for Proto4_CustomCRDT) & 1;
}

uint64_t sub_1C4041774@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B9C0, (uint64_t)qword_1EA3B8BF8, a1);
}

uint64_t sub_1C4041798(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C6A8, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C4041804()
{
  sub_1C404BA6C(&qword_1EA39C6A8, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
  return sub_1C4496AC8();
}

uint64_t sub_1C4041880()
{
  sub_1C404BA6C(&qword_1EA39C998, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
  return sub_1C44968D8();
}

uint64_t sub_1C4041904()
{
  uint64_t result = sub_1C4497268();
  qword_1EA3B8C10 = 0xD000000000000011;
  *(void *)algn_1EA3B8C18 = 0x80000001C44B2210;
  return result;
}

uint64_t sub_1C4041970()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8C20);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8C20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449B4A0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "version";
  *(void *)(v6 + 8) = 7;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "data";
  *((void *)v10 + 1) = 4;
  v10[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C4041B28()
{
  type metadata accessor for Proto4_CustomCRDT.Sibling._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  uint64_t v2 = type metadata accessor for Proto4_Version(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  unint64_t v3 = (uint64_t *)(v0
                 + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__data);
  uint64_t result = sub_1C4496868();
  *unint64_t v3 = result;
  v3[1] = v5;
  qword_1EA39C288 = v0;
  return result;
}

uint64_t sub_1C4041BC4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1
     + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  uint64_t v7 = type metadata accessor for Proto4_Version(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (uint64_t *)(v1
                 + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__data);
  *uint64_t v8 = sub_1C4496868();
  v8[1] = v9;
  uint64_t v10 = a1
      + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  sub_1C3F970C4(v10, (uint64_t)v5, &qword_1EA39CA18);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v6, &qword_1EA39CA18);
  swift_endAccess();
  unint64_t v11 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__data);
  swift_beginAccess();
  uint64_t v13 = *v11;
  unint64_t v12 = v11[1];
  sub_1C3F7E324(v13, v12);
  swift_release();
  swift_beginAccess();
  uint64_t v14 = *v8;
  unint64_t v15 = v8[1];
  *uint64_t v8 = v13;
  v8[1] = v12;
  sub_1C3F7E2CC(v14, v15);
  return v1;
}

uint64_t sub_1C4041D60()
{
  sub_1C3F962E0(v0+ OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version, &qword_1EA39CA18);
  sub_1C3F7E2CC(*(void *)(v0+ OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__data), *(void *)(v0+ OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__data+ 8));
  return swift_deallocClassInstance();
}

uint64_t sub_1C4041DE0()
{
  return type metadata accessor for Proto4_CustomCRDT.Sibling._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_CustomCRDT.Sibling._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C450);
}

void sub_1C4041E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1C4041E30(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  sub_1C402B9C4(319, a4, a5);
  if (v5 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C4041ECC()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 2) {
        break;
      }
      if (result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto4_Version(0);
        sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
        uint64_t v4 = v3;
        sub_1C4496A78();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1C4496908();
    }
    swift_beginAccess();
    uint64_t v4 = v3;
    sub_1C4496988();
LABEL_5:
    uint64_t v3 = v4;
    swift_endAccess();
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C4042028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[9] = a4;
  v18[1] = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto4_Version(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1
      + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  sub_1C3F970C4(v13, (uint64_t)v8, &qword_1EA39CA18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C3F962E0((uint64_t)v8, &qword_1EA39CA18);
  }
  else
  {
    sub_1C404D5A4((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto4_Version);
    sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
    sub_1C4496BD8();
    uint64_t result = sub_1C4049E78((uint64_t)v12, type metadata accessor for Proto4_Version);
    if (v4) {
      return result;
    }
  }
  uint64_t v15 = a1
      + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__data;
  uint64_t result = swift_beginAccess();
  uint64_t v16 = *(void *)v15;
  unint64_t v17 = *(void *)(v15 + 8);
  switch(v17 >> 62)
  {
    case 1uLL:
      if ((int)v16 != v16 >> 32) {
        goto LABEL_10;
      }
      break;
    case 2uLL:
      if (*(void *)(v16 + 16) != *(void *)(v16 + 24)) {
        goto LABEL_10;
      }
      break;
    case 3uLL:
      return result;
    default:
      if ((v17 & 0xFF000000000000) != 0)
      {
LABEL_10:
        sub_1C3F7E324(*(void *)v15, *(void *)(v15 + 8));
        sub_1C4496B38();
        uint64_t result = sub_1C3F7E2CC(v16, v17);
      }
      break;
  }
  return result;
}

uint64_t sub_1C4042318(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v3 = type metadata accessor for Proto4_Version(0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v33 = (uint64_t)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA20);
  uint64_t v7 = v6 - 8;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = a1
      + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v15, &qword_1EA39CA18);
  uint64_t v17 = v34;
  uint64_t v18 = v34
      + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  uint64_t v19 = (uint64_t)&v9[*(int *)(v7 + 56)];
  sub_1C3F970C4((uint64_t)v15, (uint64_t)v9, &qword_1EA39CA18);
  sub_1C3F970C4(v18, v19, &qword_1EA39CA18);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v20((uint64_t)v9, 1, v3) != 1)
  {
    sub_1C3F970C4((uint64_t)v9, (uint64_t)v13, &qword_1EA39CA18);
    if (v20(v19, 1, v3) != 1)
    {
      uint64_t v23 = v33;
      sub_1C404D5A4(v19, v33, type metadata accessor for Proto4_Version);
      sub_1C404BA6C(&qword_1EA39C800, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
      uint64_t v22 = a1;
      swift_retain();
      swift_retain();
      char v24 = sub_1C4497178();
      sub_1C4049E78(v23, type metadata accessor for Proto4_Version);
      sub_1C3F962E0((uint64_t)v15, &qword_1EA39CA18);
      sub_1C4049E78((uint64_t)v13, type metadata accessor for Proto4_Version);
      sub_1C3F962E0((uint64_t)v9, &qword_1EA39CA18);
      if (v24) {
        goto LABEL_8;
      }
LABEL_9:
      swift_release();
      swift_release();
      char v31 = 0;
      return v31 & 1;
    }
    swift_retain();
    swift_retain();
    sub_1C3F962E0((uint64_t)v15, &qword_1EA39CA18);
    sub_1C4049E78((uint64_t)v13, type metadata accessor for Proto4_Version);
LABEL_6:
    sub_1C3F962E0((uint64_t)v9, &qword_1EA39CA20);
    goto LABEL_9;
  }
  swift_retain();
  swift_retain();
  sub_1C3F962E0((uint64_t)v15, &qword_1EA39CA18);
  unsigned int v21 = v20(v19, 1, v3);
  uint64_t v22 = a1;
  if (v21 != 1) {
    goto LABEL_6;
  }
  sub_1C3F962E0((uint64_t)v9, &qword_1EA39CA18);
LABEL_8:
  uint64_t v25 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__data);
  swift_beginAccess();
  uint64_t v26 = *v25;
  unint64_t v27 = v25[1];
  unint64_t v28 = (uint64_t *)(v17
                  + OBJC_IVAR____TtCVV9Coherence17Proto4_CustomCRDT7SiblingP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__data);
  swift_beginAccess();
  uint64_t v29 = *v28;
  unint64_t v30 = v28[1];
  sub_1C3F7E324(v26, v27);
  sub_1C3F7E324(v29, v30);
  char v31 = sub_1C3FAD630(v26, v27, v29, v30);
  swift_release();
  swift_release();
  sub_1C3F7E2CC(v29, v30);
  sub_1C3F7E2CC(v26, v27);
  return v31 & 1;
}

uint64_t sub_1C40427A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B9D8, &qword_1EA39C288, a2);
}

uint64_t sub_1C40427C8(uint64_t a1, uint64_t a2)
{
  return sub_1C404B454(a1, a2, &qword_1EA39B9C8, &qword_1EA3B8C10);
}

uint64_t sub_1C40427F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_CustomCRDT.Sibling, (void (*)(void))type metadata accessor for Proto4_CustomCRDT.Sibling._StorageClass, sub_1C4041BC4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4041ECC);
}

uint64_t sub_1C4042858(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_CustomCRDT.Sibling, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4042028);
}

uint64_t sub_1C4042898(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39CA48, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT.Sibling);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4042914(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_CustomCRDT.Sibling, sub_1C4042318) & 1;
}

uint64_t sub_1C4042958@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B9D0, (uint64_t)qword_1EA3B8C20, a1);
}

uint64_t sub_1C404297C(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C688, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT.Sibling);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C40429E8()
{
  sub_1C404BA6C(&qword_1EA39C688, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT.Sibling);
  return sub_1C4496AC8();
}

uint64_t sub_1C4042A64()
{
  sub_1C404BA6C(&qword_1EA39CA48, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT.Sibling);
  return sub_1C44968D8();
}

uint64_t sub_1C4042AE8()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8C38);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8C38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449BE00;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "string";
  *(void *)(v6 + 8) = 6;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "element";
  *(void *)(v10 + 8) = 7;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "subsequence";
  *((void *)v12 + 1) = 11;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "version";
  *((void *)v14 + 1) = 7;
  v14[16] = 2;
  v9();
  uint64_t v15 = v5 + 4 * v2 + v1[14];
  *(void *)(v5 + 4 * v2) = 5;
  *(void *)uint64_t v15 = "addedByVersion";
  *(void *)(v15 + 8) = 14;
  *(unsigned char *)(v15 + 16) = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C4042D6C()
{
  type metadata accessor for Proto4_Sequence._StorageClass(0);
  uint64_t v0 = (void *)swift_allocObject();
  uint64_t v1 = MEMORY[0x1E4FBC860];
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = v1;
  v0[5] = v1;
  uint64_t v2 = (char *)v0
     + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  uint64_t v3 = type metadata accessor for Proto4_Version(0);
  uint64_t v4 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v4)((char *)v0+ OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedByVersion, 1, 1, v3);
  qword_1EA39C290 = (uint64_t)v0;
  return result;
}

void *sub_1C4042E40(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v1[2] = 0;
  v1[3] = 0xE000000000000000;
  uint64_t v6 = MEMORY[0x1E4FBC860];
  v1[4] = MEMORY[0x1E4FBC860];
  v1[5] = v6;
  uint64_t v7 = (uint64_t)v1
     + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  uint64_t v8 = type metadata accessor for Proto4_Version(0);
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v9)(v7, 1, 1, v8);
  uint64_t v19 = (char *)v1
      + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedByVersion;
  v9();
  swift_beginAccess();
  uint64_t v10 = a1[2];
  uint64_t v11 = a1[3];
  swift_beginAccess();
  void v1[2] = v10;
  v1[3] = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v12 = a1[4];
  swift_beginAccess();
  v1[4] = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v13 = a1[5];
  swift_beginAccess();
  v1[5] = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t)a1
      + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
  swift_beginAccess();
  sub_1C3F970C4(v14, (uint64_t)v5, &qword_1EA39CA18);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v7, &qword_1EA39CA18);
  swift_endAccess();
  uint64_t v15 = (uint64_t)a1
      + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedByVersion;
  swift_beginAccess();
  sub_1C3F970C4(v15, (uint64_t)v5, &qword_1EA39CA18);
  swift_release();
  uint64_t v16 = (uint64_t)v19;
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v16, &qword_1EA39CA18);
  swift_endAccess();
  return v1;
}

uint64_t sub_1C4043118()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version, &qword_1EA39CA18);
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedByVersion, &qword_1EA39CA18);
  return swift_deallocClassInstance();
}

uint64_t sub_1C40431BC()
{
  return type metadata accessor for Proto4_Sequence._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Sequence._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C470);
}

void sub_1C40431E4()
{
  sub_1C402B9C4(319, &qword_1EA39C360, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1C40432AC()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_1C4496A28();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          type metadata accessor for Proto4_CRDT(0);
          sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
          goto LABEL_12;
        case 3:
          swift_beginAccess();
          type metadata accessor for Proto4_Subsequence(0);
          sub_1C404BA6C(&qword_1EA39C650, (void (*)(uint64_t))type metadata accessor for Proto4_Subsequence);
LABEL_12:
          uint64_t v4 = v3;
          sub_1C4496A68();
          goto LABEL_5;
        case 4:
        case 5:
          swift_beginAccess();
          type metadata accessor for Proto4_Version(0);
          sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
          uint64_t v4 = v3;
          sub_1C4496A78();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_1C4496908();
    }
  }
  return result;
}

uint64_t sub_1C4043534(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v30 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = type metadata accessor for Proto4_Version(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v28 = (uint64_t)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v29 = (uint64_t)&v28 - v13;
  swift_beginAccess();
  unint64_t v14 = a1[3];
  uint64_t v15 = HIBYTE(v14) & 0xF;
  if ((v14 & 0x2000000000000000) == 0) {
    uint64_t v15 = a1[2] & 0xFFFFFFFFFFFFLL;
  }
  if (!v15 || (swift_bridgeObjectRetain(), sub_1C4496B98(), uint64_t result = swift_bridgeObjectRelease(), !v1))
  {
    swift_beginAccess();
    if (!*(void *)(a1[4] + 16)) {
      goto LABEL_17;
    }
    type metadata accessor for Proto4_CRDT(0);
    uint64_t v31 = v1;
    sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
    swift_bridgeObjectRetain();
    uint64_t v17 = v31;
    sub_1C4496BC8();
    uint64_t v2 = v17;
    uint64_t result = swift_bridgeObjectRelease();
    if (!v17)
    {
LABEL_17:
      swift_beginAccess();
      if (!*(void *)(a1[5] + 16)) {
        goto LABEL_9;
      }
      type metadata accessor for Proto4_Subsequence(0);
      uint64_t v31 = v2;
      sub_1C404BA6C(&qword_1EA39C650, (void (*)(uint64_t))type metadata accessor for Proto4_Subsequence);
      swift_bridgeObjectRetain();
      uint64_t v18 = v31;
      sub_1C4496BC8();
      uint64_t v2 = v18;
      uint64_t result = swift_bridgeObjectRelease();
      if (!v18)
      {
LABEL_9:
        uint64_t v19 = (uint64_t)a1
            + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
        swift_beginAccess();
        sub_1C3F970C4(v19, (uint64_t)v8, &qword_1EA39CA18);
        uint64_t v20 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
        if (v20(v8, 1, v9) == 1)
        {
          sub_1C3F962E0((uint64_t)v8, &qword_1EA39CA18);
        }
        else
        {
          uint64_t v21 = (uint64_t)v8;
          uint64_t v22 = v29;
          sub_1C404D5A4(v21, v29, type metadata accessor for Proto4_Version);
          sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
          sub_1C4496BD8();
          uint64_t result = sub_1C4049E78(v22, type metadata accessor for Proto4_Version);
          if (v2) {
            return result;
          }
        }
        uint64_t v23 = (char *)a1
            + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedByVersion;
        swift_beginAccess();
        uint64_t v24 = (uint64_t)v23;
        uint64_t v25 = v30;
        sub_1C3F970C4(v24, v30, &qword_1EA39CA18);
        if (v20((char *)v25, 1, v9) == 1)
        {
          return sub_1C3F962E0(v25, &qword_1EA39CA18);
        }
        else
        {
          uint64_t v26 = v25;
          uint64_t v27 = v28;
          sub_1C404D5A4(v26, v28, type metadata accessor for Proto4_Version);
          sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
          sub_1C4496BD8();
          return sub_1C4049E78(v27, type metadata accessor for Proto4_Version);
        }
      }
    }
  }
  return result;
}

BOOL sub_1C4043A90(void *a1, void *a2)
{
  uint64_t v4 = type metadata accessor for Proto4_Version(0);
  uint64_t v54 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v52 = &v48[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA20);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = &v48[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = &v48[-v10];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA18);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v51 = &v48[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v53 = &v48[-v16];
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = &v48[-v18];
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = &v48[-v20];
  swift_beginAccess();
  uint64_t v23 = a1[2];
  uint64_t v22 = a1[3];
  swift_beginAccess();
  if (v23 == a2[2] && v22 == a2[3] || (char v24 = sub_1C44982E8(), result = 0, (v24 & 1) != 0))
  {
    uint64_t v50 = v9;
    swift_beginAccess();
    uint64_t v26 = a1[4];
    swift_beginAccess();
    uint64_t v27 = a2[4];
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v28 = sub_1C3FE9E44(v26, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v28 & 1) == 0) {
      goto LABEL_12;
    }
    swift_beginAccess();
    uint64_t v29 = a1[5];
    swift_beginAccess();
    uint64_t v30 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v31 = sub_1C3FEA028(v29, v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v31 & 1) == 0) {
      goto LABEL_12;
    }
    uint64_t v32 = (uint64_t)a1
        + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
    swift_beginAccess();
    sub_1C3F970C4(v32, (uint64_t)v21, &qword_1EA39CA18);
    uint64_t v33 = (uint64_t)a2
        + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__version;
    swift_beginAccess();
    uint64_t v34 = (uint64_t)&v11[*(int *)(v6 + 48)];
    sub_1C3F970C4((uint64_t)v21, (uint64_t)v11, &qword_1EA39CA18);
    sub_1C3F970C4(v33, v34, &qword_1EA39CA18);
    uint64_t v35 = v54 + 48;
    uint64_t v36 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
    if (v36((uint64_t)v11, 1, v4) == 1)
    {
      sub_1C3F962E0((uint64_t)v21, &qword_1EA39CA18);
      if (v36(v34, 1, v4) == 1)
      {
        uint64_t v54 = v35;
        sub_1C3F962E0((uint64_t)v11, &qword_1EA39CA18);
LABEL_16:
        uint64_t v38 = (uint64_t)a1
            + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedByVersion;
        swift_beginAccess();
        uint64_t v39 = v53;
        sub_1C3F970C4(v38, (uint64_t)v53, &qword_1EA39CA18);
        uint64_t v40 = (uint64_t)a2
            + OBJC_IVAR____TtCV9Coherence15Proto4_SequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedByVersion;
        swift_beginAccess();
        uint64_t v41 = *(int *)(v6 + 48);
        uint64_t v42 = (uint64_t)v50;
        uint64_t v43 = (uint64_t)&v50[v41];
        sub_1C3F970C4((uint64_t)v39, (uint64_t)v50, &qword_1EA39CA18);
        sub_1C3F970C4(v40, v43, &qword_1EA39CA18);
        if (v36(v42, 1, v4) == 1)
        {
          swift_release();
          swift_release();
          sub_1C3F962E0((uint64_t)v39, &qword_1EA39CA18);
          if (v36(v43, 1, v4) == 1)
          {
            sub_1C3F962E0((uint64_t)v50, &qword_1EA39CA18);
            return 1;
          }
        }
        else
        {
          uint64_t v44 = v51;
          sub_1C3F970C4(v42, (uint64_t)v51, &qword_1EA39CA18);
          if (v36(v43, 1, v4) != 1)
          {
            uint64_t v45 = v43;
            uint64_t v46 = v52;
            sub_1C404D5A4(v45, (uint64_t)v52, type metadata accessor for Proto4_Version);
            sub_1C404BA6C(&qword_1EA39C800, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
            char v47 = sub_1C4497178();
            swift_release();
            swift_release();
            sub_1C4049E78((uint64_t)v46, type metadata accessor for Proto4_Version);
            sub_1C3F962E0((uint64_t)v39, &qword_1EA39CA18);
            sub_1C4049E78((uint64_t)v44, type metadata accessor for Proto4_Version);
            sub_1C3F962E0(v42, &qword_1EA39CA18);
            return (v47 & 1) != 0;
          }
          swift_release();
          swift_release();
          sub_1C3F962E0((uint64_t)v39, &qword_1EA39CA18);
          sub_1C4049E78((uint64_t)v44, type metadata accessor for Proto4_Version);
        }
        sub_1C3F962E0((uint64_t)v50, &qword_1EA39CA20);
        return 0;
      }
    }
    else
    {
      sub_1C3F970C4((uint64_t)v11, (uint64_t)v19, &qword_1EA39CA18);
      if (v36(v34, 1, v4) != 1)
      {
        uint64_t v54 = v35;
        uint64_t v37 = v52;
        sub_1C404D5A4(v34, (uint64_t)v52, type metadata accessor for Proto4_Version);
        sub_1C404BA6C(&qword_1EA39C800, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
        int v49 = sub_1C4497178();
        sub_1C4049E78((uint64_t)v37, type metadata accessor for Proto4_Version);
        sub_1C3F962E0((uint64_t)v21, &qword_1EA39CA18);
        sub_1C4049E78((uint64_t)v19, type metadata accessor for Proto4_Version);
        sub_1C3F962E0((uint64_t)v11, &qword_1EA39CA18);
        if (v49) {
          goto LABEL_16;
        }
LABEL_12:
        swift_release();
        swift_release();
        return 0;
      }
      sub_1C3F962E0((uint64_t)v21, &qword_1EA39CA18);
      sub_1C4049E78((uint64_t)v19, type metadata accessor for Proto4_Version);
    }
    sub_1C3F962E0((uint64_t)v11, &qword_1EA39CA20);
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1C4044290@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B9E8, &qword_1EA39C290, a2);
}

uint64_t sub_1C40442B4()
{
  return 0x532E346F746F7250;
}

uint64_t sub_1C40442D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_Sequence, (void (*)(void))type metadata accessor for Proto4_Sequence._StorageClass, (uint64_t (*)(uint64_t))sub_1C4042E40, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C40432AC);
}

uint64_t sub_1C4044340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Sequence, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4043534);
}

uint64_t sub_1C4044380(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39C9B0, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C40443FC(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Sequence, (uint64_t (*)(uint64_t, uint64_t))sub_1C4043A90) & 1;
}

uint64_t sub_1C4044440@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B9E0, (uint64_t)qword_1EA3B8C38, a1);
}

uint64_t sub_1C4044464(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C670, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C40444D0()
{
  sub_1C404BA6C(&qword_1EA39C670, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
  return sub_1C4496AC8();
}

uint64_t sub_1C404454C()
{
  sub_1C404BA6C(&qword_1EA39C9B0, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
  return sub_1C44968D8();
}

uint64_t sub_1C40445D0()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8C50);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8C50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449BBD0;
  unint64_t v5 = v4 + v3;
  unint64_t v6 = v4 + v3 + v1[14];
  *(void *)(v4 + v3) = 1;
  *(void *)unint64_t v6 = "sequenceStartID";
  *(void *)(v6 + 8) = 15;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  unint64_t v10 = v5 + v2 + v1[14];
  *(void *)(v5 + v2) = 2;
  *(void *)unint64_t v10 = "length";
  *(void *)(v10 + 8) = 6;
  *(unsigned char *)(v10 + 16) = 2;
  v9();
  uint64_t v11 = (void *)(v5 + 2 * v2);
  uint64_t v12 = (char *)v11 + v1[14];
  *uint64_t v11 = 3;
  *(void *)uint64_t v12 = "addedBy";
  *((void *)v12 + 1) = 7;
  v12[16] = 2;
  v9();
  uint64_t v13 = (void *)(v5 + 3 * v2);
  uint64_t v14 = (char *)v13 + v1[14];
  *uint64_t v13 = 4;
  *(void *)uint64_t v14 = "child";
  *((void *)v14 + 1) = 5;
  v14[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C4044808()
{
  type metadata accessor for Proto4_Subsequence._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__sequenceStartID;
  uint64_t v2 = type metadata accessor for Proto4_IndexedTimestamp(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  *(_DWORD *)(v0
            + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__length) = 0;
  uint64_t v4 = MEMORY[0x1E4FBC860];
  *(void *)(v0
            + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy) = MEMORY[0x1E4FBC860];
  *(void *)(v0
            + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__child) = v4;
  qword_1EA39C298 = v0;
  return result;
}

uint64_t sub_1C40448BC(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA58);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = v1
     + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__sequenceStartID;
  uint64_t v7 = type metadata accessor for Proto4_IndexedTimestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (_DWORD *)(v1
                + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__length);
  *(_DWORD *)(v1
            + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__length) = 0;
  uint64_t v9 = (void *)(v1
                + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  *(void *)(v1
            + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy) = MEMORY[0x1E4FBC860];
  uint64_t v11 = (void *)(v1
                 + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__child);
  *(void *)(v1
            + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__child) = v10;
  uint64_t v12 = a1
      + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  sub_1C3F970C4(v12, (uint64_t)v5, &qword_1EA39CA58);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v6, &qword_1EA39CA58);
  swift_endAccess();
  uint64_t v13 = (_DWORD *)(a1
                 + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__length);
  swift_beginAccess();
  LODWORD(v13) = *v13;
  swift_beginAccess();
  *uint64_t v8 = v13;
  uint64_t v14 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy);
  swift_beginAccess();
  uint64_t v15 = *v14;
  swift_beginAccess();
  *uint64_t v9 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t *)(a1
                  + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__child);
  swift_beginAccess();
  uint64_t v17 = *v16;
  swift_bridgeObjectRetain();
  swift_release();
  swift_beginAccess();
  *uint64_t v11 = v17;
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_1C4044B0C()
{
  sub_1C3F962E0(v0+ OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__sequenceStartID, &qword_1EA39CA58);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1C4044B98()
{
  return type metadata accessor for Proto4_Subsequence._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Subsequence._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C4A0);
}

void sub_1C4044BC0()
{
  sub_1C402B9C4(319, &qword_1EA39C4B0, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for Proto4_IndexedTimestamp(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C4D8);
}

uint64_t sub_1C4044CA8()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          swift_beginAccess();
          type metadata accessor for Proto4_IndexedTimestamp(0);
          sub_1C404BA6C(&qword_1EA39C820, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
          uint64_t v4 = v3;
          sub_1C4496A78();
          goto LABEL_5;
        case 2:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_1C4496A38();
          goto LABEL_5;
        case 3:
          swift_beginAccess();
          type metadata accessor for Proto4_IndexedTimestamp(0);
          sub_1C404BA6C(&qword_1EA39C820, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
          uint64_t v4 = v3;
          sub_1C4496A68();
          goto LABEL_5;
        case 4:
          swift_beginAccess();
          uint64_t v4 = v3;
          sub_1C44969D8();
LABEL_5:
          uint64_t v3 = v4;
          swift_endAccess();
          break;
        default:
          break;
      }
      uint64_t result = sub_1C4496908();
    }
  }
  return result;
}

uint64_t sub_1C4044EEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v19[15] = a4;
  v19[1] = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA58);
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto4_IndexedTimestamp(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = a1;
  uint64_t v14 = a1
      + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  sub_1C3F970C4(v14, (uint64_t)v8, &qword_1EA39CA58);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C3F962E0((uint64_t)v8, &qword_1EA39CA58);
  }
  else
  {
    sub_1C404D5A4((uint64_t)v8, (uint64_t)v12, type metadata accessor for Proto4_IndexedTimestamp);
    sub_1C404BA6C(&qword_1EA39C820, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
    sub_1C4496BD8();
    uint64_t result = sub_1C4049E78((uint64_t)v12, type metadata accessor for Proto4_IndexedTimestamp);
    if (v4) {
      return result;
    }
  }
  uint64_t v16 = (_DWORD *)(v13
                 + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__length);
  swift_beginAccess();
  if (!*v16 || (uint64_t result = sub_1C4496BA8(), !v4))
  {
    uint64_t v17 = v13
        + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy;
    swift_beginAccess();
    if (!*(void *)(*(void *)v17 + 16)
      || (sub_1C404BA6C(&qword_1EA39C820, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp), swift_bridgeObjectRetain(), sub_1C4496BC8(), uint64_t result = swift_bridgeObjectRelease(), !v4))
    {
      uint64_t v18 = v13
          + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__child;
      uint64_t result = swift_beginAccess();
      if (*(void *)(*(void *)v18 + 16))
      {
        swift_bridgeObjectRetain();
        sub_1C4496AE8();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

BOOL sub_1C4045250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto4_IndexedTimestamp(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v40 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA60);
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA58);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v41 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = a1
      + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v15, &qword_1EA39CA58);
  uint64_t v17 = a2
      + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__sequenceStartID;
  swift_beginAccess();
  uint64_t v18 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_1C3F970C4((uint64_t)v15, (uint64_t)v10, &qword_1EA39CA58);
  sub_1C3F970C4(v17, v18, &qword_1EA39CA58);
  uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v19((uint64_t)v10, 1, v4) != 1)
  {
    uint64_t v23 = (uint64_t)v40;
    uint64_t v22 = a1;
    uint64_t v24 = v41;
    sub_1C3F970C4((uint64_t)v10, v41, &qword_1EA39CA58);
    if (v19(v18, 1, v4) != 1)
    {
      sub_1C404D5A4(v18, v23, type metadata accessor for Proto4_IndexedTimestamp);
      sub_1C404BA6C(&qword_1EA39BED8, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
      swift_retain();
      uint64_t v21 = a2;
      swift_retain();
      char v25 = sub_1C4497178();
      sub_1C4049E78(v23, type metadata accessor for Proto4_IndexedTimestamp);
      sub_1C3F962E0((uint64_t)v15, &qword_1EA39CA58);
      sub_1C4049E78(v24, type metadata accessor for Proto4_IndexedTimestamp);
      sub_1C3F962E0((uint64_t)v10, &qword_1EA39CA58);
      if (v25) {
        goto LABEL_8;
      }
LABEL_11:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_1C3F962E0((uint64_t)v15, &qword_1EA39CA58);
    sub_1C4049E78(v24, type metadata accessor for Proto4_IndexedTimestamp);
LABEL_6:
    sub_1C3F962E0((uint64_t)v10, &qword_1EA39CA60);
    goto LABEL_11;
  }
  swift_retain();
  swift_retain();
  sub_1C3F962E0((uint64_t)v15, &qword_1EA39CA58);
  unsigned int v20 = v19(v18, 1, v4);
  uint64_t v21 = a2;
  uint64_t v22 = a1;
  if (v20 != 1) {
    goto LABEL_6;
  }
  sub_1C3F962E0((uint64_t)v10, &qword_1EA39CA58);
LABEL_8:
  uint64_t v26 = (int *)(v22
              + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__length);
  swift_beginAccess();
  int v27 = *v26;
  char v28 = (_DWORD *)(v21
                 + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__length);
  swift_beginAccess();
  if (v27 != *v28) {
    goto LABEL_11;
  }
  uint64_t v29 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy);
  swift_beginAccess();
  uint64_t v30 = *v29;
  char v31 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__addedBy);
  swift_beginAccess();
  uint64_t v32 = *v31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char v33 = sub_1C3FEA20C(v30, v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v33 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v34 = (uint64_t *)(v22
                  + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__child);
  swift_beginAccess();
  uint64_t v35 = *v34;
  uint64_t v36 = (uint64_t *)(v21
                  + OBJC_IVAR____TtCV9Coherence18Proto4_SubsequenceP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__child);
  swift_beginAccess();
  BOOL v37 = sub_1C3FEA3F0(v35, *v36);
  swift_release();
  swift_release();
  return v37;
}

uint64_t sub_1C4045784@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39B9F8, &qword_1EA39C298, a2);
}

unint64_t sub_1C40457A8()
{
  return 0xD000000000000012;
}

uint64_t sub_1C40457C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_Subsequence, (void (*)(void))type metadata accessor for Proto4_Subsequence._StorageClass, sub_1C40448BC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4044CA8);
}

uint64_t sub_1C404582C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Subsequence, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4044EEC);
}

uint64_t sub_1C404586C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39CA50, (void (*)(uint64_t))type metadata accessor for Proto4_Subsequence);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C40458E8(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Subsequence, (uint64_t (*)(uint64_t, uint64_t))sub_1C4045250) & 1;
}

uint64_t sub_1C404592C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39B9F0, (uint64_t)qword_1EA3B8C50, a1);
}

uint64_t sub_1C4045950(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C650, (void (*)(uint64_t))type metadata accessor for Proto4_Subsequence);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C40459BC()
{
  sub_1C404BA6C(&qword_1EA39C650, (void (*)(uint64_t))type metadata accessor for Proto4_Subsequence);
  return sub_1C4496AC8();
}

uint64_t sub_1C4045A38()
{
  sub_1C404BA6C(&qword_1EA39CA50, (void (*)(uint64_t))type metadata accessor for Proto4_Subsequence);
  return sub_1C44968D8();
}

uint64_t sub_1C4045ABC()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8C68);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8C68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449BDF0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "replicaUUID";
  *(void *)(v6 + 8) = 11;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "range";
  *((void *)v10 + 1) = 5;
  v10[16] = 2;
  v9();
  uint64_t v11 = (uint64_t)v5 + 2 * v2 + v1[14];
  *(void *)((char *)v5 + 2 * v2) = 3;
  *(void *)uint64_t v11 = "affinity";
  *(void *)(v11 + 8) = 8;
  *(unsigned char *)(v11 + 16) = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C4045CC0()
{
  uint64_t result = sub_1C4496908();
  uint64_t v3 = v0;
  if (!v0)
  {
    while (1)
    {
      if (v2) {
        return result;
      }
      if (result == 3) {
        break;
      }
      if (result == 2)
      {
        type metadata accessor for Proto4_Selection.Range(0);
        sub_1C404BA6C(&qword_1EA39C618, (void (*)(uint64_t))type metadata accessor for Proto4_Selection.Range);
        uint64_t v4 = v3;
        sub_1C4496A68();
        goto LABEL_5;
      }
      if (result == 1)
      {
        uint64_t v4 = v3;
        sub_1C4496958();
        goto LABEL_5;
      }
LABEL_6:
      uint64_t result = sub_1C4496908();
    }
    sub_1C404EEA0();
    uint64_t v4 = v3;
    sub_1C4496948();
LABEL_5:
    uint64_t v3 = v4;
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_1C4045E0C()
{
  if (!*(void *)(*v0 + 16) || (uint64_t result = sub_1C4496B28(), !v1))
  {
    if (!*(void *)(v0[1] + 16)
      || (type metadata accessor for Proto4_Selection.Range(0),
          sub_1C404BA6C(&qword_1EA39C618, (void (*)(uint64_t))type metadata accessor for Proto4_Selection.Range), uint64_t result = sub_1C4496BC8(), !v1))
    {
      if (!v0[2] || (sub_1C404EEA0(), uint64_t result = sub_1C4496B18(), !v1))
      {
        type metadata accessor for Proto4_Selection(0);
        return sub_1C4496878();
      }
    }
  }
  return result;
}

uint64_t sub_1C4045F74(uint64_t a1)
{
  uint64_t v3 = sub_1C4496898();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v17 - v8;
  if ((sub_1C3FE7D78(*(void *)v1, *(void *)a1) & 1) == 0
    || (sub_1C3FEA464(*(void *)(v1 + 8), *(void *)(a1 + 8)) & 1) == 0)
  {
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(a1 + 16);
  if (*(unsigned char *)(v1 + 24)) {
    uint64_t v10 = v10 != 0;
  }
  if (*(unsigned char *)(a1 + 24) != 1)
  {
    if (v10 != v11) {
      goto LABEL_8;
    }
LABEL_11:
    uint64_t v14 = type metadata accessor for Proto4_Selection(0);
    uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v15(v9, v1 + *(int *)(v14 + 28), v3);
    v15(v7, a1 + *(int *)(v14 + 28), v3);
    sub_1C404BA6C(&qword_1EA39BEF0, MEMORY[0x1E4F70E60]);
    char v12 = sub_1C4497178();
    uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
    v16(v7, v3);
    v16(v9, v3);
    return v12 & 1;
  }
  if (!v11)
  {
    if (v10) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v10 == 1) {
    goto LABEL_11;
  }
LABEL_8:
  char v12 = 0;
  return v12 & 1;
}

uint64_t sub_1C4046180@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1 = MEMORY[0x1E4FBC860];
  *(void *)a1 = MEMORY[0x1E4FBC860];
  *(void *)(a1 + 8) = v1;
  *(void *)(a1 + 16) = 0;
  *(unsigned char *)(a1 + 24) = 1;
  return sub_1C4496888();
}

unint64_t sub_1C40461B8()
{
  return 0xD000000000000010;
}

uint64_t sub_1C40461D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 28);
  uint64_t v5 = sub_1C4496898();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t sub_1C4046244(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1C4496898();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40);
  return v6(v4, a1, v5);
}

uint64_t (*sub_1C40462B4())()
{
  return nullsub_1;
}

uint64_t sub_1C40462D8()
{
  return sub_1C4045CC0();
}

uint64_t sub_1C40462F0()
{
  return sub_1C4045E0C();
}

uint64_t sub_1C4046308(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39CA68, (void (*)(uint64_t))type metadata accessor for Proto4_Selection);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C4046388@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39BA00, (uint64_t)qword_1EA3B8C68, a1);
}

uint64_t sub_1C40463AC(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C638, (void (*)(uint64_t))type metadata accessor for Proto4_Selection);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C4046418()
{
  sub_1C404BA6C(&qword_1EA39C638, (void (*)(uint64_t))type metadata accessor for Proto4_Selection);
  return sub_1C4496AC8();
}

uint64_t sub_1C4046494()
{
  sub_1C404BA6C(&qword_1EA39CA68, (void (*)(uint64_t))type metadata accessor for Proto4_Selection);
  return sub_1C44968D8();
}

uint64_t sub_1C4046518()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8C80);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8C80);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449B4A0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 0;
  *(void *)unint64_t v6 = "Backward";
  *(void *)(v6 + 8) = 8;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 1;
  *(void *)uint64_t v10 = "Forward";
  *((void *)v10 + 1) = 7;
  v10[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C40466D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39BA08, (uint64_t)qword_1EA3B8C80, a1);
}

uint64_t sub_1C40466F4()
{
  uint64_t result = sub_1C4497268();
  qword_1EA3B8C98 = 0xD000000000000010;
  unk_1EA3B8CA0 = 0x80000001C44B2270;
  return result;
}

uint64_t sub_1C404675C()
{
  uint64_t v0 = sub_1C4496C18();
  __swift_allocate_value_buffer(v0, qword_1EA3B8CA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B8CA8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8D8);
  uint64_t v1 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C8E0) - 8);
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449B4A0;
  uint64_t v5 = (void *)(v4 + v3);
  unint64_t v6 = v4 + v3 + v1[14];
  *uint64_t v5 = 1;
  *(void *)unint64_t v6 = "fromChar";
  *(void *)(v6 + 8) = 8;
  *(unsigned char *)(v6 + 16) = 2;
  uint64_t v7 = *MEMORY[0x1E4F70FB8];
  uint64_t v8 = sub_1C4496BE8();
  uint64_t v9 = *(void (**)(void))(*(void *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  uint64_t v10 = (char *)v5 + v2 + v1[14];
  *(void *)((char *)v5 + v2) = 2;
  *(void *)uint64_t v10 = "toChar";
  *((void *)v10 + 1) = 6;
  v10[16] = 2;
  v9();
  return sub_1C4496BF8();
}

uint64_t sub_1C4046914()
{
  type metadata accessor for Proto4_Selection.Range._StorageClass(0);
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0
     + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__fromChar;
  uint64_t v2 = type metadata accessor for Proto4_IndexedTimestamp(0);
  unint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v3)(v0+ OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__toChar, 1, 1, v2);
  qword_1EA39C2A0 = v0;
  return result;
}

uint64_t sub_1C40469D4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA58);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1
     + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__fromChar;
  uint64_t v7 = type metadata accessor for Proto4_IndexedTimestamp(0);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  uint64_t v9 = v1
     + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__toChar;
  v8(v1 + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__toChar, 1, 1, v7);
  uint64_t v10 = a1
      + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__fromChar;
  swift_beginAccess();
  sub_1C3F970C4(v10, (uint64_t)v5, &qword_1EA39CA58);
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v6, &qword_1EA39CA58);
  swift_endAccess();
  uint64_t v11 = a1
      + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__toChar;
  swift_beginAccess();
  sub_1C3F970C4(v11, (uint64_t)v5, &qword_1EA39CA58);
  swift_release();
  swift_beginAccess();
  sub_1C3F98338((uint64_t)v5, v9, &qword_1EA39CA58);
  swift_endAccess();
  return v1;
}

uint64_t sub_1C4046BA0()
{
  sub_1C3F962E0(v0+ OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__fromChar, &qword_1EA39CA58);
  sub_1C3F962E0(v0 + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__toChar, &qword_1EA39CA58);
  return swift_deallocClassInstance();
}

uint64_t sub_1C4046C2C()
{
  return type metadata accessor for Proto4_Selection.Range._StorageClass(0);
}

uint64_t type metadata accessor for Proto4_Selection.Range._StorageClass(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C4C8);
}

void sub_1C4046C54()
{
  sub_1C402B9C4(319, &qword_1EA39C4B0, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t *sub_1C4046D00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = *(int *)(a3 + 24);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_1C4496898();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

void *sub_1C4046DCC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C4496898();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_1C4046E50(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C4496898();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1C4046ECC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C4046EE0);
}

uint64_t sub_1C4046EE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_1C4496898();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);
  return v6(v4, a2, v5);
}

uint64_t sub_1C4046F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C4046F64);
}

uint64_t sub_1C4046F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_1C4496898();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(v5, a2, a2, v6);
}

uint64_t sub_1C4046FE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm);
}

uint64_t sub_1C4046FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm);
}

uint64_t type metadata accessor for Proto4_Subsequence(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C4E8);
}

uint64_t sub_1C4047044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_233Tm);
}

uint64_t sub_1C404705C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_234Tm);
}

uint64_t sub_1C4047074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_0);
}

uint64_t sub_1C404708C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_0);
}

uint64_t type metadata accessor for Proto4_Set(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C508);
}

uint64_t sub_1C40470C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_1);
}

uint64_t sub_1C40470DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_1);
}

uint64_t type metadata accessor for Proto4_Set.Element(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C518);
}

uint64_t sub_1C4047114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_233Tm_0);
}

uint64_t sub_1C404712C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_234Tm_0);
}

uint64_t *sub_1C4047144(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1C3F7E324(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    a1[2] = a2[2];
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C4496898();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_1C4047234(uint64_t a1, uint64_t a2)
{
  sub_1C3F7E2CC(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_1C4496898();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t *sub_1C40472B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1C3F7E324(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  a1[2] = a2[2];
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C4496898();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

uint64_t *sub_1C4047350(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1C3F7E324(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1C3F7E2CC(v8, v9);
  a1[2] = a2[2];
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C4496898();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t *sub_1C40473FC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C3F7E2CC(v6, v7);
  a1[2] = *(void *)(a2 + 16);
  uint64_t v8 = *(int *)(a3 + 24);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C4496898();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1C4047494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C40474A8);
}

uint64_t sub_1C40474A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 12)
  {
    uint64_t v4 = *(void *)(a1 + 8) >> 60;
    if (((4 * v4) & 0xC) != 0) {
      return 16 - ((4 * v4) & 0xC | (v4 >> 2));
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_1C4496898();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C4047564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C4047578);
}

void *sub_1C4047578(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 12)
  {
    *uint64_t result = 0;
    result[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  else
  {
    uint64_t v7 = sub_1C4496898();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C4047628()
{
  return sub_1C3F56480();
}

uint64_t *sub_1C4047640(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        uint64_t v9 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = type metadata accessor for Proto4_Set(0);
        *(uint64_t *)((char *)a1 + *(int *)(v10 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 20));
        swift_retain();
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v11 = *(int *)(type metadata accessor for Proto4_Struct(0) + 20);
        uint64_t v12 = (char *)a1 + v11;
        uint64_t v13 = (char *)a2 + v11;
        uint64_t v14 = sub_1C4496898();
        uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        break;
      case 4u:
      case 5u:
        uint64_t v16 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v16 - 8) + 16))(a1, a2, v16);
        uint64_t v17 = type metadata accessor for Proto4_Sequence(0);
        *(uint64_t *)((char *)a1 + *(int *)(v17 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v17 + 20));
        swift_retain();
        break;
      case 6u:
        uint64_t v18 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
        uint64_t v19 = type metadata accessor for Proto4_Counter(0);
        *(uint64_t *)((char *)a1 + *(int *)(v19 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v19 + 20));
        swift_retain();
        break;
      case 7u:
        uint64_t v20 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        uint64_t v21 = type metadata accessor for Proto4_TaggedCRDT(0);
        *(uint64_t *)((char *)a1 + *(int *)(v21 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v21 + 20));
        swift_retain();
        break;
      case 8u:
        *a1 = *a2;
        uint64_t v22 = *(int *)(type metadata accessor for Proto4_CustomCRDT(0) + 20);
        uint64_t v23 = (char *)a1 + v22;
        uint64_t v24 = (char *)a2 + v22;
        uint64_t v25 = sub_1C4496898();
        uint64_t v26 = *(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v23, v24, v25);
        break;
      default:
        uint64_t v6 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for Proto4_Register(0);
        *(uint64_t *)((char *)a1 + *(int *)(v7 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v7 + 20));
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for Proto4_Register(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C5A8);
}

uint64_t type metadata accessor for Proto4_Struct(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C598);
}

uint64_t type metadata accessor for Proto4_Sequence(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C588);
}

uint64_t type metadata accessor for Proto4_Counter(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C578);
}

uint64_t type metadata accessor for Proto4_TaggedCRDT(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C568);
}

uint64_t type metadata accessor for Proto4_CustomCRDT(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C558);
}

uint64_t sub_1C4047B8C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      uint64_t v5 = sub_1C4496898();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      type metadata accessor for Proto4_Register(0);
      goto LABEL_8;
    case 1:
    case 2:
      uint64_t v3 = sub_1C4496898();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      type metadata accessor for Proto4_Set(0);
      goto LABEL_8;
    case 3:
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for Proto4_Struct(0);
      goto LABEL_12;
    case 4:
    case 5:
      uint64_t v4 = sub_1C4496898();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
      type metadata accessor for Proto4_Sequence(0);
      goto LABEL_8;
    case 6:
      uint64_t v7 = sub_1C4496898();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      type metadata accessor for Proto4_Counter(0);
      goto LABEL_8;
    case 7:
      uint64_t v8 = sub_1C4496898();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for Proto4_TaggedCRDT(0);
LABEL_8:
      uint64_t result = swift_release();
      break;
    case 8:
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for Proto4_CustomCRDT(0);
LABEL_12:
      uint64_t v9 = a1 + *(int *)(v6 + 20);
      uint64_t v10 = sub_1C4496898();
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8);
      uint64_t result = v11(v9, v10);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1C4047DF0(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v6 = sub_1C4496898();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for Proto4_Set(0);
      *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
      swift_retain();
      break;
    case 3u:
      *a1 = *a2;
      uint64_t v8 = *(int *)(type metadata accessor for Proto4_Struct(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C4496898();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      break;
    case 4u:
    case 5u:
      uint64_t v13 = sub_1C4496898();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
      uint64_t v14 = type metadata accessor for Proto4_Sequence(0);
      *(void *)((char *)a1 + *(int *)(v14 + 20)) = *(void *)((char *)a2 + *(int *)(v14 + 20));
      swift_retain();
      break;
    case 6u:
      uint64_t v15 = sub_1C4496898();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
      uint64_t v16 = type metadata accessor for Proto4_Counter(0);
      *(void *)((char *)a1 + *(int *)(v16 + 20)) = *(void *)((char *)a2 + *(int *)(v16 + 20));
      swift_retain();
      break;
    case 7u:
      uint64_t v17 = sub_1C4496898();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      uint64_t v18 = type metadata accessor for Proto4_TaggedCRDT(0);
      *(void *)((char *)a1 + *(int *)(v18 + 20)) = *(void *)((char *)a2 + *(int *)(v18 + 20));
      swift_retain();
      break;
    case 8u:
      *a1 = *a2;
      uint64_t v19 = *(int *)(type metadata accessor for Proto4_CustomCRDT(0) + 20);
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      uint64_t v22 = sub_1C4496898();
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
      break;
    default:
      uint64_t v4 = sub_1C4496898();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for Proto4_Register(0);
      *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
      swift_retain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C404822C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C4049E78((uint64_t)a1, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        uint64_t v6 = sub_1C4496898();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for Proto4_Set(0);
        *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
        swift_retain();
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v8 = *(int *)(type metadata accessor for Proto4_Struct(0) + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1C4496898();
        uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
        break;
      case 4u:
      case 5u:
        uint64_t v13 = sub_1C4496898();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = type metadata accessor for Proto4_Sequence(0);
        *(void *)((char *)a1 + *(int *)(v14 + 20)) = *(void *)((char *)a2 + *(int *)(v14 + 20));
        swift_retain();
        break;
      case 6u:
        uint64_t v15 = sub_1C4496898();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for Proto4_Counter(0);
        *(void *)((char *)a1 + *(int *)(v16 + 20)) = *(void *)((char *)a2 + *(int *)(v16 + 20));
        swift_retain();
        break;
      case 7u:
        uint64_t v17 = sub_1C4496898();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = type metadata accessor for Proto4_TaggedCRDT(0);
        *(void *)((char *)a1 + *(int *)(v18 + 20)) = *(void *)((char *)a2 + *(int *)(v18 + 20));
        swift_retain();
        break;
      case 8u:
        *a1 = *a2;
        uint64_t v19 = *(int *)(type metadata accessor for Proto4_CustomCRDT(0) + 20);
        uint64_t v20 = (char *)a1 + v19;
        uint64_t v21 = (char *)a2 + v19;
        uint64_t v22 = sub_1C4496898();
        uint64_t v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
        break;
      default:
        uint64_t v4 = sub_1C4496898();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for Proto4_Register(0);
        *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
        swift_retain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1C404868C(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 2u:
      uint64_t v6 = sub_1C4496898();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for Proto4_Set(0);
      *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
      break;
    case 3u:
      *a1 = *a2;
      uint64_t v8 = *(int *)(type metadata accessor for Proto4_Struct(0) + 20);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_1C4496898();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      break;
    case 4u:
    case 5u:
      uint64_t v12 = sub_1C4496898();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      uint64_t v13 = type metadata accessor for Proto4_Sequence(0);
      *(void *)((char *)a1 + *(int *)(v13 + 20)) = *(void *)((char *)a2 + *(int *)(v13 + 20));
      break;
    case 6u:
      uint64_t v14 = sub_1C4496898();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
      uint64_t v15 = type metadata accessor for Proto4_Counter(0);
      *(void *)((char *)a1 + *(int *)(v15 + 20)) = *(void *)((char *)a2 + *(int *)(v15 + 20));
      break;
    case 7u:
      uint64_t v16 = sub_1C4496898();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
      uint64_t v17 = type metadata accessor for Proto4_TaggedCRDT(0);
      *(void *)((char *)a1 + *(int *)(v17 + 20)) = *(void *)((char *)a2 + *(int *)(v17 + 20));
      break;
    case 8u:
      *a1 = *a2;
      uint64_t v18 = *(int *)(type metadata accessor for Proto4_CustomCRDT(0) + 20);
      uint64_t v19 = (char *)a1 + v18;
      uint64_t v20 = (char *)a2 + v18;
      uint64_t v21 = sub_1C4496898();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      break;
    default:
      uint64_t v4 = sub_1C4496898();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
      uint64_t v5 = type metadata accessor for Proto4_Register(0);
      *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_1C4048A84(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_1C4049E78((uint64_t)a1, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 2u:
        uint64_t v6 = sub_1C4496898();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        uint64_t v7 = type metadata accessor for Proto4_Set(0);
        *(void *)((char *)a1 + *(int *)(v7 + 20)) = *(void *)((char *)a2 + *(int *)(v7 + 20));
        break;
      case 3u:
        *a1 = *a2;
        uint64_t v8 = *(int *)(type metadata accessor for Proto4_Struct(0) + 20);
        uint64_t v9 = (char *)a1 + v8;
        uint64_t v10 = (char *)a2 + v8;
        uint64_t v11 = sub_1C4496898();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
        break;
      case 4u:
      case 5u:
        uint64_t v12 = sub_1C4496898();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        uint64_t v13 = type metadata accessor for Proto4_Sequence(0);
        *(void *)((char *)a1 + *(int *)(v13 + 20)) = *(void *)((char *)a2 + *(int *)(v13 + 20));
        break;
      case 6u:
        uint64_t v14 = sub_1C4496898();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v14 - 8) + 32))(a1, a2, v14);
        uint64_t v15 = type metadata accessor for Proto4_Counter(0);
        *(void *)((char *)a1 + *(int *)(v15 + 20)) = *(void *)((char *)a2 + *(int *)(v15 + 20));
        break;
      case 7u:
        uint64_t v16 = sub_1C4496898();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v16 - 8) + 32))(a1, a2, v16);
        uint64_t v17 = type metadata accessor for Proto4_TaggedCRDT(0);
        *(void *)((char *)a1 + *(int *)(v17 + 20)) = *(void *)((char *)a2 + *(int *)(v17 + 20));
        break;
      case 8u:
        *a1 = *a2;
        uint64_t v18 = *(int *)(type metadata accessor for Proto4_CustomCRDT(0) + 20);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_1C4496898();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      default:
        uint64_t v4 = sub_1C4496898();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
        uint64_t v5 = type metadata accessor for Proto4_Register(0);
        *(void *)((char *)a1 + *(int *)(v5 + 20)) = *(void *)((char *)a2 + *(int *)(v5 + 20));
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1C4048EAC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C4048EBC()
{
  uint64_t result = type metadata accessor for Proto4_Register(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Proto4_Set(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Proto4_Struct(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for Proto4_Sequence(319);
        if (v4 <= 0x3F)
        {
          uint64_t result = type metadata accessor for Proto4_Counter(319);
          if (v5 <= 0x3F)
          {
            uint64_t result = type metadata accessor for Proto4_TaggedCRDT(319);
            if (v6 <= 0x3F)
            {
              uint64_t result = type metadata accessor for Proto4_CustomCRDT(319);
              if (v7 <= 0x3F)
              {
                swift_initEnumMetadataMultiPayload();
                return 0;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C40490AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_233Tm_1);
}

uint64_t sub_1C40490C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_234Tm_1);
}

uint64_t sub_1C40490DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_2);
}

uint64_t sub_1C40490F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_2);
}

uint64_t sub_1C404910C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_3);
}

uint64_t sub_1C4049124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_3);
}

uint64_t sub_1C404913C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_4);
}

uint64_t sub_1C4049154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_4);
}

uint64_t *sub_1C404916C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    unint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    unint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1C4496898();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

void *sub_1C4049250(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C4496898();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *sub_1C40492E4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  unint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_1C4496898();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_1C4049360(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C4496898();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1C40493EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_233Tm_2);
}

uint64_t sub_1C4049404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_234Tm_2);
}

uint64_t sub_1C404941C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_5);
}

uint64_t sub_1C4049434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_5);
}

uint64_t sub_1C404944C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_6);
}

uint64_t sub_1C4049464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_6);
}

uint64_t *sub_1C404947C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v11 = *a2;
        unint64_t v10 = a2[1];
        sub_1C3F7E324(v11, v10);
        *a1 = v11;
        a1[1] = v10;
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v12 = sub_1C4496858();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v13 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = type metadata accessor for Proto4_Reference(0);
        *(uint64_t *)((char *)a1 + *(int *)(v14 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v15 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
        uint64_t v16 = type metadata accessor for Proto4_Optional(0);
        *(uint64_t *)((char *)a1 + *(int *)(v16 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v16 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v17 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
        uint64_t v18 = type metadata accessor for Proto4_TaggedValue(0);
        *(uint64_t *)((char *)a1 + *(int *)(v18 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v18 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for Proto4_Reference(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C5F8);
}

uint64_t type metadata accessor for Proto4_Optional(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C5E8);
}

uint64_t type metadata accessor for Proto4_TaggedValue(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39C5D8);
}

uint64_t sub_1C4049794(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 2:
      return swift_bridgeObjectRelease();
    case 3:
      uint64_t v3 = *a1;
      unint64_t v4 = a1[1];
      return sub_1C3F7E2CC(v3, v4);
    case 4:
      uint64_t v5 = sub_1C4496858();
      uint64_t v6 = *(uint64_t (**)(uint64_t *, uint64_t))(*(void *)(v5 - 8) + 8);
      return v6(a1, v5);
    case 5:
      uint64_t v7 = sub_1C4496898();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      type metadata accessor for Proto4_Reference(0);
      goto LABEL_14;
    case 6:
      uint64_t v8 = sub_1C4496898();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v8 - 8) + 8))(a1, v8);
      type metadata accessor for Proto4_Optional(0);
      goto LABEL_14;
    case 7:
      uint64_t v9 = sub_1C4496898();
      (*(void (**)(uint64_t *, uint64_t))(*(void *)(v9 - 8) + 8))(a1, v9);
      type metadata accessor for Proto4_TaggedValue(0);
LABEL_14:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *sub_1C4049978(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 3u:
      uint64_t v8 = *a2;
      unint64_t v7 = a2[1];
      sub_1C3F7E324(v8, v7);
      *a1 = v8;
      a1[1] = v7;
      goto LABEL_9;
    case 4u:
      uint64_t v9 = sub_1C4496858();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      goto LABEL_9;
    case 5u:
      uint64_t v10 = sub_1C4496898();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = type metadata accessor for Proto4_Reference(0);
      *(uint64_t *)((char *)a1 + *(int *)(v11 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 20));
      swift_retain();
      goto LABEL_9;
    case 6u:
      uint64_t v12 = sub_1C4496898();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = type metadata accessor for Proto4_Optional(0);
      *(uint64_t *)((char *)a1 + *(int *)(v13 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v13 + 20));
      swift_retain();
      goto LABEL_9;
    case 7u:
      uint64_t v14 = sub_1C4496898();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      uint64_t v15 = type metadata accessor for Proto4_TaggedValue(0);
      *(uint64_t *)((char *)a1 + *(int *)(v15 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v15 + 20));
      swift_retain();
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

uint64_t *sub_1C4049BD8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C4049E78((uint64_t)a1, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        uint64_t v7 = *a2;
        unint64_t v6 = a2[1];
        sub_1C3F7E324(v7, v6);
        *a1 = v7;
        a1[1] = v6;
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        uint64_t v8 = sub_1C4496858();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v9 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = type metadata accessor for Proto4_Reference(0);
        *(uint64_t *)((char *)a1 + *(int *)(v10 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v10 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        uint64_t v11 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = type metadata accessor for Proto4_Optional(0);
        *(uint64_t *)((char *)a1 + *(int *)(v12 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v13 = sub_1C4496898();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = type metadata accessor for Proto4_TaggedValue(0);
        *(uint64_t *)((char *)a1 + *(int *)(v14 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v14 + 20));
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C4049E78(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

char *sub_1C4049ED8(char *a1, char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 4u:
      uint64_t v6 = sub_1C4496858();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_7;
    case 5u:
      uint64_t v7 = sub_1C4496898();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for Proto4_Reference(0);
      *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
      goto LABEL_7;
    case 6u:
      uint64_t v9 = sub_1C4496898();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = type metadata accessor for Proto4_Optional(0);
      *(void *)&a1[*(int *)(v10 + 20)] = *(void *)&a2[*(int *)(v10 + 20)];
      goto LABEL_7;
    case 7u:
      uint64_t v11 = sub_1C4496898();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = type metadata accessor for Proto4_TaggedValue(0);
      *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1C404A0E4(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C4049E78((uint64_t)a1, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 4u:
        uint64_t v6 = sub_1C4496858();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_8;
      case 5u:
        uint64_t v7 = sub_1C4496898();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = type metadata accessor for Proto4_Reference(0);
        *(void *)&a1[*(int *)(v8 + 20)] = *(void *)&a2[*(int *)(v8 + 20)];
        goto LABEL_8;
      case 6u:
        uint64_t v9 = sub_1C4496898();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        uint64_t v10 = type metadata accessor for Proto4_Optional(0);
        *(void *)&a1[*(int *)(v10 + 20)] = *(void *)&a2[*(int *)(v10 + 20)];
        goto LABEL_8;
      case 7u:
        uint64_t v11 = sub_1C4496898();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = type metadata accessor for Proto4_TaggedValue(0);
        *(void *)&a1[*(int *)(v12 + 20)] = *(void *)&a2[*(int *)(v12 + 20)];
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1C404A314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1C404A33C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1C404A364()
{
  uint64_t result = sub_1C4496858();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Proto4_Reference(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Proto4_Optional(319);
      if (v3 <= 0x3F)
      {
        uint64_t result = type metadata accessor for Proto4_TaggedValue(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C404A4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_7);
}

uint64_t sub_1C404A4DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_7);
}

uint64_t sub_1C404A4F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_8);
}

uint64_t sub_1C404A50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_8);
}

uint64_t sub_1C404A524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_9);
}

uint64_t sub_1C404A53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_9);
}

uint64_t sub_1C404A554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_10);
}

uint64_t sub_1C404A56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_10);
}

uint64_t sub_1C404A584()
{
  uint64_t result = sub_1C4496908();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
      {
        swift_beginAccess();
        type metadata accessor for Proto4_IndexedTimestamp(0);
        sub_1C404BA6C(&qword_1EA39C820, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
        sub_1C4496A78();
        swift_endAccess();
      }
      uint64_t result = sub_1C4496908();
    }
  }
  return result;
}

uint64_t sub_1C404A710(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  a4(0);
  uint64_t v10 = swift_retain();
  a5(v10, a1, a2, a3);
  uint64_t result = swift_release();
  if (!v5) {
    return sub_1C4496878();
  }
  return result;
}

uint64_t sub_1C404A7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = a4;
  uint64_t v27 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA58);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v25 - v11;
  uint64_t v13 = type metadata accessor for Proto4_IndexedTimestamp(0);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v25[0] = (uint64_t)v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v25 - v17;
  uint64_t v26 = a1;
  uint64_t v19 = a1
      + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__fromChar;
  swift_beginAccess();
  sub_1C3F970C4(v19, (uint64_t)v12, &qword_1EA39CA58);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v21 = v20(v12, 1, v13);
  v25[1] = a2;
  if (v21 == 1)
  {
    sub_1C3F962E0((uint64_t)v12, &qword_1EA39CA58);
  }
  else
  {
    sub_1C404D5A4((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto4_IndexedTimestamp);
    sub_1C404BA6C(&qword_1EA39C820, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
    sub_1C4496BD8();
    uint64_t result = sub_1C4049E78((uint64_t)v18, type metadata accessor for Proto4_IndexedTimestamp);
    if (v4) {
      return result;
    }
  }
  uint64_t v23 = v26
      + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__toChar;
  swift_beginAccess();
  sub_1C3F970C4(v23, (uint64_t)v10, &qword_1EA39CA58);
  if (v20(v10, 1, v13) == 1) {
    return sub_1C3F962E0((uint64_t)v10, &qword_1EA39CA58);
  }
  uint64_t v24 = v25[0];
  sub_1C404D5A4((uint64_t)v10, v25[0], type metadata accessor for Proto4_IndexedTimestamp);
  sub_1C404BA6C(&qword_1EA39C820, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
  sub_1C4496BD8();
  return sub_1C4049E78(v24, type metadata accessor for Proto4_IndexedTimestamp);
}

uint64_t sub_1C404AB30(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v7 = sub_1C4496898();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v22 - v12;
  uint64_t v14 = *(int *)(a2(0) + 20);
  uint64_t v15 = *(void *)(v3 + v14);
  uint64_t v16 = *(void *)(a1 + v14);
  if (v15 == v16
    || (swift_retain(), swift_retain(), char v17 = a3(v15, v16), swift_release(), swift_release(), (v17 & 1) != 0))
  {
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v18(v13, v3, v7);
    v18(v11, a1, v7);
    sub_1C404BA6C(&qword_1EA39BEF0, MEMORY[0x1E4F70E60]);
    char v19 = sub_1C4497178();
    uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
    v20(v11, v7);
    v20(v13, v7);
  }
  else
  {
    char v19 = 0;
  }
  return v19 & 1;
}

BOOL sub_1C404AD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto4_IndexedTimestamp(0);
  uint64_t v51 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v47 = (uint64_t)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA60);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v50 = (uint64_t)&v46 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v46 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CA58);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v46 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v49 = (uint64_t)&v46 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v46 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v46 - v19;
  uint64_t v21 = a1
      + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__fromChar;
  swift_beginAccess();
  sub_1C3F970C4(v21, (uint64_t)v20, &qword_1EA39CA58);
  uint64_t v22 = a2;
  uint64_t v23 = a2
      + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__fromChar;
  swift_beginAccess();
  uint64_t v48 = v6;
  uint64_t v24 = (uint64_t)&v10[*(int *)(v6 + 48)];
  sub_1C3F970C4((uint64_t)v20, (uint64_t)v10, &qword_1EA39CA58);
  uint64_t v25 = v51;
  sub_1C3F970C4(v23, v24, &qword_1EA39CA58);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t v26 = v25 + 48;
  uint64_t v27 = v28;
  if (v28((uint64_t)v10, 1, v4) != 1)
  {
    sub_1C3F970C4((uint64_t)v10, (uint64_t)v18, &qword_1EA39CA58);
    if (v27(v24, 1, v4) != 1)
    {
      uint64_t v51 = v26;
      uint64_t v31 = v24;
      uint64_t v32 = v47;
      sub_1C404D5A4(v31, v47, type metadata accessor for Proto4_IndexedTimestamp);
      sub_1C404BA6C(&qword_1EA39BED8, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
      uint64_t v33 = a1;
      swift_retain();
      swift_retain();
      char v34 = sub_1C4497178();
      sub_1C4049E78(v32, type metadata accessor for Proto4_IndexedTimestamp);
      sub_1C3F962E0((uint64_t)v20, &qword_1EA39CA58);
      uint64_t v35 = (uint64_t)v18;
      uint64_t v30 = v33;
      sub_1C4049E78(v35, type metadata accessor for Proto4_IndexedTimestamp);
      uint64_t v29 = v22;
      sub_1C3F962E0((uint64_t)v10, &qword_1EA39CA58);
      if (v34) {
        goto LABEL_9;
      }
LABEL_7:
      swift_release();
      swift_release();
      return 0;
    }
    swift_retain();
    swift_retain();
    sub_1C3F962E0((uint64_t)v20, &qword_1EA39CA58);
    sub_1C4049E78((uint64_t)v18, type metadata accessor for Proto4_IndexedTimestamp);
LABEL_6:
    sub_1C3F962E0((uint64_t)v10, &qword_1EA39CA60);
    goto LABEL_7;
  }
  swift_retain();
  swift_retain();
  sub_1C3F962E0((uint64_t)v20, &qword_1EA39CA58);
  uint64_t v29 = v22;
  uint64_t v30 = a1;
  if (v27(v24, 1, v4) != 1) {
    goto LABEL_6;
  }
  uint64_t v51 = v26;
  sub_1C3F962E0((uint64_t)v10, &qword_1EA39CA58);
LABEL_9:
  uint64_t v36 = v30
      + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__toChar;
  swift_beginAccess();
  uint64_t v37 = v49;
  sub_1C3F970C4(v36, v49, &qword_1EA39CA58);
  uint64_t v38 = v29
      + OBJC_IVAR____TtCVV9Coherence16Proto4_Selection5RangeP33_4A59E951A5EB9D63730C3E01A1047EAB13_StorageClass__toChar;
  swift_beginAccess();
  uint64_t v39 = v50;
  uint64_t v40 = v50 + *(int *)(v48 + 48);
  sub_1C3F970C4(v37, v50, &qword_1EA39CA58);
  sub_1C3F970C4(v38, v40, &qword_1EA39CA58);
  if (v27(v39, 1, v4) == 1)
  {
    swift_release();
    swift_release();
    sub_1C3F962E0(v37, &qword_1EA39CA58);
    if (v27(v40, 1, v4) == 1)
    {
      sub_1C3F962E0(v39, &qword_1EA39CA58);
      return 1;
    }
    goto LABEL_14;
  }
  uint64_t v41 = v46;
  sub_1C3F970C4(v39, v46, &qword_1EA39CA58);
  if (v27(v40, 1, v4) == 1)
  {
    swift_release();
    swift_release();
    sub_1C3F962E0(v37, &qword_1EA39CA58);
    sub_1C4049E78(v41, type metadata accessor for Proto4_IndexedTimestamp);
LABEL_14:
    sub_1C3F962E0(v39, &qword_1EA39CA60);
    return 0;
  }
  uint64_t v43 = v40;
  uint64_t v44 = v47;
  sub_1C404D5A4(v43, v47, type metadata accessor for Proto4_IndexedTimestamp);
  sub_1C404BA6C(&qword_1EA39BED8, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
  char v45 = sub_1C4497178();
  swift_release();
  swift_release();
  sub_1C4049E78(v44, type metadata accessor for Proto4_IndexedTimestamp);
  sub_1C3F962E0(v37, &qword_1EA39CA58);
  sub_1C4049E78(v41, type metadata accessor for Proto4_IndexedTimestamp);
  sub_1C3F962E0(v39, &qword_1EA39CA58);
  return (v45 & 1) != 0;
}

uint64_t sub_1C404B408@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C3F5F23C(a1, &qword_1EA39BA20, &qword_1EA39C2A0, a2);
}

uint64_t sub_1C404B42C(uint64_t a1, uint64_t a2)
{
  return sub_1C404B454(a1, a2, &qword_1EA39BA10, &qword_1EA3B8C98);
}

uint64_t sub_1C404B454(uint64_t a1, uint64_t a2, void *a3, uint64_t *a4)
{
  if (*a3 != -1) {
    swift_once();
  }
  uint64_t v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t sub_1C404B4AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C4496898();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_1C404B514(uint64_t a1)
{
  uint64_t v3 = sub_1C4496898();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t sub_1C404B57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C403511C(a1, a2, a3, type metadata accessor for Proto4_Selection.Range, (void (*)(void))type metadata accessor for Proto4_Selection.Range._StorageClass, sub_1C40469D4, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C404A584);
}

uint64_t sub_1C404B5E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C404A710(a1, a2, a3, (void (*)(void))type metadata accessor for Proto4_Selection.Range, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_1C404A7B0);
}

uint64_t sub_1C404B624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C404BA6C(&qword_1EA39CA78, (void (*)(uint64_t))type metadata accessor for Proto4_Selection.Range);
  return MEMORY[0x1F4127150](a1, a2, v4);
}

uint64_t sub_1C404B6A0(uint64_t a1)
{
  return sub_1C404AB30(a1, type metadata accessor for Proto4_Selection.Range, (uint64_t (*)(uint64_t, uint64_t))sub_1C404AD2C) & 1;
}

uint64_t sub_1C404B6E4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C404B708(&qword_1EA39BA18, (uint64_t)qword_1EA3B8CA8, a1);
}

uint64_t sub_1C404B708@<X0>(void *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1C4496C18();
  uint64_t v6 = __swift_project_value_buffer(v5, a2);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v7(a3, v6, v5);
}

uint64_t sub_1C404B7A4(uint64_t a1)
{
  uint64_t v2 = sub_1C404BA6C(&qword_1EA39C618, (void (*)(uint64_t))type metadata accessor for Proto4_Selection.Range);
  return MEMORY[0x1F4127378](a1, v2);
}

uint64_t sub_1C404B810()
{
  return sub_1C4498628();
}

uint64_t sub_1C404B868()
{
  sub_1C404BA6C(&qword_1EA39C618, (void (*)(uint64_t))type metadata accessor for Proto4_Selection.Range);
  return sub_1C4496AC8();
}

uint64_t sub_1C404B8E4()
{
  return sub_1C4498628();
}

uint64_t sub_1C404B938()
{
  sub_1C404BA6C(&qword_1EA39CA78, (void (*)(uint64_t))type metadata accessor for Proto4_Selection.Range);
  return sub_1C44968D8();
}

uint64_t sub_1C404B9BC()
{
  return sub_1C404BA6C(&qword_1EA39BEE0, (void (*)(uint64_t))type metadata accessor for Proto4_Selection.Range);
}

uint64_t type metadata accessor for Proto4_Selection.Range(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39CAB0);
}

uint64_t sub_1C404BA24()
{
  return sub_1C404BA6C(&qword_1EA39C618, (void (*)(uint64_t))type metadata accessor for Proto4_Selection.Range);
}

uint64_t sub_1C404BA6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C404BAB4()
{
  return sub_1C404BA6C(&qword_1EA39C620, (void (*)(uint64_t))type metadata accessor for Proto4_Selection.Range);
}

uint64_t sub_1C404BAFC()
{
  return sub_1C404BA6C(&qword_1EA39C628, (void (*)(uint64_t))type metadata accessor for Proto4_Selection.Range);
}

uint64_t sub_1C404BB44()
{
  return sub_1C404BA6C(&qword_1EA39C630, (void (*)(uint64_t))type metadata accessor for Proto4_Selection);
}

uint64_t type metadata accessor for Proto4_Selection(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39CAA0);
}

uint64_t sub_1C404BBAC()
{
  return sub_1C404BA6C(&qword_1EA39C638, (void (*)(uint64_t))type metadata accessor for Proto4_Selection);
}

uint64_t sub_1C404BBF4()
{
  return sub_1C404BA6C(&qword_1EA39C640, (void (*)(uint64_t))type metadata accessor for Proto4_Selection);
}

uint64_t sub_1C404BC3C()
{
  return sub_1C404BA6C(&qword_1EA39C648, (void (*)(uint64_t))type metadata accessor for Proto4_Selection);
}

uint64_t sub_1C404BC84()
{
  return sub_1C404BA6C(&qword_1EA39BEC8, (void (*)(uint64_t))type metadata accessor for Proto4_Subsequence);
}

uint64_t sub_1C404BCCC()
{
  return sub_1C404BA6C(&qword_1EA39C650, (void (*)(uint64_t))type metadata accessor for Proto4_Subsequence);
}

uint64_t sub_1C404BD14()
{
  return sub_1C404BA6C(&qword_1EA39C658, (void (*)(uint64_t))type metadata accessor for Proto4_Subsequence);
}

uint64_t sub_1C404BD5C()
{
  return sub_1C404BA6C(&qword_1EA39C660, (void (*)(uint64_t))type metadata accessor for Proto4_Subsequence);
}

uint64_t sub_1C404BDA4()
{
  return sub_1C404BA6C(&qword_1EA39C668, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
}

uint64_t sub_1C404BDEC()
{
  return sub_1C404BA6C(&qword_1EA39C670, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
}

uint64_t sub_1C404BE34()
{
  return sub_1C404BA6C(&qword_1EA39C678, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
}

uint64_t sub_1C404BE7C()
{
  return sub_1C404BA6C(&qword_1EA39C680, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
}

uint64_t sub_1C404BEC4()
{
  return sub_1C404BA6C(&qword_1EA39BEC0, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT.Sibling);
}

uint64_t type metadata accessor for Proto4_CustomCRDT.Sibling(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39CA90);
}

uint64_t sub_1C404BF2C()
{
  return sub_1C404BA6C(&qword_1EA39C688, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT.Sibling);
}

uint64_t sub_1C404BF74()
{
  return sub_1C404BA6C(&qword_1EA39C690, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT.Sibling);
}

uint64_t sub_1C404BFBC()
{
  return sub_1C404BA6C(&qword_1EA39C698, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT.Sibling);
}

uint64_t sub_1C404C004()
{
  return sub_1C404BA6C(&qword_1EA39C6A0, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
}

uint64_t sub_1C404C04C()
{
  return sub_1C404BA6C(&qword_1EA39C6A8, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
}

uint64_t sub_1C404C094()
{
  return sub_1C404BA6C(&qword_1EA39C6B0, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
}

uint64_t sub_1C404C0DC()
{
  return sub_1C404BA6C(&qword_1EA39C6B8, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
}

uint64_t sub_1C404C124()
{
  return sub_1C404BA6C(&qword_1EA39C6C0, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
}

uint64_t sub_1C404C16C()
{
  return sub_1C404BA6C(&qword_1EA39C6C8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
}

uint64_t sub_1C404C1B4()
{
  return sub_1C404BA6C(&qword_1EA39C6D0, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
}

uint64_t sub_1C404C1FC()
{
  return sub_1C404BA6C(&qword_1EA39C6D8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
}

uint64_t sub_1C404C244()
{
  return sub_1C404BA6C(&qword_1EA39C6E0, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
}

uint64_t sub_1C404C28C()
{
  return sub_1C404BA6C(&qword_1EA39C6E8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
}

uint64_t sub_1C404C2D4()
{
  return sub_1C404BA6C(&qword_1EA39C6F0, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
}

uint64_t sub_1C404C31C()
{
  return sub_1C404BA6C(&qword_1EA39C6F8, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
}

uint64_t sub_1C404C364()
{
  return sub_1C404BA6C(&qword_1EA39C700, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
}

uint64_t sub_1C404C3AC()
{
  return sub_1C404BA6C(&qword_1EA39C708, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
}

uint64_t sub_1C404C3F4()
{
  return sub_1C404BA6C(&qword_1EA39C710, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
}

uint64_t sub_1C404C43C()
{
  return sub_1C404BA6C(&qword_1EA39C718, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
}

uint64_t sub_1C404C484()
{
  return sub_1C404BA6C(&qword_1EA39BE98, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
}

uint64_t sub_1C404C4CC()
{
  return sub_1C404BA6C(&qword_1EA39C720, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
}

uint64_t sub_1C404C514()
{
  return sub_1C404BA6C(&qword_1EA39C728, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
}

uint64_t sub_1C404C55C()
{
  return sub_1C404BA6C(&qword_1EA39C730, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
}

uint64_t sub_1C404C5A4()
{
  return sub_1C404BA6C(&qword_1EA39BEB8, (void (*)(uint64_t))type metadata accessor for Proto4_Struct.Field);
}

uint64_t type metadata accessor for Proto4_Struct.Field(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39CA80);
}

uint64_t sub_1C404C60C()
{
  return sub_1C404BA6C(&qword_1EA39C738, (void (*)(uint64_t))type metadata accessor for Proto4_Struct.Field);
}

uint64_t sub_1C404C654()
{
  return sub_1C404BA6C(&qword_1EA39C740, (void (*)(uint64_t))type metadata accessor for Proto4_Struct.Field);
}

uint64_t sub_1C404C69C()
{
  return sub_1C404BA6C(&qword_1EA39C748, (void (*)(uint64_t))type metadata accessor for Proto4_Struct.Field);
}

uint64_t sub_1C404C6E4()
{
  return sub_1C404BA6C(&qword_1EA39C750, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
}

uint64_t sub_1C404C72C()
{
  return sub_1C404BA6C(&qword_1EA39C758, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
}

uint64_t sub_1C404C774()
{
  return sub_1C404BA6C(&qword_1EA39C760, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
}

uint64_t sub_1C404C7BC()
{
  return sub_1C404BA6C(&qword_1EA39C768, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
}

uint64_t sub_1C404C804()
{
  return sub_1C404BA6C(&qword_1EA39BEB0, (void (*)(uint64_t))type metadata accessor for Proto4_Set.Element);
}

uint64_t sub_1C404C84C()
{
  return sub_1C404BA6C(&qword_1EA39C770, (void (*)(uint64_t))type metadata accessor for Proto4_Set.Element);
}

uint64_t sub_1C404C894()
{
  return sub_1C404BA6C(&qword_1EA39C778, (void (*)(uint64_t))type metadata accessor for Proto4_Set.Element);
}

uint64_t sub_1C404C8DC()
{
  return sub_1C404BA6C(&qword_1EA39C780, (void (*)(uint64_t))type metadata accessor for Proto4_Set.Element);
}

uint64_t sub_1C404C924()
{
  return sub_1C404BA6C(&qword_1EA39C788, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
}

uint64_t sub_1C404C96C()
{
  return sub_1C404BA6C(&qword_1EA39C790, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
}

uint64_t sub_1C404C9B4()
{
  return sub_1C404BA6C(&qword_1EA39C798, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
}

uint64_t sub_1C404C9FC()
{
  return sub_1C404BA6C(&qword_1EA39C7A0, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
}

uint64_t sub_1C404CA44()
{
  return sub_1C404BA6C(&qword_1EA39C7A8, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
}

uint64_t sub_1C404CA8C()
{
  return sub_1C404BA6C(&qword_1EA39C7B0, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
}

uint64_t sub_1C404CAD4()
{
  return sub_1C404BA6C(&qword_1EA39C7B8, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
}

uint64_t sub_1C404CB1C()
{
  return sub_1C404BA6C(&qword_1EA39C7C0, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
}

uint64_t sub_1C404CB64()
{
  return sub_1C404BA6C(&qword_1EA39C7C8, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
}

uint64_t sub_1C404CBAC()
{
  return sub_1C404BA6C(&qword_1EA39C7D0, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
}

uint64_t sub_1C404CBF4()
{
  return sub_1C404BA6C(&qword_1EA39C7D8, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
}

uint64_t sub_1C404CC3C()
{
  return sub_1C404BA6C(&qword_1EA39C7E0, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
}

uint64_t sub_1C404CC84()
{
  return sub_1C404BA6C(&qword_1EA39BEA8, (void (*)(uint64_t))type metadata accessor for Proto4_Version.Seen);
}

uint64_t type metadata accessor for Proto4_Version.Seen(uint64_t a1)
{
  return sub_1C3F9708C(a1, (uint64_t *)&unk_1EA39CAC0);
}

uint64_t sub_1C404CCEC()
{
  return sub_1C404BA6C(&qword_1EA39C7E8, (void (*)(uint64_t))type metadata accessor for Proto4_Version.Seen);
}

uint64_t sub_1C404CD34()
{
  return sub_1C404BA6C(&qword_1EA39C7F0, (void (*)(uint64_t))type metadata accessor for Proto4_Version.Seen);
}

uint64_t sub_1C404CD7C()
{
  return sub_1C404BA6C(&qword_1EA39C7F8, (void (*)(uint64_t))type metadata accessor for Proto4_Version.Seen);
}

uint64_t sub_1C404CDC4()
{
  return sub_1C404BA6C(&qword_1EA39C800, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
}

uint64_t sub_1C404CE0C()
{
  return sub_1C404BA6C(&qword_1EA39C808, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
}

uint64_t sub_1C404CE54()
{
  return sub_1C404BA6C(&qword_1EA39C810, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
}

uint64_t sub_1C404CE9C()
{
  return sub_1C404BA6C(&qword_1EA39C818, (void (*)(uint64_t))type metadata accessor for Proto4_Version);
}

uint64_t sub_1C404CEE4()
{
  return sub_1C404BA6C(&qword_1EA39BED8, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
}

uint64_t sub_1C404CF2C()
{
  return sub_1C404BA6C(&qword_1EA39C820, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
}

uint64_t sub_1C404CF74()
{
  return sub_1C404BA6C(&qword_1EA39C828, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
}

uint64_t sub_1C404CFBC()
{
  return sub_1C404BA6C(&qword_1EA39C830, (void (*)(uint64_t))type metadata accessor for Proto4_IndexedTimestamp);
}

uint64_t sub_1C404D004()
{
  return sub_1C404BA6C(&qword_1EA39C838, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
}

uint64_t sub_1C404D04C()
{
  return sub_1C404BA6C(&qword_1EA39C840, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
}

uint64_t sub_1C404D094()
{
  return sub_1C404BA6C(&qword_1EA39C848, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
}

uint64_t sub_1C404D0DC()
{
  return sub_1C404BA6C(&qword_1EA39C850, (void (*)(uint64_t))type metadata accessor for Proto4_Timestamp);
}

uint64_t sub_1C404D124()
{
  return sub_1C404BA6C(&qword_1EA39C858, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
}

uint64_t sub_1C404D16C()
{
  return sub_1C404BA6C(&qword_1EA39C860, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
}

uint64_t sub_1C404D1B4()
{
  return sub_1C404BA6C(&qword_1EA39C868, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
}

uint64_t sub_1C404D1FC()
{
  return sub_1C404BA6C(&qword_1EA39C870, (void (*)(uint64_t))type metadata accessor for Proto4_KeyPath);
}

uint64_t sub_1C404D244()
{
  return sub_1C404BA6C(&qword_1EA39BED0, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
}

uint64_t sub_1C404D28C()
{
  return sub_1C404BA6C(&qword_1EA39C878, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
}

uint64_t sub_1C404D2D4()
{
  return sub_1C404BA6C(&qword_1EA39C880, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
}

uint64_t sub_1C404D31C()
{
  return sub_1C404BA6C(&qword_1EA39C888, (void (*)(uint64_t))type metadata accessor for Proto4_CRDT);
}

uint64_t sub_1C404D364()
{
  return sub_1C404BA6C(&qword_1EA39BEA0, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
}

uint64_t sub_1C404D3AC()
{
  return sub_1C404BA6C(&qword_1EA39C890, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
}

uint64_t sub_1C404D3F4()
{
  return sub_1C404BA6C(&qword_1EA39C898, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
}

uint64_t sub_1C404D43C()
{
  return sub_1C404BA6C(&qword_1EA39C8A0, (void (*)(uint64_t))type metadata accessor for Proto4_Value);
}

uint64_t sub_1C404D484()
{
  return sub_1C404BA6C(&qword_1EA39C8A8, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
}

uint64_t sub_1C404D4CC()
{
  return sub_1C404BA6C(&qword_1EA39C098, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
}

uint64_t sub_1C404D514()
{
  return sub_1C404BA6C(&qword_1EA39C8B0, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
}

uint64_t sub_1C404D55C()
{
  return sub_1C404BA6C(&qword_1EA39C8B8, (void (*)(uint64_t))type metadata accessor for Proto4_Root);
}

uint64_t sub_1C404D5A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C404D60C(uint64_t a1, uint64_t a2)
{
  uint64_t v100 = a1;
  uint64_t v101 = a2;
  uint64_t v89 = type metadata accessor for Proto4_CustomCRDT(0);
  uint64_t v2 = MEMORY[0x1F4188790](v89);
  uint64_t v88 = (uint64_t)&v75 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v87 = (uint64_t)&v75 - v4;
  uint64_t v86 = type metadata accessor for Proto4_TaggedCRDT(0);
  uint64_t v5 = MEMORY[0x1F4188790](v86);
  uint64_t v85 = (uint64_t)&v75 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v84 = (uint64_t)&v75 - v7;
  uint64_t v83 = type metadata accessor for Proto4_Counter(0);
  uint64_t v8 = MEMORY[0x1F4188790](v83);
  uint64_t v82 = (uint64_t)&v75 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v81 = (uint64_t)&v75 - v10;
  uint64_t v93 = type metadata accessor for Proto4_Sequence(0);
  uint64_t v11 = MEMORY[0x1F4188790](v93);
  uint64_t v94 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v95 = (uint64_t)&v75 - v13;
  uint64_t v80 = type metadata accessor for Proto4_Struct(0);
  uint64_t v14 = MEMORY[0x1F4188790](v80);
  uint64_t v79 = (uint64_t)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v78 = (uint64_t)&v75 - v16;
  uint64_t v90 = type metadata accessor for Proto4_Set(0);
  uint64_t v17 = MEMORY[0x1F4188790](v90);
  uint64_t v91 = (uint64_t)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v92 = (uint64_t)&v75 - v19;
  uint64_t v77 = type metadata accessor for Proto4_Register(0);
  uint64_t v20 = MEMORY[0x1F4188790](v77);
  uint64_t v76 = (uint64_t)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v75 = (uint64_t)&v75 - v22;
  uint64_t v23 = type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf(0);
  uint64_t v24 = MEMORY[0x1F4188790](v23);
  uint64_t v99 = (uint64_t)&v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v98 = (uint64_t)&v75 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v97 = (uint64_t)&v75 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v96 = (uint64_t)&v75 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  char v34 = (char *)&v75 - v33;
  uint64_t v35 = MEMORY[0x1F4188790](v32);
  uint64_t v37 = (char *)&v75 - v36;
  uint64_t v38 = MEMORY[0x1F4188790](v35);
  uint64_t v40 = (char *)&v75 - v39;
  uint64_t v41 = MEMORY[0x1F4188790](v38);
  uint64_t v43 = (char *)&v75 - v42;
  MEMORY[0x1F4188790](v41);
  char v45 = (char *)&v75 - v44;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C990);
  uint64_t v47 = MEMORY[0x1F4188790](v46 - 8);
  uint64_t v49 = (char *)&v75 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = (uint64_t)&v49[*(int *)(v47 + 56)];
  sub_1C404EE38(v100, (uint64_t)v49, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
  uint64_t v51 = v50;
  sub_1C404EE38(v101, v50, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C404EE38((uint64_t)v49, (uint64_t)v43, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v54 = (uint64_t)v43;
        goto LABEL_8;
      }
      uint64_t v52 = type metadata accessor for Proto4_Set;
      uint64_t v53 = (uint64_t)v43;
      goto LABEL_32;
    case 2u:
      sub_1C404EE38((uint64_t)v49, (uint64_t)v40, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        uint64_t v52 = type metadata accessor for Proto4_Set;
        uint64_t v53 = (uint64_t)v40;
        goto LABEL_32;
      }
      uint64_t v54 = (uint64_t)v40;
LABEL_8:
      uint64_t v55 = v92;
      sub_1C404D5A4(v54, v92, type metadata accessor for Proto4_Set);
      uint64_t v56 = v50;
      uint64_t v57 = v91;
      sub_1C404D5A4(v56, v91, type metadata accessor for Proto4_Set);
      sub_1C404BA6C(&qword_1EA39C9C0, (void (*)(uint64_t))type metadata accessor for Proto4_Set);
      char v58 = sub_1C44968D8();
      char v59 = type metadata accessor for Proto4_Set;
      goto LABEL_16;
    case 3u:
      sub_1C404EE38((uint64_t)v49, (uint64_t)v37, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v60 = v78;
        sub_1C404D5A4((uint64_t)v37, v78, type metadata accessor for Proto4_Struct);
        uint64_t v61 = v79;
        sub_1C404D5A4(v50, v79, type metadata accessor for Proto4_Struct);
        sub_1C404BA6C(&qword_1EA39C9B8, (void (*)(uint64_t))type metadata accessor for Proto4_Struct);
        char v58 = sub_1C44968D8();
        uint64_t v62 = type metadata accessor for Proto4_Struct;
        sub_1C4049E78(v61, type metadata accessor for Proto4_Struct);
        uint64_t v63 = v60;
        goto LABEL_35;
      }
      uint64_t v52 = type metadata accessor for Proto4_Struct;
      uint64_t v53 = (uint64_t)v37;
      goto LABEL_32;
    case 4u:
      sub_1C404EE38((uint64_t)v49, (uint64_t)v34, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v55 = v95;
        sub_1C404D5A4((uint64_t)v34, v95, type metadata accessor for Proto4_Sequence);
        uint64_t v64 = v50;
        uint64_t v57 = (uint64_t)v94;
        uint64_t v65 = (uint64_t)v94;
        goto LABEL_15;
      }
      uint64_t v52 = type metadata accessor for Proto4_Sequence;
      uint64_t v53 = (uint64_t)v34;
      goto LABEL_32;
    case 5u:
      uint64_t v66 = v96;
      sub_1C404EE38((uint64_t)v49, v96, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        uint64_t v73 = type metadata accessor for Proto4_Sequence;
        goto LABEL_31;
      }
      uint64_t v55 = v95;
      sub_1C404D5A4(v66, v95, type metadata accessor for Proto4_Sequence);
      uint64_t v64 = v51;
      uint64_t v57 = (uint64_t)v94;
      uint64_t v65 = (uint64_t)v94;
LABEL_15:
      sub_1C404D5A4(v64, v65, type metadata accessor for Proto4_Sequence);
      sub_1C404BA6C(&qword_1EA39C9B0, (void (*)(uint64_t))type metadata accessor for Proto4_Sequence);
      char v58 = sub_1C44968D8();
      char v59 = type metadata accessor for Proto4_Sequence;
LABEL_16:
      uint64_t v62 = v59;
      sub_1C4049E78(v57, v59);
      uint64_t v63 = v55;
      goto LABEL_35;
    case 6u:
      uint64_t v66 = v97;
      sub_1C404EE38((uint64_t)v49, v97, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v67 = v66;
        uint64_t v68 = v81;
        sub_1C404D5A4(v67, v81, type metadata accessor for Proto4_Counter);
        uint64_t v69 = v82;
        sub_1C404D5A4(v51, v82, type metadata accessor for Proto4_Counter);
        sub_1C404BA6C(&qword_1EA39C9A8, (void (*)(uint64_t))type metadata accessor for Proto4_Counter);
        char v58 = sub_1C44968D8();
        uint64_t v70 = type metadata accessor for Proto4_Counter;
        goto LABEL_34;
      }
      uint64_t v73 = type metadata accessor for Proto4_Counter;
      goto LABEL_31;
    case 7u:
      uint64_t v66 = v98;
      sub_1C404EE38((uint64_t)v49, v98, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() == 7)
      {
        uint64_t v71 = v66;
        uint64_t v68 = v84;
        sub_1C404D5A4(v71, v84, type metadata accessor for Proto4_TaggedCRDT);
        uint64_t v69 = v85;
        sub_1C404D5A4(v51, v85, type metadata accessor for Proto4_TaggedCRDT);
        sub_1C404BA6C(&qword_1EA39C9A0, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedCRDT);
        char v58 = sub_1C44968D8();
        uint64_t v70 = type metadata accessor for Proto4_TaggedCRDT;
        goto LABEL_34;
      }
      uint64_t v73 = type metadata accessor for Proto4_TaggedCRDT;
      goto LABEL_31;
    case 8u:
      uint64_t v66 = v99;
      sub_1C404EE38((uint64_t)v49, v99, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() == 8)
      {
        uint64_t v72 = v66;
        uint64_t v68 = v87;
        sub_1C404D5A4(v72, v87, type metadata accessor for Proto4_CustomCRDT);
        uint64_t v69 = v88;
        sub_1C404D5A4(v51, v88, type metadata accessor for Proto4_CustomCRDT);
        sub_1C404BA6C(&qword_1EA39C998, (void (*)(uint64_t))type metadata accessor for Proto4_CustomCRDT);
        char v58 = sub_1C44968D8();
        uint64_t v70 = type metadata accessor for Proto4_CustomCRDT;
        goto LABEL_34;
      }
      uint64_t v73 = type metadata accessor for Proto4_CustomCRDT;
LABEL_31:
      uint64_t v52 = v73;
      uint64_t v53 = v66;
      goto LABEL_32;
    default:
      sub_1C404EE38((uint64_t)v49, (uint64_t)v45, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v52 = type metadata accessor for Proto4_Register;
        uint64_t v53 = (uint64_t)v45;
LABEL_32:
        sub_1C4049E78(v53, v52);
        sub_1C3F962E0((uint64_t)v49, &qword_1EA39C990);
        char v58 = 0;
      }
      else
      {
        uint64_t v68 = v75;
        sub_1C404D5A4((uint64_t)v45, v75, type metadata accessor for Proto4_Register);
        uint64_t v69 = v76;
        sub_1C404D5A4(v51, v76, type metadata accessor for Proto4_Register);
        sub_1C404BA6C(&qword_1EA39C9C8, (void (*)(uint64_t))type metadata accessor for Proto4_Register);
        char v58 = sub_1C44968D8();
        uint64_t v70 = type metadata accessor for Proto4_Register;
LABEL_34:
        uint64_t v62 = v70;
        sub_1C4049E78(v69, v70);
        uint64_t v63 = v68;
LABEL_35:
        sub_1C4049E78(v63, v62);
        sub_1C4049E78((uint64_t)v49, type metadata accessor for Proto4_CRDT.OneOf_TaggedOneOf);
      }
      return v58 & 1;
  }
}

uint64_t sub_1C404E3DC(uint64_t a1, uint64_t a2)
{
  uint64_t v89 = a2;
  uint64_t v81 = type metadata accessor for Proto4_TaggedValue(0);
  uint64_t v3 = MEMORY[0x1F4188790](v81);
  uint64_t v80 = (uint64_t)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v79 = (uint64_t)&v72 - v5;
  uint64_t v78 = type metadata accessor for Proto4_Optional(0);
  uint64_t v6 = MEMORY[0x1F4188790](v78);
  uint64_t v77 = (uint64_t)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v76 = (uint64_t)&v72 - v8;
  uint64_t v75 = type metadata accessor for Proto4_Reference(0);
  uint64_t v9 = MEMORY[0x1F4188790](v75);
  uint64_t v74 = (uint64_t)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v73 = (uint64_t)&v72 - v11;
  uint64_t v12 = sub_1C4496858();
  uint64_t v87 = *(void *)(v12 - 8);
  uint64_t v88 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v83 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v82 = (char *)&v72 - v15;
  uint64_t v16 = type metadata accessor for Proto4_Value.OneOf_TaggedOneOf(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v86 = (uint64_t)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v85 = (uint64_t)&v72 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v84 = (uint64_t)&v72 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v72 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (uint64_t *)((char *)&v72 - v27);
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (uint64_t *)((char *)&v72 - v30);
  uint64_t v32 = MEMORY[0x1F4188790](v29);
  char v34 = (double *)((char *)&v72 - v33);
  MEMORY[0x1F4188790](v32);
  uint64_t v36 = (uint64_t *)((char *)&v72 - v35);
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C920);
  uint64_t v38 = MEMORY[0x1F4188790](v37 - 8);
  uint64_t v40 = (char *)&v72 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = (uint64_t *)&v40[*(int *)(v38 + 56)];
  sub_1C404EE38(a1, (uint64_t)v40, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
  sub_1C404EE38(v89, (uint64_t)v41, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C404EE38((uint64_t)v40, (uint64_t)v34, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() != 1) {
        goto LABEL_34;
      }
      BOOL v42 = *v34 == *(double *)v41;
      goto LABEL_12;
    case 2u:
      uint64_t v43 = (uint64_t)v40;
      sub_1C404EE38((uint64_t)v40, (uint64_t)v31, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      uint64_t v45 = *v31;
      uint64_t v44 = v31[1];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = (char *)v43;
        goto LABEL_34;
      }
      if (v45 == *v41 && v44 == v41[1]) {
        char v46 = 1;
      }
      else {
        char v46 = sub_1C44982E8();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C4049E78(v43, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      return v46 & 1;
    case 3u:
      sub_1C404EE38((uint64_t)v40, (uint64_t)v28, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      uint64_t v57 = *v28;
      unint64_t v58 = v28[1];
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        double v59 = *(double *)v41;
        unint64_t v60 = v41[1];
        uint64_t v61 = (uint64_t)v40;
        char v46 = sub_1C3FAD630(v57, v58, *v41, v60);
        sub_1C3F7E2CC(*(uint64_t *)&v59, v60);
        sub_1C3F7E2CC(v57, v58);
        sub_1C4049E78(v61, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
        return v46 & 1;
      }
      sub_1C3F7E2CC(v57, v58);
      goto LABEL_34;
    case 4u:
      sub_1C404EE38((uint64_t)v40, (uint64_t)v25, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      uint64_t v47 = v41;
      if (swift_getEnumCaseMultiPayload() == 4)
      {
        uint64_t v48 = v87;
        uint64_t v49 = (uint64_t)v40;
        uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
        uint64_t v51 = v82;
        uint64_t v52 = v25;
        uint64_t v53 = v88;
        v50(v82, v52, v88);
        uint64_t v54 = v83;
        v50(v83, (char *)v47, v53);
        char v46 = sub_1C44967F8();
        uint64_t v55 = *(void (**)(char *, uint64_t))(v48 + 8);
        v55(v54, v53);
        v55(v51, v53);
        goto LABEL_25;
      }
      (*(void (**)(char *, uint64_t))(v87 + 8))(v25, v88);
      goto LABEL_34;
    case 5u:
      uint64_t v62 = v84;
      sub_1C404EE38((uint64_t)v40, v84, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() == 5)
      {
        uint64_t v63 = v73;
        sub_1C404D5A4(v62, v73, type metadata accessor for Proto4_Reference);
        uint64_t v64 = v74;
        sub_1C404D5A4((uint64_t)v41, v74, type metadata accessor for Proto4_Reference);
        sub_1C404BA6C(&qword_1EA39C938, (void (*)(uint64_t))type metadata accessor for Proto4_Reference);
        uint64_t v49 = (uint64_t)v40;
        char v46 = sub_1C44968D8();
        uint64_t v65 = type metadata accessor for Proto4_Reference;
        goto LABEL_24;
      }
      uint64_t v68 = type metadata accessor for Proto4_Reference;
      uint64_t v69 = v62;
      goto LABEL_33;
    case 6u:
      uint64_t v66 = v85;
      sub_1C404EE38((uint64_t)v40, v85, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() == 6)
      {
        uint64_t v63 = v76;
        sub_1C404D5A4(v66, v76, type metadata accessor for Proto4_Optional);
        uint64_t v64 = v77;
        sub_1C404D5A4((uint64_t)v41, v77, type metadata accessor for Proto4_Optional);
        sub_1C404BA6C(&qword_1EA39C930, (void (*)(uint64_t))type metadata accessor for Proto4_Optional);
        uint64_t v49 = (uint64_t)v40;
        char v46 = sub_1C44968D8();
        uint64_t v65 = type metadata accessor for Proto4_Optional;
        goto LABEL_24;
      }
      uint64_t v70 = type metadata accessor for Proto4_Optional;
      goto LABEL_32;
    case 7u:
      uint64_t v66 = v86;
      sub_1C404EE38((uint64_t)v40, v86, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload() == 7)
      {
        uint64_t v63 = v79;
        sub_1C404D5A4(v66, v79, type metadata accessor for Proto4_TaggedValue);
        uint64_t v64 = v80;
        sub_1C404D5A4((uint64_t)v41, v80, type metadata accessor for Proto4_TaggedValue);
        sub_1C404BA6C(&qword_1EA39C928, (void (*)(uint64_t))type metadata accessor for Proto4_TaggedValue);
        uint64_t v49 = (uint64_t)v40;
        char v46 = sub_1C44968D8();
        uint64_t v65 = type metadata accessor for Proto4_TaggedValue;
LABEL_24:
        uint64_t v67 = v65;
        sub_1C4049E78(v64, v65);
        sub_1C4049E78(v63, v67);
LABEL_25:
        sub_1C4049E78(v49, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      }
      else
      {
        uint64_t v70 = type metadata accessor for Proto4_TaggedValue;
LABEL_32:
        uint64_t v68 = v70;
        uint64_t v69 = v66;
LABEL_33:
        sub_1C4049E78(v69, v68);
LABEL_34:
        sub_1C3F962E0((uint64_t)v40, &qword_1EA39C920);
        char v46 = 0;
      }
      return v46 & 1;
    default:
      sub_1C404EE38((uint64_t)v40, (uint64_t)v36, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      if (swift_getEnumCaseMultiPayload()) {
        goto LABEL_34;
      }
      BOOL v42 = *v36 == *v41;
LABEL_12:
      uint64_t v56 = (uint64_t)v40;
      char v46 = v42;
      sub_1C4049E78(v56, type metadata accessor for Proto4_Value.OneOf_TaggedOneOf);
      return v46 & 1;
  }
}

uint64_t sub_1C404EE38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C404EEA0()
{
  unint64_t result = qword_1EA39CA70;
  if (!qword_1EA39CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39CA70);
  }
  return result;
}

uint64_t sub_1C404EEF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_11);
}

uint64_t sub_1C404EF0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_11);
}

uint64_t sub_1C404EF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_12);
}

uint64_t sub_1C404EF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_12);
}

uint64_t sub_1C404EF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_13);
}

uint64_t sub_1C404EF6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_13);
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_Reference.TypeEnum(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Proto_Reference.TypeEnum(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_1C404EFE8(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C404F004(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Proto4_Selection.Affinity()
{
  return &type metadata for Proto4_Selection.Affinity;
}

uint64_t sub_1C404F034(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    *(void *)(a1 + 8) = a2[1];
    *(void *)(a1 + 16) = v6;
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v7 = *(int *)(a3 + 28);
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_1C4496898();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_1C404F130(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_1C4496898();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(v4, v5);
}

uint64_t sub_1C404F1B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(int *)(a3 + 28);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_1C4496898();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_1C404F260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_1C4496898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1C404F31C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1C4496898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_1C404F3A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_1C4496898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_1C404F454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C404F468);
}

uint64_t sub_1C404F468(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C4496898();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C404F518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C404F52C);
}

void *sub_1C404F52C(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C4496898();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 28);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C404F5D4()
{
  uint64_t result = sub_1C4496898();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C404F67C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1C4496898();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_1C404F748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C404F7D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1C404F850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, j____swift_get_extra_inhabitant_index_230Tm_14);
}

uint64_t sub_1C404F868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, j____swift_store_extra_inhabitant_index_231Tm_14);
}

uint64_t *sub_1C404F880(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_1C3F7E324(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    a1[2] = a2[2];
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_1C4496898();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return a1;
}

uint64_t *sub_1C404F984(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_1C3F7E324(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_1C3F7E2CC(v8, v9);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_1C4496898();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_1C404FA3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_1C4496898();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t *sub_1C404FAC0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1C3F7E2CC(v6, v7);
  a1[2] = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_1C4496898();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_1C404FB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C404FB74);
}

uint64_t sub_1C404FB74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C4496898();
    unint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C404FC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C404FC38);
}

uint64_t sub_1C404FC38(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C4496898();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1C404FCE0()
{
  return sub_1C3F56480();
}

unint64_t sub_1C404FCFC()
{
  unint64_t result = qword_1EA39CAD0;
  if (!qword_1EA39CAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39CAD0);
  }
  return result;
}

unint64_t sub_1C404FD54()
{
  unint64_t result = qword_1EA39CAD8;
  if (!qword_1EA39CAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39CAD8);
  }
  return result;
}

unint64_t sub_1C404FDAC()
{
  unint64_t result = qword_1EA39CAE0;
  if (!qword_1EA39CAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39CAE0);
  }
  return result;
}

void sub_1C404FE00(uint64_t a1, uint64_t *a2, uint64_t a3, char a4)
{
  if ((a4 & 1) == 0)
  {
    uint64_t v6 = v4;
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    uint64_t v9 = (void *)(v4 + 48);
    swift_beginAccess();
    sub_1C3F7E324(v7, v8);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *(void *)(v4 + 48);
    uint64_t v24 = v11;
    *(void *)(v6 + 48) = 0x8000000000000000;
    unint64_t v13 = sub_1C3F850CC(v7, v8);
    uint64_t v14 = *(void *)(v11 + 16);
    BOOL v15 = (v12 & 1) == 0;
    uint64_t v16 = v14 + v15;
    if (__OFADD__(v14, v15))
    {
      __break(1u);
      goto LABEL_13;
    }
    char v5 = v12;
    if (*(void *)(v11 + 24) >= v16)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_1C406353C(v16, isUniquelyReferenced_nonNull_native);
      uint64_t v17 = sub_1C3F850CC(v7, v8);
      if ((v5 & 1) != (v18 & 1))
      {
        sub_1C4498558();
        __break(1u);
        return;
      }
      unint64_t v13 = v17;
    }
    while (1)
    {
      *uint64_t v9 = v11;
      swift_bridgeObjectRelease();
      uint64_t v19 = (void *)*v9;
      swift_bridgeObjectRetain();
      if ((v5 & 1) == 0)
      {
        sub_1C4421D64(v13, v7, v8, 0, v19);
        sub_1C3F7E324(v7, v8);
      }
      uint64_t v20 = v19[7];
      uint64_t v21 = *(void *)(v20 + 8 * v13);
      BOOL v22 = __OFADD__(v21, 1);
      uint64_t v23 = v21 + 1;
      if (!v22) {
        break;
      }
LABEL_13:
      __break(1u);
LABEL_14:
      sub_1C4068670();
      uint64_t v11 = v24;
    }
    *(void *)(v20 + 8 * v13) = v23;
    swift_endAccess();
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v7, v8);
  }
}

uint64_t sub_1C404FF94@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v5 = v3;
  uint64_t v9 = (void **)(v3 + 40);
  swift_beginAccess();
  sub_1C3F7E324(a1, a2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *(void **)(v3 + 40);
  uint64_t v25 = v11;
  *(void *)(v5 + 40) = 0x8000000000000000;
  unint64_t v13 = sub_1C4061A50(a1, a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_11;
  }
  char v4 = v12;
  if (v11[3] >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_12;
    }
  }
  else
  {
    sub_1C4063840(v16, isUniquelyReferenced_nonNull_native);
    uint64_t v17 = sub_1C4061A50(a1, a2);
    if ((v4 & 1) != (v18 & 1))
    {
      uint64_t result = sub_1C4498558();
      __break(1u);
      return result;
    }
    unint64_t v13 = v17;
  }
  while (1)
  {
    *uint64_t v9 = v11;
    swift_bridgeObjectRelease();
    uint64_t v19 = (uint64_t)*v9;
    if ((v4 & 1) == 0)
    {
      sub_1C4421D64(v13, a1, a2, 0, *v9);
      sub_1C3F7E324(a1, a2);
    }
    uint64_t v20 = *(void *)(v19 + 56);
    uint64_t v21 = *(void *)(v20 + 8 * v13);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22) {
      break;
    }
LABEL_11:
    __break(1u);
LABEL_12:
    sub_1C4068820();
    uint64_t v11 = v25;
  }
  *(void *)(v20 + 8 * v13) = v23;
  swift_endAccess();
  sub_1C3F7E2CC(a1, a2);
  return sub_1C43C63D4(a1, a2, a3);
}

uint64_t sub_1C4050138()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C4050168()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRDebugDecodeContext()
{
  return self;
}

uint64_t (*sub_1C40501E4(void *a1, uint64_t a2))()
{
  char v4 = malloc(0x30uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for Replica();
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[4] = v6;
  sub_1C3F8F450(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Replica);
  v4[5] = sub_1C406BB70(v4, (uint64_t)v6);
  return sub_1C3FAA6E4;
}

void (*sub_1C4050298(void *a1, uint64_t a2, unint64_t a3))(void *)
{
  uint64_t v6 = malloc(0x38uLL);
  *a1 = v6;
  v6[4] = a2;
  v6[5] = a3;
  sub_1C3F7E324(a2, a3);
  v6[6] = sub_1C406BC50(v6, a2, a3);
  return sub_1C3F84D78;
}

void (*sub_1C405031C(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = malloc(0x30uLL);
  *a1 = v6;
  v6[4] = a3;
  swift_bridgeObjectRetain();
  v6[5] = sub_1C406BD00(v6, a2, a3);
  return sub_1C405039C;
}

void sub_1C405039C(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_bridgeObjectRelease();
  free(v1);
}

uint64_t sub_1C40503F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v88 = a4;
  uint64_t v79 = a2;
  uint64_t v87 = a5;
  uint64_t v109 = *MEMORY[0x1E4F143B8];
  uint64_t v83 = *v5;
  uint64_t v86 = sub_1C4497B38();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v86);
  uint64_t v84 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v80 = (char *)&v76 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v82 = (char *)&v76 - v12;
  uint64_t v91 = sub_1C4496678();
  uint64_t v94 = *(char **)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v92 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v15 = v14 - 8;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  unint64_t v18 = a1[1];
  uint64_t v20 = (void *)sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  uint64_t v98 = v20;
  uint64_t v81 = v5;
  uint64_t v21 = (uint64_t)v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v21, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v22 = *(void *)&v17[*(int *)(v15 + 28)];
  uint64_t v23 = -1 << *(unsigned char *)(v22 + 32);
  uint64_t v24 = ~v23;
  uint64_t v25 = -v23;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  uint64_t v27 = v26 & *(void *)(v22 + 64);
  swift_bridgeObjectRetain();
  sub_1C3F8F5D4((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v104 = v22;
  uint64_t v105 = v22 + 64;
  uint64_t v106 = v24;
  uint64_t v107 = 0;
  uint64_t v108 = v27;
  sub_1C3FB0038((uint64_t)&v99);
  uint64_t v28 = v103;
  uint64_t v89 = a3;
  if (v103)
  {
    unint64_t v77 = v18;
    uint64_t v78 = v19;
    uint64_t v30 = (uint64_t)v99;
    unint64_t v29 = v100;
    uint64_t v90 = (void (**)(char *, uint64_t))(v94 + 8);
    uint64_t v32 = v101;
    uint64_t v31 = v102;
    do
    {
      uint64_t v93 = v31;
      sub_1C3F7E324(v30, v29);
      sub_1C4496668();
      uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0970);
      uint64_t v102 = v50;
      uint64_t v103 = sub_1C3F815A4(&qword_1EBBC0978, &qword_1EBBC0970);
      uint64_t v99 = &unk_1F1F96AD0;
      uint64_t v51 = __swift_project_boxed_opaque_existential_1(&v99, v50);
      uint64_t v52 = *v51;
      size_t v53 = *(void *)(*v51 + 16);
      uint64_t v94 = v32;
      if (v53)
      {
        if (v53 <= 0xE)
        {
          memset(__dst, 0, sizeof(__dst));
          unsigned __int8 v96 = v53;
          memcpy(__dst, (const void *)(v52 + 32), v53);
          uint64_t v33 = *(void **)__dst;
          unint64_t v34 = *(unsigned int *)&__dst[8] | ((unint64_t)__dst[12] << 32) | ((unint64_t)__dst[13] << 40) | ((unint64_t)v96 << 48);
        }
        else
        {
          sub_1C44962E8();
          swift_allocObject();
          uint64_t v54 = sub_1C4496288();
          uint64_t v55 = v54;
          if (v53 >= 0x7FFFFFFF)
          {
            sub_1C44964E8();
            uint64_t v33 = (void *)swift_allocObject();
            void v33[2] = 0;
            v33[3] = v53;
            unint64_t v34 = v55 | 0x8000000000000000;
          }
          else
          {
            uint64_t v33 = (void *)(v53 << 32);
            unint64_t v34 = v54 | 0x4000000000000000;
          }
        }
      }
      else
      {
        uint64_t v33 = 0;
        unint64_t v34 = 0xC000000000000000;
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v99);
      uint64_t v99 = v33;
      unint64_t v100 = v34;
      uint64_t v35 = v92;
      *(void *)__dst = sub_1C4496658();
      *(_WORD *)&__dst[8] = v36;
      __dst[10] = v37;
      __dst[11] = v38;
      __dst[12] = v39;
      __dst[13] = v40;
      unsigned __int8 v96 = v41;
      char v97 = v42;
      sub_1C4496658();
      uint64_t v43 = sub_1C3F5E01C(__dst, 16);
      unint64_t v45 = v44;
      sub_1C4496588();
      sub_1C3F7E2CC(v43, v45);
      (*v90)(v35, v91);
      uint64_t v46 = (uint64_t)v99;
      uint64_t v47 = v100;
      uint64_t v48 = v98;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v99 = v48;
      sub_1C44215BC(v46, v47, v30, v29, isUniquelyReferenced_nonNull_native);
      uint64_t v20 = v99;
      uint64_t v98 = v99;
      swift_bridgeObjectRelease();
      sub_1C3F7E2CC(v30, v29);
      sub_1C407D624(v30, v29, (uint64_t)v94, v93, v28);
      sub_1C3FB0038((uint64_t)&v99);
      uint64_t v30 = (uint64_t)v99;
      unint64_t v29 = v100;
      uint64_t v32 = v101;
      uint64_t v31 = v102;
      uint64_t v28 = v103;
    }
    while (v103);
    uint64_t v56 = v89;
    uint64_t v19 = v78;
    unint64_t v18 = v77;
  }
  else
  {
    uint64_t v56 = a3;
  }
  sub_1C3F7FCE8();
  uint64_t v57 = v85;
  unint64_t v58 = v80;
  if (v18 >> 60 == 15) {
    goto LABEL_21;
  }
  if (!*((void *)v20 + 2))
  {
    uint64_t v19 = 0;
    unint64_t v18 = 0xF000000000000000;
LABEL_21:
    uint64_t v64 = v86;
    uint64_t v65 = v82;
    goto LABEL_24;
  }
  sub_1C3F7E324(v19, v18);
  uint64_t v59 = sub_1C3F850CC(v19, v18);
  if (v60)
  {
    uint64_t v61 = (uint64_t *)(*((void *)v20 + 7) + 16 * v59);
    uint64_t v62 = *v61;
    unint64_t v63 = v61[1];
    sub_1C3F7E324(*v61, v63);
  }
  else
  {
    uint64_t v62 = 0;
    unint64_t v63 = 0xF000000000000000;
  }
  uint64_t v64 = v86;
  uint64_t v65 = v82;
  sub_1C3F6C6F0(v19, v18);
  uint64_t v19 = v62;
  unint64_t v18 = v63;
LABEL_24:
  uint64_t v94 = *(char **)(v57 + 16);
  uint64_t v93 = v57 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v94)(v58, v79, v64);
  uint64_t v66 = *(void *)(v56 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v58, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v58, v64);
    uint64_t v67 = 1;
    uint64_t v68 = v88;
  }
  else
  {
    uint64_t v68 = v88;
    (*(void (**)(void **, uint64_t))(v88 + 24))(&v98, v56);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v58, v56);
    uint64_t v67 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v66 + 56))(v65, v67, 1, v56);
  uint64_t v99 = (void *)v19;
  unint64_t v100 = v18;
  unint64_t v69 = v18;
  uint64_t v70 = v19;
  uint64_t v71 = (uint64_t)v84;
  uint64_t v72 = ((uint64_t (*)(char *, char *, uint64_t))v94)(v84, v65, v64);
  uint64_t v92 = (char *)&v76;
  MEMORY[0x1F4188790](v72);
  *(&v76 - 2) = (uint64_t)&v98;
  *(&v76 - 1) = (uint64_t)v81;
  sub_1C3F6C704(v70, v69);
  uint64_t v73 = sub_1C407B938((uint64_t *)&v99, v71, (void (*)(uint64_t))sub_1C407D61C, (uint64_t)(&v76 - 4), v56, v68);
  uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
  v74(v71, v64);
  uint64_t v99 = (void *)v70;
  unint64_t v100 = v69;
  ((void (*)(uint64_t, char *, uint64_t))v94)(v71, v65, v64);
  sub_1C443EFBC((uint64_t *)&v99, v71, (uint64_t)v73, v89, v87);
  v74((uint64_t)v65, v64);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C4050D64(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v37 = a1;
  uint64_t v40 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v40);
  uint64_t v43 = (uint64_t)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v38 = a2;
  uint64_t v8 = *a2;
  uint64_t v9 = *(void *)(*a2 + 64);
  uint64_t v35 = *a2 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & v9;
  uint64_t v13 = a3 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  uint64_t v41 = v8;
  swift_bridgeObjectRetain();
  uint64_t v39 = v13;
  swift_beginAccess();
  int64_t v14 = 0;
  int64_t v36 = (unint64_t)(v10 + 63) >> 6;
  if (!v12) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v12));
  uint64_t v16 = (v12 - 1) & v12;
  for (unint64_t i = v15 | (v14 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v14 << 6))
  {
    uint64_t v21 = 16 * i;
    uint64_t v22 = (uint64_t *)(*(void *)(v41 + 48) + v21);
    uint64_t v23 = *v22;
    unint64_t v24 = v22[1];
    uint64_t v25 = (uint64_t *)(*(void *)(v41 + 56) + v21);
    uint64_t v4 = *v25;
    unint64_t v3 = v25[1];
    uint64_t v26 = v43;
    sub_1C3F8F450(v39, v43, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v27 = *(void *)(v26 + *(int *)(v40 + 20));
    uint64_t v28 = *(void *)(v27 + 16);
    sub_1C3F7E324(v23, v24);
    if (!v28) {
      goto LABEL_27;
    }
    unint64_t v42 = v16;
    sub_1C3F7E324(v23, v24);
    sub_1C3F7E324(v23, v24);
    sub_1C3F7E324(v4, v3);
    uint64_t v29 = sub_1C3F850CC(v23, v24);
    if ((v30 & 1) == 0) {
      break;
    }
    uint64_t v31 = *(void *)(*(void *)(v27 + 56) + 48 * v29);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3F7E2CC(v23, v24);
    sub_1C3F7E2CC(v23, v24);
    sub_1C3F8F5D4(v43, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v31) {
      goto LABEL_30;
    }
    uint64_t v33 = (*(uint64_t (**)(uint64_t *))(*(void *)v31 + 80))(v38);
    swift_release();
    uint64_t v45 = v33;
    sub_1C3F7E324(v23, v24);
    sub_1C3F7E324(v4, v3);
    sub_1C3F7E2CC(v23, v24);
    v44[0] = v4;
    v44[1] = v3;
    sub_1C405118C((unint64_t *)&v45, v44, v46);
    sub_1C3F7E2CC(v23, v24);
    sub_1C3F7E2CC(v4, v3);
    sub_1C3F7E2CC(v4, v3);
    swift_release();
    sub_1C3F7E2CC(v46[0], v46[1]);
    unint64_t v12 = v42;
    if (v42) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      sub_1C3F7E324(v4, v3);
      goto LABEL_29;
    }
    if (v18 >= v36) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v35 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v36) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v35 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v36) {
          return swift_release();
        }
        unint64_t v19 = *(void *)(v35 + 8 * v14);
        if (!v19)
        {
          int64_t v20 = v18 + 3;
          if (v20 >= v36) {
            return swift_release();
          }
          unint64_t v19 = *(void *)(v35 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              int64_t v14 = v20 + 1;
              if (__OFADD__(v20, 1)) {
                goto LABEL_26;
              }
              if (v14 >= v36) {
                return swift_release();
              }
              unint64_t v19 = *(void *)(v35 + 8 * v14);
              ++v20;
              if (v19) {
                goto LABEL_18;
              }
            }
          }
          int64_t v14 = v20;
        }
      }
    }
LABEL_18:
    uint64_t v16 = (v19 - 1) & v19;
  }
  sub_1C3F7E2CC(v23, v24);
  sub_1C3F7E2CC(v23, v24);
LABEL_29:
  uint64_t result = sub_1C3F8F5D4(v43, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C405118C@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  int64_t v36 = a3;
  uint64_t v5 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C4496678();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v35 = *a1;
  uint64_t v13 = *a2;
  uint64_t v14 = *a2;
  unint64_t v15 = a2[1];
  unint64_t v12 = v15;
  if (v15 >> 60 == 15)
  {
    sub_1C4496668();
    *(void *)&long long v41 = sub_1C3F5E0D0((uint64_t)&unk_1F1F96AA8);
    *((void *)&v41 + 1) = v16;
    uint64_t v17 = sub_1C3F5DF48();
    unint64_t v19 = v18;
    sub_1C4496588();
    sub_1C3F7E2CC(v17, v19);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    unint64_t v15 = *((void *)&v41 + 1);
    uint64_t v14 = v41;
  }
  uint64_t v20 = v37 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v20, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v21 = *(void *)(*(void *)&v7[*(int *)(v5 + 20)] + 16);
  sub_1C3F6C704(v13, v12);
  if (!v21) {
    goto LABEL_13;
  }
  sub_1C3F7E324(v14, v15);
  sub_1C3F850CC(v14, v15);
  if ((v22 & 1) == 0)
  {
    sub_1C3F7E2CC(v14, v15);
LABEL_13:
    sub_1C3F8F5D4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    unint64_t v28 = v35;
    swift_retain();
    uint64_t v29 = MEMORY[0x1E4FBC860];
    unint64_t v30 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
    unint64_t v31 = sub_1C3F7E37C(v29);
    sub_1C3F7E4A4(v29);
    sub_1C3F7E37C(v29);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = MEMORY[0x1E4FBC868];
    swift_bridgeObjectRelease_n();
    long long v41 = v28;
    uint64_t v42 = v32;
    uint64_t v43 = v32;
    unint64_t v44 = v30;
    unint64_t v45 = v31;
    uint64_t v39 = v14;
    unint64_t v40 = v15;
    swift_beginAccess();
    sub_1C3F6C8F4(&v41, &v39);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_14:
    swift_beginAccess();
    sub_1C3F7E324(v14, v15);
    sub_1C3F81BF8(v38, v14, v15);
    swift_endAccess();
    uint64_t result = sub_1C3F7E2CC(v38[0], v38[1]);
    uint64_t v33 = v36;
    uint64_t *v36 = v14;
    v33[1] = v15;
    return result;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v14, v15);
  sub_1C3F8F5D4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  uint64_t v39 = v14;
  unint64_t v40 = v15;
  sub_1C3F7E324(v14, v15);
  unint64_t v24 = sub_1C3F84D7C(&v41, &v39);
  if (!v23[2])
  {
    ((void (*)(long long *, void))v24)(&v41, 0);
    sub_1C3F7E2CC(v39, v40);
    swift_endAccess();
    goto LABEL_14;
  }
  uint64_t v25 = v23;
  uint64_t result = *v23;
  if (*v23)
  {
    unint64_t v27 = v35;
    if (v35 != result)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        *uint64_t v25 = (*(uint64_t (**)(void))(*(void *)*v25 + 160))();
        swift_release();
      }
      (*(void (**)(unint64_t))(*(void *)*v25 + 96))(v27);
    }
    ((void (*)(long long *, void))v24)(&v41, 0);
    swift_endAccess();
    sub_1C3F7E2CC(v39, v40);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4051690@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v122 = a3;
  *(void *)&long long v141 = a1;
  uint64_t v118 = a5;
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v117 = (char *)&v116 - v8;
  uint64_t v129 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v9 = MEMORY[0x1F4188790](v129);
  uint64_t v135 = (uint64_t)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v12 = (char *)&v116 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v13 - 8);
  *(void *)&long long v140 = (char *)&v116 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C4496678();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unint64_t v18 = (uint64_t *)((char *)&v116 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = *a2;
  unint64_t v124 = a2[1];
  uint64_t v125 = v19;
  uint64_t v121 = *(void *)(a4 + 16);
  sub_1C3F75BA4((uint64_t)v18);
  type metadata accessor for ReplicaState();
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v20 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  uint64_t v22 = type metadata accessor for Replica();
  uint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  v23(v21, 1, 1, v22);
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v16 + 32))(v20 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v18, v15);
  *(void *)(v20 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
  *(void *)(v20 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
  uint64_t v24 = v140;
  v23(v140, 1, 1, v22);
  swift_beginAccess();
  sub_1C3F6722C(v24, v21);
  swift_endAccess();
  uint64_t v120 = sub_1C3F74BE8(v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBBF48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C449B490;
  unint64_t v27 = v124;
  uint64_t v26 = v125;
  *(void *)(inited + 32) = v125;
  *(void *)(inited + 40) = v27;
  sub_1C3F7E324(v26, v27);
  uint64_t v28 = sub_1C411EDFC(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v150 = v28;
  uint64_t v29 = MEMORY[0x1E4FBC860];
  uint64_t v149 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v30 = type metadata accessor for RetainVisitor();
  uint64_t v31 = swift_allocObject();
  unint64_t v32 = sub_1C3F7E4A4(v29);
  unint64_t v33 = sub_1C3F7E37C(v29);
  *(void *)(v31 + 16) = v32;
  *(void *)(v31 + 24) = v33;
  uint64_t v147 = v30;
  uint64_t v148 = &off_1F1F982A0;
  uint64_t v145 = (void *)v31;
  uint64_t v34 = v121;
  unint64_t v35 = *(void (**)(void **, uint64_t, uint64_t))(v121 + 48);
  uint64_t v119 = v31;
  swift_retain();
  v35(&v145, v122, v34);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v145);
  swift_beginAccess();
  uint64_t v128 = v31 + 16;
  uint64_t v36 = swift_bridgeObjectRetain();
  sub_1C4160070(v36);
  uint64_t v130 = v123 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  uint64_t v37 = v149;
  if (!v149[2]) {
    goto LABEL_16;
  }
  while (1)
  {
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v38 = v37[2];
      if (!v38) {
        break;
      }
      goto LABEL_8;
    }
    uint64_t v37 = sub_1C4232840(v37);
    uint64_t v38 = v37[2];
    if (!v38) {
      break;
    }
LABEL_8:
    uint64_t v39 = v38 - 1;
    unint64_t v40 = &v37[2 * v39];
    uint64_t v42 = v40[4];
    unint64_t v41 = v40[5];
    void v37[2] = v39;
    uint64_t v149 = v37;
    sub_1C3F7E324(v42, v41);
    char v43 = sub_1C3F81BF8((uint64_t *)&v145, v42, v41);
    sub_1C3F7E2CC((uint64_t)v145, v146);
    if ((v43 & 1) == 0) {
      goto LABEL_5;
    }
    sub_1C3F8F450(v130, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v44 = *(void *)&v12[*(int *)(v129 + 20)];
    if (*(void *)(v44 + 16))
    {
      sub_1C3F7E324(v42, v41);
      uint64_t v45 = sub_1C3F850CC(v42, v41);
      if ((v46 & 1) == 0)
      {
        sub_1C3F7E2CC(v42, v41);
        goto LABEL_4;
      }
      uint64_t v47 = (void *)(*(void *)(v44 + 56) + 48 * v45);
      unint64_t v18 = (uint64_t *)v47[2];
      uint64_t v48 = v47[4];
      uint64_t v49 = v47[5];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v42, v41);
      sub_1C3F8F5D4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C4160070(v48);
      swift_beginAccess();
      sub_1C3F7EDE8(v48, v49);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C3F7E2CC(v42, v41);
      uint64_t v37 = v149;
      if (!v149[2]) {
        goto LABEL_15;
      }
    }
    else
    {
LABEL_4:
      sub_1C3F8F5D4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
LABEL_5:
      sub_1C3F7E2CC(v42, v41);
      if (!v37[2]) {
        goto LABEL_15;
      }
    }
  }
  __break(1u);
LABEL_15:
  uint64_t v28 = v150;
LABEL_16:
  uint64_t v50 = *(void *)(v28 + 56);
  uint64_t v126 = v28 + 56;
  uint64_t v51 = 1 << *(unsigned char *)(v28 + 32);
  uint64_t v52 = -1;
  if (v51 < 64) {
    uint64_t v52 = ~(-1 << v51);
  }
  unint64_t v53 = v52 & v50;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  int64_t v54 = 0;
  int64_t v127 = (unint64_t)(v51 + 63) >> 6;
  uint64_t v136 = (void *)MEMORY[0x1E4FBC868];
  while (2)
  {
    if (v53)
    {
      unint64_t v58 = __clz(__rbit64(v53));
      uint64_t v59 = (v53 - 1) & v53;
      unint64_t v60 = v58 | (v54 << 6);
      goto LABEL_37;
    }
    int64_t v61 = v54 + 1;
    if (__OFADD__(v54, 1)) {
      goto LABEL_62;
    }
    if (v61 < v127)
    {
      unint64_t v62 = *(void *)(v126 + 8 * v61);
      ++v54;
      if (!v62)
      {
        int64_t v54 = v61 + 1;
        if (v61 + 1 >= v127) {
          break;
        }
        unint64_t v62 = *(void *)(v126 + 8 * v54);
        if (!v62)
        {
          int64_t v54 = v61 + 2;
          if (v61 + 2 >= v127) {
            break;
          }
          unint64_t v62 = *(void *)(v126 + 8 * v54);
          if (!v62)
          {
            int64_t v63 = v61 + 3;
            if (v63 >= v127) {
              break;
            }
            unint64_t v62 = *(void *)(v126 + 8 * v63);
            if (!v62)
            {
              while (1)
              {
                int64_t v54 = v63 + 1;
                if (__OFADD__(v63, 1)) {
                  break;
                }
                if (v54 >= v127) {
                  goto LABEL_54;
                }
                unint64_t v62 = *(void *)(v126 + 8 * v54);
                ++v63;
                if (v62) {
                  goto LABEL_36;
                }
              }
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
            int64_t v54 = v63;
          }
        }
      }
LABEL_36:
      uint64_t v59 = (v62 - 1) & v62;
      unint64_t v60 = __clz(__rbit64(v62)) + (v54 << 6);
LABEL_37:
      uint64_t v64 = (uint64_t *)(*(void *)(v28 + 48) + 16 * v60);
      uint64_t v65 = *v64;
      unint64_t v18 = (uint64_t *)v64[1];
      uint64_t v66 = v135;
      sub_1C3F8F450(v130, v135, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v67 = *(void *)(v66 + *(int *)(v129 + 20));
      uint64_t v68 = *(void *)(v67 + 16);
      sub_1C3F7E324(v65, (unint64_t)v18);
      if (!v68) {
        goto LABEL_67;
      }
      sub_1C3F7E324(v65, (unint64_t)v18);
      sub_1C3F7E324(v65, (unint64_t)v18);
      uint64_t v69 = sub_1C3F850CC(v65, (unint64_t)v18);
      if ((v70 & 1) == 0) {
        goto LABEL_66;
      }
      uint64_t v71 = *(void *)(v67 + 56) + 48 * v69;
      uint64_t v72 = *(void *)v71;
      long long v73 = *(_OWORD *)(v71 + 16);
      long long v140 = *(_OWORD *)(v71 + 32);
      long long v141 = v73;
      swift_retain();
      uint64_t v74 = v141;
      swift_bridgeObjectRetain();
      uint64_t v75 = *((void *)&v141 + 1);
      swift_bridgeObjectRetain();
      uint64_t v138 = v140;
      swift_bridgeObjectRetain();
      uint64_t v137 = *((void *)&v140 + 1);
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v65, (unint64_t)v18);
      sub_1C3F7E2CC(v65, (unint64_t)v18);
      sub_1C3F8F5D4(v135, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v76 = *(void *)v128;
      uint64_t v77 = *(void *)(*(void *)v128 + 16);
      unint64_t v131 = v59;
      int64_t v132 = v54;
      uint64_t v134 = v72;
      uint64_t v139 = v75;
      if (v77)
      {
        sub_1C3F7E324(v65, (unint64_t)v18);
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v78 = sub_1C3F850CC(v65, (unint64_t)v18);
        if (v79)
        {
          uint64_t v133 = *(void *)(*(void *)(v76 + 56) + 8 * v78);
          swift_bridgeObjectRelease();
          sub_1C3F7E2CC(v65, (unint64_t)v18);
LABEL_45:
          uint64_t v80 = v74;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v81 = MEMORY[0x1E4FBC860];
          sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
          sub_1C3F7E37C(v81);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          sub_1C3F7E324(v65, (unint64_t)v18);
          uint64_t v51 = (uint64_t)v136;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v145 = (void *)v51;
          unint64_t v84 = sub_1C3F850CC(v65, (unint64_t)v18);
          uint64_t v85 = *(void *)(v51 + 16);
          BOOL v86 = (v83 & 1) == 0;
          uint64_t v87 = v85 + v86;
          if (__OFADD__(v85, v86))
          {
            __break(1u);
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
            goto LABEL_63;
          }
          char v88 = v83;
          if (*(void *)(v51 + 24) >= v87)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_1C3F85144();
            }
          }
          else
          {
            sub_1C3F77ABC(v87, isUniquelyReferenced_nonNull_native);
            uint64_t v89 = sub_1C3F850CC(v65, (unint64_t)v18);
            if ((v88 & 1) != (v90 & 1)) {
              goto LABEL_68;
            }
            unint64_t v84 = v89;
          }
          uint64_t v91 = v28;
          uint64_t v92 = v145;
          uint64_t v136 = v145;
          if (v88)
          {
            uint64_t v55 = (uint64_t *)(v145[7] + 48 * v84);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_release();
            uint64_t v56 = v133;
            uint64_t v51 = v134;
            uint64_t *v55 = v134;
            v55[1] = v56;
            v55[2] = v80;
            uint64_t v57 = v138;
            v55[3] = v139;
            v55[4] = v57;
            v55[5] = v137;
          }
          else
          {
            v145[(v84 >> 6) + 8] |= 1 << v84;
            uint64_t v93 = (uint64_t *)(v92[6] + 16 * v84);
            *uint64_t v93 = v65;
            v93[1] = (uint64_t)v18;
            uint64_t v94 = v92[7] + 48 * v84;
            uint64_t v95 = v133;
            uint64_t v51 = v134;
            *(void *)uint64_t v94 = v134;
            *(void *)(v94 + 8) = v95;
            long long v96 = v140;
            *(_OWORD *)(v94 + 16) = v141;
            *(_OWORD *)(v94 + 32) = v96;
            uint64_t v97 = v92[2];
            BOOL v98 = __OFADD__(v97, 1);
            uint64_t v99 = v97 + 1;
            if (v98) {
              goto LABEL_61;
            }
            v92[2] = v99;
            sub_1C3F7E324(v65, (unint64_t)v18);
          }
          swift_bridgeObjectRelease();
          sub_1C3F7E2CC(v65, (unint64_t)v18);
          sub_1C3F7E2CC(v65, (unint64_t)v18);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v28 = v91;
          unint64_t v53 = v131;
          int64_t v54 = v132;
          continue;
        }
        swift_bridgeObjectRelease();
        sub_1C3F7E2CC(v65, (unint64_t)v18);
      }
      else
      {
        swift_retain();
      }
      uint64_t v133 = 0;
      goto LABEL_45;
    }
    break;
  }
LABEL_54:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v18 = &OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
  unint64_t v100 = (uint64_t *)(v123 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v101 = v100[1];
  v144[0] = *v100;
  v144[1] = v101;
  uint64_t v102 = v120;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F775BC((uint64_t)v136, v144);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v103 = *(void *)(v119 + 24);
  uint64_t v104 = (void *)(v102 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets);
  swift_beginAccess();
  void *v104 = v103;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v105 = *v100;
  uint64_t v106 = v100[1];
  uint64_t v51 = v102 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
  swift_beginAccess();
  *(void *)uint64_t v51 = v105;
  *(void *)(v51 + 8) = v106;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_1EBBC10F0 == -1) {
    goto LABEL_55;
  }
LABEL_64:
  swift_once();
LABEL_55:
  unint64_t v107 = *(void *)(v51 + 8);
  uint64_t v145 = (void *)MEMORY[0x1E4FBC868];
  unint64_t v146 = v107;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C3F73AF0((uint64_t)&v145);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  unint64_t v108 = v124;
  uint64_t v65 = v125;
  uint64_t v142 = v125;
  unint64_t v143 = v124;
  sub_1C3F7E324(v125, v124);
  uint64_t v110 = sub_1C3F84D7C(&v145, &v142);
  if (!*(void *)(v109 + 16))
  {
    ((void (*)(void **, void))v110)(&v145, 0);
    sub_1C3F7E2CC(v142, v143);
    swift_endAccess();
    goto LABEL_59;
  }
  uint64_t v111 = *(void *)(v109 + 8);
  BOOL v98 = __OFADD__(v111, 1);
  uint64_t v112 = v111 + 1;
  if (!v98)
  {
    *(void *)(v109 + 8) = v112;
    ((void (*)(void **, void))v110)(&v145, 0);
    swift_endAccess();
    sub_1C3F7E2CC(v142, v143);
LABEL_59:
    uint64_t v145 = (void *)v65;
    unint64_t v146 = v108;
    uint64_t v113 = v122;
    uint64_t v114 = (uint64_t)v117;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v122 - 8) + 56))(v117, 1, 1, v122);
    sub_1C3F7E324(v65, v108);
    sub_1C443EFBC((uint64_t *)&v145, v114, v120, v113, v118);
    return swift_release();
  }
  __break(1u);
LABEL_66:
  sub_1C3F7E2CC(v65, (unint64_t)v18);
  sub_1C3F7E2CC(v65, (unint64_t)v18);
LABEL_67:
  sub_1C3F8F5D4(v135, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  __break(1u);
LABEL_68:
  uint64_t result = sub_1C4498558();
  __break(1u);
  return result;
}

uint64_t sub_1C4052514(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v86[11] = *MEMORY[0x1E4F143B8];
  uint64_t v70 = sub_1C4496E48();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v68 = (char *)v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = sub_1C4496E98();
  uint64_t v71 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  long long v73 = (char *)v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v10 = MEMORY[0x1F4188790](v75);
  uint64_t v72 = (char *)v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v67 - v12;
  uint64_t v15 = *a2;
  unint64_t v14 = a2[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBBF48);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C449B490;
  *(void *)(inited + 32) = v15;
  *(void *)(inited + 40) = v14;
  sub_1C3F7E324(v15, v14);
  uint64_t v17 = sub_1C411EDFC(inited);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v84 = v17;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  char v83 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v19 = type metadata accessor for RetainVisitor();
  uint64_t v20 = swift_allocObject();
  unint64_t v21 = sub_1C3F7E4A4(v18);
  unint64_t v22 = sub_1C3F7E37C(v18);
  *(void *)(v20 + 16) = v21;
  *(void *)(v20 + 24) = v22;
  v86[3] = v19;
  v86[4] = &off_1F1F982A0;
  v86[0] = v20;
  uint64_t v23 = *(void *)(a4 + 16);
  uint64_t v24 = *(void (**)(void *, uint64_t, uint64_t))(v23 + 48);
  v67[1] = v20;
  swift_retain();
  v24(v86, a3, v23);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v86);
  swift_beginAccess();
  uint64_t v25 = swift_bridgeObjectRetain();
  sub_1C4160070(v25);
  uint64_t v76 = v4 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  uint64_t v26 = v83;
  if (!v83[2]) {
    goto LABEL_16;
  }
  while (1)
  {
    if (swift_isUniquelyReferenced_nonNull_native())
    {
      uint64_t v27 = v26[2];
      if (!v27) {
        break;
      }
      goto LABEL_8;
    }
    uint64_t v26 = sub_1C4232840(v26);
    uint64_t v27 = v26[2];
    if (!v27) {
      break;
    }
LABEL_8:
    uint64_t v28 = v27 - 1;
    uint64_t v29 = &v26[2 * v28];
    uint64_t v31 = v29[4];
    unint64_t v30 = v29[5];
    _OWORD v26[2] = v28;
    char v83 = v26;
    sub_1C3F7E324(v31, v30);
    char v32 = sub_1C3F81BF8(v85, v31, v30);
    sub_1C3F7E2CC(v85[0], v85[1]);
    if ((v32 & 1) == 0) {
      goto LABEL_5;
    }
    sub_1C3F8F450(v76, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v33 = *(void *)&v13[*(int *)(v75 + 20)];
    if (*(void *)(v33 + 16))
    {
      sub_1C3F7E324(v31, v30);
      uint64_t v34 = sub_1C3F850CC(v31, v30);
      if ((v35 & 1) == 0)
      {
        sub_1C3F7E2CC(v31, v30);
        goto LABEL_4;
      }
      uint64_t v36 = *(void *)(v33 + 56) + 48 * v34;
      uint64_t v37 = *(void *)(v36 + 32);
      uint64_t v38 = *(void *)(v36 + 40);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v31, v30);
      sub_1C3F8F5D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C4160070(v37);
      swift_beginAccess();
      sub_1C3F7EDE8(v37, v38);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C3F7E2CC(v31, v30);
      uint64_t v26 = v83;
      if (!v83[2]) {
        goto LABEL_15;
      }
    }
    else
    {
LABEL_4:
      sub_1C3F8F5D4((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
LABEL_5:
      sub_1C3F7E2CC(v31, v30);
      if (!v26[2]) {
        goto LABEL_15;
      }
    }
  }
  __break(1u);
LABEL_15:
  uint64_t v17 = v84;
LABEL_16:
  uint64_t v39 = (uint64_t)v73;
  sub_1C4496E88();
  swift_bridgeObjectRetain_n();
  unint64_t v40 = sub_1C411D8F0(v17);
  swift_bridgeObjectRelease();
  v85[0] = (uint64_t)v40;
  sub_1C4078520(v85);
  uint64_t v41 = (uint64_t)v72;
  swift_bridgeObjectRelease();
  uint64_t v42 = v85[0];
  uint64_t v43 = *(void *)(v85[0] + 16);
  if (v43)
  {
    swift_beginAccess();
    v67[0] = v42;
    uint64_t v44 = (unint64_t *)(v42 + 40);
    while (1)
    {
      uint64_t v81 = v43;
      uint64_t v46 = *(v44 - 1);
      unint64_t v45 = *v44;
      sub_1C3F8F450(v76, v41, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v47 = *(void *)(v41 + *(int *)(v75 + 20));
      uint64_t v48 = *(void *)(v47 + 16);
      sub_1C3F7E324(v46, v45);
      if (!v48) {
        goto LABEL_40;
      }
      uint64_t v49 = v41;
      sub_1C3F7E324(v46, v45);
      sub_1C3F7E324(v46, v45);
      uint64_t v50 = sub_1C3F850CC(v46, v45);
      if ((v51 & 1) == 0) {
        goto LABEL_39;
      }
      uint64_t v78 = v44 + 2;
      uint64_t v52 = (uint64_t *)(*(void *)(v47 + 56) + 48 * v50);
      uint64_t v53 = *v52;
      uint64_t v54 = v52[2];
      uint64_t v55 = v52[3];
      uint64_t v56 = v52[4];
      uint64_t v57 = v52[5];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v79 = v56;
      swift_bridgeObjectRetain();
      uint64_t v77 = v57;
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v46, v45);
      sub_1C3F7E2CC(v46, v45);
      uint64_t v41 = v49;
      sub_1C3F8F5D4(v49, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v80 = v53;
      switch(v45 >> 62)
      {
        case 1uLL:
          if (v46 >> 32 < (int)v46)
          {
            __break(1u);
LABEL_36:
            __break(1u);
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
LABEL_39:
            sub_1C3F7E2CC(v46, v45);
            sub_1C3F7E2CC(v46, v45);
            uint64_t v41 = v49;
LABEL_40:
            sub_1C3F8F5D4(v41, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
            __break(1u);
          }
          swift_retain();
          if (sub_1C4496298() && __OFSUB__((int)v46, sub_1C44962C8())) {
            goto LABEL_38;
          }
          sub_1C44962B8();
          sub_1C3FA180C(&qword_1EA39CB80, MEMORY[0x1E4F25170]);
          uint64_t v39 = (uint64_t)v73;
          sub_1C4496E18();
LABEL_33:
          sub_1C3F7E2CC(v46, v45);
          uint64_t v41 = (uint64_t)v72;
LABEL_20:
          uint64_t v44 = v78;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C4114778(v39, v55);
          sub_1C4114778(v39, v54);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1C3F7E2CC(v46, v45);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v43 = v81 - 1;
          if (v81 == 1) {
            goto LABEL_34;
          }
          break;
        case 2uLL:
          uint64_t v58 = *(void *)(v46 + 16);
          uint64_t v49 = *(void *)(v46 + 24);
          sub_1C3F7E324(v46, v45);
          swift_retain();
          swift_retain();
          if (sub_1C4496298() && __OFSUB__(v58, sub_1C44962C8())) {
            goto LABEL_37;
          }
          if (__OFSUB__(v49, v58)) {
            goto LABEL_36;
          }
          sub_1C44962B8();
          sub_1C3FA180C(&qword_1EA39CB80, MEMORY[0x1E4F25170]);
          uint64_t v39 = (uint64_t)v73;
          sub_1C4496E18();
          swift_release();
          swift_release();
          goto LABEL_33;
        case 3uLL:
          sub_1C3FA180C(&qword_1EA39CB80, MEMORY[0x1E4F25170]);
          memset(v82, 0, 14);
          goto LABEL_19;
        default:
          v82[0] = v46;
          LOWORD(v82[1]) = v45;
          BYTE2(v82[1]) = BYTE2(v45);
          BYTE3(v82[1]) = BYTE3(v45);
          BYTE4(v82[1]) = BYTE4(v45);
          BYTE5(v82[1]) = BYTE5(v45);
          sub_1C3FA180C(&qword_1EA39CB80, MEMORY[0x1E4F25170]);
LABEL_19:
          sub_1C4496E18();
          sub_1C3F7E2CC(v46, v45);
          sub_1C3F7E2CC(v46, v45);
          goto LABEL_20;
      }
    }
  }
LABEL_34:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v59 = v68;
  sub_1C4496E78();
  sub_1C3FA180C(&qword_1EBBBB280, MEMORY[0x1E4F24F80]);
  uint64_t v60 = v70;
  uint64_t v61 = sub_1C4496E58();
  uint64_t v63 = v62;
  (*(void (**)(char *, uint64_t))(v69 + 8))(v59, v60);
  uint64_t v64 = sub_1C4233684(v61, v63);
  swift_bridgeObjectRelease();
  uint64_t v65 = sub_1C3F5E0D0(v64);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v39, v74);
  return v65;
}

uint64_t sub_1C405315C(uint64_t a1)
{
  if (sub_1C405342C(v1))
  {
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    swift_retain();
    sub_1C4497A58();
    swift_release();
    unint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
    swift_beginAccess();
    uint64_t v4 = *v3;
    uint64_t v5 = v3[1];
    uint64_t v19 = *v3;
    uint64_t v6 = (uint64_t *)(a1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
    swift_beginAccess();
    uint64_t v17 = *v6;
    uint64_t v18 = v6[1];
    uint64_t v7 = *(void *)(v18 + 16);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v7) {
      sub_1C3F8D910(v20, v21, v22);
    }
    uint64_t v8 = *(void *)(v5 + 16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8)
    {
      sub_1C3F8D910(v20, v21, v22);
      swift_bridgeObjectRelease();
      uint64_t v4 = v19;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    if (sub_1C4112134(v5, v18)) {
      char v15 = 1;
    }
    else {
      char v15 = sub_1C4112134(v4, v17);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  uint64_t v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];
  uint64_t v12 = (uint64_t *)(a1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v13 = *v12;
  uint64_t v14 = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((sub_1C4112134(v11, v14) & 1) == 0)
  {
    char v15 = sub_1C4112134(v10, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_16:
    swift_bridgeObjectRelease();
    return v15 & 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v15 = 1;
  return v15 & 1;
}

uint64_t sub_1C405342C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
  swift_beginAccess();
  uint64_t v4 = *(void *)(*(void *)(v3 + 8) + 16);
  if (v4)
  {
    uint64_t v5 = a1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
    swift_beginAccess();
    if (!*(void *)(*(void *)(v5 + 8) + 16)
      && *(void *)(v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_renameGeneration) < *(void *)(a1
                                                                                               + OBJC_IVAR____TtC9Coherence10CapsuleRef_renameGeneration))
    {
      return 1;
    }
  }
  uint64_t v7 = a1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
  swift_beginAccess();
  if (!*(void *)(*(void *)(v7 + 8) + 16)) {
    return 0;
  }
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_renameGeneration);
  uint64_t v9 = *(void *)(a1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_renameGeneration);
  if (v4) {
    return v8 != v9;
  }
  else {
    return v9 < v8;
  }
}

uint64_t sub_1C405353C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  void (*v38)(long long *__return_ptr, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(long long *__return_ptr, uint64_t);
  uint64_t v67;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t result;
  void *v82;
  uint64_t v83;
  void *v84;
  long long v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _OWORD v102[3];
  uint64_t v103;
  long long v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  long long v112;
  long long v113;
  long long v114;
  uint64_t v115;
  uint64_t v116;
  char v117;
  uint64_t v118;
  uint64_t v119;

  uint64_t v84 = a2;
  uint64_t v4 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  BOOL v98 = (uint64_t)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v83 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v83 - v10;
  uint64_t v119 = MEMORY[0x1E4FBC868];
  uint64_t v87 = v2;
  uint64_t v12 = v2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  char v88 = v12;
  sub_1C3F8F450(v12, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v13 = (uint64_t *)(a1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  uint64_t v16 = *(void *)&v11[*(int *)(v4 + 20)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C40615F4(v17);
  BOOL v86 = v11;
  uint64_t v19 = (uint64_t)v11;
  uint64_t v20 = (uint64_t)v9;
  sub_1C3F8F5D4(v19, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v110 = v16;
  uint64_t v111 = v18;
  uint64_t v85 = xmmword_1C449E3E0;
  uint64_t v112 = xmmword_1C449E3E0;
  uint64_t v113 = 0u;
  uint64_t v114 = 0u;
  uint64_t v115 = v15;
  uint64_t v116 = v14;
  uint64_t v117 = 0;
  uint64_t v118 = 0;
  char v83 = a1;
  uint64_t v99 = a1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C423170C((uint64_t *)&v104);
  uint64_t v21 = v107;
  uint64_t v97 = v4;
  if (!v107)
  {
LABEL_14:
    uint64_t v42 = *((void *)&v112 + 1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C407D5A0(v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)v86;
    sub_1C3F8F450(v99, (uint64_t)v86, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v44 = (uint64_t *)(v87 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
    swift_beginAccess();
    uint64_t v46 = *v44;
    unint64_t v45 = v44[1];
    uint64_t v47 = *(void *)(v43 + *(int *)(v4 + 20));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v48 = swift_bridgeObjectRetain();
    uint64_t v49 = sub_1C40615F4(v48);
    sub_1C3F8F5D4(v43, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v110 = v47;
    uint64_t v111 = v49;
    uint64_t v112 = v85;
    uint64_t v113 = 0u;
    uint64_t v114 = 0u;
    uint64_t v115 = v46;
    uint64_t v116 = v45;
    uint64_t v117 = 0;
    uint64_t v118 = 0;
    sub_1C423170C((uint64_t *)&v104);
    uint64_t v50 = v107;
    char v51 = v98;
    uint64_t v52 = v88;
    if (!v107)
    {
LABEL_27:
      uint64_t v69 = *((void *)&v112 + 1);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C407D5A0(v69);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v70 = swift_bridgeObjectRetain();
      uint64_t v71 = sub_1C3F7829C(v70);
      uint64_t v72 = v83;
      long long v73 = sub_1C4053FC0(v71, v87);
      uint64_t v75 = v74;
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v76 = sub_1C407B220(v73, v72);
      swift_release();
      if (*(void *)(v76 + 16))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB78);
        uint64_t v77 = sub_1C4497FD8();
      }
      else
      {
        uint64_t v77 = MEMORY[0x1E4FBC868];
      }
      uint64_t v110 = v77;
      uint64_t v78 = (void *)swift_bridgeObjectRetain();
      sub_1C406B7BC(v78, 1, &v110);
      swift_bridgeObjectRelease();
      uint64_t v79 = v110;
      uint64_t v80 = v119;
      if (*(void *)(v119 + 16))
      {
        uint64_t result = swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v80 = 0;
        uint64_t v79 = 0;
        uint64_t v75 = 0;
      }
      uint64_t v82 = v84;
      *uint64_t v84 = v80;
      v82[1] = v79;
      v82[2] = v75;
      return result;
    }
    uint64_t v53 = *((void *)&v104 + 1);
    uint64_t v54 = v104;
    uint64_t v55 = v105;
    uint64_t v56 = v108;
    uint64_t v57 = v109;
    while (1)
    {
      uint64_t v99 = v57;
      unint64_t v100 = v56;
      sub_1C3F8F450(v52, v51, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v58 = *(void *)(v51 + *(int *)(v4 + 20));
      if (!*(void *)(v58 + 16)) {
        goto LABEL_17;
      }
      sub_1C3F7E324(v54, v53);
      uint64_t v59 = sub_1C3F850CC(v54, v53);
      if ((v60 & 1) == 0) {
        break;
      }
      long long v96 = v50;
      uint64_t v61 = (uint64_t *)(*(void *)(v58 + 56) + 48 * v59);
      uint64_t v62 = *v61;
      uint64_t v63 = v61[2];
      uint64_t v64 = v61[3];
      uint64_t v65 = v61[4];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v95 = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v54, v53);
      sub_1C3F8F5D4(v98, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      if (!v62) {
        goto LABEL_37;
      }
      uint64_t v93 = v64;
      uint64_t v94 = v63;
      if (!v55) {
        goto LABEL_36;
      }
      uint64_t v66 = *(void (**)(long long *__return_ptr, uint64_t))(*(void *)v62 + 128);
      swift_retain();
      swift_retain();
      v66(&v104, v55);
      swift_release();
      swift_release();
      if (v106)
      {
        sub_1C3FF2864(&v104, v102);
        sub_1C3F7E324(v54, v53);
        uint64_t v67 = v119;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v101 = v67;
        sub_1C4421748(v102, v54, v53, isUniquelyReferenced_nonNull_native);
        uint64_t v119 = v101;
        swift_bridgeObjectRelease();
        sub_1C3F7E2CC(v54, v53);
      }
      else
      {
        sub_1C3F7E324(v54, v53);
        sub_1C3F962E0((uint64_t)&v104, (uint64_t *)&unk_1EA39AE20);
        sub_1C4116FDC(v54, v53, v102);
        sub_1C3F7E2CC(v54, v53);
        sub_1C3F962E0((uint64_t)v102, (uint64_t *)&unk_1EA39AE20);
      }
      sub_1C3F7E2CC(v54, v53);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v4 = v97;
      char v51 = v98;
      uint64_t v52 = v88;
LABEL_18:
      sub_1C423170C((uint64_t *)&v104);
      uint64_t v53 = *((void *)&v104 + 1);
      uint64_t v54 = v104;
      uint64_t v55 = v105;
      uint64_t v50 = v107;
      uint64_t v56 = v108;
      uint64_t v57 = v109;
      if (!v107) {
        goto LABEL_27;
      }
    }
    sub_1C3F7E2CC(v54, v53);
LABEL_17:
    sub_1C3F8F5D4(v51, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    sub_1C3F7E2CC(v54, v53);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_18;
  }
  unint64_t v22 = *((void *)&v104 + 1);
  uint64_t v23 = v104;
  uint64_t v24 = v105;
  uint64_t v25 = v108;
  uint64_t v26 = v109;
  long long v96 = v20;
  while (1)
  {
    unint64_t v100 = v25;
    sub_1C3F8F450(v99, v20, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v27 = *(void *)(v20 + *(int *)(v4 + 20));
    if (!*(void *)(v27 + 16)) {
      goto LABEL_4;
    }
    sub_1C3F7E324(v23, v22);
    uint64_t v28 = sub_1C3F850CC(v23, v22);
    if (v29) {
      break;
    }
    sub_1C3F7E2CC(v23, v22);
LABEL_4:
    sub_1C3F8F5D4(v20, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    sub_1C3F7E2CC(v23, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
LABEL_5:
    sub_1C423170C((uint64_t *)&v104);
    unint64_t v22 = *((void *)&v104 + 1);
    uint64_t v23 = v104;
    uint64_t v24 = v105;
    uint64_t v21 = v107;
    uint64_t v25 = v108;
    uint64_t v26 = v109;
    if (!v107) {
      goto LABEL_14;
    }
  }
  uint64_t v94 = v21;
  uint64_t v95 = v24;
  unint64_t v30 = (uint64_t *)(*(void *)(v27 + 56) + 48 * v28);
  uint64_t v31 = *v30;
  uint64_t v33 = v30[2];
  uint64_t v32 = v30[3];
  uint64_t v35 = v30[4];
  uint64_t v34 = v30[5];
  swift_retain();
  uint64_t v93 = v33;
  swift_bridgeObjectRetain();
  uint64_t v92 = v32;
  uint64_t v36 = v96;
  swift_bridgeObjectRetain();
  uint64_t v91 = v35;
  uint64_t v37 = v95;
  swift_bridgeObjectRetain();
  char v90 = v34;
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v23, v22);
  sub_1C3F8F5D4(v36, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  if (!v37) {
    goto LABEL_35;
  }
  uint64_t v89 = v26;
  if (v31)
  {
    uint64_t v38 = *(void (**)(long long *__return_ptr, uint64_t))(*(void *)v37 + 128);
    swift_retain();
    uint64_t v39 = swift_retain();
    v38(&v104, v39);
    swift_release();
    swift_release();
    if (v106)
    {
      sub_1C3FF2864(&v104, v102);
      sub_1C3F7E324(v23, v22);
      unint64_t v40 = v119;
      uint64_t v41 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v103 = v40;
      sub_1C4421748(v102, v23, v22, v41);
      uint64_t v119 = v103;
      swift_bridgeObjectRelease();
      sub_1C3F7E2CC(v23, v22);
    }
    else
    {
      sub_1C3F7E324(v23, v22);
      sub_1C3F962E0((uint64_t)&v104, (uint64_t *)&unk_1EA39AE20);
      sub_1C4116FDC(v23, v22, v102);
      sub_1C3F7E2CC(v23, v22);
      sub_1C3F962E0((uint64_t)v102, (uint64_t *)&unk_1EA39AE20);
    }
    sub_1C3F7E2CC(v23, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v20 = v96;
    uint64_t v4 = v97;
    goto LABEL_5;
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  uint64_t result = swift_unexpectedError();
  __break(1u);
  return result;
}

uint64_t sub_1C4053FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v95 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v6 = MEMORY[0x1F4188790](v95);
  uint64_t v101 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v89 = (char *)&v86 - v8;
  swift_retain();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C407C444(v9, a2);
  uint64_t v87 = v3;
  swift_release();
  uint64_t v109 = v10;
  uint64_t v107 = a1;
  uint64_t v108 = MEMORY[0x1E4FBC870];
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C411D8F0(v11);
  if (!v12[2])
  {
LABEL_72:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v109;
  }
  uint64_t v13 = v2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  uint64_t v94 = a2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  unint64_t v100 = (uint64_t *)(a2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets);
  uint64_t result = swift_beginAccess();
  unint64_t v15 = v12[2];
  uint64_t v16 = (uint64_t)v89;
  uint64_t v17 = v12;
  unint64_t v18 = 0;
  uint64_t v88 = v13;
  while (1)
  {
    if (v18 >= v15) {
      goto LABEL_75;
    }
    unint64_t v93 = v18;
    unint64_t v22 = &v17[2 * v18];
    uint64_t v23 = v22[4];
    unint64_t v24 = v22[5];
    sub_1C3F8F450(v13, v16, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v25 = *(void *)(v16 + *(int *)(v95 + 20));
    uint64_t v26 = *(void *)(v25 + 16);
    sub_1C3F7E324(v23, v24);
    if (v26)
    {
      uint64_t v27 = sub_1C3F850CC(v23, v24);
      if (v28) {
        break;
      }
    }
    sub_1C3F8F5D4(v16, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    unint64_t v19 = v93;
    uint64_t v20 = v23;
    unint64_t v21 = v24;
LABEL_4:
    unint64_t v18 = v19 + 1;
    uint64_t result = sub_1C3F7E2CC(v20, v21);
    unint64_t v15 = v17[2];
    if (v18 >= v15) {
      goto LABEL_72;
    }
  }
  unint64_t v90 = v24;
  uint64_t v91 = v23;
  uint64_t v92 = v17;
  uint64_t v29 = *(void *)(*(void *)(v25 + 56) + 48 * v27);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F8F5D4(v16, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v29)
  {
LABEL_71:
    uint64_t v16 = (uint64_t)v89;
    uint64_t v17 = v92;
    uint64_t v13 = v88;
    unint64_t v19 = v93;
    uint64_t v20 = v91;
    unint64_t v21 = v90;
    goto LABEL_4;
  }
  uint64_t v30 = type metadata accessor for RetainVisitor();
  uint64_t v31 = swift_allocObject();
  uint64_t v32 = MEMORY[0x1E4FBC860];
  unint64_t v33 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
  unint64_t v34 = sub_1C3F7E37C(v32);
  *(void *)(v31 + 16) = v33;
  *(void *)(v31 + 24) = v34;
  uint64_t v105 = v30;
  uint64_t v106 = &off_1F1F982A0;
  uint64_t v103 = v31;
  uint64_t v35 = *(void (**)(uint64_t *))(*(void *)v29 + 120);
  swift_retain();
  v35(&v103);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v103);
  swift_release();
  swift_beginAccess();
  uint64_t v36 = *(void *)(v31 + 16);
  uint64_t v37 = *(void *)(v31 + 24);
  swift_bridgeObjectRetain();
  uint64_t v102 = v37;
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v38 = *(void *)(v36 + 64);
  uint64_t v96 = v36 + 64;
  uint64_t v39 = 1 << *(unsigned char *)(v36 + 32);
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  else {
    uint64_t v40 = -1;
  }
  unint64_t v41 = v40 & v38;
  swift_bridgeObjectRetain();
  uint64_t result = swift_beginAccess();
  int64_t v42 = 0;
  int64_t v97 = (unint64_t)(v39 + 63) >> 6;
  while (2)
  {
    if (v41)
    {
      unint64_t v47 = __clz(__rbit64(v41));
      v41 &= v41 - 1;
      unint64_t v48 = v47 | (v42 << 6);
      goto LABEL_33;
    }
    int64_t v49 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    if (v49 >= v97) {
      goto LABEL_42;
    }
    unint64_t v50 = *(void *)(v96 + 8 * v49);
    ++v42;
    if (v50) {
      goto LABEL_32;
    }
    int64_t v42 = v49 + 1;
    if (v49 + 1 >= v97) {
      goto LABEL_42;
    }
    unint64_t v50 = *(void *)(v96 + 8 * v42);
    if (v50) {
      goto LABEL_32;
    }
    int64_t v42 = v49 + 2;
    if (v49 + 2 >= v97) {
      goto LABEL_42;
    }
    unint64_t v50 = *(void *)(v96 + 8 * v42);
    if (v50) {
      goto LABEL_32;
    }
    int64_t v42 = v49 + 3;
    if (v49 + 3 >= v97) {
      goto LABEL_42;
    }
    unint64_t v50 = *(void *)(v96 + 8 * v42);
    if (v50)
    {
LABEL_32:
      unint64_t v41 = (v50 - 1) & v50;
      unint64_t v48 = __clz(__rbit64(v50)) + (v42 << 6);
LABEL_33:
      uint64_t v52 = (uint64_t *)(*(void *)(v36 + 48) + 16 * v48);
      uint64_t v53 = *v52;
      unint64_t v54 = v52[1];
      sub_1C3F7E324(*v52, v54);
      sub_1C3F7E324(v53, v54);
      char v55 = sub_1C3F81BF8(&v103, v53, v54);
      sub_1C3F7E2CC(v103, v104);
      if (v55)
      {
        uint64_t v56 = v101;
        sub_1C3F8F450(v94, v101, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
        uint64_t v57 = *(void *)(v56 + *(int *)(v95 + 20));
        if (!*(void *)(v57 + 16))
        {
LABEL_37:
          sub_1C3F8F5D4(v101, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
          sub_1C3F84B88(0, 0, 0);
          sub_1C3F7E324(v53, v54);
          sub_1C3F81BF8(&v103, v53, v54);
          sub_1C3F7E2CC(v103, v104);
          sub_1C3F7E324(v53, v54);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v92 = sub_1C3FF12A8(0, v92[2] + 1, 1, v92);
          }
          unint64_t v61 = v92[2];
          unint64_t v60 = v92[3];
          if (v61 >= v60 >> 1) {
            uint64_t v92 = sub_1C3FF12A8((void *)(v60 > 1), v61 + 1, 1, v92);
          }
          uint64_t v62 = v92;
          v92[2] = v61 + 1;
          uint64_t v63 = &v62[2 * v61];
          v63[4] = v53;
          v63[5] = v54;
          goto LABEL_14;
        }
        sub_1C3F7E324(v53, v54);
        sub_1C3F7E324(v53, v54);
        uint64_t v58 = sub_1C3F850CC(v53, v54);
        if ((v59 & 1) == 0)
        {
          sub_1C3F7E2CC(v53, v54);
          sub_1C3F7E2CC(v53, v54);
          goto LABEL_37;
        }
        uint64_t v43 = (uint64_t *)(*(void *)(v57 + 56) + 48 * v58);
        uint64_t v44 = *v43;
        uint64_t v45 = v43[1];
        unint64_t v98 = v41;
        int64_t v99 = v42;
        uint64_t v46 = v43[2];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C3F7E2CC(v53, v54);
        sub_1C3F7E2CC(v53, v54);
        sub_1C3F8F5D4(v101, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
        unint64_t v41 = v98;
        int64_t v42 = v99;
        sub_1C3F84B88(v44, v45, v46);
      }
LABEL_14:
      uint64_t result = sub_1C3F7E2CC(v53, v54);
      continue;
    }
    break;
  }
  int64_t v51 = v49 + 4;
  if (v51 >= v97)
  {
LABEL_42:
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    int64_t v64 = 0;
    uint64_t v65 = v102 + 64;
    uint64_t v66 = 1 << *(unsigned char *)(v102 + 32);
    if (v66 < 64) {
      uint64_t v67 = ~(-1 << v66);
    }
    else {
      uint64_t v67 = -1;
    }
    unint64_t v68 = v67 & *(void *)(v102 + 64);
    for (i = (unint64_t)(v66 + 63) >> 6; v68; uint64_t result = sub_1C3F7E2CC(v78, v77))
    {
      while (1)
      {
        unint64_t v70 = __clz(__rbit64(v68));
        v68 &= v68 - 1;
        unint64_t v71 = v70 | (v64 << 6);
LABEL_65:
        uint64_t v75 = 16 * v71;
        uint64_t v76 = (uint64_t *)(*(void *)(v102 + 48) + v75);
        uint64_t v78 = *v76;
        unint64_t v77 = v76[1];
        uint64_t v79 = *(void *)(*(void *)(v102 + 56) + v75);
        uint64_t v80 = v100;
        swift_beginAccess();
        uint64_t v81 = *v80;
        uint64_t v82 = *(void *)(v81 + 16);
        sub_1C3F7E324(v78, v77);
        swift_retain();
        if (v82)
        {
          uint64_t v83 = sub_1C3FB98C0(v78, v77, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
          if (v84)
          {
            uint64_t v85 = *(void *)(*(void *)(v81 + 56) + 16 * v83);
            swift_retain();
            if (v85) {
              break;
            }
          }
        }
        swift_endAccess();
        swift_retain();
        sub_1C406DA54(&v103, v79);
        sub_1C3F7E2CC(v78, v77);
        swift_release();
        uint64_t result = swift_release();
        if (!v68) {
          goto LABEL_49;
        }
      }
      swift_endAccess();
      swift_release();
      swift_release();
    }
LABEL_49:
    int64_t v72 = v64 + 1;
    if (__OFADD__(v64, 1)) {
      goto LABEL_74;
    }
    if (v72 < i)
    {
      unint64_t v73 = *(void *)(v65 + 8 * v72);
      ++v64;
      if (v73) {
        goto LABEL_64;
      }
      int64_t v64 = v72 + 1;
      if (v72 + 1 < i)
      {
        unint64_t v73 = *(void *)(v65 + 8 * v64);
        if (v73) {
          goto LABEL_64;
        }
        int64_t v64 = v72 + 2;
        if (v72 + 2 < i)
        {
          unint64_t v73 = *(void *)(v65 + 8 * v64);
          if (v73) {
            goto LABEL_64;
          }
          int64_t v64 = v72 + 3;
          if (v72 + 3 < i)
          {
            unint64_t v73 = *(void *)(v65 + 8 * v64);
            if (v73) {
              goto LABEL_64;
            }
            int64_t v74 = v72 + 4;
            if (v74 < i)
            {
              unint64_t v73 = *(void *)(v65 + 8 * v74);
              if (!v73)
              {
                while (1)
                {
                  int64_t v64 = v74 + 1;
                  if (__OFADD__(v74, 1)) {
                    goto LABEL_77;
                  }
                  if (v64 >= i) {
                    goto LABEL_70;
                  }
                  unint64_t v73 = *(void *)(v65 + 8 * v64);
                  ++v74;
                  if (v73) {
                    goto LABEL_64;
                  }
                }
              }
              int64_t v64 = v74;
LABEL_64:
              unint64_t v68 = (v73 - 1) & v73;
              unint64_t v71 = __clz(__rbit64(v73)) + (v64 << 6);
              goto LABEL_65;
            }
          }
        }
      }
    }
LABEL_70:
    swift_release();
    goto LABEL_71;
  }
  unint64_t v50 = *(void *)(v96 + 8 * v51);
  if (v50)
  {
    int64_t v42 = v51;
    goto LABEL_32;
  }
  while (1)
  {
    int64_t v42 = v51 + 1;
    if (__OFADD__(v51, 1)) {
      break;
    }
    if (v42 >= v97) {
      goto LABEL_42;
    }
    unint64_t v50 = *(void *)(v96 + 8 * v42);
    ++v51;
    if (v50) {
      goto LABEL_32;
    }
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
  return result;
}

uint64_t sub_1C40549E4(char a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C4496678();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBBC10F0 != -1) {
    swift_once();
  }
  uint64_t v11 = (char *)v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
  swift_beginAccess();
  uint64_t v12 = *((void *)v11 + 1);
  v23[0] = MEMORY[0x1E4FBC868];
  v23[1] = v12;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1C3F73AF0((uint64_t)v23);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (a1)
  {
    uint64_t v13 = qword_1EBBC00D0;
    swift_retain();
    if (v13 != -1) {
      swift_once();
    }
    type metadata accessor for ReplicaState();
    sub_1C4497A58();
    swift_release();
    uint64_t v14 = v23[0];
  }
  else
  {
    uint64_t v15 = *(uint64_t *)((char *)v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_replicaState)
        + OBJC_IVAR____TtC9Coherence12ReplicaState_identity;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v15, v7);
    type metadata accessor for ReplicaState();
    uint64_t v14 = swift_allocObject();
    uint64_t v16 = v14 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
    uint64_t v17 = type metadata accessor for Replica();
    unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
    v22[1] = v3;
    v18(v16, 1, 1, v17);
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v14 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v10, v7);
    *(void *)(v14 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
    *(void *)(v14 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
    v18((uint64_t)v6, 1, 1, v17);
    swift_beginAccess();
    sub_1C3F6722C((uint64_t)v6, v16);
    swift_endAccess();
  }
  swift_allocObject();
  uint64_t v19 = swift_retain();
  uint64_t v20 = sub_1C3F73C60(v19, v14);
  swift_release();
  return v20;
}

uint64_t sub_1C4054DC4(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v9 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  v22[0] = v8;
  v22[1] = v7;
  uint64_t v10 = type metadata accessor for Ref();
  uint64_t WitnessTable = swift_getWitnessTable();
  Reference.identity.getter(v10, WitnessTable);
  uint64_t v12 = v20;
  unint64_t v13 = v21;
  uint64_t v14 = *(void *)&v6[*(int *)(v4 + 28)];
  if (!*(void *)(v14 + 16)) {
    goto LABEL_6;
  }
  sub_1C3F7E324(v20, v21);
  uint64_t v15 = sub_1C3F850CC(v12, v13);
  if ((v16 & 1) == 0)
  {
    sub_1C3F7E2CC(v12, v13);
LABEL_6:
    sub_1C3F7E2CC(v12, v13);
    uint64_t result = sub_1C3F8F5D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v17 = *(void *)(*(void *)(v14 + 56) + 48 * v15);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v12, v13);
  sub_1C3F7E2CC(v12, v13);
  sub_1C3F8F5D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v17)
  {
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)v17 + 88))(v22, result);
    swift_release();
    return swift_dynamicCast();
  }
LABEL_7:
  __break(1u);
  return result;
}

void (*sub_1C4055044(void *a1, uint64_t *a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x100uLL);
  *a1 = v8;
  v8[23] = a3;
  v8[24] = v4;
  uint64_t v9 = *(void *)(a3 - 8);
  v8[25] = v9;
  uint64_t v10 = malloc(*(void *)(v9 + 64));
  uint64_t v11 = *a2;
  uint64_t v12 = a2[1];
  v8[26] = v10;
  v8[27] = v11;
  v8[28] = v12;
  v8[19] = v11;
  v8[20] = v12;
  uint64_t v13 = type metadata accessor for Ref();
  v8[29] = v13;
  uint64_t WitnessTable = swift_getWitnessTable();
  v8[30] = WitnessTable;
  Reference.identity.getter(v13, WitnessTable);
  uint64_t v15 = v38;
  unint64_t v16 = v39;
  uint64_t v17 = v4 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  uint64_t v18 = *(int *)(type metadata accessor for PartiallyOrderedReferenceMap() + 20);
  sub_1C3F7E324(v38, v39);
  sub_1C3F7E324(v38, v39);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v37 = *(void *)(v17 + v18);
  uint64_t v20 = v37;
  *(void *)(v17 + v18) = 0x8000000000000000;
  sub_1C3F7E324(v15, v16);
  unint64_t v22 = sub_1C3F850CC(v15, v16);
  uint64_t v23 = *(void *)(v20 + 16);
  BOOL v24 = (v21 & 1) == 0;
  uint64_t v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
    __break(1u);
    goto LABEL_13;
  }
  LOBYTE(v4) = v21;
  if (*(void *)(v20 + 24) >= v25)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v21) {
        goto LABEL_8;
      }
      goto LABEL_14;
    }
LABEL_13:
    sub_1C3F85144();
    if (v4) {
      goto LABEL_8;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_1C3F77ABC(v25, isUniquelyReferenced_nonNull_native);
  uint64_t v26 = sub_1C3F850CC(v15, v16);
  if ((v4 & 1) != (v27 & 1))
  {
LABEL_16:
    uint64_t result = (void (*)(uint64_t **, char))sub_1C4498558();
    __break(1u);
    return result;
  }
  unint64_t v22 = v26;
  if ((v4 & 1) == 0) {
    goto LABEL_14;
  }
LABEL_8:
  char v28 = (long long *)(*(void *)(v37 + 56) + 48 * v22);
  long long v29 = v28[1];
  long long v34 = *v28;
  long long v35 = v29;
  long long v36 = v28[2];
  uint64_t v30 = v34;
  if (!(void)v34)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    *(void *)&long long v34 = (*(uint64_t (**)(void))(*(void *)v34 + 160))();
    swift_release();
    uint64_t v30 = v34;
  }
  uint64_t v31 = type metadata accessor for CRDTBox();
  v8[31] = v31;
  v8[3] = v31;
  void v8[4] = &off_1F1F9CE68;
  *uint64_t v8 = v30;
  swift_retain();
  sub_1C3F84C64((uint64_t *)&v34, 1, &v37, v22, v15, v16);
  sub_1C3F84B88(v34, *((uint64_t *)&v34 + 1), v35);
  sub_1C3F7E2CC(v15, v16);
  *(void *)(v17 + v18) = v37;
  sub_1C3F7E2CC(v15, v16);
  swift_endAccess();
  sub_1C3F7E2CC(v15, v16);
  uint64_t v32 = sub_1C3F7E2CC(v15, v16);
  (*(void (**)(uint64_t))(*(void *)v30 + 240))(v32);
  swift_dynamicCast();
  return sub_1C40553E4;
}

void sub_1C40553E4(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  if (a2)
  {
    uint64_t v3 = (void *)v2[26];
    (*(void (**)(void *, uint64_t))(v2[25] + 8))(v3, v2[23]);
  }
  else
  {
    uint64_t v5 = v2[28];
    uint64_t v4 = v2[29];
    uint64_t v3 = (void *)v2[26];
    uint64_t v6 = v2[27];
    uint64_t v7 = v2[25];
    uint64_t v10 = v2[30];
    uint64_t v8 = v2[23];
    __swift_project_boxed_opaque_existential_1(v2, v2[31]);
    v2[12] = v8;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v2 + 9);
    (*(void (**)(uint64_t *, void *, uint64_t))(v7 + 16))(boxed_opaque_existential_1, v3, v8);
    off_1F1F9CE78();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)(v2 + 9));
    v2[21] = v6;
    v2[22] = v5;
    Reference.identity.getter(v4, v10);
    swift_beginAccess();
    sub_1C3F81BF8(v11, v11[2], v11[3]);
    swift_endAccess();
    sub_1C3F7E2CC(v11[0], v11[1]);
    (*(void (**)(void *, uint64_t))(v7 + 8))(v3, v8);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  free(v3);
  free(v2);
}

uint64_t sub_1C405557C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v13 = v3 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v13, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  *(void *)&v27[0] = v12;
  *((void *)&v27[0] + 1) = v11;
  uint64_t v14 = type metadata accessor for WeakRef();
  uint64_t WitnessTable = swift_getWitnessTable();
  Reference.identity.getter(v14, WitnessTable);
  uint64_t v16 = v25;
  unint64_t v17 = v26;
  uint64_t v18 = *(void *)&v10[*(int *)(v8 + 28)];
  if (!*(void *)(v18 + 16)) {
    goto LABEL_6;
  }
  sub_1C3F7E324(v25, v26);
  uint64_t v19 = sub_1C3F850CC(v16, v17);
  if ((v20 & 1) == 0)
  {
    sub_1C3F7E2CC(v16, v17);
LABEL_6:
    sub_1C3F7E2CC(v16, v17);
    sub_1C3F8F5D4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    memset(v27, 0, sizeof(v27));
    goto LABEL_7;
  }
  uint64_t v21 = *(void *)(*(void *)(v18 + 56) + 48 * v19);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v16, v17);
  sub_1C3F7E2CC(v16, v17);
  sub_1C3F8F5D4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v21)
  {
    (*(void (**)(_OWORD *__return_ptr, uint64_t))(*(void *)v21 + 88))(v27, result);
    swift_release();
LABEL_7:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA39AE20);
    int v23 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v23 ^ 1u, 1, a2);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C4055840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v47 = a4;
  uint64_t v7 = sub_1C4497B38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v12 = *(void *)(a3 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v9);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v42 - v17;
  char v20 = *(uint64_t **)a2;
  unint64_t v19 = *(void *)(a2 + 8);
  uint64_t v21 = a1;
  uint64_t v22 = v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v21, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v11, 1, a3) == 1)
  {
    int v23 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v23(v21, v22);
    sub_1C3F7E2CC((uint64_t)v20, v19);
    return ((uint64_t (*)(char *, uint64_t))v23)(v11, v22);
  }
  uint64_t v43 = v22;
  uint64_t v45 = v21;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v18, v11, a3);
  uint64_t v42 = v12;
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  uint64_t v44 = v18;
  v25(v15, v18, a3);
  sub_1C3F6BC4C((uint64_t)v15, a3, &v48);
  unint64_t v26 = v48;
  unint64_t v48 = v20;
  unint64_t v49 = v19;
  uint64_t v27 = type metadata accessor for WeakRef();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = v27;
  uint64_t v29 = WitnessTable;
  Reference.identity.getter(v27, WitnessTable);
  uint64_t v30 = v53;
  unint64_t v31 = v54;
  swift_beginAccess();
  uint64_t v50 = v30;
  unint64_t v51 = v31;
  unint64_t v33 = sub_1C3F84D7C(&v48, &v50);
  uint64_t v34 = v32[2];
  uint64_t v46 = v26;
  if (v34)
  {
    long long v35 = v32;
    uint64_t result = *v32;
    if (!*v32)
    {
      __break(1u);
      return result;
    }
    BOOL v36 = v26 == (uint64_t *)result;
    uint64_t v37 = v42;
    uint64_t v38 = v29;
    uint64_t v39 = v47;
    if (!v36)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        *long long v35 = (*(uint64_t (**)(void))(*(void *)*v35 + 160))();
        swift_release();
      }
      (*(void (**)(uint64_t *))(*(void *)*v35 + 96))(v46);
    }
    ((void (*)(uint64_t **, void))v33)(&v48, 0);
    swift_endAccess();
    sub_1C3F7E2CC(v50, v51);
  }
  else
  {
    ((void (*)(uint64_t **, void))v33)(&v48, 0);
    sub_1C3F7E2CC(v50, v51);
    swift_endAccess();
    uint64_t v37 = v42;
    uint64_t v38 = v29;
    uint64_t v39 = v47;
  }
  unint64_t v48 = v20;
  unint64_t v49 = v19;
  Reference.identity.getter(v39, v38);
  sub_1C3F7E2CC((uint64_t)v20, v19);
  uint64_t v40 = v53;
  unint64_t v41 = v54;
  swift_beginAccess();
  sub_1C3F81BF8(v52, v40, v41);
  swift_endAccess();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v45, v43);
  sub_1C3F7E2CC(v52[0], v52[1]);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v44, a3);
}

uint64_t sub_1C4055CC4(uint64_t a1)
{
  type metadata accessor for TypedReference();
  uint64_t v2 = type metadata accessor for Capsule();
  Capsule<>.rootID.getter((uint64_t *)&v10);
  __n128 v9 = v10;
  sub_1C4139FD0(&v9);
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B0A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C449E3F0;
  *(void *)(inited + 32) = v4;
  v10.n128_u64[0] = inited;
  sub_1C4497418();
  unint64_t v6 = v10.n128_u64[0];
  swift_retain();
  uint64_t v7 = sub_1C411F03C(v6);
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + *(int *)(v2 + 40));
  if (result)
  {
    sub_1C4055DD4(result, 0, 0, v7);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

BOOL sub_1C4055DD4(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1C405342C(a1))
  {
    unint64_t v21 = a2;
    uint64_t v22 = a3;
    uint64_t v23 = a4;
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    swift_retain();
    sub_1C4497A58();
    swift_release();
    uint64_t v13 = v24;
    char v14 = v25;
    uint64_t v15 = v26;
    uint64_t v16 = a1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
    swift_beginAccess();
    if (*(void *)(*(void *)(v16 + 8) + 16))
    {
      a1 = sub_1C40549E4(0);
      sub_1C4057B14(v13, v14, v15, 0);
    }
    else
    {
      swift_retain();
    }
    uint64_t v17 = v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
    swift_beginAccess();
    if (*(void *)(*(void *)(v17 + 8) + 16)) {
      sub_1C4057B14(v13, v14, v15, 0);
    }
    swift_bridgeObjectRelease();
    a3 = v22;
    a4 = v23;
    a2 = v21;
  }
  else
  {
    swift_retain();
  }
  uint64_t v18 = qword_1EBBC00D0;
  swift_retain();
  swift_retain();
  if (v18 != -1) {
    swift_once();
  }
  sub_1C4497A58();
  swift_release();
  BOOL v19 = sub_1C4057E90(a1, (uint64_t)v12, a2, a3, a4);
  swift_release();
  sub_1C3F962E0((uint64_t)v12, &qword_1EBBC0FA0);
  swift_release();
  return v19;
}

uint64_t sub_1C405609C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v7)(__n128 *__return_ptr, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t inited;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __n128 v21;
  __n128 v22[2];

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for TypedReference();
  uint64_t v7 = *(void (**)(__n128 *__return_ptr, uint64_t, uint64_t))(a5 + 48);
  v7(v22, a3, a5);
  unint64_t v21 = v22[0];
  sub_1C4139FD0(&v21);
  __n128 v9 = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B0A8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C449E3F0;
  *(void *)(inited + 32) = v9;
  v22[0].n128_u64[0] = inited;
  sub_1C4497418();
  uint64_t v11 = v22[0].n128_u64[0];
  swift_retain();
  uint64_t v12 = sub_1C411F03C(v11);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBBF48);
  uint64_t v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C449B490;
  ((void (*)(uint64_t, uint64_t))v7)(a3, a5);
  char v14 = sub_1C411EDFC(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t v15 = sub_1C413C1B0(v14, v19);
  swift_bridgeObjectRelease();
  uint64_t result = type metadata accessor for Capsule();
  uint64_t v17 = *(void *)(a2 + *(int *)(result + 40));
  if (v17)
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v15;
    sub_1C4055DD4(v17, (unint64_t)sub_1C407DC30, v18, v12);
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C40562DC(uint64_t a1, uint64_t (*a2)(uint64_t *), uint64_t a3)
{
  uint64_t v8 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v8);
  unint64_t v61 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_bridgeObjectRetain();
  uint64_t v66 = a2;
  uint64_t v67 = a3;
  uint64_t v73 = sub_1C413FE90(v10, a2);
  uint64_t v72 = a1;
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C411D8F0(v11);
  if (!v12[2])
  {
LABEL_41:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v73;
  }
  uint64_t v59 = v4;
  uint64_t v13 = v3 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  uint64_t result = swift_beginAccess();
  unint64_t v15 = 0;
  unint64_t v16 = v12[2];
  uint64_t v17 = (uint64_t)v61;
  uint64_t v60 = v8;
  uint64_t v62 = v13;
  while (1)
  {
    if (v15 >= v16)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    char v20 = &v12[2 * v15];
    uint64_t v21 = v20[4];
    unint64_t v22 = v20[5];
    sub_1C3F8F450(v13, v17, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v23 = *(void *)(v17 + *(int *)(v8 + 20));
    uint64_t v24 = *(void *)(v23 + 16);
    sub_1C3F7E324(v21, v22);
    if (v24)
    {
      uint64_t v25 = sub_1C3F850CC(v21, v22);
      if (v26) {
        break;
      }
    }
    sub_1C3F8F5D4(v17, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v18 = v21;
    unint64_t v19 = v22;
LABEL_4:
    ++v15;
    uint64_t result = sub_1C3F7E2CC(v18, v19);
    unint64_t v16 = v12[2];
    if (v15 >= v16) {
      goto LABEL_41;
    }
  }
  unint64_t v63 = v22;
  uint64_t v64 = v21;
  uint64_t v65 = v12;
  uint64_t v27 = *(void *)(*(void *)(v23 + 56) + 48 * v25);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F8F5D4(v17, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v27)
  {
LABEL_40:
    uint64_t v18 = v64;
    uint64_t v12 = v65;
    uint64_t v13 = v62;
    unint64_t v19 = v63;
    goto LABEL_4;
  }
  uint64_t v28 = type metadata accessor for RetainVisitor();
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = MEMORY[0x1E4FBC860];
  unint64_t v31 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
  unint64_t v32 = sub_1C3F7E37C(v30);
  *(void *)(v29 + 16) = v31;
  *(void *)(v29 + 24) = v32;
  uint64_t v70 = v28;
  unint64_t v71 = &off_1F1F982A0;
  uint64_t v68 = v29;
  unint64_t v33 = *(void (**)(uint64_t *))(*(void *)v27 + 120);
  swift_retain();
  v33(&v68);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v68);
  swift_release();
  swift_beginAccess();
  uint64_t v34 = *(void *)(v29 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v36 = v34 + 64;
  uint64_t v35 = *(void *)(v34 + 64);
  uint64_t v37 = 1 << *(unsigned char *)(v34 + 32);
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v38 = 0;
  if (v37 < 64) {
    uint64_t v39 = ~(-1 << v37);
  }
  else {
    uint64_t v39 = -1;
  }
  unint64_t v40 = v39 & v35;
  int64_t v41 = (unint64_t)(v37 + 63) >> 6;
  while (v40)
  {
    unint64_t v44 = __clz(__rbit64(v40));
    v40 &= v40 - 1;
    unint64_t v45 = v44 | (v38 << 6);
LABEL_33:
    unint64_t v49 = (uint64_t *)(*(void *)(v34 + 48) + 16 * v45);
    uint64_t v51 = *v49;
    unint64_t v50 = v49[1];
    sub_1C3F7E324(*v49, v50);
    sub_1C3F7E324(v51, v50);
    char v52 = sub_1C3F81BF8(&v68, v51, v50);
    sub_1C3F7E2CC(v68, v69);
    if (v52)
    {
      uint64_t v68 = v51;
      unint64_t v69 = v50;
      if (v66(&v68))
      {
        sub_1C3F7E324(v51, v50);
        sub_1C3F81BF8(&v68, v51, v50);
        sub_1C3F7E2CC(v68, v69);
        sub_1C3F7E324(v51, v50);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v65 = sub_1C3FF12A8(0, v65[2] + 1, 1, v65);
        }
        unint64_t v54 = v65[2];
        unint64_t v53 = v65[3];
        unint64_t v55 = v54 + 1;
        if (v54 >= v53 >> 1)
        {
          unint64_t v58 = v54 + 1;
          uint64_t v56 = sub_1C3FF12A8((void *)(v53 > 1), v54 + 1, 1, v65);
          unint64_t v55 = v58;
          uint64_t v65 = v56;
        }
        uint64_t v42 = v65;
        v65[2] = v55;
        uint64_t v43 = &v42[2 * v54];
        v43[4] = v51;
        v43[5] = v50;
      }
    }
    uint64_t result = sub_1C3F7E2CC(v51, v50);
  }
  int64_t v46 = v38 + 1;
  if (__OFADD__(v38, 1))
  {
    __break(1u);
    goto LABEL_43;
  }
  if (v46 >= v41) {
    goto LABEL_39;
  }
  unint64_t v47 = *(void *)(v36 + 8 * v46);
  ++v38;
  if (v47) {
    goto LABEL_32;
  }
  int64_t v38 = v46 + 1;
  if (v46 + 1 >= v41) {
    goto LABEL_39;
  }
  unint64_t v47 = *(void *)(v36 + 8 * v38);
  if (v47) {
    goto LABEL_32;
  }
  int64_t v38 = v46 + 2;
  if (v46 + 2 >= v41) {
    goto LABEL_39;
  }
  unint64_t v47 = *(void *)(v36 + 8 * v38);
  if (v47) {
    goto LABEL_32;
  }
  int64_t v38 = v46 + 3;
  if (v46 + 3 >= v41) {
    goto LABEL_39;
  }
  unint64_t v47 = *(void *)(v36 + 8 * v38);
  if (v47)
  {
LABEL_32:
    unint64_t v40 = (v47 - 1) & v47;
    unint64_t v45 = __clz(__rbit64(v47)) + (v38 << 6);
    goto LABEL_33;
  }
  int64_t v48 = v46 + 4;
  if (v48 >= v41)
  {
LABEL_39:
    swift_release();
    uint64_t v8 = v60;
    uint64_t v17 = (uint64_t)v61;
    goto LABEL_40;
  }
  unint64_t v47 = *(void *)(v36 + 8 * v48);
  if (v47)
  {
    int64_t v38 = v48;
    goto LABEL_32;
  }
  while (1)
  {
    int64_t v38 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v38 >= v41) {
      goto LABEL_39;
    }
    unint64_t v47 = *(void *)(v36 + 8 * v38);
    ++v48;
    if (v47) {
      goto LABEL_32;
    }
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_1C4056848(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v89 = *MEMORY[0x1E4F143B8];
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_1C44985F8();
  sub_1C4496568();
  uint64_t v6 = sub_1C4498628();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  uint64_t v9 = a3 + 56;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  unint64_t v10 = a2 >> 62;
  uint64_t v79 = ~v7;
  unint64_t v76 = a2;
  unint64_t v78 = a2 >> 62;
  BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v77 = v11;
  uint64_t v74 = (a1 >> 32) - (int)a1;
  uint64_t v75 = a1 >> 32;
  uint64_t v80 = v10;
  size_t __n = BYTE6(a2);
  while (2)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v8);
    uint64_t v14 = *v12;
    unint64_t v13 = v12[1];
    uint64_t v15 = 0;
    switch(v13 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
        }
        uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_15:
        sub_1C3F7E324(v14, v13);
        break;
      case 2uLL:
        uint64_t v17 = *(void *)(v14 + 16);
        uint64_t v16 = *(void *)(v14 + 24);
        uint64_t v15 = v16 - v17;
        if (!__OFSUB__(v16, v17)) {
          goto LABEL_15;
        }
        goto LABEL_120;
      case 3uLL:
        break;
      default:
        uint64_t v15 = BYTE6(v13);
        break;
    }
    size_t v18 = __n;
    switch(v80)
    {
      case 1:
        size_t v18 = HIDWORD(a1) - (int)a1;
        if (v77) {
          goto LABEL_121;
        }
        goto LABEL_20;
      case 2:
        uint64_t v20 = *(void *)(a1 + 16);
        uint64_t v19 = *(void *)(a1 + 24);
        BOOL v21 = __OFSUB__(v19, v20);
        size_t v18 = v19 - v20;
        if (!v21) {
          goto LABEL_20;
        }
        goto LABEL_122;
      case 3:
        if (v15) {
          goto LABEL_8;
        }
        goto LABEL_118;
      default:
LABEL_20:
        if (v15 != v18)
        {
LABEL_8:
          sub_1C3F7E2CC(v14, v13);
          goto LABEL_9;
        }
        if (v15 >= 1)
        {
          switch(v13 >> 62)
          {
            case 1uLL:
              if ((int)v14 > v14 >> 32) {
                goto LABEL_123;
              }
              uint64_t v25 = sub_1C4496298();
              if (v25)
              {
                uint64_t v26 = v25;
                uint64_t v27 = sub_1C44962C8();
                if (__OFSUB__((int)v14, v27)) {
                  goto LABEL_125;
                }
                uint64_t v28 = (const void *)(v26 + (int)v14 - v27);
              }
              else
              {
                uint64_t v28 = 0;
              }
              sub_1C44962B8();
              LODWORD(v10) = v78;
              if (!v78)
              {
                *(void *)__s1 = a1;
                *(_WORD *)&__s1[8] = a2;
                __s1[10] = BYTE2(a2);
                __s1[11] = BYTE3(a2);
                __s1[12] = BYTE4(a2);
                __s1[13] = BYTE5(a2);
                if (!v28) {
                  goto LABEL_153;
                }
                int v36 = memcmp(v28, __s1, __n);
                goto LABEL_115;
              }
              if (v78 == 1)
              {
                if (v75 < (int)a1) {
                  goto LABEL_134;
                }
                swift_retain();
                uint64_t v43 = (char *)sub_1C4496298();
                if (v43)
                {
                  uint64_t v44 = sub_1C44962C8();
                  if (__OFSUB__((int)a1, v44)) {
                    goto LABEL_141;
                  }
                  v43 += (int)a1 - v44;
                }
                uint64_t v45 = sub_1C44962B8();
                size_t v46 = (a1 >> 32) - (int)a1;
                if (v45 < v74) {
                  size_t v46 = v45;
                }
                if (!v28) {
                  goto LABEL_146;
                }
                if (!v43) {
                  goto LABEL_147;
                }
                int v36 = memcmp(v28, v43, v46);
                sub_1C3F7E2CC(a1, a2);
                goto LABEL_115;
              }
              uint64_t v65 = *(void *)(a1 + 16);
              uint64_t v66 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v67 = (char *)sub_1C4496298();
              if (v67)
              {
                uint64_t v68 = sub_1C44962C8();
                if (__OFSUB__(v65, v68)) {
                  goto LABEL_140;
                }
                v67 += v65 - v68;
              }
              BOOL v21 = __OFSUB__(v66, v65);
              int64_t v69 = v66 - v65;
              if (v21) {
                goto LABEL_135;
              }
              uint64_t v70 = sub_1C44962B8();
              if (v70 >= v69) {
                size_t v71 = v69;
              }
              else {
                size_t v71 = v70;
              }
              a2 = v76;
              if (!v28) {
                goto LABEL_154;
              }
              LODWORD(v10) = v78;
              if (!v67) {
                goto LABEL_155;
              }
              int v36 = memcmp(v28, v67, v71);
              swift_release();
              goto LABEL_114;
            case 2uLL:
              uint64_t v29 = *(void *)(v14 + 16);
              swift_retain();
              swift_retain();
              uint64_t v30 = (char *)sub_1C4496298();
              if (!v30) {
                goto LABEL_37;
              }
              uint64_t v31 = sub_1C44962C8();
              if (__OFSUB__(v29, v31)) {
                goto LABEL_124;
              }
              v30 += v29 - v31;
LABEL_37:
              sub_1C44962B8();
              LODWORD(v10) = v78;
              if (!v78)
              {
                *(void *)__s1 = a1;
                *(_WORD *)&__s1[8] = a2;
                __s1[10] = BYTE2(a2);
                __s1[11] = BYTE3(a2);
                __s1[12] = BYTE4(a2);
                __s1[13] = BYTE5(a2);
                if (!v30) {
                  goto LABEL_150;
                }
                int v36 = memcmp(v30, __s1, __n);
                goto LABEL_90;
              }
              if (v78 == 1)
              {
                if (v75 < (int)a1) {
                  goto LABEL_128;
                }
                swift_retain();
                unint64_t v32 = (char *)sub_1C4496298();
                if (v32)
                {
                  uint64_t v33 = sub_1C44962C8();
                  if (__OFSUB__((int)a1, v33)) {
                    goto LABEL_139;
                  }
                  v32 += (int)a1 - v33;
                }
                uint64_t v34 = sub_1C44962B8();
                size_t v35 = (a1 >> 32) - (int)a1;
                if (v34 < v74) {
                  size_t v35 = v34;
                }
                if (!v30) {
                  goto LABEL_143;
                }
                if (!v32) {
                  goto LABEL_144;
                }
                int v36 = memcmp(v30, v32, v35);
                a2 = v76;
                sub_1C3F7E2CC(a1, v76);
LABEL_90:
                swift_release();
LABEL_114:
                swift_release();
LABEL_115:
                sub_1C3F7E2CC(v14, v13);
                uint64_t v9 = a3 + 56;
                if (!v36) {
                  return 1;
                }
                break;
              }
              uint64_t v58 = *(void *)(a1 + 16);
              uint64_t v73 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v59 = (char *)sub_1C4496298();
              if (v59)
              {
                uint64_t v60 = sub_1C44962C8();
                if (__OFSUB__(v58, v60)) {
                  goto LABEL_138;
                }
                v59 += v58 - v60;
              }
              BOOL v21 = __OFSUB__(v73, v58);
              int64_t v61 = v73 - v58;
              if (v21) {
                goto LABEL_133;
              }
              uint64_t v62 = sub_1C44962B8();
              if (v62 >= v61) {
                size_t v63 = v61;
              }
              else {
                size_t v63 = v62;
              }
              if (!v30) {
                goto LABEL_151;
              }
              LODWORD(v10) = v78;
              if (!v59) {
                goto LABEL_152;
              }
              int v64 = memcmp(v30, v59, v63);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              sub_1C3F7E2CC(v14, v13);
              a2 = v76;
              uint64_t v9 = a3 + 56;
              if (!v64) {
                return 1;
              }
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v10) {
                goto LABEL_58;
              }
              if (v10 == 1)
              {
                if (v75 < (int)a1) {
                  goto LABEL_127;
                }
                sub_1C3F7E324(a1, a2);
                uint64_t v37 = sub_1C4496298();
                if (!v37) {
                  goto LABEL_145;
                }
                uint64_t v23 = v37;
                uint64_t v38 = sub_1C44962C8();
                unint64_t v10 = (int)a1 - v38;
                if (__OFSUB__((int)a1, v38)) {
                  goto LABEL_132;
                }
LABEL_53:
                uint64_t v39 = sub_1C44962B8();
                if (v39 >= v74) {
                  size_t v40 = (a1 >> 32) - (int)a1;
                }
                else {
                  size_t v40 = v39;
                }
                int v41 = memcmp(__s1, (const void *)(v23 + v10), v40);
                sub_1C3F7E2CC(a1, a2);
                sub_1C3F7E2CC(v14, v13);
                LODWORD(v10) = v78;
                if (!v41) {
                  return 1;
                }
              }
              else
              {
                uint64_t v54 = *(void *)(a1 + 16);
                uint64_t v53 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                unint64_t v49 = (char *)sub_1C4496298();
                if (v49)
                {
                  uint64_t v55 = sub_1C44962C8();
                  if (__OFSUB__(v54, v55)) {
                    goto LABEL_137;
                  }
                  v49 += v54 - v55;
                }
                BOOL v21 = __OFSUB__(v53, v54);
                int64_t v51 = v53 - v54;
                if (v21) {
                  goto LABEL_130;
                }
                uint64_t v52 = sub_1C44962B8();
                a2 = v76;
                if (!v49) {
                  goto LABEL_149;
                }
LABEL_83:
                if (v52 >= v51) {
                  size_t v56 = v51;
                }
                else {
                  size_t v56 = v52;
                }
                int v57 = memcmp(__s1, v49, v56);
                swift_release();
                swift_release();
                sub_1C3F7E2CC(v14, v13);
                LODWORD(v10) = v78;
                if (!v57) {
                  return 1;
                }
              }
              break;
            default:
              *(void *)__s1 = v14;
              *(_WORD *)&__s1[8] = v13;
              __s1[10] = BYTE2(v13);
              __s1[11] = BYTE3(v13);
              __s1[12] = BYTE4(v13);
              __s1[13] = BYTE5(v13);
              if (!v10)
              {
LABEL_58:
                uint64_t __s2 = a1;
                __int16 v83 = a2;
                char v84 = BYTE2(a2);
                char v85 = BYTE3(a2);
                char v86 = BYTE4(a2);
                char v87 = BYTE5(a2);
                int v42 = memcmp(__s1, &__s2, __n);
                sub_1C3F7E2CC(v14, v13);
                if (!v42) {
                  return 1;
                }
                break;
              }
              if (v10 == 1)
              {
                if (v75 < (int)a1) {
                  goto LABEL_126;
                }
                sub_1C3F7E324(a1, a2);
                uint64_t v22 = sub_1C4496298();
                if (!v22)
                {
                  sub_1C44962B8();
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  sub_1C44962B8();
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
                  JUMPOUT(0x1C40571E8);
                }
                uint64_t v23 = v22;
                uint64_t v24 = sub_1C44962C8();
                unint64_t v10 = (int)a1 - v24;
                if (__OFSUB__((int)a1, v24)) {
                  goto LABEL_131;
                }
                goto LABEL_53;
              }
              uint64_t v47 = *(void *)(a1 + 16);
              uint64_t v48 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              unint64_t v49 = (char *)sub_1C4496298();
              if (v49)
              {
                uint64_t v50 = sub_1C44962C8();
                if (__OFSUB__(v47, v50)) {
                  goto LABEL_136;
                }
                v49 += v47 - v50;
              }
              BOOL v21 = __OFSUB__(v48, v47);
              int64_t v51 = v48 - v47;
              if (v21) {
                goto LABEL_129;
              }
              uint64_t v52 = sub_1C44962B8();
              a2 = v76;
              if (!v49) {
                goto LABEL_148;
              }
              goto LABEL_83;
          }
LABEL_9:
          unint64_t v8 = (v8 + 1) & v79;
          if (((*(void *)(v9 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            return 0;
          }
          continue;
        }
LABEL_118:
        sub_1C3F7E2CC(v14, v13);
        return 1;
    }
  }
}

uint64_t sub_1C4057218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v17 = a1;
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TypedRefVisitor();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = MEMORY[0x1E4FBC870];
  uint64_t v10 = *(void *)(a3 + 8);
  uint64_t v11 = type metadata accessor for Capsule();
  Capsule<>.root.getter(v11, a3);
  uint64_t v18[3] = v8;
  v18[4] = &off_1F1F9A0F0;
  v18[0] = v9;
  uint64_t v12 = *(void (**)(void *, uint64_t, uint64_t))(v10 + 48);
  swift_retain();
  v12(v18, a2, v10);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a2);
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  uint64_t v14 = *(void *)(v17 + *(int *)(v11 + 40));
  if (v14)
  {
    swift_beginAccess();
    uint64_t v15 = *(void *)(v9 + 16);
    swift_bridgeObjectRetain();
    sub_1C4055DD4(v14, 0, 0, v15);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C40573E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];
  (*(void (**)(char *, uint64_t))(v10 + 16))(v6, v11);
  sub_1C3F6BC4C((uint64_t)v6, a2, &v15);
  v13[1] = v9;
  uint64_t v14 = v15;
  v13[0] = v8;
  sub_1C405118C((unint64_t *)&v14, v13, a3);
  return swift_release();
}

void sub_1C40574F0(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __n128 *a4@<X8>)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v37 = a4;
  uint64_t v34 = *(void *)(a2 - 8);
  uint64_t v35 = a1;
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v8 = v7 - 8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C4496678();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C4496668();
  v43.n128_u64[0] = sub_1C3F5E0D0((uint64_t)&unk_1F1F96AF8);
  v43.n128_u64[1] = v15;
  uint64_t v16 = sub_1C3F5DF48();
  unint64_t v18 = v17;
  sub_1C4496588();
  sub_1C3F7E2CC(v16, v18);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  __n128 v19 = v43;
  uint64_t v36 = v4;
  uint64_t v20 = v4 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v20, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  if (!*(void *)(*(void *)&v10[*(int *)(v8 + 28)] + 16)) {
    goto LABEL_11;
  }
  sub_1C3F7E324(v19.n128_i64[0], v19.n128_u64[1]);
  sub_1C3F850CC(v19.n128_i64[0], v19.n128_u64[1]);
  if ((v21 & 1) == 0)
  {
    sub_1C3F7E2CC(v19.n128_i64[0], v19.n128_u64[1]);
LABEL_11:
    sub_1C3F8F5D4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v28 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v6, v35, v38);
    sub_1C3F6BC4C((uint64_t)v6, v28, (uint64_t **)&v43);
    unint64_t v29 = v43.n128_u64[0];
    uint64_t v30 = MEMORY[0x1E4FBC860];
    unint64_t v31 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
    unint64_t v32 = sub_1C3F7E37C(v30);
    sub_1C3F7E4A4(v30);
    sub_1C3F7E37C(v30);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = MEMORY[0x1E4FBC868];
    swift_bridgeObjectRelease_n();
    __n128 v43 = (__n128)v29;
    uint64_t v44 = v33;
    uint64_t v45 = v33;
    unint64_t v46 = v31;
    unint64_t v47 = v32;
    __n128 v42 = v19;
    swift_beginAccess();
    sub_1C3F6C8F4((long long *)&v43, (uint64_t *)&v42);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
LABEL_12:
    uint64_t v27 = v37;
LABEL_13:
    swift_beginAccess();
    sub_1C3F7E324(v19.n128_i64[0], v19.n128_u64[1]);
    sub_1C3F81BF8(v41, v19.n128_i64[0], v19.n128_u64[1]);
    swift_endAccess();
    sub_1C3F7E2CC(v41[0], v41[1]);
    __n128 v43 = v19;
    WeakRef.init(id:)(&v43, v27);
    return;
  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v19.n128_i64[0], v19.n128_u64[1]);
  sub_1C3F8F5D4((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_beginAccess();
  __n128 v42 = v19;
  sub_1C3F7E324(v19.n128_i64[0], v19.n128_u64[1]);
  uint64_t v23 = sub_1C3F84D7C(&v43, (uint64_t *)&v42);
  if (!*(void *)(v22 + 16))
  {
    ((void (*)(__n128 *, void))v23)(&v43, 0);
    sub_1C3F7E2CC(v42.n128_i64[0], v42.n128_u64[1]);
    swift_endAccess();
    goto LABEL_12;
  }
  uint64_t v24 = v22;
  uint64_t v25 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v6, v35, v38);
  sub_1C3F6BC4C((uint64_t)v6, v25, &v40);
  if (*(void *)v24)
  {
    uint64_t v26 = v40;
    uint64_t v27 = v37;
    if (v40 != *(uint64_t **)v24)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        *(void *)uint64_t v24 = (*(uint64_t (**)(void))(**(void **)v24 + 160))();
        swift_release();
      }
      (*(void (**)(uint64_t *))(**(void **)v24 + 96))(v26);
    }
    ((void (*)(__n128 *, void))v23)(&v43, 0);
    swift_endAccess();
    swift_release();
    sub_1C3F7E2CC(v42.n128_i64[0], v42.n128_u64[1]);
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_1C4057AC0(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + *(int *)(type metadata accessor for Capsule() + 40));
  if (result)
  {
    return sub_1C4055DD4(result, 0, 0, 0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C4057B14(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = MEMORY[0x1F4188790](v11);
  uint64_t v16 = &v23[-v15];
  if (*(void *)(a3 + 16))
  {
    uint64_t v17 = v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
    if (a4)
    {
      swift_beginAccess();
      sub_1C3F8D910(a1, a2 & 1, a3);
      swift_endAccess();
      swift_beginAccess();
      sub_1C3F74104(a1, a2 & 1, a3);
      uint64_t result = swift_endAccess();
      *(void *)(v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_renameGeneration) = a1;
    }
    else
    {
      swift_beginAccess();
      uint64_t v18 = *(void *)(v17 + 8);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1C3F8D910(a1, a2 & 1, a3);
      swift_endAccess();
      swift_beginAccess();
      sub_1C3F74104(a1, a2 & 1, a3);
      swift_endAccess();
      *(void *)(v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_renameGeneration) = a1;
      uint64_t v19 = *(void *)(v17 + 8);
      uint64_t v20 = qword_1EBBC10F0;
      swift_bridgeObjectRetain();
      if (v20 != -1) {
        swift_once();
      }
      v25[0] = MEMORY[0x1E4FBC868];
      v25[1] = v18;
      v24[0] = MEMORY[0x1E4FBC868];
      v24[1] = v19;
      uint64_t v21 = qword_1EBBC00D0;
      swift_retain();
      swift_retain();
      if (v21 != -1) {
        swift_once();
      }
      sub_1C4497A58();
      swift_release();
      uint64_t v22 = type metadata accessor for Replica();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
      sub_1C401AC68(v25, v24, (uint64_t)v16, (uint64_t)v13);
      swift_release();
      sub_1C3F962E0((uint64_t)v13, &qword_1EBBC0FA0);
      sub_1C3F962E0((uint64_t)v16, &qword_1EBBC0FA0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease_n();
    }
  }
  return result;
}

BOOL sub_1C4057E90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v6;
  uint64_t v8 = v5;
  uint64_t v33 = a5;
  uint64_t v29 = a2;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[1] = OBJC_IVAR____TtC9Coherence10CapsuleRef_replicaState;
  uint64_t v15 = qword_1EBBC00D0;
  swift_retain();
  if (v15 != -1) {
    swift_once();
  }
  sub_1C4497A58();
  uint64_t v30 = v12;
  uint64_t v16 = v7;
  swift_release();
  uint64_t v17 = v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
  swift_beginAccess();
  uint64_t v18 = *(void *)(v17 + 8);
  swift_bridgeObjectRetain();
  sub_1C3F962E0((uint64_t)v14, &qword_1EBBC0FA0);
  uint64_t v19 = sub_1C4058830(a1, a3, a4, v33);
  if (v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = v19;
    swift_beginAccess();
    uint64_t v22 = swift_bridgeObjectRetain();
    sub_1C4059A80(v22);
    swift_endAccess();
    swift_retain();
    sub_1C4497A58();
    swift_release();
    uint64_t v23 = *(void *)(v17 + 8);
    swift_bridgeObjectRetain();
    sub_1C3F962E0((uint64_t)v14, &qword_1EBBC0FA0);
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    v32[0] = MEMORY[0x1E4FBC868];
    v32[1] = v18;
    v31[0] = MEMORY[0x1E4FBC868];
    v31[1] = v23;
    swift_retain();
    swift_retain();
    sub_1C4497A58();
    swift_release();
    sub_1C401AC68(v32, v31, (uint64_t)v14, v29);
    swift_release();
    sub_1C3F962E0((uint64_t)v14, &qword_1EBBC0FA0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    unint64_t v24 = sub_1C3F758A0(MEMORY[0x1E4FBC860]);
    uint64_t v25 = (unint64_t *)(v8 + OBJC_IVAR____TtC9Coherence10CapsuleRef_caches);
    swift_beginAccess();
    *uint64_t v25 = v24;
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(v21 + 16);
    swift_bridgeObjectRelease();
    return v26 != 0;
  }
  return v20;
}

BOOL sub_1C4058230(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = v8;
  uint64_t v10 = v7;
  uint64_t v38 = a7;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  unint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v31 = a2;
  uint64_t v12 = *v7;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = OBJC_IVAR____TtC9Coherence10CapsuleRef_replicaState;
  uint64_t v16 = qword_1EBBC00D0;
  swift_retain();
  if (v16 != -1) {
    swift_once();
  }
  sub_1C4497A58();
  uint64_t v17 = v9;
  swift_release();
  uint64_t v18 = (char *)v7 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
  swift_beginAccess();
  uint64_t v19 = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  sub_1C3F962E0((uint64_t)v15, &qword_1EBBC0FA0);
  uint64_t v20 = sub_1C3FA180C(&qword_1EA39CB50, (void (*)(uint64_t))type metadata accessor for CapsuleRef);
  uint64_t v21 = sub_1C413CA44(a1, v32, v33, v34, v12, v35, v20, v38);
  if (v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = v21;
    swift_beginAccess();
    uint64_t v24 = swift_bridgeObjectRetain();
    sub_1C4059A80(v24);
    swift_endAccess();
    uint64_t v38 = v23;
    swift_retain();
    sub_1C4497A58();
    swift_release();
    uint64_t v25 = *((void *)v18 + 1);
    swift_bridgeObjectRetain();
    sub_1C3F962E0((uint64_t)v15, &qword_1EBBC0FA0);
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    v37[0] = MEMORY[0x1E4FBC868];
    v37[1] = v19;
    v36[0] = MEMORY[0x1E4FBC868];
    v36[1] = v25;
    swift_retain();
    swift_retain();
    sub_1C4497A58();
    swift_release();
    sub_1C401AC68(v37, v36, (uint64_t)v15, v31);
    swift_release();
    sub_1C3F962E0((uint64_t)v15, &qword_1EBBC0FA0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    unint64_t v26 = sub_1C3F758A0(MEMORY[0x1E4FBC860]);
    uint64_t v27 = (unint64_t *)((char *)v10 + OBJC_IVAR____TtC9Coherence10CapsuleRef_caches);
    swift_beginAccess();
    *uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void *)(v38 + 16);
    swift_bridgeObjectRelease();
    return v28 != 0;
  }
  return v22;
}

uint64_t sub_1C4058634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = v3 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
  swift_beginAccess();
  if (*(void *)(*(void *)(v10 + 8) + 16))
  {
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    swift_retain();
    sub_1C4497A58();
    swift_release();
    if (*(void *)(*(void *)(v10 + 8) + 16)) {
      sub_1C4057B14(v13, v14, v15, 0);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = type metadata accessor for Replica();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  sub_1C4058230(a1, (uint64_t)v9, 0, 0, 0, a2, a3);
  return sub_1C3F962E0((uint64_t)v9, &qword_1EBBC0FA0);
}

uint64_t sub_1C4058830(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v146 = a1;
  uint64_t v147 = a4;
  uint64_t v151 = a3;
  unint64_t v152 = a2;
  uint64_t v7 = sub_1C4496678();
  uint64_t v131 = *(void *)(v7 - 8);
  uint64_t v132 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v135 = (char *)&v131 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v9 = MEMORY[0x1F4188790](v157);
  uint64_t v153 = (uint64_t)&v131 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v145 = (char *)&v131 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v150 = (uint64_t)&v131 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v158 = (uint64_t)&v131 - v15;
  uint64_t v179 = MEMORY[0x1E4FBC870];
  v167[9] = MEMORY[0x1E4FBC870];
  uint64_t v168 = MEMORY[0x1E4FBC870];
  uint64_t v16 = (uint64_t *)(a1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v19 = (uint64_t *)(v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v20 = *v19;
  uint64_t v136 = v19;
  uint64_t v21 = v19[1];
  uint64_t v133 = v19 + 1;
  v167[0] = v20;
  v167[1] = v21;
  uint64_t v138 = v17;
  swift_bridgeObjectRetain();
  uint64_t v139 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v22 = v146;
  uint64_t v23 = sub_1C405BECC(v167);
  swift_bridgeObjectRelease();
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = *(void *)(v23 + 16);
  uint64_t v154 = v5;
  uint64_t v140 = v23;
  if (v25)
  {
    uint64_t v26 = v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
    uint64_t v27 = v22 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
    swift_bridgeObjectRetain();
    uint64_t v156 = v26;
    swift_beginAccess();
    uint64_t v149 = v27;
    swift_beginAccess();
    uint64_t v28 = (unint64_t *)(v24 + 40);
    uint64_t v29 = v157;
    uint64_t v30 = (uint64_t (*)(uint64_t *))v152;
    while (1)
    {
      uint64_t v32 = *(v28 - 1);
      unint64_t v31 = *v28;
      if (v30)
      {
        uint64_t v165 = *(v28 - 1);
        unint64_t v166 = v31;
        sub_1C3F7E324(v32, v31);
        sub_1C407DC40((uint64_t)v30);
        char v33 = v30(&v165);
        sub_1C3F7E5BC((uint64_t)v30);
        if ((v33 & 1) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_1C3F7E324(*(v28 - 1), *v28);
      }
      sub_1C3F7E324(v32, v31);
      char v34 = sub_1C3F81BF8(&v165, v32, v31);
      sub_1C3F7E2CC(v165, v166);
      if ((v34 & 1) == 0) {
        goto LABEL_17;
      }
      uint64_t v35 = v158;
      sub_1C3F8F450(v156, v158, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v36 = *(void *)(v35 + *(int *)(v29 + 20));
      if (!*(void *)(v36 + 16)) {
        goto LABEL_16;
      }
      sub_1C3F7E324(v32, v31);
      uint64_t v37 = sub_1C3F850CC(v32, v31);
      if ((v38 & 1) == 0) {
        break;
      }
      uint64_t v155 = *(void *)(*(void *)(v36 + 56) + 48 * v37);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v32, v31);
      sub_1C3F8F5D4(v158, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v39 = v155;
      swift_bridgeObjectRelease();
      if (!v39)
      {
        sub_1C3F7E2CC(v32, v31);
        uint64_t v29 = v157;
        uint64_t v30 = (uint64_t (*)(uint64_t *))v152;
        goto LABEL_18;
      }
      uint64_t v40 = v150;
      sub_1C3F8F450(v149, v150, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v29 = v157;
      uint64_t v41 = *(void *)(v40 + *(int *)(v157 + 20));
      uint64_t v30 = (uint64_t (*)(uint64_t *))v152;
      if (!*(void *)(v41 + 16))
      {
        swift_retain();
        goto LABEL_23;
      }
      sub_1C3F7E324(v32, v31);
      swift_retain();
      uint64_t v42 = sub_1C3F850CC(v32, v31);
      if ((v43 & 1) == 0)
      {
        sub_1C3F7E2CC(v32, v31);
LABEL_23:
        sub_1C3F8F5D4(v150, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
        swift_release_n();
LABEL_17:
        sub_1C3F7E2CC(v32, v31);
        goto LABEL_18;
      }
      uint64_t v44 = (int64_t *)(*(void *)(v41 + 56) + 48 * v42);
      int64_t v45 = *v44;
      uint64_t v46 = v44[2];
      uint64_t v47 = v44[3];
      uint64_t v49 = v44[4];
      int64_t v48 = v44[5];
      int64_t v143 = v45;
      int64_t v144 = v48;
      swift_retain();
      uint64_t v148 = v46;
      swift_bridgeObjectRetain();
      uint64_t v142 = v47;
      swift_bridgeObjectRetain();
      uint64_t v141 = v49;
      uint64_t v50 = v143;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v32, v31);
      uint64_t result = sub_1C3F8F5D4(v150, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      if (!v50)
      {
LABEL_89:
        __break(1u);
        return result;
      }
      uint64_t v52 = swift_retain();
      sub_1C405B518(v52, v50, &v165);
      swift_release();
      uint64_t v134 = v165;
      swift_bridgeObjectRetain();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C3F7E324(v32, v31);
      sub_1C3F81BF8(&v165, v32, v31);
      sub_1C3F7E2CC(v165, v166);
      uint64_t v161 = v32;
      unint64_t v162 = v31;
      uint64_t v163 = v134;
      v160[0] = v148;
      v160[1] = v142;
      sub_1C405A4F0(v159, &v165, &v161, &v163, v160);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C3F7E2CC(v32, v31);
      uint64_t v30 = (uint64_t (*)(uint64_t *))v152;
LABEL_18:
      v28 += 2;
      if (!--v25)
      {
        swift_bridgeObjectRelease();
        uint64_t v5 = v154;
        goto LABEL_25;
      }
    }
    sub_1C3F7E2CC(v32, v31);
LABEL_16:
    sub_1C3F8F5D4(v158, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    goto LABEL_17;
  }
  uint64_t v29 = v157;
LABEL_25:
  swift_bridgeObjectRelease();
  if (v147)
  {
    if ((v147 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1C4497C48();
      type metadata accessor for AnyReference();
      sub_1C3FA180C((unint64_t *)&qword_1EA39CBA8, (void (*)(uint64_t))type metadata accessor for AnyReference);
      sub_1C4497728();
      uint64_t v53 = v169;
      int64_t v144 = v170;
      uint64_t v54 = v171;
      uint64_t v55 = v172;
      uint64_t v56 = v173;
    }
    else
    {
      uint64_t v57 = -1 << *(unsigned char *)(v147 + 32);
      uint64_t v58 = *(void *)(v147 + 56);
      int64_t v144 = v147 + 56;
      uint64_t v59 = ~v57;
      uint64_t v60 = -v57;
      if (v60 < 64) {
        uint64_t v61 = ~(-1 << v60);
      }
      else {
        uint64_t v61 = -1;
      }
      uint64_t v56 = v61 & v58;
      swift_bridgeObjectRetain();
      uint64_t v54 = v59;
      uint64_t v53 = v147;
      uint64_t v55 = 0;
    }
    unint64_t v62 = (unint64_t)v145;
    uint64_t v134 = v54;
    uint64_t v142 = v53 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v143 = (unint64_t)(v54 + 64) >> 6;
    uint64_t v141 = MEMORY[0x1E4FBC838] + 8;
    uint64_t v147 = v53;
    if ((v53 & 0x8000000000000000) == 0) {
      goto LABEL_36;
    }
LABEL_33:
    uint64_t v63 = sub_1C4497CB8();
    if (!v63)
    {
      uint64_t v5 = v154;
      goto LABEL_69;
    }
    uint64_t v161 = v63;
    type metadata accessor for AnyReference();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v64 = v165;
    swift_unknownObjectRelease();
    uint64_t v65 = v55;
    uint64_t v66 = v56;
    uint64_t v5 = v154;
    if (!v64)
    {
LABEL_69:
      sub_1C3F7FCE8();
      goto LABEL_70;
    }
    while (1)
    {
      uint64_t v155 = v66;
      uint64_t v72 = *(void *)(v64 + 16);
      unint64_t v71 = *(void *)(v64 + 24);
      uint64_t v158 = v64;
      uint64_t v73 = v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
      swift_beginAccess();
      sub_1C3F8F450(v73, v62, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v74 = *(void *)(v62 + *(int *)(v29 + 20));
      uint64_t v75 = *(void *)(v74 + 16);
      uint64_t v156 = v65;
      if (v75)
      {
        sub_1C3F7E324(v72, v71);
        sub_1C3F7E324(v72, v71);
        uint64_t v76 = sub_1C3F850CC(v72, v71);
        if (v77)
        {
          unint64_t v78 = (uint64_t *)(*(void *)(v74 + 56) + 48 * v76);
          uint64_t v79 = *v78;
          unint64_t v152 = v78[1];
          uint64_t v80 = v78[2];
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C3F7E2CC(v72, v71);
          sub_1C3F7E2CC(v72, v71);
          sub_1C3F8F5D4(v62, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
          uint64_t v29 = v157;
          sub_1C3F84B88(v79, v152, v80);
          swift_release();
          uint64_t v56 = v155;
          uint64_t v55 = v156;
          uint64_t v53 = v147;
          if (v147 < 0) {
            goto LABEL_33;
          }
          goto LABEL_36;
        }
        sub_1C3F7E2CC(v72, v71);
        sub_1C3F7E2CC(v72, v71);
      }
      sub_1C3F8F5D4(v62, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      sub_1C3F84B88(0, 0, 0);
      uint64_t v81 = v158;
      uint64_t v82 = *(void *)(v158 + 16);
      unint64_t v83 = *(void *)(v158 + 24);
      sub_1C3F7E324(v82, v83);
      sub_1C3F81BF8(&v165, v82, v83);
      sub_1C3F7E2CC(v165, v166);
      uint64_t v56 = *(void *)(v81 + 16);
      unint64_t v62 = *(void *)(v81 + 24);
      uint64_t v84 = v146 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
      swift_beginAccess();
      uint64_t v85 = v84;
      uint64_t v86 = v153;
      sub_1C3F8F450(v85, v153, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v87 = *(void *)(v86 + *(int *)(v29 + 20));
      if (!*(void *)(v87 + 16)) {
        goto LABEL_87;
      }
      sub_1C3F7E324(v56, v62);
      uint64_t v88 = sub_1C3F850CC(v56, v62);
      if ((v89 & 1) == 0) {
        goto LABEL_86;
      }
      unint64_t v90 = (uint64_t *)(*(void *)(v87 + 56) + 48 * v88);
      uint64_t v91 = *v90;
      uint64_t v93 = v90[2];
      uint64_t v92 = v90[3];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v151 = v56;
      unint64_t v152 = v62;
      sub_1C3F7E2CC(v56, v62);
      uint64_t result = sub_1C3F8F5D4(v153, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      if (!v91) {
        goto LABEL_88;
      }
      uint64_t v94 = swift_retain();
      sub_1C405B848(v94, v91, &v165);
      swift_release();
      uint64_t v95 = v165;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v96 = MEMORY[0x1E4FBC860];
      unint64_t v97 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
      unint64_t v98 = sub_1C3F7E37C(v96);
      uint64_t v148 = v98;
      sub_1C3F7E4A4(v96);
      sub_1C3F7E37C(v96);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      long long v174 = (unint64_t)v95;
      uint64_t v175 = v93;
      uint64_t v176 = v92;
      unint64_t v177 = v97;
      unint64_t v178 = v98;
      uint64_t v99 = v154 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
      swift_beginAccess();
      uint64_t v100 = *(int *)(v157 + 20);
      uint64_t v102 = v151;
      unint64_t v101 = v152;
      sub_1C3F7E324(v151, v152);
      sub_1C3F7E324(v102, v101);
      uint64_t v150 = v95;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v149 = v97;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v161 = *(void *)(v99 + v100);
      *(void *)(v99 + v100) = 0x8000000000000000;
      sub_1C3F6CA08(&v174, v102, v101, isUniquelyReferenced_nonNull_native);
      *(void *)(v99 + v100) = v161;
      uint64_t v29 = v157;
      swift_bridgeObjectRelease();
      sub_1C3F7E2CC(v102, v101);
      if (*(void *)(v92 + 16))
      {
        sub_1C3F7E324(v102, v101);
        sub_1C3F81BF8(&v161, v102, v101);
        sub_1C3F7E2CC(v161, v162);
      }
      uint64_t v161 = v102;
      unint64_t v162 = v101;
      uint64_t v163 = v93;
      uint64_t v164 = v92;
      sub_1C3F817F8(&v161, &v163);
      swift_endAccess();
      swift_release();
      sub_1C3F7E2CC(v102, v101);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_release();
      uint64_t v56 = v155;
      uint64_t v55 = v156;
      uint64_t v53 = v147;
      unint64_t v62 = (unint64_t)v145;
      if (v147 < 0) {
        goto LABEL_33;
      }
LABEL_36:
      if (v56)
      {
        uint64_t v66 = (v56 - 1) & v56;
        unint64_t v67 = __clz(__rbit64(v56)) | (v55 << 6);
        uint64_t v65 = v55;
        uint64_t v5 = v154;
      }
      else
      {
        int64_t v68 = v55 + 1;
        uint64_t v5 = v154;
        if (__OFADD__(v55, 1))
        {
          __break(1u);
LABEL_86:
          sub_1C3F7E2CC(v56, v62);
LABEL_87:
          uint64_t result = sub_1C3F8F5D4(v153, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
          __break(1u);
LABEL_88:
          __break(1u);
          goto LABEL_89;
        }
        if (v68 >= v143) {
          goto LABEL_69;
        }
        unint64_t v69 = *(void *)(v144 + 8 * v68);
        uint64_t v65 = v55 + 1;
        if (!v69)
        {
          uint64_t v65 = v55 + 2;
          if (v55 + 2 >= v143) {
            goto LABEL_69;
          }
          unint64_t v69 = *(void *)(v144 + 8 * v65);
          if (!v69)
          {
            uint64_t v65 = v55 + 3;
            if (v55 + 3 >= v143) {
              goto LABEL_69;
            }
            unint64_t v69 = *(void *)(v144 + 8 * v65);
            if (!v69)
            {
              uint64_t v65 = v55 + 4;
              if (v55 + 4 >= v143) {
                goto LABEL_69;
              }
              unint64_t v69 = *(void *)(v144 + 8 * v65);
              if (!v69)
              {
                uint64_t v65 = v55 + 5;
                if (v55 + 5 >= v143) {
                  goto LABEL_69;
                }
                unint64_t v69 = *(void *)(v144 + 8 * v65);
                if (!v69)
                {
                  uint64_t v70 = v55 + 6;
                  while (v143 != v70)
                  {
                    unint64_t v69 = *(void *)(v144 + 8 * v70++);
                    if (v69)
                    {
                      uint64_t v65 = v70 - 1;
                      uint64_t v53 = v147;
                      goto LABEL_53;
                    }
                  }
                  goto LABEL_69;
                }
              }
            }
          }
        }
LABEL_53:
        uint64_t v66 = (v69 - 1) & v69;
        unint64_t v67 = __clz(__rbit64(v69)) + (v65 << 6);
      }
      uint64_t v64 = *(void *)(*(void *)(v53 + 48) + 8 * v67);
      swift_retain();
      if (!v64) {
        goto LABEL_69;
      }
    }
  }
LABEL_70:
  uint64_t v104 = swift_bridgeObjectRetain();
  uint64_t v105 = v137;
  uint64_t v106 = sub_1C4060528(v104, v146);
  if (v105)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease();
  }
  uint64_t v108 = v106;
  uint64_t v109 = v107;
  swift_bridgeObjectRelease();
  sub_1C4059A80(v108);
  sub_1C4059A80(v109);
  uint64_t v110 = *v136;
  swift_bridgeObjectRetain();
  uint64_t v111 = swift_bridgeObjectRetain();
  if (sub_1C4112134(v111, v139))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_75:
    uint64_t v113 = swift_bridgeObjectRetain();
    uint64_t v114 = sub_1C411EDFC(v113);
    swift_bridgeObjectRelease();
    uint64_t v115 = v139;
    uint64_t v116 = sub_1C40611C0(v138, v139, v114, v146);
    swift_bridgeObjectRelease();
    sub_1C4059A80(v116);
    goto LABEL_77;
  }
  char v112 = sub_1C4112134(v110, v138);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v112) {
    goto LABEL_75;
  }
  uint64_t v115 = v139;
LABEL_77:
  uint64_t v117 = v136;
  swift_beginAccess();
  sub_1C410D0A4(v115);
  uint64_t v118 = v138;
  sub_1C410D0A4(v138);
  swift_endAccess();
  uint64_t v119 = *v117;
  swift_bridgeObjectRetain();
  uint64_t v120 = swift_bridgeObjectRetain();
  if ((sub_1C4113F94(v120, v115) & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_81;
  }
  char v121 = sub_1C4113F94(v119, v118);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v121 & 1) == 0)
  {
LABEL_81:
    uint64_t v126 = v135;
    sub_1C4496668();
    uint64_t v127 = v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_versionUUID;
    swift_beginAccess();
    uint64_t v125 = v131;
    uint64_t v123 = v132;
    goto LABEL_82;
  }
  uint64_t v122 = v146 + OBJC_IVAR____TtC9Coherence10CapsuleRef_versionUUID;
  swift_beginAccess();
  uint64_t v124 = v131;
  uint64_t v123 = v132;
  (*(void (**)(char *, uint64_t, uint64_t))(v131 + 16))(v135, v122, v132);
  uint64_t v125 = v124;
  uint64_t v126 = v135;
  uint64_t v127 = v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_versionUUID;
  swift_beginAccess();
LABEL_82:
  (*(void (**)(uint64_t, char *, uint64_t))(v125 + 24))(v127, v126, v123);
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v126, v123);
  uint64_t v128 = v179;
  if (*(void *)(v179 + 16))
  {
    uint64_t v129 = swift_bridgeObjectRetain();
    sub_1C3F80AD4(v129);
    swift_bridgeObjectRelease();
  }
  sub_1C4059A80(v128);
  uint64_t v130 = v136[1];
  uint64_t v163 = *v136;
  uint64_t v164 = v130;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C4231E00(&v163);
  swift_endAccess();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v168;
}

uint64_t sub_1C4059A80(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v13 >= v7) {
      goto LABEL_23;
    }
    unint64_t v14 = *(void *)(v3 + 8 * v13);
    ++v2;
    if (!v14)
    {
      int64_t v2 = v13 + 1;
      if (v13 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v14 = *(void *)(v3 + 8 * v2);
      if (!v14)
      {
        int64_t v2 = v13 + 2;
        if (v13 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        if (!v14)
        {
          int64_t v2 = v13 + 3;
          if (v13 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v14 = *(void *)(v3 + 8 * v2);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v14 - 1) & v14;
    unint64_t v9 = __clz(__rbit64(v14)) + (v2 << 6);
LABEL_5:
    uint64_t v10 = (uint64_t *)(*(void *)(v1 + 48) + 16 * v9);
    uint64_t v11 = *v10;
    unint64_t v12 = v10[1];
    sub_1C3F7E324(*v10, v12);
    sub_1C3F81BF8(v16, v11, v12);
    uint64_t result = sub_1C3F7E2CC(v16[0], v16[1]);
  }
  int64_t v15 = v13 + 4;
  if (v15 < v7)
  {
    unint64_t v14 = *(void *)(v3 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v2 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v14 = *(void *)(v3 + 8 * v2);
        ++v15;
        if (v14) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v15;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_1C4059C04(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  unint64_t v8 = a1[1];
  uint64_t v9 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v10 = *(void *)&v6[*(int *)(v4 + 28)];
  if (*(void *)(v10 + 16))
  {
    sub_1C3F7E324(v7, v8);
    sub_1C3F7E324(v7, v8);
    uint64_t v11 = sub_1C3F850CC(v7, v8);
    char v13 = v12;
    if (v12)
    {
      unint64_t v14 = (uint64_t *)(*(void *)(v10 + 56) + 48 * v11);
      uint64_t v16 = *v14;
      uint64_t v15 = v14[1];
      uint64_t v17 = v14[2];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v16 = 0;
      uint64_t v15 = 0;
      uint64_t v17 = 0;
    }
    sub_1C3F7E2CC(v7, v8);
    sub_1C3F7E2CC(v7, v8);
  }
  else
  {
    char v13 = 0;
    uint64_t v16 = 0;
    uint64_t v15 = 0;
    uint64_t v17 = 0;
  }
  sub_1C3F8F5D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  sub_1C3F84B88(v16, v15, v17);
  return v13 & 1;
}

uint64_t sub_1C4059DE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (*(void *)(a3 + 16)
    && (sub_1C3FB98C0(a1, a2, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50),
        (v5 & 1) != 0))
  {
    uint64_t result = swift_retain();
  }
  else
  {
    uint64_t result = 0;
  }
  *a4 = result;
  return result;
}

uint64_t sub_1C4059E60(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v9 = *v5;
  if (!*(void *)(v9 + 16)
    || (uint64_t v12 = sub_1C3FB98C0(a1, a2, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50), (v13 & 1) == 0)|| (v14 = *(void *)(*(void *)(v9 + 56) + 16 * v12 + 8), !swift_retain()))
  {
    if (a4 <= 0)
    {
      if (a4)
      {
LABEL_19:
        uint64_t result = sub_1C4497F58();
        __break(1u);
        return result;
      }
    }
    else
    {
      if (!a3 || (a5 & 1) != 0) {
        goto LABEL_19;
      }
      uint64_t v19 = *(void *)(a3 + 16);
      unint64_t v20 = *(void *)(a3 + 24);
      swift_retain();
      sub_1C3F7E324(v19, v20);
      sub_1C4414684(a3, a4, v19, v20);
    }
    return 0;
  }
  swift_release();
  BOOL v15 = __OFADD__(v14, a4);
  uint64_t v16 = v14 + a4;
  if (v15)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v16 < 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v16)
  {
    sub_1C3F7E324(a1, a2);
    uint64_t v18 = sub_1C4050298(v22, a1, a2);
    if (*v17) {
      v17[1] = v16;
    }
    ((void (*)(void *, void))v18)(v22, 0);
    sub_1C3F7E2CC(a1, a2);
    return 0;
  }
  sub_1C4116DC4(a1, a2, v22);
  swift_release();
  return 1;
}

uint64_t sub_1C405A078(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  unint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *a1;
  unint64_t v7 = a1[1];
  uint64_t v9 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v10 = *(void *)&v6[*(int *)(v4 + 28)];
  if (!*(void *)(v10 + 16)) {
    goto LABEL_6;
  }
  sub_1C3F7E324(v8, v7);
  uint64_t v11 = sub_1C3F850CC(v8, v7);
  if ((v12 & 1) == 0)
  {
    sub_1C3F7E2CC(v8, v7);
LABEL_6:
    sub_1C3F8F5D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    return 0;
  }
  uint64_t v13 = *(void *)(*(void *)(v10 + 56) + 48 * v11);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v8, v7);
  sub_1C3F8F5D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v13)
  {
    uint64_t v14 = type metadata accessor for RetainVisitor();
    uint64_t v15 = swift_allocObject();
    uint64_t v16 = MEMORY[0x1E4FBC860];
    unint64_t v17 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
    unint64_t v18 = sub_1C3F7E37C(v16);
    *(void *)(v15 + 16) = v17;
    *(void *)(v15 + 24) = v18;
    v21[3] = v14;
    v21[4] = &off_1F1F982A0;
    v21[0] = v15;
    uint64_t v19 = *(void (**)(void *))(*(void *)v13 + 120);
    swift_retain();
    v19(v21);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    swift_release();
    swift_beginAccess();
    uint64_t v13 = *(void *)(v15 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
  }
  return v13;
}

uint64_t sub_1C405A304(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  char v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v15 = v4 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v15, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v16 = *(void *)&v12[*(int *)(v10 + 28)];
  if (!*(void *)(v16 + 16)) {
    return sub_1C3F8F5D4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  }
  sub_1C3F7E324(v14, v13);
  uint64_t v17 = sub_1C3F850CC(v14, v13);
  if ((v18 & 1) == 0)
  {
    sub_1C3F7E2CC(v14, v13);
    return sub_1C3F8F5D4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  }
  uint64_t v22 = a4;
  uint64_t v19 = *(void *)(*(void *)(v16 + 56) + 48 * v17);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v14, v13);
  sub_1C3F8F5D4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v23 = v19;
    sub_1C4469148(a2, (uint64_t)&v23, a3, v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C405A4F0(void *a1, void *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v60 = a2;
  uint64_t v61 = a1;
  uint64_t v10 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v62 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v63 = (char *)&v58 - v13;
  uint64_t v15 = *a3;
  unint64_t v14 = a3[1];
  uint64_t v65 = *a4;
  uint64_t v17 = *a5;
  uint64_t v16 = a5[1];
  uint64_t v18 = v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  uint64_t v64 = v10;
  uint64_t v19 = *(int *)(v10 + 20);
  sub_1C3F7E324(v15, v14);
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v66[0] = *(void *)(v18 + v19);
  uint64_t v21 = v66[0];
  *(void *)(v18 + v19) = 0x8000000000000000;
  sub_1C3F7E324(v15, v14);
  unint64_t v23 = sub_1C3F850CC(v15, v14);
  uint64_t v24 = *(void *)(v21 + 16);
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
    goto LABEL_27;
  }
  char v6 = v22;
  if (*(void *)(v21 + 24) >= v26)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v22) {
        goto LABEL_8;
      }
      goto LABEL_28;
    }
LABEL_27:
    sub_1C3F85144();
    if (v6) {
      goto LABEL_8;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_1C3F77ABC(v26, isUniquelyReferenced_nonNull_native);
  uint64_t v27 = sub_1C3F850CC(v15, v14);
  if ((v6 & 1) == (v28 & 1))
  {
    unint64_t v23 = v27;
    if ((v6 & 1) == 0) {
      goto LABEL_28;
    }
LABEL_8:
    uint64_t v29 = (long long *)(*(void *)(v66[0] + 56) + 48 * v23);
    long long v30 = v29[1];
    long long v67 = *v29;
    long long v68 = v30;
    long long v69 = v29[2];
    uint64_t v31 = v67;
    if (!(void)v67)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    if (v65 != (void)v67)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        uint64_t v32 = (*(uint64_t (**)(void))(*(void *)v31 + 160))();
        uint64_t v59 = v16;
        uint64_t v33 = v17;
        uint64_t v34 = v32;
        *(void *)&long long v67 = v32;
        swift_release();
        uint64_t v31 = v34;
        uint64_t v17 = v33;
        uint64_t v16 = v59;
      }
      (*(void (**)(uint64_t))(*(void *)v31 + 96))(v65);
    }
    sub_1C410D0A4(v16);
    sub_1C410D0A4(v17);
    sub_1C3F84C64((uint64_t *)&v67, 1, v66, v23, v15, v14);
    sub_1C3F84B88(v67, *((uint64_t *)&v67 + 1), v68);
    sub_1C3F7E2CC(v15, v14);
    *(void *)(v18 + v19) = v66[0];
    *(void *)&long long v67 = v15;
    *((void *)&v67 + 1) = v14;
    sub_1C3F832BC((uint64_t *)&v67, 0);
    uint64_t v35 = *(void *)(v18 + v19);
    if (*(void *)(v35 + 16))
    {
      sub_1C3F7E324(v15, v14);
      uint64_t v36 = sub_1C3F850CC(v15, v14);
      if (v37)
      {
        char v38 = (uint64_t *)(*(void *)(v35 + 56) + 48 * v36);
        uint64_t v39 = *v38;
        uint64_t v40 = v38[1];
        uint64_t v41 = v38[2];
        uint64_t v42 = v38[3];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_1C3F7E2CC(v15, v14);
        if (v41)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C3F84B88(v39, v40, v41);
          *(void *)&long long v67 = v15;
          *((void *)&v67 + 1) = v14;
          v66[0] = v41;
          v66[1] = v42;
          sub_1C3F817F8((uint64_t *)&v67, v66);
          uint64_t v43 = *(void *)(v42 + 16);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v43)
          {
            uint64_t v44 = v64;
            sub_1C3F7E324(v15, v14);
            sub_1C3F81BF8((uint64_t *)&v67, v15, v14);
            sub_1C3F7E2CC(v67, *((unint64_t *)&v67 + 1));
LABEL_20:
            uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v63;
            swift_endAccess();
            sub_1C3F7E2CC(v15, v14);
            sub_1C3F8F450(v18, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
            uint64_t v45 = *(void *)(isUniquelyReferenced_nonNull_native + *(int *)(v44 + 20));
            if (!*(void *)(v45 + 16))
            {
LABEL_31:
              sub_1C3F8F5D4(isUniquelyReferenced_nonNull_native, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
              __break(1u);
              goto LABEL_32;
            }
            sub_1C3F7E324(v15, v14);
            uint64_t v46 = sub_1C3F850CC(v15, v14);
            if (v47)
            {
              uint64_t v48 = *(void *)(*(void *)(v45 + 56) + 48 * v46);
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1C3F7E2CC(v15, v14);
              sub_1C3F8F5D4(isUniquelyReferenced_nonNull_native, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v48)
              {
                *uint64_t v61 = v48;
                uint64_t v49 = v18;
                uint64_t v18 = v62;
                sub_1C3F8F450(v49, v62, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
                uint64_t v50 = *(void *)(v18 + *(int *)(v44 + 20));
                if (!*(void *)(v50 + 16))
                {
LABEL_34:
                  sub_1C3F8F5D4(v18, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
                  __break(1u);
                  goto LABEL_35;
                }
                sub_1C3F7E324(v15, v14);
                uint64_t v51 = sub_1C3F850CC(v15, v14);
                if (v52)
                {
                  uint64_t v53 = *(void *)(v50 + 56) + 48 * v51;
                  uint64_t v54 = *(void *)(v53 + 16);
                  uint64_t v55 = *(void *)(v53 + 24);
                  swift_retain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  sub_1C3F7E2CC(v15, v14);
                  sub_1C3F8F5D4(v18, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t result = swift_release();
                  uint64_t v57 = v60;
                  *uint64_t v60 = v54;
                  v57[1] = v55;
                  return result;
                }
LABEL_33:
                sub_1C3F7E2CC(v15, v14);
                goto LABEL_34;
              }
LABEL_32:
              __break(1u);
              goto LABEL_33;
            }
LABEL_30:
            sub_1C3F7E2CC(v15, v14);
            goto LABEL_31;
          }
        }
      }
      else
      {
        sub_1C3F7E2CC(v15, v14);
      }
    }
    uint64_t v44 = v64;
    sub_1C3F833F4(v15, v14, &v67);
    sub_1C3F6C6F0(v67, *((unint64_t *)&v67 + 1));
    goto LABEL_20;
  }
LABEL_35:
  uint64_t result = sub_1C4498558();
  __break(1u);
  return result;
}

uint64_t sub_1C405AB60@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  unint64_t v9 = a1[1];
  uint64_t v11 = v2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v12 = *(void *)&v8[*(int *)(v6 + 28)];
  if (!*(void *)(v12 + 16)) {
    goto LABEL_5;
  }
  sub_1C3F7E324(v10, v9);
  uint64_t v13 = sub_1C3F850CC(v10, v9);
  if ((v14 & 1) == 0)
  {
    sub_1C3F7E2CC(v10, v9);
LABEL_5:
    uint64_t result = sub_1C3F8F5D4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v15 = 0;
    goto LABEL_6;
  }
  uint64_t v15 = *(void *)(*(void *)(v12 + 56) + 48 * v13);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v10, v9);
  sub_1C3F8F5D4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_6:
  *a2 = v15;
  return result;
}

uint64_t sub_1C405AD24@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets);
  uint64_t result = swift_beginAccess();
  uint64_t v9 = *v7;
  if (*(void *)(v9 + 16))
  {
    sub_1C3F7E324(a1, a2);
    uint64_t v10 = sub_1C3FB98C0(a1, a2, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
    if (v11)
    {
      uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 16 * v10);
      swift_retain();
      uint64_t result = sub_1C3F7E2CC(a1, a2);
      if (v12)
      {
        uint64_t result = swift_endAccess();
        *a3 = v12;
        return result;
      }
    }
    else
    {
      uint64_t result = sub_1C3F7E2CC(a1, a2);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C405AE10(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *v2;
  if (*(void *)(v7 + 16))
  {
    swift_retain();
    sub_1C3F7E324(v5, v6);
    uint64_t v8 = sub_1C3FB98C0(v5, v6, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
    if (v9)
    {
      uint64_t v10 = *(void *)(*(void *)(v7 + 56) + 16 * v8);
      swift_retain();
      sub_1C3F7E2CC(v5, v6);
      swift_release();
      swift_release();
      if (!v10) {
        goto LABEL_6;
      }
      __break(1u);
    }
    sub_1C3F7E2CC(v5, v6);
    swift_release();
  }
LABEL_6:
  swift_retain();
  sub_1C3F7E324(v5, v6);
  return sub_1C4414684(a1, a2, v5, v6);
}

uint64_t sub_1C405AF24@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v10 = v9 - 8;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v4 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v13, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v14 = *(void *)&v12[*(int *)(v10 + 28)];
  if (!*(void *)(v14 + 16)) {
    goto LABEL_7;
  }
  sub_1C3F7E324(a1, a2);
  uint64_t v15 = sub_1C3F850CC(a1, a2);
  if ((v16 & 1) == 0)
  {
    sub_1C3F7E2CC(a1, a2);
LABEL_7:
    uint64_t result = sub_1C3F8F5D4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    a4[1] = 0;
    a4[2] = 0;
    *a4 = 0;
    return result;
  }
  uint64_t v17 = (uint64_t *)(*(void *)(v14 + 56) + 48 * v15);
  uint64_t v18 = *v17;
  uint64_t v19 = v17[2];
  uint64_t v20 = v17[3];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(a1, a2);
  uint64_t result = sub_1C3F8F5D4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  if (!a3)
  {
    if (v18)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *a4 = v18;
      goto LABEL_10;
    }
LABEL_13:
    __break(1u);
    return result;
  }
  if (!v18)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v22 = swift_retain();
  sub_1C405B848(v22, v18, &v24);
  swift_release();
  uint64_t v23 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *a4 = v23;
LABEL_10:
  a4[1] = v19;
  a4[2] = v20;
  return result;
}

uint64_t sub_1C405B148@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v43 = a4;
  uint64_t v44 = a2;
  uint64_t v9 = sub_1C4497B38();
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v39 - v11;
  uint64_t v47 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v16 = v15 - 8;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  unint64_t v19 = a1[1];
  uint64_t v21 = v5 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v21, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v22 = *(void *)&v18[*(int *)(v16 + 28)];
  if (!*(void *)(v22 + 16)) {
    goto LABEL_7;
  }
  sub_1C3F7E324(v20, v19);
  uint64_t v23 = sub_1C3F850CC(v20, v19);
  if ((v24 & 1) == 0)
  {
    sub_1C3F7E2CC(v20, v19);
LABEL_7:
    uint64_t result = sub_1C3F8F5D4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    a5[1] = 0;
    a5[2] = 0;
    *a5 = 0;
    return result;
  }
  v39[0] = v14;
  BOOL v25 = (uint64_t *)(*(void *)(v22 + 56) + 48 * v23);
  uint64_t v26 = v25[2];
  uint64_t v27 = v25[3];
  uint64_t v28 = v25[4];
  uint64_t v29 = v25[5];
  uint64_t v42 = *v25;
  swift_retain();
  uint64_t v41 = v26;
  swift_bridgeObjectRetain();
  uint64_t v40 = v27;
  swift_bridgeObjectRetain();
  v39[2] = v28;
  swift_bridgeObjectRetain();
  v39[1] = v29;
  swift_bridgeObjectRetain();
  sub_1C3F7E2CC(v20, v19);
  sub_1C3F8F5D4((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v30 = v45;
  uint64_t v31 = v46;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v12, v44, v46);
  uint64_t v32 = v47;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v12, 1, a3) != 1)
  {
    uint64_t v36 = v39[0];
    uint64_t result = (*(uint64_t (**)(void, char *, uint64_t))(v32 + 32))(v39[0], v12, a3);
    if (v42)
    {
      uint64_t v48 = v42;
      sub_1C44560B8(v36, a3, v43, &v49);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v36, a3);
      uint64_t v37 = v49;
      uint64_t v38 = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *a5 = v37;
      a5[1] = v38;
      goto LABEL_10;
    }
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  uint64_t v34 = v42;
  if (!v42)
  {
    __break(1u);
    goto LABEL_13;
  }
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v35 = v41;
  *a5 = v34;
  a5[1] = v35;
LABEL_10:
  a5[2] = v40;
  return result;
}

uint64_t sub_1C405B518@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)a1 == *(void *)a2)
  {
    *a3 = a2;
    return swift_retain();
  }
  else
  {
    uint64_t v15 = 0;
    memset(v14, 0, sizeof(v14));
    id v5 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v14);
    sub_1C3F962E0((uint64_t)v14, qword_1EBBC0C90);
    type metadata accessor for CREncoder();
    uint64_t v6 = swift_allocObject();
    uint64_t v7 = MEMORY[0x1E4FBC860];
    uint64_t v8 = MEMORY[0x1E4FBC868];
    *(void *)(v6 + 32) = MEMORY[0x1E4FBC868];
    *(void *)(v6 + 40) = v7;
    *(void *)(v6 + 48) = v7;
    *(void *)(v6 + 56) = v8;
    *(void *)(v6 + 64) = v7;
    *(void *)(v6 + 80) = 0;
    *(void *)(v6 + 88) = 0;
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v7;
    *(unsigned char *)(v6 + 72) = 2;
    uint64_t v9 = *(void (**)(uint64_t))(*(void *)a2 + 176);
    id v10 = v5;
    v9(v6);
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    uint64_t v11 = swift_retain();
    uint64_t v12 = sub_1C4017E00(v11);
    swift_release();
    (*(void (**)(uint64_t))(*(void *)a1 + 168))(v12);

    swift_release();
    return swift_release();
  }
}

uint64_t sub_1C405B848@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *(void *)&v15[0] = a2;
  if ((*(uint64_t (**)(_OWORD *))(*(void *)a1 + 120))(v15))
  {
    *a3 = a2;
    return swift_retain();
  }
  else
  {
    uint64_t v16 = 0;
    memset(v15, 0, sizeof(v15));
    id v7 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v15);
    sub_1C3F962E0((uint64_t)v15, qword_1EBBC0C90);
    type metadata accessor for CREncoder();
    uint64_t v8 = swift_allocObject();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    uint64_t v10 = MEMORY[0x1E4FBC868];
    *(void *)(v8 + 32) = MEMORY[0x1E4FBC868];
    *(void *)(v8 + 40) = v9;
    *(void *)(v8 + 48) = v9;
    *(void *)(v8 + 56) = v10;
    *(void *)(v8 + 64) = v9;
    *(void *)(v8 + 80) = 0;
    *(void *)(v8 + 88) = 0;
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v9;
    *(unsigned char *)(v8 + 72) = 2;
    uint64_t v11 = *(void (**)(uint64_t))(*(void *)a2 + 176);
    id v12 = v7;
    v11(v8);
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    uint64_t v13 = swift_retain();
    uint64_t v14 = sub_1C4017E00(v13);
    swift_release();
    (*(void (**)(uint64_t))(*(void *)a1 + 112))(v14);

    swift_release();
    return swift_release();
  }
}

uint64_t sub_1C405BB78@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);
  uint64_t result = sub_1C405AF24(v2, v3, a1, (uint64_t *)&v13);
  unint64_t v5 = v13;
  if ((void)v13)
  {
    uint64_t v7 = *((void *)&v13 + 1);
    uint64_t v6 = v14;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = MEMORY[0x1E4FBC860];
    unint64_t v9 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
    unint64_t v10 = sub_1C3F7E37C(v8);
    sub_1C3F7E4A4(v8);
    sub_1C3F7E37C(v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    long long v13 = v5;
    uint64_t v14 = v7;
    uint64_t v15 = v6;
    unint64_t v16 = v9;
    unint64_t v17 = v10;
    v12[0] = v2;
    v12[1] = v3;
    swift_beginAccess();
    sub_1C3F7E324(v2, v3);
    sub_1C3F6C8F4(&v13, v12);
    swift_endAccess();
    swift_release();
    sub_1C3F7E2CC(v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    *a2 = v7;
    a2[1] = v6;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1C405BCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  void *(*v10)(long long *__return_ptr, void *, uint64_t *, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v11;
  void *result;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  void v20[3];
  uint64_t v21[2];
  long long v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;

  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  v20[0] = v9;
  v20[1] = v8;
  v21[0] = a1;
  unint64_t v10 = *(void *(**)(long long *__return_ptr, void *, uint64_t *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(a3 + 48);
  uint64_t v11 = type metadata accessor for AnyReference();
  uint64_t result = v10(&v22, v20, v21, v11, &off_1F1F96DD8, a2, a3);
  if (!v4)
  {
    unint64_t v19 = v8;
    long long v13 = v22;
    if ((void)v22)
    {
      uint64_t v15 = *((void *)&v22 + 1);
      uint64_t v14 = v23;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v16 = MEMORY[0x1E4FBC860];
      unint64_t v17 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
      uint64_t v18 = sub_1C3F7E37C(v16);
      sub_1C3F7E4A4(v16);
      sub_1C3F7E37C(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      uint64_t v22 = v13;
      uint64_t v23 = v15;
      char v24 = v14;
      BOOL v25 = v17;
      uint64_t v26 = v18;
      v21[0] = v9;
      v21[1] = v19;
      swift_beginAccess();
      sub_1C3F7E324(v9, v19);
      sub_1C3F6C8F4(&v22, v21);
      swift_endAccess();
      swift_release();
      sub_1C3F7E2CC(v9, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = (void *)swift_release();
      *a4 = v15;
      a4[1] = v14;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1C405BECC(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v4 = v3 - 8;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v8 = a1[1];
  uint64_t v9 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  sub_1C3F8F450(v9, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v10 = *(void *)&v6[*(int *)(v4 + 28)];
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_1C40615F4(v11);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C3F8F5D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v34 = MEMORY[0x1E4FBC860];
  sub_1C4012680(0, 0, 0);
  uint64_t v13 = v34;
  uint64_t v25 = v10;
  uint64_t v26 = v12;
  long long v27 = xmmword_1C449E3E0;
  long long v28 = 0u;
  long long v29 = 0u;
  uint64_t v30 = v7;
  uint64_t v31 = v8;
  char v32 = 0;
  uint64_t v33 = 0;
  swift_bridgeObjectRetain();
  v21[0] = v12;
  swift_bridgeObjectRetain();
  sub_1C407D584(0xF000000000000007);
  v21[2] = v7;
  swift_bridgeObjectRetain();
  v21[1] = v8;
  swift_bridgeObjectRetain();
  sub_1C423170C(&v22);
  if (v24)
  {
    uint64_t v14 = v23;
    do
    {
      uint64_t v15 = v22;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v34 = v13;
      unint64_t v17 = *(void *)(v13 + 16);
      unint64_t v16 = *(void *)(v13 + 24);
      if (v17 >= v16 >> 1)
      {
        sub_1C4012680(v16 > 1, v17 + 1, 1);
        uint64_t v13 = v34;
      }
      *(void *)(v13 + 16) = v17 + 1;
      uint64_t v18 = v13 + 16 * v17;
      *(void *)(v18 + 32) = v15;
      *(void *)(v18 + 40) = v14;
      sub_1C423170C(&v22);
      uint64_t v14 = v23;
    }
    while (v24);
  }
  uint64_t v19 = *((void *)&v27 + 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C407D5A0(v19);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1C407D5A0(0xF000000000000007);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t *sub_1C405C1D8(uint64_t *result)
{
  uint64_t v2 = *result;
  if (!*result) {
    return result;
  }
  uint64_t v40 = v2 + 64;
  uint64_t v3 = result[1];
  uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v2 + 64);
  uint64_t v7 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  int64_t v41 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = (uint64_t *)swift_bridgeObjectRetain();
  int64_t v42 = 0;
  if (!v6) {
    goto LABEL_9;
  }
LABEL_7:
  unint64_t v8 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v9 = v8 | (v42 << 6);
LABEL_8:
  uint64_t v10 = *(void *)(v2 + 56);
  uint64_t v11 = (void *)(*(void *)(v2 + 48) + 16 * v9);
  unint64_t v12 = v11[1];
  *(void *)&long long v47 = *v11;
  uint64_t v13 = v47;
  *((void *)&v47 + 1) = v12;
  sub_1C3F5E790(v10 + 32 * v9, (uint64_t)v48);
  sub_1C3F7E324(v13, v12);
  while (1)
  {
    sub_1C3F961BC((uint64_t)&v47, (uint64_t)&v49, &qword_1EA39CBA0);
    if (!v52) {
      break;
    }
    uint64_t v18 = v49;
    unint64_t v17 = v50;
    sub_1C3FF2864(&v51, &v47);
    swift_beginAccess();
    uint64_t v19 = *(void *)(*(void *)(v7 + *(int *)(type metadata accessor for PartiallyOrderedReferenceMap() + 20)) + 16);
    sub_1C3F7E324(v18, v17);
    if (v19 && (sub_1C3F850CC(v18, v17), (v20 & 1) != 0))
    {
      swift_endAccess();
      sub_1C3F7E2CC(v18, v17);
      swift_beginAccess();
      uint64_t v45 = v18;
      unint64_t v46 = v17;
      sub_1C3F7E324(v18, v17);
      uint64_t v22 = sub_1C3F84D7C(v44, &v45);
      if (v21[2])
      {
        uint64_t v23 = v21;
        sub_1C3F5E790((uint64_t)&v47, (uint64_t)v43);
        uint64_t result = *v23;
        if (!*v23) {
          goto LABEL_64;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          *uint64_t v23 = (uint64_t *)(*(uint64_t (**)(void))(**v23 + 160))();
          swift_release();
        }
        (*(void (**)(uint64_t *))(**v23 + 136))(v43);
        ((void (*)(unint64_t *, void))v22)(v44, 0);
        swift_endAccess();
        sub_1C3F962E0((uint64_t)v43, (uint64_t *)&unk_1EA39AE20);
        sub_1C3F7E2CC(v45, v46);
      }
      else
      {
        ((void (*)(unint64_t *, void))v22)(v44, 0);
        sub_1C3F7E2CC(v45, v46);
        swift_endAccess();
      }
      swift_beginAccess();
      sub_1C3F7E324(v18, v17);
      sub_1C3F81BF8(v43, v18, v17);
      swift_endAccess();
      sub_1C3F7E2CC(v18, v17);
      sub_1C3F7E2CC(v43[0], v43[1]);
      uint64_t result = (uint64_t *)__swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
      if (v6) {
        goto LABEL_7;
      }
    }
    else
    {
      swift_endAccess();
      sub_1C3F7E2CC(v18, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v47);
      uint64_t result = (uint64_t *)sub_1C3F7E2CC(v18, v17);
      if (v6) {
        goto LABEL_7;
      }
    }
LABEL_9:
    int64_t v14 = v42 + 1;
    if (__OFADD__(v42, 1))
    {
LABEL_61:
      __break(1u);
      goto LABEL_62;
    }
    if (v14 < v41)
    {
      unint64_t v15 = *(void *)(v40 + 8 * v14);
      if (v15) {
        goto LABEL_12;
      }
      int64_t v16 = v42 + 2;
      ++v42;
      if (v14 + 1 < v41)
      {
        unint64_t v15 = *(void *)(v40 + 8 * v16);
        if (v15) {
          goto LABEL_15;
        }
        int64_t v42 = v14 + 1;
        if (v14 + 2 < v41)
        {
          unint64_t v15 = *(void *)(v40 + 8 * (v14 + 2));
          if (v15)
          {
            v14 += 2;
            goto LABEL_12;
          }
          int64_t v16 = v14 + 3;
          int64_t v42 = v14 + 2;
          if (v14 + 3 < v41)
          {
            unint64_t v15 = *(void *)(v40 + 8 * v16);
            if (v15)
            {
LABEL_15:
              int64_t v14 = v16;
LABEL_12:
              unint64_t v6 = (v15 - 1) & v15;
              unint64_t v9 = __clz(__rbit64(v15)) + (v14 << 6);
              int64_t v42 = v14;
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v14 = v16 + 1;
              if (__OFADD__(v16, 1)) {
                goto LABEL_63;
              }
              if (v14 >= v41) {
                break;
              }
              unint64_t v15 = *(void *)(v40 + 8 * v14);
              ++v16;
              if (v15) {
                goto LABEL_12;
              }
            }
            int64_t v42 = v41 - 1;
          }
        }
      }
    }
    unint64_t v6 = 0;
    memset(v48, 0, sizeof(v48));
    long long v47 = 0u;
  }
  swift_release();
  uint64_t v24 = v3 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & *(void *)(v3 + 64);
  int64_t v28 = (unint64_t)(v25 + 63) >> 6;
  uint64_t result = (uint64_t *)swift_bridgeObjectRetain();
  int64_t v29 = 0;
  while (1)
  {
    if (v27)
    {
      unint64_t v30 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      unint64_t v31 = v30 | (v29 << 6);
      goto LABEL_42;
    }
    int64_t v35 = v29 + 1;
    if (__OFADD__(v29, 1))
    {
      __break(1u);
      goto LABEL_61;
    }
    if (v35 >= v28) {
      goto LABEL_58;
    }
    unint64_t v36 = *(void *)(v24 + 8 * v35);
    ++v29;
    if (!v36)
    {
      int64_t v29 = v35 + 1;
      if (v35 + 1 >= v28) {
        goto LABEL_58;
      }
      unint64_t v36 = *(void *)(v24 + 8 * v29);
      if (!v36)
      {
        int64_t v29 = v35 + 2;
        if (v35 + 2 >= v28) {
          goto LABEL_58;
        }
        unint64_t v36 = *(void *)(v24 + 8 * v29);
        if (!v36) {
          break;
        }
      }
    }
LABEL_57:
    unint64_t v27 = (v36 - 1) & v36;
    unint64_t v31 = __clz(__rbit64(v36)) + (v29 << 6);
LABEL_42:
    char v32 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v31);
    uint64_t v33 = *v32;
    unint64_t v34 = v32[1];
    v44[0] = *(void *)(*(void *)(v3 + 56) + 8 * v31);
    *(void *)&long long v47 = v33;
    *((void *)&v47 + 1) = v34;
    sub_1C3F7E324(v33, v34);
    swift_retain();
    sub_1C405118C(v44, (uint64_t *)&v47, &v49);
    sub_1C3F7E2CC(v33, v34);
    sub_1C3F7E2CC(v49, v50);
    uint64_t result = (uint64_t *)swift_release();
  }
  int64_t v37 = v35 + 3;
  if (v37 >= v28)
  {
LABEL_58:
    swift_release();
    unint64_t v38 = sub_1C3F758A0(MEMORY[0x1E4FBC860]);
    uint64_t v39 = (unint64_t *)(v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_caches);
    swift_beginAccess();
    unint64_t *v39 = v38;
    return (uint64_t *)swift_bridgeObjectRelease();
  }
  unint64_t v36 = *(void *)(v24 + 8 * v37);
  if (v36)
  {
    int64_t v29 = v37;
    goto LABEL_57;
  }
  while (1)
  {
    int64_t v29 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v29 >= v28) {
      goto LABEL_58;
    }
    unint64_t v36 = *(void *)(v24 + 8 * v29);
    ++v37;
    if (v36) {
      goto LABEL_57;
    }
  }
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
  return result;
}

uint64_t sub_1C405C7D8(void (*a1)(uint64_t))
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
  swift_beginAccess();
  a1(v3);
  return swift_endAccess();
}

uint64_t sub_1C405C850(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_versionUUID;
  swift_beginAccess();
  uint64_t v4 = sub_1C4496678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1C405C8F0(uint64_t a1)
{
  return sub_1C3F80AD4(a1);
}

uint64_t sub_1C405C918(void *a1, void *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  return sub_1C405A4F0(a1, a2, a3, a4, a5);
}

uint64_t sub_1C405C940@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C405AB60(a1, a2);
}

void *sub_1C405C968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, void *a4@<X8>)
{
  return sub_1C405BCF8(a1, a2, a3, a4);
}

BOOL sub_1C405C980(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets);
  swift_beginAccess();
  uint64_t v6 = *v5;
  sub_1C3F7E324(a1, a2);
  sub_1C4059DE8(a1, a2, v6, &v9);
  uint64_t v7 = v9;
  swift_endAccess();
  sub_1C3F7E2CC(a1, a2);
  if (v7) {
    swift_release();
  }
  return v7 != 0;
}

uint64_t sub_1C405CA30(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  sub_1C405AE10(v1, 0);
  return swift_endAccess();
}

uint64_t sub_1C405CAA0(uint64_t *a1)
{
  return sub_1C405A078(a1);
}

uint64_t sub_1C405CAC8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C405A304(a1, a2, a3, a4);
}

uint64_t sub_1C405CAF0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  v5[0] = v3;
  v5[1] = v2;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C4231E00(v5);
  swift_endAccess();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C405CB9C(uint64_t *a1, uint64_t a2)
{
  return sub_1C3F844E8(a1, a2);
}

uint64_t sub_1C405CBC8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 16);
  unint64_t v5 = *(void *)(*a1 + 24);
  swift_beginAccess();
  swift_retain();
  sub_1C3F7E324(v4, v5);
  char v6 = sub_1C4059E60(v4, v5, v3, a2, 0);
  swift_endAccess();
  swift_release();
  sub_1C3F7E2CC(v4, v5);
  return v6 & 1;
}

uint64_t sub_1C405CC88@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1C405B148(a1, a2, a3, a4, a5);
}

uint64_t sub_1C405CCB4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C405BECC(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1C405CCF0(uint64_t *a1)
{
  return sub_1C4059C04(a1) & 1;
}

uint64_t sub_1C405CD18@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C405AD24(a1, a2, a3);
}

uint64_t Capsule.Ref.subscript.getter(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_1C405CEFC(a1, a2, a3, (void (*)(uint64_t *, uint64_t, uint64_t))sub_1C4054DC4);
}

{
  return sub_1C405CEFC(a1, a2, a3, (void (*)(uint64_t *, uint64_t, uint64_t))sub_1C405557C);
}

uint64_t Capsule.Ref.subscript.setter(uint64_t a1, long long *a2, uint64_t a3)
{
  sub_1C407C8E4(a1, a2, a3);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);
  return v5(a1, a3);
}

void (*Capsule.Ref.subscript.modify(void *a1, uint64_t *a2, uint64_t a3))(void *a1)
{
  uint64_t v7 = malloc(0x40uLL);
  *a1 = v7;
  uint64_t v9 = *a2;
  unint64_t v8 = a2[1];
  uint64_t v10 = *(void *)(v3 + *(void *)(*(void *)v3 + 112));
  v7[4] = v9;
  v7[5] = v8;
  v7[6] = v10;
  swift_retain();
  sub_1C3F7E324(v9, v8);
  v7[7] = sub_1C4055044(v7, v7 + 4, a3);
  return sub_1C405CE88;
}

void sub_1C405CE88(void *a1)
{
  uint64_t v1 = *a1;
  (*(void (**)(void, void))(*a1 + 56))(*a1, 0);
  swift_release();
  sub_1C3F7E2CC(*(void *)(v1 + 32), *(void *)(v1 + 40));
  free((void *)v1);
}

uint64_t sub_1C405CEFC(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t *, uint64_t, uint64_t))
{
  unint64_t v8 = a1[1];
  v10[0] = *a1;
  uint64_t v7 = v10[0];
  v10[1] = v8;
  swift_retain();
  sub_1C3F7E324(v10[0], v8);
  a4(v10, a2, a3);
  swift_release();
  return sub_1C3F7E2CC(v7, v8);
}

uint64_t sub_1C405CFB4(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v5 = *(uint64_t *)((char *)a2 + a3 - 24);
  uint64_t v6 = *(uint64_t *)((char *)a2 + a3 - 8);
  uint64_t v7 = *a2;
  unint64_t v8 = a2[1];
  v10[0] = v7;
  v10[1] = v8;
  sub_1C3F7E324(v7, v8);
  a4(v10, v5, v6);
  return sub_1C3F7E2CC(v7, v8);
}

uint64_t sub_1C405D04C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t *, uint64_t, uint64_t))
{
  uint64_t v7 = *(uint64_t *)((char *)a3 + a4 - 24);
  uint64_t v8 = *(uint64_t *)((char *)a3 + a4 - 8);
  unint64_t v9 = a3[1];
  v11[0] = *a3;
  v11[1] = v9;
  sub_1C3F7E324(v11[0], v9);
  return a5(a1, v11, v7, v8);
}

uint64_t Capsule.Ref.subscript.setter(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1C407C96C(a1, a2, a3, a4);
  uint64_t v5 = sub_1C4497B38();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(a1, v5);
}

void (*Capsule.Ref.subscript.modify(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4))(uint64_t **a1, char a2)
{
  unint64_t v9 = malloc(0x48uLL);
  *a1 = v9;
  v9[1] = a4;
  void v9[2] = v4;
  *unint64_t v9 = a3;
  uint64_t v10 = sub_1C4497B38();
  v9[3] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  void v9[4] = v11;
  size_t v12 = *(void *)(v11 + 64);
  v9[5] = malloc(v12);
  uint64_t v13 = malloc(v12);
  uint64_t v14 = *a2;
  unint64_t v15 = a2[1];
  v9[6] = v13;
  v9[7] = v14;
  v9[8] = v15;
  v17[0] = v14;
  v17[1] = v15;
  sub_1C3F7E324(v14, v15);
  Capsule.Ref.subscript.getter(v17, a3, a4);
  return sub_1C405D248;
}

void sub_1C405D248(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = (*a1)[7];
  uint64_t v3 = (*a1)[8];
  uint64_t v5 = (void *)(*a1)[5];
  uint64_t v6 = (void *)(*a1)[6];
  uint64_t v7 = (*a1)[3];
  uint64_t v8 = (*a1)[4];
  uint64_t v9 = (*a1)[1];
  uint64_t v10 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v8 + 16))((*a1)[5], v6, v7);
    uint64_t v12 = v4;
    uint64_t v13 = v3;
    sub_1C407C96C((uint64_t)v5, &v12, v10, v9);
    uint64_t v11 = *(void (**)(void *, uint64_t))(v8 + 8);
    v11(v5, v7);
    v11(v6, v7);
  }
  else
  {
    uint64_t v12 = (*a1)[7];
    uint64_t v13 = v3;
    sub_1C407C96C((uint64_t)v6, &v12, v10, v9);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v6, v7);
  }
  free(v6);
  free(v5);
  free(v2);
}

uint64_t Capsule.Ref.import<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C405D430(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C4055CC4);
}

{
  return sub_1C405D430(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C4057218);
}

uint64_t Capsule.Ref.import<A, B>(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_retain();
  sub_1C405609C(a1, a2, a3, a4, a5);
  return swift_release();
}

uint64_t sub_1C405D430(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  swift_retain();
  a4(a1, a2, a3);
  return swift_release();
}

uint64_t Capsule.Ref.merge<A>(_:)(uint64_t a1)
{
  swift_retain();
  sub_1C4057AC0(a1);
  return swift_release();
}

uint64_t Capsule.Ref.apply(_:)(long long *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  long long v3 = *a1;
  uint64_t v4 = v1;
  swift_retain();
  sub_1C405C1D8((uint64_t *)&v3);
  return swift_release();
}

uint64_t Capsule.Ref<>.rootID.getter@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 24);
  if (v2 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v3 = *(void *)(v1 + 16);
    *a1 = v3;
    a1[1] = v2;
    return sub_1C3F7E324(v3, v2);
  }
  return result;
}

uint64_t Capsule.Ref<>.root.setter(uint64_t a1)
{
  uint64_t v3 = *v1;
  sub_1C407CA8C(a1);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 8);
  return v4(a1);
}

uint64_t Capsule.Ref<>.subscript.getter@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = &v11[-v7];
  Capsule.Ref<>.root.getter();
  uint64_t v9 = (void (*)(unsigned char *, void))swift_readAtKeyPath();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*MEMORY[0x1E4FBBC10] + v4 + 8) - 8) + 16))(a2);
  v9(v11, 0);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1C405D7AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  swift_retain();
  sub_1C407CDCC(a1, v4);
  return swift_release();
}

uint64_t Capsule.Ref<>.subscript.setter(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  sub_1C407CDCC(a1, (uint64_t)a2);
  swift_release();
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*MEMORY[0x1E4FBBC10] + v3 + 8) - 8) + 8);
  return v4(a1);
}

uint64_t Capsule.Ref<>.root.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = sub_1C4497B38();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = (uint64_t)v1 + *(void *)(v3 + 104);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  uint64_t v10 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v4);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a1, v8, v4);
  }
  __break(1u);
  return result;
}

uint64_t Capsule.Ref<>.subscript.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v7 - v4;
  Capsule.Ref<>.root.getter((uint64_t)&v7 - v4);
  swift_getAtKeyPath();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1C405DB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v100 = a1;
  uint64_t v95 = a3;
  uint64_t v110 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v6 = MEMORY[0x1F4188790](v110);
  uint64_t v107 = (uint64_t)&v88 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v88 - v8;
  uint64_t v10 = (uint64_t *)(a2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v12 = *v10;
  unint64_t v11 = v10[1];
  uint64_t v111 = v12;
  unint64_t v112 = v11;
  swift_bridgeObjectRetain();
  unint64_t v93 = v11;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C405BECC(&v111);
  uint64_t v14 = sub_1C411EDFC(v13);
  swift_bridgeObjectRelease();
  uint64_t v115 = v14;
  unint64_t v15 = (uint64_t *)(v4 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v16 = *v15;
  unint64_t v17 = v15[1];
  uint64_t v92 = v15;
  uint64_t v111 = v16;
  unint64_t v112 = v17;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v98 = a2;
  uint64_t v18 = sub_1C405BECC(&v111);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void *)(v18 + 16);
  uint64_t v104 = v9;
  uint64_t v94 = v12;
  if (v19)
  {
    char v20 = (unint64_t *)(v18 + 40);
    do
    {
      uint64_t v21 = *(v20 - 1);
      unint64_t v22 = *v20;
      sub_1C3F7E324(v21, *v20);
      sub_1C3F81BF8(&v111, v21, v22);
      sub_1C3F7E2CC(v111, v112);
      v20 += 2;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
    uint64_t v23 = v115;
    uint64_t v9 = v104;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v23 = v14;
  }
  uint64_t v24 = swift_allocObject();
  uint64_t v97 = v24;
  *(void *)(v24 + 16) = MEMORY[0x1E4FBC870];
  uint64_t v91 = v24 + 16;
  uint64_t v25 = v23 + 56;
  uint64_t v26 = 1 << *(unsigned char *)(v23 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & *(void *)(v23 + 56);
  uint64_t v29 = v4 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  uint64_t v30 = v98 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  uint64_t v109 = v29;
  swift_beginAccess();
  uint64_t v103 = v30;
  uint64_t result = swift_beginAccess();
  int64_t v32 = 0;
  int64_t v108 = (unint64_t)(v26 + 63) >> 6;
  uint64_t v96 = MEMORY[0x1E4FBC868];
  uint64_t v99 = MEMORY[0x1E4FBC868];
  uint64_t v102 = v23;
  uint64_t v101 = v23 + 56;
  if (v28) {
    goto LABEL_12;
  }
LABEL_13:
  int64_t v35 = v32 + 1;
  if (!__OFADD__(v32, 1))
  {
    if (v35 >= v108) {
      goto LABEL_42;
    }
    unint64_t v36 = *(void *)(v25 + 8 * v35);
    ++v32;
    if (!v36)
    {
      int64_t v32 = v35 + 1;
      if (v35 + 1 >= v108) {
        goto LABEL_42;
      }
      unint64_t v36 = *(void *)(v25 + 8 * v32);
      if (!v36)
      {
        int64_t v32 = v35 + 2;
        if (v35 + 2 >= v108) {
          goto LABEL_42;
        }
        unint64_t v36 = *(void *)(v25 + 8 * v32);
        if (!v36)
        {
          int64_t v37 = v35 + 3;
          if (v37 < v108)
          {
            unint64_t v36 = *(void *)(v25 + 8 * v37);
            if (v36)
            {
              int64_t v32 = v37;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v32 = v37 + 1;
              if (__OFADD__(v37, 1)) {
                goto LABEL_49;
              }
              if (v32 >= v108) {
                break;
              }
              unint64_t v36 = *(void *)(v25 + 8 * v32);
              ++v37;
              if (v36) {
                goto LABEL_26;
              }
            }
          }
LABEL_42:
          swift_release();
          uint64_t v75 = v96;
          uint64_t v76 = v94;
          uint64_t v77 = v93;
          unint64_t v78 = v92;
          if (!*(void *)(v96 + 16))
          {
            uint64_t v79 = *v92;
            swift_bridgeObjectRetain();
            uint64_t v80 = swift_bridgeObjectRetain();
            if (sub_1C4112134(v80, v77))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {
              char v81 = sub_1C4112134(v79, v76);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v81 & 1) == 0)
              {
                swift_release();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t result = swift_bridgeObjectRelease();
                uint64_t v87 = v95;
                v95[6] = 0;
                *((_OWORD *)v87 + 1) = 0u;
                *((_OWORD *)v87 + 2) = 0u;
                *(_OWORD *)uint64_t v87 = 0u;
                return result;
              }
            }
          }
          uint64_t v82 = *v78;
          uint64_t v83 = v78[1];
          swift_beginAccess();
          uint64_t v84 = *(void *)(v97 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t result = swift_release();
          uint64_t v85 = v95;
          *uint64_t v95 = v82;
          v85[1] = v83;
          v85[2] = v76;
          uint64_t v85[3] = v77;
          uint64_t v86 = v99;
          v85[4] = v75;
          v85[5] = v86;
          v85[6] = v84;
          return result;
        }
      }
    }
LABEL_26:
    unint64_t v28 = (v36 - 1) & v36;
    for (unint64_t i = __clz(__rbit64(v36)) + (v32 << 6); ; unint64_t i = v33 | (v32 << 6))
    {
      unint64_t v38 = (uint64_t *)(*(void *)(v23 + 48) + 16 * i);
      uint64_t v40 = *v38;
      unint64_t v39 = v38[1];
      sub_1C3F8F450(v109, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v41 = *(void *)&v9[*(int *)(v110 + 20)];
      uint64_t v42 = *(void *)(v41 + 16);
      sub_1C3F7E324(v40, v39);
      if (!v42) {
        goto LABEL_11;
      }
      sub_1C3F7E324(v40, v39);
      uint64_t v43 = sub_1C3F850CC(v40, v39);
      if ((v44 & 1) == 0)
      {
        sub_1C3F7E2CC(v40, v39);
LABEL_11:
        sub_1C3F8F5D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
        uint64_t result = sub_1C3F7E2CC(v40, v39);
        if (!v28) {
          goto LABEL_13;
        }
        goto LABEL_12;
      }
      int64_t v105 = v32;
      uint64_t v45 = (uint64_t *)(*(void *)(v41 + 56) + 48 * v43);
      uint64_t v46 = *v45;
      uint64_t v47 = v45[2];
      uint64_t v48 = v45[3];
      swift_retain();
      uint64_t v49 = v47;
      swift_bridgeObjectRetain();
      uint64_t v106 = v48;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v40, v39);
      uint64_t result = sub_1C3F8F5D4((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      if (!v46) {
        goto LABEL_50;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v50 = v107;
      sub_1C3F8F450(v103, v107, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v51 = *(void *)(v50 + *(int *)(v110 + 20));
      if (!*(void *)(v51 + 16)) {
        goto LABEL_39;
      }
      sub_1C3F7E324(v40, v39);
      uint64_t v52 = sub_1C3F850CC(v40, v39);
      if ((v53 & 1) == 0) {
        break;
      }
      uint64_t v54 = *(void *)(*(void *)(v51 + 56) + 48 * v52);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v40, v39);
      sub_1C3F8F5D4(v107, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!v54) {
        goto LABEL_40;
      }
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(*(void *)v46 + 208))(&v111, v100, v54);
      uint64_t v55 = v111;
      if (v111)
      {
        sub_1C3F7E324(v40, v39);
        uint64_t v66 = v49;
        uint64_t v90 = v49;
        swift_bridgeObjectRetain();
        uint64_t v67 = v106;
        swift_bridgeObjectRetain();
        swift_retain();
        uint64_t v68 = v96;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v111 = v68;
        sub_1C4421590(v66, v67, v55, v40, v39, isUniquelyReferenced_nonNull_native);
        uint64_t v96 = v111;
        swift_bridgeObjectRelease();
        sub_1C3F7E2CC(v40, v39);
        uint64_t v70 = type metadata accessor for RetainVisitor();
        uint64_t v71 = swift_allocObject();
        uint64_t v72 = MEMORY[0x1E4FBC860];
        unint64_t v73 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
        unint64_t v74 = sub_1C3F7E37C(v72);
        *(void *)(v71 + 16) = v73;
        *(void *)(v71 + 24) = v74;
        uint64_t v113 = v70;
        uint64_t v114 = &off_1F1F982A0;
        uint64_t v111 = v71;
        char v89 = *(void (**)(uint64_t *))(*(void *)v55 + 112);
        swift_retain();
        v89(&v111);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
        sub_1C405E5CC(v71, v98);
        sub_1C3F7E2CC(v40, v39);
        swift_release();
        swift_release();
      }
      else
      {
        sub_1C3F7E2CC(v40, v39);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t result = swift_release();
LABEL_36:
      uint64_t v9 = v104;
      uint64_t v23 = v102;
      uint64_t v25 = v101;
      int64_t v32 = v105;
      if (!v28) {
        goto LABEL_13;
      }
LABEL_12:
      unint64_t v33 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
    }
    sub_1C3F7E2CC(v40, v39);
LABEL_39:
    sub_1C3F8F5D4(v107, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
LABEL_40:
    sub_1C3F7E324(v40, v39);
    swift_retain();
    uint64_t v56 = v49;
    swift_bridgeObjectRetain();
    uint64_t v57 = v106;
    swift_bridgeObjectRetain();
    uint64_t v58 = v99;
    char v59 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v111 = v58;
    sub_1C44218A0(v56, v57, v46, v40, v39, v59);
    uint64_t v99 = v111;
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v40, v39);
    uint64_t v60 = type metadata accessor for RetainVisitor();
    uint64_t v61 = swift_allocObject();
    uint64_t v62 = MEMORY[0x1E4FBC860];
    unint64_t v63 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
    unint64_t v64 = sub_1C3F7E37C(v62);
    *(void *)(v61 + 16) = v63;
    *(void *)(v61 + 24) = v64;
    uint64_t v113 = v60;
    uint64_t v114 = &off_1F1F982A0;
    uint64_t v111 = v61;
    uint64_t v65 = *(void (**)(uint64_t *))(*(void *)v46 + 120);
    swift_retain();
    v65(&v111);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v111);
    sub_1C405E5CC(v61, v98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t result = sub_1C3F7E2CC(v40, v39);
    goto LABEL_36;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_1C405E5CC(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v25 = v4 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v4 + 64);
  uint64_t v8 = (uint64_t *)(a2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (v7) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v14 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v14 < v9)
    {
      unint64_t v15 = *(void *)(v25 + 8 * v14);
      ++v11;
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v9) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v25 + 8 * v11);
      if (v15) {
        goto LABEL_20;
      }
      int64_t v11 = v14 + 2;
      if (v14 + 2 >= v9) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v25 + 8 * v11);
      if (v15)
      {
LABEL_20:
        unint64_t v7 = (v15 - 1) & v15;
        for (unint64_t i = __clz(__rbit64(v15)) + (v11 << 6); ; unint64_t i = v12 | (v11 << 6))
        {
          unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * i);
          uint64_t v18 = *v17;
          unint64_t v19 = v17[1];
          swift_beginAccess();
          uint64_t v20 = *v8;
          uint64_t v21 = *(void *)(*v8 + 16);
          sub_1C3F7E324(v18, v19);
          sub_1C3F7E324(v18, v19);
          if (v21
            && (uint64_t v22 = sub_1C3FB98C0(v18, v19, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50), (v23 & 1) != 0)&& (v24 = *(void *)(*(void *)(v20 + 56) + 16 * v22), swift_retain(), v24))
          {
            swift_endAccess();
            sub_1C3F7E2CC(v18, v19);
            swift_release();
            uint64_t result = sub_1C3F7E2CC(v18, v19);
            if (!v7) {
              goto LABEL_7;
            }
          }
          else
          {
            swift_endAccess();
            sub_1C3F7E2CC(v18, v19);
            swift_beginAccess();
            sub_1C3F7E324(v18, v19);
            sub_1C406E980(v26, v18, v19);
            swift_endAccess();
            sub_1C3F7E2CC(v18, v19);
            uint64_t result = sub_1C3F7E2CC(v26[0], v26[1]);
            if (!v7) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v12 = __clz(__rbit64(v7));
          v7 &= v7 - 1;
        }
      }
      int64_t v16 = v14 + 3;
      if (v16 < v9)
      {
        unint64_t v15 = *(void *)(v25 + 8 * v16);
        if (v15)
        {
          int64_t v11 = v16;
          goto LABEL_20;
        }
        while (1)
        {
          int64_t v11 = v16 + 1;
          if (__OFADD__(v16, 1)) {
            goto LABEL_28;
          }
          if (v11 >= v9) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v25 + 8 * v11);
          ++v16;
          if (v15) {
            goto LABEL_20;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C405E884(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
  swift_beginAccess();
  uint64_t v5 = *v4;
  uint64_t v6 = v4[1];
  uint64_t v15 = *v4;
  if (*(void *)(v6 + 16))
  {
    uint64_t v7 = *(void *)(v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_renameGeneration);
    uint64_t v8 = qword_1EBBC10F0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v8 != -1) {
      swift_once();
    }
    swift_retain();
    sub_1C4497A58();
    swift_release();
    if (v7 != v12)
    {
      swift_retain();
      sub_1C4497A58();
      swift_release();
      sub_1C3F8D910(v12, v13, v14);
      swift_bridgeObjectRelease();
      uint64_t v5 = v15;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  if (sub_1C4112134(v3, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = 0;
  }
  else
  {
    char v10 = sub_1C4112134(v2, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v9 = v10 ^ 1;
  }
  return v9 & 1;
}

uint64_t sub_1C405EA6C(uint64_t a1)
{
  uint64_t v54 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v54);
  uint64_t v59 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v4 = *(_OWORD *)(a1 + 16);
  v63[0] = *(_OWORD *)a1;
  v63[1] = v4;
  long long v64 = *(_OWORD *)(a1 + 32);
  uint64_t v65 = *(void *)(a1 + 48);
  v66[0] = v4;
  long long v60 = v4;
  sub_1C407D6A4((uint64_t)v66);
  LOBYTE(a1) = sub_1C405E884((uint64_t *)&v60);
  sub_1C407D6DC((uint64_t)v66);
  if ((a1 & 1) == 0)
  {
LABEL_26:
    char v30 = 0;
    return v30 & 1;
  }
  uint64_t v5 = v64;
  uint64_t v6 = *(void *)(v64 + 64);
  uint64_t v55 = v64 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v64 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v10 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_bridgeObjectRetain();
  uint64_t v53 = v10;
  uint64_t result = swift_beginAccess();
  int64_t v12 = 0;
  int64_t v52 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v58 = v5;
  uint64_t v51 = v1;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      uint64_t v14 = (v9 - 1) & v9;
      unint64_t v15 = v13 | (v12 << 6);
      goto LABEL_21;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
LABEL_53:
      __break(1u);
      goto LABEL_54;
    }
    if (v16 >= v52) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v55 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v52) {
        goto LABEL_30;
      }
      unint64_t v17 = *(void *)(v55 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v52) {
          goto LABEL_30;
        }
        unint64_t v17 = *(void *)(v55 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    uint64_t v14 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_21:
    unint64_t v19 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    uint64_t v22 = *(void *)(*(void *)(v5 + 56) + 24 * v15 + 16);
    uint64_t v23 = v59;
    sub_1C3F8F450(v53, v59, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v24 = *(void *)(v23 + *(int *)(v54 + 20));
    uint64_t v25 = *(void *)(v24 + 16);
    sub_1C3F7E324(v20, v21);
    if (!v25)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      goto LABEL_29;
    }
    sub_1C3F7E324(v20, v21);
    sub_1C3F7E324(v20, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v26 = sub_1C3F850CC(v20, v21);
    if ((v27 & 1) == 0)
    {
      sub_1C3F7E2CC(v20, v21);
      sub_1C3F7E2CC(v20, v21);
LABEL_29:
      sub_1C3F8F5D4(v59, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      sub_1C3F7E2CC(v20, v21);
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v30 = 0;
      return v30 & 1;
    }
    unint64_t v57 = v14;
    int64_t v56 = v12;
    uint64_t v28 = *(void *)(*(void *)(v24 + 56) + 48 * v26);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3F7E2CC(v20, v21);
    sub_1C3F7E2CC(v20, v21);
    sub_1C3F8F5D4(v59, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v28) {
      goto LABEL_56;
    }
    *(void *)&long long v60 = v22;
    char v29 = (*(uint64_t (**)(long long *))(*(void *)v28 + 216))(&v60);
    sub_1C3F7E2CC(v20, v21);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_release();
    uint64_t v5 = v58;
    int64_t v12 = v56;
    unint64_t v9 = v57;
    if ((v29 & 1) == 0)
    {
      swift_release();
      goto LABEL_26;
    }
  }
  int64_t v18 = v16 + 3;
  if (v18 < v52)
  {
    unint64_t v17 = *(void *)(v55 + 8 * v18);
    if (!v17)
    {
      while (1)
      {
        int64_t v12 = v18 + 1;
        if (__OFADD__(v18, 1)) {
          break;
        }
        if (v12 >= v52) {
          goto LABEL_30;
        }
        unint64_t v17 = *(void *)(v55 + 8 * v12);
        ++v18;
        if (v17) {
          goto LABEL_20;
        }
      }
LABEL_54:
      __break(1u);
      goto LABEL_55;
    }
    int64_t v12 = v18;
    goto LABEL_20;
  }
LABEL_30:
  swift_release();
  uint64_t v31 = type metadata accessor for RetainVisitor();
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = MEMORY[0x1E4FBC860];
  unint64_t v34 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
  unint64_t v35 = sub_1C3F7E37C(v33);
  *(void *)(v32 + 16) = v34;
  uint64_t v59 = v32 + 16;
  *(void *)(v32 + 24) = v35;
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & *(void *)(v5 + 64);
  int64_t v39 = (unint64_t)(v36 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v40 = 0;
  while (2)
  {
    if (v38)
    {
      unint64_t v41 = __clz(__rbit64(v38));
      v38 &= v38 - 1;
      unint64_t v42 = v41 | (v40 << 6);
LABEL_34:
      uint64_t v43 = *(void *)(*(void *)(v58 + 56) + 24 * v42 + 16);
      uint64_t v61 = v31;
      uint64_t v62 = &off_1F1F982A0;
      *(void *)&long long v60 = v32;
      char v44 = *(void (**)(long long *))(*(void *)v43 + 112);
      swift_retain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v44(&v60);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v60);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      continue;
    }
    break;
  }
  int64_t v45 = v40 + 1;
  if (__OFADD__(v40, 1)) {
    goto LABEL_53;
  }
  if (v45 >= v39)
  {
LABEL_50:
    swift_release();
    swift_beginAccess();
    sub_1C407DAF8((uint64_t)v63);
    uint64_t v48 = v51;
    swift_retain();
    uint64_t v49 = swift_bridgeObjectRetain();
    char v50 = sub_1C407D710(v49, (uint64_t)v63, v48);
    swift_release();
    sub_1C407DB78((uint64_t)v63);
    swift_bridgeObjectRelease();
    swift_release();
    char v30 = v50 ^ 1;
    return v30 & 1;
  }
  unint64_t v46 = *(void *)(v55 + 8 * v45);
  ++v40;
  if (v46) {
    goto LABEL_49;
  }
  int64_t v40 = v45 + 1;
  if (v45 + 1 >= v39) {
    goto LABEL_50;
  }
  unint64_t v46 = *(void *)(v55 + 8 * v40);
  if (v46) {
    goto LABEL_49;
  }
  int64_t v40 = v45 + 2;
  if (v45 + 2 >= v39) {
    goto LABEL_50;
  }
  unint64_t v46 = *(void *)(v55 + 8 * v40);
  if (v46)
  {
LABEL_49:
    unint64_t v38 = (v46 - 1) & v46;
    unint64_t v42 = __clz(__rbit64(v46)) + (v40 << 6);
    goto LABEL_34;
  }
  int64_t v47 = v45 + 3;
  if (v47 >= v39) {
    goto LABEL_50;
  }
  unint64_t v46 = *(void *)(v55 + 8 * v47);
  if (v46)
  {
    int64_t v40 = v47;
    goto LABEL_49;
  }
  while (1)
  {
    int64_t v40 = v47 + 1;
    if (__OFADD__(v47, 1)) {
      break;
    }
    if (v40 >= v39) {
      goto LABEL_50;
    }
    unint64_t v46 = *(void *)(v55 + 8 * v40);
    ++v47;
    if (v46) {
      goto LABEL_49;
    }
  }
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

uint64_t sub_1C405F1D0(uint64_t *a1)
{
  uint64_t v69 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v69);
  uint64_t v78 = (uint64_t)v67 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = a1[4];
  uint64_t v74 = a1[5];
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v75 = v4 + 64;
  uint64_t v68 = *a1;
  v67[1] = a1[1];
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v5;
  uint64_t v9 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  v67[0] = v1;
  uint64_t v79 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_isUpdated;
  int64_t v76 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v73 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version;
  uint64_t v72 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version + 8;
  int64_t v77 = v4;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v80 = v9;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_22;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
LABEL_70:
      __break(1u);
      goto LABEL_71;
    }
    if (v14 >= v76) {
      goto LABEL_30;
    }
    unint64_t v15 = *(void *)(v75 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v76) {
        goto LABEL_30;
      }
      unint64_t v15 = *(void *)(v75 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v76) {
          goto LABEL_30;
        }
        unint64_t v15 = *(void *)(v75 + 8 * v11);
        if (!v15) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_22:
    unint64_t v17 = (uint64_t *)(*(void *)(v77 + 48) + 16 * v13);
    uint64_t v19 = *v17;
    unint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v77 + 56) + 24 * v13);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    uint64_t v23 = v20[2];
    swift_beginAccess();
    uint64_t v86 = v19;
    unint64_t v87 = v18;
    sub_1C3F7E324(v19, v18);
    sub_1C3F7E324(v19, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v25 = sub_1C3F84D7C(&v88, &v86);
    if (v24[2])
    {
      uint64_t v26 = v24;
      uint64_t result = *v24;
      if (!*v24) {
        goto LABEL_73;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        *uint64_t v26 = (*(uint64_t (**)(void))(*(void *)*v26 + 160))();
        swift_release();
      }
      uint64_t v27 = *v26;
      uint64_t v82 = v23;
      (*(void (**)(uint64_t *))(*(void *)v27 + 224))(&v82);
      ((void (*)(long long *, void))v25)(&v88, 0);
      swift_endAccess();
      sub_1C3F7E2CC(v86, v87);
    }
    else
    {
      ((void (*)(long long *, void))v25)(&v88, 0);
      sub_1C3F7E2CC(v86, v87);
      swift_endAccess();
    }
    swift_beginAccess();
    uint64_t v86 = v19;
    unint64_t v87 = v18;
    sub_1C3F7E324(v19, v18);
    uint64_t v28 = (void (*)(long long *, char))sub_1C3F83FF0(&v88, &v86);
    if (*(void *)(v29 + 16))
    {
      sub_1C410D0A4(v22);
      sub_1C410D0A4(v21);
      v28(&v88, 0);
      swift_endAccess();
      sub_1C3F7E2CC(v86, v87);
    }
    else
    {
      v28(&v88, 0);
      sub_1C3F7E2CC(v86, v87);
      swift_endAccess();
    }
    swift_beginAccess();
    sub_1C410D0A4(v22);
    sub_1C410D0A4(v21);
    swift_endAccess();
    swift_beginAccess();
    sub_1C3F7E324(v19, v18);
    sub_1C3F81BF8(v81, v19, v18);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v19, v18);
    uint64_t result = sub_1C3F7E2CC(v81[0], v81[1]);
  }
  int64_t v16 = v14 + 3;
  if (v16 < v76)
  {
    unint64_t v15 = *(void *)(v75 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v11 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          break;
        }
        if (v11 >= v76) {
          goto LABEL_30;
        }
        unint64_t v15 = *(void *)(v75 + 8 * v11);
        ++v16;
        if (v15) {
          goto LABEL_21;
        }
      }
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    int64_t v11 = v16;
    goto LABEL_21;
  }
LABEL_30:
  swift_release();
  uint64_t v30 = *(void *)(v74 + 64);
  uint64_t v70 = v74 + 64;
  uint64_t v31 = 1 << *(unsigned char *)(v74 + 32);
  uint64_t v32 = -1;
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  unint64_t v33 = v32 & v30;
  swift_bridgeObjectRetain();
  swift_beginAccess();
  int64_t v34 = 0;
  int64_t v71 = (unint64_t)(v31 + 63) >> 6;
  uint64_t v35 = v69;
  while (2)
  {
    if (v33)
    {
      unint64_t v36 = __clz(__rbit64(v33));
      uint64_t v37 = (v33 - 1) & v33;
      unint64_t v38 = v36 | (v34 << 6);
      uint64_t result = v80;
      goto LABEL_51;
    }
    int64_t v39 = v34 + 1;
    uint64_t result = v80;
    if (__OFADD__(v34, 1)) {
      goto LABEL_70;
    }
    if (v39 >= v71)
    {
LABEL_68:
      swift_release();
      sub_1C3F7D128(0, 0);
      swift_beginAccess();
      uint64_t v65 = v68;
      swift_bridgeObjectRetain();
      uint64_t v66 = swift_bridgeObjectRetain();
      sub_1C410D0A4(v66);
      sub_1C410D0A4(v65);
      swift_endAccess();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    unint64_t v40 = *(void *)(v70 + 8 * v39);
    ++v34;
    if (v40) {
      goto LABEL_50;
    }
    int64_t v34 = v39 + 1;
    if (v39 + 1 >= v71) {
      goto LABEL_68;
    }
    unint64_t v40 = *(void *)(v70 + 8 * v34);
    if (v40) {
      goto LABEL_50;
    }
    int64_t v34 = v39 + 2;
    if (v39 + 2 >= v71) {
      goto LABEL_68;
    }
    unint64_t v40 = *(void *)(v70 + 8 * v34);
    if (v40)
    {
LABEL_50:
      uint64_t v37 = (v40 - 1) & v40;
      unint64_t v38 = __clz(__rbit64(v40)) + (v34 << 6);
LABEL_51:
      unint64_t v42 = (uint64_t *)(*(void *)(v74 + 48) + 16 * v38);
      uint64_t v44 = *v42;
      unint64_t v43 = v42[1];
      int64_t v45 = (uint64_t *)(*(void *)(v74 + 56) + 24 * v38);
      uint64_t v46 = *v45;
      uint64_t v47 = v45[1];
      uint64_t v48 = v45[2];
      uint64_t v49 = v78;
      sub_1C3F8F450(result, v78, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v50 = *(void *)(*(void *)(v49 + *(int *)(v35 + 20)) + 16);
      sub_1C3F7E324(v44, v43);
      int64_t v77 = v34;
      int64_t v76 = v37;
      if (v50)
      {
        sub_1C3F7E324(v44, v43);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1C3F850CC(v44, v43);
        if (v51)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C3F7E2CC(v44, v43);
          sub_1C3F8F5D4(v78, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          swift_beginAccess();
          uint64_t v84 = v44;
          unint64_t v85 = v43;
          sub_1C3F7E324(v44, v43);
          uint64_t v53 = sub_1C3F84D7C(v81, &v84);
          if (v52[2])
          {
            uint64_t v54 = v52;
            uint64_t result = *v52;
            if (!*v52) {
              goto LABEL_74;
            }
            uint64_t v35 = v69;
            if (v48 != result)
            {
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                *uint64_t v54 = (*(uint64_t (**)(void))(*(void *)*v54 + 160))();
                swift_release();
              }
              (*(void (**)(uint64_t))(*(void *)*v54 + 96))(v48);
            }
            ((void (*)(uint64_t *, void))v53)(v81, 0);
            swift_endAccess();
            sub_1C3F7E2CC(v84, v85);
          }
          else
          {
            ((void (*)(uint64_t *, void))v53)(v81, 0);
            sub_1C3F7E2CC(v84, v85);
            swift_endAccess();
            uint64_t v35 = v69;
          }
          swift_beginAccess();
          uint64_t v84 = v44;
          unint64_t v85 = v43;
          sub_1C3F7E324(v44, v43);
          unint64_t v63 = sub_1C3F83FF0(v81, &v84);
          unint64_t v33 = v76;
          if (*(void *)(v64 + 16))
          {
            sub_1C410D0A4(v47);
            sub_1C410D0A4(v46);
            v63(v81, 0);
            swift_endAccess();
            sub_1C3F7E2CC(v84, v85);
          }
          else
          {
            v63(v81, 0);
            sub_1C3F7E2CC(v84, v85);
            swift_endAccess();
          }
          goto LABEL_34;
        }
        sub_1C3F7E2CC(v44, v43);
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      sub_1C3F8F5D4(v78, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v55 = MEMORY[0x1E4FBC860];
      unint64_t v56 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
      unint64_t v57 = sub_1C3F7E37C(v55);
      sub_1C3F7E4A4(v55);
      sub_1C3F7E37C(v55);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      long long v88 = (unint64_t)v48;
      uint64_t v89 = v46;
      uint64_t v90 = v47;
      unint64_t v91 = v56;
      unint64_t v92 = v57;
      uint64_t v58 = v80;
      swift_beginAccess();
      uint64_t v59 = v48;
      uint64_t v60 = v35;
      uint64_t v61 = *(int *)(v35 + 20);
      sub_1C3F7E324(v44, v43);
      uint64_t v75 = v59;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v82 = *(void *)(v58 + v61);
      *(void *)(v58 + v61) = 0x8000000000000000;
      sub_1C3F6CA08(&v88, v44, v43, isUniquelyReferenced_nonNull_native);
      *(void *)(v58 + v61) = v82;
      uint64_t v35 = v60;
      swift_bridgeObjectRelease();
      sub_1C3F7E2CC(v44, v43);
      if (*(void *)(v47 + 16))
      {
        sub_1C3F7E324(v44, v43);
        sub_1C3F81BF8(&v82, v44, v43);
        sub_1C3F7E2CC(v82, v83);
      }
      uint64_t v82 = v44;
      unint64_t v83 = v43;
      uint64_t v84 = v46;
      unint64_t v85 = v47;
      sub_1C3F817F8(&v82, &v84);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      unint64_t v33 = v76;
LABEL_34:
      swift_beginAccess();
      sub_1C3F7E324(v44, v43);
      sub_1C3F81BF8(&v82, v44, v43);
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C3F7E2CC(v44, v43);
      sub_1C3F7E2CC(v82, v83);
      int64_t v34 = v77;
      continue;
    }
    break;
  }
  int64_t v41 = v39 + 3;
  if (v41 >= v71) {
    goto LABEL_68;
  }
  unint64_t v40 = *(void *)(v70 + 8 * v41);
  if (v40)
  {
    int64_t v34 = v41;
    goto LABEL_50;
  }
  while (1)
  {
    int64_t v34 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v34 >= v71) {
      goto LABEL_68;
    }
    unint64_t v40 = *(void *)(v70 + 8 * v34);
    ++v41;
    if (v40) {
      goto LABEL_50;
    }
  }
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
  return result;
}

uint64_t sub_1C405FE90(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v3);
  uint64_t v65 = (uint64_t)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = MEMORY[0x1E4FBC870];
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v60 = a1 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & v5;
  uint64_t v9 = v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  uint64_t v68 = (uint64_t *)(v1 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets);
  swift_bridgeObjectRetain();
  uint64_t v62 = v9;
  uint64_t result = swift_beginAccess();
  unint64_t v11 = v8;
  int64_t v12 = 0;
  int64_t v61 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v59 = a1;
  uint64_t v58 = v3;
  while (v11)
  {
    uint64_t v63 = (v11 - 1) & v11;
    int64_t v64 = v12;
    unint64_t v13 = __clz(__rbit64(v11)) | (v12 << 6);
LABEL_25:
    unint64_t v18 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v13);
    uint64_t v20 = *v18;
    unint64_t v19 = v18[1];
    uint64_t v21 = v65;
    sub_1C3F8F450(v62, v65, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v22 = *(void *)(v21 + *(int *)(v3 + 20));
    uint64_t v23 = *(void *)(v22 + 16);
    sub_1C3F7E324(v20, v19);
    if (v23 && (uint64_t v24 = sub_1C3F850CC(v20, v19), (v25 & 1) != 0))
    {
      uint64_t v26 = *(void *)(*(void *)(v22 + 56) + 48 * v24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F8F5D4(v65, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v3 = v58;
      a1 = v59;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v26)
      {
        unint64_t v57 = v19;
        uint64_t v27 = type metadata accessor for RetainVisitor();
        uint64_t v28 = swift_allocObject();
        uint64_t v29 = MEMORY[0x1E4FBC860];
        unint64_t v30 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
        unint64_t v31 = sub_1C3F7E37C(v29);
        *(void *)(v28 + 16) = v30;
        *(void *)(v28 + 24) = v31;
        v69[3] = v27;
        v69[4] = &off_1F1F982A0;
        v69[0] = v28;
        uint64_t v32 = *(void (**)(void *))(*(void *)v26 + 120);
        swift_retain();
        v32(v69);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
        swift_release();
        swift_beginAccess();
        uint64_t v33 = *(void *)(v28 + 24);
        swift_bridgeObjectRetain();
        uint64_t result = swift_release();
        int64_t v34 = 0;
        uint64_t v35 = *(void *)(v33 + 64);
        uint64_t v66 = v33 + 64;
        uint64_t v36 = 1 << *(unsigned char *)(v33 + 32);
        if (v36 < 64) {
          uint64_t v37 = ~(-1 << v36);
        }
        else {
          uint64_t v37 = -1;
        }
        unint64_t v38 = v37 & v35;
        int64_t v67 = (unint64_t)(v36 + 63) >> 6;
        uint64_t v39 = v20;
        if ((v37 & v35) != 0)
        {
          do
          {
            while (1)
            {
              unint64_t v40 = __clz(__rbit64(v38));
              v38 &= v38 - 1;
              unint64_t v41 = v40 | (v34 << 6);
LABEL_51:
              uint64_t v45 = 16 * v41;
              uint64_t v46 = (uint64_t *)(*(void *)(v33 + 48) + v45);
              uint64_t v47 = *v46;
              unint64_t v48 = v46[1];
              uint64_t v49 = *(void *)(*(void *)(v33 + 56) + v45);
              uint64_t v50 = v68;
              swift_beginAccess();
              uint64_t v51 = *v50;
              uint64_t v52 = *(void *)(v51 + 16);
              sub_1C3F7E324(v47, v48);
              swift_retain();
              if (v52)
              {
                uint64_t v53 = sub_1C3FB98C0(v47, v48, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
                if (v54)
                {
                  uint64_t v55 = *(void *)(*(void *)(v51 + 56) + 16 * v53);
                  swift_retain();
                  if (v55) {
                    break;
                  }
                }
              }
              swift_endAccess();
              swift_retain();
              sub_1C406DA54(v69, v49);
              sub_1C3F7E2CC(v47, v48);
              swift_release();
              uint64_t result = swift_release();
              uint64_t v20 = v39;
              if (!v38) {
                goto LABEL_35;
              }
            }
            swift_endAccess();
            swift_release();
            swift_release();
            uint64_t result = sub_1C3F7E2CC(v47, v48);
            uint64_t v20 = v39;
          }
          while (v38);
        }
LABEL_35:
        int64_t v42 = v34 + 1;
        if (__OFADD__(v34, 1))
        {
          __break(1u);
LABEL_59:
          __break(1u);
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
        if (v42 < v67)
        {
          unint64_t v43 = *(void *)(v66 + 8 * v42);
          ++v34;
          if (v43) {
            goto LABEL_50;
          }
          int64_t v34 = v42 + 1;
          if (v42 + 1 < v67)
          {
            unint64_t v43 = *(void *)(v66 + 8 * v34);
            if (v43) {
              goto LABEL_50;
            }
            int64_t v34 = v42 + 2;
            if (v42 + 2 < v67)
            {
              unint64_t v43 = *(void *)(v66 + 8 * v34);
              if (v43) {
                goto LABEL_50;
              }
              int64_t v34 = v42 + 3;
              if (v42 + 3 < v67)
              {
                unint64_t v43 = *(void *)(v66 + 8 * v34);
                if (v43) {
                  goto LABEL_50;
                }
                int64_t v44 = v42 + 4;
                if (v44 < v67)
                {
                  unint64_t v43 = *(void *)(v66 + 8 * v44);
                  if (v43)
                  {
                    int64_t v34 = v44;
LABEL_50:
                    unint64_t v38 = (v43 - 1) & v43;
                    unint64_t v41 = __clz(__rbit64(v43)) + (v34 << 6);
                    goto LABEL_51;
                  }
                  while (1)
                  {
                    int64_t v34 = v44 + 1;
                    if (__OFADD__(v44, 1)) {
                      goto LABEL_60;
                    }
                    if (v34 >= v67) {
                      break;
                    }
                    unint64_t v43 = *(void *)(v66 + 8 * v34);
                    ++v44;
                    if (v43) {
                      goto LABEL_50;
                    }
                  }
                }
              }
            }
          }
        }
        swift_release();
        a1 = v59;
        uint64_t v3 = v58;
        unint64_t v19 = v57;
      }
    }
    else
    {
      sub_1C3F8F5D4(v65, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    }
    uint64_t result = sub_1C3F7E2CC(v20, v19);
    unint64_t v11 = v63;
    int64_t v12 = v64;
  }
  int64_t v14 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_59;
  }
  if (v14 >= v61)
  {
LABEL_57:
    swift_release();
    return v70;
  }
  unint64_t v15 = *(void *)(v60 + 8 * v14);
  int64_t v16 = v12 + 1;
  if (v15) {
    goto LABEL_24;
  }
  int64_t v16 = v12 + 2;
  if (v12 + 2 >= v61) {
    goto LABEL_57;
  }
  unint64_t v15 = *(void *)(v60 + 8 * v16);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v16 = v12 + 3;
  if (v12 + 3 >= v61) {
    goto LABEL_57;
  }
  unint64_t v15 = *(void *)(v60 + 8 * v16);
  if (v15) {
    goto LABEL_24;
  }
  int64_t v16 = v12 + 4;
  if (v12 + 4 >= v61) {
    goto LABEL_57;
  }
  unint64_t v15 = *(void *)(v60 + 8 * v16);
  if (v15)
  {
LABEL_24:
    uint64_t v63 = (v15 - 1) & v15;
    int64_t v64 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
    goto LABEL_25;
  }
  uint64_t v17 = v12 + 5;
  if (v12 + 5 >= v61) {
    goto LABEL_57;
  }
  unint64_t v15 = *(void *)(v60 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v12 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v61) {
      goto LABEL_57;
    }
    unint64_t v15 = *(void *)(v60 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_24;
    }
  }
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_1C4060528(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v3;
  uint64_t v7 = v2;
  uint64_t v8 = a1;
  uint64_t v123 = MEMORY[0x1E4FBC870];
  uint64_t v117 = a1;
  if (*(void *)(a1 + 16))
  {
    uint64_t v101 = (uint64_t *)(v2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_version);
    swift_bridgeObjectRetain_n();
    uint64_t v105 = v2;
    while (1)
    {
      uint64_t v9 = sub_1C407B53C(v8, v7);
      if (v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_68;
      }
      uint64_t v5 = v9;
      swift_bridgeObjectRelease();
      unint64_t v107 = v5;
      unint64_t v109 = v5 & 0xC000000000000001;
      if ((v5 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        sub_1C4497C48();
        type metadata accessor for AnyReference();
        sub_1C3FA180C((unint64_t *)&qword_1EA39CBA8, (void (*)(uint64_t))type metadata accessor for AnyReference);
        sub_1C4497728();
        uint64_t v5 = v118;
        uint64_t v99 = v119;
        uint64_t v10 = v120;
        int64_t v11 = v121;
        unint64_t v12 = v122;
      }
      else
      {
        uint64_t v13 = -1 << *(unsigned char *)(v5 + 32);
        uint64_t v99 = v5 + 56;
        uint64_t v14 = ~v13;
        uint64_t v15 = -v13;
        if (v15 < 64) {
          uint64_t v16 = ~(-1 << v15);
        }
        else {
          uint64_t v16 = -1;
        }
        unint64_t v12 = v16 & *(void *)(v5 + 56);
        swift_bridgeObjectRetain();
        uint64_t v10 = v14;
        int64_t v11 = 0;
      }
      int64_t v98 = (unint64_t)(v10 + 64) >> 6;
      while ((v5 & 0x8000000000000000) == 0)
      {
        if (v12)
        {
          uint64_t v19 = (v12 - 1) & v12;
          unint64_t v20 = __clz(__rbit64(v12)) | (v11 << 6);
          int64_t v21 = v11;
        }
        else
        {
          int64_t v21 = v11 + 1;
          if (__OFADD__(v11, 1))
          {
LABEL_114:
            __break(1u);
LABEL_115:
            __break(1u);
LABEL_116:
            __break(1u);
            goto LABEL_117;
          }
          if (v21 >= v98) {
            goto LABEL_41;
          }
          unint64_t v24 = *(void *)(v99 + 8 * v21);
          if (!v24)
          {
            int64_t v25 = v11 + 2;
            if (v11 + 2 >= v98) {
              goto LABEL_41;
            }
            unint64_t v24 = *(void *)(v99 + 8 * v25);
            if (v24) {
              goto LABEL_29;
            }
            int64_t v25 = v11 + 3;
            if (v11 + 3 >= v98) {
              goto LABEL_41;
            }
            unint64_t v24 = *(void *)(v99 + 8 * v25);
            if (v24) {
              goto LABEL_29;
            }
            int64_t v25 = v11 + 4;
            if (v11 + 4 >= v98) {
              goto LABEL_41;
            }
            unint64_t v24 = *(void *)(v99 + 8 * v25);
            if (v24)
            {
LABEL_29:
              int64_t v21 = v25;
            }
            else
            {
              int64_t v21 = v11 + 5;
              if (v11 + 5 >= v98) {
                goto LABEL_41;
              }
              unint64_t v24 = *(void *)(v99 + 8 * v21);
              if (!v24)
              {
                int64_t v30 = v11 + 6;
                do
                {
                  if (v98 == v30) {
                    goto LABEL_41;
                  }
                  unint64_t v24 = *(void *)(v99 + 8 * v30++);
                }
                while (!v24);
                int64_t v21 = v30 - 1;
              }
            }
          }
          uint64_t v19 = (v24 - 1) & v24;
          unint64_t v20 = __clz(__rbit64(v24)) + (v21 << 6);
        }
        uint64_t v23 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
        swift_retain();
        if (!v23) {
          goto LABEL_41;
        }
LABEL_32:
        sub_1C405BB78(v23, &v111);
        uint64_t v26 = v111;
        unint64_t v4 = v112;
        swift_beginAccess();
        uint64_t v27 = *v101;
        swift_bridgeObjectRetain();
        uint64_t v28 = swift_bridgeObjectRetain();
        if (sub_1C41127E8(v28, v4))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_12:
          uint64_t v17 = *(void *)(v23 + 16);
          unint64_t v18 = *(void *)(v23 + 24);
          sub_1C3F7E324(v17, v18);
          sub_1C3F81BF8(&v111, v17, v18);
          swift_release();
          sub_1C3F7E2CC(v111, v112);
          goto LABEL_13;
        }
        char v29 = sub_1C41127E8(v27, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v29) {
          goto LABEL_12;
        }
        swift_release();
LABEL_13:
        int64_t v11 = v21;
        unint64_t v12 = v19;
      }
      uint64_t v22 = sub_1C4497CB8();
      if (v22)
      {
        uint64_t v113 = (void *)v22;
        type metadata accessor for AnyReference();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v23 = v111;
        swift_unknownObjectRelease();
        int64_t v21 = v11;
        uint64_t v19 = v12;
        if (v23) {
          goto LABEL_32;
        }
      }
LABEL_41:
      sub_1C3F7FCE8();
      if (!v109)
      {
        unint64_t v4 = v107;
        uint64_t v31 = *(void *)(v107 + 16);
        if (!v31) {
          goto LABEL_46;
        }
LABEL_43:
        uint64_t v116 = MEMORY[0x1E4FBC860];
        sub_1C4012680(0, v31 & ~(v31 >> 63), 0);
        if (v109)
        {
          uint64_t v32 = sub_1C4497C38();
          unsigned __int8 v34 = 1;
        }
        else
        {
          uint64_t v32 = sub_1C413FB1C(v4);
          unsigned __int8 v34 = v36 & 1;
        }
        uint64_t v113 = (void *)v32;
        uint64_t v114 = v33;
        unsigned __int8 v115 = v34;
        if ((v31 & 0x8000000000000000) == 0)
        {
          do
          {
            while (1)
            {
              uint64_t v44 = (uint64_t)v113;
              uint64_t v43 = v114;
              uint64_t v5 = v115;
              uint64_t v45 = sub_1C413E4B0((uint64_t)v113, v114, v115, v4);
              uint64_t v46 = *(void *)(v45 + 16);
              unint64_t v47 = *(void *)(v45 + 24);
              sub_1C3F7E324(v46, v47);
              swift_release();
              uint64_t v48 = v116;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_1C4012680(0, *(void *)(v48 + 16) + 1, 1);
                uint64_t v48 = v116;
              }
              unint64_t v50 = *(void *)(v48 + 16);
              unint64_t v49 = *(void *)(v48 + 24);
              if (v50 >= v49 >> 1)
              {
                sub_1C4012680(v49 > 1, v50 + 1, 1);
                uint64_t v48 = v116;
              }
              *(void *)(v48 + 16) = v50 + 1;
              unint64_t v51 = v48 + 16 * v50;
              *(void *)(v51 + 32) = v46;
              *(void *)(v51 + 40) = v47;
              if (v109) {
                break;
              }
              unint64_t v4 = v107;
              uint64_t v37 = sub_1C4233898(v44, v43, v5, v107);
              uint64_t v38 = v43;
              uint64_t v40 = v39;
              char v42 = v41;
              sub_1C3F882B0(v44, v38, v5);
              uint64_t v113 = (void *)v37;
              uint64_t v114 = v40;
              unsigned __int8 v115 = v42 & 1;
              if (!--v31) {
                goto LABEL_60;
              }
            }
            unint64_t v4 = v107;
            if ((v5 & 1) == 0) {
              goto LABEL_119;
            }
            if (sub_1C4497C58()) {
              swift_isUniquelyReferenced_nonNull_native();
            }
            __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBB0);
            uint64_t v52 = (void (*)(uint64_t *, void))sub_1C44976D8();
            sub_1C4497CC8();
            v52(&v111, 0);
            --v31;
          }
          while (v31);
LABEL_60:
          sub_1C3F882B0((uint64_t)v113, v114, v115);
          uint64_t v35 = v116;
          goto LABEL_61;
        }
LABEL_117:
        __break(1u);
        goto LABEL_118;
      }
      unint64_t v4 = v107;
      uint64_t v31 = sub_1C4497C88();
      if (v31) {
        goto LABEL_43;
      }
LABEL_46:
      uint64_t v35 = MEMORY[0x1E4FBC860];
LABEL_61:
      uint64_t v8 = sub_1C411EDFC(v35);
      swift_bridgeObjectRelease();
      uint64_t v53 = sub_1C413BE68(v4);
      uint64_t v6 = 0;
      swift_bridgeObjectRelease();
      uint64_t v54 = *(void *)(v53 + 16);
      if (v54)
      {
        uint64_t v55 = (unint64_t *)(v53 + 40);
        do
        {
          uint64_t v56 = *(v55 - 1);
          unint64_t v4 = *v55;
          sub_1C3F7E324(v56, *v55);
          sub_1C3F81BF8(&v111, v56, v4);
          sub_1C3F7E2CC(v111, v112);
          v55 += 2;
          --v54;
        }
        while (v54);
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = v105;
      if (!*(void *)(v8 + 16))
      {
        swift_bridgeObjectRelease();
        goto LABEL_67;
      }
    }
  }
  swift_bridgeObjectRetain();
LABEL_67:
  uint64_t v57 = swift_bridgeObjectRetain();
  uint64_t v58 = sub_1C405FE90(v57);
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_68:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  int64_t v60 = 0;
  uint64_t v100 = v58 + 56;
  uint64_t v61 = 1 << *(unsigned char *)(v58 + 32);
  uint64_t v62 = -1;
  if (v61 < 64) {
    uint64_t v62 = ~(-1 << v61);
  }
  unint64_t v63 = v62 & *(void *)(v58 + 56);
  int64_t v64 = (void *)(v7 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets);
  uint64_t v104 = (uint64_t *)(a2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_assets);
  int64_t v106 = (unint64_t)(v61 + 63) >> 6;
  uint64_t v102 = v58;
  while (1)
  {
    if (v63)
    {
      unint64_t v66 = __clz(__rbit64(v63));
      uint64_t v67 = (v63 - 1) & v63;
      unint64_t v68 = v66 | (v60 << 6);
      goto LABEL_92;
    }
    int64_t v69 = v60 + 1;
    if (__OFADD__(v60, 1)) {
      goto LABEL_116;
    }
    if (v69 >= v106)
    {
LABEL_111:
      swift_release();
      return v123;
    }
    unint64_t v70 = *(void *)(v100 + 8 * v69);
    ++v60;
    if (!v70)
    {
      int64_t v60 = v69 + 1;
      if (v69 + 1 >= v106) {
        goto LABEL_111;
      }
      unint64_t v70 = *(void *)(v100 + 8 * v60);
      if (!v70)
      {
        int64_t v60 = v69 + 2;
        if (v69 + 2 >= v106) {
          goto LABEL_111;
        }
        unint64_t v70 = *(void *)(v100 + 8 * v60);
        if (!v70)
        {
          int64_t v60 = v69 + 3;
          if (v69 + 3 >= v106) {
            goto LABEL_111;
          }
          unint64_t v70 = *(void *)(v100 + 8 * v60);
          if (!v70) {
            break;
          }
        }
      }
    }
LABEL_91:
    uint64_t v67 = (v70 - 1) & v70;
    unint64_t v68 = __clz(__rbit64(v70)) + (v60 << 6);
LABEL_92:
    uint64_t v72 = *(void *)(*(void *)(v58 + 48) + 8 * v68);
    uint64_t v5 = *(void *)(v72 + 16);
    unint64_t v4 = *(void *)(v72 + 24);
    swift_beginAccess();
    uint64_t v73 = *v104;
    if (!*(void *)(*v104 + 16)) {
      goto LABEL_120;
    }
    unint64_t v110 = v67;
    sub_1C3F7E324(v5, v4);
    swift_retain();
    sub_1C3F7E324(v5, v4);
    uint64_t v74 = sub_1C3FB98C0(v5, v4, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
    if ((v75 & 1) == 0) {
      goto LABEL_121;
    }
    uint64_t v76 = *(void *)(*(void *)(v73 + 56) + 16 * v74);
    swift_retain();
    sub_1C3F7E2CC(v5, v4);
    if (!v76) {
      goto LABEL_122;
    }
    swift_endAccess();
    sub_1C3F7E2CC(v5, v4);
    swift_beginAccess();
    uint64_t v5 = *(void *)(v76 + 16);
    unint64_t v4 = *(void *)(v76 + 24);
    uint64_t v77 = *v64;
    if (*(void *)(*v64 + 16))
    {
      swift_retain();
      sub_1C3F7E324(v5, v4);
      uint64_t v78 = sub_1C3FB98C0(v5, v4, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
      if (v79)
      {
        uint64_t v80 = *(void *)(*(void *)(v77 + 56) + 16 * v78);
        swift_retain();
        sub_1C3F7E2CC(v5, v4);
        swift_release();
        swift_release();
        if (v80)
        {
          __break(1u);
LABEL_113:
          __break(1u);
          goto LABEL_114;
        }
      }
      else
      {
        sub_1C3F7E2CC(v5, v4);
        swift_release();
      }
    }
    int64_t v108 = v60;
    swift_retain();
    sub_1C3F7E324(v5, v4);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v113 = (void *)*v64;
    uint64_t v82 = (uint64_t)v113;
    unint64_t v83 = v64;
    *int64_t v64 = 0x8000000000000000;
    unint64_t v85 = sub_1C3FB98C0(v5, v4, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
    uint64_t v86 = *(void *)(v82 + 16);
    BOOL v87 = (v84 & 1) == 0;
    uint64_t v88 = v86 + v87;
    if (__OFADD__(v86, v87)) {
      goto LABEL_113;
    }
    char v89 = v84;
    if (*(void *)(v82 + 24) >= v88)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v92 = v113;
        if (v84) {
          goto LABEL_72;
        }
      }
      else
      {
        sub_1C4069B28();
        unint64_t v92 = v113;
        if (v89) {
          goto LABEL_72;
        }
      }
    }
    else
    {
      sub_1C40654D4(v88, isUniquelyReferenced_nonNull_native);
      uint64_t v90 = sub_1C3FB98C0(v5, v4, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
      if ((v89 & 1) != (v91 & 1)) {
        goto LABEL_123;
      }
      unint64_t v85 = v90;
      unint64_t v92 = v113;
      if (v89)
      {
LABEL_72:
        uint64_t v65 = (void *)(v92[7] + 16 * v85);
        swift_release();
        *uint64_t v65 = v76;
        v65[1] = 0;
        goto LABEL_73;
      }
    }
    v92[(v85 >> 6) + 8] |= 1 << v85;
    unint64_t v93 = (uint64_t *)(v92[6] + 16 * v85);
    *unint64_t v93 = v5;
    v93[1] = v4;
    uint64_t v94 = (void *)(v92[7] + 16 * v85);
    *uint64_t v94 = v76;
    v94[1] = 0;
    uint64_t v95 = v92[2];
    BOOL v96 = __OFADD__(v95, 1);
    uint64_t v97 = v95 + 1;
    if (v96) {
      goto LABEL_115;
    }
    v92[2] = v97;
    sub_1C3F7E324(v5, v4);
LABEL_73:
    int64_t v64 = v83;
    *unint64_t v83 = v92;
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v5, v4);
    swift_endAccess();
    swift_release();
    swift_release();
    uint64_t v58 = v102;
    int64_t v60 = v108;
    unint64_t v63 = v110;
  }
  int64_t v71 = v69 + 4;
  if (v71 >= v106) {
    goto LABEL_111;
  }
  unint64_t v70 = *(void *)(v100 + 8 * v71);
  if (v70)
  {
    int64_t v60 = v71;
    goto LABEL_91;
  }
  while (1)
  {
    int64_t v60 = v71 + 1;
    if (__OFADD__(v71, 1)) {
      break;
    }
    if (v60 >= v106) {
      goto LABEL_111;
    }
    unint64_t v70 = *(void *)(v100 + 8 * v60);
    ++v71;
    if (v70) {
      goto LABEL_91;
    }
  }
LABEL_118:
  __break(1u);
LABEL_119:
  __break(1u);
LABEL_120:
  swift_retain();
  sub_1C3F7E324(v5, v4);
  __break(1u);
LABEL_121:
  sub_1C3F7E2CC(v5, v4);
LABEL_122:
  __break(1u);
LABEL_123:
  uint64_t result = sub_1C4498558();
  __break(1u);
  return result;
}

uint64_t sub_1C40611C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = a4;
  uint64_t v52 = MEMORY[0x1E4FBC870];
  unint64_t v50 = &v53;
  uint64_t v14 = sub_1C40562DC(a3, (uint64_t (*)(uint64_t *))sub_1C407DC50, (uint64_t)v49);
  if (v5) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v16 = v14;
  v40[1] = 0;
  uint64_t v41 = a1;
  uint64_t v17 = *(void *)(v14 + 56);
  uint64_t v42 = v14 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(v14 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  uint64_t v46 = v4 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  int64_t v21 = 0;
  int64_t v43 = (unint64_t)(v18 + 63) >> 6;
  uint64_t v44 = v16;
  uint64_t v22 = (uint64_t)v13;
  uint64_t v45 = v11;
  while (1)
  {
    if (v20)
    {
      uint64_t v47 = (v20 - 1) & v20;
      int64_t v48 = v21;
      unint64_t v25 = __clz(__rbit64(v20)) | (v21 << 6);
      goto LABEL_27;
    }
    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v26 >= v43) {
      goto LABEL_33;
    }
    unint64_t v27 = *(void *)(v42 + 8 * v26);
    int64_t v28 = v21 + 1;
    if (!v27)
    {
      int64_t v28 = v21 + 2;
      if (v21 + 2 >= v43) {
        goto LABEL_33;
      }
      unint64_t v27 = *(void *)(v42 + 8 * v28);
      if (!v27)
      {
        int64_t v28 = v21 + 3;
        if (v21 + 3 >= v43) {
          goto LABEL_33;
        }
        unint64_t v27 = *(void *)(v42 + 8 * v28);
        if (!v27)
        {
          int64_t v28 = v21 + 4;
          if (v21 + 4 >= v43) {
            goto LABEL_33;
          }
          unint64_t v27 = *(void *)(v42 + 8 * v28);
          if (!v27) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v47 = (v27 - 1) & v27;
    int64_t v48 = v28;
    unint64_t v25 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_27:
    uint64_t v30 = *(void *)(v16 + 48) + 16 * v25;
    uint64_t v13 = *(char **)v30;
    unint64_t v6 = *(void *)(v30 + 8);
    sub_1C3F8F450(v46, v22, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v31 = *(void *)(v22 + *(int *)(v11 + 20));
    uint64_t v32 = *(void *)(v31 + 16);
    sub_1C3F7E324((uint64_t)v13, v6);
    if (!v32) {
      goto LABEL_37;
    }
    unint64_t v20 = v22;
    sub_1C3F7E324((uint64_t)v13, v6);
    uint64_t v33 = sub_1C3F850CC((uint64_t)v13, v6);
    if ((v34 & 1) == 0) {
      goto LABEL_36;
    }
    uint64_t v35 = (uint64_t *)(*(void *)(v31 + 56) + 48 * v33);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[2];
    uint64_t v38 = v35[3];
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3F7E2CC((uint64_t)v13, v6);
    uint64_t result = sub_1C3F8F5D4(v20, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    if (!v36) {
      goto LABEL_38;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (sub_1C41127E8(v38, a2))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v16 = v44;
      uint64_t v11 = v45;
LABEL_7:
      sub_1C3F81BF8(v51, (uint64_t)v13, v6);
      uint64_t v23 = v51[0];
      unint64_t v24 = v51[1];
      goto LABEL_8;
    }
    char v39 = sub_1C41127E8(v37, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v16 = v44;
    uint64_t v11 = v45;
    if (v39) {
      goto LABEL_7;
    }
    uint64_t v23 = (uint64_t)v13;
    unint64_t v24 = v6;
LABEL_8:
    sub_1C3F7E2CC(v23, v24);
    uint64_t v22 = v20;
    unint64_t v20 = v47;
    int64_t v21 = v48;
  }
  uint64_t v29 = v21 + 5;
  if (v21 + 5 >= v43)
  {
LABEL_33:
    swift_release();
    return v52;
  }
  unint64_t v27 = *(void *)(v42 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v21 + 5;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v43) {
      goto LABEL_33;
    }
    unint64_t v27 = *(void *)(v42 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_26;
    }
  }
LABEL_35:
  __break(1u);
LABEL_36:
  sub_1C3F7E2CC((uint64_t)v13, v6);
  uint64_t v22 = v20;
LABEL_37:
  uint64_t result = sub_1C3F8F5D4(v22, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C40615F4(uint64_t result)
{
  uint64_t v1 = (void *)result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return (uint64_t)v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  unint64_t v5 = v2 - 1;
  uint64_t v6 = 24 * v2 + 16;
  uint64_t v7 = 6;
  unint64_t v20 = v2 >> 1;
  while (1)
  {
    if (v3 == v5) {
      goto LABEL_4;
    }
    unint64_t v8 = v1[2];
    if (v3 >= v8) {
      break;
    }
    if (v5 >= v8) {
      goto LABEL_13;
    }
    uint64_t v9 = v1[v7 - 2];
    uint64_t v10 = v1[v7 - 1];
    uint64_t v11 = v1[v7];
    uint64_t v12 = (void *)((char *)v1 + v6);
    uint64_t v13 = v1;
    uint64_t v14 = *(void *)((char *)v1 + v6 - 8);
    uint64_t v15 = *v12;
    uint64_t v16 = v12[1];
    uint64_t v22 = v9;
    sub_1C3FE3ADC(v9);
    uint64_t v21 = v11;
    uint64_t v17 = v14;
    uint64_t v1 = v13;
    swift_bridgeObjectRetain();
    sub_1C3FE3ADC(v17);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v1 = sub_1C3F74514(v13);
    }
    uint64_t v18 = &v1[v7];
    sub_1C3F870F4(v1[v7 - 2]);
    uint64_t result = swift_bridgeObjectRelease();
    *(v18 - 2) = v17;
    *(v18 - 1) = v15;
    *uint64_t v18 = v16;
    if (v5 >= v1[2]) {
      goto LABEL_14;
    }
    uint64_t v19 = (void *)((char *)v1 + v6);
    sub_1C3F870F4(*(void *)((char *)v1 + v6 - 8));
    uint64_t result = swift_bridgeObjectRelease();
    *(v19 - 1) = v22;
    *uint64_t v19 = v10;
    unint64_t v4 = v20;
    v19[1] = v21;
LABEL_4:
    ++v3;
    v7 += 3;
    --v5;
    v6 -= 24;
    if (v4 == v3) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_1C406177C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return Capsule.Ref.subscript.getter(a1, a2, a3);
}

uint64_t sub_1C40617A0(uint64_t a1, long long *a2, uint64_t a3)
{
  sub_1C407C8E4(a1, a2, a3);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8);
  return v5(a1, a3);
}

uint64_t (*sub_1C4061810(void *a1, uint64_t *a2, uint64_t a3))()
{
  uint64_t v6 = malloc(0x28uLL);
  *a1 = v6;
  v6[4] = Capsule.Ref.subscript.modify(v6, a2, a3);
  return sub_1C406188C;
}

uint64_t sub_1C4061890(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return Capsule.Ref.subscript.getter(a1, a2, a3);
}

uint64_t sub_1C40618B4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  sub_1C407C96C(a1, a2, a3, a4);
  uint64_t v5 = sub_1C4497B38();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  return v6(a1, v5);
}

uint64_t (*sub_1C4061930(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4))()
{
  unint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  void v8[4] = Capsule.Ref.subscript.modify(v8, a2, a3, a4);
  return sub_1C406188C;
}

void sub_1C40619AC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

unint64_t sub_1C40619F4(uint64_t a1)
{
  uint64_t v2 = sub_1C44985E8();
  return sub_1C4061C3C(a1, v2);
}

uint64_t sub_1C4061A38(uint64_t a1)
{
  return sub_1C4061B08(a1, (uint64_t (*)(uint64_t, uint64_t))sub_1C4061CD8);
}

uint64_t sub_1C4061A50(uint64_t a1, uint64_t a2)
{
  return sub_1C3FB98C0(a1, a2, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
}

unint64_t sub_1C4061A7C(uint64_t a1)
{
  sub_1C44985F8();
  (*(void (**)(unsigned char *))(*(void *)a1 + 88))(v4);
  uint64_t v2 = sub_1C4498628();
  return sub_1C40627EC(a1, v2);
}

uint64_t sub_1C4061B08(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  sub_1C44971B8();
  sub_1C44985F8();
  sub_1C4497248();
  uint64_t v3 = sub_1C4498628();
  swift_bridgeObjectRelease();
  return a2(a1, v3);
}

unint64_t sub_1C4061BA8(uint64_t a1)
{
  sub_1C4497EA8();
  uint64_t v2 = sub_1C4497078();
  return sub_1C4062940(a1, v2);
}

unint64_t sub_1C4061C3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C4061CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_1C44971B8();
    uint64_t v8 = v7;
    if (v6 == sub_1C44971B8() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_1C44982E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_1C44971B8();
          uint64_t v15 = v14;
          if (v13 == sub_1C44971B8() && v15 == v16) {
            break;
          }
          char v18 = sub_1C44982E8();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_1C4061E50(uint64_t a1, unint64_t a2, uint64_t a3)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    unint64_t v8 = a2;
    uint64_t v10 = ~v5;
    unint64_t v80 = HIDWORD(a1);
    size_t v86 = HIDWORD(a1) - (int)a1;
    uint64_t v87 = ~v5;
    BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v85 = v11;
    unint64_t v88 = a2 >> 62;
    uint64_t v83 = v3 + 64;
    uint64_t v84 = (int)a1;
    uint64_t v81 = a1 >> 32;
    uint64_t v79 = (a1 >> 32) - (int)a1;
    unint64_t v89 = a2 >> 62;
    size_t __n = BYTE6(a2);
    while (1)
    {
      uint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v14 = *v12;
      unint64_t v13 = v12[1];
      uint64_t v15 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
          }
          uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_14:
          sub_1C3F7E324(v14, v13);
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v14 + 16);
          uint64_t v16 = *(void *)(v14 + 24);
          uint64_t v15 = v16 - v17;
          if (!__OFSUB__(v16, v17)) {
            goto LABEL_14;
          }
          goto LABEL_122;
        case 3uLL:
          break;
        default:
          uint64_t v15 = BYTE6(v13);
          break;
      }
      size_t v18 = __n;
      switch(v89)
      {
        case 1uLL:
          size_t v18 = v86;
          if (v85) {
            goto LABEL_123;
          }
          goto LABEL_19;
        case 2uLL:
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v19 = *(void *)(a1 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          size_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_19;
          }
          goto LABEL_124;
        case 3uLL:
          if (v15) {
            goto LABEL_7;
          }
          goto LABEL_119;
        default:
LABEL_19:
          if (v15 == v18)
          {
            if (v15 < 1)
            {
LABEL_119:
              sub_1C3F7E2CC(v14, v13);
              return v6;
            }
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)v14 > v14 >> 32) {
                  goto LABEL_125;
                }
                uint64_t v26 = sub_1C4496298();
                if (v26)
                {
                  uint64_t v27 = v26;
                  uint64_t v28 = sub_1C44962C8();
                  if (__OFSUB__((int)v14, v28)) {
                    goto LABEL_127;
                  }
                  uint64_t v29 = (const void *)(v27 + (int)v14 - v28);
                }
                else
                {
                  uint64_t v29 = 0;
                }
                sub_1C44962B8();
                if (!v88)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v29) {
                    goto LABEL_155;
                  }
                  int v46 = memcmp(v29, __s1, __n);
LABEL_102:
                  sub_1C3F7E2CC(v14, v13);
                  uint64_t v10 = v87;
                  if (!v46) {
                    return v6;
                  }
                  break;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_136;
                  }
                  swift_retain();
                  uint64_t v47 = sub_1C4496298();
                  if (v47)
                  {
                    uint64_t v48 = sub_1C44962C8();
                    if (__OFSUB__(v84, v48)) {
                      goto LABEL_143;
                    }
                    v47 += v84 - v48;
                  }
                  uint64_t v49 = sub_1C44962B8();
                  size_t v50 = v79;
                  if (v49 < v79) {
                    size_t v50 = v49;
                  }
                  if (!v29) {
                    goto LABEL_148;
                  }
                  if (!v47) {
                    goto LABEL_149;
                  }
                  size_t v39 = v50;
                  uint64_t v40 = v29;
                  uint64_t v38 = (const void *)v47;
LABEL_71:
                  int v46 = memcmp(v40, v38, v39);
                  sub_1C3F7E2CC(a1, v8);
                  goto LABEL_102;
                }
                uint64_t v69 = *(void *)(a1 + 16);
                uint64_t v78 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v70 = sub_1C4496298();
                if (v70)
                {
                  uint64_t v71 = v70;
                  uint64_t v72 = sub_1C44962C8();
                  if (__OFSUB__(v69, v72)) {
                    goto LABEL_142;
                  }
                  uint64_t v73 = (const void *)(v71 + v69 - v72);
                }
                else
                {
                  uint64_t v73 = 0;
                }
                if (__OFSUB__(v78, v69)) {
                  goto LABEL_137;
                }
                uint64_t v74 = sub_1C44962B8();
                if (v74 >= v78 - v69) {
                  size_t v75 = v78 - v69;
                }
                else {
                  size_t v75 = v74;
                }
                if (!v29) {
                  goto LABEL_156;
                }
                uint64_t v4 = v83;
                if (!v73) {
                  goto LABEL_157;
                }
                int v62 = memcmp(v29, v73, v75);
LABEL_115:
                swift_release();
LABEL_116:
                swift_release();
                sub_1C3F7E2CC(v14, v13);
                unint64_t v8 = a2;
                uint64_t v10 = v87;
                if (!v62) {
                  return v6;
                }
                break;
              case 2uLL:
                uint64_t v30 = *(void *)(v14 + 16);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_1C4496298();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_1C44962C8();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_126;
                  }
                  char v34 = (const void *)(v32 + v30 - v33);
                }
                else
                {
                  char v34 = 0;
                }
                sub_1C44962B8();
                uint64_t v4 = v83;
                if (!v88)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LODWORD(__s1[1]) = a2;
                  WORD2(__s1[1]) = WORD2(a2);
                  if (!v34) {
                    goto LABEL_152;
                  }
                  int v62 = memcmp(v34, __s1, __n);
                  swift_release();
                  goto LABEL_116;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_130;
                  }
                  swift_retain();
                  uint64_t v42 = (char *)sub_1C4496298();
                  if (v42)
                  {
                    uint64_t v43 = sub_1C44962C8();
                    if (__OFSUB__(v84, v43)) {
                      goto LABEL_141;
                    }
                    v42 += v84 - v43;
                  }
                  uint64_t v44 = sub_1C44962B8();
                  size_t v45 = v79;
                  if (v44 < v79) {
                    size_t v45 = v44;
                  }
                  if (!v34) {
                    goto LABEL_146;
                  }
                  if (!v42) {
                    goto LABEL_147;
                  }
                  int v46 = memcmp(v34, v42, v45);
                  unint64_t v8 = a2;
                  sub_1C3F7E2CC(a1, a2);
                  swift_release();
                  swift_release();
                  goto LABEL_102;
                }
                uint64_t v63 = *(void *)(a1 + 16);
                uint64_t v77 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                int64_t v64 = (char *)sub_1C4496298();
                if (v64)
                {
                  uint64_t v65 = sub_1C44962C8();
                  if (__OFSUB__(v63, v65)) {
                    goto LABEL_140;
                  }
                  v64 += v63 - v65;
                }
                BOOL v21 = __OFSUB__(v77, v63);
                int64_t v66 = v77 - v63;
                if (v21) {
                  goto LABEL_135;
                }
                uint64_t v67 = sub_1C44962B8();
                if (v67 >= v66) {
                  size_t v68 = v66;
                }
                else {
                  size_t v68 = v67;
                }
                if (!v34) {
                  goto LABEL_153;
                }
                uint64_t v4 = v83;
                if (!v64) {
                  goto LABEL_154;
                }
                int v62 = memcmp(v34, v64, v68);
                swift_release();
                swift_release();
                goto LABEL_115;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v88) {
                  goto LABEL_45;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_129;
                  }
                  sub_1C3F7E324(a1, v8);
                  uint64_t v35 = sub_1C4496298();
                  if (!v35) {
                    goto LABEL_145;
                  }
                  uint64_t v23 = v35;
                  uint64_t v36 = sub_1C44962C8();
                  uint64_t v25 = v84 - v36;
                  if (__OFSUB__(v84, v36)) {
                    goto LABEL_134;
                  }
LABEL_41:
                  uint64_t v37 = sub_1C44962B8();
                  uint64_t v38 = (const void *)(v23 + v25);
                  if (v37 >= v79) {
                    size_t v39 = v79;
                  }
                  else {
                    size_t v39 = v37;
                  }
                  uint64_t v40 = __s1;
                  goto LABEL_71;
                }
                uint64_t v57 = *(void *)(a1 + 16);
                uint64_t v58 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v53 = (char *)sub_1C4496298();
                if (v53)
                {
                  uint64_t v59 = sub_1C44962C8();
                  if (__OFSUB__(v57, v59)) {
                    goto LABEL_139;
                  }
                  v53 += v57 - v59;
                }
                BOOL v21 = __OFSUB__(v58, v57);
                int64_t v55 = v58 - v57;
                if (v21) {
                  goto LABEL_132;
                }
                uint64_t v56 = sub_1C44962B8();
                if (!v53) {
                  goto LABEL_151;
                }
LABEL_83:
                if (v56 >= v55) {
                  size_t v60 = v55;
                }
                else {
                  size_t v60 = v56;
                }
                int v61 = memcmp(__s1, v53, v60);
                swift_release();
                swift_release();
                sub_1C3F7E2CC(v14, v13);
                uint64_t v4 = v83;
                uint64_t v10 = v87;
                if (!v61) {
                  return v6;
                }
                break;
              default:
                __s1[0] = v14;
                LOWORD(__s1[1]) = v13;
                BYTE2(__s1[1]) = BYTE2(v13);
                BYTE3(__s1[1]) = BYTE3(v13);
                BYTE4(__s1[1]) = BYTE4(v13);
                BYTE5(__s1[1]) = BYTE5(v13);
                if (!v88)
                {
LABEL_45:
                  __int16 __s2 = a1;
                  char v92 = BYTE2(a1);
                  char v93 = BYTE3(a1);
                  char v94 = v80;
                  char v95 = BYTE5(a1);
                  char v96 = BYTE6(a1);
                  char v97 = HIBYTE(a1);
                  __int16 v98 = v8;
                  char v99 = BYTE2(v8);
                  char v100 = BYTE3(v8);
                  char v101 = BYTE4(v8);
                  char v102 = BYTE5(v8);
                  int v41 = memcmp(__s1, &__s2, __n);
                  sub_1C3F7E2CC(v14, v13);
                  if (!v41) {
                    return v6;
                  }
                  break;
                }
                if (v88 == 1)
                {
                  if (v81 < v84) {
                    goto LABEL_128;
                  }
                  sub_1C3F7E324(a1, v8);
                  uint64_t v22 = sub_1C4496298();
                  if (!v22)
                  {
                    sub_1C44962B8();
                    __break(1u);
LABEL_145:
                    sub_1C44962B8();
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
                    JUMPOUT(0x1C40627BCLL);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = sub_1C44962C8();
                  uint64_t v25 = v84 - v24;
                  if (__OFSUB__(v84, v24)) {
                    goto LABEL_133;
                  }
                  goto LABEL_41;
                }
                uint64_t v51 = *(void *)(a1 + 16);
                uint64_t v52 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v53 = (char *)sub_1C4496298();
                if (v53)
                {
                  uint64_t v54 = sub_1C44962C8();
                  if (__OFSUB__(v51, v54)) {
                    goto LABEL_138;
                  }
                  v53 += v51 - v54;
                }
                BOOL v21 = __OFSUB__(v52, v51);
                int64_t v55 = v52 - v51;
                if (v21) {
                  goto LABEL_131;
                }
                uint64_t v56 = sub_1C44962B8();
                if (!v53) {
                  goto LABEL_150;
                }
                goto LABEL_83;
            }
          }
          else
          {
LABEL_7:
            sub_1C3F7E2CC(v14, v13);
          }
          unint64_t v6 = (v6 + 1) & v10;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

unint64_t sub_1C40627EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v6 = v2;
    unint64_t v8 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v2 + 48) + 8 * i) + 96);
    swift_retain();
    LOBYTE(v8) = v8(a1);
    swift_release();
    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        uint64_t v10 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v6 + 48) + 8 * i) + 96);
        swift_retain();
        char v11 = v10(a1);
        swift_release();
        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_1C4062940(uint64_t a1, uint64_t a2)
{
  uint64_t v21 = a1;
  uint64_t v4 = sub_1C4497EA8();
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v20 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v11 = v5 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    do
    {
      uint64_t v16 = v11;
      v12(v7, *(void *)(v22 + 48) + v14 * v9, v4);
      char v17 = sub_1C4497178();
      (*v15)(v7, v4);
      if (v17) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
      uint64_t v11 = v16;
    }
    while (((*(void *)(v20 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_1C4062AE8(uint64_t a1, int a2)
{
  return sub_1C3FA5438(a1, a2, &qword_1EBBBC6C0);
}

uint64_t sub_1C4062AF4(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = sub_1C4496498();
  uint64_t v5 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA218);
  int v44 = a2;
  uint64_t v9 = sub_1C4497FC8();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v37 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    size_t v39 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v38 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v40 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    size_t v45 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v15 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    uint64_t v41 = v8;
    uint64_t v42 = v7;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v38) {
          goto LABEL_34;
        }
        unint64_t v22 = v39[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v22 = v39[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v44)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v39 = -1 << v36;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v39[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v22 = v39[v17];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_21:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 72);
      unint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
      uint64_t v27 = v42;
      uint64_t v28 = v43;
      if (v44)
      {
        (*v45)(v42, v26, v43);
        sub_1C3FDA248(*(void *)(v8 + 56) + 8 * v20, (uint64_t)v46);
      }
      else
      {
        (*v40)(v42, v26, v43);
        sub_1C3FDA210(*(void *)(v8 + 56) + 8 * v20, (uint64_t)v46);
      }
      sub_1C3FA180C(&qword_1EBBBCA80, MEMORY[0x1E4F276F0]);
      uint64_t result = sub_1C4497078();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v30) & ~*(void *)(v15 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v15 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v18 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      (*v45)((char *)(*(void *)(v10 + 48) + v25 * v18), (unint64_t)v27, v28);
      uint64_t result = sub_1C3FDA248((uint64_t)v46, *(void *)(v10 + 56) + 8 * v18);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v24;
      uint64_t v8 = v41;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1C4062F24(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF290);
  char v37 = a2;
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  BOOL v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1C44985F8();
    sub_1C4497248();
    uint64_t result = sub_1C4498628();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4063230(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB60);
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v33 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0)
    {
      sub_1C3F7E324(v34, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
      swift_retain();
    }
    sub_1C44985F8();
    sub_1C4496568();
    uint64_t result = sub_1C4498628();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v34;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v23, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C406353C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA220);
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v33 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0) {
      sub_1C3F7E324(v34, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
    }
    sub_1C44985F8();
    sub_1C4496568();
    uint64_t result = sub_1C4498628();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v34;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v23, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4063840(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB48);
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v33 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0) {
      sub_1C3F7E324(v34, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
    }
    sub_1C44985F8();
    sub_1C4496568();
    uint64_t result = sub_1C4498628();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v34;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v23, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4063B44(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B368);
  char v35 = a2;
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v33) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v33) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v34 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v33)
        {
LABEL_34:
          swift_release();
          if ((v35 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v34 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v33) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v34 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    unint64_t v21 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    int64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (v35)
    {
      sub_1C3FF2864(v22, v36);
    }
    else
    {
      sub_1C3F5E790((uint64_t)v22, (uint64_t)v36);
      id v23 = v21;
    }
    sub_1C44971B8();
    sub_1C44985F8();
    sub_1C4497248();
    uint64_t v24 = sub_1C4498628();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v26 = v24 & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(void *)(*(void *)(v7 + 48) + 8 * v14) = v21;
    uint64_t result = (uint64_t)sub_1C3FF2864(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v18, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4063E80(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BF60);
  char v36 = a2;
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    unint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1C44985F8();
    sub_1C4497248();
    uint64_t result = sub_1C4498628();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4064198(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for Timestamp(0);
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBE0);
  int v40 = a2;
  uint64_t v9 = sub_1C4497FC8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  char v36 = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  int64_t v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    int64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
    uint64_t v26 = *(void *)(v39 + 72);
    uint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
    if (v40)
    {
      sub_1C3F8F748(v27, (uint64_t)v7, type metadata accessor for Timestamp);
    }
    else
    {
      sub_1C3F8F450(v27, (uint64_t)v7, type metadata accessor for Timestamp);
      swift_retain();
    }
    sub_1C44985F8();
    (*(void (**)(char *))(*(void *)v25 + 88))(v41);
    uint64_t result = sub_1C4498628();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v10 + 48) + 8 * v18) = v25;
    uint64_t result = sub_1C3F8F748((uint64_t)v7, *(void *)(v10 + 56) + v26 * v18, type metadata accessor for Timestamp);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  int64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1C406458C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBB8);
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v31 = v2;
  uint64_t v32 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v32 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v32 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v31;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v32 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v32 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v20);
    if ((a2 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C44985F8();
    (*(void (**)(char *))(*(void *)v29 + 88))(v34);
    uint64_t result = sub_1C4498628();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
      }
      while (v28 == -1);
      unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
    *(_OWORD *)(*(void *)(v7 + 56) + 16 * v18) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v31;
  int64_t v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v22, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C40648B0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBC0);
  uint64_t v49 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v54 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C4496678();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBD8);
  int v50 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_1C4497FC8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int v46 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  int v44 = v2;
  int64_t v45 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v47 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v52 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v53 = v7;
  uint64_t v18 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  uint64_t v48 = v11;
  int64_t v21 = v51;
  while (1)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v45) {
      break;
    }
    unint64_t v26 = v46;
    unint64_t v27 = v46[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v45) {
        goto LABEL_34;
      }
      unint64_t v27 = v46[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v45)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v44;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v46[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v45) {
              goto LABEL_34;
            }
            unint64_t v27 = v46[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
    int64_t v21 = v51;
LABEL_22:
    uint64_t v29 = v8;
    uint64_t v30 = *(void *)(v8 + 72);
    unint64_t v31 = *(void *)(v11 + 48) + v30 * v24;
    if (v50)
    {
      (*v52)(v21, v31, v53);
      uint64_t v32 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1C3F961BC(v32 + v33 * v24, v54, &qword_1EA39CBC0);
    }
    else
    {
      (*v47)(v21, v31, v53);
      uint64_t v34 = *(void *)(v11 + 56);
      uint64_t v33 = *(void *)(v49 + 72);
      sub_1C3F970C4(v34 + v33 * v24, v54, &qword_1EA39CBC0);
    }
    sub_1C3FA180C((unint64_t *)&qword_1EBBBF868, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C4497078();
    uint64_t v35 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v36 = result & ~v35;
    unint64_t v37 = v36 >> 6;
    if (((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v36) & ~*(void *)(v18 + 8 * (v36 >> 6)))) | v36 & 0x7FFFFFFFFFFFFFC0;
      int64_t v21 = v51;
    }
    else
    {
      char v38 = 0;
      unint64_t v39 = (unint64_t)(63 - v35) >> 6;
      int64_t v21 = v51;
      do
      {
        if (++v37 == v39 && (v38 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v40 = v37 == v39;
        if (v37 == v39) {
          unint64_t v37 = 0;
        }
        v38 |= v40;
        uint64_t v41 = *(void *)(v18 + 8 * v37);
      }
      while (v41 == -1);
      unint64_t v22 = __clz(__rbit64(~v41)) + (v37 << 6);
    }
    *(void *)(v18 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v52)((char *)(*(void *)(v13 + 48) + v30 * v22), (unint64_t)v21, v53);
    uint64_t result = sub_1C3F961BC(v54, *(void *)(v13 + 56) + v33 * v22, &qword_1EA39CBC0);
    ++*(void *)(v13 + 16);
    uint64_t v11 = v48;
    uint64_t v8 = v29;
  }
  swift_release();
  uint64_t v3 = v44;
  unint64_t v26 = v46;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v42 = 1 << *(unsigned char *)(v11 + 32);
  if (v42 >= 64) {
    bzero(v26, ((unint64_t)(v42 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v26 = -1 << v42;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1C4064DA8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBD0);
  char v36 = a2;
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v33 = v2;
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v33;
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(*(void *)(v5 + 48) + 8 * v20);
    uint64_t v30 = *(void *)(v5 + 56) + 24 * v20;
    long long v37 = *(_OWORD *)v30;
    uint64_t v31 = *(void *)(v30 + 16);
    if ((v36 & 1) == 0)
    {
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C44985F8();
    (*(void (**)(char *))(*(void *)v29 + 88))(v38);
    uint64_t result = sub_1C4498628();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(void *)(*(void *)(v7 + 48) + 8 * v17) = v29;
    uint64_t v18 = *(void *)(v7 + 56) + 24 * v17;
    *(_OWORD *)uint64_t v18 = v37;
    *(void *)(v18 + 16) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v22, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4065104(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBC0);
  uint64_t v39 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBC8);
  int v40 = a2;
  uint64_t v9 = sub_1C4497FC8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  char v38 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v36 = v2;
  int64_t v37 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v37) {
      break;
    }
    unint64_t v22 = v38;
    unint64_t v23 = v38[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_34;
      }
      unint64_t v23 = v38[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v37)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v38[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v37) {
              goto LABEL_34;
            }
            unint64_t v23 = v38[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
    uint64_t v26 = *(void *)(v39 + 72);
    uint64_t v27 = *(void *)(v8 + 56) + v26 * v20;
    if (v40)
    {
      sub_1C3F961BC(v27, (uint64_t)v7, &qword_1EA39CBC0);
    }
    else
    {
      sub_1C3F970C4(v27, (uint64_t)v7, &qword_1EA39CBC0);
      swift_retain();
    }
    sub_1C44985F8();
    (*(void (**)(char *))(*(void *)v25 + 88))(v41);
    uint64_t result = sub_1C4498628();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v10 + 48) + 8 * v18) = v25;
    uint64_t result = sub_1C3F961BC((uint64_t)v7, *(void *)(v10 + 56) + v26 * v18, &qword_1EA39CBC0);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v22 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_1C40654D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B088);
  char v6 = a2;
  uint64_t v7 = sub_1C4497FC8();
  uint64_t v8 = v7;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v40 = v5 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  char v38 = v2;
  int64_t v39 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v22 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v23 = v22 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v24 >= v39) {
      break;
    }
    uint64_t v25 = (void *)(v5 + 64);
    unint64_t v26 = *(void *)(v40 + 8 * v24);
    ++v14;
    if (!v26)
    {
      int64_t v14 = v24 + 1;
      if (v24 + 1 >= v39) {
        goto LABEL_33;
      }
      unint64_t v26 = *(void *)(v40 + 8 * v14);
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v39)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v38;
          if ((v6 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v26 = *(void *)(v40 + 8 * v27);
        if (!v26)
        {
          while (1)
          {
            int64_t v14 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v39) {
              goto LABEL_33;
            }
            unint64_t v26 = *(void *)(v40 + 8 * v14);
            ++v27;
            if (v26) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v27;
      }
    }
LABEL_30:
    unint64_t v11 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v14 << 6);
LABEL_31:
    uint64_t v32 = 16 * v23;
    long long v33 = *(_OWORD *)(*(void *)(v5 + 48) + v32);
    uint64_t v34 = (uint64_t *)(*(void *)(v5 + 56) + v32);
    uint64_t v36 = *v34;
    uint64_t v35 = v34[1];
    long long v41 = v33;
    if ((v6 & 1) == 0)
    {
      sub_1C3F7E324(v33, *((unint64_t *)&v33 + 1));
      swift_retain();
    }
    sub_1C44985F8();
    sub_1C4496568();
    uint64_t result = sub_1C4498628();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v41;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v41;
      do
      {
        if (++v17 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v17 == v29;
        if (v17 == v29) {
          unint64_t v17 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v12 + 8 * v17);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v20 = 16 * v18;
    *(_OWORD *)(*(void *)(v8 + 48) + v20) = v19;
    int64_t v21 = (void *)(*(void *)(v8 + 56) + v20);
    *int64_t v21 = v36;
    v21[1] = v35;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v3 = v38;
  uint64_t v25 = (void *)(v5 + 64);
  if ((v6 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
  if (v37 >= 64) {
    bzero(v25, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v25 = -1 << v37;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v8;
  return result;
}

uint64_t sub_1C4065800(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BF40);
  char v38 = a2;
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v37[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v3 = v2;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v37[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      long long v29 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
      BOOL v30 = (uint64_t *)(*(void *)(v5 + 56) + 32 * v21);
      uint64_t v31 = *v30;
      unint64_t v32 = v30[1];
      uint64_t v33 = v30[2];
      unint64_t v34 = v30[3];
      long long v39 = v29;
      if ((v38 & 1) == 0)
      {
        sub_1C3F7E324(v29, *((unint64_t *)&v29 + 1));
        sub_1C3F7E324(v31, v32);
        sub_1C3F7E324(v33, v34);
      }
      sub_1C44985F8();
      sub_1C4496568();
      uint64_t result = sub_1C4498628();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        long long v18 = v39;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        long long v18 = v39;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v17) = v18;
      long long v19 = (uint64_t *)(*(void *)(v7 + 56) + 32 * v17);
      *long long v19 = v31;
      v19[1] = v32;
      v19[2] = v33;
      v19[3] = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4065B38(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CAF0);
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v33 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    char v30 = *(unsigned char *)(*(void *)(v5 + 56) + v21);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0) {
      sub_1C3F7E324(v34, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
    }
    sub_1C44985F8();
    sub_1C4496568();
    uint64_t result = sub_1C4498628();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v34;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(unsigned char *)(*(void *)(v7 + 56) + v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v23, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4065E3C(uint64_t a1, int a2)
{
  return sub_1C40661AC(a1, a2, &qword_1EA39CB00, &qword_1EA39CB08);
}

uint64_t sub_1C4065E50(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CAF8);
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  long long v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v35) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    long long v30 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 24 * v21;
    long long v37 = *(_OWORD *)v31;
    long long v38 = v30;
    uint64_t v32 = *(void *)(v31 + 16);
    if ((a2 & 1) == 0)
    {
      sub_1C3F7E324(v30, *((unint64_t *)&v30 + 1));
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1C44985F8();
    sub_1C4496568();
    uint64_t result = sub_1C4498628();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      long long v18 = v38;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      long long v18 = v38;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v17) = v18;
    uint64_t v19 = *(void *)(v7 + 56) + 24 * v17;
    *(_OWORD *)uint64_t v19 = v37;
    *(void *)(v19 + 16) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v23, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4066198(uint64_t a1, int a2)
{
  return sub_1C40661AC(a1, a2, qword_1EBBBFBD0, &qword_1EA39CB68);
}

uint64_t sub_1C40661AC(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v7 = v4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v45 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v46 = a2;
  uint64_t v13 = sub_1C4497FC8();
  uint64_t v14 = v13;
  if (!*(void *)(v12 + 16)) {
    goto LABEL_41;
  }
  uint64_t v42 = v4;
  uint64_t v15 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v16 = *(void *)(v12 + 64);
  int v44 = (void *)(v12 + 64);
  if (v15 < 64) {
    uint64_t v17 = ~(-1 << v15);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v16;
  int64_t v43 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v19 = v13 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  while (1)
  {
    if (v18)
    {
      unint64_t v24 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v25 = v24 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v26 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v26 >= v43) {
      break;
    }
    unint64_t v27 = v44;
    unint64_t v28 = v44[v26];
    ++v21;
    if (!v28)
    {
      int64_t v21 = v26 + 1;
      if (v26 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v28 = v44[v21];
      if (!v28)
      {
        int64_t v29 = v26 + 2;
        if (v29 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v7 = v42;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v28 = v44[v29];
        if (!v28)
        {
          while (1)
          {
            int64_t v21 = v29 + 1;
            if (__OFADD__(v29, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v28 = v44[v21];
            ++v29;
            if (v28) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v29;
      }
    }
LABEL_21:
    unint64_t v18 = (v28 - 1) & v28;
    unint64_t v25 = __clz(__rbit64(v28)) + (v21 << 6);
LABEL_22:
    uint64_t v30 = *(void *)(v45 + 72);
    uint64_t v31 = *(void *)(v12 + 56) + v30 * v25;
    unint64_t v32 = *(void *)(*(void *)(v12 + 48) + 16 * v25 + 8);
    long long v47 = *(_OWORD *)(*(void *)(v12 + 48) + 16 * v25);
    if (v46)
    {
      sub_1C3F961BC(v31, (uint64_t)v11, a3);
    }
    else
    {
      sub_1C3F970C4(v31, (uint64_t)v11, a3);
      sub_1C3F7E324(v47, v32);
    }
    sub_1C44985F8();
    sub_1C4496568();
    uint64_t result = sub_1C4498628();
    uint64_t v33 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v34) & ~*(void *)(v19 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      long long v23 = v47;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      long long v23 = v47;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v19 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v22 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(_OWORD *)(*(void *)(v14 + 48) + 16 * v22) = v23;
    uint64_t result = sub_1C3F961BC((uint64_t)v11, *(void *)(v14 + 56) + v30 * v22, a3);
    ++*(void *)(v14 + 16);
  }
  swift_release();
  uint64_t v7 = v42;
  unint64_t v27 = v44;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v12 + 32);
  if (v40 >= 64) {
    bzero(v27, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v27 = -1 << v40;
  }
  *(void *)(v12 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v7 = v14;
  return result;
}

uint64_t sub_1C406656C(uint64_t a1, char a2)
{
  return sub_1C4066584(a1, a2, &qword_1EA39C0D8);
}

uint64_t sub_1C4066578(uint64_t a1, char a2)
{
  return sub_1C4066584(a1, a2, &qword_1EA39CB70);
}

uint64_t sub_1C4066584(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = sub_1C4497FC8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  unint64_t v35 = v3;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v36) {
      break;
    }
    unint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v37 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v37 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v37 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v36) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v37 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    long long v31 = *(_OWORD *)(*(void *)(v6 + 48) + 16 * v22);
    uint64_t v32 = *(void *)(v6 + 56) + 24 * v22;
    uint64_t v33 = *(void *)v32;
    long long v38 = *(_OWORD *)(v32 + 8);
    long long v39 = v31;
    if ((a2 & 1) == 0)
    {
      sub_1C3F7E324(v31, *((unint64_t *)&v31 + 1));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    sub_1C44985F8();
    sub_1C4496568();
    uint64_t result = sub_1C4498628();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v39;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v39;
      do
      {
        if (++v17 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v17 == v28;
        if (v17 == v28) {
          unint64_t v17 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v17);
      }
      while (v30 == -1);
      unint64_t v18 = __clz(__rbit64(~v30)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v8 + 48) + 16 * v18) = v19;
    uint64_t v20 = *(void *)(v8 + 56) + 24 * v18;
    *(void *)uint64_t v20 = v33;
    *(_OWORD *)(v20 + 8) = v38;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v35;
  unint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v24, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_1C40668C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BFD8);
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v22 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v23 = v22 | (v15 << 6);
      }
      else
      {
        int64_t v24 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v24 >= v12) {
          goto LABEL_33;
        }
        unint64_t v25 = v9[v24];
        ++v15;
        if (!v25)
        {
          int64_t v15 = v24 + 1;
          if (v24 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v25 = v9[v15];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v33;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v25 = v9[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v15 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v25 = v9[v15];
                ++v26;
                if (v25) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v26;
          }
        }
LABEL_30:
        unint64_t v11 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v15 << 6);
      }
      uint64_t v31 = 16 * v23;
      long long v32 = *(_OWORD *)(*(void *)(v5 + 48) + v31);
      long long v34 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
      long long v35 = v32;
      if ((a2 & 1) == 0)
      {
        sub_1C3F7E324(v32, *((unint64_t *)&v32 + 1));
        sub_1C3F7E324(v34, *((unint64_t *)&v34 + 1));
      }
      sub_1C44985F8();
      sub_1C4496568();
      uint64_t result = sub_1C4498628();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        long long v20 = v35;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v16) >> 6;
        long long v20 = v35;
        do
        {
          if (++v18 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v29 = v18 == v28;
          if (v18 == v28) {
            unint64_t v18 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v18);
        }
        while (v30 == -1);
        unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v21 = 16 * v19;
      *(_OWORD *)(*(void *)(v7 + 48) + v21) = v20;
      *(_OWORD *)(*(void *)(v7 + 56) + v21) = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4066BE0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB78);
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  long long v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v33 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v33 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v33 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v33 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(*(void *)(v5 + 56) + 8 * v21);
    long long v34 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0)
    {
      sub_1C3F7E324(v34, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
      swift_retain();
    }
    sub_1C44985F8();
    sub_1C4496568();
    uint64_t result = sub_1C4498628();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v34;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v34;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v23, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C4066EEC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B090);
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    long long v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v15 << 6);
      }
      else
      {
        int64_t v20 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v20 >= v12) {
          goto LABEL_34;
        }
        unint64_t v21 = v9[v20];
        ++v15;
        if (!v21)
        {
          int64_t v15 = v20 + 1;
          if (v20 + 1 >= v12) {
            goto LABEL_34;
          }
          unint64_t v21 = v9[v15];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v12)
            {
LABEL_34:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v33;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v9[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v15 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v15 >= v12) {
                  goto LABEL_34;
                }
                unint64_t v21 = v9[v15];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v15 = v22;
          }
        }
LABEL_21:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v15 << 6);
      }
      uint64_t v23 = *(void *)(v5 + 48);
      unint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v19);
      unint64_t v25 = *(void *)(v23 + 16 * v19 + 8);
      long long v35 = *(_OWORD *)(v23 + 16 * v19);
      if (a2)
      {
        sub_1C3FF2864(v24, v36);
      }
      else
      {
        sub_1C3F5E790((uint64_t)v24, (uint64_t)v36);
        sub_1C3F7E324(v35, v25);
      }
      sub_1C44985F8();
      sub_1C4496568();
      uint64_t result = sub_1C4498628();
      uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
        long long v17 = v35;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        long long v17 = v35;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v13 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(_OWORD *)(*(void *)(v7 + 48) + 16 * v16) = v17;
      uint64_t result = (uint64_t)sub_1C3FF2864(v36, (_OWORD *)(*(void *)(v7 + 56) + 32 * v16));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C40671FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BFA0);
  uint64_t result = sub_1C4497FC8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_1C44985E8();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C40674B4(uint64_t a1, int a2)
{
  return sub_1C3FA5438(a1, a2, &qword_1EA39BF20);
}

uint64_t sub_1C40674C0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBBB8E0);
  uint64_t v6 = sub_1C4497FC8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v22 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v23 = v22 | (v15 << 6);
      }
      else
      {
        int64_t v24 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v24 >= v12) {
          goto LABEL_33;
        }
        unint64_t v25 = v9[v24];
        ++v15;
        if (!v25)
        {
          int64_t v15 = v24 + 1;
          if (v24 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v25 = v9[v15];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v2;
                goto LABEL_40;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v9 = -1 << v33;
              }
              uint64_t v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v25 = v9[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v15 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v25 = v9[v15];
                ++v26;
                if (v25) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v26;
          }
        }
LABEL_30:
        unint64_t v11 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v15 << 6);
      }
      uint64_t v31 = 16 * v23;
      long long v32 = *(_OWORD *)(*(void *)(v5 + 48) + v31);
      long long v34 = *(_OWORD *)(*(void *)(v5 + 56) + v31);
      long long v35 = v32;
      if ((a2 & 1) == 0)
      {
        sub_1C3F7E324(v32, *((unint64_t *)&v32 + 1));
        swift_unknownObjectRetain();
      }
      sub_1C44985F8();
      sub_1C4496568();
      uint64_t result = sub_1C4498628();
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
        long long v20 = v35;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v16) >> 6;
        long long v20 = v35;
        do
        {
          if (++v18 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v29 = v18 == v28;
          if (v18 == v28) {
            unint64_t v18 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v13 + 8 * v18);
        }
        while (v30 == -1);
        unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v21 = 16 * v19;
      *(_OWORD *)(*(void *)(v7 + 48) + v21) = v20;
      *(_OWORD *)(*(void *)(v7 + 56) + v21) = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1C40677D4(uint64_t a1, int a2)
{
  return sub_1C3F51F38(a1, a2, &qword_1EA39B080);
}

uint64_t sub_1C40677E0(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1C4496498();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B400);
  int v46 = a2;
  uint64_t v10 = sub_1C4497FC8();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  int64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_1C3FA180C(&qword_1EBBBCA80, MEMORY[0x1E4F276F0]);
    uint64_t result = sub_1C4497078();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

void *sub_1C4067C04()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Replica();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF190);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1C4497FB8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  unint64_t v25 = v1;
  uint64_t result = (void *)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v16) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v12;
    if (!v22)
    {
      int64_t v12 = v21 + 1;
      if (v21 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v12);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v22 - 1) & v22;
    unint64_t v18 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_9:
    unint64_t v19 = *(void *)(v3 + 72) * v18;
    sub_1C3F8F450(*(void *)(v6 + 48) + v19, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for Replica);
    uint64_t v20 = 16 * v18;
    sub_1C3FAA63C(*(void *)(v6 + 56) + v20, (uint64_t)v26);
    sub_1C3F8F748((uint64_t)v5, *(void *)(v8 + 48) + v19, (uint64_t (*)(void))type metadata accessor for Replica);
    uint64_t result = (void *)sub_1C3FAAC94((uint64_t)v26, *(void *)(v8 + 56) + v20);
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v16)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    int64_t v12 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v12);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C4067E90()
{
  return sub_1C406AE24(&qword_1EBBBC6C0);
}

void *sub_1C4067E9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C4496498();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA218);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1C4497FB8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v8;
    return result;
  }
  int64_t v23 = v1;
  uint64_t result = (void *)(v7 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 64), 8 * v10);
  }
  uint64_t v24 = v6 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 64);
  int64_t v25 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v26 = v3 + 16;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v11);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t v18 = 8 * v16;
    sub_1C3FDA210(*(void *)(v6 + 56) + v18, (uint64_t)v27);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
    uint64_t result = (void *)sub_1C3FDA248((uint64_t)v27, *(void *)(v8 + 56) + v18);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C4068144()
{
  return sub_1C406AE24(qword_1EBBBF948);
}

void *sub_1C4068150()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF290);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = (void *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = v19;
    v22[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C4068300()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    sub_1C3F7E324(v19, *((unint64_t *)&v19 + 1));
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C40684B8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC858);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    sub_1C3F7E324(v19, *((unint64_t *)&v19 + 1));
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C4068670()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBA220);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)sub_1C3F7E324(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C4068820()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB48);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)sub_1C3F7E324(v19, *((unint64_t *)&v19 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1C40689D0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B368);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 32 * v15;
    sub_1C3F5E790(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v22);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    sub_1C3FF2864(v22, (_OWORD *)(*(void *)(v4 + 56) + v18));
    id result = v17;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C4068B98()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BF60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C4068D50()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0248);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *int64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C4068F08()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Timestamp(0);
  uint64_t v25 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBE0);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C4497FB8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  int64_t v24 = v1;
  id result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v9 + 8 * v10) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  int64_t v15 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v21);
    ++v11;
    if (!v22)
    {
      int64_t v11 = v21 + 1;
      if (v21 + 1 >= v15) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v9 + 8 * v11);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v11 << 6);
LABEL_9:
    uint64_t v18 = 8 * v17;
    uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
    unint64_t v20 = *(void *)(v25 + 72) * v17;
    sub_1C3F8F450(*(void *)(v5 + 56) + v20, (uint64_t)v4, type metadata accessor for Timestamp);
    *(void *)(*(void *)(v7 + 48) + v18) = v19;
    sub_1C3F8F748((uint64_t)v4, *(void *)(v7 + 56) + v20, type metadata accessor for Timestamp);
    id result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v15)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v9 + 8 * v23);
  if (v22)
  {
    int64_t v11 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v11 >= v15) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v9 + 8 * v11);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C406918C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBB8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
    swift_retain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C4069358()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBC0);
  uint64_t v38 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v37 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_1C4496678();
  uint64_t v3 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  unint64_t v35 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBD8);
  uint64_t v30 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C4497FB8();
  uint64_t v7 = *(void *)(v5 + 16);
  uint64_t v40 = v6;
  if (!v7)
  {
    id result = (void *)swift_release();
    uint64_t v28 = v40;
    int64_t v27 = v30;
LABEL_25:
    *int64_t v27 = v28;
    return result;
  }
  uint64_t v8 = v6;
  id result = (void *)(v6 + 64);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10)
  {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v10);
    uint64_t v8 = v40;
  }
  uint64_t v31 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  uint64_t v39 = v5;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v34 = v3 + 16;
  int64_t v32 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v33 = v3 + 32;
  uint64_t v16 = v35;
  uint64_t v15 = v36;
  uint64_t v17 = (uint64_t)v37;
  for (i = v40; ; id result = (void *)sub_1C3F961BC(v17, *(void *)(i + 56) + v23, &qword_1EA39CBC0))
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v11 << 6);
      uint64_t v21 = v39;
      goto LABEL_9;
    }
    int64_t v24 = v11 + 1;
    uint64_t v21 = v39;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v24);
    ++v11;
    if (!v25)
    {
      int64_t v11 = v24 + 1;
      if (v24 + 1 >= v32) {
        goto LABEL_23;
      }
      unint64_t v25 = *(void *)(v31 + 8 * v11);
      if (!v25) {
        break;
      }
    }
LABEL_22:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v20 = __clz(__rbit64(v25)) + (v11 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v3 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v16, *(void *)(v21 + 48) + v22, v15);
    unint64_t v23 = *(void *)(v38 + 72) * v20;
    sub_1C3F970C4(*(void *)(v21 + 56) + v23, v17, &qword_1EA39CBC0);
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(i + 48) + v22, v16, v15);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v32)
  {
LABEL_23:
    id result = (void *)swift_release();
    int64_t v27 = v30;
    uint64_t v28 = v40;
    goto LABEL_25;
  }
  unint64_t v25 = *(void *)(v31 + 8 * v26);
  if (v25)
  {
    int64_t v11 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v11 >= v32) {
      goto LABEL_23;
    }
    unint64_t v25 = *(void *)(v31 + 8 * v11);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C40696C8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBD0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)(v19 + 16);
    long long v21 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v22 = v21;
    *(void *)(v22 + 16) = v20;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C40698B0()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBC0);
  uint64_t v26 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CBC8);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C4497FB8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    id result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v19 = *(void *)(v26 + 72) * v16;
    sub_1C3F970C4(*(void *)(v5 + 56) + v19, (uint64_t)v4, &qword_1EA39CBC0);
    *(void *)(*(void *)(v7 + 48) + v17) = v18;
    sub_1C3F961BC((uint64_t)v4, *(void *)(v7 + 56) + v19, &qword_1EA39CBC0);
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    id result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_1C4069B28()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B088);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    long long v20 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v20;
    unint64_t v21 = (void *)(*(void *)(v4 + 56) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_1C3F7E324(v20, *((unint64_t *)&v20 + 1));
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C4069CE4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BF40);
  int64_t v27 = v0;
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C4497FB8();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v27 = v3;
    return result;
  }
  id result = (void *)(v2 + 64);
  uint64_t v5 = v1 + 64;
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v3 + 32)) + 63) >> 6;
  if (v3 != v1 || (unint64_t)result >= v1 + 64 + 8 * v6) {
    id result = memmove(result, (const void *)(v1 + 64), 8 * v6);
  }
  int64_t v8 = 0;
  *(void *)(v3 + 16) = *(void *)(v1 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v1 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v12) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v5 + 8 * v24);
    ++v8;
    if (!v25)
    {
      int64_t v8 = v24 + 1;
      if (v24 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v5 + 8 * v8);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v14 = __clz(__rbit64(v25)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = 32 * v14;
    uint64_t v17 = (uint64_t *)(*(void *)(v1 + 56) + v16);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    unint64_t v21 = v17[3];
    long long v22 = *(_OWORD *)(*(void *)(v1 + 48) + v15);
    *(_OWORD *)(*(void *)(v3 + 48) + v15) = v22;
    unint64_t v23 = (uint64_t *)(*(void *)(v3 + 56) + v16);
    *unint64_t v23 = v18;
    v23[1] = v19;
    v23[2] = v20;
    void v23[3] = v21;
    sub_1C3F7E324(v22, *((unint64_t *)&v22 + 1));
    sub_1C3F7E324(v18, v19);
    id result = (void *)sub_1C3F7E324(v20, v21);
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v12) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v5 + 8 * v26);
  if (v25)
  {
    int64_t v8 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v5 + 8 * v8);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C4069ED4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CAF0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
    id result = (void *)sub_1C3F7E324(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C406A080()
{
  return sub_1C406A298(&qword_1EA39CB00, &qword_1EA39CB08);
}

void *sub_1C406A094()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CAF8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 24 * v15;
    uint64_t v18 = *(void *)(v2 + 56) + v17;
    uint64_t v19 = *(void *)(v18 + 16);
    long long v20 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    long long v21 = *(_OWORD *)v18;
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v20;
    uint64_t v22 = *(void *)(v4 + 56) + v17;
    *(_OWORD *)uint64_t v22 = v21;
    *(void *)(v22 + 16) = v19;
    sub_1C3F7E324(v20, *((unint64_t *)&v20 + 1));
    swift_retain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C406A284()
{
  return sub_1C406A298(qword_1EBBBFBD0, &qword_1EA39CB68);
}

void *sub_1C406A298(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v32 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  unint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v29 = v2;
  uint64_t v8 = *v2;
  uint64_t v9 = sub_1C4497FB8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v29 = v10;
    return result;
  }
  id result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    id result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  uint64_t v30 = v8 + 64;
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v31 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v31) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v26);
    ++v14;
    if (!v27)
    {
      int64_t v14 = v26 + 1;
      if (v26 + 1 >= v31) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v30 + 8 * v14);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v19 = __clz(__rbit64(v27)) + (v14 << 6);
LABEL_12:
    uint64_t v20 = 16 * v19;
    long long v21 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v19);
    uint64_t v22 = *v21;
    unint64_t v23 = v21[1];
    unint64_t v24 = *(void *)(v32 + 72) * v19;
    sub_1C3F970C4(*(void *)(v8 + 56) + v24, (uint64_t)v7, a1);
    int64_t v25 = (uint64_t *)(*(void *)(v10 + 48) + v20);
    *int64_t v25 = v22;
    v25[1] = v23;
    sub_1C3F961BC((uint64_t)v7, *(void *)(v10 + 56) + v24, a1);
    id result = (void *)sub_1C3F7E324(v22, v23);
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v31) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v30 + 8 * v28);
  if (v27)
  {
    int64_t v14 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v30 + 8 * v14);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C406A508()
{
  return sub_1C406A520(&qword_1EA39C0D8);
}

void *sub_1C406A514()
{
  return sub_1C406A520(&qword_1EA39CB70);
}

void *sub_1C406A520(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C4497FB8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v24 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v24);
    ++v10;
    if (!v25)
    {
      int64_t v10 = v24 + 1;
      if (v24 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v7 + 8 * v10);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v25 - 1) & v25;
    unint64_t v16 = __clz(__rbit64(v25)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 16 * v16;
    uint64_t v18 = 24 * v16;
    uint64_t v19 = *(void *)(v3 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    long long v21 = *(_OWORD *)(*(void *)(v3 + 48) + v17);
    long long v22 = *(_OWORD *)(v19 + 8);
    *(_OWORD *)(*(void *)(v5 + 48) + v17) = v21;
    uint64_t v23 = *(void *)(v5 + 56) + v18;
    *(void *)uint64_t v23 = v20;
    *(_OWORD *)(v23 + 8) = v22;
    sub_1C3F7E324(v21, *((unint64_t *)&v21 + 1));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id result = (void *)swift_retain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v14) {
    goto LABEL_26;
  }
  unint64_t v25 = *(void *)(v7 + 8 * v26);
  if (v25)
  {
    int64_t v10 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v7 + 8 * v10);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C406A708()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BFD8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    long long v21 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v21;
    sub_1C3F7E324(v17, *((unint64_t *)&v17 + 1));
    id result = (void *)sub_1C3F7E324(v21, *((unint64_t *)&v21 + 1));
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C406A8D0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB78);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    sub_1C3F7E324(v19, *((unint64_t *)&v19 + 1));
    id result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C406AA88()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B090);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v25 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_1C3F5E790(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (uint64_t *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v18;
    v21[1] = v19;
    sub_1C3FF2864(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    id result = (void *)sub_1C3F7E324(v18, v19);
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C406AC74()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39BFA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C406AE18()
{
  return sub_1C406AE24(&qword_1EA39BF20);
}

void *sub_1C406AE24(uint64_t *a1)
{
  uint64_t v3 = sub_1C4496678();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  int64_t v26 = v1;
  uint64_t v7 = *v1;
  uint64_t v8 = sub_1C4497FB8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v26 = v9;
    return result;
  }
  id result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  uint64_t v27 = v7 + 64;
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v30 = v4 + 16;
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v29 = v4 + 32;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v13);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 48) + v19, v3);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v7 + 56) + v20);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v9 + 48) + v19, v6, v3);
    *(void *)(*(void *)(v9 + 56) + v20) = v21;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v28) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C406B0B4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBBB8E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497FB8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    long long v18 = *(_OWORD *)(*(void *)(v2 + 56) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v16) = v18;
    sub_1C3F7E324(v17, *((unint64_t *)&v17 + 1));
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C406B278()
{
  return sub_1C406B290(qword_1EBBBCB28);
}

void *sub_1C406B284()
{
  return sub_1C406B290(&qword_1EA39B080);
}

void *sub_1C406B290(uint64_t *a1)
{
  uint64_t v3 = sub_1C4496498();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a1);
  int64_t v26 = v1;
  uint64_t v7 = *v1;
  uint64_t v8 = sub_1C4497FB8();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *int64_t v26 = v9;
    return result;
  }
  id result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 64);
  uint64_t v27 = v7 + 64;
  int64_t v28 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v29 = v4 + 32;
  uint64_t v30 = v4 + 16;
  while (1)
  {
    if (v16)
    {
      unint64_t v17 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v27 + 8 * v13);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    unint64_t v19 = *(void *)(v4 + 72) * v18;
    (*(void (**)(char *, unint64_t, uint64_t))(v4 + 16))(v6, *(void *)(v7 + 48) + v19, v3);
    uint64_t v20 = 8 * v18;
    uint64_t v21 = *(void *)(*(void *)(v7 + 56) + 8 * v18);
    (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(*(void *)(v9 + 48) + v19, v6, v3);
    *(void *)(*(void *)(v9 + 56) + v20) = v21;
    id result = (void *)swift_retain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v28) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v27 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v27 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1C406B524()
{
  uint64_t v1 = sub_1C4496498();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B400);
  unint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1C4497FB8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *unint64_t v23 = v7;
    return result;
  }
  id result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1C406B7BC(void *a1, char a2, void *a3)
{
  uint64_t v6 = a1[2];
  swift_bridgeObjectRetain();
  if (!v6) {
    goto LABEL_23;
  }
  unint64_t v7 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v9 = a1[4];
  sub_1C3F7E324(v9, v7);
  swift_retain();
  if (!v8) {
    goto LABEL_23;
  }
  int64_t v10 = (void *)*a3;
  unint64_t v11 = sub_1C3F850CC(v9, v7);
  uint64_t v13 = v10[2];
  BOOL v14 = (v12 & 1) == 0;
  BOOL v15 = __OFADD__(v13, v14);
  uint64_t v16 = v13 + v14;
  if (v15)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  LOBYTE(v17) = v12;
  if (v10[3] < v16)
  {
    sub_1C4066BE0(v16, a2 & 1);
    unint64_t v11 = sub_1C3F850CC(v9, v7);
    if ((v17 & 1) == (v18 & 1)) {
      goto LABEL_8;
    }
LABEL_6:
    unint64_t v11 = sub_1C4498558();
    __break(1u);
  }
  if (a2)
  {
LABEL_8:
    if (v17) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  unint64_t v21 = v11;
  sub_1C406A8D0();
  unint64_t v11 = v21;
  if (v17)
  {
LABEL_9:
    int64_t v19 = (void *)swift_allocError();
    swift_willThrow();
    id v20 = v19;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_1C3F7E2CC(v9, v7);
      swift_bridgeObjectRelease();

      return;
    }
    goto LABEL_28;
  }
LABEL_12:
  uint64_t v22 = (void *)*a3;
  *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
  unint64_t v23 = (uint64_t *)(v22[6] + 16 * v11);
  *unint64_t v23 = v9;
  v23[1] = v7;
  *(void *)(v22[7] + 8 * v11) = v8;
  uint64_t v24 = v22[2];
  BOOL v15 = __OFADD__(v24, 1);
  uint64_t v25 = v24 + 1;
  if (v15)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_1C4497D28();
    sub_1C4497268();
    sub_1C4497E88();
    sub_1C4497268();
    sub_1C4497F58();
    __break(1u);
    return;
  }
  _OWORD v22[2] = v25;
  if (v6 != 1)
  {
    uint64_t v17 = a1 + 9;
    unint64_t v26 = 1;
    while (v26 < a1[2])
    {
      unint64_t v7 = *(v17 - 1);
      uint64_t v8 = *v17;
      uint64_t v9 = *(v17 - 2);
      sub_1C3F7E324(v9, v7);
      swift_retain();
      if (!v8) {
        goto LABEL_23;
      }
      uint64_t v27 = (void *)*a3;
      unint64_t v28 = sub_1C3F850CC(v9, v7);
      uint64_t v30 = v27[2];
      BOOL v31 = (v29 & 1) == 0;
      BOOL v15 = __OFADD__(v30, v31);
      uint64_t v32 = v30 + v31;
      if (v15) {
        goto LABEL_25;
      }
      a2 = v29;
      if (v27[3] < v32)
      {
        sub_1C4066BE0(v32, 1);
        unint64_t v28 = sub_1C3F850CC(v9, v7);
        if ((a2 & 1) != (v33 & 1)) {
          goto LABEL_6;
        }
      }
      if (a2) {
        goto LABEL_9;
      }
      uint64_t v34 = (void *)*a3;
      *(void *)(*a3 + 8 * (v28 >> 6) + 64) |= 1 << v28;
      unint64_t v35 = (uint64_t *)(v34[6] + 16 * v28);
      *unint64_t v35 = v9;
      v35[1] = v7;
      *(void *)(v34[7] + 8 * v28) = v8;
      uint64_t v36 = v34[2];
      BOOL v15 = __OFADD__(v36, 1);
      uint64_t v37 = v36 + 1;
      if (v15) {
        goto LABEL_26;
      }
      ++v26;
      v34[2] = v37;
      v17 += 3;
      if (v6 == v26) {
        goto LABEL_23;
      }
    }
    goto LABEL_27;
  }
LABEL_23:
  swift_bridgeObjectRelease_n();
}

uint64_t (*sub_1C406BB70(void *a1, uint64_t a2))()
{
  uint64_t v4 = malloc(0x58uLL);
  *a1 = v4;
  uint64_t v5 = type metadata accessor for Replica();
  uint64_t v6 = malloc(*(void *)(*(void *)(v5 - 8) + 64));
  v4[8] = v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C3F8F450(a2, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Replica);
  v4[9] = sub_1C3F84F44(v4);
  v4[10] = sub_1C406BE20(v4 + 4, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
  return sub_1C3FAAD20;
}

void (*sub_1C406BC50(void *a1, uint64_t a2, unint64_t a3))(uint64_t)
{
  uint64_t v6 = malloc(0x60uLL);
  *a1 = v6;
  v6[8] = a2;
  v6[9] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C3F7E324(a2, a3);
  v6[10] = sub_1C406C48C(v6);
  v6[11] = sub_1C406C0B4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1C3F84D74;
}

void (*sub_1C406BD00(void *a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v6 = malloc(0x58uLL);
  *a1 = v6;
  v6[8] = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  swift_bridgeObjectRetain();
  v6[9] = sub_1C3F84F44(v6);
  v6[10] = sub_1C406C2A4(v6 + 4, a2, a3, isUniquelyReferenced_nonNull_native);
  return sub_1C406BDAC;
}

void sub_1C406BDAC(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  uint64_t v2 = *(void (**)(void *, void))(*(void *)a1 + 72);
  (*(void (**)(void))(*(void *)a1 + 80))();
  swift_bridgeObjectRelease();
  v2(v1, 0);
  free(v1);
}

void (*sub_1C406BE20(void *a1, uint64_t a2, char a3))(uint64_t **a1)
{
  uint64_t v4 = v3;
  uint64_t v8 = malloc(0x28uLL);
  *a1 = v8;
  *uint64_t v8 = a2;
  v8[1] = v3;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC09D0);
  int64_t v10 = malloc(*(void *)(*(void *)(v9 - 8) + 64));
  void v8[2] = v10;
  uint64_t v11 = *v3;
  unint64_t v13 = sub_1C3F8F160(a2);
  *((unsigned char *)v8 + 32) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a3 & 1) != 0)
    {
LABEL_7:
      v8[3] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*v4 + 56);
        uint64_t v20 = sub_1C44967E8();
        uint64_t v21 = *(void *)(v20 - 8);
        (*(void (**)(void *, unint64_t, uint64_t))(v21 + 32))(v10, v19 + *(void *)(v21 + 72) * v13, v20);
        uint64_t v22 = 0;
LABEL_12:
        (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v10, v22, 1, v20);
        return sub_1C406C054;
      }
LABEL_11:
      uint64_t v20 = sub_1C44967E8();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = 1;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_1C3FA50F8();
      goto LABEL_7;
    }
    sub_1C3F9188C(v16, a3 & 1);
    unint64_t v23 = sub_1C3F8F160(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      v8[3] = v23;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  type metadata accessor for Replica();
  id result = (void (*)(uint64_t **))sub_1C4498558();
  __break(1u);
  return result;
}

void sub_1C406C054(uint64_t **a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (void *)(*a1)[2];
  sub_1C406C4BC((uint64_t)v2, *((unsigned __int8 *)*a1 + 32), (uint64_t *)(*a1)[1], (*a1)[3], **a1);
  sub_1C3F962E0((uint64_t)v2, (uint64_t *)&unk_1EBBC09D0);
  free(v2);
  free(v1);
}

void (*sub_1C406C0B4(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  int64_t v10 = malloc(0x38uLL);
  *a1 = v10;
  v10[3] = a3;
  void v10[4] = v4;
  void v10[2] = a2;
  uint64_t v11 = *v4;
  uint64_t v13 = sub_1C3FB98C0(a2, a3, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
  *((unsigned char *)v10 + 48) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      v10[5] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = (uint64_t *)(*(void *)(*v5 + 56) + 16 * v13);
        uint64_t v20 = *v19;
        uint64_t v21 = v19[1];
LABEL_12:
        *int64_t v10 = v20;
        v10[1] = v21;
        return sub_1C406C254;
      }
LABEL_11:
      uint64_t v20 = 0;
      uint64_t v21 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1C4069B28();
      goto LABEL_7;
    }
    sub_1C40654D4(v16, a4 & 1);
    uint64_t v22 = sub_1C3FB98C0(a2, a3, MEMORY[0x1E4F27780], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C4061E50);
    if ((v17 & 1) == (v23 & 1))
    {
      uint64_t v13 = v22;
      v10[5] = v22;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  id result = (void (*)(uint64_t **))sub_1C4498558();
  __break(1u);
  return result;
}

void sub_1C406C254(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1C406C790(*a1, *((unsigned char *)*a1 + 48), (uint64_t *)(*a1)[4], (*a1)[5], (*a1)[2], (*a1)[3]);
  swift_release();
  free(v1);
}

void (*sub_1C406C2A4(void *a1, uint64_t a2, uint64_t a3, char a4))(uint64_t **a1)
{
  uint64_t v5 = v4;
  int64_t v10 = malloc(0x30uLL);
  *a1 = v10;
  void v10[2] = a3;
  v10[3] = v4;
  v10[1] = a2;
  uint64_t v11 = *v4;
  uint64_t v13 = sub_1C3FB98C0(a2, a3, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C3FB9954);
  *((unsigned char *)v10 + 40) = v12 & 1;
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
  }
  else
  {
    char v17 = v12;
    uint64_t v18 = *(void *)(v11 + 24);
    if (v18 >= v16 && (a4 & 1) != 0)
    {
LABEL_7:
      void v10[4] = v13;
      if (v17)
      {
LABEL_8:
        uint64_t v19 = *(void *)(*(void *)(*v5 + 56) + 8 * v13);
LABEL_12:
        *int64_t v10 = v19;
        return sub_1C406C43C;
      }
LABEL_11:
      uint64_t v19 = 0;
      goto LABEL_12;
    }
    if (v18 >= v16 && (a4 & 1) == 0)
    {
      sub_1C4068B98();
      goto LABEL_7;
    }
    sub_1C4063E80(v16, a4 & 1);
    uint64_t v20 = sub_1C3FB98C0(a2, a3, MEMORY[0x1E4FBB120], (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_1C3FB9954);
    if ((v17 & 1) == (v21 & 1))
    {
      uint64_t v13 = v20;
      void v10[4] = v20;
      if (v17) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  id result = (void (*)(uint64_t **))sub_1C4498558();
  __break(1u);
  return result;
}

void sub_1C406C43C(uint64_t **a1)
{
  uint64_t v1 = *a1;
  sub_1C406C968(*a1, *((unsigned char *)*a1 + 40), (uint64_t *)(*a1)[3], (*a1)[4], (*a1)[1], (*a1)[2]);
  swift_release();
  free(v1);
}

uint64_t (*sub_1C406C48C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  *uint64_t v1 = 0x8000000000000000;
  return sub_1C3F84B24;
}

unint64_t sub_1C406C4BC(uint64_t a1, int a2, uint64_t *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v25 = a5;
  unint64_t v26 = a4;
  int v27 = a2;
  uint64_t v7 = type metadata accessor for Replica();
  uint64_t v24 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC09D0);
  MEMORY[0x1F4188790](v10 - 8);
  char v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C44967E8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  char v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v24 - v18;
  sub_1C3F970C4(a1, (uint64_t)v12, (uint64_t *)&unk_1EBBC09D0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    unint64_t result = sub_1C3F962E0((uint64_t)v12, (uint64_t *)&unk_1EBBC09D0);
    if (v27)
    {
      unint64_t v21 = v26;
      swift_arrayDestroy();
      return sub_1C3FA5A34(v21, *a3);
    }
  }
  else
  {
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
    v22(v19, v12, v13);
    char v23 = (void *)*a3;
    if (v27)
    {
      return ((uint64_t (*)(unint64_t, char *, uint64_t))v22)(v23[7] + *(void *)(v14 + 72) * v26, v19, v13);
    }
    else
    {
      sub_1C3F8F450(v25, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for Replica);
      v22(v17, v19, v13);
      return sub_1C3F9179C(v26, (uint64_t)v9, (uint64_t)v17, v23);
    }
  }
  return result;
}

uint64_t sub_1C406C790(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    uint64_t v11 = a1[1];
    char v12 = (void *)*a3;
    if (a2)
    {
      uint64_t v13 = (uint64_t *)(v12[7] + 16 * a4);
      *uint64_t v13 = v8;
      v13[1] = v11;
    }
    else
    {
      sub_1C4421E14(a4, a5, a6, v8, v11, v12);
      sub_1C3F7E324(a5, a6);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1C41179B4(a4, *a3);
  }
  return swift_retain();
}

uint64_t sub_1C406C854(uint64_t *a1, char a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  return sub_1C406C880(a1, a2, a3, a4, a5, a6, (void (*)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1C4421F14, (void (*)(uint64_t, void))sub_1C4117D90);
}

uint64_t sub_1C406C880(uint64_t *a1, char a2, void *a3, uint64_t a4, uint64_t a5, unint64_t a6, void (*a7)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t), void (*a8)(uint64_t, void))
{
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  if (*a1)
  {
    uint64_t v14 = *a3;
    if (a2)
    {
      uint64_t v15 = (uint64_t *)(*(void *)(v14 + 56) + 24 * a4);
      *uint64_t v15 = v10;
      v15[1] = v11;
      _OWORD v15[2] = v12;
    }
    else
    {
      a7(a4, a5, a6, v10, v11, v12, v14);
      sub_1C3F7E324(a5, a6);
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    a8(a4, *a3);
  }
  return sub_1C407D5D0(v10);
}

uint64_t sub_1C406C968(uint64_t *a1, char a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *a1;
  if (*a1)
  {
    if (a2)
    {
      *(void *)(*(void *)(*a3 + 56) + 8 * a4) = v8;
    }
    else
    {
      sub_1C4421D64(a4, a5, a6, v8, (void *)*a3);
      swift_bridgeObjectRetain();
    }
  }
  else if (a2)
  {
    swift_arrayDestroy();
    sub_1C41177DC(a4, *a3);
  }
  return swift_retain();
}

uint64_t sub_1C406CA18(void *a1, void *a2)
{
  return sub_1C406E74C(a1, a2, &qword_1EA39CB90, type metadata accessor for Key);
}

uint64_t sub_1C406CA38(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_1C4497C98();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      v21[9] = v8;
      type metadata accessor for AnyReference();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v21[0];
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C4497C88();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v17 = sub_1C406FAAC(v7, result + 1);
    v21[0] = v17;
    if (*(void *)(v17 + 24) <= *(void *)(v17 + 16))
    {
      swift_retain();
      sub_1C406FCD4();
      uint64_t v18 = v21[0];
    }
    else
    {
      uint64_t v18 = v17;
      swift_retain();
    }
    sub_1C4072418(a2, v18);
    *uint64_t v3 = v18;
  }
  else
  {
    sub_1C44985F8();
    uint64_t v10 = *(void (**)(void *))(*(void *)a2 + 104);
    swift_bridgeObjectRetain();
    v10(v21);
    uint64_t v11 = sub_1C4498628();
    uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v13 = v11 & ~v12;
    if ((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
    {
      uint64_t v14 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v6 + 48) + 8 * v13) + 96);
      swift_retain();
      LOBYTE(v14) = v14(a2);
      swift_release();
      if (v14)
      {
LABEL_12:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v13);
        swift_retain();
        return 0;
      }
      uint64_t v15 = ~v12;
      while (1)
      {
        unint64_t v13 = (v13 + 1) & v15;
        if (((*(void *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
          break;
        }
        uint64_t v16 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v6 + 48) + 8 * v13) + 96);
        swift_retain();
        LOBYTE(v16) = v16(a2);
        swift_release();
        if (v16) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21[0] = *v2;
    *uint64_t v2 = 0x8000000000000000;
    uint64_t v20 = swift_retain();
    sub_1C40724DC(v20, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v21[0];
  }
  swift_bridgeObjectRelease();
  *a1 = a2;
  return 1;
}

uint64_t sub_1C406CD38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v126 = *MEMORY[0x1E4F143B8];
  uint64_t v11 = *v5;
  sub_1C44985F8();
  uint64_t v104 = v5;
  uint64_t v105 = a1;
  sub_1C4498618();
  swift_bridgeObjectRetain();
  if (a2)
  {
    sub_1C3FE3ADC(a2);
    swift_bridgeObjectRetain();
    sub_1C411AAA4(__s1, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C411AAA4(__s1, a3);
    swift_bridgeObjectRelease();
    sub_1C3F870F4(a2);
  }
  sub_1C3F7E324(a4, a5);
  sub_1C4496568();
  sub_1C3F7E2CC(a4, a5);
  uint64_t v12 = sub_1C4498628();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  uint64_t v112 = v11 + 56;
  if (((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
  {
LABEL_130:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&__s1[0] = *v104;
    void *v104 = 0x8000000000000000;
    sub_1C3FE3ADC(a2);
    sub_1C3F7E324(a4, a5);
    sub_1C40726D8(a2, a3, a4, a5, v14, isUniquelyReferenced_nonNull_native);
    void *v104 = *(void *)&__s1[0];
    swift_bridgeObjectRelease();
    uint64_t *v105 = a2;
    v105[1] = a3;
    uint64_t result = 1;
    v105[2] = a4;
    v105[3] = a5;
    return result;
  }
  uint64_t v110 = ~v13;
  unint64_t v99 = HIDWORD(a4);
  size_t v102 = HIDWORD(a4) - (int)a4;
  unint64_t v103 = a5;
  BOOL v15 = __OFSUB__(HIDWORD(a4), a4);
  BOOL v101 = v15;
  uint64_t v107 = a4;
  uint64_t v100 = (int)a4;
  uint64_t v97 = (a4 >> 32) - (int)a4;
  uint64_t v98 = a4 >> 32;
  unint64_t v106 = a5 >> 62;
  unint64_t v108 = a5 >> 62;
  size_t __n = BYTE6(a5);
  uint64_t v111 = v11;
  while (2)
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v11 + 48) + 32 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = v16[2];
    unint64_t v20 = v16[3];
    if (*v16)
    {
      sub_1C3FE3ADC(*v16);
      if (a2)
      {
        sub_1C3FE3ADC(a2);
        sub_1C3FE3ADC(v17);
        sub_1C3FE3ADC(v17);
        sub_1C3F7E324(v19, v20);
        if (sub_1C4113F94(v18, a3))
        {
          char v21 = sub_1C4113F94(v17, a2);
          sub_1C3F870F4(a2);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C3F870F4(v17);
          if ((v21 & 1) == 0) {
            goto LABEL_20;
          }
          goto LABEL_14;
        }
        sub_1C3F870F4(a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v23 = v17;
      }
      else
      {
        sub_1C3FE3ADC(v17);
        sub_1C3FE3ADC(v17);
        sub_1C3F7E324(v19, v20);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_17:
        sub_1C3FE3ADC(a2);
        sub_1C3F870F4(v17);
        uint64_t v23 = a2;
      }
      sub_1C3F870F4(v23);
LABEL_20:
      sub_1C3F870F4(v17);
      sub_1C3F7E2CC(v19, v20);
      goto LABEL_21;
    }
    sub_1C3FE3ADC(0);
    sub_1C3F7E324(v19, v20);
    if (a2) {
      goto LABEL_17;
    }
LABEL_14:
    uint64_t v22 = 0;
    switch(v20 >> 62)
    {
      case 1uLL:
        LODWORD(v22) = HIDWORD(v19) - v19;
        if (__OFSUB__(HIDWORD(v19), v19))
        {
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
        }
        uint64_t v22 = (int)v22;
        break;
      case 2uLL:
        uint64_t v25 = *(void *)(v19 + 16);
        uint64_t v24 = *(void *)(v19 + 24);
        BOOL v26 = __OFSUB__(v24, v25);
        uint64_t v22 = v24 - v25;
        if (!v26) {
          break;
        }
        goto LABEL_134;
      case 3uLL:
        break;
      default:
        uint64_t v22 = BYTE6(v20);
        break;
    }
    size_t v27 = __n;
    switch(v108)
    {
      case 1uLL:
        size_t v27 = v102;
        if (v101) {
          goto LABEL_135;
        }
        goto LABEL_30;
      case 2uLL:
        uint64_t v29 = *(void *)(a4 + 16);
        uint64_t v28 = *(void *)(a4 + 24);
        BOOL v26 = __OFSUB__(v28, v29);
        size_t v27 = v28 - v29;
        if (!v26) {
          goto LABEL_30;
        }
        goto LABEL_136;
      case 3uLL:
        if (!v22) {
          goto LABEL_131;
        }
        goto LABEL_20;
      default:
LABEL_30:
        if (v22 != v27) {
          goto LABEL_20;
        }
        if (v22 >= 1)
        {
          switch(v20 >> 62)
          {
            case 1uLL:
              if ((int)v19 > v19 >> 32) {
                goto LABEL_137;
              }
              sub_1C3F7E324(v19, v20);
              uint64_t v34 = sub_1C4496298();
              if (v34)
              {
                uint64_t v35 = v34;
                uint64_t v36 = sub_1C44962C8();
                if (__OFSUB__((int)v19, v36)) {
                  goto LABEL_139;
                }
                char v93 = (void *)(v35 + (int)v19 - v36);
              }
              else
              {
                char v93 = 0;
              }
              a5 = v103;
              sub_1C44962B8();
              a4 = v107;
              if (v106)
              {
                if (v106 == 1)
                {
                  if (v98 < v100) {
                    goto LABEL_148;
                  }
                  swift_retain();
                  uint64_t v52 = (char *)sub_1C4496298();
                  if (v52)
                  {
                    uint64_t v53 = sub_1C44962C8();
                    if (__OFSUB__(v100, v53)) {
                      goto LABEL_155;
                    }
                    v52 += v100 - v53;
                  }
                  uint64_t v54 = sub_1C44962B8();
                  size_t v55 = v97;
                  if (v54 < v97) {
                    size_t v55 = v54;
                  }
                  if (!v93) {
                    goto LABEL_160;
                  }
                  if (!v52) {
                    goto LABEL_161;
                  }
                  int v45 = memcmp(v93, v52, v55);
                  a4 = v107;
                  sub_1C3F7E2CC(v107, v103);
                }
                else
                {
                  uint64_t v89 = *(void *)(v107 + 24);
                  char v91 = *(char **)(v107 + 16);
                  swift_retain();
                  swift_retain();
                  uint64_t v68 = sub_1C4496298();
                  if (v68)
                  {
                    uint64_t v69 = v68;
                    uint64_t v70 = sub_1C44962C8();
                    uint64_t v71 = v91;
                    if (__OFSUB__(v91, v70)) {
                      goto LABEL_154;
                    }
                    uint64_t v72 = &v91[v69 - v70];
                  }
                  else
                  {
                    uint64_t v72 = 0;
                    uint64_t v71 = v91;
                  }
                  char v92 = v72;
                  int64_t v76 = v89 - (void)v71;
                  if (__OFSUB__(v89, v71)) {
                    goto LABEL_149;
                  }
                  uint64_t v77 = sub_1C44962B8();
                  if (v77 >= v76) {
                    size_t v78 = v76;
                  }
                  else {
                    size_t v78 = v77;
                  }
                  if (!v93) {
                    goto LABEL_168;
                  }
                  a4 = v107;
                  if (!v92) {
                    goto LABEL_169;
                  }
                  int v45 = memcmp(v93, v92, v78);
                  swift_release();
                  swift_release();
                }
              }
              else
              {
                LODWORD(__s1[0]) = v107;
                BYTE4(__s1[0]) = v99;
                *(_WORD *)((char *)__s1 + 5) = *(_WORD *)((char *)&v107 + 5);
                BYTE7(__s1[0]) = HIBYTE(v107);
                DWORD2(__s1[0]) = v103;
                WORD6(__s1[0]) = WORD2(v103);
                if (!v93) {
                  goto LABEL_165;
                }
                int v45 = memcmp(v93, __s1, __n);
              }
              uint64_t v46 = v19;
              unint64_t v47 = v20;
LABEL_127:
              sub_1C3F7E2CC(v46, v47);
              goto LABEL_128;
            case 2uLL:
              uint64_t v37 = *(void *)(v19 + 16);
              swift_retain();
              swift_retain();
              uint64_t v38 = sub_1C4496298();
              if (v38)
              {
                uint64_t v39 = v38;
                uint64_t v40 = sub_1C44962C8();
                if (__OFSUB__(v37, v40)) {
                  goto LABEL_138;
                }
                uint64_t v90 = (void *)(v39 + v37 - v40);
              }
              else
              {
                uint64_t v90 = 0;
              }
              a5 = v103;
              a4 = v107;
              sub_1C44962B8();
              if (!v106)
              {
                LODWORD(__s1[0]) = v107;
                BYTE4(__s1[0]) = v99;
                *(_WORD *)((char *)__s1 + 5) = *(_WORD *)((char *)&v107 + 5);
                BYTE7(__s1[0]) = HIBYTE(v107);
                DWORD2(__s1[0]) = v103;
                WORD6(__s1[0]) = WORD2(v103);
                if (!v90) {
                  goto LABEL_164;
                }
                int v45 = memcmp(v90, __s1, __n);
LABEL_101:
                swift_release();
                swift_release();
                goto LABEL_128;
              }
              if (v106 == 1)
              {
                if (v98 < v100) {
                  goto LABEL_142;
                }
                swift_retain();
                uint64_t v48 = (char *)sub_1C4496298();
                if (v48)
                {
                  uint64_t v49 = sub_1C44962C8();
                  if (__OFSUB__(v100, v49)) {
                    goto LABEL_153;
                  }
                  v48 += v100 - v49;
                }
                uint64_t v50 = sub_1C44962B8();
                size_t v51 = v97;
                if (v50 < v97) {
                  size_t v51 = v50;
                }
                if (!v90) {
                  goto LABEL_158;
                }
                if (!v48) {
                  goto LABEL_159;
                }
                int v45 = memcmp(v90, v48, v51);
                a4 = v107;
                sub_1C3F7E2CC(v107, v103);
                goto LABEL_101;
              }
              uint64_t v87 = *(void *)(v107 + 24);
              uint64_t v88 = *(void *)(v107 + 16);
              swift_retain();
              swift_retain();
              uint64_t v64 = sub_1C4496298();
              if (v64)
              {
                uint64_t v65 = v64;
                uint64_t v66 = sub_1C44962C8();
                uint64_t v67 = v88;
                if (__OFSUB__(v88, v66)) {
                  goto LABEL_152;
                }
                size_t v86 = (void *)(v65 + v88 - v66);
              }
              else
              {
                size_t v86 = 0;
                uint64_t v67 = v88;
              }
              int64_t v73 = v87 - v67;
              if (__OFSUB__(v87, v67)) {
                goto LABEL_147;
              }
              uint64_t v74 = sub_1C44962B8();
              if (v74 >= v73) {
                size_t v75 = v73;
              }
              else {
                size_t v75 = v74;
              }
              if (!v90) {
                goto LABEL_166;
              }
              a4 = v107;
              if (!v86) {
                goto LABEL_167;
              }
              int v45 = memcmp(v90, v86, v75);
              swift_release();
              swift_release();
              swift_release();
              swift_release();
LABEL_128:
              sub_1C3F870F4(v17);
              sub_1C3F7E2CC(v19, v20);
              if (!v45) {
                goto LABEL_132;
              }
              break;
            case 3uLL:
              *(void *)((char *)__s1 + 6) = 0;
              *(void *)&__s1[0] = 0;
              if (!v106) {
                goto LABEL_58;
              }
              if (v106 == 1)
              {
                if (v98 < v100) {
                  goto LABEL_141;
                }
                sub_1C3F7E324(a4, a5);
                uint64_t v41 = sub_1C4496298();
                if (!v41) {
                  goto LABEL_157;
                }
                uint64_t v31 = v41;
                uint64_t v42 = sub_1C44962C8();
                uint64_t v33 = v100 - v42;
                if (__OFSUB__(v100, v42)) {
                  goto LABEL_146;
                }
LABEL_54:
                uint64_t v43 = sub_1C44962B8();
                if (v43 >= v97) {
                  size_t v44 = v97;
                }
                else {
                  size_t v44 = v43;
                }
                int v45 = memcmp(__s1, (const void *)(v31 + v33), v44);
                a4 = v107;
                uint64_t v46 = v107;
                a5 = v103;
                unint64_t v47 = v103;
                goto LABEL_127;
              }
              uint64_t v61 = *(void *)(a4 + 16);
              char v95 = *(char **)(a4 + 24);
              swift_retain();
              swift_retain();
              uint64_t v57 = (char *)sub_1C4496298();
              if (v57)
              {
                uint64_t v62 = sub_1C44962C8();
                if (__OFSUB__(v61, v62)) {
                  goto LABEL_151;
                }
                v57 += v61 - v62;
              }
              BOOL v26 = __OFSUB__(v95, v61);
              uint64_t v59 = &v95[-v61];
              if (v26) {
                goto LABEL_144;
              }
              uint64_t v60 = sub_1C44962B8();
              if (!v57) {
                goto LABEL_163;
              }
LABEL_94:
              if (v60 >= (uint64_t)v59) {
                size_t v63 = (size_t)v59;
              }
              else {
                size_t v63 = v60;
              }
              int v96 = memcmp(__s1, v57, v63);
              swift_release();
              a4 = v107;
              swift_release();
              sub_1C3F870F4(v17);
              sub_1C3F7E2CC(v19, v20);
              a5 = v103;
              if (!v96) {
                goto LABEL_132;
              }
              break;
            default:
              *(void *)&__s1[0] = v19;
              WORD4(__s1[0]) = v20;
              BYTE10(__s1[0]) = BYTE2(v20);
              BYTE11(__s1[0]) = BYTE3(v20);
              BYTE12(__s1[0]) = BYTE4(v20);
              BYTE13(__s1[0]) = BYTE5(v20);
              if (!v106)
              {
LABEL_58:
                __int16 __s2 = a4;
                char v114 = BYTE2(a4);
                char v115 = BYTE3(a4);
                char v116 = v99;
                char v117 = BYTE5(a4);
                char v118 = BYTE6(a4);
                char v119 = HIBYTE(a4);
                __int16 v120 = a5;
                char v121 = BYTE2(a5);
                char v122 = BYTE3(a5);
                char v123 = BYTE4(a5);
                char v124 = BYTE5(a5);
                int v45 = memcmp(__s1, &__s2, __n);
                goto LABEL_128;
              }
              if (v106 == 1)
              {
                if (v98 < v100) {
                  goto LABEL_140;
                }
                sub_1C3F7E324(a4, a5);
                uint64_t v30 = sub_1C4496298();
                if (!v30)
                {
                  sub_1C44962B8();
                  __break(1u);
LABEL_157:
                  sub_1C44962B8();
                  __break(1u);
LABEL_158:
                  __break(1u);
LABEL_159:
                  __break(1u);
LABEL_160:
                  __break(1u);
LABEL_161:
                  __break(1u);
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
LABEL_164:
                  __break(1u);
LABEL_165:
                  __break(1u);
LABEL_166:
                  __break(1u);
LABEL_167:
                  __break(1u);
LABEL_168:
                  __break(1u);
LABEL_169:
                  __break(1u);
                  JUMPOUT(0x1C406D9F4);
                }
                uint64_t v31 = v30;
                uint64_t v32 = sub_1C44962C8();
                uint64_t v33 = v100 - v32;
                if (__OFSUB__(v100, v32)) {
                  goto LABEL_145;
                }
                goto LABEL_54;
              }
              uint64_t v56 = *(void *)(a4 + 16);
              char v94 = *(char **)(a4 + 24);
              swift_retain();
              swift_retain();
              uint64_t v57 = (char *)sub_1C4496298();
              if (v57)
              {
                uint64_t v58 = sub_1C44962C8();
                if (__OFSUB__(v56, v58)) {
                  goto LABEL_150;
                }
                v57 += v56 - v58;
              }
              BOOL v26 = __OFSUB__(v94, v56);
              uint64_t v59 = &v94[-v56];
              if (v26) {
                goto LABEL_143;
              }
              uint64_t v60 = sub_1C44962B8();
              if (!v57) {
                goto LABEL_162;
              }
              goto LABEL_94;
          }
LABEL_21:
          uint64_t v11 = v111;
          unint64_t v14 = (v14 + 1) & v110;
          if (((*(void *)(v112 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
            goto LABEL_130;
          }
          continue;
        }
LABEL_131:
        sub_1C3F870F4(v17);
        sub_1C3F7E2CC(v19, v20);
LABEL_132:
        swift_bridgeObjectRelease();
        sub_1C3F870F4(a2);
        sub_1C3F7E2CC(a4, a5);
        uint64_t v81 = (uint64_t *)(*(void *)(*v104 + 48) + 32 * v14);
        uint64_t v82 = *v81;
        uint64_t v83 = v81[1];
        uint64_t v84 = v81[2];
        unint64_t v85 = v81[3];
        uint64_t *v105 = *v81;
        v105[1] = v83;
        v105[2] = v84;
        v105[3] = v85;
        sub_1C3FE3ADC(v82);
        sub_1C3F7E324(v84, v85);
        return 0;
    }
  }
}

uint64_t sub_1C406DA54(void *a1, uint64_t a2)
{
  uint64_t v107 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *v2;
  sub_1C44985F8();
  uint64_t v5 = *(void *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  uint64_t v99 = a2;
  swift_bridgeObjectRetain();
  sub_1C3F7E324(v5, v6);
  sub_1C4496568();
  sub_1C3F7E2CC(v5, v6);
  uint64_t v7 = sub_1C4498628();
  uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v97 = v4 + 56;
  uint64_t v98 = v4;
  if (((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_120:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)__s1 = *(void *)v93;
    *(void *)uint64_t v93 = 0x8000000000000000;
    uint64_t v88 = swift_retain();
    sub_1C4073398(v88, v9, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v93 = *(void *)__s1;
    swift_bridgeObjectRelease();
    *a1 = v99;
    return 1;
  }
  uint64_t v96 = ~v8;
  while (2)
  {
    uint64_t v10 = *(void *)(*(void *)(v98 + 48) + 8 * v9);
    uint64_t v12 = *(void *)(v10 + 16);
    unint64_t v11 = *(void *)(v10 + 24);
    uint64_t v13 = *(void *)(v99 + 16);
    unint64_t v14 = *(void *)(v99 + 24);
    uint64_t v15 = 0;
    switch(v11 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v12), v12))
        {
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
        }
        uint64_t v15 = HIDWORD(v12) - (int)v12;
LABEL_11:
        sub_1C3F7E324(*(void *)(v10 + 16), *(void *)(v10 + 24));
        break;
      case 2uLL:
        uint64_t v17 = *(void *)(v12 + 16);
        uint64_t v16 = *(void *)(v12 + 24);
        uint64_t v15 = v16 - v17;
        if (!__OFSUB__(v16, v17)) {
          goto LABEL_11;
        }
        goto LABEL_124;
      case 3uLL:
        break;
      default:
        uint64_t v15 = BYTE6(v11);
        break;
    }
    unint64_t v18 = v14 >> 62;
    switch(v14 >> 62)
    {
      case 1uLL:
        LODWORD(v19) = HIDWORD(v13) - v13;
        if (__OFSUB__(HIDWORD(v13), v13)) {
          goto LABEL_125;
        }
        uint64_t v19 = (int)v19;
LABEL_17:
        if (v15 != v19)
        {
LABEL_4:
          sub_1C3F7E2CC(v12, v11);
          goto LABEL_5;
        }
        if (v15 >= 1)
        {
          switch(v11 >> 62)
          {
            case 1uLL:
              if ((int)v12 > v12 >> 32) {
                goto LABEL_127;
              }
              swift_retain();
              sub_1C3F7E324(v13, v14);
              uint64_t v28 = sub_1C4496298();
              if (v28)
              {
                uint64_t v29 = v28;
                uint64_t v30 = sub_1C44962C8();
                if (__OFSUB__((int)v12, v30)) {
                  goto LABEL_129;
                }
                uint64_t v31 = (unsigned char *)(v29 + (int)v12 - v30);
                sub_1C44962B8();
                if (!v18)
                {
LABEL_58:
                  *(void *)__s1 = v13;
                  *(_WORD *)&__s1[8] = v14;
                  __s1[10] = BYTE2(v14);
                  __s1[11] = BYTE3(v14);
                  __s1[12] = BYTE4(v14);
                  __s1[13] = BYTE5(v14);
                  if (!v31) {
                    goto LABEL_148;
                  }
                  size_t v45 = BYTE6(v14);
                  size_t v44 = __s1;
                  uint64_t v46 = v31;
LABEL_60:
                  int v52 = memcmp(v46, v44, v45);
                  goto LABEL_118;
                }
              }
              else
              {
                uint64_t v31 = 0;
                sub_1C44962B8();
                if (!v18) {
                  goto LABEL_58;
                }
              }
              char v95 = v31;
              if (v18 == 1)
              {
                if (v13 >> 32 < (int)v13) {
                  goto LABEL_138;
                }
                swift_retain();
                uint64_t v32 = sub_1C4496298();
                if (v32)
                {
                  uint64_t v33 = v32;
                  uint64_t v34 = sub_1C44962C8();
                  if (__OFSUB__((int)v13, v34)) {
                    goto LABEL_145;
                  }
                  uint64_t v35 = (const void *)(v33 + (int)v13 - v34);
                }
                else
                {
                  uint64_t v35 = 0;
                }
                uint64_t v85 = sub_1C44962B8();
                if (v85 >= (v13 >> 32) - (int)v13) {
                  size_t v86 = (v13 >> 32) - (int)v13;
                }
                else {
                  size_t v86 = v85;
                }
                if (!v95) {
                  goto LABEL_158;
                }
                if (!v35) {
                  goto LABEL_159;
                }
                int v52 = memcmp(v95, v35, v86);
                sub_1C3F7E2CC(v13, v14);
                goto LABEL_118;
              }
              uint64_t v71 = *(void *)(v13 + 16);
              char v92 = *(char **)(v13 + 24);
              swift_retain();
              swift_retain();
              uint64_t v72 = sub_1C4496298();
              if (v72)
              {
                uint64_t v73 = v72;
                uint64_t v74 = sub_1C44962C8();
                if (__OFSUB__(v71, v74)) {
                  goto LABEL_144;
                }
                size_t v75 = (const void *)(v73 + v71 - v74);
              }
              else
              {
                size_t v75 = 0;
              }
              BOOL v22 = __OFSUB__(v92, v71);
              uint64_t v82 = &v92[-v71];
              if (v22) {
                goto LABEL_139;
              }
              uint64_t v83 = sub_1C44962B8();
              if (v83 >= (uint64_t)v82) {
                size_t v84 = (size_t)v82;
              }
              else {
                size_t v84 = v83;
              }
              if (!v95) {
                goto LABEL_156;
              }
              if (!v75) {
                goto LABEL_157;
              }
              size_t v62 = v84;
              size_t v63 = v95;
              uint64_t v64 = v75;
LABEL_108:
              int v65 = memcmp(v63, v64, v62);
              swift_release();
              goto LABEL_109;
            case 2uLL:
              uint64_t v36 = *(void *)(v12 + 16);
              swift_retain();
              sub_1C3F7E324(v13, v14);
              swift_retain();
              swift_retain();
              uint64_t v37 = sub_1C4496298();
              if (v37)
              {
                uint64_t v38 = v37;
                uint64_t v39 = sub_1C44962C8();
                if (__OFSUB__(v36, v39)) {
                  goto LABEL_128;
                }
                uint64_t v40 = (void *)(v38 + v36 - v39);
              }
              else
              {
                uint64_t v40 = 0;
              }
              sub_1C44962B8();
              if (v18)
              {
                char v91 = v40;
                if (v18 == 1)
                {
                  if (v13 >> 32 < (int)v13) {
                    goto LABEL_132;
                  }
                  swift_retain();
                  uint64_t v48 = sub_1C4496298();
                  if (v48)
                  {
                    uint64_t v49 = v48;
                    uint64_t v50 = sub_1C44962C8();
                    if (__OFSUB__((int)v13, v50)) {
                      goto LABEL_143;
                    }
                    size_t v51 = (const void *)(v49 + (int)v13 - v50);
                  }
                  else
                  {
                    size_t v51 = 0;
                  }
                  uint64_t v80 = sub_1C44962B8();
                  if (v80 >= (v13 >> 32) - (int)v13) {
                    size_t v81 = (v13 >> 32) - (int)v13;
                  }
                  else {
                    size_t v81 = v80;
                  }
                  if (!v40) {
                    goto LABEL_154;
                  }
                  if (!v51) {
                    goto LABEL_155;
                  }
                  int v52 = memcmp(v40, v51, v81);
                  sub_1C3F7E2CC(v13, v14);
                  swift_release();
                  swift_release();
LABEL_118:
                  sub_1C3F7E2CC(v13, v14);
                  sub_1C3F7E2CC(v12, v11);
                  swift_release();
                  if (!v52) {
                    goto LABEL_122;
                  }
                }
                else
                {
                  uint64_t v66 = *(void *)(v13 + 16);
                  uint64_t v90 = *(void *)(v13 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v67 = sub_1C4496298();
                  if (v67)
                  {
                    uint64_t v68 = v67;
                    uint64_t v69 = sub_1C44962C8();
                    if (__OFSUB__(v66, v69)) {
                      goto LABEL_142;
                    }
                    uint64_t v70 = (const void *)(v68 + v66 - v69);
                  }
                  else
                  {
                    uint64_t v70 = 0;
                  }
                  BOOL v22 = __OFSUB__(v90, v66);
                  int64_t v76 = v90 - v66;
                  if (v22) {
                    goto LABEL_137;
                  }
                  uint64_t v77 = sub_1C44962B8();
                  if (v77 >= v76) {
                    size_t v78 = v76;
                  }
                  else {
                    size_t v78 = v77;
                  }
                  if (!v91) {
                    goto LABEL_152;
                  }
                  if (!v70) {
                    goto LABEL_153;
                  }
                  int v79 = memcmp(v91, v70, v78);
                  swift_release();
                  swift_release();
                  swift_release();
                  swift_release();
                  sub_1C3F7E2CC(v13, v14);
                  sub_1C3F7E2CC(v12, v11);
                  swift_release();
                  if (!v79) {
                    goto LABEL_122;
                  }
                }
              }
              else
              {
                *(void *)__s1 = v13;
                *(_WORD *)&__s1[8] = v14;
                __s1[10] = BYTE2(v14);
                __s1[11] = BYTE3(v14);
                __s1[12] = BYTE4(v14);
                __s1[13] = BYTE5(v14);
                if (!v40) {
                  goto LABEL_151;
                }
                int v65 = memcmp(v40, __s1, BYTE6(v14));
                swift_release();
LABEL_109:
                swift_release();
                sub_1C3F7E2CC(v13, v14);
                sub_1C3F7E2CC(v12, v11);
                swift_release();
                if (!v65) {
                  goto LABEL_122;
                }
              }
              break;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v18) {
                goto LABEL_48;
              }
              if (v18 == 1)
              {
                uint64_t v23 = (v13 >> 32) - (int)v13;
                if (v13 >> 32 < (int)v13) {
                  goto LABEL_131;
                }
                swift_retain();
                sub_1C3F7E324(v13, v14);
                uint64_t v41 = sub_1C4496298();
                if (!v41) {
                  goto LABEL_147;
                }
                uint64_t v25 = v41;
                uint64_t v42 = sub_1C44962C8();
                uint64_t v27 = (int)v13 - v42;
                if (__OFSUB__((int)v13, v42)) {
                  goto LABEL_136;
                }
LABEL_44:
                uint64_t v43 = sub_1C44962B8();
                size_t v44 = (unsigned char *)(v25 + v27);
                if (v43 >= v23) {
                  size_t v45 = v23;
                }
                else {
                  size_t v45 = v43;
                }
                uint64_t v46 = __s1;
                goto LABEL_60;
              }
              uint64_t v59 = *(void *)(v13 + 16);
              uint64_t v60 = *(void *)(v13 + 24);
              swift_retain();
              sub_1C3F7E324(v13, v14);
              swift_retain();
              swift_retain();
              uint64_t v55 = sub_1C4496298();
              if (v55)
              {
                uint64_t v61 = sub_1C44962C8();
                if (__OFSUB__(v59, v61)) {
                  goto LABEL_141;
                }
                v55 += v59 - v61;
              }
              BOOL v22 = __OFSUB__(v60, v59);
              int64_t v57 = v60 - v59;
              if (v22) {
                goto LABEL_134;
              }
              uint64_t v58 = sub_1C44962B8();
              if (!v55) {
                goto LABEL_150;
              }
LABEL_72:
              if (v58 >= v57) {
                size_t v62 = v57;
              }
              else {
                size_t v62 = v58;
              }
              size_t v63 = __s1;
              uint64_t v64 = (const void *)v55;
              goto LABEL_108;
            default:
              *(void *)__s1 = v12;
              *(_WORD *)&__s1[8] = v11;
              __s1[10] = BYTE2(v11);
              __s1[11] = BYTE3(v11);
              __s1[12] = BYTE4(v11);
              __s1[13] = BYTE5(v11);
              if (!v18)
              {
LABEL_48:
                uint64_t __s2 = v13;
                __int16 v101 = v14;
                char v102 = BYTE2(v14);
                char v103 = BYTE3(v14);
                char v104 = BYTE4(v14);
                char v105 = BYTE5(v14);
                swift_retain();
                int v47 = memcmp(__s1, &__s2, BYTE6(v14));
                sub_1C3F7E2CC(v12, v11);
                swift_release();
                if (!v47) {
                  goto LABEL_122;
                }
                break;
              }
              if (v18 == 1)
              {
                uint64_t v23 = (v13 >> 32) - (int)v13;
                if (v13 >> 32 < (int)v13) {
                  goto LABEL_130;
                }
                swift_retain();
                sub_1C3F7E324(v13, v14);
                uint64_t v24 = sub_1C4496298();
                if (!v24)
                {
                  sub_1C44962B8();
                  __break(1u);
LABEL_147:
                  sub_1C44962B8();
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
LABEL_156:
                  __break(1u);
LABEL_157:
                  __break(1u);
LABEL_158:
                  __break(1u);
LABEL_159:
                  __break(1u);
                  JUMPOUT(0x1C406E4D8);
                }
                uint64_t v25 = v24;
                uint64_t v26 = sub_1C44962C8();
                uint64_t v27 = (int)v13 - v26;
                if (__OFSUB__((int)v13, v26)) {
                  goto LABEL_135;
                }
                goto LABEL_44;
              }
              uint64_t v53 = *(void *)(v13 + 16);
              uint64_t v54 = *(void *)(v13 + 24);
              swift_retain();
              sub_1C3F7E324(v13, v14);
              swift_retain();
              swift_retain();
              uint64_t v55 = sub_1C4496298();
              if (v55)
              {
                uint64_t v56 = sub_1C44962C8();
                if (__OFSUB__(v53, v56)) {
                  goto LABEL_140;
                }
                v55 += v53 - v56;
              }
              BOOL v22 = __OFSUB__(v54, v53);
              int64_t v57 = v54 - v53;
              if (v22) {
                goto LABEL_133;
              }
              uint64_t v58 = sub_1C44962B8();
              if (!v55) {
                goto LABEL_149;
              }
              goto LABEL_72;
          }
LABEL_5:
          unint64_t v9 = (v9 + 1) & v96;
          if (((*(void *)(v97 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_120;
          }
          continue;
        }
LABEL_121:
        sub_1C3F7E2CC(v12, v11);
LABEL_122:
        swift_release();
        swift_bridgeObjectRelease();
        *a1 = *(void *)(*(void *)(*(void *)v93 + 48) + 8 * v9);
        swift_retain();
        return 0;
      case 2uLL:
        uint64_t v21 = *(void *)(v13 + 16);
        uint64_t v20 = *(void *)(v13 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        uint64_t v19 = v20 - v21;
        if (!v22) {
          goto LABEL_17;
        }
        goto LABEL_126;
      case 3uLL:
        if (v15) {
          goto LABEL_4;
        }
        goto LABEL_121;
      default:
        uint64_t v19 = BYTE6(v14);
        goto LABEL_17;
    }
  }
}

uint64_t sub_1C406E508(_WORD *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = MEMORY[0x1C8781230](*(void *)(v6 + 40), (unsigned __int16)a2, 2);
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C4073DEC(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(unsigned __int16 *)(v10 + 2 * v9) != (unsigned __int16)a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int16 *)(v10 + 2 * v9) != (unsigned __int16)a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1C406E60C(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C44985F8();
  sub_1C4498608();
  uint64_t v6 = sub_1C4498628();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_1C4073F14(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_1C406E72C(void *a1, void *a2)
{
  return sub_1C406E74C(a1, a2, &qword_1EA39CB28, type metadata accessor for URLResourceKey);
}

uint64_t sub_1C406E74C(void *a1, void *a2, uint64_t *a3, void (*a4)(void))
{
  uint64_t v5 = v4;
  uint64_t v8 = *v4;
  sub_1C44971B8();
  sub_1C44985F8();
  swift_bridgeObjectRetain();
  sub_1C4497248();
  uint64_t v9 = sub_1C4498628();
  swift_bridgeObjectRelease();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v32 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    id v26 = a2;
    sub_1C4074064((uint64_t)v26, v11, isUniquelyReferenced_nonNull_native, a3, a4);
    *uint64_t v5 = v32;
    swift_bridgeObjectRelease();
    *a1 = v26;
    return 1;
  }
  uint64_t v12 = sub_1C44971B8();
  uint64_t v14 = v13;
  if (v12 == sub_1C44971B8() && v14 == v15)
  {
LABEL_16:
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v17 = sub_1C44982E8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      uint64_t v18 = ~v10;
      do
      {
        unint64_t v11 = (v11 + 1) & v18;
        if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          goto LABEL_15;
        }
        uint64_t v19 = sub_1C44971B8();
        uint64_t v21 = v20;
        if (v19 == sub_1C44971B8() && v21 == v22) {
          goto LABEL_16;
        }
        char v24 = sub_1C44982E8();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      while ((v24 & 1) == 0);
    }
  }

  swift_bridgeObjectRelease();
  uint64_t v28 = *(void **)(*(void *)(*v5 + 48) + 8 * v11);
  *a1 = v28;
  id v29 = v28;
  return 0;
}

uint64_t sub_1C406E980(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v95 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = *v3;
  sub_1C44985F8();
  swift_bridgeObjectRetain();
  sub_1C4496568();
  uint64_t v7 = sub_1C4498628();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)__s1 = *(void *)v81;
    *(void *)uint64_t v81 = 0x8000000000000000;
    sub_1C3F7E324(a2, a3);
    sub_1C40742A8(a2, a3, v9, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v81 = *(void *)__s1;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v86 = ~v8;
  unint64_t v11 = a3 >> 62;
  BOOL v12 = __OFSUB__(HIDWORD(a2), a2);
  BOOL v84 = v12;
  uint64_t v83 = v6;
  size_t __n = BYTE6(a3);
  uint64_t v85 = v6 + 56;
  uint64_t v79 = (a2 >> 32) - (int)a2;
  uint64_t v80 = a2 >> 32;
  unint64_t v78 = a3;
  while (2)
  {
    uint64_t v13 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v16 = 0;
    switch(v15 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
        }
        uint64_t v16 = HIDWORD(v14) - (int)v14;
LABEL_14:
        sub_1C3F7E324(v14, v15);
        break;
      case 2uLL:
        uint64_t v18 = *(void *)(v14 + 16);
        uint64_t v17 = *(void *)(v14 + 24);
        uint64_t v16 = v17 - v18;
        if (!__OFSUB__(v17, v18)) {
          goto LABEL_14;
        }
        goto LABEL_120;
      case 3uLL:
        break;
      default:
        uint64_t v16 = BYTE6(v15);
        break;
    }
    size_t v19 = __n;
    switch((int)v11)
    {
      case 1:
        size_t v19 = HIDWORD(a2) - (int)a2;
        if (v84) {
          goto LABEL_121;
        }
        goto LABEL_19;
      case 2:
        uint64_t v21 = *(void *)(a2 + 16);
        uint64_t v20 = *(void *)(a2 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        size_t v19 = v20 - v21;
        if (!v22) {
          goto LABEL_19;
        }
        goto LABEL_122;
      case 3:
        if (v16) {
          goto LABEL_7;
        }
        goto LABEL_117;
      default:
LABEL_19:
        if (v16 != v19)
        {
LABEL_7:
          sub_1C3F7E2CC(v14, v15);
          goto LABEL_8;
        }
        if (v16 >= 1)
        {
          switch(v15 >> 62)
          {
            case 1uLL:
              if ((int)v14 > v14 >> 32) {
                goto LABEL_123;
              }
              uint64_t v27 = (char *)sub_1C4496298();
              if (!v27) {
                goto LABEL_33;
              }
              uint64_t v28 = sub_1C44962C8();
              if (__OFSUB__((int)v14, v28)) {
                goto LABEL_125;
              }
              v27 += (int)v14 - v28;
LABEL_33:
              sub_1C44962B8();
              uint64_t v10 = v85;
              if (v11)
              {
                if (v11 == 1)
                {
                  if (v80 < (int)a2) {
                    goto LABEL_134;
                  }
                  swift_retain();
                  id v29 = (char *)sub_1C4496298();
                  if (v29)
                  {
                    uint64_t v30 = sub_1C44962C8();
                    if (__OFSUB__((int)a2, v30)) {
                      goto LABEL_141;
                    }
                    v29 += (int)a2 - v30;
                  }
                  uint64_t v31 = sub_1C44962B8();
                  size_t v32 = (a2 >> 32) - (int)a2;
                  if (v31 < v79) {
                    size_t v32 = v31;
                  }
                  if (!v27) {
                    goto LABEL_143;
                  }
                  if (!v29) {
                    goto LABEL_144;
                  }
                  int v33 = memcmp(v27, v29, v32);
                  sub_1C3F7E2CC(a2, a3);
                }
                else
                {
                  uint64_t v66 = *(void *)(a2 + 16);
                  uint64_t v65 = *(void *)(a2 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v67 = (char *)sub_1C4496298();
                  if (v67)
                  {
                    uint64_t v68 = sub_1C44962C8();
                    if (__OFSUB__(v66, v68)) {
                      goto LABEL_140;
                    }
                    v67 += v66 - v68;
                  }
                  BOOL v22 = __OFSUB__(v65, v66);
                  int64_t v69 = v65 - v66;
                  if (v22) {
                    goto LABEL_135;
                  }
                  uint64_t v70 = sub_1C44962B8();
                  if (v70 >= v69) {
                    size_t v71 = v69;
                  }
                  else {
                    size_t v71 = v70;
                  }
                  if (!v27) {
                    goto LABEL_154;
                  }
                  a3 = v78;
                  uint64_t v6 = v83;
                  if (!v67) {
                    goto LABEL_155;
                  }
                  int v33 = memcmp(v27, v67, v71);
                  swift_release();
LABEL_112:
                  swift_release();
                }
                sub_1C3F7E2CC(v14, v15);
LABEL_114:
                uint64_t v10 = v85;
                if (!v33) {
                  goto LABEL_118;
                }
              }
              else
              {
                *(void *)__s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v27) {
                  goto LABEL_153;
                }
                int v47 = (uint64_t *)__s1;
                uint64_t v46 = v27;
LABEL_99:
                int v45 = memcmp(v46, v47, __n);
LABEL_100:
                sub_1C3F7E2CC(v14, v15);
                if (!v45) {
                  goto LABEL_118;
                }
              }
              break;
            case 2uLL:
              uint64_t v34 = *(void *)(v14 + 16);
              swift_retain();
              swift_retain();
              uint64_t v35 = (char *)sub_1C4496298();
              if (!v35) {
                goto LABEL_47;
              }
              uint64_t v36 = sub_1C44962C8();
              if (__OFSUB__(v34, v36)) {
                goto LABEL_124;
              }
              v35 += v34 - v36;
LABEL_47:
              sub_1C44962B8();
              uint64_t v6 = v83;
              if (!v11)
              {
                *(void *)__s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v35) {
                  goto LABEL_150;
                }
                int v33 = memcmp(v35, __s1, __n);
                swift_release();
                goto LABEL_112;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_128;
                }
                swift_retain();
                uint64_t v37 = (char *)sub_1C4496298();
                if (v37)
                {
                  uint64_t v38 = sub_1C44962C8();
                  if (__OFSUB__((int)a2, v38)) {
                    goto LABEL_139;
                  }
                  v37 += (int)a2 - v38;
                }
                uint64_t v39 = sub_1C44962B8();
                size_t v40 = (a2 >> 32) - (int)a2;
                if (v39 < v79) {
                  size_t v40 = v39;
                }
                if (!v35) {
                  goto LABEL_145;
                }
                if (!v37) {
                  goto LABEL_146;
                }
                int v33 = memcmp(v35, v37, v40);
                sub_1C3F7E2CC(a2, a3);
                swift_release();
              }
              else
              {
                uint64_t v59 = *(void *)(a2 + 16);
                uint64_t v77 = *(void *)(a2 + 24);
                swift_retain();
                swift_retain();
                uint64_t v60 = (char *)sub_1C4496298();
                if (v60)
                {
                  uint64_t v61 = sub_1C44962C8();
                  if (__OFSUB__(v59, v61)) {
                    goto LABEL_138;
                  }
                  v60 += v59 - v61;
                }
                BOOL v22 = __OFSUB__(v77, v59);
                int64_t v62 = v77 - v59;
                if (v22) {
                  goto LABEL_133;
                }
                uint64_t v63 = sub_1C44962B8();
                if (v63 >= v62) {
                  size_t v64 = v62;
                }
                else {
                  size_t v64 = v63;
                }
                if (!v35) {
                  goto LABEL_151;
                }
                a3 = v78;
                if (!v60) {
                  goto LABEL_152;
                }
                int v33 = memcmp(v35, v60, v64);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              sub_1C3F7E2CC(v14, v15);
              uint64_t v6 = v83;
              goto LABEL_114;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v11) {
                goto LABEL_67;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_127;
                }
                sub_1C3F7E324(a2, a3);
                uint64_t v41 = sub_1C4496298();
                if (!v41) {
                  goto LABEL_147;
                }
                uint64_t v24 = v41;
                uint64_t v42 = sub_1C44962C8();
                uint64_t v26 = (int)a2 - v42;
                if (__OFSUB__((int)a2, v42)) {
                  goto LABEL_132;
                }
LABEL_63:
                uint64_t v43 = sub_1C44962B8();
                if (v43 >= v79) {
                  size_t v44 = (a2 >> 32) - (int)a2;
                }
                else {
                  size_t v44 = v43;
                }
                int v45 = memcmp(__s1, (const void *)(v24 + v26), v44);
                a3 = v78;
                sub_1C3F7E2CC(a2, v78);
                goto LABEL_100;
              }
              uint64_t v54 = *(void *)(a2 + 16);
              uint64_t v55 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              uint64_t v50 = (char *)sub_1C4496298();
              if (v50)
              {
                uint64_t v56 = sub_1C44962C8();
                if (__OFSUB__(v54, v56)) {
                  goto LABEL_137;
                }
                v50 += v54 - v56;
              }
              BOOL v22 = __OFSUB__(v55, v54);
              int64_t v52 = v55 - v54;
              if (v22) {
                goto LABEL_130;
              }
              uint64_t v53 = sub_1C44962B8();
              if (!v50) {
                goto LABEL_149;
              }
LABEL_79:
              if (v53 >= v52) {
                size_t v57 = v52;
              }
              else {
                size_t v57 = v53;
              }
              int v58 = memcmp(__s1, v50, v57);
              swift_release();
              swift_release();
              sub_1C3F7E2CC(v14, v15);
              uint64_t v6 = v83;
              uint64_t v10 = v85;
              if (!v58) {
                goto LABEL_118;
              }
              break;
            default:
              *(void *)__s1 = v14;
              *(_WORD *)&__s1[8] = v15;
              __s1[10] = BYTE2(v15);
              __s1[11] = BYTE3(v15);
              __s1[12] = BYTE4(v15);
              __s1[13] = BYTE5(v15);
              if (!v11)
              {
LABEL_67:
                uint64_t v88 = a2;
                __int16 v89 = a3;
                char v90 = BYTE2(a3);
                char v91 = BYTE3(a3);
                char v92 = BYTE4(a3);
                char v93 = BYTE5(a3);
                uint64_t v46 = __s1;
                int v47 = &v88;
                goto LABEL_99;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_126;
                }
                sub_1C3F7E324(a2, a3);
                uint64_t v23 = sub_1C4496298();
                if (!v23)
                {
                  sub_1C44962B8();
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  sub_1C44962B8();
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
                  JUMPOUT(0x1C406F39CLL);
                }
                uint64_t v24 = v23;
                uint64_t v25 = sub_1C44962C8();
                uint64_t v26 = (int)a2 - v25;
                if (__OFSUB__((int)a2, v25)) {
                  goto LABEL_131;
                }
                goto LABEL_63;
              }
              uint64_t v48 = *(void *)(a2 + 16);
              uint64_t v49 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              uint64_t v50 = (char *)sub_1C4496298();
              if (v50)
              {
                uint64_t v51 = sub_1C44962C8();
                if (__OFSUB__(v48, v51)) {
                  goto LABEL_136;
                }
                v50 += v48 - v51;
              }
              BOOL v22 = __OFSUB__(v49, v48);
              int64_t v52 = v49 - v48;
              if (v22) {
                goto LABEL_129;
              }
              uint64_t v53 = sub_1C44962B8();
              if (!v50) {
                goto LABEL_148;
              }
              goto LABEL_79;
          }
LABEL_8:
          unint64_t v9 = (v9 + 1) & v86;
          if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_116;
          }
          continue;
        }
LABEL_117:
        sub_1C3F7E2CC(v14, v15);
LABEL_118:
        swift_bridgeObjectRelease();
        sub_1C3F7E2CC(a2, a3);
        uint64_t v74 = (uint64_t *)(*(void *)(*(void *)v81 + 48) + 16 * v9);
        uint64_t v75 = *v74;
        unint64_t v76 = v74[1];
        *a1 = *v74;
        a1[1] = v76;
        sub_1C3F7E324(v75, v76);
        return 0;
    }
  }
}

uint64_t sub_1C406F3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  sub_1C44985F8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C411AAA4(v19, a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C411AAA4(v19, a3);
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_1C4498628();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  uint64_t v18 = a1;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v10;
    do
    {
      uint64_t v13 = *(void *)(*(void *)(v8 + 48) + 16 * v11);
      swift_bridgeObjectRetain();
      uint64_t v14 = swift_bridgeObjectRetain();
      if (sub_1C4113F94(v14, a3))
      {
        char v15 = sub_1C4113F94(v13, a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v15)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(_OWORD *)uint64_t v18 = *(_OWORD *)(*(void *)(*v4 + 48) + 16 * v11);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          return 0;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      unint64_t v11 = (v11 + 1) & v12;
    }
    while (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v19[0] = *v4;
  *uint64_t v4 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1C4074CCC(a2, a3, v11, isUniquelyReferenced_nonNull_native);
  *uint64_t v4 = *(void *)&v19[0];
  swift_bridgeObjectRelease();
  *(void *)uint64_t v18 = a2;
  *(void *)(v18 + 8) = a3;
  return 1;
}

uint64_t sub_1C406F5D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_1C44985F8();
  swift_bridgeObjectRetain();
  sub_1C4497248();
  uint64_t v8 = sub_1C4498628();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1C44982E8() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1C44982E8() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1C4074EA4(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1C406F788(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C4496498();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_1C3FA180C(&qword_1EBBBCA80, MEMORY[0x1E4F276F0]);
  swift_bridgeObjectRetain();
  int v33 = a2;
  uint64_t v11 = sub_1C4497078();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      uint64_t v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_1C3FA180C(&qword_1EBBBC328, MEMORY[0x1E4F276F0]);
      char v21 = sub_1C4497178();
      BOOL v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1C4075040((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_1C406FAAC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB30);
    uint64_t v2 = sub_1C4497CF8();
    uint64_t v17 = v2;
    sub_1C4497C48();
    uint64_t v3 = sub_1C4497CB8();
    if (v3)
    {
      uint64_t v4 = v3;
      type metadata accessor for AnyReference();
      do
      {
        v16[0] = v4;
        swift_dynamicCast();
        uint64_t v2 = v17;
        if (*(void *)(v17 + 24) <= *(void *)(v17 + 16))
        {
          sub_1C406FCD4();
          uint64_t v2 = v17;
        }
        uint64_t v5 = v16[9];
        sub_1C44985F8();
        (*(void (**)(void *))(*(void *)v5 + 104))(v16);
        uint64_t result = sub_1C4498628();
        uint64_t v7 = v2 + 56;
        uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v9 = result & ~v8;
        unint64_t v10 = v9 >> 6;
        if (((-1 << v9) & ~*(void *)(v2 + 56 + 8 * (v9 >> 6))) != 0)
        {
          unint64_t v11 = __clz(__rbit64((-1 << v9) & ~*(void *)(v2 + 56 + 8 * (v9 >> 6)))) | v9 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v12 = 0;
          unint64_t v13 = (unint64_t)(63 - v8) >> 6;
          do
          {
            if (++v10 == v13 && (v12 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v14 = v10 == v13;
            if (v10 == v13) {
              unint64_t v10 = 0;
            }
            v12 |= v14;
            uint64_t v15 = *(void *)(v7 + 8 * v10);
          }
          while (v15 == -1);
          unint64_t v11 = __clz(__rbit64(~v15)) + (v10 << 6);
        }
        *(void *)(v7 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        *(void *)(*(void *)(v2 + 48) + 8 * v11) = v5;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_1C4497CB8();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C406FCD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB30);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      sub_1C44985F8();
      (*(void (**)(char *))(*(void *)v19 + 104))(v28);
      uint64_t result = sub_1C4498628();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C406FFB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB18);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v32 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v31 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v10 << 6);
      }
      else
      {
        int64_t v15 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v15 >= v31) {
          goto LABEL_35;
        }
        unint64_t v16 = v32[v15];
        ++v10;
        if (!v16)
        {
          int64_t v10 = v15 + 1;
          if (v15 + 1 >= v31) {
            goto LABEL_35;
          }
          unint64_t v16 = v32[v10];
          if (!v16)
          {
            int64_t v10 = v15 + 2;
            if (v15 + 2 >= v31) {
              goto LABEL_35;
            }
            unint64_t v16 = v32[v10];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v31)
              {
LABEL_35:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
                if (v30 > 63) {
                  bzero(v32, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v32 = -1 << v30;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v32[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v10 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_41;
                  }
                  if (v10 >= v31) {
                    goto LABEL_35;
                  }
                  unint64_t v16 = v32[v10];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
      }
      int64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
      uint64_t v19 = *v18;
      uint64_t v20 = v18[1];
      uint64_t v21 = v18[2];
      unint64_t v22 = v18[3];
      sub_1C44985F8();
      sub_1C4498618();
      if (v19)
      {
        sub_1C3FE3ADC(v19);
        swift_bridgeObjectRetain();
        sub_1C411AAA4(v33, v19);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_1C411AAA4(v33, v20);
        swift_bridgeObjectRelease();
        sub_1C3F870F4(v19);
      }
      sub_1C3F7E324(v21, v22);
      sub_1C4496568();
      sub_1C3F7E2CC(v21, v22);
      uint64_t result = sub_1C4498628();
      uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v8 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      int64_t v12 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v11);
      *int64_t v12 = v19;
      v12[1] = v20;
      uint64_t v12[2] = v21;
      v12[3] = v22;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C407033C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBBF160);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1C44985F8();
      sub_1C4496568();
      uint64_t result = sub_1C4498628();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C407061C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB58);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v29 = v0;
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v13 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v14 = v13 | (v11 << 6);
      }
      else
      {
        int64_t v15 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v8) {
          goto LABEL_33;
        }
        unint64_t v16 = v30[v15];
        ++v11;
        if (!v16)
        {
          int64_t v11 = v15 + 1;
          if (v15 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v16 = v30[v11];
          if (!v16)
          {
            int64_t v11 = v15 + 2;
            if (v15 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v16 = v30[v11];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v29;
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v30, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v28;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v30[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v30[v11];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1C44985F8();
      uint64_t v19 = *(void *)(v18 + 16);
      unint64_t v20 = *(void *)(v18 + 24);
      sub_1C3F7E324(v19, v20);
      sub_1C4496568();
      sub_1C3F7E2CC(v19, v20);
      uint64_t result = sub_1C4498628();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v9 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v12 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C4070910()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C4496678();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC6B8);
  uint64_t v5 = sub_1C4497CE8();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      BOOL v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1C3FA180C((unint64_t *)&qword_1EBBBF868, MEMORY[0x1E4F27990]);
      uint64_t result = sub_1C4497078();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

uint64_t sub_1C4070D0C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB38);
  uint64_t result = sub_1C4497CE8();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unsigned __int16 v18 = *(_WORD *)(*(void *)(v2 + 48) + 2 * v14);
      uint64_t result = MEMORY[0x1C8781230](*(void *)(v4 + 40), v18, 2);
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(_WORD *)(*(void *)(v4 + 48) + 2 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C4070F94()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB40);
  uint64_t result = sub_1C4497CE8();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_1C44985F8();
      sub_1C4498608();
      uint64_t result = sub_1C4498628();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C4071240(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_1C4497CE8();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    unint64_t v29 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    unint64_t v31 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v4 + 56);
    int64_t v30 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v10 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v14 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v30) {
          goto LABEL_33;
        }
        unint64_t v17 = v31[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v30) {
            goto LABEL_33;
          }
          unint64_t v17 = v31[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v30) {
              goto LABEL_33;
            }
            unint64_t v17 = v31[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v30)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v29;
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v31 = -1 << v28;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v17 = v31[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v30) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v31[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v4 + 48) + 8 * v15);
      sub_1C44971B8();
      sub_1C44985F8();
      sub_1C4497248();
      uint64_t v20 = sub_1C4498628();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = v20 & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v6 + 48) + 8 * v13) = v19;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_1C4071550()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB88);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1C44985F8();
      sub_1C4496568();
      uint64_t result = sub_1C4498628();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C4071830()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB98);
  uint64_t result = sub_1C4497CE8();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    BOOL v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1C44985E8();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1C4071AB4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB10);
  uint64_t v3 = sub_1C4497CE8();
  if (*(void *)(v2 + 16))
  {
    uint64_t v4 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v5 = (void *)(v2 + 56);
    if (v4 < 64) {
      uint64_t v6 = ~(-1 << v4);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v4 + 63) >> 6;
    unint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v11 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v13 >= v8) {
          goto LABEL_23;
        }
        unint64_t v14 = v5[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v8) {
            goto LABEL_23;
          }
          unint64_t v14 = v5[v10];
          if (!v14)
          {
            int64_t v10 = v13 + 2;
            if (v13 + 2 >= v8) {
              goto LABEL_23;
            }
            unint64_t v14 = v5[v10];
            if (!v14)
            {
              int64_t v15 = v13 + 3;
              if (v15 >= v8)
              {
LABEL_23:
                swift_release();
                uint64_t v16 = 1 << *(unsigned char *)(v2 + 32);
                if (v16 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v16 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v5 = -1 << v16;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v14 = v5[v15];
              if (!v14)
              {
                while (1)
                {
                  int64_t v10 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_29;
                  }
                  if (v10 >= v8) {
                    goto LABEL_23;
                  }
                  unint64_t v14 = v5[v10];
                  ++v15;
                  if (v14) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v10 = v15;
            }
          }
        }
LABEL_22:
        unint64_t v7 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v12);
      sub_1C44985F8();
      swift_bridgeObjectRetain();
      sub_1C411AAA4(v18, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C411AAA4(v18, *((uint64_t *)&v17 + 1));
      swift_bridgeObjectRelease();
      sub_1C4498628();
      unint64_t result = sub_1C4497C28();
      *(void *)(v3 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(_OWORD *)(*(void *)(v3 + 48) + 16 * result) = v17;
      ++*(void *)(v3 + 16);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_1C4071D3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39FEA0);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1C44985F8();
      sub_1C4497248();
      uint64_t result = sub_1C4498628();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *int64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_1C407201C()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1C4496498();
  uint64_t v2 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB20);
  uint64_t v5 = sub_1C4497CE8();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    uint64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    unint64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_1C3FA180C(&qword_1EBBBCA80, MEMORY[0x1E4F276F0]);
      uint64_t result = sub_1C4497078();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v6;
  return result;
}

unint64_t sub_1C4072418(uint64_t a1, uint64_t a2)
{
  sub_1C44985F8();
  (*(void (**)(unsigned char *))(*(void *)a1 + 104))(v5);
  sub_1C4498628();
  unint64_t result = sub_1C4497C28();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_1C40724DC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C406FCD4();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1C40752FC();
      goto LABEL_14;
    }
    sub_1C407666C();
  }
  uint64_t v8 = *v3;
  sub_1C44985F8();
  (*(void (**)(unsigned char *))(*(void *)v5 + 104))(v17);
  unint64_t result = sub_1C4498628();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    type metadata accessor for AnyReference();
    unint64_t v10 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v8 + 48) + 8 * a2) + 96);
    swift_retain();
    LOBYTE(v10) = v10(v5);
    unint64_t result = swift_release();
    if (v10)
    {
LABEL_13:
      unint64_t result = sub_1C4498548();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        unint64_t v12 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(v8 + 48) + 8 * a2) + 96);
        swift_retain();
        LOBYTE(v12) = v12(v5);
        unint64_t result = swift_release();
        if (v12) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v13 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v13 + 48) + 8 * a2) = v5;
  uint64_t v14 = *(void *)(v13 + 16);
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    *(void *)(v13 + 16) = v16;
  }
  return result;
}

uint64_t sub_1C40726D8(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, char a6)
{
  unint64_t v7 = v6;
  uint64_t v10 = a3;
  uint64_t v12 = result;
  uint64_t v112 = *MEMORY[0x1E4F143B8];
  unint64_t v13 = *(void *)(*v7 + 16);
  unint64_t v14 = *(void *)(*v7 + 24);
  char v94 = v7;
  if (v14 <= v13 || (a6 & 1) == 0)
  {
    if (a6)
    {
      sub_1C406FFB0();
    }
    else
    {
      if (v14 > v13)
      {
        unint64_t result = (uint64_t)sub_1C40754A8();
        uint64_t v10 = a3;
        goto LABEL_136;
      }
      sub_1C4076948();
    }
    uint64_t v98 = *v7;
    sub_1C44985F8();
    sub_1C4498618();
    if (v12)
    {
      sub_1C3FE3ADC(v12);
      swift_bridgeObjectRetain();
      sub_1C411AAA4(__s1, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C411AAA4(__s1, a2);
      swift_bridgeObjectRelease();
      sub_1C3F870F4(v12);
    }
    sub_1C3F7E324(a3, a4);
    sub_1C4496568();
    sub_1C3F7E2CC(a3, a4);
    unint64_t result = sub_1C4498628();
    uint64_t v15 = -1 << *(unsigned char *)(v98 + 32);
    a5 = result & ~v15;
    if ((*(void *)(v98 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5))
    {
      uint64_t v97 = ~v15;
      unint64_t v91 = a4;
      BOOL v16 = __OFSUB__(HIDWORD(a3), a3);
      BOOL v90 = v16;
      unint64_t v92 = a4 >> 62;
      uint64_t v85 = (a3 >> 32) - (int)a3;
      uint64_t v86 = a3 >> 32;
      unint64_t v95 = a4 >> 62;
      size_t __n = BYTE6(a4);
      uint64_t v10 = a3;
      while (1)
      {
        unint64_t v17 = (uint64_t *)(*(void *)(v98 + 48) + 32 * a5);
        uint64_t v18 = *v17;
        uint64_t v19 = v17[1];
        uint64_t v21 = v17[2];
        unint64_t v20 = v17[3];
        if (*v17)
        {
          sub_1C3FE3ADC(*v17);
          if (!v12)
          {
            sub_1C3FE3ADC(v18);
            sub_1C3FE3ADC(v18);
            sub_1C3F7E324(v21, v20);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_24:
            sub_1C3FE3ADC(v12);
            sub_1C3F870F4(v18);
            uint64_t v24 = v12;
LABEL_26:
            sub_1C3F870F4(v24);
LABEL_27:
            sub_1C3F870F4(v18);
            unint64_t result = sub_1C3F7E2CC(v21, v20);
            goto LABEL_28;
          }
          sub_1C3FE3ADC(v12);
          sub_1C3FE3ADC(v18);
          sub_1C3FE3ADC(v18);
          sub_1C3F7E324(v21, v20);
          if ((sub_1C4113F94(v19, a2) & 1) == 0)
          {
            sub_1C3F870F4(v12);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v24 = v18;
            goto LABEL_26;
          }
          char v22 = sub_1C4113F94(v18, v12);
          sub_1C3F870F4(v12);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C3F870F4(v18);
          if ((v22 & 1) == 0) {
            goto LABEL_27;
          }
        }
        else
        {
          sub_1C3FE3ADC(0);
          sub_1C3F7E324(v21, v20);
          if (v12) {
            goto LABEL_24;
          }
        }
        uint64_t v23 = 0;
        switch(v20 >> 62)
        {
          case 1uLL:
            LODWORD(v23) = HIDWORD(v21) - v21;
            if (__OFSUB__(HIDWORD(v21), v21)) {
              goto LABEL_139;
            }
            uint64_t v23 = (int)v23;
LABEL_33:
            size_t v28 = __n;
            switch(v95)
            {
              case 1uLL:
                size_t v28 = HIDWORD(a3) - (int)a3;
                if (v90) {
                  goto LABEL_141;
                }
                goto LABEL_37;
              case 2uLL:
                uint64_t v30 = *(void *)(v10 + 16);
                uint64_t v29 = *(void *)(v10 + 24);
                BOOL v27 = __OFSUB__(v29, v30);
                size_t v28 = v29 - v30;
                if (!v27) {
                  goto LABEL_37;
                }
                goto LABEL_142;
              case 3uLL:
                if (!v23) {
                  goto LABEL_176;
                }
                goto LABEL_27;
              default:
LABEL_37:
                if (v23 != v28) {
                  goto LABEL_27;
                }
                if (v23 < 1) {
                  goto LABEL_176;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v26 = *(void *)(v21 + 16);
            uint64_t v25 = *(void *)(v21 + 24);
            BOOL v27 = __OFSUB__(v25, v26);
            uint64_t v23 = v25 - v26;
            if (!v27) {
              goto LABEL_33;
            }
            goto LABEL_140;
          case 3uLL:
            goto LABEL_33;
          default:
            uint64_t v23 = BYTE6(v20);
            goto LABEL_33;
        }
        switch(v20 >> 62)
        {
          case 1uLL:
            if ((int)v21 > v21 >> 32) {
              goto LABEL_143;
            }
            sub_1C3F7E324(v21, v20);
            uint64_t v46 = sub_1C4496298();
            if (v46)
            {
              uint64_t v47 = v46;
              uint64_t v48 = sub_1C44962C8();
              if (__OFSUB__((int)v21, v48)) {
                goto LABEL_145;
              }
              uint64_t v87 = (void *)(v47 + (int)v21 - v48);
            }
            else
            {
              uint64_t v87 = 0;
            }
            a4 = v91;
            sub_1C44962B8();
            if (v92)
            {
              if (v92 == 1)
              {
                if (v86 < (int)a3) {
                  goto LABEL_154;
                }
                swift_retain();
                uint64_t v53 = (char *)sub_1C4496298();
                if (v53)
                {
                  uint64_t v54 = sub_1C44962C8();
                  if (__OFSUB__((int)a3, v54)) {
                    goto LABEL_161;
                  }
                  v53 += (int)a3 - v54;
                }
                uint64_t v55 = sub_1C44962B8();
                size_t v56 = (a3 >> 32) - (int)a3;
                if (v55 < v85) {
                  size_t v56 = v55;
                }
                if (!v87) {
                  goto LABEL_172;
                }
                uint64_t v10 = a3;
                if (!v53) {
                  goto LABEL_173;
                }
                int v43 = memcmp(v87, v53, v56);
                sub_1C3F7E2CC(a3, v91);
              }
              else
              {
                uint64_t v72 = *(void *)(a3 + 16);
                BOOL v84 = *(char **)(a3 + 24);
                swift_retain();
                swift_retain();
                uint64_t v73 = (char *)sub_1C4496298();
                if (v73)
                {
                  uint64_t v74 = sub_1C44962C8();
                  if (__OFSUB__(v72, v74)) {
                    goto LABEL_159;
                  }
                  v73 += v72 - v74;
                }
                BOOL v27 = __OFSUB__(v84, v72);
                uint64_t v75 = &v84[-v72];
                if (v27) {
                  goto LABEL_155;
                }
                uint64_t v76 = sub_1C44962B8();
                if (v76 >= (uint64_t)v75) {
                  size_t v77 = (size_t)v75;
                }
                else {
                  size_t v77 = v76;
                }
                if (!v87) {
                  goto LABEL_174;
                }
                a4 = v91;
                uint64_t v10 = a3;
                if (!v73) {
                  goto LABEL_175;
                }
                int v43 = memcmp(v87, v73, v77);
                swift_release();
                swift_release();
              }
            }
            else
            {
              uint64_t v10 = a3;
              *(void *)&__s1[0] = a3;
              DWORD2(__s1[0]) = v91;
              WORD6(__s1[0]) = WORD2(v91);
              if (!v87)
              {
                __break(1u);
LABEL_163:
                sub_1C44962B8();
                __break(1u);
LABEL_164:
                sub_1C44962B8();
                __break(1u);
LABEL_165:
                __break(1u);
LABEL_166:
                __break(1u);
LABEL_167:
                __break(1u);
LABEL_168:
                __break(1u);
LABEL_169:
                __break(1u);
LABEL_170:
                __break(1u);
LABEL_171:
                __break(1u);
LABEL_172:
                __break(1u);
LABEL_173:
                __break(1u);
LABEL_174:
                __break(1u);
LABEL_175:
                __break(1u);
LABEL_176:
                sub_1C3F870F4(v18);
                sub_1C3F7E2CC(v21, v20);
LABEL_177:
                sub_1C4498548();
                __break(1u);
                JUMPOUT(0x1C4073338);
              }
              int v43 = memcmp(v87, __s1, __n);
            }
            uint64_t v44 = v21;
            unint64_t v45 = v20;
            goto LABEL_132;
          case 2uLL:
            uint64_t v35 = *(void *)(v21 + 16);
            swift_retain();
            swift_retain();
            uint64_t v36 = sub_1C4496298();
            if (v36)
            {
              uint64_t v37 = v36;
              uint64_t v38 = sub_1C44962C8();
              if (__OFSUB__(v35, v38)) {
                goto LABEL_144;
              }
              uint64_t v83 = (void *)(v37 + v35 - v38);
            }
            else
            {
              uint64_t v83 = 0;
            }
            a4 = v91;
            sub_1C44962B8();
            if (v92)
            {
              if (v92 != 1)
              {
                uint64_t v66 = *(void *)(a3 + 16);
                uint64_t v82 = *(void *)(a3 + 24);
                swift_retain();
                swift_retain();
                uint64_t v67 = (char *)sub_1C4496298();
                if (v67)
                {
                  uint64_t v68 = sub_1C44962C8();
                  if (__OFSUB__(v66, v68)) {
                    goto LABEL_158;
                  }
                  v67 += v66 - v68;
                }
                BOOL v27 = __OFSUB__(v82, v66);
                int64_t v69 = v82 - v66;
                if (v27) {
                  goto LABEL_153;
                }
                uint64_t v70 = sub_1C44962B8();
                if (v70 >= v69) {
                  size_t v71 = v69;
                }
                else {
                  size_t v71 = v70;
                }
                if (!v83) {
                  goto LABEL_169;
                }
                a4 = v91;
                uint64_t v10 = a3;
                if (!v67) {
                  goto LABEL_170;
                }
                int v43 = memcmp(v83, v67, v71);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                goto LABEL_133;
              }
              if (v86 < (int)a3) {
                goto LABEL_150;
              }
              swift_retain();
              uint64_t v49 = (char *)sub_1C4496298();
              if (v49)
              {
                uint64_t v50 = sub_1C44962C8();
                if (__OFSUB__((int)a3, v50)) {
                  goto LABEL_160;
                }
                v49 += (int)a3 - v50;
              }
              uint64_t v51 = sub_1C44962B8();
              size_t v52 = (a3 >> 32) - (int)a3;
              if (v51 < v85) {
                size_t v52 = v51;
              }
              if (!v83) {
                goto LABEL_165;
              }
              uint64_t v10 = a3;
              if (!v49) {
                goto LABEL_166;
              }
              int v43 = memcmp(v83, v49, v52);
              sub_1C3F7E2CC(a3, v91);
            }
            else
            {
              uint64_t v10 = a3;
              *(void *)&__s1[0] = a3;
              DWORD2(__s1[0]) = v91;
              WORD6(__s1[0]) = WORD2(v91);
              if (!v83) {
                goto LABEL_171;
              }
              int v43 = memcmp(v83, __s1, __n);
            }
            swift_release();
            swift_release();
            goto LABEL_133;
          case 3uLL:
            *(void *)((char *)__s1 + 6) = 0;
            *(void *)&__s1[0] = 0;
            if (!v92) {
              goto LABEL_65;
            }
            if (v92 == 1)
            {
              if (v86 < (int)a3) {
                goto LABEL_147;
              }
              sub_1C3F7E324(v10, a4);
              uint64_t v39 = sub_1C4496298();
              if (!v39) {
                goto LABEL_164;
              }
              uint64_t v32 = v39;
              uint64_t v40 = sub_1C44962C8();
              uint64_t v34 = (int)a3 - v40;
              if (__OFSUB__((int)a3, v40)) {
                goto LABEL_151;
              }
              goto LABEL_57;
            }
            uint64_t v62 = *(void *)(v10 + 16);
            __int16 v89 = *(char **)(v10 + 24);
            swift_retain();
            swift_retain();
            int v58 = (char *)sub_1C4496298();
            if (v58)
            {
              uint64_t v63 = sub_1C44962C8();
              if (__OFSUB__(v62, v63)) {
                goto LABEL_157;
              }
              v58 += v62 - v63;
            }
            BOOL v27 = __OFSUB__(v89, v62);
            uint64_t v60 = &v89[-v62];
            if (v27) {
              goto LABEL_149;
            }
            uint64_t v61 = sub_1C44962B8();
            if (!v58) {
              goto LABEL_168;
            }
            goto LABEL_101;
          default:
            *(void *)&__s1[0] = v21;
            WORD4(__s1[0]) = v20;
            BYTE10(__s1[0]) = BYTE2(v20);
            BYTE11(__s1[0]) = BYTE3(v20);
            BYTE12(__s1[0]) = BYTE4(v20);
            BYTE13(__s1[0]) = BYTE5(v20);
            if (!v92)
            {
LABEL_65:
              __int16 __s2 = v10;
              char v100 = BYTE2(v10);
              char v101 = BYTE3(v10);
              char v102 = BYTE4(a3);
              char v103 = BYTE5(v10);
              char v104 = BYTE6(v10);
              char v105 = HIBYTE(v10);
              __int16 v106 = a4;
              char v107 = BYTE2(a4);
              char v108 = BYTE3(a4);
              char v109 = BYTE4(a4);
              char v110 = BYTE5(a4);
              int v43 = memcmp(__s1, &__s2, __n);
              goto LABEL_133;
            }
            if (v92 == 1)
            {
              if (v86 < (int)a3) {
                goto LABEL_146;
              }
              sub_1C3F7E324(v10, a4);
              uint64_t v31 = sub_1C4496298();
              if (!v31) {
                goto LABEL_163;
              }
              uint64_t v32 = v31;
              uint64_t v33 = sub_1C44962C8();
              uint64_t v34 = (int)a3 - v33;
              if (__OFSUB__((int)a3, v33)) {
                goto LABEL_152;
              }
LABEL_57:
              uint64_t v41 = sub_1C44962B8();
              if (v41 >= v85) {
                size_t v42 = (a3 >> 32) - (int)a3;
              }
              else {
                size_t v42 = v41;
              }
              int v43 = memcmp(__s1, (const void *)(v32 + v34), v42);
              uint64_t v10 = a3;
              uint64_t v44 = a3;
              a4 = v91;
              unint64_t v45 = v91;
LABEL_132:
              sub_1C3F7E2CC(v44, v45);
LABEL_133:
              sub_1C3F870F4(v18);
              unint64_t result = sub_1C3F7E2CC(v21, v20);
              if (!v43) {
                goto LABEL_177;
              }
              goto LABEL_28;
            }
            uint64_t v57 = *(void *)(v10 + 16);
            uint64_t v88 = *(char **)(v10 + 24);
            swift_retain();
            swift_retain();
            int v58 = (char *)sub_1C4496298();
            if (v58)
            {
              uint64_t v59 = sub_1C44962C8();
              if (__OFSUB__(v57, v59)) {
                goto LABEL_156;
              }
              v58 += v57 - v59;
            }
            BOOL v27 = __OFSUB__(v88, v57);
            uint64_t v60 = &v88[-v57];
            if (v27) {
              goto LABEL_148;
            }
            uint64_t v61 = sub_1C44962B8();
            if (!v58) {
              goto LABEL_167;
            }
LABEL_101:
            if (v61 >= (uint64_t)v60) {
              size_t v64 = (size_t)v60;
            }
            else {
              size_t v64 = v61;
            }
            int v65 = memcmp(__s1, v58, v64);
            swift_release();
            uint64_t v10 = a3;
            swift_release();
            sub_1C3F870F4(v18);
            unint64_t result = sub_1C3F7E2CC(v21, v20);
            a4 = v91;
            if (!v65) {
              goto LABEL_177;
            }
LABEL_28:
            a5 = (a5 + 1) & v97;
            if (((*(void *)(v98 + 56 + ((a5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a5) & 1) == 0) {
              goto LABEL_136;
            }
            break;
        }
      }
    }
    uint64_t v10 = a3;
  }
LABEL_136:
  uint64_t v78 = *v94;
  *(void *)(*v94 + 8 * (a5 >> 6) + 56) |= 1 << a5;
  uint64_t v79 = (uint64_t *)(*(void *)(v78 + 48) + 32 * a5);
  *uint64_t v79 = v12;
  v79[1] = a2;
  v79[2] = v10;
  v79[3] = a4;
  uint64_t v80 = *(void *)(v78 + 16);
  BOOL v27 = __OFADD__(v80, 1);
  uint64_t v81 = v80 + 1;
  if (v27)
  {
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
LABEL_153:
    __break(1u);
LABEL_154:
    __break(1u);
LABEL_155:
    __break(1u);
LABEL_156:
    __break(1u);
LABEL_157:
    __break(1u);
LABEL_158:
    __break(1u);
LABEL_159:
    __break(1u);
LABEL_160:
    __break(1u);
LABEL_161:
    __break(1u);
  }
  *(void *)(v78 + 16) = v81;
  return result;
}

uint64_t sub_1C4073398(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  uint64_t v98 = *MEMORY[0x1E4F143B8];
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C407061C();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = (uint64_t)sub_1C4075678();
        goto LABEL_127;
      }
      sub_1C4076CC8();
    }
    uint64_t v8 = *v3;
    sub_1C44985F8();
    uint64_t v9 = *(void *)(v5 + 16);
    unint64_t v10 = *(void *)(v5 + 24);
    sub_1C3F7E324(v9, v10);
    sub_1C4496568();
    sub_1C3F7E2CC(v9, v10);
    unint64_t result = sub_1C4498628();
    uint64_t v11 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v11;
    uint64_t v89 = v8 + 56;
    uint64_t v90 = v8;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v87 = v5;
      uint64_t v88 = ~v11;
      while (1)
      {
        uint64_t v12 = *(void *)(*(void *)(v90 + 48) + 8 * a2);
        uint64_t v14 = *(void *)(v12 + 16);
        unint64_t v13 = *(void *)(v12 + 24);
        uint64_t v16 = *(void *)(v5 + 16);
        unint64_t v15 = *(void *)(v5 + 24);
        uint64_t v17 = 0;
        switch(v13 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v14), v14))
            {
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
              goto LABEL_133;
            }
            uint64_t v17 = HIDWORD(v14) - (int)v14;
LABEL_18:
            sub_1C3F7E324(*(void *)(v12 + 16), *(void *)(v12 + 24));
LABEL_19:
            unint64_t v20 = v15 >> 62;
            switch(v15 >> 62)
            {
              case 1uLL:
                LODWORD(v21) = HIDWORD(v16) - v16;
                if (__OFSUB__(HIDWORD(v16), v16)) {
                  goto LABEL_132;
                }
                uint64_t v21 = (int)v21;
LABEL_26:
                if (v17 != v21)
                {
LABEL_11:
                  unint64_t result = sub_1C3F7E2CC(v14, v13);
                  goto LABEL_12;
                }
                if (v17 < 1) {
                  goto LABEL_167;
                }
                break;
              case 2uLL:
                uint64_t v23 = *(void *)(v16 + 16);
                uint64_t v22 = *(void *)(v16 + 24);
                BOOL v24 = __OFSUB__(v22, v23);
                uint64_t v21 = v22 - v23;
                if (!v24) {
                  goto LABEL_26;
                }
                goto LABEL_131;
              case 3uLL:
                if (v17) {
                  goto LABEL_11;
                }
                goto LABEL_167;
              default:
                uint64_t v21 = BYTE6(v15);
                goto LABEL_26;
            }
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)v14 > v14 >> 32) {
                  goto LABEL_134;
                }
                swift_retain();
                sub_1C3F7E324(v16, v15);
                size_t v42 = (char *)sub_1C4496298();
                if (!v42) {
                  goto LABEL_59;
                }
                uint64_t v43 = sub_1C44962C8();
                if (__OFSUB__((int)v14, v43)) {
                  goto LABEL_136;
                }
                v42 += (int)v14 - v43;
LABEL_59:
                sub_1C44962B8();
                uint64_t v5 = v87;
                if (v20)
                {
                  uint64_t v85 = v42;
                  if (v20 != 1)
                  {
                    uint64_t v64 = *(void *)(v16 + 16);
                    uint64_t v83 = *(char **)(v16 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v65 = sub_1C4496298();
                    if (v65)
                    {
                      uint64_t v66 = v65;
                      uint64_t v67 = sub_1C44962C8();
                      if (__OFSUB__(v64, v67)) {
                        goto LABEL_151;
                      }
                      uint64_t v53 = (char *)(v66 + v64 - v67);
                    }
                    else
                    {
                      uint64_t v53 = 0;
                    }
                    if (__OFSUB__(v83, v64)) {
                      goto LABEL_146;
                    }
                    uint64_t v74 = sub_1C44962B8();
                    if (v74 >= (uint64_t)&v83[-v64]) {
                      uint64_t v75 = &v83[-v64];
                    }
                    else {
                      uint64_t v75 = (char *)v74;
                    }
                    int64_t v69 = v85;
                    uint64_t v5 = v87;
                    if (!v85) {
                      goto LABEL_165;
                    }
                    if (!v53) {
                      goto LABEL_166;
                    }
                    size_t v68 = (size_t)v75;
                    goto LABEL_115;
                  }
                  if (v16 >> 32 < (int)v16) {
                    goto LABEL_145;
                  }
                  swift_retain();
                  uint64_t v44 = sub_1C4496298();
                  if (v44)
                  {
                    uint64_t v45 = v44;
                    uint64_t v46 = sub_1C44962C8();
                    if (__OFSUB__((int)v16, v46)) {
                      goto LABEL_152;
                    }
                    uint64_t v47 = (const void *)(v45 + (int)v16 - v46);
                  }
                  else
                  {
                    uint64_t v47 = 0;
                  }
                  uint64_t v76 = sub_1C44962B8();
                  if (v76 >= (v16 >> 32) - (int)v16) {
                    size_t v77 = (v16 >> 32) - (int)v16;
                  }
                  else {
                    size_t v77 = v76;
                  }
                  if (!v85) {
                    goto LABEL_161;
                  }
                  uint64_t v5 = v87;
                  if (!v47) {
                    goto LABEL_162;
                  }
                  int v48 = memcmp(v85, v47, v77);
                  sub_1C3F7E2CC(v16, v15);
                }
                else
                {
                  *(void *)__s1 = v16;
                  *(_WORD *)&__s1[8] = v15;
                  __s1[10] = BYTE2(v15);
                  __s1[11] = BYTE3(v15);
                  __s1[12] = BYTE4(v15);
                  __s1[13] = BYTE5(v15);
                  if (!v42) {
                    goto LABEL_157;
                  }
                  int v48 = memcmp(v42, __s1, BYTE6(v15));
                }
                goto LABEL_117;
              case 2uLL:
                uint64_t v30 = *(void *)(v14 + 16);
                swift_retain();
                sub_1C3F7E324(v16, v15);
                swift_retain();
                swift_retain();
                uint64_t v31 = (char *)sub_1C4496298();
                if (!v31) {
                  goto LABEL_39;
                }
                uint64_t v32 = sub_1C44962C8();
                if (__OFSUB__(v30, v32)) {
                  goto LABEL_135;
                }
                v31 += v30 - v32;
LABEL_39:
                sub_1C44962B8();
                uint64_t v5 = v87;
                if (v20)
                {
                  uint64_t v82 = v31;
                  if (v20 == 1)
                  {
                    if (v16 >> 32 < (int)v16) {
                      goto LABEL_139;
                    }
                    swift_retain();
                    uint64_t v33 = sub_1C4496298();
                    if (v33)
                    {
                      uint64_t v34 = v33;
                      uint64_t v35 = sub_1C44962C8();
                      if (__OFSUB__((int)v16, v35)) {
                        goto LABEL_150;
                      }
                      uint64_t v36 = (const void *)(v34 + (int)v16 - v35);
                    }
                    else
                    {
                      uint64_t v36 = 0;
                    }
                    uint64_t v72 = sub_1C44962B8();
                    if (v72 >= (v16 >> 32) - (int)v16) {
                      size_t v73 = (v16 >> 32) - (int)v16;
                    }
                    else {
                      size_t v73 = v72;
                    }
                    if (!v82) {
                      goto LABEL_159;
                    }
                    uint64_t v5 = v87;
                    if (!v36) {
                      goto LABEL_160;
                    }
                    int v48 = memcmp(v82, v36, v73);
                    sub_1C3F7E2CC(v16, v15);
                  }
                  else
                  {
                    uint64_t v59 = *(void *)(v16 + 16);
                    uint64_t v81 = *(void *)(v16 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v60 = sub_1C4496298();
                    if (v60)
                    {
                      uint64_t v61 = v60;
                      uint64_t v62 = sub_1C44962C8();
                      if (__OFSUB__(v59, v62)) {
                        goto LABEL_149;
                      }
                      uint64_t v63 = (const void *)(v61 + v59 - v62);
                    }
                    else
                    {
                      uint64_t v63 = 0;
                    }
                    if (__OFSUB__(v81, v59)) {
                      goto LABEL_144;
                    }
                    uint64_t v70 = sub_1C44962B8();
                    if (v70 >= v81 - v59) {
                      size_t v71 = v81 - v59;
                    }
                    else {
                      size_t v71 = v70;
                    }
                    uint64_t v5 = v87;
                    if (!v82) {
                      goto LABEL_163;
                    }
                    if (!v63) {
                      goto LABEL_164;
                    }
                    int v48 = memcmp(v82, v63, v71);
                    swift_release();
                    swift_release();
                  }
                }
                else
                {
                  *(void *)__s1 = v16;
                  *(_WORD *)&__s1[8] = v15;
                  __s1[10] = BYTE2(v15);
                  __s1[11] = BYTE3(v15);
                  __s1[12] = BYTE4(v15);
                  __s1[13] = BYTE5(v15);
                  if (!v31) {
                    goto LABEL_156;
                  }
                  int v48 = memcmp(v31, __s1, BYTE6(v15));
                }
                goto LABEL_116;
              case 3uLL:
                *(void *)&__s1[6] = 0;
                *(void *)__s1 = 0;
                if (!v20) {
                  goto LABEL_65;
                }
                if (v20 != 1)
                {
                  uint64_t v54 = *(void *)(v16 + 16);
                  uint64_t v55 = *(void *)(v16 + 24);
                  swift_retain();
                  sub_1C3F7E324(v16, v15);
                  swift_retain();
                  swift_retain();
                  uint64_t v53 = (char *)sub_1C4496298();
                  if (v53)
                  {
                    uint64_t v56 = sub_1C44962C8();
                    if (__OFSUB__(v54, v56)) {
                      goto LABEL_148;
                    }
                    v53 += v54 - v56;
                  }
                  BOOL v24 = __OFSUB__(v55, v54);
                  uint64_t v57 = (char *)(v55 - v54);
                  if (v24) {
                    goto LABEL_140;
                  }
                  uint64_t v58 = sub_1C44962B8();
                  uint64_t v5 = v87;
                  if (!v53) {
                    goto LABEL_155;
                  }
LABEL_88:
                  if (v58 >= (uint64_t)v57) {
                    size_t v68 = (size_t)v57;
                  }
                  else {
                    size_t v68 = v58;
                  }
                  int64_t v69 = __s1;
LABEL_115:
                  int v48 = memcmp(v69, v53, v68);
LABEL_116:
                  swift_release();
                  swift_release();
LABEL_117:
                  sub_1C3F7E2CC(v16, v15);
LABEL_118:
                  sub_1C3F7E2CC(v14, v13);
                  unint64_t result = swift_release();
                  if (!v48) {
                    goto LABEL_168;
                  }
                  goto LABEL_12;
                }
                uint64_t v25 = (v16 >> 32) - (int)v16;
                if (v16 >> 32 < (int)v16) {
                  goto LABEL_138;
                }
                swift_retain();
                sub_1C3F7E324(v16, v15);
                uint64_t v37 = sub_1C4496298();
                if (!v37) {
                  goto LABEL_154;
                }
                uint64_t v27 = v37;
                uint64_t v38 = sub_1C44962C8();
                uint64_t v29 = (int)v16 - v38;
                if (__OFSUB__((int)v16, v38)) {
                  goto LABEL_143;
                }
                break;
              default:
                *(void *)__s1 = v14;
                *(_WORD *)&__s1[8] = v13;
                __s1[10] = BYTE2(v13);
                __s1[11] = BYTE3(v13);
                __s1[12] = BYTE4(v13);
                __s1[13] = BYTE5(v13);
                if (!v20)
                {
LABEL_65:
                  uint64_t __s2 = v16;
                  __int16 v92 = v15;
                  char v93 = BYTE2(v15);
                  char v94 = BYTE3(v15);
                  char v95 = BYTE4(v15);
                  char v96 = BYTE5(v15);
                  swift_retain();
                  int v48 = memcmp(__s1, &__s2, BYTE6(v15));
                  goto LABEL_118;
                }
                if (v20 != 1)
                {
                  uint64_t v49 = *(void *)(v16 + 16);
                  uint64_t v86 = *(char **)(v16 + 24);
                  swift_retain();
                  sub_1C3F7E324(v16, v15);
                  swift_retain();
                  swift_retain();
                  uint64_t v50 = sub_1C4496298();
                  if (v50)
                  {
                    uint64_t v51 = v50;
                    uint64_t v52 = sub_1C44962C8();
                    if (__OFSUB__(v49, v52)) {
                      goto LABEL_147;
                    }
                    uint64_t v53 = (char *)(v51 + v49 - v52);
                  }
                  else
                  {
                    uint64_t v53 = 0;
                  }
                  uint64_t v57 = &v86[-v49];
                  if (__OFSUB__(v86, v49)) {
                    goto LABEL_141;
                  }
                  uint64_t v58 = sub_1C44962B8();
                  uint64_t v5 = v87;
                  if (!v53) {
                    goto LABEL_158;
                  }
                  goto LABEL_88;
                }
                uint64_t v25 = (v16 >> 32) - (int)v16;
                if (v16 >> 32 < (int)v16) {
                  goto LABEL_137;
                }
                swift_retain();
                sub_1C3F7E324(v16, v15);
                uint64_t v26 = sub_1C4496298();
                if (!v26)
                {
                  sub_1C44962B8();
                  __break(1u);
LABEL_154:
                  sub_1C44962B8();
                  __break(1u);
LABEL_155:
                  __break(1u);
LABEL_156:
                  __break(1u);
LABEL_157:
                  __break(1u);
LABEL_158:
                  __break(1u);
LABEL_159:
                  __break(1u);
LABEL_160:
                  __break(1u);
LABEL_161:
                  __break(1u);
LABEL_162:
                  __break(1u);
LABEL_163:
                  __break(1u);
LABEL_164:
                  __break(1u);
LABEL_165:
                  __break(1u);
LABEL_166:
                  __break(1u);
LABEL_167:
                  sub_1C3F7E2CC(v14, v13);
LABEL_168:
                  sub_1C4498548();
                  __break(1u);
                  JUMPOUT(0x1C4073DBCLL);
                }
                uint64_t v27 = v26;
                uint64_t v28 = sub_1C44962C8();
                uint64_t v29 = (int)v16 - v28;
                if (__OFSUB__((int)v16, v28)) {
                  goto LABEL_142;
                }
                break;
            }
            uint64_t v39 = sub_1C44962B8();
            if (v39 >= v25) {
              size_t v40 = v25;
            }
            else {
              size_t v40 = v39;
            }
            int v41 = memcmp(__s1, (const void *)(v27 + v29), v40);
            sub_1C3F7E2CC(v16, v15);
            sub_1C3F7E2CC(v14, v13);
            unint64_t result = swift_release();
            uint64_t v5 = v87;
            if (!v41) {
              goto LABEL_168;
            }
LABEL_12:
            a2 = (a2 + 1) & v88;
            if (((*(void *)(v89 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_127;
            }
            break;
          case 2uLL:
            uint64_t v19 = *(void *)(v14 + 16);
            uint64_t v18 = *(void *)(v14 + 24);
            uint64_t v17 = v18 - v19;
            if (!__OFSUB__(v18, v19)) {
              goto LABEL_18;
            }
            goto LABEL_130;
          case 3uLL:
            goto LABEL_19;
          default:
            uint64_t v17 = BYTE6(v13);
            goto LABEL_19;
        }
      }
    }
  }
LABEL_127:
  uint64_t v78 = *v84;
  *(void *)(*v84 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v78 + 48) + 8 * a2) = v5;
  uint64_t v79 = *(void *)(v78 + 16);
  BOOL v24 = __OFADD__(v79, 1);
  uint64_t v80 = v79 + 1;
  if (v24)
  {
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
  }
  *(void *)(v78 + 16) = v80;
  return result;
}

uint64_t sub_1C4073DEC(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = (unsigned __int16)result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C4070D0C();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1C4075824();
      goto LABEL_14;
    }
    sub_1C4076F8C();
  }
  uint64_t v8 = *v3;
  unint64_t result = MEMORY[0x1C8781230](*(void *)(*v3 + 40), v5, 2);
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int16 *)(v10 + 2 * a2) == v5)
    {
LABEL_13:
      unint64_t result = sub_1C4498548();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int16 *)(v10 + 2 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_WORD *)(*(void *)(v12 + 48) + 2 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1C4073F14(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1C4070F94();
  }
  else
  {
    if (v7 > v6)
    {
      unint64_t result = (uint64_t)sub_1C40759BC();
      goto LABEL_14;
    }
    sub_1C40771F4();
  }
  uint64_t v8 = *v3;
  sub_1C44985F8();
  sub_1C4498608();
  unint64_t result = sub_1C4498628();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      unint64_t result = sub_1C4498548();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

uint64_t sub_1C4074064(uint64_t result, unint64_t a2, char a3, uint64_t *a4, void (*a5)(void))
{
  unint64_t v7 = v5;
  uint64_t v9 = result;
  unint64_t v10 = *(void *)(*v5 + 16);
  unint64_t v11 = *(void *)(*v5 + 24);
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_22;
  }
  uint64_t v12 = v10 + 1;
  if (a3)
  {
    sub_1C4071240(v12, a4);
  }
  else
  {
    if (v11 > v10)
    {
      unint64_t result = (uint64_t)sub_1C4075B50(a4);
LABEL_22:
      uint64_t v29 = *v7;
      *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
      *(void *)(*(void *)(v29 + 48) + 8 * a2) = v9;
      uint64_t v30 = *(void *)(v29 + 16);
      BOOL v31 = __OFADD__(v30, 1);
      uint64_t v32 = v30 + 1;
      if (!v31)
      {
        *(void *)(v29 + 16) = v32;
        return result;
      }
      __break(1u);
      goto LABEL_25;
    }
    sub_1C4077470(v12, a4);
  }
  uint64_t v13 = *v5;
  sub_1C44971B8();
  sub_1C44985F8();
  sub_1C4497248();
  uint64_t v14 = sub_1C4498628();
  unint64_t result = swift_bridgeObjectRelease();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
    goto LABEL_22;
  }
  uint64_t v16 = sub_1C44971B8();
  uint64_t v18 = v17;
  if (v16 == sub_1C44971B8() && v18 == v19)
  {
LABEL_25:
    swift_bridgeObjectRelease_n();
    goto LABEL_26;
  }
  char v21 = sub_1C44982E8();
  swift_bridgeObjectRelease();
  unint64_t result = swift_bridgeObjectRelease();
  if ((v21 & 1) == 0)
  {
    uint64_t v22 = ~v15;
    do
    {
      a2 = (a2 + 1) & v22;
      if (((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
        goto LABEL_22;
      }
      uint64_t v23 = sub_1C44971B8();
      uint64_t v25 = v24;
      if (v23 == sub_1C44971B8() && v25 == v26) {
        goto LABEL_25;
      }
      char v28 = sub_1C44982E8();
      swift_bridgeObjectRelease();
      unint64_t result = swift_bridgeObjectRelease();
    }
    while ((v28 & 1) == 0);
  }
LABEL_26:
  a5(0);
  unint64_t result = sub_1C4498548();
  __break(1u);
  return result;
}

uint64_t sub_1C40742A8(uint64_t result, unint64_t a2, unint64_t a3, char a4)
{
  int v5 = v4;
  uint64_t v8 = result;
  uint64_t v96 = *MEMORY[0x1E4F143B8];
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1C4071550();
    }
    else
    {
      if (v10 > v9)
      {
        unint64_t result = (uint64_t)sub_1C4075CF4();
        goto LABEL_123;
      }
      sub_1C407774C();
    }
    uint64_t v11 = *v4;
    sub_1C44985F8();
    sub_1C4496568();
    unint64_t result = sub_1C4498628();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v12;
    uint64_t v13 = v11 + 56;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v88 = ~v12;
      uint64_t v84 = v11;
      uint64_t v86 = v11 + 56;
      BOOL v14 = __OFSUB__(HIDWORD(v8), v8);
      BOOL v85 = v14;
      unint64_t v87 = a2 >> 62;
      uint64_t v82 = (v8 >> 32) - (int)v8;
      uint64_t v83 = v8 >> 32;
      uint64_t v81 = v4;
      while (1)
      {
        uint64_t v15 = (uint64_t *)(*(void *)(v11 + 48) + 16 * a3);
        uint64_t v17 = *v15;
        unint64_t v16 = v15[1];
        uint64_t v18 = 0;
        switch(v16 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v17), v17))
            {
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
            }
            uint64_t v18 = HIDWORD(v17) - (int)v17;
LABEL_21:
            sub_1C3F7E324(v17, v16);
LABEL_22:
            uint64_t v21 = BYTE6(a2);
            switch(a2 >> 62)
            {
              case 1uLL:
                uint64_t v21 = HIDWORD(v8) - (int)v8;
                if (v85) {
                  goto LABEL_127;
                }
                goto LABEL_26;
              case 2uLL:
                uint64_t v23 = *(void *)(v8 + 16);
                uint64_t v22 = *(void *)(v8 + 24);
                BOOL v24 = __OFSUB__(v22, v23);
                uint64_t v21 = v22 - v23;
                if (!v24) {
                  goto LABEL_26;
                }
                goto LABEL_128;
              case 3uLL:
                if (v18) {
                  goto LABEL_14;
                }
                goto LABEL_163;
              default:
LABEL_26:
                if (v18 != v21)
                {
LABEL_14:
                  unint64_t result = sub_1C3F7E2CC(v17, v16);
                  goto LABEL_15;
                }
                if (v18 < 1) {
                  goto LABEL_163;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v20 = *(void *)(v17 + 16);
            uint64_t v19 = *(void *)(v17 + 24);
            uint64_t v18 = v19 - v20;
            if (!__OFSUB__(v19, v20)) {
              goto LABEL_21;
            }
            goto LABEL_126;
          case 3uLL:
            goto LABEL_22;
          default:
            uint64_t v18 = BYTE6(v16);
            goto LABEL_22;
        }
        switch(v16 >> 62)
        {
          case 1uLL:
            if ((int)v17 > v17 >> 32) {
              goto LABEL_130;
            }
            uint64_t v43 = (unsigned char *)sub_1C4496298();
            if (!v43) {
              goto LABEL_63;
            }
            uint64_t v44 = sub_1C44962C8();
            if (__OFSUB__((int)v17, v44)) {
              goto LABEL_132;
            }
            v43 += (int)v17 - v44;
LABEL_63:
            sub_1C44962B8();
            uint64_t v13 = v86;
            if (!v87)
            {
              *(void *)__s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v43) {
                goto LABEL_158;
              }
              uint64_t v50 = (uint64_t *)__s1;
              uint64_t v49 = v43;
LABEL_107:
              int v68 = memcmp(v49, v50, BYTE6(a2));
              unint64_t result = sub_1C3F7E2CC(v17, v16);
              if (!v68) {
                goto LABEL_164;
              }
              goto LABEL_15;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_141;
              }
              swift_retain();
              uint64_t v45 = sub_1C4496298();
              if (v45)
              {
                uint64_t v46 = sub_1C44962C8();
                if (__OFSUB__((int)v8, v46)) {
                  goto LABEL_148;
                }
                v45 += (int)v8 - v46;
              }
              uint64_t v47 = sub_1C44962B8();
              uint64_t v48 = (v8 >> 32) - (int)v8;
              if (v47 < v82) {
                uint64_t v48 = v47;
              }
              if (!v43) {
                goto LABEL_153;
              }
              if (!v45) {
                goto LABEL_154;
              }
              size_t v41 = v48;
              size_t v42 = v43;
              size_t v40 = (const void *)v45;
              goto LABEL_74;
            }
            uint64_t v69 = *(void *)(v8 + 16);
            uint64_t v70 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            size_t v71 = (char *)sub_1C4496298();
            if (v71)
            {
              uint64_t v72 = sub_1C44962C8();
              if (__OFSUB__(v69, v72)) {
                goto LABEL_147;
              }
              v71 += v69 - v72;
            }
            BOOL v24 = __OFSUB__(v70, v69);
            int64_t v73 = v70 - v69;
            if (v24) {
              goto LABEL_142;
            }
            uint64_t v74 = sub_1C44962B8();
            if (v74 >= v73) {
              size_t v75 = v73;
            }
            else {
              size_t v75 = v74;
            }
            int v5 = v81;
            if (!v43) {
              goto LABEL_161;
            }
            uint64_t v11 = v84;
            if (!v71) {
              goto LABEL_162;
            }
            int v36 = memcmp(v43, v71, v75);
            swift_release();
            goto LABEL_119;
          case 2uLL:
            uint64_t v29 = *(void *)(v17 + 16);
            swift_retain();
            swift_retain();
            uint64_t v30 = (char *)sub_1C4496298();
            if (!v30) {
              goto LABEL_39;
            }
            uint64_t v31 = sub_1C44962C8();
            if (__OFSUB__(v29, v31)) {
              goto LABEL_131;
            }
            v30 += v29 - v31;
LABEL_39:
            sub_1C44962B8();
            uint64_t v11 = v84;
            if (v87)
            {
              if (v87 == 1)
              {
                if (v83 < (int)v8) {
                  goto LABEL_135;
                }
                swift_retain();
                uint64_t v32 = (char *)sub_1C4496298();
                if (v32)
                {
                  uint64_t v33 = sub_1C44962C8();
                  if (__OFSUB__((int)v8, v33)) {
                    goto LABEL_146;
                  }
                  v32 += (int)v8 - v33;
                }
                uint64_t v34 = sub_1C44962B8();
                size_t v35 = (v8 >> 32) - (int)v8;
                if (v34 < v82) {
                  size_t v35 = v34;
                }
                if (!v30) {
                  goto LABEL_150;
                }
                if (!v32) {
                  goto LABEL_151;
                }
                int v36 = memcmp(v30, v32, v35);
                sub_1C3F7E2CC(v8, a2);
                swift_release();
              }
              else
              {
                uint64_t v62 = *(void *)(v8 + 16);
                uint64_t v80 = *(void *)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_1C4496298();
                if (v63)
                {
                  uint64_t v64 = sub_1C44962C8();
                  if (__OFSUB__(v62, v64)) {
                    goto LABEL_145;
                  }
                  v63 += v62 - v64;
                }
                BOOL v24 = __OFSUB__(v80, v62);
                int64_t v65 = v80 - v62;
                if (v24) {
                  goto LABEL_140;
                }
                uint64_t v66 = sub_1C44962B8();
                if (v66 >= v65) {
                  size_t v67 = v65;
                }
                else {
                  size_t v67 = v66;
                }
                if (!v30) {
                  goto LABEL_159;
                }
                uint64_t v11 = v84;
                if (!v63) {
                  goto LABEL_160;
                }
                int v36 = memcmp(v30, v63, v67);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              unint64_t result = sub_1C3F7E2CC(v17, v16);
              int v5 = v81;
            }
            else
            {
              *(void *)__s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v30) {
                goto LABEL_157;
              }
              int v36 = memcmp(v30, __s1, BYTE6(a2));
              swift_release();
LABEL_119:
              swift_release();
LABEL_120:
              unint64_t result = sub_1C3F7E2CC(v17, v16);
            }
            uint64_t v13 = v86;
            if (!v36) {
              goto LABEL_164;
            }
            goto LABEL_15;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)__s1 = 0;
            if (!v87) {
              goto LABEL_75;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_134;
              }
              sub_1C3F7E324(v8, a2);
              uint64_t v37 = sub_1C4496298();
              if (!v37) {
                goto LABEL_152;
              }
              uint64_t v26 = v37;
              uint64_t v38 = sub_1C44962C8();
              uint64_t v28 = (int)v8 - v38;
              if (__OFSUB__((int)v8, v38)) {
                goto LABEL_139;
              }
              goto LABEL_55;
            }
            uint64_t v57 = *(void *)(v8 + 16);
            uint64_t v58 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v53 = (char *)sub_1C4496298();
            if (v53)
            {
              uint64_t v59 = sub_1C44962C8();
              if (__OFSUB__(v57, v59)) {
                goto LABEL_144;
              }
              v53 += v57 - v59;
            }
            BOOL v24 = __OFSUB__(v58, v57);
            int64_t v55 = v58 - v57;
            if (v24) {
              goto LABEL_137;
            }
            uint64_t v56 = sub_1C44962B8();
            uint64_t v11 = v84;
            if (!v53) {
              goto LABEL_156;
            }
            goto LABEL_87;
          default:
            *(void *)__s1 = v17;
            *(_WORD *)&__s1[8] = v16;
            __s1[10] = BYTE2(v16);
            __s1[11] = BYTE3(v16);
            __s1[12] = BYTE4(v16);
            __s1[13] = BYTE5(v16);
            if (!v87)
            {
LABEL_75:
              uint64_t v89 = v8;
              __int16 v90 = a2;
              char v91 = BYTE2(a2);
              char v92 = BYTE3(a2);
              char v93 = BYTE4(a2);
              char v94 = BYTE5(a2);
              uint64_t v49 = __s1;
              uint64_t v50 = &v89;
              goto LABEL_107;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_133;
              }
              sub_1C3F7E324(v8, a2);
              uint64_t v25 = sub_1C4496298();
              if (!v25)
              {
                sub_1C44962B8();
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                sub_1C44962B8();
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                sub_1C3F7E2CC(v17, v16);
LABEL_164:
                sub_1C4498548();
                __break(1u);
                JUMPOUT(0x1C4074C9CLL);
              }
              uint64_t v26 = v25;
              uint64_t v27 = sub_1C44962C8();
              uint64_t v28 = (int)v8 - v27;
              if (__OFSUB__((int)v8, v27)) {
                goto LABEL_138;
              }
LABEL_55:
              uint64_t v39 = sub_1C44962B8();
              size_t v40 = (const void *)(v26 + v28);
              if (v39 >= v82) {
                size_t v41 = (v8 >> 32) - (int)v8;
              }
              else {
                size_t v41 = v39;
              }
              size_t v42 = __s1;
LABEL_74:
              int v36 = memcmp(v42, v40, v41);
              sub_1C3F7E2CC(v8, a2);
              goto LABEL_120;
            }
            uint64_t v51 = *(void *)(v8 + 16);
            uint64_t v52 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            uint64_t v53 = (char *)sub_1C4496298();
            if (v53)
            {
              uint64_t v54 = sub_1C44962C8();
              if (__OFSUB__(v51, v54)) {
                goto LABEL_143;
              }
              v53 += v51 - v54;
            }
            BOOL v24 = __OFSUB__(v52, v51);
            int64_t v55 = v52 - v51;
            if (v24) {
              goto LABEL_136;
            }
            uint64_t v56 = sub_1C44962B8();
            uint64_t v11 = v84;
            if (!v53) {
              goto LABEL_155;
            }
LABEL_87:
            if (v56 >= v55) {
              size_t v60 = v55;
            }
            else {
              size_t v60 = v56;
            }
            int v61 = memcmp(__s1, v53, v60);
            swift_release();
            swift_release();
            unint64_t result = sub_1C3F7E2CC(v17, v16);
            uint64_t v13 = v86;
            if (!v61) {
              goto LABEL_164;
            }
LABEL_15:
            a3 = (a3 + 1) & v88;
            if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
              goto LABEL_123;
            }
            break;
        }
      }
    }
  }
LABEL_123:
  uint64_t v76 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  size_t v77 = (uint64_t *)(*(void *)(v76 + 48) + 16 * a3);
  *size_t v77 = v8;
  v77[1] = a2;
  uint64_t v78 = *(void *)(v76 + 16);
  BOOL v24 = __OFADD__(v78, 1);
  uint64_t v79 = v78 + 1;
  if (v24) {
    goto LABEL_129;
  }
  *(void *)(v76 + 16) = v79;
  return result;
}

uint64_t sub_1C4074CCC(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_15;
  }
  if (a4)
  {
    sub_1C4071AB4();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_1C4076040();
      goto LABEL_15;
    }
    sub_1C4077C64();
  }
  uint64_t v11 = *v4;
  sub_1C44985F8();
  swift_bridgeObjectRetain();
  sub_1C411AAA4(v22, v8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C411AAA4(v22, a2);
  swift_bridgeObjectRelease();
  unint64_t result = sub_1C4498628();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v13 = ~v12;
    do
    {
      uint64_t v14 = *(void *)(*(void *)(v11 + 48) + 16 * a3);
      swift_bridgeObjectRetain();
      uint64_t v15 = swift_bridgeObjectRetain();
      if (sub_1C4113F94(v15, a2))
      {
        char v16 = sub_1C4113F94(v14, v8);
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
        if (v16)
        {
          unint64_t result = sub_1C4498548();
          __break(1u);
          break;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        unint64_t result = swift_bridgeObjectRelease();
      }
      a3 = (a3 + 1) & v13;
    }
    while (((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_15:
  uint64_t v17 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v18 = (uint64_t *)(*(void *)(v17 + 48) + 16 * a3);
  *uint64_t v18 = v8;
  v18[1] = a2;
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (v20) {
    __break(1u);
  }
  else {
    *(void *)(v17 + 16) = v21;
  }
  return result;
}

uint64_t sub_1C4074EA4(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  int v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_1C4071D3C();
  }
  else
  {
    if (v10 > v9)
    {
      unint64_t result = (uint64_t)sub_1C4076208();
      goto LABEL_22;
    }
    sub_1C4077EC0();
  }
  uint64_t v11 = *v4;
  sub_1C44985F8();
  sub_1C4497248();
  unint64_t result = sub_1C4498628();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (unint64_t result = sub_1C44982E8(), (result & 1) != 0))
    {
LABEL_21:
      unint64_t result = sub_1C4498548();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          unint64_t result = sub_1C44982E8();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

uint64_t sub_1C4075040(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1C4496498();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C407201C();
  }
  else
  {
    if (v11 > v10)
    {
      sub_1C40763BC(MEMORY[0x1E4F276F0], &qword_1EA39CB20);
      goto LABEL_12;
    }
    sub_1C4078170();
  }
  uint64_t v12 = *v3;
  sub_1C3FA180C(&qword_1EBBBCA80, MEMORY[0x1E4F276F0]);
  uint64_t v13 = sub_1C4497078();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    uint64_t v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_1C3FA180C(&qword_1EBBBC328, MEMORY[0x1E4F276F0]);
      char v21 = sub_1C4497178();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C4498548();
  __break(1u);
  return result;
}

void *sub_1C40752FC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497CD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C40754A8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497CD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v23 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24)
      {
        int64_t v9 = v23 + 2;
        if (v23 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v24 = *(void *)(v6 + 8 * v9);
        if (!v24) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 32 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    uint64_t v20 = v17[2];
    unint64_t v21 = v17[3];
    uint64_t v22 = (uint64_t *)(*(void *)(v4 + 48) + v16);
    *uint64_t v22 = *v17;
    v22[1] = v19;
    _OWORD v22[2] = v20;
    void v22[3] = v21;
    sub_1C3FE3ADC(v18);
    uint64_t result = (void *)sub_1C3F7E324(v20, v21);
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v13) {
    goto LABEL_28;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C4075678()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB58);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497CD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = (void *)swift_retain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C4075824()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB38);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497CD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_WORD *)(*(void *)(v4 + 48) + 2 * v15) = *(_WORD *)(*(void *)(v2 + 48) + 2 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C40759BC()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB40);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497CD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1C4075B50(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C4497CD8();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    int64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C4075CF4()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB88);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497CD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    id result = (void *)sub_1C3F7E324(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C4075EA8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB98);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497CD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C4076040()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497CD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C4076208()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39FEA0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1C4497CD8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C40763BC(uint64_t (*a1)(void), uint64_t *a2)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v25 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v9 = *v2;
  uint64_t v10 = sub_1C4497CD8();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16))
  {
    id result = (void *)swift_release();
LABEL_30:
    *uint64_t v4 = v11;
    return result;
  }
  id result = (void *)(v10 + 56);
  unint64_t v13 = (unint64_t)((1 << *(unsigned char *)(v11 + 32)) + 63) >> 6;
  BOOL v26 = v4;
  uint64_t v27 = (const void *)(v9 + 56);
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v13) {
    id result = memmove(result, v27, 8 * v13);
  }
  int64_t v15 = 0;
  *(void *)(v11 + 16) = *(void *)(v9 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v9 + 56);
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v22 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v22);
    ++v15;
    if (!v23)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v28) {
        goto LABEL_28;
      }
      unint64_t v23 = *((void *)v27 + v15);
      if (!v23)
      {
        int64_t v15 = v22 + 2;
        if (v22 + 2 >= v28) {
          goto LABEL_28;
        }
        unint64_t v23 = *((void *)v27 + v15);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v18 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v15 << 6);
LABEL_12:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(void *)(v9 + 48) + v21, v5);
    id result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v11 + 48) + v21, v8, v5);
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v28)
  {
LABEL_28:
    id result = (void *)swift_release();
    uint64_t v4 = v26;
    goto LABEL_30;
  }
  unint64_t v23 = *((void *)v27 + v24);
  if (v23)
  {
    int64_t v15 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_28;
    }
    unint64_t v23 = *((void *)v27 + v15);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C407666C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB30);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v26 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v27 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v27) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v27) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v26 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v27) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v26 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    sub_1C44985F8();
    unint64_t v18 = *(void (**)(char *))(*(void *)v17 + 104);
    swift_retain();
    v18(v28);
    uint64_t result = sub_1C4498628();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v20) & ~*(void *)(v8 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v8 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v11 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v27)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v26 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v27) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v26 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C4076948()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB18);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v30 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v13 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v31) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v31) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v30 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v31) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v30 + 8 * v10);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_24:
    unint64_t v18 = (uint64_t *)(*(void *)(v2 + 48) + 32 * v14);
    uint64_t v19 = *v18;
    uint64_t v20 = v18[1];
    uint64_t v21 = v18[2];
    unint64_t v22 = v18[3];
    sub_1C44985F8();
    sub_1C4498618();
    if (v19)
    {
      sub_1C3FE3ADC(v19);
      sub_1C3F7E324(v21, v22);
      sub_1C3FE3ADC(v19);
      swift_bridgeObjectRetain();
      sub_1C411AAA4(v32, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C411AAA4(v32, v20);
      swift_bridgeObjectRelease();
      sub_1C3F870F4(v19);
    }
    else
    {
      sub_1C3FE3ADC(0);
      sub_1C3F7E324(v21, v22);
    }
    sub_1C3F7E324(v21, v22);
    sub_1C4496568();
    sub_1C3F7E2CC(v21, v22);
    uint64_t result = sub_1C4498628();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v24) & ~*(void *)(v8 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v8 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v11 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (uint64_t *)(*(void *)(v4 + 48) + 32 * v11);
    *unint64_t v12 = v19;
    v12[1] = v20;
    uint64_t v12[2] = v21;
    v12[3] = v22;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v31)
  {
LABEL_36:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v30 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v31) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v30 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C4076CC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB58);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  BOOL v28 = v0;
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v29) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v11;
    if (!v16)
    {
      int64_t v11 = v15 + 1;
      if (v15 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v11);
      if (!v16)
      {
        int64_t v11 = v15 + 2;
        if (v15 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v11);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1C44985F8();
    uint64_t v19 = *(void *)(v18 + 16);
    unint64_t v20 = *(void *)(v18 + 24);
    swift_retain();
    sub_1C3F7E324(v19, v20);
    sub_1C4496568();
    sub_1C3F7E2CC(v19, v20);
    uint64_t result = sub_1C4498628();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v22) & ~*(void *)(v9 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v9 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v12 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v11);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C4076F8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB38);
  uint64_t result = sub_1C4497CE8();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    unsigned __int16 v18 = *(_WORD *)(*(void *)(v2 + 48) + 2 * v14);
    uint64_t result = MEMORY[0x1C8781230](*(void *)(v4 + 40), v18, 2);
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(_WORD *)(*(void *)(v4 + 48) + 2 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C40771F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB40);
  uint64_t result = sub_1C4497CE8();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_1C44985F8();
    sub_1C4498608();
    uint64_t result = sub_1C4498628();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C4077470(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_1C4497CE8();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  int64_t v29 = v2;
  uint64_t v30 = v4 + 56;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v4 + 56);
  int64_t v31 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v31) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v30 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v30 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    uint64_t v19 = *(void **)(*(void *)(v4 + 48) + 8 * v15);
    sub_1C44971B8();
    sub_1C44985F8();
    id v20 = v19;
    sub_1C4497248();
    uint64_t v21 = sub_1C4498628();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v23) & ~*(void *)(v10 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v10 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v13 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v6 + 48) + 8 * v13) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v29;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v30 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v31) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v30 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C407774C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB88);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    sub_1C44985F8();
    sub_1C3F7E324(v20, v21);
    sub_1C4496568();
    uint64_t result = sub_1C4498628();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C4077A00()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB98);
  uint64_t result = sub_1C4497CE8();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1C44985E8();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1C4077C64()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB10);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  unint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v9) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v12;
    if (!v16)
    {
      int64_t v12 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v12);
      if (!v16)
      {
        int64_t v12 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v12);
        if (!v16) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_7:
    long long v18 = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v14);
    sub_1C44985F8();
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_1C411AAA4(v19, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    sub_1C411AAA4(v19, *((uint64_t *)&v18 + 1));
    swift_bridgeObjectRelease();
    sub_1C4498628();
    unint64_t result = sub_1C4497C28();
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * result) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v9)
  {
LABEL_23:
    swift_release();
    uint64_t v1 = v0;
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v12 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C4077EC0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39FEA0);
  uint64_t v3 = sub_1C4497CE8();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1C44985F8();
    swift_bridgeObjectRetain();
    sub_1C4497248();
    uint64_t result = sub_1C4498628();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C4078170()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C4496498();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39CB20);
  uint64_t v7 = sub_1C4497CE8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  unint64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_1C3FA180C(&qword_1EBBBCA80, MEMORY[0x1E4F276F0]);
    uint64_t result = sub_1C4497078();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C4078520(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C411E948(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C407858C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C407858C(uint64_t *a1)
{
  uint64_t v2 = v1;
  uint64_t v236 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = a1[1];
  uint64_t result = sub_1C4498068();
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_325;
    }
    if (v4) {
      return sub_1C4079C04(0, v4, 1, a1);
    }
  }
  else
  {
    if (v4 >= 0) {
      uint64_t v6 = v4;
    }
    else {
      uint64_t v6 = v4 + 1;
    }
    if (v4 < -1)
    {
      sub_1C4497F48();
      __break(1u);
      JUMPOUT(0x1C4079BA4);
    }
    uint64_t v209 = v4;
    uint64_t v205 = result;
    uint64_t v202 = a1;
    if (v4 >= 2)
    {
      uint64_t v7 = v6 >> 1;
      uint64_t v8 = sub_1C4497488();
      *(void *)(v8 + 16) = v7;
      uint64_t v204 = v8;
      unint64_t v9 = v8 + 32;
LABEL_12:
      uint64_t v11 = 0;
      uint64_t v12 = *a1;
      uint64_t v203 = *a1 + 40;
      uint64_t v201 = *a1 - 16;
      uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
      unint64_t v207 = v9;
      uint64_t v13 = v209;
      uint64_t v218 = *a1;
      while (1)
      {
        uint64_t v14 = v11;
        uint64_t v15 = v11 + 1;
        uint64_t v16 = v13;
        uint64_t v208 = v11;
        if (v11 + 1 >= v13) {
          goto LABEL_123;
        }
        long long __s1 = *(_OWORD *)(v12 + 16 * v15);
        long long __s2 = *(_OWORD *)(v12 + 16 * v11);
        int v230 = _s9Coherence9CRKeyPathV1loiySbAC_ACtFZ_0((uint64_t *)&__s1, (uint64_t)&__s2);
        uint64_t v15 = v14 + 2;
        if (v14 + 2 >= v16) {
          goto LABEL_115;
        }
        uint64_t v211 = v10;
        unint64_t v17 = (uint64_t *)(v203 + 16 * v14);
        while (2)
        {
          uint64_t v219 = v15;
          uint64_t v226 = v2;
          uint64_t v19 = *(v17 - 1);
          uint64_t v18 = *v17;
          uint64_t v21 = *(v17 - 3);
          unint64_t v20 = *(v17 - 2);
          unint64_t v22 = (unint64_t)*v17 >> 62;
          v17 += 2;
          switch(v22)
          {
            case 1uLL:
              if (v19 >> 32 < (int)v19) {
                goto LABEL_316;
              }
              uint64_t v26 = v18 & 0x3FFFFFFFFFFFFFFFLL;
              sub_1C3F7E324(v21, v20);
              sub_1C3F7E324(v19, v18);
              uint64_t v35 = (char *)sub_1C4496298();
              if (!v35) {
                goto LABEL_42;
              }
              uint64_t v36 = sub_1C44962C8();
              if (__OFSUB__((int)v19, v36)) {
                goto LABEL_323;
              }
              v35 += (int)v19 - v36;
LABEL_42:
              uint64_t v37 = sub_1C44962B8();
              if (v37 >= (v19 >> 32) - (int)v19) {
                uint64_t v38 = (v19 >> 32) - (int)v19;
              }
              else {
                uint64_t v38 = v37;
              }
              uint64_t v39 = &v35[v38];
              if (v35) {
                uint64_t v40 = (uint64_t)v39;
              }
              else {
                uint64_t v40 = 0;
              }
              sub_1C3FF5D74(v35, v40, v21, v20, v19, v18, &__s1);
              unint64_t v9 = v207;
              if (v226)
              {
                sub_1C3F7E2CC(v21, v20);
                sub_1C3F7E2CC(v19, v18);
                __break(1u);
LABEL_350:
                swift_release();
                swift_release();
                __break(1u);
LABEL_351:
                uint64_t v200 = v21;
                goto LABEL_347;
              }
              sub_1C3F7E2CC(v21, v20);
              sub_1C3F7E2CC(v19, v18);
              int v25 = __s1;
              uint64_t v2 = 0;
              goto LABEL_88;
            case 2uLL:
              uint64_t v26 = v18 & 0x3FFFFFFFFFFFFFFFLL;
              uint64_t v27 = *(void *)(v19 + 16);
              unint64_t v9 = *(void *)(v19 + 24);
              sub_1C3F7E324(v21, v20);
              sub_1C3F7E324(v19, v18);
              swift_retain();
              swift_retain();
              unint64_t v28 = (char *)sub_1C4496298();
              if (!v28) {
                goto LABEL_26;
              }
              uint64_t v29 = sub_1C44962C8();
              if (__OFSUB__(v27, v29)) {
                goto LABEL_322;
              }
              v28 += v27 - v29;
LABEL_26:
              BOOL v157 = __OFSUB__(v9, v27);
              uint64_t v30 = v9 - v27;
              if (v157) {
                goto LABEL_317;
              }
              uint64_t v31 = sub_1C44962B8();
              if (v31 >= v30) {
                uint64_t v32 = v30;
              }
              else {
                uint64_t v32 = v31;
              }
              uint64_t v33 = &v28[v32];
              if (v28) {
                uint64_t v34 = (uint64_t)v33;
              }
              else {
                uint64_t v34 = 0;
              }
              sub_1C3FF5D74(v28, v34, v21, v20, v19, v18, &__s1);
              if (v226) {
                goto LABEL_348;
              }
              swift_release();
              swift_release();
              sub_1C3F7E2CC(v21, v20);
              int v25 = __s1;
              sub_1C3F7E2CC(v19, v18);
              uint64_t v2 = 0;
              goto LABEL_35;
            case 3uLL:
              *(void *)((char *)&__s1 + 6) = 0;
              *(void *)&long long __s1 = 0;
              switch(v20 >> 62)
              {
                case 1uLL:
                  if (v21 >> 32 < (int)v21) {
                    goto LABEL_326;
                  }
                  swift_retain();
                  uint64_t v41 = sub_1C4496298();
                  if (!v41)
                  {
                    sub_1C44962B8();
                    sub_1C3F7E2CC(v21, v20);
                    sub_1C3F7E2CC(v19, v18);
                    int v25 = 0;
LABEL_108:
                    uint64_t v2 = v226;
LABEL_35:
                    unint64_t v9 = v207;
LABEL_88:
                    uint64_t v15 = v219;
                    goto LABEL_89;
                  }
                  uint64_t v42 = v41;
                  uint64_t v43 = sub_1C44962C8();
                  uint64_t v44 = (int)v21 - v43;
                  if (__OFSUB__((int)v21, v43)) {
                    goto LABEL_335;
                  }
                  uint64_t v45 = sub_1C44962B8();
                  if (v45 >= (v21 >> 32) - (int)v21) {
                    uint64_t v46 = (v21 >> 32) - (int)v21;
                  }
                  else {
                    uint64_t v46 = v45;
                  }
                  int v47 = memcmp(&__s1, (const void *)(v42 + v44), v46 & (v46 >> 63));
                  sub_1C3F7E2CC(v21, v20);
                  sub_1C3F7E2CC(v19, v18);
                  if (v47 < 0)
                  {
                    int v25 = 1;
                    goto LABEL_108;
                  }
                  unint64_t v9 = v207;
                  uint64_t v15 = v219;
                  if (v47)
                  {
                    int v25 = 0;
                    uint64_t v2 = v226;
                  }
                  else
                  {
                    if (__OFSUB__(HIDWORD(v21), v21)) {
                      goto LABEL_338;
                    }
                    int v25 = HIDWORD(v21) - (int)v21 > 0;
                    uint64_t v2 = v226;
                  }
LABEL_89:
                  if (((v230 ^ v25) & 1) == 0)
                  {
                    ++v15;
                    uint64_t v16 = v209;
                    if (v209 == v15)
                    {
                      uint64_t v15 = v209;
                      uint64_t v10 = v211;
                      goto LABEL_114;
                    }
                    continue;
                  }
                  uint64_t v10 = v211;
                  uint64_t v16 = v209;
LABEL_114:
                  uint64_t v12 = v218;
                  uint64_t v14 = v208;
LABEL_115:
                  if (v230)
                  {
                    if (v15 >= v14)
                    {
                      if (v14 < v15)
                      {
                        uint64_t v74 = (long long *)(v201 + 16 * v15);
                        uint64_t v75 = v15;
                        uint64_t v76 = v14;
                        size_t v77 = (long long *)(v12 + 16 * v14);
                        while (1)
                        {
                          if (v76 != --v75)
                          {
                            if (!v12) {
                              goto LABEL_340;
                            }
                            long long v78 = *v77;
                            *size_t v77 = *v74;
                            *uint64_t v74 = v78;
                          }
                          ++v76;
                          --v74;
                          ++v77;
                          if (v76 >= v75) {
                            goto LABEL_123;
                          }
                        }
                      }
                      goto LABEL_123;
                    }
LABEL_332:
                    __break(1u);
LABEL_333:
                    __break(1u);
LABEL_334:
                    __break(1u);
LABEL_335:
                    __break(1u);
LABEL_336:
                    __break(1u);
LABEL_337:
                    __break(1u);
LABEL_338:
                    __break(1u);
LABEL_339:
                    __break(1u);
LABEL_340:
                    __break(1u);
LABEL_341:
                    __break(1u);
                  }
LABEL_123:
                  if (v15 < v16)
                  {
                    if (__OFSUB__(v15, v14)) {
                      goto LABEL_324;
                    }
                    if (v15 - v14 < v205)
                    {
                      uint64_t v79 = v14 + v205;
                      if (__OFADD__(v14, v205)) {
                        goto LABEL_330;
                      }
                      if (v79 >= v16) {
                        uint64_t v79 = v16;
                      }
                      if (v79 < v14)
                      {
LABEL_331:
                        __break(1u);
                        goto LABEL_332;
                      }
                      if (v15 != v79)
                      {
                        uint64_t v212 = v10;
                        uint64_t v80 = (uint64_t *)(v12 + 16 * v15);
                        uint64_t v206 = v79;
LABEL_133:
                        uint64_t v81 = (uint64_t *)(v12 + 16 * v15);
                        uint64_t v18 = *v81;
                        unint64_t v9 = v81[1];
                        uint64_t v210 = v80;
                        uint64_t v220 = v15;
                        while (2)
                        {
                          uint64_t v83 = *(v80 - 2);
                          unint64_t v82 = *(v80 - 1);
                          uint64_t v84 = v80 - 2;
                          switch(v9 >> 62)
                          {
                            case 1uLL:
                              uint64_t v19 = v2;
                              uint64_t v21 = (int)v18;
                              if (v18 >> 32 < (int)v18)
                              {
                                __break(1u);
LABEL_289:
                                __break(1u);
LABEL_290:
                                __break(1u);
LABEL_291:
                                __break(1u);
LABEL_292:
                                __break(1u);
LABEL_293:
                                __break(1u);
LABEL_294:
                                __break(1u);
LABEL_295:
                                __break(1u);
LABEL_296:
                                __break(1u);
LABEL_297:
                                __break(1u);
LABEL_298:
                                __break(1u);
LABEL_299:
                                __break(1u);
LABEL_300:
                                __break(1u);
LABEL_301:
                                __break(1u);
LABEL_302:
                                __break(1u);
LABEL_303:
                                __break(1u);
LABEL_304:
                                __break(1u);
LABEL_305:
                                __break(1u);
LABEL_306:
                                __break(1u);
LABEL_307:
                                __break(1u);
LABEL_308:
                                __break(1u);
LABEL_309:
                                __break(1u);
LABEL_310:
                                __break(1u);
LABEL_311:
                                __break(1u);
LABEL_312:
                                __break(1u);
LABEL_313:
                                __break(1u);
LABEL_314:
                                __break(1u);
LABEL_315:
                                __break(1u);
LABEL_316:
                                __break(1u);
LABEL_317:
                                __break(1u);
LABEL_318:
                                __break(1u);
LABEL_319:
                                __break(1u);
LABEL_320:
                                __break(1u);
LABEL_321:
                                __break(1u);
LABEL_322:
                                __break(1u);
LABEL_323:
                                __break(1u);
LABEL_324:
                                __break(1u);
LABEL_325:
                                __break(1u);
LABEL_326:
                                __break(1u);
LABEL_327:
                                __break(1u);
LABEL_328:
                                __break(1u);
LABEL_329:
                                __break(1u);
LABEL_330:
                                __break(1u);
                                goto LABEL_331;
                              }
                              uint64_t v223 = *(v80 - 2);
                              unint64_t v216 = *(v80 - 1);
                              sub_1C3F7E324(v83, v82);
                              sub_1C3F7E324(v18, v9);
                              uint64_t v97 = sub_1C4496298();
                              if (v97)
                              {
                                uint64_t v98 = sub_1C44962C8();
                                if (__OFSUB__((int)v18, v98)) {
                                  goto LABEL_291;
                                }
                                v97 += (int)v18 - v98;
                              }
                              uint64_t v99 = sub_1C44962B8();
                              if (v99 >= (v18 >> 32) - (int)v18) {
                                uint64_t v100 = (v18 >> 32) - (int)v18;
                              }
                              else {
                                uint64_t v100 = v99;
                              }
                              uint64_t v101 = v97 + v100;
                              if (v97) {
                                uint64_t v102 = v101;
                              }
                              else {
                                uint64_t v102 = 0;
                              }
                              char v103 = (void *)v97;
                              uint64_t v26 = v83;
                              unint64_t v20 = v216;
                              sub_1C3FF5D74(v103, v102, v83, v216, v18, v9, &__s1);
                              if (v19)
                              {
                                while (1)
                                {
                                  sub_1C3F7E2CC(v26, v20);
                                  sub_1C3F7E2CC(v18, v9);
                                  __break(1u);
LABEL_345:
                                  swift_release();
                                  swift_release();
                                  __break(1u);
LABEL_346:
                                  uint64_t v200 = v26;
LABEL_347:
                                  sub_1C3F7E2CC(v200, v20);
                                  __break(1u);
LABEL_348:
                                  sub_1C3F7E2CC(v21, v20);
                                  sub_1C3F7E2CC(v19, v18);
LABEL_343:
                                  swift_release();
                                  swift_release();
                                  __break(1u);
                                }
                              }
                              uint64_t v2 = 0;
                              sub_1C3F7E2CC(v223, v216);
                              sub_1C3F7E2CC(v18, v9);
                              uint64_t v12 = v218;
                              uint64_t v15 = v220;
                              uint64_t v84 = v80 - 2;
                              if ((__s1 & 1) == 0) {
                                goto LABEL_132;
                              }
LABEL_219:
                              if (!v12) {
                                goto LABEL_337;
                              }
                              uint64_t v18 = *v80;
                              unint64_t v9 = v80[1];
                              *(_OWORD *)uint64_t v80 = *(_OWORD *)v84;
                              *(v80 - 1) = v9;
                              *(v80 - 2) = v18;
                              v80 -= 2;
                              if (v15 != ++v14) {
                                continue;
                              }
LABEL_132:
                              ++v15;
                              uint64_t v80 = v210 + 2;
                              uint64_t v14 = v208;
                              if (v15 != v206) {
                                goto LABEL_133;
                              }
                              uint64_t v15 = v206;
                              unint64_t v9 = v207;
                              uint64_t v10 = v212;
                              break;
                            case 2uLL:
                              uint64_t v227 = v2;
                              uint64_t v26 = v9 & 0x3FFFFFFFFFFFFFFFLL;
                              uint64_t v87 = *(void *)(v18 + 16);
                              uint64_t v21 = *(void *)(v18 + 24);
                              uint64_t v19 = *(v80 - 1);
                              sub_1C3F7E324(v83, v82);
                              sub_1C3F7E324(v18, v9);
                              swift_retain();
                              swift_retain();
                              uint64_t v88 = sub_1C4496298();
                              if (!v88) {
                                goto LABEL_140;
                              }
                              uint64_t v89 = sub_1C44962C8();
                              if (__OFSUB__(v87, v89)) {
                                goto LABEL_290;
                              }
                              v88 += v87 - v89;
LABEL_140:
                              BOOL v157 = __OFSUB__(v21, v87);
                              uint64_t v90 = v21 - v87;
                              if (v157) {
                                goto LABEL_289;
                              }
                              uint64_t v91 = sub_1C44962B8();
                              if (v91 >= v90) {
                                uint64_t v92 = v90;
                              }
                              else {
                                uint64_t v92 = v91;
                              }
                              uint64_t v93 = v88 + v92;
                              if (v88) {
                                uint64_t v94 = v93;
                              }
                              else {
                                uint64_t v94 = 0;
                              }
                              char v95 = (void *)v88;
                              unint64_t v20 = v83;
                              sub_1C3FF5D74(v95, v94, v83, v19, v18, v9, &__s1);
                              if (v227)
                              {
                                sub_1C3F7E2CC(v83, v19);
                                sub_1C3F7E2CC(v18, v9);
                                goto LABEL_343;
                              }
                              uint64_t v2 = 0;
                              swift_release();
                              swift_release();
                              sub_1C3F7E2CC(v83, v19);
                              char v96 = __s1;
                              sub_1C3F7E2CC(v18, v9);
                              uint64_t v15 = v220;
                              uint64_t v84 = v80 - 2;
                              uint64_t v12 = v218;
                              if ((v96 & 1) == 0) {
                                goto LABEL_132;
                              }
                              goto LABEL_219;
                            case 3uLL:
                              *(void *)((char *)&__s1 + 6) = 0;
                              *(void *)&long long __s1 = 0;
                              switch(v82 >> 62)
                              {
                                case 1uLL:
                                  uint64_t v232 = v14;
                                  uint64_t v124 = v12;
                                  uint64_t v19 = (uint64_t)(v80 - 2);
                                  uint64_t v229 = v2;
                                  uint64_t v21 = (int)v83;
                                  if (v83 >> 32 < (int)v83) {
                                    goto LABEL_307;
                                  }
                                  unint64_t v125 = v82;
                                  swift_retain();
                                  uint64_t v225 = v83;
                                  unint64_t v217 = v125;
                                  sub_1C3F7E324(v83, v125);
                                  uint64_t v126 = sub_1C4496298();
                                  if (!v126) {
                                    goto LABEL_199;
                                  }
                                  uint64_t v127 = sub_1C44962C8();
                                  if (__OFSUB__((int)v83, v127)) {
                                    goto LABEL_312;
                                  }
                                  v126 += (int)v83 - v127;
LABEL_199:
                                  uint64_t v128 = sub_1C44962B8();
                                  if (v128 >= (v83 >> 32) - (int)v83) {
                                    uint64_t v129 = (v83 >> 32) - (int)v83;
                                  }
                                  else {
                                    uint64_t v129 = v128;
                                  }
                                  uint64_t v130 = v126 + v129;
                                  if (v126) {
                                    uint64_t v131 = v130;
                                  }
                                  else {
                                    uint64_t v131 = 0;
                                  }
                                  p_s1 = (char *)&__s1;
                                  uint64_t v133 = v126;
                                  goto LABEL_217;
                                case 2uLL:
                                  uint64_t v231 = v14;
                                  uint64_t v224 = v80 - 2;
                                  uint64_t v228 = v2;
                                  uint64_t v26 = v82 & 0x3FFFFFFFFFFFFFFFLL;
                                  uint64_t v104 = *(void *)(v83 + 16);
                                  uint64_t v21 = *(void *)(v83 + 24);
                                  uint64_t v19 = v82;
                                  sub_1C3F7E324(v83, v82);
                                  uint64_t v105 = v83;
                                  swift_retain();
                                  swift_retain();
                                  uint64_t v106 = sub_1C4496298();
                                  if (!v106) {
                                    goto LABEL_168;
                                  }
                                  uint64_t v107 = sub_1C44962C8();
                                  if (__OFSUB__(v104, v107)) {
                                    goto LABEL_311;
                                  }
                                  v106 += v104 - v107;
LABEL_168:
                                  BOOL v157 = __OFSUB__(v21, v104);
                                  uint64_t v108 = v21 - v104;
                                  if (v157) {
                                    goto LABEL_308;
                                  }
                                  uint64_t v109 = sub_1C44962B8();
                                  if (v109 >= v108) {
                                    uint64_t v110 = v108;
                                  }
                                  else {
                                    uint64_t v110 = v109;
                                  }
                                  uint64_t v111 = v106 + v110;
                                  if (v106) {
                                    uint64_t v112 = v111;
                                  }
                                  else {
                                    uint64_t v112 = 0;
                                  }
                                  uint64_t v113 = (char *)&__s1;
                                  uint64_t v114 = v106;
                                  goto LABEL_187;
                                case 3uLL:
                                  *(void *)((char *)&__s2 + 6) = 0;
                                  *(void *)&long long __s2 = 0;
                                  unint64_t v122 = v82;
                                  sub_1C3FF605C((uint64_t)&__s2, &__s1, (uint64_t)&__s2, (uint64_t)&__s1, v18, v9, v83, v82, &v233);
                                  sub_1C3F7E2CC(v83, v122);
                                  sub_1C3F7E2CC(v18, v9);
                                  if (!v233) {
                                    goto LABEL_132;
                                  }
                                  goto LABEL_219;
                                default:
                                  *(void *)&long long __s2 = v83;
                                  WORD4(__s2) = v82;
                                  BYTE10(__s2) = BYTE2(v82);
                                  BYTE11(__s2) = BYTE3(v82);
                                  BYTE12(__s2) = BYTE4(v82);
                                  BYTE13(__s2) = BYTE5(v82);
                                  p_s2 = (char *)&__s2 + BYTE6(v82);
                                  BOOL v85 = (char *)&__s1;
                                  goto LABEL_193;
                              }
                            default:
                              *(void *)&long long __s1 = v18;
                              WORD4(__s1) = v9;
                              BYTE10(__s1) = BYTE2(v9);
                              BYTE11(__s1) = BYTE3(v9);
                              BYTE12(__s1) = BYTE4(v9);
                              BYTE13(__s1) = BYTE5(v9);
                              BOOL v85 = (char *)&__s1 + BYTE6(v9);
                              switch(v82 >> 62)
                              {
                                case 1uLL:
                                  uint64_t v232 = v14;
                                  uint64_t v124 = v12;
                                  uint64_t v19 = (uint64_t)(v80 - 2);
                                  uint64_t v229 = v2;
                                  uint64_t v21 = (int)v83;
                                  if (v83 >> 32 < (int)v83) {
                                    goto LABEL_306;
                                  }
                                  unint64_t v134 = v82;
                                  swift_retain();
                                  uint64_t v225 = v83;
                                  unint64_t v217 = v134;
                                  sub_1C3F7E324(v83, v134);
                                  uint64_t v135 = sub_1C4496298();
                                  if (!v135) {
                                    goto LABEL_210;
                                  }
                                  uint64_t v136 = sub_1C44962C8();
                                  if (__OFSUB__((int)v83, v136)) {
                                    goto LABEL_313;
                                  }
                                  v135 += (int)v83 - v136;
LABEL_210:
                                  uint64_t v137 = sub_1C44962B8();
                                  if (v137 >= (v83 >> 32) - (int)v83) {
                                    uint64_t v138 = (v83 >> 32) - (int)v83;
                                  }
                                  else {
                                    uint64_t v138 = v137;
                                  }
                                  uint64_t v139 = v135 + v138;
                                  if (v135) {
                                    uint64_t v131 = v139;
                                  }
                                  else {
                                    uint64_t v131 = 0;
                                  }
                                  uint64_t v133 = v135;
                                  p_s1 = (char *)&__s1 + BYTE6(v9);
LABEL_217:
                                  uint64_t v26 = v225;
                                  unint64_t v20 = v217;
                                  sub_1C3FF605C(v133, &__s1, v131, (uint64_t)p_s1, v18, v9, v225, v217, (BOOL *)&__s2);
                                  if (v229) {
                                    goto LABEL_346;
                                  }
                                  uint64_t v2 = 0;
                                  sub_1C3F7E2CC(v225, v217);
                                  sub_1C3F7E2CC(v225, v217);
                                  sub_1C3F7E2CC(v18, v9);
                                  uint64_t v15 = v220;
                                  uint64_t v84 = (uint64_t *)v19;
                                  uint64_t v12 = v124;
                                  uint64_t v14 = v232;
                                  if (__s2) {
                                    goto LABEL_219;
                                  }
                                  goto LABEL_132;
                                case 2uLL:
                                  uint64_t v231 = v14;
                                  uint64_t v224 = v80 - 2;
                                  uint64_t v228 = v2;
                                  uint64_t v26 = v82 & 0x3FFFFFFFFFFFFFFFLL;
                                  uint64_t v115 = *(void *)(v83 + 16);
                                  uint64_t v21 = *(void *)(v83 + 24);
                                  uint64_t v19 = v82;
                                  sub_1C3F7E324(v83, v82);
                                  uint64_t v105 = v83;
                                  swift_retain();
                                  swift_retain();
                                  uint64_t v116 = sub_1C4496298();
                                  if (!v116) {
                                    goto LABEL_179;
                                  }
                                  uint64_t v117 = sub_1C44962C8();
                                  if (__OFSUB__(v115, v117)) {
                                    goto LABEL_310;
                                  }
                                  v116 += v115 - v117;
LABEL_179:
                                  BOOL v157 = __OFSUB__(v21, v115);
                                  uint64_t v118 = v21 - v115;
                                  if (v157) {
                                    goto LABEL_309;
                                  }
                                  uint64_t v119 = sub_1C44962B8();
                                  if (v119 >= v118) {
                                    uint64_t v120 = v118;
                                  }
                                  else {
                                    uint64_t v120 = v119;
                                  }
                                  uint64_t v121 = v116 + v120;
                                  if (v116) {
                                    uint64_t v112 = v121;
                                  }
                                  else {
                                    uint64_t v112 = 0;
                                  }
                                  uint64_t v114 = v116;
                                  uint64_t v113 = (char *)&__s1 + BYTE6(v9);
LABEL_187:
                                  unint64_t v20 = v105;
                                  sub_1C3FF605C(v114, &__s1, v112, (uint64_t)v113, v18, v9, v105, v19, (BOOL *)&__s2);
                                  if (v228) {
                                    goto LABEL_345;
                                  }
                                  uint64_t v2 = 0;
                                  swift_release();
                                  swift_release();
                                  sub_1C3F7E2CC(v105, v19);
                                  sub_1C3F7E2CC(v18, v9);
                                  uint64_t v15 = v220;
                                  uint64_t v84 = v224;
                                  uint64_t v12 = v218;
                                  uint64_t v14 = v231;
                                  if ((__s2 & 1) == 0) {
                                    goto LABEL_132;
                                  }
                                  goto LABEL_219;
                                case 3uLL:
                                  *(void *)((char *)&__s2 + 6) = 0;
                                  *(void *)&long long __s2 = 0;
                                  p_s2 = (char *)&__s2;
                                  goto LABEL_193;
                                default:
                                  *(void *)&long long __s2 = v83;
                                  WORD4(__s2) = v82;
                                  BYTE10(__s2) = BYTE2(v82);
                                  BYTE11(__s2) = BYTE3(v82);
                                  BYTE12(__s2) = BYTE4(v82);
                                  BYTE13(__s2) = BYTE5(v82);
                                  p_s2 = (char *)&__s2 + BYTE6(v82);
LABEL_193:
                                  unint64_t v123 = v82;
                                  sub_1C3FF605C((uint64_t)&__s2, &__s1, (uint64_t)p_s2, (uint64_t)v85, v18, v9, v83, v82, &v233);
                                  sub_1C3F7E2CC(v83, v123);
                                  sub_1C3F7E2CC(v18, v9);
                                  if (!v233) {
                                    goto LABEL_132;
                                  }
                                  goto LABEL_219;
                              }
                          }
                          break;
                        }
                      }
                    }
                  }
                  if (v15 < v14) {
                    goto LABEL_321;
                  }
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    uint64_t v10 = sub_1C411E2A8(0, *((void *)v10 + 2) + 1, 1, v10);
                  }
                  uint64_t v140 = v10;
                  unint64_t v141 = *((void *)v10 + 2);
                  uint64_t v213 = v140;
                  unint64_t v142 = *((void *)v140 + 3);
                  unint64_t v143 = v141 + 1;
                  if (v141 >= v142 >> 1) {
                    uint64_t v213 = sub_1C411E2A8((char *)(v142 > 1), v141 + 1, 1, v213);
                  }
                  *((void *)v213 + 2) = v143;
                  int64_t v144 = v213 + 32;
                  uint64_t v145 = &v213[16 * v141 + 32];
                  *(void *)uint64_t v145 = v208;
                  *((void *)v145 + 1) = v15;
                  uint64_t v221 = v15;
                  if (v141)
                  {
                    uint64_t v10 = v213;
                    while (1)
                    {
                      unint64_t v146 = v143 - 1;
                      if (v143 >= 4)
                      {
                        uint64_t v151 = &v144[16 * v143];
                        uint64_t v152 = *((void *)v151 - 8);
                        uint64_t v153 = *((void *)v151 - 7);
                        BOOL v157 = __OFSUB__(v153, v152);
                        uint64_t v154 = v153 - v152;
                        if (v157) {
                          goto LABEL_296;
                        }
                        uint64_t v156 = *((void *)v151 - 6);
                        uint64_t v155 = *((void *)v151 - 5);
                        BOOL v157 = __OFSUB__(v155, v156);
                        uint64_t v149 = v155 - v156;
                        char v150 = v157;
                        if (v157) {
                          goto LABEL_297;
                        }
                        unint64_t v158 = v143 - 2;
                        uint64_t v159 = &v144[16 * v143 - 32];
                        uint64_t v161 = *(void *)v159;
                        uint64_t v160 = *((void *)v159 + 1);
                        BOOL v157 = __OFSUB__(v160, v161);
                        uint64_t v162 = v160 - v161;
                        if (v157) {
                          goto LABEL_299;
                        }
                        BOOL v157 = __OFADD__(v149, v162);
                        uint64_t v163 = v149 + v162;
                        if (v157) {
                          goto LABEL_302;
                        }
                        if (v163 >= v154)
                        {
                          uint64_t v181 = &v144[16 * v146];
                          uint64_t v183 = *(void *)v181;
                          uint64_t v182 = *((void *)v181 + 1);
                          BOOL v157 = __OFSUB__(v182, v183);
                          uint64_t v184 = v182 - v183;
                          if (v157) {
                            goto LABEL_314;
                          }
                          BOOL v174 = v149 < v184;
                          goto LABEL_261;
                        }
                      }
                      else
                      {
                        if (v143 != 3)
                        {
                          uint64_t v175 = *((void *)v10 + 4);
                          uint64_t v176 = *((void *)v10 + 5);
                          BOOL v157 = __OFSUB__(v176, v175);
                          uint64_t v168 = v176 - v175;
                          char v169 = v157;
                          goto LABEL_255;
                        }
                        uint64_t v148 = *((void *)v10 + 4);
                        uint64_t v147 = *((void *)v10 + 5);
                        BOOL v157 = __OFSUB__(v147, v148);
                        uint64_t v149 = v147 - v148;
                        char v150 = v157;
                      }
                      if (v150) {
                        goto LABEL_298;
                      }
                      unint64_t v158 = v143 - 2;
                      uint64_t v164 = &v144[16 * v143 - 32];
                      uint64_t v166 = *(void *)v164;
                      uint64_t v165 = *((void *)v164 + 1);
                      BOOL v167 = __OFSUB__(v165, v166);
                      uint64_t v168 = v165 - v166;
                      char v169 = v167;
                      if (v167) {
                        goto LABEL_301;
                      }
                      uint64_t v170 = &v144[16 * v146];
                      uint64_t v172 = *(void *)v170;
                      uint64_t v171 = *((void *)v170 + 1);
                      BOOL v157 = __OFSUB__(v171, v172);
                      uint64_t v173 = v171 - v172;
                      if (v157) {
                        goto LABEL_304;
                      }
                      if (__OFADD__(v168, v173)) {
                        goto LABEL_305;
                      }
                      if (v168 + v173 >= v149)
                      {
                        BOOL v174 = v149 < v173;
LABEL_261:
                        if (v174) {
                          unint64_t v146 = v158;
                        }
                        goto LABEL_263;
                      }
LABEL_255:
                      if (v169) {
                        goto LABEL_300;
                      }
                      unint64_t v177 = &v144[16 * v146];
                      uint64_t v179 = *(void *)v177;
                      uint64_t v178 = *((void *)v177 + 1);
                      BOOL v157 = __OFSUB__(v178, v179);
                      uint64_t v180 = v178 - v179;
                      if (v157) {
                        goto LABEL_303;
                      }
                      if (v180 < v168) {
                        goto LABEL_272;
                      }
LABEL_263:
                      unint64_t v185 = v146 - 1;
                      if (v146 - 1 >= v143) {
                        goto LABEL_292;
                      }
                      if (!v12) {
                        goto LABEL_339;
                      }
                      uint64_t v186 = v12;
                      uint64_t v187 = &v144[16 * v185];
                      uint64_t v188 = *(void *)v187;
                      unint64_t v189 = v146;
                      uint64_t v190 = &v144[16 * v146];
                      uint64_t v191 = *((void *)v190 + 1);
                      sub_1C407A500((uint64_t *)(v186 + 16 * *(void *)v187), (uint64_t *)(v186 + 16 * *(void *)v190), (uint64_t *)(v186 + 16 * v191), (char *)v9);
                      if (v2) {
                        goto LABEL_286;
                      }
                      if (v191 < v188) {
                        goto LABEL_293;
                      }
                      if (v189 > *((void *)v213 + 2)) {
                        goto LABEL_294;
                      }
                      *(void *)uint64_t v187 = v188;
                      *(void *)&v144[16 * v185 + 8] = v191;
                      unint64_t v192 = *((void *)v213 + 2);
                      if (v189 >= v192) {
                        goto LABEL_295;
                      }
                      unint64_t v143 = v192 - 1;
                      memmove(v190, v190 + 16, 16 * (v192 - 1 - v189));
                      *((void *)v213 + 2) = v192 - 1;
                      uint64_t v10 = v213;
                      uint64_t v12 = v218;
                      uint64_t v2 = 0;
                      if (v192 <= 2) {
                        goto LABEL_272;
                      }
                    }
                  }
                  unint64_t v143 = 1;
                  uint64_t v10 = v213;
LABEL_272:
                  uint64_t v13 = v209;
                  uint64_t v11 = v221;
                  if (v221 >= v209) {
                    goto LABEL_275;
                  }
                  break;
                case 2uLL:
                  uint64_t v56 = *(void *)(v21 + 16);
                  uint64_t v222 = *(void *)(v21 + 24);
                  sub_1C3F7E324(v21, v20);
                  swift_retain();
                  swift_retain();
                  uint64_t v57 = sub_1C4496298();
                  if (v57)
                  {
                    uint64_t v58 = v57;
                    uint64_t v59 = sub_1C44962C8();
                    if (__OFSUB__(v56, v59)) {
                      goto LABEL_334;
                    }
                    uint64_t v60 = v58 + v56 - v59;
                  }
                  else
                  {
                    uint64_t v60 = 0;
                  }
                  BOOL v157 = __OFSUB__(v222, v56);
                  uint64_t v68 = v222 - v56;
                  if (v157) {
                    goto LABEL_328;
                  }
                  uint64_t v69 = sub_1C44962B8();
                  if (v69 >= v68) {
                    uint64_t v70 = v68;
                  }
                  else {
                    uint64_t v70 = v69;
                  }
                  uint64_t v71 = v60 + v70;
                  if (v60) {
                    uint64_t v72 = v71;
                  }
                  else {
                    uint64_t v72 = 0;
                  }
                  sub_1C3FF605C(v60, &__s1, v72, (uint64_t)&__s1, v19, v18, v21, v20, (BOOL *)&__s2);
                  swift_release();
                  swift_release();
                  uint64_t v73 = v21;
                  uint64_t v2 = v226;
                  sub_1C3F7E2CC(v73, v20);
                  sub_1C3F7E2CC(v19, v18);
                  int v25 = __s2;
                  goto LABEL_35;
                case 3uLL:
                  goto LABEL_50;
                default:
                  sub_1C3F7E2CC(v21, v20);
                  sub_1C3F7E2CC(v19, v18);
                  int v25 = (v20 & 0xFF000000000000) != 0;
                  goto LABEL_51;
              }
              break;
            default:
              *(void *)&long long __s1 = v19;
              WORD4(__s1) = v18;
              BYTE10(__s1) = BYTE2(v18);
              BYTE11(__s1) = BYTE3(v18);
              BYTE12(__s1) = BYTE4(v18);
              BYTE13(__s1) = BYTE5(v18);
              switch(v20 >> 62)
              {
                case 1uLL:
                  if (v21 >> 32 < (int)v21) {
                    goto LABEL_327;
                  }
                  uint64_t v26 = v20 & 0x3FFFFFFFFFFFFFFFLL;
                  swift_retain();
                  sub_1C3F7E324(v21, v20);
                  uint64_t v61 = sub_1C4496298();
                  if (!v61) {
                    goto LABEL_79;
                  }
                  uint64_t v62 = sub_1C44962C8();
                  if (__OFSUB__((int)v21, v62)) {
                    goto LABEL_336;
                  }
                  v61 += (int)v21 - v62;
LABEL_79:
                  unint64_t v9 = v207;
                  uint64_t v63 = sub_1C44962B8();
                  if (v63 >= (v21 >> 32) - (int)v21) {
                    uint64_t v64 = (v21 >> 32) - (int)v21;
                  }
                  else {
                    uint64_t v64 = v63;
                  }
                  uint64_t v65 = v61 + v64;
                  if (v61) {
                    uint64_t v66 = v65;
                  }
                  else {
                    uint64_t v66 = 0;
                  }
                  sub_1C3FF605C(v61, &__s1, v66, (uint64_t)&__s1 + BYTE6(v18), v19, v18, v21, v20, (BOOL *)&__s2);
                  if (v226) {
                    goto LABEL_351;
                  }
                  sub_1C3F7E2CC(v21, v20);
                  break;
                case 2uLL:
                  uint64_t v26 = v20 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v48 = *(void *)(v21 + 16);
                  uint64_t v215 = *(void *)(v21 + 24);
                  sub_1C3F7E324(v21, v20);
                  swift_retain();
                  swift_retain();
                  uint64_t v49 = sub_1C4496298();
                  if (!v49) {
                    goto LABEL_63;
                  }
                  uint64_t v50 = sub_1C44962C8();
                  if (__OFSUB__(v48, v50)) {
                    goto LABEL_333;
                  }
                  v49 += v48 - v50;
LABEL_63:
                  BOOL v157 = __OFSUB__(v215, v48);
                  uint64_t v51 = v215 - v48;
                  if (v157) {
                    goto LABEL_329;
                  }
                  uint64_t v52 = sub_1C44962B8();
                  if (v52 >= v51) {
                    uint64_t v53 = v51;
                  }
                  else {
                    uint64_t v53 = v52;
                  }
                  uint64_t v54 = v49 + v53;
                  if (v49) {
                    uint64_t v55 = v54;
                  }
                  else {
                    uint64_t v55 = 0;
                  }
                  sub_1C3FF605C(v49, &__s1, v55, (uint64_t)&__s1 + BYTE6(v18), v19, v18, v21, v20, (BOOL *)&__s2);
                  if (v226) {
                    goto LABEL_350;
                  }
                  swift_release();
                  swift_release();
                  break;
                case 3uLL:
LABEL_50:
                  sub_1C3F7E2CC(v21, v20);
                  sub_1C3F7E2CC(v19, v18);
                  int v25 = 0;
                  goto LABEL_51;
                default:
                  *(void *)&long long __s2 = v21;
                  WORD4(__s2) = v20;
                  BYTE10(__s2) = BYTE2(v20);
                  BYTE11(__s2) = BYTE3(v20);
                  BYTE12(__s2) = BYTE4(v20);
                  if (BYTE6(v20) >= (unint64_t)BYTE6(v18)) {
                    size_t v23 = BYTE6(v18);
                  }
                  else {
                    size_t v23 = BYTE6(v20);
                  }
                  BYTE13(__s2) = BYTE5(v20);
                  int v24 = memcmp(&__s1, &__s2, v23);
                  sub_1C3F7E2CC(v21, v20);
                  sub_1C3F7E2CC(v19, v18);
                  if (v24 < 0)
                  {
                    int v25 = 1;
                  }
                  else
                  {
                    if (v24) {
                      BOOL v67 = 1;
                    }
                    else {
                      BOOL v67 = BYTE6(v18) >= (unint64_t)BYTE6(v20);
                    }
                    int v25 = !v67;
                  }
LABEL_51:
                  uint64_t v2 = v226;
                  goto LABEL_88;
              }
              sub_1C3F7E2CC(v21, v20);
              sub_1C3F7E2CC(v19, v18);
              int v25 = __s2;
              uint64_t v2 = 0;
              goto LABEL_88;
          }
          break;
        }
      }
    }
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
    unint64_t v9 = MEMORY[0x1E4FBC860] + 32;
    uint64_t v204 = MEMORY[0x1E4FBC860];
    if (v4 == 1) {
      goto LABEL_12;
    }
    unint64_t v143 = *(void *)(MEMORY[0x1E4FBC860] + 16);
LABEL_275:
    if (v143 >= 2)
    {
      uint64_t v193 = *v202;
      unint64_t v194 = v9;
      do
      {
        unint64_t v195 = v143 - 2;
        if (v143 < 2) {
          goto LABEL_315;
        }
        uint64_t v214 = v10;
        if (!v193) {
          goto LABEL_341;
        }
        uint64_t v196 = *(void *)&v10[16 * v195 + 32];
        uint64_t v197 = *(void *)&v10[16 * v143 + 24];
        sub_1C407A500((uint64_t *)(v193 + 16 * v196), (uint64_t *)(v193 + 16 * *(void *)&v10[16 * v143 + 16]), (uint64_t *)(v193 + 16 * v197), (char *)v9);
        if (v2) {
          break;
        }
        if (v197 < v196) {
          goto LABEL_318;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v214 = sub_1C411E87C((uint64_t)v10);
        }
        if (v195 >= *((void *)v214 + 2)) {
          goto LABEL_319;
        }
        uint64_t v198 = &v214[16 * v195 + 32];
        *(void *)uint64_t v198 = v196;
        *((void *)v198 + 1) = v197;
        unint64_t v199 = *((void *)v214 + 2);
        if (v143 > v199) {
          goto LABEL_320;
        }
        memmove(&v214[16 * v143 + 16], &v214[16 * v143 + 32], 16 * (v199 - v143));
        *((void *)v214 + 2) = v199 - 1;
        unint64_t v143 = v199 - 1;
        uint64_t v10 = v214;
        unint64_t v9 = v194;
      }
      while (v199 > 2);
    }
LABEL_286:
    swift_bridgeObjectRelease();
    *(void *)(v204 + 16) = 0;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C4079C04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5 = v4;
  uint64_t v88 = result;
  __s1[2] = *MEMORY[0x1E4F143B8];
  if (a3 != a2)
  {
    uint64_t v6 = a3;
    uint64_t v102 = *a4;
    uint64_t v7 = (uint64_t *)(*a4 + 16 * a3);
    while (1)
    {
      uint64_t v8 = (uint64_t *)(v102 + 16 * v6);
      uint64_t v10 = *v8;
      unint64_t v9 = v8[1];
      uint64_t v11 = v88;
      uint64_t v89 = v7;
      uint64_t v94 = v6;
      while (2)
      {
        uint64_t v12 = *(v7 - 2);
        unint64_t v13 = *(v7 - 1);
        uint64_t v14 = v7 - 2;
        uint64_t v103 = v11;
        switch(v9 >> 62)
        {
          case 1uLL:
            if (v10 >> 32 < (int)v10)
            {
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              __break(1u);
LABEL_120:
              __break(1u);
LABEL_121:
              __break(1u);
LABEL_122:
              __break(1u);
LABEL_123:
              __break(1u);
LABEL_124:
              __break(1u);
            }
            unint64_t v33 = *(v7 - 2);
            unint64_t v99 = *(v7 - 1);
            sub_1C3F7E324(v12, v13);
            sub_1C3F7E324(v10, v9);
            uint64_t v36 = (char *)sub_1C4496298();
            if (v36)
            {
              uint64_t v37 = sub_1C44962C8();
              if (__OFSUB__((int)v10, v37)) {
                goto LABEL_111;
              }
              v36 += (int)v10 - v37;
            }
            uint64_t v38 = sub_1C44962B8();
            if (v38 >= (v10 >> 32) - (int)v10) {
              uint64_t v39 = (v10 >> 32) - (int)v10;
            }
            else {
              uint64_t v39 = v38;
            }
            uint64_t v40 = &v36[v39];
            if (v36) {
              uint64_t v41 = (uint64_t)v40;
            }
            else {
              uint64_t v41 = 0;
            }
            unint64_t v31 = v99;
            sub_1C3FF5D74(v36, v41, v33, v99, v10, v9, __s1);
            if (v5) {
              goto LABEL_126;
            }
            uint64_t v5 = 0;
            sub_1C3F7E2CC(v33, v99);
            uint64_t result = sub_1C3F7E2CC(v10, v9);
            uint64_t v6 = v94;
            uint64_t v14 = v7 - 2;
            if ((__s1[0] & 1) == 0) {
              goto LABEL_5;
            }
            goto LABEL_101;
          case 2uLL:
            uint64_t v20 = *(void *)(v10 + 16);
            uint64_t v95 = *(void *)(v10 + 24);
            uint64_t v98 = v5;
            unint64_t v21 = *(v7 - 2);
            unint64_t v22 = *(v7 - 1);
            sub_1C3F7E324(v12, v13);
            sub_1C3F7E324(v10, v9);
            swift_retain();
            swift_retain();
            size_t v23 = (char *)sub_1C4496298();
            if (!v23) {
              goto LABEL_17;
            }
            uint64_t v24 = sub_1C44962C8();
            if (__OFSUB__(v20, v24)) {
              goto LABEL_110;
            }
            v23 += v20 - v24;
LABEL_17:
            BOOL v25 = __OFSUB__(v95, v20);
            uint64_t v26 = v95 - v20;
            if (v25) {
              goto LABEL_109;
            }
            uint64_t v27 = sub_1C44962B8();
            if (v27 >= v26) {
              uint64_t v28 = v26;
            }
            else {
              uint64_t v28 = v27;
            }
            uint64_t v29 = &v23[v28];
            if (v23) {
              uint64_t v30 = (uint64_t)v29;
            }
            else {
              uint64_t v30 = 0;
            }
            unint64_t v31 = v21;
            uint64_t v32 = v21;
            unint64_t v33 = v22;
            sub_1C3FF5D74(v23, v30, v32, v22, v10, v9, __s1);
            if (v98)
            {
              sub_1C3F7E2CC(v31, v22);
              sub_1C3F7E2CC(v10, v9);
              swift_release();
              swift_release();
              __break(1u);
LABEL_126:
              sub_1C3F7E2CC(v33, v31);
              sub_1C3F7E2CC(v10, v9);
              __break(1u);
              JUMPOUT(0x1C407A4D0);
            }
            uint64_t v5 = 0;
            swift_release();
            swift_release();
            sub_1C3F7E2CC(v31, v33);
            char v34 = __s1[0];
            uint64_t result = sub_1C3F7E2CC(v10, v9);
            uint64_t v14 = v7 - 2;
            uint64_t v6 = v94;
            if ((v34 & 1) == 0) {
              goto LABEL_5;
            }
            goto LABEL_101;
          case 3uLL:
            memset(__s1, 0, 14);
            switch(v13 >> 62)
            {
              case 1uLL:
                uint64_t v100 = v5;
                uint64_t v42 = (int)v12;
                uint64_t v92 = v12;
                uint64_t v43 = (v12 >> 32) - (int)v12;
                if (v12 >> 32 < (int)v12) {
                  goto LABEL_113;
                }
                uint64_t v44 = v7 - 2;
                unint64_t v45 = v13;
                swift_retain();
                uint64_t v46 = sub_1C4496298();
                if (!v46) {
                  goto LABEL_104;
                }
                uint64_t v47 = v46;
                uint64_t v48 = sub_1C44962C8();
                BOOL v25 = __OFSUB__(v42, v48);
                uint64_t v49 = v42 - v48;
                if (v25) {
                  goto LABEL_116;
                }
                uint64_t v50 = sub_1C44962B8();
                if (v50 >= v43) {
                  uint64_t v51 = v43;
                }
                else {
                  uint64_t v51 = v50;
                }
                int v52 = memcmp(__s1, (const void *)(v47 + v49), v51 & (v51 >> 63));
                sub_1C3F7E2CC(v92, v45);
                uint64_t result = sub_1C3F7E2CC(v10, v9);
                if (v52 < 0) {
                  goto LABEL_64;
                }
                uint64_t v5 = v100;
                uint64_t v53 = v94;
                if (v52) {
                  goto LABEL_106;
                }
                uint64_t v11 = v103;
                if (__OFSUB__(HIDWORD(v92), v92)) {
                  goto LABEL_122;
                }
                uint64_t v14 = v7 - 2;
                uint64_t v6 = v94;
                if (HIDWORD(v92) - (int)v92 <= 0) {
                  goto LABEL_5;
                }
                goto LABEL_101;
              case 2uLL:
                char v96 = v7 - 2;
                unint64_t v101 = v13;
                uint64_t v64 = v12;
                uint64_t v65 = *(void *)(v12 + 16);
                uint64_t v91 = *(void *)(v12 + 24);
                sub_1C3F7E324(v12, v13);
                uint64_t v93 = v64;
                swift_retain();
                swift_retain();
                uint64_t v66 = (char *)sub_1C4496298();
                if (!v66) {
                  goto LABEL_68;
                }
                uint64_t v67 = sub_1C44962C8();
                if (__OFSUB__(v65, v67)) {
                  goto LABEL_118;
                }
                v66 += v65 - v67;
LABEL_68:
                BOOL v25 = __OFSUB__(v91, v65);
                uint64_t v68 = v91 - v65;
                if (v25) {
                  goto LABEL_115;
                }
                uint64_t v69 = sub_1C44962B8();
                if (!v66) {
                  goto LABEL_4;
                }
                if (v69 >= v68) {
                  uint64_t v70 = v68;
                }
                else {
                  uint64_t v70 = v69;
                }
                int v71 = memcmp(__s1, v66, v70 & (v70 >> 63));
                if (v71 < 0) {
                  goto LABEL_90;
                }
                if (v71) {
                  goto LABEL_4;
                }
                uint64_t v73 = *(void *)(v64 + 16);
                uint64_t v72 = *(void *)(v64 + 24);
                swift_release();
                swift_release();
                sub_1C3F7E2CC(v64, v101);
                BOOL v25 = __OFSUB__(v72, v73);
                uint64_t v74 = v72 - v73;
                if (v25) {
                  goto LABEL_121;
                }
                uint64_t result = sub_1C3F7E2CC(v10, v9);
                uint64_t v14 = v7 - 2;
                if (v74 <= 0) {
                  goto LABEL_5;
                }
                goto LABEL_101;
              case 3uLL:
                goto LABEL_105;
              default:
                unint64_t v35 = v13;
                sub_1C3F7E2CC(v12, v13);
                uint64_t result = sub_1C3F7E2CC(v10, v9);
                if ((v35 & 0xFF000000000000) == 0) {
                  goto LABEL_5;
                }
                goto LABEL_101;
            }
          default:
            __s1[0] = v10;
            LOWORD(__s1[1]) = v9;
            BYTE2(__s1[1]) = BYTE2(v9);
            BYTE3(__s1[1]) = BYTE3(v9);
            BYTE4(__s1[1]) = BYTE4(v9);
            BYTE5(__s1[1]) = BYTE5(v9);
            switch(v13 >> 62)
            {
              case 1uLL:
                uint64_t v100 = v5;
                uint64_t v54 = (int)v12;
                uint64_t v92 = v12;
                uint64_t v55 = (v12 >> 32) - (int)v12;
                if (v12 >> 32 < (int)v12) {
                  goto LABEL_112;
                }
                uint64_t v44 = v7 - 2;
                unint64_t v45 = v13;
                swift_retain();
                uint64_t v56 = sub_1C4496298();
                if (v56)
                {
                  uint64_t v57 = v56;
                  uint64_t v58 = sub_1C44962C8();
                  BOOL v25 = __OFSUB__(v54, v58);
                  uint64_t v59 = v54 - v58;
                  if (v25) {
                    goto LABEL_117;
                  }
                  uint64_t v60 = sub_1C44962B8();
                  if (v60 >= v55) {
                    uint64_t v61 = v55;
                  }
                  else {
                    uint64_t v61 = v60;
                  }
                  if (v61 >= BYTE6(v9)) {
                    size_t v62 = BYTE6(v9);
                  }
                  else {
                    size_t v62 = v61;
                  }
                  int v63 = memcmp(__s1, (const void *)(v57 + v59), v62);
                  sub_1C3F7E2CC(v92, v45);
                  uint64_t result = sub_1C3F7E2CC(v10, v9);
                  if (v63 < 0)
                  {
LABEL_64:
                    uint64_t v5 = v100;
                    uint64_t v14 = v44;
                    uint64_t v6 = v94;
                    uint64_t v11 = v103;
                  }
                  else
                  {
                    uint64_t v5 = v100;
                    uint64_t v53 = v94;
                    if (v63) {
                      goto LABEL_106;
                    }
                    uint64_t v11 = v103;
                    if (__OFSUB__(HIDWORD(v92), v92)) {
                      goto LABEL_123;
                    }
                    uint64_t v14 = v7 - 2;
                    uint64_t v6 = v94;
                    if (BYTE6(v9) >= (uint64_t)(HIDWORD(v92) - (int)v92)) {
                      goto LABEL_5;
                    }
                  }
LABEL_101:
                  if (!v102) {
                    goto LABEL_124;
                  }
                  uint64_t v10 = *v7;
                  unint64_t v9 = v7[1];
                  *(_OWORD *)uint64_t v7 = *(_OWORD *)v14;
                  *(v7 - 1) = v9;
                  *(v7 - 2) = v10;
                  v7 -= 2;
                  if (v6 == ++v11) {
                    goto LABEL_5;
                  }
                  continue;
                }
LABEL_104:
                sub_1C44962B8();
                uint64_t v5 = v100;
                uint64_t v12 = v92;
                uint64_t v6 = v94;
                unint64_t v13 = v45;
LABEL_105:
                uint64_t v53 = v6;
                sub_1C3F7E2CC(v12, v13);
                uint64_t result = sub_1C3F7E2CC(v10, v9);
LABEL_106:
                uint64_t v6 = v53;
LABEL_5:
                ++v6;
                uint64_t v7 = v89 + 2;
                if (v6 == a2) {
                  return result;
                }
                break;
              case 2uLL:
                char v96 = v7 - 2;
                unint64_t v101 = v13;
                uint64_t v75 = v12;
                uint64_t v76 = *(void *)(v12 + 16);
                uint64_t v90 = *(void *)(v12 + 24);
                sub_1C3F7E324(v12, v13);
                uint64_t v93 = v75;
                swift_retain();
                swift_retain();
                size_t v77 = (char *)sub_1C4496298();
                if (!v77) {
                  goto LABEL_81;
                }
                uint64_t v78 = sub_1C44962C8();
                if (__OFSUB__(v76, v78)) {
                  goto LABEL_119;
                }
                v77 += v76 - v78;
LABEL_81:
                BOOL v25 = __OFSUB__(v90, v76);
                uint64_t v79 = v90 - v76;
                if (v25) {
                  goto LABEL_114;
                }
                uint64_t v80 = sub_1C44962B8();
                if (!v77) {
                  goto LABEL_4;
                }
                if (v80 >= v79) {
                  uint64_t v81 = v79;
                }
                else {
                  uint64_t v81 = v80;
                }
                if (v81 >= BYTE6(v9)) {
                  size_t v82 = BYTE6(v9);
                }
                else {
                  size_t v82 = v81;
                }
                int v83 = memcmp(__s1, v77, v82);
                if (v83 < 0)
                {
LABEL_90:
                  swift_release();
                  swift_release();
                  sub_1C3F7E2CC(v93, v101);
                  uint64_t result = sub_1C3F7E2CC(v10, v9);
                  uint64_t v14 = v96;
                }
                else
                {
                  if (v83)
                  {
LABEL_4:
                    swift_release();
                    swift_release();
                    sub_1C3F7E2CC(v93, v101);
                    uint64_t result = sub_1C3F7E2CC(v10, v9);
                    goto LABEL_5;
                  }
                  uint64_t v85 = *(void *)(v75 + 16);
                  uint64_t v84 = *(void *)(v75 + 24);
                  swift_release();
                  swift_release();
                  sub_1C3F7E2CC(v75, v101);
                  BOOL v25 = __OFSUB__(v84, v85);
                  uint64_t v86 = v84 - v85;
                  if (v25) {
                    goto LABEL_120;
                  }
                  uint64_t result = sub_1C3F7E2CC(v10, v9);
                  uint64_t v14 = v7 - 2;
                  if (BYTE6(v9) >= v86) {
                    goto LABEL_5;
                  }
                }
                goto LABEL_101;
              case 3uLL:
                goto LABEL_105;
              default:
                uint64_t v97 = v5;
                uint64_t __s2 = v12;
                __int16 v105 = v13;
                char v106 = BYTE2(v13);
                char v107 = BYTE3(v13);
                uint64_t v15 = v12;
                unint64_t v16 = BYTE6(v13);
                char v108 = BYTE4(v13);
                if (BYTE6(v13) >= (unint64_t)BYTE6(v9)) {
                  size_t v17 = BYTE6(v9);
                }
                else {
                  size_t v17 = BYTE6(v13);
                }
                char v109 = BYTE5(v13);
                unint64_t v18 = v13;
                int v19 = memcmp(__s1, &__s2, v17);
                sub_1C3F7E2CC(v15, v18);
                uint64_t result = sub_1C3F7E2CC(v10, v9);
                if (v19 < 0)
                {
                  uint64_t v11 = v103;
                  uint64_t v5 = v97;
                }
                else
                {
                  if (v19)
                  {
                    uint64_t v5 = v97;
                    goto LABEL_5;
                  }
                  uint64_t v11 = v103;
                  uint64_t v5 = v97;
                  if (BYTE6(v9) >= v16) {
                    goto LABEL_5;
                  }
                }
                goto LABEL_101;
            }
            break;
        }
        break;
      }
    }
  }
  return result;
}

uint64_t sub_1C407A500(uint64_t *a1, uint64_t *__src, uint64_t *a3, char *__dst)
{
  uint64_t v5 = __dst;
  uint64_t v6 = a3;
  uint64_t v7 = __src;
  v85[1] = *(void **)MEMORY[0x1E4F143B8];
  int64_t v8 = (char *)__src - (char *)a1;
  uint64_t v9 = (char *)__src - (char *)a1 + 15;
  if ((char *)__src - (char *)a1 >= 0) {
    uint64_t v9 = (char *)__src - (char *)a1;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = (char *)a3 - (char *)__src;
  uint64_t v12 = (char *)a3 - (char *)__src + 15;
  if ((char *)a3 - (char *)__src >= 0) {
    uint64_t v12 = (char *)a3 - (char *)__src;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v84 = __dst;
  v85[0] = a1;
  if (v10 >= v12 >> 4)
  {
    if (v11 < -15) {
      goto LABEL_121;
    }
    if (__dst != (char *)__src || &__src[2 * v13] <= (uint64_t *)__dst) {
      memmove(__dst, __src, 16 * v13);
    }
    uint64_t v41 = &v5[16 * v13];
    int v83 = v41;
    v85[0] = v7;
    uint64_t v42 = a1;
    if (a1 < v7 && v11 >= 16)
    {
      uint64_t v43 = v7;
      uint64_t v44 = v4;
      uint64_t v76 = v5;
      while (1)
      {
        uint64_t v80 = v6;
        uint64_t v17 = *((void *)v41 - 2);
        uint64_t v18 = *((void *)v41 - 1);
        unint64_t v16 = v41 - 16;
        int v19 = (char *)*(v43 - 2);
        int64_t v8 = *(v43 - 1);
        v43 -= 2;
        unint64_t v74 = (unint64_t)v41;
        switch((unint64_t)v18 >> 62)
        {
          case 1uLL:
            uint64_t v67 = v41 - 16;
            unint64_t v16 = v19;
            if (v17 >> 32 < (int)v17) {
              goto LABEL_107;
            }
            uint64_t v72 = v44;
            sub_1C3F7E324((uint64_t)v19, v8);
            sub_1C3F7E324(v17, v18);
            uint64_t v51 = (char *)sub_1C4496298();
            if (v51)
            {
              uint64_t v52 = sub_1C44962C8();
              if (__OFSUB__((int)v17, v52)) {
                goto LABEL_113;
              }
              int v19 = (char *)v7;
              v51 += (int)v17 - v52;
            }
            else
            {
              int v19 = (char *)v7;
            }
            uint64_t v58 = sub_1C44962B8();
            if (v58 >= (v17 >> 32) - (int)v17) {
              uint64_t v59 = (v17 >> 32) - (int)v17;
            }
            else {
              uint64_t v59 = v58;
            }
            uint64_t v60 = &v51[v59];
            if (v51) {
              uint64_t v61 = (uint64_t)v60;
            }
            else {
              uint64_t v61 = 0;
            }
            sub_1C3FF5D74(v51, v61, (uint64_t)v16, v8, v17, v18, __s1);
            if (v72)
            {
LABEL_115:
              uint64_t v63 = (uint64_t)v16;
LABEL_118:
              sub_1C3F7E2CC(v63, v8);
              sub_1C3F7E2CC(v17, v18);
              __break(1u);
LABEL_119:
              sub_1C3F7E2CC((uint64_t)v16, (unint64_t)v19);
              sub_1C3F7E2CC(v17, v18);
LABEL_120:
              swift_release();
              swift_release();
              __break(1u);
LABEL_121:
              sub_1C4497FE8();
              __break(1u);
              JUMPOUT(0x1C407AE78);
            }
            uint64_t v44 = 0;
            sub_1C3F7E2CC((uint64_t)v16, v8);
            sub_1C3F7E2CC(v17, v18);
            unint64_t v45 = v80;
            uint64_t v6 = v80 - 2;
            uint64_t v5 = v76;
            unint64_t v16 = v67;
            uint64_t v42 = a1;
            uint64_t v7 = (uint64_t *)v19;
            if (__s1[0])
            {
LABEL_77:
              if (v45 != v7 || v6 >= v7) {
                *(_OWORD *)uint64_t v6 = *(_OWORD *)v43;
              }
              v85[0] = v43;
              uint64_t v41 = (char *)v74;
              if (v43 <= v42) {
                goto LABEL_105;
              }
            }
            else
            {
LABEL_66:
              int v83 = v16;
              if ((unint64_t)v45 < v74 || (unint64_t)v6 >= v74 || v45 != (uint64_t *)v74) {
                *(_OWORD *)uint64_t v6 = *(_OWORD *)v16;
              }
              uint64_t v43 = v7;
              uint64_t v41 = v16;
              if (v7 <= v42) {
                goto LABEL_105;
              }
            }
            uint64_t v7 = v43;
            if (v41 <= v5) {
              goto LABEL_105;
            }
            break;
          case 2uLL:
            uint64_t v70 = v44;
            uint64_t v46 = *(void *)(v17 + 16);
            uint64_t v64 = *(void *)(v17 + 24);
            sub_1C3F7E324((uint64_t)v19, v8);
            sub_1C3F7E324(v17, v18);
            swift_retain();
            swift_retain();
            uint64_t v47 = (char *)sub_1C4496298();
            uint64_t v66 = v16;
            if (v47)
            {
              uint64_t v48 = sub_1C44962C8();
              if (__OFSUB__(v46, v48)) {
                goto LABEL_111;
              }
              unint64_t v16 = v19;
              v47 += v46 - v48;
            }
            else
            {
              unint64_t v16 = v19;
            }
            if (__OFSUB__(v64, v46)) {
              goto LABEL_109;
            }
            uint64_t v53 = sub_1C44962B8();
            if (v53 >= v64 - v46) {
              uint64_t v54 = v64 - v46;
            }
            else {
              uint64_t v54 = v53;
            }
            uint64_t v55 = &v47[v54];
            if (v47) {
              uint64_t v56 = (uint64_t)v55;
            }
            else {
              uint64_t v56 = 0;
            }
            int v19 = (char *)v8;
            sub_1C3FF5D74(v47, v56, (uint64_t)v16, v8, v17, v18, __s1);
            if (v70) {
              goto LABEL_119;
            }
            uint64_t v44 = 0;
            swift_release();
            swift_release();
            sub_1C3F7E2CC((uint64_t)v16, v8);
            char v57 = __s1[0];
            sub_1C3F7E2CC(v17, v18);
            uint64_t v42 = a1;
            unint64_t v45 = v80;
            uint64_t v6 = v80 - 2;
            uint64_t v5 = v76;
            unint64_t v16 = v66;
            if (v57) {
              goto LABEL_77;
            }
            goto LABEL_66;
          case 3uLL:
            int v71 = v43;
            uint64_t v49 = v7;
            uint64_t v50 = v42;
            memset(__s1, 0, 14);
            sub_1C3F7E324((uint64_t)v19, v8);
            sub_1C3FF5D74(__s1, (uint64_t)__s1, (uint64_t)v19, v8, v17, v18, &v81);
            if (v44)
            {
              uint64_t v63 = (uint64_t)v19;
              goto LABEL_118;
            }
            uint64_t v44 = 0;
            sub_1C3F7E2CC((uint64_t)v19, v8);
            sub_1C3F7E2CC(v17, v18);
            unint64_t v45 = v80;
            uint64_t v6 = v80 - 2;
            uint64_t v42 = v50;
            uint64_t v7 = v49;
            uint64_t v43 = v71;
            if (v81) {
              goto LABEL_77;
            }
            goto LABEL_66;
          default:
            uint64_t v65 = v41 - 16;
            __s1[0] = *((void *)v41 - 2);
            LOWORD(__s1[1]) = v18;
            BYTE2(__s1[1]) = BYTE2(v18);
            BYTE3(__s1[1]) = BYTE3(v18);
            BYTE4(__s1[1]) = BYTE4(v18);
            BYTE5(__s1[1]) = BYTE5(v18);
            unint64_t v16 = v19;
            int v19 = (char *)__s1 + BYTE6(v18);
            sub_1C3F7E324((uint64_t)v16, v8);
            sub_1C3FF5D74(__s1, (uint64_t)v19, (uint64_t)v16, v8, v17, v18, &v81);
            if (v44) {
              goto LABEL_115;
            }
            uint64_t v44 = 0;
            sub_1C3F7E2CC((uint64_t)v16, v8);
            sub_1C3F7E2CC(v17, v18);
            uint64_t v42 = a1;
            unint64_t v45 = v80;
            uint64_t v6 = v80 - 2;
            unint64_t v16 = v65;
            if ((v81 & 1) == 0) {
              goto LABEL_66;
            }
            goto LABEL_77;
        }
      }
    }
  }
  else
  {
    if (v8 < -15) {
      goto LABEL_121;
    }
    uint64_t v14 = a1;
    uint64_t v15 = v4;
    if (__dst != (char *)a1 || &a1[2 * v10] <= (uint64_t *)__dst) {
      memmove(__dst, a1, 16 * v10);
    }
    unint64_t v16 = &v5[16 * v10];
    int v83 = v16;
    if (v7 < v6 && v8 >= 16)
    {
      uint64_t v73 = v16;
      uint64_t v79 = v6;
      while (1)
      {
        uint64_t v75 = (uint64_t *)v5;
        __srcb = v14;
        uint64_t v18 = *v7;
        uint64_t v17 = v7[1];
        int v19 = *(char **)v5;
        unint64_t v20 = *((void *)v5 + 1);
        switch((unint64_t)v17 >> 62)
        {
          case 1uLL:
            unint64_t v16 = (char *)((v18 >> 32) - (int)v18);
            if (v18 >> 32 < (int)v18)
            {
              __break(1u);
LABEL_107:
              __break(1u);
LABEL_108:
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              __break(1u);
LABEL_111:
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
            }
            uint64_t v69 = v15;
            int64_t v8 = v17 & 0x3FFFFFFFFFFFFFFFLL;
            sub_1C3F7E324((uint64_t)v19, v20);
            sub_1C3F7E324(v18, v17);
            unint64_t v35 = (char *)sub_1C4496298();
            if (v35)
            {
              uint64_t v36 = sub_1C44962C8();
              if (__OFSUB__((int)v18, v36)) {
                goto LABEL_112;
              }
              v35 += (int)v18 - v36;
            }
            uint64_t v37 = sub_1C44962B8();
            if (v37 >= (uint64_t)v16) {
              uint64_t v38 = (v18 >> 32) - (int)v18;
            }
            else {
              uint64_t v38 = v37;
            }
            uint64_t v39 = &v35[v38];
            if (v35) {
              uint64_t v40 = (uint64_t)v39;
            }
            else {
              uint64_t v40 = 0;
            }
            sub_1C3FF5D74(v35, v40, (uint64_t)v19, v20, v18, v17, __s1);
            if (v69)
            {
LABEL_114:
              sub_1C3F7E2CC((uint64_t)v19, v20);
              sub_1C3F7E2CC(v18, v17);
              __break(1u);
              goto LABEL_115;
            }
            uint64_t v15 = 0;
            sub_1C3F7E2CC((uint64_t)v19, v20);
            sub_1C3F7E2CC(v18, v17);
            unint64_t v16 = v73;
            if (__s1[0])
            {
LABEL_33:
              char v34 = v7 + 2;
              uint64_t v5 = (char *)v75;
              uint64_t v32 = __srcb;
              unint64_t v33 = v79;
              if (__srcb < v7 || __srcb >= v34 || __srcb != v7) {
                *(_OWORD *)__srcb = *(_OWORD *)v7;
              }
            }
            else
            {
LABEL_27:
              uint64_t v32 = __srcb;
              unint64_t v33 = v79;
              if (__srcb != v75) {
                *(_OWORD *)__srcb = *(_OWORD *)v75;
              }
              uint64_t v5 = (char *)(v75 + 2);
              uint64_t v84 = (char *)(v75 + 2);
              char v34 = v7;
            }
            uint64_t v14 = v32 + 2;
            v85[0] = v14;
            if (v5 >= v16) {
              goto LABEL_105;
            }
            uint64_t v7 = v34;
            if (v34 >= v33) {
              goto LABEL_105;
            }
            break;
          case 2uLL:
            uint64_t v68 = v15;
            uint64_t v22 = *(void *)(v18 + 16);
            uint64_t v23 = *(void *)(v18 + 24);
            sub_1C3F7E324((uint64_t)v19, v20);
            sub_1C3F7E324(v18, v17);
            swift_retain();
            swift_retain();
            uint64_t v24 = (char *)sub_1C4496298();
            if (!v24) {
              goto LABEL_18;
            }
            uint64_t v25 = sub_1C44962C8();
            if (__OFSUB__(v22, v25)) {
              goto LABEL_110;
            }
            v24 += v22 - v25;
LABEL_18:
            BOOL v26 = __OFSUB__(v23, v22);
            uint64_t v27 = v23 - v22;
            if (v26) {
              goto LABEL_108;
            }
            uint64_t v28 = sub_1C44962B8();
            if (v28 >= v27) {
              uint64_t v29 = v27;
            }
            else {
              uint64_t v29 = v28;
            }
            uint64_t v30 = &v24[v29];
            if (v24) {
              uint64_t v31 = (uint64_t)v30;
            }
            else {
              uint64_t v31 = 0;
            }
            sub_1C3FF5D74(v24, v31, (uint64_t)v19, v20, v18, v17, __s1);
            if (v68)
            {
              sub_1C3F7E2CC((uint64_t)v19, v20);
              sub_1C3F7E2CC(v18, v17);
              goto LABEL_120;
            }
            uint64_t v15 = 0;
            swift_release();
            swift_release();
            sub_1C3F7E2CC((uint64_t)v19, v20);
            int64_t v8 = LOBYTE(__s1[0]);
            sub_1C3F7E2CC(v18, v17);
            unint64_t v16 = v73;
            if ((v8 & 1) == 0) {
              goto LABEL_27;
            }
            goto LABEL_33;
          case 3uLL:
            memset(__s1, 0, 14);
            sub_1C3F7E324((uint64_t)v19, v20);
            unint64_t v21 = __s1;
            goto LABEL_31;
          default:
            __s1[0] = *v7;
            LOWORD(__s1[1]) = v17;
            BYTE2(__s1[1]) = BYTE2(v17);
            BYTE3(__s1[1]) = BYTE3(v17);
            BYTE4(__s1[1]) = BYTE4(v17);
            BYTE5(__s1[1]) = BYTE5(v17);
            int64_t v8 = (int64_t)__s1 + BYTE6(v17);
            sub_1C3F7E324((uint64_t)v19, v20);
            unint64_t v21 = (void *)v8;
LABEL_31:
            sub_1C3FF5D74(__s1, (uint64_t)v21, (uint64_t)v19, v20, v18, v17, &v81);
            if (v15) {
              goto LABEL_114;
            }
            uint64_t v15 = 0;
            sub_1C3F7E2CC((uint64_t)v19, v20);
            sub_1C3F7E2CC(v18, v17);
            if (v81) {
              goto LABEL_33;
            }
            goto LABEL_27;
        }
      }
    }
  }
LABEL_105:
  sub_1C411E664(v85, (const void **)&v84, &v83);
  return 1;
}

uint64_t sub_1C407AEC8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1C44985F8();
  swift_bridgeObjectRetain();
  sub_1C4497248();
  uint64_t v6 = sub_1C4498628();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1C44982E8() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      unint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1C44982E8() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1C4076208();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_1C407B058(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_1C407B058(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C4497C08();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1C44985F8();
        swift_bridgeObjectRetain();
        sub_1C4497248();
        uint64_t v10 = sub_1C4498628();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            *uint64_t v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1C407B220(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v33);
  uint64_t v37 = (uint64_t)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  if (!v6) {
    return v7;
  }
  uint64_t v29 = v2;
  uint64_t v38 = MEMORY[0x1E4FBC860];
  sub_1C4012848(0, v6, 0);
  uint64_t v7 = v38;
  uint64_t v8 = sub_1C42337F4(a1);
  uint64_t v10 = v9;
  int v12 = v11 & 1;
  uint64_t v32 = a1 + 56;
  uint64_t v31 = a2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  uint64_t v30 = a1;
  while ((v8 & 0x8000000000000000) == 0 && v8 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(v32 + (((unint64_t)v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_16;
    }
    if (*(_DWORD *)(a1 + 36) != v10) {
      goto LABEL_17;
    }
    int v34 = v12;
    uint64_t v35 = v10;
    int64_t v36 = v6;
    uint64_t v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v8);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v16 = v37;
    sub_1C3F8F450(v31, v37, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    uint64_t v17 = *(void *)(v16 + *(int *)(v33 + 20));
    uint64_t v18 = *(void *)(v17 + 16);
    sub_1C3F7E324(v14, v15);
    sub_1C3F7E324(v14, v15);
    if (!v18) {
      goto LABEL_18;
    }
    uint64_t v19 = sub_1C3F850CC(v14, v15);
    if ((v20 & 1) == 0) {
      goto LABEL_18;
    }
    uint64_t v21 = *(void *)(*(void *)(v17 + 56) + 48 * v19);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3F8F5D4(v37, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v21) {
      goto LABEL_19;
    }
    sub_1C3F7E2CC(v14, v15);
    uint64_t v38 = v7;
    unint64_t v24 = *(void *)(v7 + 16);
    unint64_t v23 = *(void *)(v7 + 24);
    if (v24 >= v23 >> 1)
    {
      sub_1C4012848(v23 > 1, v24 + 1, 1);
      uint64_t v7 = v38;
    }
    *(void *)(v7 + 16) = v24 + 1;
    uint64_t v25 = (void *)(v7 + 24 * v24);
    v25[4] = v14;
    v25[5] = v15;
    v25[6] = v21;
    a1 = v30;
    uint64_t v26 = sub_1C4233898(v8, v35, v34 & 1, v30);
    uint64_t v8 = v26;
    uint64_t v10 = v27;
    int v12 = v28 & 1;
    int64_t v6 = v36 - 1;
    if (v36 == 1)
    {
      sub_1C3F882B0(v26, v27, v28 & 1);
      return v7;
    }
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  uint64_t result = sub_1C3F8F5D4(v37, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_1C407B53C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v4);
  int64_t v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(qword_1EBBBA2B8);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = MEMORY[0x1E4FBC870];
  v30[1] = v7 + 16;
  uint64_t v32 = v7;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v36 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  uint64_t v12 = a2 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v39 = v12;
  uint64_t result = swift_beginAccess();
  int64_t v14 = 0;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v34 = v4;
  uint64_t v35 = a1;
  uint64_t v33 = v6;
  if (v11) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v17 = v14 + 1;
  if (!__OFADD__(v14, 1))
  {
    if (v17 < v37)
    {
      unint64_t v18 = *(void *)(v36 + 8 * v17);
      ++v14;
      if (v18) {
        goto LABEL_22;
      }
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v37) {
        goto LABEL_29;
      }
      unint64_t v18 = *(void *)(v36 + 8 * v14);
      if (v18) {
        goto LABEL_22;
      }
      int64_t v14 = v17 + 2;
      if (v17 + 2 >= v37) {
        goto LABEL_29;
      }
      unint64_t v18 = *(void *)(v36 + 8 * v14);
      if (v18) {
        goto LABEL_22;
      }
      int64_t v14 = v17 + 3;
      if (v17 + 3 >= v37) {
        goto LABEL_29;
      }
      unint64_t v18 = *(void *)(v36 + 8 * v14);
      if (v18)
      {
LABEL_22:
        unint64_t v11 = (v18 - 1) & v18;
        for (unint64_t i = __clz(__rbit64(v18)) + (v14 << 6); ; unint64_t i = v15 | (v14 << 6))
        {
          char v20 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
          uint64_t v22 = *v20;
          unint64_t v21 = v20[1];
          sub_1C3F8F450(v39, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
          uint64_t v23 = *(void *)&v6[*(int *)(v4 + 20)];
          uint64_t v24 = *(void *)(v23 + 16);
          sub_1C3F7E324(v22, v21);
          if (v24 && (uint64_t v25 = sub_1C3F850CC(v22, v21), (v26 & 1) != 0))
          {
            uint64_t v27 = *(void *)(*(void *)(v23 + 56) + 48 * v25);
            swift_retain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_1C3F8F5D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v27)
            {
              uint64_t v38[3] = v31;
              v38[4] = &off_1F1F9B798;
              v38[0] = v32;
              char v28 = *(void (**)(void *))(*(void *)v27 + 120);
              swift_retain();
              v28(v38);
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
              swift_release();
            }
            uint64_t result = sub_1C3F7E2CC(v22, v21);
            uint64_t v4 = v34;
            a1 = v35;
            int64_t v6 = v33;
            if (!v11) {
              goto LABEL_7;
            }
          }
          else
          {
            sub_1C3F8F5D4((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
            uint64_t result = sub_1C3F7E2CC(v22, v21);
            if (!v11) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v15 = __clz(__rbit64(v11));
          v11 &= v11 - 1;
        }
      }
      int64_t v19 = v17 + 4;
      if (v19 < v37)
      {
        unint64_t v18 = *(void *)(v36 + 8 * v19);
        if (v18)
        {
          int64_t v14 = v19;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v14 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_31;
          }
          if (v14 >= v37) {
            break;
          }
          unint64_t v18 = *(void *)(v36 + 8 * v14);
          ++v19;
          if (v18) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_29:
    swift_release();
    swift_beginAccess();
    uint64_t v29 = *(void *)(v32 + 16);
    swift_bridgeObjectRetain();
    swift_release();
    return v29;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

void (*sub_1C407B938(uint64_t *a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4, uint64_t a5, uint64_t a6))(void *, void)
{
  uint64_t v69 = a4;
  uint64_t v70 = a3;
  uint64_t v66 = a2;
  uint64_t v9 = sub_1C4497B38();
  uint64_t v64 = *(void *)(v9 - 8);
  uint64_t v65 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v68 = (char *)&v61 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0FA0);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C4496678();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  int64_t v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = a1[1];
  uint64_t v63 = *a1;
  uint64_t v67 = a5;
  uint64_t v62 = a6;
  sub_1C3F75BA4((uint64_t)v17);
  type metadata accessor for ReplicaState();
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v19 + OBJC_IVAR____TtC9Coherence12ReplicaState__replica;
  uint64_t v21 = type metadata accessor for Replica();
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v20, 1, 1, v21);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v19 + OBJC_IVAR____TtC9Coherence12ReplicaState_identity, v17, v14);
  *(void *)(v19 + OBJC_IVAR____TtC9Coherence12ReplicaState_localCounter) = 0;
  *(void *)(v19 + OBJC_IVAR____TtC9Coherence12ReplicaState_localAlternateCounter) = 0;
  v22((uint64_t)v13, 1, 1, v21);
  swift_beginAccess();
  sub_1C3F6722C((uint64_t)v13, v20);
  swift_endAccess();
  uint64_t v23 = sub_1C3F74BE8(v19);
  uint64_t v24 = swift_retain();
  v70(v24);
  if (v18 >> 60 != 15)
  {
    swift_beginAccess();
    uint64_t v57 = v63;
    uint64_t v73 = v63;
    unint64_t v74 = v18;
    sub_1C3F7E324(v63, v18);
    uint64_t result = (void (*)(void *, void))sub_1C3F84D7C(v76, &v73);
    if (*(void *)(v58 + 16))
    {
      uint64_t v59 = *(void *)(v58 + 8);
      BOOL v55 = __OFADD__(v59, 1);
      uint64_t v60 = v59 + 1;
      if (v55)
      {
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      *(void *)(v58 + 8) = v60;
      result(v76, 0);
      swift_endAccess();
      sub_1C3F7E2CC(v73, v74);
    }
    else
    {
      result(v76, 0);
      sub_1C3F7E2CC(v73, v74);
      swift_endAccess();
    }
    swift_beginAccess();
    sub_1C3F7E324(v57, v18);
    sub_1C3F81BF8(v75, v57, v18);
    swift_endAccess();
    sub_1C3F6C6F0(v57, v18);
    sub_1C3F7E2CC(v75[0], v75[1]);
LABEL_33:
    sub_1C3F7D128(1, 1);
    swift_release();
    return (void (*)(void *, void))v23;
  }
  uint64_t v25 = type metadata accessor for RetainVisitor();
  uint64_t v26 = swift_allocObject();
  uint64_t v27 = MEMORY[0x1E4FBC860];
  unint64_t v28 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
  unint64_t v29 = sub_1C3F7E37C(v27);
  *(void *)(v26 + 16) = v28;
  *(void *)(v26 + 24) = v29;
  uint64_t v30 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v68, v66, v65);
  uint64_t v31 = v67;
  uint64_t v32 = *(void *)(v67 - 8);
  uint64_t result = (void (*)(void *, void))(*(uint64_t (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v67);
  if (result != 1)
  {
    v76[3] = v25;
    v76[4] = &off_1F1F982A0;
    v76[0] = v26;
    uint64_t v34 = v62;
    uint64_t v35 = *(void (**)(void *, uint64_t, uint64_t))(v62 + 48);
    swift_retain();
    uint64_t v36 = v68;
    v35(v76, v31, v34);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v31);
    swift_beginAccess();
    uint64_t v69 = v26;
    uint64_t v37 = *(void *)(v26 + 16);
    uint64_t v38 = v37 + 64;
    uint64_t v39 = 1 << *(unsigned char *)(v37 + 32);
    uint64_t v40 = -1;
    if (v39 < 64) {
      uint64_t v40 = ~(-1 << v39);
    }
    unint64_t v41 = v40 & *(void *)(v37 + 64);
    uint64_t v70 = (void (*)(uint64_t))v23;
    int64_t v42 = (unint64_t)(v39 + 63) >> 6;
    uint64_t result = (void (*)(void *, void))swift_bridgeObjectRetain();
    int64_t v43 = 0;
    if (v41) {
      goto LABEL_22;
    }
LABEL_8:
    int64_t v44 = v43 + 1;
    if (__OFADD__(v43, 1))
    {
LABEL_35:
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v44 >= v42) {
      goto LABEL_30;
    }
    unint64_t v45 = *(void *)(v38 + 8 * v44);
    ++v43;
    if (!v45)
    {
      int64_t v43 = v44 + 1;
      if (v44 + 1 >= v42) {
        goto LABEL_30;
      }
      unint64_t v45 = *(void *)(v38 + 8 * v43);
      if (v45) {
        goto LABEL_21;
      }
      int64_t v43 = v44 + 2;
      if (v44 + 2 >= v42)
      {
LABEL_30:
        swift_release();
        swift_release();
        uint64_t v23 = (uint64_t)v70;
        goto LABEL_33;
      }
      unint64_t v45 = *(void *)(v38 + 8 * v43);
      if (!v45)
      {
        int64_t v46 = v44 + 3;
        if (v46 < v42)
        {
          unint64_t v45 = *(void *)(v38 + 8 * v46);
          if (v45)
          {
            int64_t v43 = v46;
            goto LABEL_21;
          }
          while (1)
          {
            int64_t v43 = v46 + 1;
            if (__OFADD__(v46, 1)) {
              goto LABEL_36;
            }
            if (v43 >= v42) {
              goto LABEL_30;
            }
            unint64_t v45 = *(void *)(v38 + 8 * v43);
            ++v46;
            if (v45) {
              goto LABEL_21;
            }
          }
        }
        goto LABEL_30;
      }
    }
LABEL_21:
    unint64_t v41 = (v45 - 1) & v45;
    for (unint64_t i = __clz(__rbit64(v45)) + (v43 << 6); ; unint64_t i = v48 | (v43 << 6))
    {
      uint64_t v49 = (uint64_t *)(*(void *)(v37 + 48) + 16 * i);
      uint64_t v51 = *v49;
      unint64_t v50 = v49[1];
      uint64_t v52 = *(void *)(*(void *)(v37 + 56) + 8 * i);
      swift_beginAccess();
      uint64_t v71 = v51;
      unint64_t v72 = v50;
      sub_1C3F7E324(v51, v50);
      sub_1C3F7E324(v51, v50);
      uint64_t result = (void (*)(void *, void))sub_1C3F84D7C(v76, &v71);
      if (*(void *)(v53 + 16))
      {
        uint64_t v54 = *(void *)(v53 + 8);
        BOOL v55 = __OFADD__(v54, v52);
        uint64_t v56 = v54 + v52;
        if (v55)
        {
          __break(1u);
          goto LABEL_35;
        }
        *(void *)(v53 + 8) = v56;
        result(v76, 0);
        swift_endAccess();
        sub_1C3F7E2CC(v51, v50);
        uint64_t result = (void (*)(void *, void))sub_1C3F7E2CC(v71, v72);
        if (!v41) {
          goto LABEL_8;
        }
      }
      else
      {
        result(v76, 0);
        sub_1C3F7E2CC(v71, v72);
        swift_endAccess();
        uint64_t result = (void (*)(void *, void))sub_1C3F7E2CC(v51, v50);
        if (!v41) {
          goto LABEL_8;
        }
      }
LABEL_22:
      unint64_t v48 = __clz(__rbit64(v41));
      v41 &= v41 - 1;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C407C078(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = a2;
  uint64_t v34 = a1;
  uint64_t v39 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v39);
  uint64_t v42 = (uint64_t)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a3;
  uint64_t v7 = *(void *)(a3 + 56);
  uint64_t v36 = a3 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  uint64_t v38 = a4 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  uint64_t result = swift_beginAccess();
  uint64_t v35 = 0;
  int64_t v12 = 0;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  if (v10) {
    goto LABEL_8;
  }
LABEL_9:
  int64_t v16 = v12 + 1;
  if (!__OFADD__(v12, 1))
  {
    if (v16 < v37)
    {
      unint64_t v17 = *(void *)(v36 + 8 * v16);
      ++v12;
      if (v17) {
        goto LABEL_22;
      }
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v37) {
        goto LABEL_27;
      }
      unint64_t v17 = *(void *)(v36 + 8 * v12);
      if (v17) {
        goto LABEL_22;
      }
      int64_t v12 = v16 + 2;
      if (v16 + 2 >= v37) {
        goto LABEL_27;
      }
      unint64_t v17 = *(void *)(v36 + 8 * v12);
      if (v17)
      {
LABEL_22:
        unint64_t v10 = (v17 - 1) & v17;
        for (unint64_t i = __clz(__rbit64(v17)) + (v12 << 6); ; unint64_t i = v14 | (v12 << 6))
        {
          uint64_t v19 = (uint64_t *)(*(void *)(v40 + 48) + 16 * i);
          uint64_t v20 = *v19;
          unint64_t v21 = v19[1];
          uint64_t v22 = v42;
          sub_1C3F8F450(v38, v42, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
          uint64_t v23 = *(void *)(v22 + *(int *)(v39 + 20));
          uint64_t v24 = *(void *)(v23 + 16);
          sub_1C3F7E324(v20, v21);
          if (v24)
          {
            sub_1C3F7E324(v20, v21);
            sub_1C3F7E324(v20, v21);
            uint64_t v25 = sub_1C3F850CC(v20, v21);
            if (v26)
            {
              uint64_t v27 = (uint64_t *)(*(void *)(v23 + 56) + 48 * v25);
              uint64_t v28 = *v27;
              uint64_t v29 = v27[1];
              uint64_t v30 = v27[2];
              unint64_t v41 = v10;
              swift_retain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_1C3F7E2CC(v20, v21);
              sub_1C3F7E2CC(v20, v21);
              sub_1C3F8F5D4(v42, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
              unint64_t v10 = v41;
              sub_1C3F84B88(v28, v29, v30);
              uint64_t result = sub_1C3F7E2CC(v20, v21);
              if (!v10) {
                goto LABEL_9;
              }
              goto LABEL_8;
            }
            sub_1C3F7E2CC(v20, v21);
            sub_1C3F7E2CC(v20, v21);
          }
          sub_1C3F8F5D4(v42, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
          sub_1C3F84B88(0, 0, 0);
          uint64_t result = sub_1C3F7E2CC(v20, v21);
          *(unint64_t *)((char *)v34 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
          if (__OFADD__(v35++, 1)) {
            goto LABEL_30;
          }
          if (!v10) {
            goto LABEL_9;
          }
LABEL_8:
          unint64_t v14 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
        }
      }
      int64_t v18 = v16 + 3;
      if (v18 < v37)
      {
        unint64_t v17 = *(void *)(v36 + 8 * v18);
        if (v17)
        {
          int64_t v12 = v18;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v12 = v18 + 1;
          if (__OFADD__(v18, 1)) {
            goto LABEL_29;
          }
          if (v12 >= v37) {
            break;
          }
          unint64_t v17 = *(void *)(v36 + 8 * v12);
          ++v18;
          if (v17) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_27:
    uint64_t v31 = v40;
    swift_retain();
    return sub_1C43D298C(v34, v33, v35, v31);
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C407C444(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v14[1] = *MEMORY[0x1E4F143B8];
  char v6 = *(unsigned char *)(a1 + 32);
  unsigned int v7 = v6 & 0x3F;
  unint64_t v8 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v9 = 8 * v8;
  uint64_t isStackAllocationSafe = swift_retain_n();
  if (v7 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    swift_retain();
    uint64_t v11 = sub_1C407C078((void *)((char *)v14 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0)), v8, a1, a2);
    swift_release();
    swift_release();
    if (v3) {
      swift_willThrow();
    }
    swift_release_n();
  }
  else
  {
    int64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v9);
    swift_retain();
    uint64_t v11 = sub_1C407C078((unint64_t *)v12, v8, a1, a2);
    swift_release();
    swift_release();
    MEMORY[0x1C8782060](v12, -1, -1);
    swift_release_n();
  }
  return v11;
}

uint64_t sub_1C407C610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v7 = *(uint64_t **)v6;
  unint64_t v8 = *(void *)(v6 + 8);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v5, v10);
  sub_1C3F6BC4C((uint64_t)v5, a3, &v23);
  uint64_t v11 = v23;
  uint64_t v23 = v7;
  unint64_t v24 = v8;
  uint64_t v12 = type metadata accessor for Ref();
  uint64_t WitnessTable = swift_getWitnessTable();
  Reference.identity.getter(v12, WitnessTable);
  uint64_t v14 = v28;
  unint64_t v15 = v29;
  swift_beginAccess();
  uint64_t v25 = v14;
  unint64_t v26 = v15;
  unint64_t v17 = sub_1C3F84D7C(&v23, &v25);
  if (!v16[2])
  {
    ((void (*)(uint64_t **, void))v17)(&v23, 0);
    sub_1C3F7E2CC(v25, v26);
    swift_endAccess();
LABEL_9:
    uint64_t v23 = v7;
    unint64_t v24 = v8;
    Reference.identity.getter(v12, WitnessTable);
    sub_1C3F7E2CC((uint64_t)v7, v8);
    uint64_t v20 = v28;
    unint64_t v21 = v29;
    swift_beginAccess();
    sub_1C3F81BF8(v27, v20, v21);
    swift_endAccess();
    swift_release();
    return sub_1C3F7E2CC(v27[0], v27[1]);
  }
  int64_t v18 = v16;
  uint64_t result = *v16;
  if (*v16)
  {
    if (v11 != (uint64_t *)result)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        *int64_t v18 = (*(uint64_t (**)(void))(*(void *)*v18 + 160))();
        swift_release();
      }
      (*(void (**)(uint64_t *))(*(void *)*v18 + 96))(v11);
    }
    ((void (*)(uint64_t **, void))v17)(&v23, 0);
    swift_endAccess();
    sub_1C3F7E2CC(v25, v26);
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C407C8E4(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v6 = *a2;
  swift_retain();
  sub_1C407C610(a1, (uint64_t)&v6, a3);
  return swift_release();
}

uint64_t sub_1C407C96C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1C4497B38();
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v15 - v9;
  uint64_t v12 = *a2;
  uint64_t v11 = a2[1];
  (*(void (**)(char *, uint64_t))(v13 + 16))((char *)v15 - v9, a1);
  v15[0] = v12;
  v15[1] = v11;
  swift_retain();
  sub_1C4055840((uint64_t)v10, (uint64_t)v15, a3, a4);
  return swift_release();
}

uint64_t sub_1C407CA8C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*v1 + 80);
  MEMORY[0x1F4188790](a1);
  uint64_t v5 = (char *)&v14[-1] - v4;
  unint64_t v6 = v1[3];
  if (v6 >> 60 != 15)
  {
    uint64_t v7 = v1[2];
    (*(void (**)(char *))(v3 + 16))(v5);
    sub_1C3F7E324(v7, v6);
    sub_1C3F6BC4C((uint64_t)v5, v2, v14);
    uint64_t v8 = v14[0];
    swift_beginAccess();
    uint64_t v15 = v7;
    unint64_t v16 = v6;
    sub_1C3F6C704(v7, v6);
    swift_retain();
    uint64_t v10 = sub_1C3F84D7C(v14, &v15);
    if (!v9[2])
    {
      ((void (*)(uint64_t **, void))v10)(v14, 0);
      sub_1C3F7E2CC(v15, v16);
      swift_endAccess();
      swift_release();
LABEL_10:
      swift_beginAccess();
      sub_1C3F6C704(v7, v6);
      swift_retain();
      sub_1C3F81BF8(v17, v7, v6);
      swift_endAccess();
      swift_release();
      swift_release();
      sub_1C3F6C6F0(v7, v6);
      return sub_1C3F7E2CC(v17[0], v17[1]);
    }
    uint64_t v11 = v9;
    if (*v9)
    {
      if (v8 != *v9)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          *uint64_t v11 = (uint64_t *)(*(uint64_t (**)(void))(**v11 + 160))();
          swift_release();
        }
        (*(void (**)(uint64_t *))(**v11 + 96))(v8);
      }
      ((void (*)(uint64_t **, void))v10)(v14, 0);
      swift_endAccess();
      swift_release();
      sub_1C3F7E2CC(v15, v16);
      goto LABEL_10;
    }
    __break(1u);
  }
  uint64_t result = sub_1C4497F58();
  __break(1u);
  return result;
}

uint64_t sub_1C407CDCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v35 = a2;
  uint64_t v38 = *(void *)(v4 + 80);
  uint64_t v37 = *(void *)(v38 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v36 = (char *)&v33 - v6;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v33 - v7;
  uint64_t v10 = *(void (**)(char *))(v9 + 16);
  uint64_t v33 = v8;
  v10(v8);
  unint64_t v11 = v2[3];
  if (v11 >> 60 == 15) {
    goto LABEL_17;
  }
  uint64_t v12 = v2[2];
  uint64_t v34 = *(void *)(*v2 + 112);
  uint64_t v13 = *(void *)((char *)v2 + v34) + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  swift_beginAccess();
  uint64_t v14 = *(int *)(type metadata accessor for PartiallyOrderedReferenceMap() + 20);
  sub_1C3F6C704(v12, v11);
  sub_1C3F6C704(v12, v11);
  sub_1C3F6C704(v12, v11);
  sub_1C3F6C704(v12, v11);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v42 = *(void *)(v13 + v14);
  uint64_t v16 = v42;
  *(void *)(v13 + v14) = 0x8000000000000000;
  sub_1C3F7E324(v12, v11);
  unint64_t v18 = sub_1C3F850CC(v12, v11);
  uint64_t v19 = *(void *)(v16 + 16);
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v3 = v17;
  if (*(void *)(v16 + 24) >= v21)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v17) {
        goto LABEL_9;
      }
      goto LABEL_15;
    }
LABEL_14:
    sub_1C3F85144();
    if (v3) {
      goto LABEL_9;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_1C3F77ABC(v21, isUniquelyReferenced_nonNull_native);
  uint64_t v22 = sub_1C3F850CC(v12, v11);
  if ((v3 & 1) != (v23 & 1))
  {
LABEL_18:
    uint64_t result = sub_1C4498558();
    __break(1u);
    return result;
  }
  unint64_t v18 = v22;
  if ((v3 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_9:
  unint64_t v24 = (long long *)(*(void *)(v42 + 56) + 48 * v18);
  long long v39 = *v24;
  long long v40 = v24[1];
  long long v41 = v24[2];
  uint64_t v25 = v39;
  if (!(void)v39)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    sub_1C4497F58();
    __break(1u);
    goto LABEL_18;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v26 = (*(uint64_t (**)(void))(*(void *)v25 + 160))();
    *(void *)&long long v39 = v26;
    swift_release();
    uint64_t v25 = v26;
  }
  swift_retain();
  sub_1C3F84C64((uint64_t *)&v39, 1, &v42, v18, v12, v11);
  sub_1C3F84B88(v39, *((uint64_t *)&v39 + 1), v40);
  sub_1C3F6C6F0(v12, v11);
  *(void *)(v13 + v14) = v42;
  sub_1C3F6C6F0(v12, v11);
  swift_endAccess();
  sub_1C3F6C6F0(v12, v11);
  swift_release();
  uint64_t v27 = sub_1C3F6C6F0(v12, v11);
  (*(void (**)(long long *__return_ptr, uint64_t))(*(void *)v25 + 240))(&v39, v27);
  uint64_t v28 = v36;
  uint64_t v29 = v38;
  swift_dynamicCast();
  swift_setAtWritableKeyPath();
  *((void *)&v40 + 1) = v29;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v39);
  uint64_t v31 = v37;
  (*(void (**)(uint64_t *, char *, uint64_t))(v37 + 16))(boxed_opaque_existential_1, v28, v29);
  (*(void (**)(long long *))(*(void *)v25 + 248))(&v39);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  swift_beginAccess();
  sub_1C3F6C704(v12, v11);
  swift_retain();
  sub_1C3F81BF8(v43, v12, v11);
  swift_endAccess();
  swift_release();
  sub_1C3F6C6F0(v12, v11);
  sub_1C3F7E2CC(v43[0], v43[1]);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v29);
  return swift_release();
}

uint64_t sub_1C407D358(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C405CFB4(a1, a2, a3, (void (*)(void *, uint64_t, uint64_t))Capsule.Ref.subscript.getter);
}

uint64_t sub_1C407D384(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_1C405D04C(a1, a2, a3, a4, (uint64_t (*)(uint64_t, uint64_t *, uint64_t, uint64_t))sub_1C407C8E4);
}

uint64_t sub_1C407D3B0()
{
  return 32;
}

__n128 sub_1C407D3BC(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C407D3C8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_1C405CFB4(a1, a2, a3, (void (*)(void *, uint64_t, uint64_t))Capsule.Ref.subscript.getter);
}

uint64_t sub_1C407D3F4(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  return sub_1C405D04C(a1, a2, a3, a4, sub_1C407C96C);
}

uint64_t sub_1C407D420()
{
  return 32;
}

__n128 sub_1C407D42C(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C407D438()
{
  return Capsule.Ref<>.root.getter();
}

uint64_t sub_1C407D45C(uint64_t a1)
{
  return sub_1C407CA8C(a1);
}

uint64_t sub_1C407D48C()
{
  return 16;
}

__n128 sub_1C407D498(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C407D4A4@<X0>(uint64_t **a1@<X1>, uint64_t a2@<X8>)
{
  return Capsule.Ref<>.subscript.getter(*a1, a2);
}

uint64_t sub_1C407D4D0()
{
  return 24;
}

__n128 sub_1C407D4DC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  a2[1].n128_u64[0] = a1[1].n128_u64[0];
  *a2 = result;
  return result;
}

uint64_t sub_1C407D4F0()
{
  return sub_1C3F815A4((unint64_t *)&qword_1EA39CAE8, qword_1EBBBA348);
}

uint64_t sub_1C407D52C(uint64_t a1)
{
  uint64_t result = sub_1C3FA180C(qword_1EBBBA230, (void (*)(uint64_t))type metadata accessor for CapsuleRef);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C407D584(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1C407D598();
  }
  return result;
}

uint64_t sub_1C407D598()
{
  return swift_retain();
}

uint64_t sub_1C407D5A0(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_1C3F7FCE8();
  }
  return result;
}

uint64_t sub_1C407D5B4@<X0>(uint64_t a1@<X8>)
{
  return sub_1C444DE18(v1, a1);
}

uint64_t sub_1C407D5D0(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C407D61C(uint64_t a1)
{
  return sub_1C4050D64(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1C407D624(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    sub_1C3F7E2CC(result, a2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C407D6A4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C407D6DC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C407D710(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a2;
  uint64_t v36 = type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v36);
  uint64_t v40 = (uint64_t)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v33 = a1 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  uint64_t v10 = a3 + OBJC_IVAR____TtC9Coherence10CapsuleRef_references;
  uint64_t v38 = a1;
  swift_bridgeObjectRetain();
  uint64_t v35 = v10;
  uint64_t result = swift_beginAccess();
  int64_t v12 = 0;
  int64_t v34 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_22:
    unint64_t v18 = (uint64_t *)(*(void *)(v38 + 48) + 16 * v14);
    uint64_t v19 = *v18;
    unint64_t v20 = v18[1];
    uint64_t v21 = *(void *)(*(void *)(v37 + 40) + 16);
    sub_1C3F7E324(*v18, v20);
    if (!v21 || (sub_1C3F7E324(v19, v20), sub_1C3F850CC(v19, v20), char v23 = v22, sub_1C3F7E2CC(v19, v20), (v23 & 1) == 0))
    {
      uint64_t v24 = v40;
      sub_1C3F8F450(v35, v40, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      uint64_t v25 = *(void *)(v24 + *(int *)(v36 + 20));
      if (!*(void *)(v25 + 16)) {
        goto LABEL_28;
      }
      sub_1C3F7E324(v19, v20);
      sub_1C3F7E324(v19, v20);
      uint64_t v26 = sub_1C3F850CC(v19, v20);
      if ((v27 & 1) == 0)
      {
        sub_1C3F7E2CC(v19, v20);
        sub_1C3F7E2CC(v19, v20);
LABEL_28:
        sub_1C3F8F5D4(v40, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
        sub_1C3F84B88(0, 0, 0);
        sub_1C3F7E2CC(v19, v20);
        swift_release();
        return 1;
      }
      uint64_t v28 = (uint64_t *)(*(void *)(v25 + 56) + 48 * v26);
      uint64_t v30 = *v28;
      uint64_t v29 = v28[1];
      uint64_t v31 = v28[2];
      int64_t v39 = v12;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v19, v20);
      sub_1C3F7E2CC(v19, v20);
      sub_1C3F8F5D4(v40, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      int64_t v12 = v39;
      sub_1C3F84B88(v30, v29, v31);
    }
    uint64_t result = sub_1C3F7E2CC(v19, v20);
  }
  int64_t v15 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v15 >= v34) {
    goto LABEL_29;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v15);
  ++v12;
  if (v16) {
    goto LABEL_21;
  }
  int64_t v12 = v15 + 1;
  if (v15 + 1 >= v34) {
    goto LABEL_29;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v12);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v12 = v15 + 2;
  if (v15 + 2 >= v34) {
    goto LABEL_29;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v12);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v12 = v15 + 3;
  if (v15 + 3 >= v34) {
    goto LABEL_29;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v12);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v34)
  {
LABEL_29:
    swift_release();
    return 0;
  }
  unint64_t v16 = *(void *)(v33 + 8 * v17);
  int64_t v12 = v17;
  if (v16)
  {
LABEL_21:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v34) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v33 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1C407DAF8(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C407DB78(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C407DBF8()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C407DC30(uint64_t a1)
{
  return sub_1C4056848(*(void *)a1, *(void *)(a1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_1C407DC40(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

BOOL sub_1C407DC50(long long *a1)
{
  long long v2 = *a1;
  return (sub_1C4059C04((uint64_t *)&v2) & 1) == 0;
}

id CRType.context.getter()
{
  uint64_t v3 = 0;
  memset(v2, 0, sizeof(v2));
  id v0 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v2);
  sub_1C3F962E0((uint64_t)v2, qword_1EBBC0C90);
  return v0;
}

uint64_t static CRType.canContainAssets.getter()
{
  return 1;
}

uint64_t CRDT.merging(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v4, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a3 + 8) + 8))(a1, a2);
}

uint64_t CRValue.__hasDelta(from:)()
{
  return 0;
}

id sub_1C407DDA0@<X0>(void **a1@<X8>)
{
  long long v2 = *v1;
  *a1 = *v1;
  return v2;
}

uint64_t CRValue.copy(renamingReferences:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t sub_1C407DDE0@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  *a2 = v4;
  swift_bridgeObjectRetain();
  id v5 = v4;
  return swift_bridgeObjectRelease();
}

uint64_t CRType.copy(renamingReferences:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v7 = a1;
  id v5 = *(void (**)(unint64_t *, uint64_t, uint64_t))(a3 + 24);
  swift_bridgeObjectRetain();
  v5(&v7, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C407DEF8@<X0>(unsigned char *a1@<X8>)
{
  sub_1C4080414();
  uint64_t result = sub_1C4497B08();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C407DF4C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  unint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  int64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = *(int *)(v10 + 28);
  uint64_t v14 = *(void *)(v3 + v13);
  uint64_t v15 = *(void *)(a1 + v13);
  sub_1C408030C(v3, (uint64_t)&v18 - v11);
  sub_1C408030C(a1, (uint64_t)v9);
  if (v14 == v15) {
    char v16 = sub_1C4496618();
  }
  else {
    char v16 = 0;
  }
  sub_1C4080370((uint64_t)v9);
  uint64_t result = sub_1C4080370((uint64_t)v12);
  *a2 = v16 & 1;
  return result;
}

uint64_t CRValue<>.observableDifference(from:with:)@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C4497178();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1C407E090@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C3F7E324(v2, v3);
}

uint64_t sub_1C407E09C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  unint64_t v5 = v2[1];
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  *a2 = v4;
  a2[1] = v5;
  swift_bridgeObjectRetain();
  sub_1C3F7E324(v4, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C407E11C@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C3FAD630(*(void *)v2, *(void *)(v2 + 8), *(void *)a1, *(void *)(a1 + 8));
  *a2 = result & 1;
  return result;
}

Swift::Bool __swiftcall CRValue.needToFinalizeTimestamps()()
{
  return 0;
}

id sub_1C407E15C()
{
  uint64_t v3 = 0;
  memset(v2, 0, sizeof(v2));
  id v0 = _s9Coherence9CRContextC19newTransientContext18uniqueAssetManager18encryptionDelegateACSb_AA010EncryptionJ0_pSgtFZ_0(0, (uint64_t)v2);
  sub_1C3F962E0((uint64_t)v2, qword_1EBBC0C90);
  return v0;
}

uint64_t CRType.copy(renamingReferences:)(void *a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))(*a1);
}

uint64_t CRType.copy()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = MEMORY[0x1E4FBC868];
  (*(void (**)(uint64_t *, uint64_t))(a2 + 24))(&v3, a1);
  return swift_bridgeObjectRelease();
}

uint64_t PartialCRDT<>.delta(_:from:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v8 = *(void *)(a1 - 8);
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(a2, v3);
  uint64_t v6 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56);
  return v6(a2, 0, 1, a1);
}

uint64_t PartialCRDT<>.merge(delta:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return 1;
}

uint64_t PartialCRDT<>.canMerge(delta:)()
{
  return 1;
}

uint64_t CRValueObservableDifference.isIdentityChanged.getter()
{
  return 1;
}

uint64_t CRValueObservableDifference.hash(into:)()
{
  return sub_1C4498608();
}

uint64_t static CRValueObservableDifference.== infix(_:_:)()
{
  return 1;
}

uint64_t CRValueObservableDifference.hashValue.getter()
{
  return sub_1C4498628();
}

uint64_t CRType.observableDifference(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = 0;
  memset(v4, 0, sizeof(v4));
  (*(void (**)(uint64_t, _OWORD *, uint64_t))(a3 + 40))(a1, v4, a2);
  return sub_1C3F962E0((uint64_t)v4, &qword_1EBBBC198);
}

uint64_t CRDT.hasDelta(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t))(a3 + 72))(v3) & 1;
}

uint64_t CRDT.actionUndoing(deltaTo:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t))(a3 + 56))(v3);
}

uint64_t CRDT.applying(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v20 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C4497B38();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  int64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v20 - v14;
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v20 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v15, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v15, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v15, v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v21, a2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v18, v15, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v21, a2);
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v12, v18, AssociatedTypeWitness);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v12, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v20 + 64))(v12, a2);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, AssociatedTypeWitness);
  }
}

uint64_t CRDT.merging(delta:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v9 = (*(uint64_t (**)(void))(a3 + 88))();
  uint64_t v10 = *(void *)(a2 - 8);
  if (v9)
  {
    uint64_t v14 = *(void *)(a2 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(a4, v4, a2);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a3 + 96))(a1, a2, a3);
    uint64_t v10 = v14;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v11 = 1;
  }
  int64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  return v12(a4, v11, 1, a2);
}

void sub_1C407E868(char *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
}

void sub_1C407E880(char *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = *(void *)&a1[OBJC_IVAR___CRContext_assetManager];
  type metadata accessor for CRDecodeContext();
  uint64_t v10 = (void *)swift_allocObject();
  uint64_t v11 = MEMORY[0x1E4FBC868];
  void v10[2] = MEMORY[0x1E4FBC868];
  v10[3] = v11;
  void v10[4] = v9;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  sub_1C3F7E324(a2, a3);
  swift_retain();
  uint64_t v12 = sub_1C3FFEF38(a2, a3, (uint64_t)v10);
  if (v4)
  {
    sub_1C3F7E2CC(a2, a3);
  }
  else
  {
    CRCounter.MutatingAction.init(from:)(v12, &v13);
    sub_1C3F7E2CC(a2, a3);

    *a4 = v13;
  }
}

void CRMutatingAction.init(_:serializedData:)(char *a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = *(void *)&a1[OBJC_IVAR___CRContext_assetManager];
  type metadata accessor for CRDecodeContext();
  uint64_t v11 = (void *)swift_allocObject();
  uint64_t v12 = MEMORY[0x1E4FBC868];
  uint64_t v11[2] = MEMORY[0x1E4FBC868];
  v11[3] = v12;
  uint64_t v11[4] = v10;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  sub_1C3F7E324(a2, a3);
  swift_retain();
  uint64_t v13 = sub_1C3FFEF38(a2, a3, (uint64_t)v11);
  if (!v5) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a5 + 8) + 8))(v13, a4);
  }
  sub_1C3F7E2CC(a2, a3);
}

uint64_t CRMutatingAction.serializedData(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  char v4 = 1;
  return CRMutatingAction.serializedData(_:version:)(a1, &v4, a2, a3);
}

uint64_t CRMutatingAction.serializedData(_:version:)(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  char v5 = *a2;
  if (*a2)
  {
    type metadata accessor for CREncoder();
    uint64_t v9 = swift_allocObject();
    uint64_t v10 = MEMORY[0x1E4FBC860];
    uint64_t v11 = MEMORY[0x1E4FBC868];
    *(void *)(v9 + 32) = MEMORY[0x1E4FBC868];
    *(void *)(v9 + 40) = v10;
    *(void *)(v9 + 48) = v10;
    *(void *)(v9 + 56) = v11;
    *(void *)(v9 + 64) = v10;
    *(void *)(v9 + 80) = 0;
    *(void *)(v9 + 88) = 0;
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = v10;
    *(unsigned char *)(v9 + 72) = v5;
    v15[3] = a3;
    v15[4] = a4;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v15);
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(boxed_opaque_existential_1, v4, a3);
    uint64_t v4 = sub_1C400A668(a1, (uint64_t)v15);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  else
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v13 = 0xD00000000000002ALL;
    *(void *)(v13 + 8) = 0x80000001C44B18A0;
    *(unsigned char *)(v13 + 16) = 0;
    swift_willThrow();
  }
  return v4;
}

uint64_t sub_1C407EC4C@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407ECB8@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407ED24@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407ED90@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407EDFC@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407EE68@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407EED4@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407EF40@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407EFAC@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F018@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F084@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F0F0@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F15C@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F1C8@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F234@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F2A0@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F30C@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F378@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F3E4@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F450@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F4BC@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407F528@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C407F564@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  *a2 = v5;
  a2[1] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C407F5E8@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *v2;
  uint64_t result = sub_1C4113F94(v2[1], a1[1]);
  BOOL v7 = 0;
  if (result)
  {
    uint64_t result = sub_1C4113F94(v5, v4);
    if (result) {
      BOOL v7 = 1;
    }
  }
  *a2 = v7;
  return result;
}

uint64_t sub_1C407F640@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C41145B4(*v2, *a1);
  *a2 = result & 1;
  return result;
}

void sub_1C407F674(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_1C407F684@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *v2 == *result;
  return result;
}

uint64_t sub_1C407F69C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1C407F6FC@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C407F708@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  a2[1] = v4;
  return result;
}

uint64_t sub_1C407F778@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  if (*v2 == *a1 && v2[1] == a1[1]) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = sub_1C44982E8();
  }
  *a2 = result & 1;
  return result;
}

uint64_t sub_1C407F7C8@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C407F830(&qword_1EA39CBF0, MEMORY[0x1E4F27928], a1);
}

uint64_t sub_1C407F7FC@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C407F830((unint64_t *)&qword_1EBBBF220, MEMORY[0x1E4F27990], a1);
}

uint64_t sub_1C407F830@<X0>(unint64_t *a1@<X4>, void (*a2)(uint64_t)@<X5>, unsigned char *a3@<X8>)
{
  sub_1C40803CC(a1, a2);
  uint64_t result = sub_1C4497178();
  *a3 = result & 1;
  return result;
}

float sub_1C407F890@<S0>(_DWORD *a1@<X8>)
{
  float result = *v1;
  *a1 = *(_DWORD *)v1;
  return result;
}

uint64_t sub_1C407F89C@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v4 = *v2;
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

float *sub_1C407F904@<X0>(float *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *v2 == *result;
  return result;
}

double sub_1C407F91C@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_1C407F928@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

double *sub_1C407F990@<X0>(double *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *v2 == *result;
  return result;
}

void sub_1C407F9A8(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C407F9B4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  char v4 = *v2;
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

unsigned __int8 *sub_1C407FA14@<X0>(unsigned __int8 *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = ((*result ^ *v2) & 1) == 0;
  return result;
}

uint64_t sub_1C407FA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, v3, a2);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C407FAD4@<X0>(unsigned char *a1@<X8>)
{
  return sub_1C407F830(&qword_1EBBBC328, MEMORY[0x1E4F276F0], a1);
}

uint64_t sub_1C407FB08@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t sub_1C407FB14@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1C407FB7C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1C4133E50(*v2, *a1);
  *a2 = result & 1;
  return result;
}

uint64_t sub_1C407FBB0@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407FC1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C408030C(v1, a1);
}

uint64_t sub_1C407FC28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  sub_1C408030C(v2, a2);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_1C407FC9C(char *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X8>)
{
}

uint64_t sub_1C407FCB4@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407FD20@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C407FD2C@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407FD98@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407FE04@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t sub_1C407FE38@<X0>(unsigned char *a1@<X8>)
{
  swift_getWitnessTable();
  return CRValue<>.observableDifference(from:with:)(a1);
}

uint64_t sub_1C407FEA4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (!a1) {
    sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  *a2 = v4;
  swift_bridgeObjectRetain();
  swift_retain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C407FF20@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  unint64_t v6 = *(void *)(v4 + 24);
  uint64_t v7 = *(void *)(*(void *)a1 + 16);
  unint64_t v8 = *(void *)(*(void *)a1 + 24);
  sub_1C3F7E324(v5, v6);
  sub_1C3F7E324(v7, v8);
  char v9 = sub_1C3FAD630(v5, v6, v7, v8);
  sub_1C3F7E2CC(v7, v8);
  uint64_t result = sub_1C3F7E2CC(v5, v6);
  *a2 = v9 & 1;
  return result;
}

unint64_t sub_1C407FFB4()
{
  unint64_t result = qword_1EA39CBE8;
  if (!qword_1EA39CBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39CBE8);
  }
  return result;
}

uint64_t dispatch thunk of CRType.copy(renamingReferences:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of CRType.observableDifference(from:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of CRType.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of CRType.needToFinalizeTimestamps()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of CRType.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of static CRType.canContainAssets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of CRDT.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of CRDT.actionUndoingDifference(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of CRDT.apply(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of CRDT.hasDelta(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of CRDT.delta(_:from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of CRDT.canMerge(delta:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of CRDT.merge(delta:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of CRMergeable.merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of CRMergeable.serializedData(_:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of CRMergeable.init(serializedData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t dispatch thunk of static ObservableDifferenceIdentity.identityChanged.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ObservableDifferenceIdentity.isIdentityChanged.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of CRValue.__merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CRValue.__hasDelta(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PartialCRDT.merge(delta:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of PartialCRDT.canMerge(delta:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PartialCRDT.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

unsigned char *storeEnumTagSinglePayload for CRValueObservableDifference(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C40802ACLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CRValueObservableDifference()
{
  return &type metadata for CRValueObservableDifference;
}

uint64_t dispatch thunk of CRMutatingAction.init(_:serializedData:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t sub_1C408030C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FinalizedTimestamp(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C4080370(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FinalizedTimestamp(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C40803CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C4080414()
{
  unint64_t result = qword_1EBBBC180;
  if (!qword_1EBBBC180)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBBBC180);
  }
  return result;
}

void __spoils<X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> sub_1C408045C()
{
}

uint64_t sub_1C4080498(void *a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, uint64_t a5)
{
  int v10 = a3;
  id v11 = objc_msgSend(a1, sel_length);
  if (v10)
  {
    if (__OFADD__(v11, 1))
    {
      __break(1u);
    }
    else if ((uint64_t)v11 + 1 > a2)
    {
      uint64_t v12 = a3 == 2;
      return (*(uint64_t (**)(id, uint64_t, uint64_t))(a5 + 32))(objc_msgSend(a1, sel_mergeableIndexForCharacterIndex_affinity_, a2, v12), a4, a5);
    }
  }
  else if ((uint64_t)v11 > a2)
  {
    uint64_t v12 = 2;
    return (*(uint64_t (**)(id, uint64_t, uint64_t))(a5 + 32))(objc_msgSend(a1, sel_mergeableIndexForCharacterIndex_affinity_, a2, v12), a4, a5);
  }
  uint64_t result = sub_1C4497F58();
  __break(1u);
  return result;
}

uint64_t sub_1C40805B8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v12 = *(void *)(a4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](a1);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  int64_t v34 = (char *)&v31 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v31 - v18;
  if (v20 < 0) {
    goto LABEL_11;
  }
  id v21 = objc_msgSend(a1, sel_length);
  if (__OFADD__(v21, 1))
  {
    __break(1u);
    goto LABEL_10;
  }
  if ((uint64_t)v21 + 1 <= a3)
  {
LABEL_11:
    uint64_t result = sub_1C4497F58();
    __break(1u);
    return result;
  }
  uint64_t v33 = v15;
  id v22 = objc_msgSend(a1, sel_mergeableIndexForCharacterIndex_affinity_, a3, 0);
  char v23 = *(void (**)(id, uint64_t, uint64_t))(a5 + 32);
  v23(v22, a4, a5);
  if (__OFSUB__(a3, a2))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v32 = a6;
  if (a3 == a2)
  {
    uint64_t v24 = v34;
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v34, v19, a4);
  }
  else
  {
    id v26 = objc_msgSend(a1, sel_mergeableIndexForCharacterIndex_affinity_, a2, 1);
    uint64_t v24 = v34;
    v23(v26, a4, a5);
  }
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
  char v27 = v33;
  v25(v33, v19, a4);
  uint64_t v28 = v32;
  v25(v32, v24, a4);
  uint64_t v29 = type metadata accessor for CursorRange();
  return ((uint64_t (*)(char *, char *, uint64_t))v25)(&v28[*(int *)(v29 + 44)], v27, a4);
}

id sub_1C4080874(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  self;
  id v6 = objc_msgSend(a1, sel_characterIndexForIndex_, swift_dynamicCastObjCClassUnconditional());

  if (v6 == (id)sub_1C4496268()) {
    return 0;
  }
  else {
    return v6;
  }
}

uint64_t sub_1C4080908(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(a4 + 24);
  unint64_t v8 = (void *)v7(a3, a4);
  self;
  id v9 = objc_msgSend(a1, sel_characterIndexForIndex_, swift_dynamicCastObjCClassUnconditional());

  type metadata accessor for CursorRange();
  int v10 = (void *)v7(a3, a4);
  self;
  id v11 = objc_msgSend(a1, sel_characterIndexForIndex_, swift_dynamicCastObjCClassUnconditional());

  if (v9 == (id)sub_1C4496268()) {
    return 0;
  }
  uint64_t result = sub_1C4496268();
  if (v11 == (id)result) {
    return 0;
  }
  if ((uint64_t)v11 >= (uint64_t)v9) {
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

uint64_t CursorRange.init(lowerBound:upperBound:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  id v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  v9(a3 - 8, a4, a1);
  uint64_t v7 = a4 + *(int *)(type metadata accessor for CursorRange() + 44);
  return v9(v7, a2, a3);
}

uint64_t type metadata accessor for CursorRange()
{
  return __swift_instantiateGenericMetadata();
}

BOOL static CRAffinity.== infix(_:_:)(char a1, char a2)
{
  return a1 == a2;
}

uint64_t CRAffinity.hash(into:)()
{
  return sub_1C4498608();
}

uint64_t CRAffinity.hashValue.getter()
{
  return sub_1C4498628();
}

uint64_t CursorRange.lowerBound.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t CursorRange.lowerBound.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*CursorRange.lowerBound.modify())()
{
  return nullsub_1;
}

uint64_t CursorRange.upperBound.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t CursorRange.upperBound.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*CursorRange.upperBound.modify())()
{
  return nullsub_1;
}

uint64_t CursorRange.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_retain();
  Array<A>.init(from:)(v6, a2, a3);
  if (!v3)
  {
    if (MEMORY[0x1C8780110]() == 2)
    {
      sub_1C4497568();
      type metadata accessor for CursorRange();
      sub_1C4497568();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v7 = 0xD000000000000010;
      *(void *)(v7 + 8) = 0x80000001C44B2500;
      *(unsigned char *)(v7 + 16) = 0;
      swift_willThrow();
    }
  }
  return swift_release();
}

uint64_t CursorRange.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  sub_1C40811FC(v5, v5);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 72);
  swift_allocObject();
  uint64_t v8 = sub_1C4497428();
  uint64_t v10 = v9;
  id v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v11(v9, v2, v5);
  v11(v10 + v7, v2 + *(int *)(a2 + 44), v5);
  sub_1C4497528();
  nullsub_1();
  Array<A>.encode(to:)(a1, v8, v5, *(void *)(a2 + 24));
  return swift_bridgeObjectRelease();
}

void CursorRange.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

Swift::Bool __swiftcall CursorRange.needToFinalizeTimestamps()()
{
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v0 - 8);
  uint64_t v4 = ((uint64_t (*)())MEMORY[0x1F4188790])();
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v4 + 16);
  uint64_t v8 = *(void *)(*(void *)(v4 + 24) + 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 56);
  char v10 = v9(v7, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, v2);
  if (v10) {
    char v11 = 1;
  }
  else {
    char v11 = v9(v7, v8);
  }
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  return v11 & 1;
}

uint64_t CursorRange.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) + 8);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 64);
  v5(a1, v3, v4);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(a1, v3, v4);
}

uint64_t static CursorRange.== infix(_:_:)()
{
  if ((sub_1C4497178() & 1) == 0) {
    return 0;
  }
  type metadata accessor for CursorRange();
  return sub_1C4497178() & 1;
}

uint64_t sub_1C4081190()
{
  return static CursorRange.== infix(_:_:)();
}

uint64_t sub_1C40811A8(uint64_t a1, uint64_t a2)
{
  return CursorRange.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_1C40811CC(uint64_t a1, uint64_t a2)
{
  return CursorRange.encode(to:)(a1, a2);
}

void sub_1C40811E4(unsigned char *a1@<X8>)
{
}

uint64_t sub_1C40811FC(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39B0A8);
  }
  else
  {
    return sub_1C4498098();
  }
}

unint64_t sub_1C4081270()
{
  unint64_t result = qword_1EA39CBF8[0];
  if (!qword_1EA39CBF8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA39CBF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CRAffinity(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C4081390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CRAffinity()
{
  return &type metadata for CRAffinity;
}

uint64_t sub_1C40813C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1C40813D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C4081460(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, v5);
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_1C408156C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8) + 8;
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))v6;
  (*(void (**)(uint64_t, uint64_t))v6)(a1, v3);
  unint64_t v4 = (*(void *)(v6 + 56) + a1 + *(unsigned __int8 *)(v6 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 72);
  return v7(v4, v3);
}

unint64_t sub_1C4081608(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), v5);
  return a1;
}

unint64_t sub_1C408169C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  uint64_t v8 = v6 + 24;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), v5);
  return a1;
}

unint64_t sub_1C4081730(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), v5);
  return a1;
}

unint64_t sub_1C40817C4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  uint64_t v8 = v6 + 40;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), v5);
  return a1;
}

uint64_t sub_1C4081858(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v6;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_1C40819C4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C4081BECLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t dispatch thunk of CursorIndexable.cursor(at:affinity:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t dispatch thunk of CursorIndexable.cursor(range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of CursorIndexable.cursor(range:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 48))();
}

uint64_t dispatch thunk of CursorIndexable.index(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of CursorIndexable.range(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t dispatch thunk of CursorIndexable.range(of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t (*SharedTagged_1.id.modify())()
{
  return nullsub_1;
}

uint64_t SharedTagged_1.tag.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C40EA434(a1, a2);
}

uint64_t SharedTagged_1.tag.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C40EA528(a1, a2);
}

uint64_t (*SharedTagged_1.tag.modify())()
{
  return nullsub_1;
}

uint64_t SharedTagged_1.init(_:identity:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C4081DCC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, long long *))SharedTagged_1.init(_:id:));
}

{
  return sub_1C4081DCC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, long long *))SharedTagged_1.init(_:id:));
}

uint64_t SharedTagged_1.init(_:id:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1C40EA66C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_1, a5);
}

{
  return sub_1C40EA7CC(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_1, a5);
}

uint64_t type metadata accessor for SharedTagged_1()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C4081DCC(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, long long *))
{
  long long v6 = *a2;
  return a5(a1, &v6);
}

uint64_t SharedTagged_1.init<A>(_:_:)@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  unsigned int v5 = (char *)&v16 - v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v21 = AssociatedTypeWitness;
  *((void *)&v21 + 1) = AssociatedConformanceWitness;
  id v22 = &protocol witness table for Int;
  uint64_t v23 = MEMORY[0x1E4FBB560];
  uint64_t v7 = type metadata accessor for CRExtensible();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  BOOL v9 = (char *)&v16 - v8;
  long long v20 = xmmword_1C449BDD0;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  int v11 = v18;
  sub_1C40573E4(v19, v10, (uint64_t *)&v21);
  swift_release();
  *(_OWORD *)int v11 = v21;
  *(void *)&long long v21 = 0;
  sub_1C44973A8();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, AssociatedTypeWitness);
    uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for SharedTagged_1();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&v11[*(int *)(v15 + 36)], v9, v14);
  }
  return result;
}

uint64_t SharedTagged_1.init<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = AssociatedTypeWitness;
  *((void *)&v24 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v9 = type metadata accessor for CRExtensible();
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  MEMORY[0x1F4188790](v9);
  int v11 = (char *)&v18 - v10;
  uint64_t v20 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_1C4055CC4(a2);
  swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v21 = a2;
  Capsule<>.rootID.getter((uint64_t *)&v24);
  *(_OWORD *)uint64_t v12 = v24;
  *(void *)&long long v24 = 0;
  sub_1C44973A8();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v21, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v8, AssociatedTypeWitness);
    uint64_t v16 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = type metadata accessor for SharedTagged_1();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&v12[*(int *)(v17 + 36)], v11, v16);
  }
  return result;
}

uint64_t SharedTagged_1.init<A>(_:_:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = AssociatedConformanceWitness;
  uint64_t v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v10 = type metadata accessor for CRExtensible();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = *a3;
  unint64_t v13 = a3[1];
  uint64_t v23 = a1;
  uint64_t v27 = v14;
  unint64_t v28 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v16 = v25;
  sub_1C40573E4(v26, v15, (uint64_t *)&v29);
  swift_release();
  sub_1C3F7E2CC(v14, v13);
  *(_OWORD *)uint64_t v16 = v29;
  *(void *)&long long v29 = 0;
  sub_1C44973A8();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v26, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v19 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = type metadata accessor for SharedTagged_1();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(&v16[*(int *)(v20 + 36)], v12, v19);
  }
  return result;
}

uint64_t SharedTagged_1.init(_:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *a1;
  uint64_t v3 = (char *)a1 + *(int *)(type metadata accessor for WeakTagged_1() + 36);
  uint64_t v4 = (char *)a2 + *(int *)(type metadata accessor for SharedTagged_1() + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for CRExtensible();
  return (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(v4, v3, v5);
}

uint64_t type metadata accessor for WeakTagged_1()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SharedTagged_1.tagged1.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_u64[0])
  {
    unint64_t v6 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  else
  {
    uint64_t v8 = *v1;
    unint64_t v9 = v2[1];
    v10.n128_u64[0] = v8;
    v10.n128_u64[1] = v9;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    unint64_t v7 = v11.n128_u64[1];
    unint64_t v6 = v11.n128_u64[0];
    uint64_t result = sub_1C3F7E324(v8, v9);
  }
  *a1 = v6;
  a1[1] = v7;
  return result;
}

uint64_t SharedTagged_1.unknown.getter@<X0>(long long *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_i64[0] < 1)
  {
    long long v8 = xmmword_1C449BDD0;
  }
  else
  {
    uint64_t v6 = *v1;
    unint64_t v7 = v2[1];
    v10.n128_u64[0] = v6;
    v10.n128_u64[1] = v7;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    __n128 v9 = v11;
    uint64_t result = sub_1C3F7E324(v6, v7);
    long long v8 = (__int128)v9;
  }
  *a1 = v8;
  return result;
}

uint64_t SharedTagged_1.any.getter@<X0>(__n128 *a1@<X8>)
{
  uint64_t v2 = v1;
  v8.n128_u64[0] = swift_getAssociatedTypeWitness();
  v8.n128_u64[1] = swift_getAssociatedConformanceWitness();
  __n128 v9 = &protocol witness table for Int;
  uint64_t v10 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  uint64_t v5 = *v1;
  unint64_t v6 = v2[1];
  v8.n128_u64[0] = v5;
  v8.n128_u64[1] = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  a1[1].n128_u64[1] = type metadata accessor for Ref();
  a1[2].n128_u64[0] = swift_getWitnessTable();
  Ref.init(id:)(&v8, a1);
  return sub_1C3F7E324(v5, v6);
}

uint64_t SharedTagged_1.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  unint64_t v6 = v5;
  uint64_t v29 = a1;
  uint64_t v30 = a3;
  uint64_t v31 = a5;
  __n128 v8 = *(char **)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v10);
  uint64_t v27 = (char *)&v25 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v33.n128_u64[0] = v12;
  v33.n128_u64[1] = AssociatedConformanceWitness;
  int64_t v34 = &protocol witness table for Int;
  uint64_t v35 = MEMORY[0x1E4FBB560];
  uint64_t v14 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v14, (uint64_t)&v36);
  uint64_t v28 = a4 + 8;
  if (v36)
  {
    unint64_t v16 = v5[1];
    v32.n128_u64[0] = *v6;
    uint64_t v15 = v32.n128_u64[0];
    v32.n128_u64[1] = v16;
    uint64_t v17 = swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v32, &v33);
    uint64_t v27 = v8;
    __n128 v18 = v33;
    __n128 v32 = v33;
    uint64_t v19 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
    sub_1C3F7E324(v15, v16);
    v19(&v32, AssociatedTypeWitness, v17, v30, a4);
    sub_1C3F7E2CC(v18.n128_i64[0], v18.n128_u64[1]);
  }
  else
  {
    unint64_t v21 = v5[1];
    v32.n128_u64[0] = *v5;
    uint64_t v20 = v32.n128_u64[0];
    v32.n128_u64[1] = v21;
    uint64_t v22 = swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v32, &v33);
    __n128 v23 = v33;
    __n128 v32 = v33;
    uint64_t v26 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 8);
    sub_1C3F7E324(v20, v21);
    v26(&v32, v10, v22, v30, a4);
    sub_1C3F7E2CC(v23.n128_i64[0], v23.n128_u64[1]);
  }
  swift_getAssociatedTypeWitness();
  return swift_dynamicCast();
}

uint64_t sub_1C4082F60()
{
  unint64_t v1 = v0;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v3 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v3);
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v4, (uint64_t)&v14);
  unint64_t v6 = v0[1];
  v10.n128_u64[0] = *v1;
  uint64_t v5 = v10.n128_u64[0];
  v10.n128_u64[1] = v6;
  if (v14)
  {
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    __n128 v7 = v11;
    __n128 v10 = v11;
    sub_1C3F7E324(v5, v6);
    type metadata accessor for Ref();
    sub_1C41F7E44();
    sub_1C3F7E2CC(v7.n128_i64[0], v7.n128_u64[1]);
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    __n128 v8 = v11;
    __n128 v10 = v11;
    sub_1C3F7E324(v5, v6);
    type metadata accessor for Ref();
    sub_1C41F7E44();
    sub_1C3F7E2CC(v8.n128_i64[0], v8.n128_u64[1]);
  }
  swift_getAssociatedTypeWitness();
  return swift_dynamicCast();
}

uint64_t sub_1C4083250(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = a2;
  uint64_t v33 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v28 = (char *)&v25 - v5;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v26 = (char *)&v25 - v7;
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  __n128 v10 = (char *)&v25 - v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v35.n128_u64[0] = v11;
  v35.n128_u64[1] = AssociatedConformanceWitness;
  uint64_t v36 = &protocol witness table for Int;
  uint64_t v37 = MEMORY[0x1E4FBB560];
  uint64_t v13 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v13, (uint64_t)&v38);
  uint64_t v30 = v8 + 16;
  unint64_t v15 = v2[1];
  v34.n128_u64[0] = *v3;
  uint64_t v14 = v34.n128_u64[0];
  v34.n128_u64[1] = v15;
  if (v38)
  {
    swift_getAssociatedConformanceWitness();
    __n128 v16 = Ref.init(id:)(&v34, &v35);
    __n128 v17 = v35;
    uint64_t v18 = v33;
    uint64_t v19 = v31;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v33, v31, v16);
    sub_1C3F7E324(v14, v15);
    uint64_t v20 = (uint64_t)v28;
    swift_dynamicCast();
    __n128 v34 = v17;
    sub_1C407C610(v20, (uint64_t)&v34, AssociatedTypeWitness);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v20, AssociatedTypeWitness);
  }
  else
  {
    swift_getAssociatedConformanceWitness();
    __n128 v21 = Ref.init(id:)(&v34, &v35);
    __n128 v22 = v35;
    uint64_t v18 = v33;
    uint64_t v19 = v31;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16))(v10, v33, v31, v21);
    sub_1C3F7E324(v14, v15);
    uint64_t v23 = (uint64_t)v26;
    swift_dynamicCast();
    __n128 v34 = v22;
    sub_1C407C610(v23, (uint64_t)&v34, v6);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v23, v6);
  }
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v18, v19);
}

uint64_t SharedTagged_1.subscript.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C40F00F8(a1, a2, (void (*)(uint64_t, uint64_t))sub_1C4082F60);
}

uint64_t sub_1C408368C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = type metadata accessor for SharedTagged_1();
  swift_retain();
  sub_1C40F1E7C(a1, v4, v5, (uint64_t)&protocol requirements base descriptor for Tagged_1, (uint64_t)&associated type descriptor for Tagged_1.AnyType, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C4083250);
  return swift_release();
}

uint64_t SharedTagged_1.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C40F1E7C(a1, a2, a3, (uint64_t)&protocol requirements base descriptor for Tagged_1, (uint64_t)&associated type descriptor for Tagged_1.AnyType, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C4083250);
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v5(a1, AssociatedTypeWitness);
}

void (*SharedTagged_1.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  _OWORD v7[2] = v3;
  *uint64_t v7 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[3] = AssociatedTypeWitness;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[5] = malloc(v10);
  v7[6] = malloc(v10);
  SharedTagged_1.subscript.getter(a2, a3);
  return sub_1C40838D0;
}

void sub_1C40838D0(uint64_t **a1, char a2)
{
}

uint64_t SharedTagged_1.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C40F0424(a1, a2, a3, a4, sub_1C4082F60);
}

uint64_t SharedTagged_1.visitReferences(_:)(void *a1)
{
  v14.n128_u64[0] = swift_getAssociatedTypeWitness();
  v14.n128_u64[1] = swift_getAssociatedConformanceWitness();
  unint64_t v15 = &protocol witness table for Int;
  uint64_t v16 = MEMORY[0x1E4FBB560];
  uint64_t v3 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v3, (uint64_t)&v17);
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v4);
  unint64_t v6 = v1[1];
  v13.n128_u64[0] = *v1;
  uint64_t v7 = v13.n128_u64[0];
  v13.n128_u64[1] = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  Ref.init(id:)(&v13, &v14);
  __n128 v10 = v14;
  __n128 v13 = v14;
  uint64_t v11 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 8);
  sub_1C3F7E324(v7, v6);
  v11(&v13, AssociatedTypeWitness, AssociatedConformanceWitness, v4, v5);
  return sub_1C3F7E2CC(v10.n128_i64[0], v10.n128_u64[1]);
}

uint64_t SharedTagged_1.copy(renamingReferences:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C4086A34(a1, a2, (uint64_t (*)(char *, uint64_t *, uint64_t, uint64_t))SharedTagged_1.init(_:id:), a3);
}

uint64_t SharedTagged_1.copy(renamingReferences:)(unint64_t a1, uint64_t a2)
{
  return sub_1C40F04E0(a1, a2, (void (*)(unint64_t *, uint64_t))SharedTagged_1.copy(renamingReferences:));
}

uint64_t SharedTagged_1.hash(into:)(uint64_t a1)
{
  return sub_1C40F0588(a1);
}

uint64_t static SharedTagged_1.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C40F069C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_1);
}

uint64_t SharedTagged_1.hashValue.getter(uint64_t a1)
{
  return sub_1C4086CA8(a1, (void (*)(unsigned char *, uint64_t))SharedTagged_1.hash(into:));
}

uint64_t sub_1C4083B6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C4086D20(a1, a2, a3, (void (*)(unsigned char *, uint64_t))SharedTagged_1.hash(into:));
}

uint64_t sub_1C4083B84(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static SharedTagged_1.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t sub_1C4083B90(void *a1)
{
  return WeakTagged_1.encode(to:)(a1);
}

uint64_t SharedTagged_1.encode(to:)(void *a1)
{
  return sub_1C40F0858(a1);
}

uint64_t sub_1C4083BD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return SharedTagged_1.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t SharedTagged_1.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C40C0EC8(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_1, 0, a4);
}

uint64_t sub_1C4083C20(uint64_t a1, uint64_t a2)
{
  return SharedTagged_1.encode(to:)(a1, a2);
}

uint64_t SharedTagged_1.encode(to:)(uint64_t a1, uint64_t a2)
{
  return sub_1C4086E34(a1, a2, (uint64_t)&protocol requirements base descriptor for Tagged_1, (uint64_t)&associated type descriptor for Tagged_1.Enum, (uint64_t)&associated conformance descriptor for Tagged_1.Tagged_1.Enum: RawRepresentable);
}

void sub_1C4083C60(unsigned char *a1@<X8>)
{
}

uint64_t (*SharedTagged_2.id.modify())()
{
  return nullsub_1;
}

uint64_t SharedTagged_2.tag.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C40EA434(a1, a2);
}

uint64_t SharedTagged_2.tag.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C40EA528(a1, a2);
}

uint64_t (*SharedTagged_2.tag.modify())()
{
  return nullsub_1;
}

uint64_t SharedTagged_2.init(_:identity:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C4081DCC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, long long *))SharedTagged_2.init(_:id:));
}

{
  return sub_1C4081DCC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, long long *))SharedTagged_2.init(_:id:));
}

uint64_t SharedTagged_2.init(_:id:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1C40EA66C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_2, a5);
}

{
  return sub_1C40EA7CC(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_2, a5);
}

uint64_t SharedTagged_2.init<A>(_:_:)@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v21 = AssociatedTypeWitness;
  *((void *)&v21 + 1) = AssociatedConformanceWitness;
  __n128 v22 = &protocol witness table for Int;
  uint64_t v23 = MEMORY[0x1E4FBB560];
  uint64_t v7 = type metadata accessor for CRExtensible();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  long long v20 = xmmword_1C449BDD0;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v11 = v18;
  sub_1C40573E4(v19, v10, (uint64_t *)&v21);
  swift_release();
  *(_OWORD *)uint64_t v11 = v21;
  *(void *)&long long v21 = 0;
  sub_1C44973A8();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, AssociatedTypeWitness);
    uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for SharedTagged_2();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&v11[*(int *)(v15 + 36)], v9, v14);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  long long v20;
  long long v21;
  _UNKNOWN **v22;
  uint64_t v23;

  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v21 = AssociatedTypeWitness;
  *((void *)&v21 + 1) = AssociatedConformanceWitness;
  __n128 v22 = &protocol witness table for Int;
  uint64_t v23 = MEMORY[0x1E4FBB560];
  uint64_t v7 = type metadata accessor for CRExtensible();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  long long v20 = xmmword_1C449BDD0;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v11 = v18;
  sub_1C40573E4(v19, v10, (uint64_t *)&v21);
  swift_release();
  *(_OWORD *)uint64_t v11 = v21;
  *(void *)&long long v21 = 1;
  sub_1C44973A8();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, AssociatedTypeWitness);
    uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for SharedTagged_2();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&v11[*(int *)(v15 + 36)], v9, v14);
  }
  return result;
}

uint64_t SharedTagged_2.init<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = AssociatedTypeWitness;
  *((void *)&v24 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v9 = type metadata accessor for CRExtensible();
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v20 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_1C4055CC4(a2);
  swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v21 = a2;
  Capsule<>.rootID.getter((uint64_t *)&v24);
  *(_OWORD *)uint64_t v12 = v24;
  *(void *)&long long v24 = 0;
  sub_1C44973A8();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v21, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v8, AssociatedTypeWitness);
    uint64_t v16 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = type metadata accessor for SharedTagged_2();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&v12[*(int *)(v17 + 36)], v11, v16);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  char *v23;
  long long v24;
  _UNKNOWN **v25;
  uint64_t v26;

  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = AssociatedTypeWitness;
  *((void *)&v24 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v9 = type metadata accessor for CRExtensible();
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v20 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_1C4055CC4(a2);
  swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v21 = a2;
  Capsule<>.rootID.getter((uint64_t *)&v24);
  *(_OWORD *)uint64_t v12 = v24;
  *(void *)&long long v24 = 1;
  sub_1C44973A8();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v21, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v8, AssociatedTypeWitness);
    uint64_t v16 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = type metadata accessor for SharedTagged_2();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&v12[*(int *)(v17 + 36)], v11, v16);
  }
  return result;
}

uint64_t SharedTagged_2.init<A>(_:_:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = AssociatedConformanceWitness;
  uint64_t v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v10 = type metadata accessor for CRExtensible();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = *a3;
  unint64_t v13 = a3[1];
  uint64_t v23 = a1;
  uint64_t v27 = v14;
  unint64_t v28 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v16 = v25;
  sub_1C40573E4(v26, v15, (uint64_t *)&v29);
  swift_release();
  sub_1C3F7E2CC(v14, v13);
  *(_OWORD *)uint64_t v16 = v29;
  *(void *)&long long v29 = 0;
  sub_1C44973A8();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v26, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v19 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = type metadata accessor for SharedTagged_2();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(&v16[*(int *)(v20 + 36)], v12, v19);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  long long v29;
  _UNKNOWN **v30;
  uint64_t v31;

  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = AssociatedConformanceWitness;
  uint64_t v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v10 = type metadata accessor for CRExtensible();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = *a3;
  unint64_t v13 = a3[1];
  uint64_t v23 = a1;
  uint64_t v27 = v14;
  unint64_t v28 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v16 = v25;
  sub_1C40573E4(v26, v15, (uint64_t *)&v29);
  swift_release();
  sub_1C3F7E2CC(v14, v13);
  *(_OWORD *)uint64_t v16 = v29;
  *(void *)&long long v29 = 1;
  sub_1C44973A8();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v26, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v19 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = type metadata accessor for SharedTagged_2();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(&v16[*(int *)(v20 + 36)], v12, v19);
  }
  return result;
}

uint64_t SharedTagged_2.init(_:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *a1;
  uint64_t v3 = (char *)a1 + *(int *)(type metadata accessor for WeakTagged_2() + 36);
  uint64_t v4 = (char *)a2 + *(int *)(type metadata accessor for SharedTagged_2() + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for CRExtensible();
  return (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(v4, v3, v5);
}

uint64_t SharedTagged_2.tagged1.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_u64[0])
  {
    unint64_t v6 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  else
  {
    uint64_t v8 = *v1;
    unint64_t v9 = v2[1];
    v10.n128_u64[0] = v8;
    v10.n128_u64[1] = v9;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    unint64_t v7 = v11.n128_u64[1];
    unint64_t v6 = v11.n128_u64[0];
    uint64_t result = sub_1C3F7E324(v8, v9);
  }
  *a1 = v6;
  a1[1] = v7;
  return result;
}

uint64_t SharedTagged_2.tagged2.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_u64[0] == 1)
  {
    uint64_t v6 = *v1;
    unint64_t v7 = v2[1];
    v10.n128_u64[0] = v6;
    v10.n128_u64[1] = v7;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    unint64_t v9 = v11.n128_u64[1];
    unint64_t v8 = v11.n128_u64[0];
    uint64_t result = sub_1C3F7E324(v6, v7);
  }
  else
  {
    unint64_t v8 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  *a1 = v8;
  a1[1] = v9;
  return result;
}

uint64_t SharedTagged_2.unknown.getter@<X0>(long long *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_i64[0] >= 2)
  {
    uint64_t v7 = *v1;
    unint64_t v8 = v2[1];
    v10.n128_u64[0] = v7;
    v10.n128_u64[1] = v8;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    __n128 v9 = v11;
    uint64_t result = sub_1C3F7E324(v7, v8);
    long long v6 = (__int128)v9;
  }
  else
  {
    long long v6 = xmmword_1C449BDD0;
  }
  *a1 = v6;
  return result;
}

uint64_t SharedTagged_2.any.getter@<X0>(__n128 *a1@<X8>)
{
  uint64_t v2 = v1;
  v8.n128_u64[0] = swift_getAssociatedTypeWitness();
  v8.n128_u64[1] = swift_getAssociatedConformanceWitness();
  __n128 v9 = &protocol witness table for Int;
  uint64_t v10 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  uint64_t v5 = *v1;
  unint64_t v6 = v2[1];
  v8.n128_u64[0] = v5;
  v8.n128_u64[1] = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  a1[1].n128_u64[1] = type metadata accessor for Ref();
  a1[2].n128_u64[0] = swift_getWitnessTable();
  Ref.init(id:)(&v8, a1);
  return sub_1C3F7E324(v5, v6);
}

uint64_t SharedTagged_2.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = (unint64_t *)v4;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v28 = (unint64_t)&v25 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v9);
  uint64_t v27 = (void (*)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v25 - v10);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v11);
  uint64_t v26 = (void (*)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v25 - v12);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v33.n128_u64[0] = v13;
  v33.n128_u64[1] = AssociatedConformanceWitness;
  __n128 v34 = &protocol witness table for Int;
  uint64_t v35 = MEMORY[0x1E4FBB560];
  uint64_t v15 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v15, (uint64_t)&v36);
  if (v36 == 1)
  {
    uint64_t v19 = *v4;
    unint64_t v28 = v5[1];
    v32.n128_u64[0] = v19;
    v32.n128_u64[1] = v28;
    uint64_t v20 = swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v32, &v33);
    __n128 v21 = v33;
    __n128 v32 = v33;
    uint64_t v26 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8);
    sub_1C3F7E324(v19, v28);
    v26(&v32, v9, v20, v30, a3);
    sub_1C3F7E2CC(v21.n128_i64[0], v21.n128_u64[1]);
    swift_getAssociatedTypeWitness();
  }
  else
  {
    unint64_t v16 = v4[1];
    if (v36)
    {
      uint64_t v27 = (void (*)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))*v5;
      v32.n128_u64[0] = (unint64_t)v27;
      v32.n128_u64[1] = v16;
      uint64_t v22 = swift_getAssociatedConformanceWitness();
      Ref.init(id:)(&v32, &v33);
      __n128 v23 = v33;
      __n128 v32 = v33;
      uint64_t v26 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8);
      sub_1C3F7E324((uint64_t)v27, v16);
      v26(&v32, AssociatedTypeWitness, v22, v30, a3);
      sub_1C3F7E2CC(v23.n128_i64[0], v23.n128_u64[1]);
    }
    else
    {
      unint64_t v28 = *v5;
      v32.n128_u64[0] = v28;
      v32.n128_u64[1] = v16;
      uint64_t v17 = swift_getAssociatedConformanceWitness();
      Ref.init(id:)(&v32, &v33);
      __n128 v18 = v33;
      __n128 v32 = v33;
      uint64_t v27 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 8);
      sub_1C3F7E324(v28, v16);
      v27(&v32, v11, v17, v30, a3);
      sub_1C3F7E2CC(v18.n128_i64[0], v18.n128_u64[1]);
    }
    swift_getAssociatedTypeWitness();
  }
  return swift_dynamicCast();
}

uint64_t sub_1C4085A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  void v22[3] = a1;
  long long v22[4] = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  _OWORD v22[2] = (char *)v22 - v5;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v6);
  v22[1] = (char *)v22 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v8);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v24.n128_u64[0] = v9;
  v24.n128_u64[1] = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v11 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v11, (uint64_t)&v27);
  if (v27 == 1)
  {
    unint64_t v16 = v2[1];
    v23.n128_u64[0] = *v3;
    uint64_t v15 = v23.n128_u64[0];
    v23.n128_u64[1] = v16;
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v23, &v24);
    __n128 v17 = v24;
    __n128 v23 = v24;
    sub_1C3F7E324(v15, v16);
    type metadata accessor for Ref();
    sub_1C41F7E44();
    sub_1C3F7E2CC(v17.n128_i64[0], v17.n128_u64[1]);
    swift_getAssociatedTypeWitness();
  }
  else
  {
    if (v27)
    {
      unint64_t v19 = v2[1];
      v23.n128_u64[0] = *v3;
      uint64_t v18 = v23.n128_u64[0];
      v23.n128_u64[1] = v19;
      swift_getAssociatedConformanceWitness();
      Ref.init(id:)(&v23, &v24);
      __n128 v20 = v24;
      __n128 v23 = v24;
      sub_1C3F7E324(v18, v19);
      type metadata accessor for Ref();
      sub_1C41F7E44();
      sub_1C3F7E2CC(v20.n128_i64[0], v20.n128_u64[1]);
    }
    else
    {
      unint64_t v13 = v2[1];
      v23.n128_u64[0] = *v2;
      uint64_t v12 = v23.n128_u64[0];
      v23.n128_u64[1] = v13;
      swift_getAssociatedConformanceWitness();
      Ref.init(id:)(&v23, &v24);
      __n128 v14 = v24;
      __n128 v23 = v24;
      sub_1C3F7E324(v12, v13);
      type metadata accessor for Ref();
      sub_1C41F7E44();
      sub_1C3F7E2CC(v14.n128_i64[0], v14.n128_u64[1]);
    }
    swift_getAssociatedTypeWitness();
  }
  return swift_dynamicCast();
}

uint64_t sub_1C4085E70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v47 = a2;
  uint64_t v48 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v44 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v42 = (char *)&v38 - v5;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v41 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v40 = (char *)&v38 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v38 - v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v45 = *(void *)(v11 - 8);
  uint64_t v46 = v11;
  MEMORY[0x1F4188790](v11);
  unint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v50.n128_u64[0] = v14;
  v50.n128_u64[1] = AssociatedConformanceWitness;
  uint64_t v51 = &protocol witness table for Int;
  uint64_t v52 = MEMORY[0x1E4FBB560];
  uint64_t v16 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v16, (uint64_t)&v53);
  if (v53 == 1)
  {
    uint64_t v26 = *v2;
    unint64_t v25 = v3[1];
    v49.n128_u64[0] = v26;
    v49.n128_u64[1] = v25;
    swift_getAssociatedConformanceWitness();
    __n128 v27 = Ref.init(id:)(&v49, &v50);
    __n128 v28 = v50;
    uint64_t v30 = v45;
    uint64_t v29 = v46;
    uint64_t v31 = v48;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v45 + 16))(v13, v48, v46, v27);
    sub_1C3F7E324(v26, v25);
    uint64_t v32 = (uint64_t)v40;
    swift_dynamicCast();
    __n128 v49 = v28;
    sub_1C407C610(v32, (uint64_t)&v49, v6);
    uint64_t v33 = v41;
  }
  else
  {
    if (!v53)
    {
      uint64_t v18 = *v2;
      unint64_t v17 = v3[1];
      v49.n128_u64[0] = v18;
      v49.n128_u64[1] = v17;
      swift_getAssociatedConformanceWitness();
      __n128 v19 = Ref.init(id:)(&v49, &v50);
      unint64_t v20 = v50.n128_u64[1];
      unint64_t v44 = v50.n128_u64[0];
      uint64_t v21 = v45;
      uint64_t v22 = v46;
      uint64_t v23 = v48;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v45 + 16))(v13, v48, v46, v19);
      sub_1C3F7E324(v18, v17);
      swift_dynamicCast();
      v49.n128_u64[0] = v44;
      v49.n128_u64[1] = v20;
      sub_1C407C610((uint64_t)v10, (uint64_t)&v49, v8);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v10, v8);
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v23, v22);
    }
    uint64_t v35 = *v2;
    unint64_t v34 = v3[1];
    v49.n128_u64[0] = v35;
    v49.n128_u64[1] = v34;
    uint64_t v6 = v44;
    swift_getAssociatedConformanceWitness();
    __n128 v36 = Ref.init(id:)(&v49, &v50);
    __n128 v37 = v50;
    uint64_t v30 = v45;
    uint64_t v29 = v46;
    uint64_t v31 = v48;
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v45 + 16))(v13, v48, v46, v36);
    sub_1C3F7E324(v35, v34);
    uint64_t v32 = (uint64_t)v42;
    swift_dynamicCast();
    __n128 v49 = v37;
    sub_1C407C610(v32, (uint64_t)&v49, v6);
    uint64_t v33 = v43;
  }
  (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v6);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v31, v29);
}

uint64_t SharedTagged_2.subscript.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C40F00F8(a1, a2, (void (*)(uint64_t, uint64_t))sub_1C4085A48);
}

uint64_t sub_1C4086420(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = type metadata accessor for SharedTagged_2();
  swift_retain();
  sub_1C40F1E7C(a1, v4, v5, (uint64_t)&protocol requirements base descriptor for Tagged_2, (uint64_t)&associated type descriptor for Tagged_2.AnyType, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C4085E70);
  return swift_release();
}

uint64_t SharedTagged_2.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C40F1E7C(a1, a2, a3, (uint64_t)&protocol requirements base descriptor for Tagged_2, (uint64_t)&associated type descriptor for Tagged_2.AnyType, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C4085E70);
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v5(a1, AssociatedTypeWitness);
}

void (*SharedTagged_2.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  _OWORD v7[2] = v3;
  *uint64_t v7 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[3] = AssociatedTypeWitness;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[5] = malloc(v10);
  v7[6] = malloc(v10);
  SharedTagged_2.subscript.getter(a2, a3);
  return sub_1C4086664;
}

void sub_1C4086664(uint64_t **a1, char a2)
{
}

void sub_1C40866A0(uint64_t **a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v8 = *a1;
  uint64_t v9 = (void *)(*a1)[5];
  size_t v10 = (void *)(*a1)[6];
  uint64_t v11 = (*a1)[3];
  uint64_t v12 = (*a1)[4];
  uint64_t v13 = (*a1)[1];
  uint64_t v14 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v12 + 16))((*a1)[5], v10, v11);
    swift_retain();
    a6(v9, v14, v13, a3, a4, a5);
    swift_release();
    uint64_t v15 = *(void (**)(void *, uint64_t))(v12 + 8);
    v15(v9, v11);
    v15(v10, v11);
  }
  else
  {
    swift_retain();
    a6(v10, v14, v13, a3, a4, a5);
    swift_release();
    (*(void (**)(void *, uint64_t))(v12 + 8))(v10, v11);
  }
  free(v10);
  free(v9);
  free(v8);
}

uint64_t SharedTagged_2.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C40F0424(a1, a2, a3, a4, (uint64_t (*)(void))sub_1C4085A48);
}

uint64_t SharedTagged_2.visitReferences(_:)(void *a1)
{
  v14.n128_u64[0] = swift_getAssociatedTypeWitness();
  v14.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v15 = &protocol witness table for Int;
  uint64_t v16 = MEMORY[0x1E4FBB560];
  uint64_t v3 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v3, (uint64_t)&v17);
  uint64_t v4 = a1[4];
  uint64_t v12 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  unint64_t v5 = v1[1];
  v13.n128_u64[0] = *v1;
  uint64_t v6 = v13.n128_u64[0];
  v13.n128_u64[1] = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  Ref.init(id:)(&v13, &v14);
  __n128 v9 = v14;
  __n128 v13 = v14;
  size_t v10 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8);
  sub_1C3F7E324(v6, v5);
  v10(&v13, AssociatedTypeWitness, AssociatedConformanceWitness, v12, v4);
  return sub_1C3F7E2CC(v9.n128_i64[0], v9.n128_u64[1]);
}

uint64_t SharedTagged_2.copy(renamingReferences:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C4086A34(a1, a2, (uint64_t (*)(char *, uint64_t *, uint64_t, uint64_t))SharedTagged_2.init(_:id:), a3);
}

uint64_t sub_1C4086A34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(char *, uint64_t *, uint64_t, uint64_t)@<X5>, uint64_t a4@<X8>)
{
  uint64_t v26 = a3;
  unint64_t v5 = v4;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v29 = &protocol witness table for Int;
  uint64_t v30 = MEMORY[0x1E4FBB560];
  uint64_t v11 = type metadata accessor for CRExtensible();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  __n128 v14 = (char *)&v23 - v13;
  uint64_t v15 = *a1;
  if (*(void *)(v15 + 16))
  {
    uint64_t v25 = a4;
    uint64_t v17 = *v5;
    unint64_t v16 = v5[1];
    sub_1C3F7E324(*v5, v16);
    uint64_t v18 = sub_1C3F850CC(v17, v16);
    if (v19)
    {
      unint64_t v20 = (uint64_t *)(*(void *)(v15 + 56) + 16 * v18);
      uint64_t v21 = *v20;
      uint64_t v24 = v20[1];
      sub_1C3F7E324(v21, v24);
      sub_1C3F7E2CC(v17, v16);
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v14, (char *)v5 + *(int *)(a2 + 36), v11);
      uint64_t AssociatedTypeWitness = v21;
      uint64_t AssociatedConformanceWitness = v24;
      return v26(v14, &AssociatedTypeWitness, v10, v9);
    }
    sub_1C3F7E2CC(v17, v16);
    a4 = v25;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
}

uint64_t SharedTagged_2.copy(renamingReferences:)(unint64_t a1, uint64_t a2)
{
  return sub_1C40F04E0(a1, a2, (void (*)(unint64_t *, uint64_t))SharedTagged_2.copy(renamingReferences:));
}

uint64_t SharedTagged_2.hash(into:)(uint64_t a1)
{
  return sub_1C40F0588(a1);
}

uint64_t static SharedTagged_2.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C40F069C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_2);
}

uint64_t SharedTagged_2.hashValue.getter(uint64_t a1)
{
  return sub_1C4086CA8(a1, (void (*)(unsigned char *, uint64_t))SharedTagged_2.hash(into:));
}

uint64_t sub_1C4086CA8(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_1C44985F8();
  a2(v5, a1);
  return sub_1C4498628();
}

uint64_t sub_1C4086D08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C4086D20(a1, a2, a3, (void (*)(unsigned char *, uint64_t))SharedTagged_2.hash(into:));
}

uint64_t sub_1C4086D20(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  sub_1C44985F8();
  a4(v7, a2);
  return sub_1C4498628();
}

uint64_t sub_1C4086D74(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static SharedTagged_2.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t SharedTagged_2.encode(to:)(void *a1)
{
  return sub_1C40F0858(a1);
}

uint64_t sub_1C4086DA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return SharedTagged_2.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t SharedTagged_2.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C40C3FE8(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_2, 0, a4);
}

uint64_t sub_1C4086DF4(uint64_t a1, uint64_t a2)
{
  return SharedTagged_2.encode(to:)(a1, a2);
}

uint64_t SharedTagged_2.encode(to:)(uint64_t a1, uint64_t a2)
{
  return sub_1C4086E34(a1, a2, (uint64_t)&protocol requirements base descriptor for Tagged_2, (uint64_t)&associated type descriptor for Tagged_2.Enum, (uint64_t)&associated conformance descriptor for Tagged_2.Tagged_2.Enum: RawRepresentable);
}

uint64_t sub_1C4086E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v171 = a5;
  uint64_t v160 = a4;
  uint64_t v161 = a3;
  uint64_t v152 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v159 = (char *)&v144 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v158 = (char *)&v144 - v8;
  uint64_t v168 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v156 = *(void *)(v168 - 8);
  MEMORY[0x1F4188790](v168);
  uint64_t v166 = (char **)((char *)&v144 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v165 = type metadata accessor for Proto_Reference(0);
  uint64_t v10 = MEMORY[0x1F4188790](v165);
  uint64_t v157 = (uint64_t)&v144 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v153 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))((char *)&v144 - v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v155 = (char *)&v144 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v170 = (uint64_t)&v144 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v169 = (uint64_t)&v144 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v163 = (uint64_t)&v144 - v20;
  uint64_t v176 = type metadata accessor for Proto_Value(0);
  uint64_t v174 = *(void *)(v176 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v176);
  BOOL v167 = (char *)&v144 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v173 = (char *)&v144 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  uint64_t v154 = (uint64_t)&v144 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v144 - v28;
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v32 = (char *)&v144 - v31;
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  uint64_t v35 = (char *)&v144 - v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v151 = (uint64_t)&v144 - v36;
  uint64_t v37 = type metadata accessor for Proto_TaggedValue(0);
  uint64_t v38 = MEMORY[0x1F4188790](v37);
  uint64_t v40 = (char *)&v144 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x1F4188790](v38);
  uint64_t v43 = (char *)&v144 - v42;
  MEMORY[0x1F4188790](v41);
  uint64_t v45 = (char *)&v144 - v44;
  uint64_t v46 = v172;
  uint64_t result = sub_1C3F6DD10();
  if (v46) {
    return result;
  }
  int64_t v144 = v45;
  uint64_t v145 = v35;
  unint64_t v146 = v32;
  uint64_t v147 = v29;
  uint64_t v148 = 0;
  uint64_t v149 = v43;
  uint64_t v162 = v37;
  char v150 = v40;
  uint64_t v48 = result;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_retain();
  v175[0] = AssociatedTypeWitness;
  v175[1] = AssociatedConformanceWitness;
  v175[2] = &protocol witness table for Int;
  v175[3] = MEMORY[0x1E4FBB560];
  uint64_t v51 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v51, (uint64_t)v175);
  uint64_t v52 = v175[0];
  uint64_t v152 = v48;
  uint64_t v53 = v48 + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
  swift_beginAccess();
  uint64_t v54 = *(int *)(v176 + 20);
  uint64_t v161 = v53;
  uint64_t v55 = *(void *)(v53 + v54)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v56 = v55;
  uint64_t v57 = v151;
  sub_1C3F970C4(v56, v151, &qword_1EBBBF8A0);
  uint64_t v58 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = *(unsigned int (**)(void, void, void))(v59 + 48);
  uint64_t v171 = v59 + 48;
  uint64_t v172 = (uint64_t (*)(void, void, void))v60;
  if (v60(v57, 1, v58) == 1)
  {
    sub_1C3F962E0(v57, &qword_1EBBBF8A0);
    uint64_t v61 = v165;
    uint64_t v62 = (uint64_t)v149;
    uint64_t v63 = (uint64_t)v144;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v61 = v165;
    uint64_t v62 = (uint64_t)v149;
    uint64_t v63 = (uint64_t)v144;
    if (EnumCaseMultiPayload == 11)
    {
      sub_1C3F8ABD8(v57, (uint64_t)v144, type metadata accessor for Proto_TaggedValue);
      uint64_t v65 = v162;
      goto LABEL_10;
    }
    sub_1C3F8B0A8(v57, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v65 = v162;
  uint64_t v66 = *(int *)(v162 + 20);
  if (qword_1EA39AF70 != -1)
  {
    swift_once();
    uint64_t v65 = v162;
  }
  *(void *)(v63 + v66) = qword_1EA39AF60;
  swift_retain();
LABEL_10:
  uint64_t v67 = *(int *)(v65 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_TaggedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v68 = swift_retain();
    *(void *)(v63 + v67) = sub_1C4400A40(v68);
    swift_release();
  }
  uint64_t v69 = *(void *)(v63 + v67);
  swift_beginAccess();
  *(void *)(v69 + 16) = v52;
  uint64_t v70 = v161;
  sub_1C43F0970(v63);
  uint64_t v71 = *(void *)(v70 + v54)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v72 = v71;
  uint64_t v73 = (uint64_t)v145;
  sub_1C3F970C4(v72, (uint64_t)v145, &qword_1EBBBF8A0);
  int v74 = v172(v73, 1, v58);
  uint64_t v160 = v58;
  if (v74 == 1)
  {
    sub_1C3F962E0(v73, &qword_1EBBBF8A0);
    uint64_t v75 = v176;
    uint64_t v76 = v174;
    uint64_t v77 = (uint64_t)v153;
  }
  else
  {
    int v78 = swift_getEnumCaseMultiPayload();
    uint64_t v75 = v176;
    uint64_t v76 = v174;
    uint64_t v77 = (uint64_t)v153;
    if (v78 == 11)
    {
      uint64_t v79 = v61;
      sub_1C3F8ABD8(v73, v62, type metadata accessor for Proto_TaggedValue);
      uint64_t v80 = v162;
      goto LABEL_20;
    }
    sub_1C3F8B0A8(v73, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v80 = v162;
  uint64_t v81 = *(int *)(v162 + 20);
  if (qword_1EA39AF70 != -1)
  {
    swift_once();
    uint64_t v80 = v162;
  }
  uint64_t v79 = v61;
  *(void *)(v62 + v81) = qword_1EA39AF60;
  swift_retain();
LABEL_20:
  uint64_t v82 = *(int *)(v80 + 20);
  uint64_t v83 = *(void *)(v62 + v82)
      + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  uint64_t v84 = v83;
  uint64_t v85 = v163;
  sub_1C3F970C4(v84, v163, &qword_1EBBC0540);
  uint64_t v153 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
  uint64_t v151 = v76 + 48;
  if (v153(v85, 1, v75) == 1)
  {
    uint64_t v86 = v173;
    sub_1C4496888();
    uint64_t v87 = *(int *)(v75 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)&v86[v87] = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0(v163, &qword_1EBBC0540);
  }
  else
  {
    uint64_t v86 = v173;
    sub_1C3F8ABD8(v85, (uint64_t)v173, type metadata accessor for Proto_Value);
  }
  uint64_t v88 = *(void *)&v86[*(int *)(v75 + 20)]
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v89 = (uint64_t)v146;
  sub_1C3F970C4(v88, (uint64_t)v146, &qword_1EBBBF8A0);
  if (v172(v89, 1, v160) == 1)
  {
    sub_1C3F962E0(v89, &qword_1EBBBF8A0);
    uint64_t v90 = (uint64_t)v149;
  }
  else
  {
    BOOL v91 = swift_getEnumCaseMultiPayload() == 7;
    uint64_t v92 = v89;
    uint64_t v90 = (uint64_t)v149;
    if (v91)
    {
      sub_1C3F8ABD8(v92, v77, type metadata accessor for Proto_Reference);
      goto LABEL_33;
    }
    sub_1C3F8B0A8(v92, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v93 = *(int *)(v79 + 20);
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)(v77 + v93) = qword_1EBBBC808;
  swift_retain();
LABEL_33:
  uint64_t v94 = *(int *)(v79 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    uint64_t v95 = swift_retain();
    *(void *)(v77 + v94) = sub_1C3FB0204(v95);
    swift_release();
  }
  uint64_t v96 = *(void *)(v77 + v94);
  swift_beginAccess();
  *(void *)(v96 + 24) = 0;
  *(unsigned char *)(v96 + 32) = 1;
  sub_1C43F0BE0(v77);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_TaggedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v97 = swift_retain();
    *(void *)(v90 + v82) = sub_1C4400A40(v97);
    swift_release();
  }
  uint64_t v98 = *(void *)(v90 + v82);
  uint64_t v99 = v169;
  sub_1C3F8ABD8((uint64_t)v173, v169, type metadata accessor for Proto_Value);
  uint64_t v100 = v176;
  uint64_t v173 = *(char **)(v76 + 56);
  uint64_t v174 = v76 + 56;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v173)(v99, 0, 1, v176);
  uint64_t v101 = v170;
  sub_1C3F961BC(v99, v170, &qword_1EBBC0540);
  uint64_t v102 = v98
       + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v101, v102, &qword_1EBBC0540);
  swift_endAccess();
  swift_release();
  uint64_t v103 = v161;
  sub_1C43F0970(v90);
  swift_endAccess();
  uint64_t v104 = *v164;
  unint64_t v105 = v164[1];
  char v106 = v166;
  void *v166 = MEMORY[0x1E4FBC860];
  sub_1C3F7E324(v104, v105);
  uint64_t v107 = sub_1C4496868();
  unint64_t v109 = v108;
  sub_1C4496888();
  uint64_t v110 = v107;
  uint64_t v111 = v100;
  sub_1C3F7E2CC(v110, v109);
  v106[1] = v104;
  v106[2] = v105;
  swift_beginAccess();
  uint64_t v112 = *(void *)(v103 + *(int *)(v100 + 20))
       + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v113 = v112;
  uint64_t v114 = (uint64_t)v147;
  sub_1C3F970C4(v113, (uint64_t)v147, &qword_1EBBBF8A0);
  if (v172(v114, 1, v160) == 1)
  {
    sub_1C3F962E0(v114, &qword_1EBBBF8A0);
    uint64_t v115 = (uint64_t)v167;
    uint64_t v116 = (uint64_t)v150;
    uint64_t v117 = v165;
    uint64_t v118 = (uint64_t)v155;
  }
  else
  {
    int v119 = swift_getEnumCaseMultiPayload();
    uint64_t v115 = (uint64_t)v167;
    uint64_t v116 = (uint64_t)v150;
    uint64_t v118 = (uint64_t)v155;
    if (v119 == 11)
    {
      sub_1C3F8ABD8(v114, (uint64_t)v150, type metadata accessor for Proto_TaggedValue);
      uint64_t v117 = v165;
      uint64_t v120 = v162;
      goto LABEL_45;
    }
    sub_1C3F8B0A8(v114, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    uint64_t v117 = v165;
  }
  sub_1C4496888();
  uint64_t v120 = v162;
  uint64_t v121 = *(int *)(v162 + 20);
  if (qword_1EA39AF70 != -1)
  {
    swift_once();
    uint64_t v120 = v162;
  }
  *(void *)(v116 + v121) = qword_1EA39AF60;
  swift_retain();
LABEL_45:
  uint64_t v122 = *(int *)(v120 + 20);
  uint64_t v123 = *(void *)(v116 + v122)
       + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  sub_1C3F970C4(v123, v118, &qword_1EBBC0540);
  if (v153(v118, 1, v111) == 1)
  {
    sub_1C4496888();
    uint64_t v124 = *(int *)(v111 + 20);
    uint64_t v125 = (uint64_t)v159;
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)(v115 + v124) = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0(v118, &qword_1EBBC0540);
  }
  else
  {
    sub_1C3F8ABD8(v118, v115, type metadata accessor for Proto_Value);
    uint64_t v125 = (uint64_t)v159;
  }
  uint64_t v126 = *(void *)(v115 + *(int *)(v111 + 20))
       + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v127 = v126;
  uint64_t v128 = v154;
  sub_1C3F970C4(v127, v154, &qword_1EBBBF8A0);
  if (v172(v128, 1, v160) == 1)
  {
    sub_1C3F962E0(v128, &qword_1EBBBF8A0);
    uint64_t v129 = v170;
    uint64_t v131 = v157;
    uint64_t v130 = (uint64_t)v158;
LABEL_55:
    sub_1C4496888();
    uint64_t v133 = *(int *)(v117 + 20);
    if (qword_1EBBBC818 != -1) {
      swift_once();
    }
    *(void *)(v131 + v133) = qword_1EBBBC808;
    swift_retain();
    goto LABEL_58;
  }
  int v132 = swift_getEnumCaseMultiPayload();
  uint64_t v129 = v170;
  uint64_t v131 = v157;
  uint64_t v130 = (uint64_t)v158;
  if (v132 != 7)
  {
    sub_1C3F8B0A8(v128, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_55;
  }
  sub_1C3F8ABD8(v128, v157, type metadata accessor for Proto_Reference);
LABEL_58:
  uint64_t v134 = *(int *)(v117 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    uint64_t v135 = swift_retain();
    *(void *)(v131 + v134) = sub_1C3FB0204(v135);
    swift_release();
  }
  uint64_t v136 = *(void *)(v131 + v134);
  sub_1C3F8ABD8((uint64_t)v166, v130, type metadata accessor for Proto_KeyPath);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v156 + 56))(v130, 0, 1, v168);
  sub_1C3F961BC(v130, v125, &qword_1EBBC0560);
  uint64_t v137 = v136 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v125, v137, &qword_1EBBC0560);
  swift_endAccess();
  swift_release();
  uint64_t v138 = (uint64_t)v167;
  sub_1C43F0BE0(v131);
  uint64_t v139 = (uint64_t)v150;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_TaggedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v140 = swift_retain();
    *(void *)(v139 + v122) = sub_1C4400A40(v140);
    swift_release();
  }
  uint64_t v141 = *(void *)(v139 + v122);
  uint64_t v142 = v169;
  sub_1C3F8ABD8(v138, v169, type metadata accessor for Proto_Value);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v173)(v142, 0, 1, v176);
  sub_1C3F961BC(v142, v129, &qword_1EBBC0540);
  uint64_t v143 = v141
       + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v129, v143, &qword_1EBBC0540);
  swift_endAccess();
  swift_release();
  sub_1C43F0970(v139);
  swift_endAccess();
  return swift_release();
}

uint64_t (*SharedTagged_3.id.modify())()
{
  return nullsub_1;
}

uint64_t SharedTagged_3.tag.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C40EA434(a1, a2);
}

uint64_t SharedTagged_3.tag.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C40EA528(a1, a2);
}

uint64_t (*SharedTagged_3.tag.modify())()
{
  return nullsub_1;
}

uint64_t SharedTagged_3.init(_:identity:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C4081DCC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, long long *))SharedTagged_3.init(_:id:));
}

{
  return sub_1C4081DCC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, long long *))SharedTagged_3.init(_:id:));
}

uint64_t SharedTagged_3.init(_:id:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1C40EA66C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_3, a5);
}

{
  return sub_1C40EA7CC(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_3, a5);
}

uint64_t SharedTagged_3.init<A>(_:_:)@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v21 = AssociatedTypeWitness;
  *((void *)&v21 + 1) = AssociatedConformanceWitness;
  uint64_t v22 = &protocol witness table for Int;
  uint64_t v23 = MEMORY[0x1E4FBB560];
  uint64_t v7 = type metadata accessor for CRExtensible();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  long long v20 = xmmword_1C449BDD0;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v11 = v18;
  sub_1C40573E4(v19, v10, (uint64_t *)&v21);
  swift_release();
  *(_OWORD *)uint64_t v11 = v21;
  *(void *)&long long v21 = 0;
  sub_1C44973A8();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, AssociatedTypeWitness);
    uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for SharedTagged_3();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&v11[*(int *)(v15 + 36)], v9, v14);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  long long v20;
  long long v21;
  _UNKNOWN **v22;
  uint64_t v23;

  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v21 = AssociatedTypeWitness;
  *((void *)&v21 + 1) = AssociatedConformanceWitness;
  uint64_t v22 = &protocol witness table for Int;
  uint64_t v23 = MEMORY[0x1E4FBB560];
  uint64_t v7 = type metadata accessor for CRExtensible();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  long long v20 = xmmword_1C449BDD0;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v11 = v18;
  sub_1C40573E4(v19, v10, (uint64_t *)&v21);
  swift_release();
  *(_OWORD *)uint64_t v11 = v21;
  *(void *)&long long v21 = 1;
  sub_1C44973A8();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, AssociatedTypeWitness);
    uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for SharedTagged_3();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&v11[*(int *)(v15 + 36)], v9, v14);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  long long v20;
  long long v21;
  _UNKNOWN **v22;
  uint64_t v23;

  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v16 - v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v21 = AssociatedTypeWitness;
  *((void *)&v21 + 1) = AssociatedConformanceWitness;
  uint64_t v22 = &protocol witness table for Int;
  uint64_t v23 = MEMORY[0x1E4FBB560];
  uint64_t v7 = type metadata accessor for CRExtensible();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v16 - v8;
  long long v20 = xmmword_1C449BDD0;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v11 = v18;
  sub_1C40573E4(v19, v10, (uint64_t *)&v21);
  swift_release();
  *(_OWORD *)uint64_t v11 = v21;
  *(void *)&long long v21 = 2;
  sub_1C44973A8();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, AssociatedTypeWitness);
    uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for SharedTagged_3();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&v11[*(int *)(v15 + 36)], v9, v14);
  }
  return result;
}

uint64_t SharedTagged_3.init<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = AssociatedTypeWitness;
  *((void *)&v24 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v9 = type metadata accessor for CRExtensible();
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v20 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_1C4055CC4(a2);
  swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v21 = a2;
  Capsule<>.rootID.getter((uint64_t *)&v24);
  *(_OWORD *)uint64_t v12 = v24;
  *(void *)&long long v24 = 0;
  sub_1C44973A8();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v21, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v8, AssociatedTypeWitness);
    uint64_t v16 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = type metadata accessor for SharedTagged_3();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&v12[*(int *)(v17 + 36)], v11, v16);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  char *v23;
  long long v24;
  _UNKNOWN **v25;
  uint64_t v26;

  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = AssociatedTypeWitness;
  *((void *)&v24 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v9 = type metadata accessor for CRExtensible();
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v20 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_1C4055CC4(a2);
  swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v21 = a2;
  Capsule<>.rootID.getter((uint64_t *)&v24);
  *(_OWORD *)uint64_t v12 = v24;
  *(void *)&long long v24 = 1;
  sub_1C44973A8();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v21, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v8, AssociatedTypeWitness);
    uint64_t v16 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = type metadata accessor for SharedTagged_3();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&v12[*(int *)(v17 + 36)], v11, v16);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  char *v23;
  long long v24;
  _UNKNOWN **v25;
  uint64_t v26;

  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = AssociatedTypeWitness;
  *((void *)&v24 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v9 = type metadata accessor for CRExtensible();
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v20 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_1C4055CC4(a2);
  swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v21 = a2;
  Capsule<>.rootID.getter((uint64_t *)&v24);
  *(_OWORD *)uint64_t v12 = v24;
  *(void *)&long long v24 = 2;
  sub_1C44973A8();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v21, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v8, AssociatedTypeWitness);
    uint64_t v16 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = type metadata accessor for SharedTagged_3();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&v12[*(int *)(v17 + 36)], v11, v16);
  }
  return result;
}

uint64_t SharedTagged_3.init<A>(_:_:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = AssociatedConformanceWitness;
  uint64_t v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v10 = type metadata accessor for CRExtensible();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = *a3;
  unint64_t v13 = a3[1];
  uint64_t v23 = a1;
  uint64_t v27 = v14;
  unint64_t v28 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v16 = v25;
  sub_1C40573E4(v26, v15, (uint64_t *)&v29);
  swift_release();
  sub_1C3F7E2CC(v14, v13);
  *(_OWORD *)uint64_t v16 = v29;
  *(void *)&long long v29 = 0;
  sub_1C44973A8();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v26, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v19 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = type metadata accessor for SharedTagged_3();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(&v16[*(int *)(v20 + 36)], v12, v19);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  long long v29;
  _UNKNOWN **v30;
  uint64_t v31;

  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = AssociatedConformanceWitness;
  uint64_t v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v10 = type metadata accessor for CRExtensible();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = *a3;
  unint64_t v13 = a3[1];
  uint64_t v23 = a1;
  uint64_t v27 = v14;
  unint64_t v28 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v16 = v25;
  sub_1C40573E4(v26, v15, (uint64_t *)&v29);
  swift_release();
  sub_1C3F7E2CC(v14, v13);
  *(_OWORD *)uint64_t v16 = v29;
  *(void *)&long long v29 = 1;
  sub_1C44973A8();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v26, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v19 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = type metadata accessor for SharedTagged_3();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(&v16[*(int *)(v20 + 36)], v12, v19);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  long long v29;
  _UNKNOWN **v30;
  uint64_t v31;

  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = AssociatedConformanceWitness;
  uint64_t v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v10 = type metadata accessor for CRExtensible();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = *a3;
  unint64_t v13 = a3[1];
  uint64_t v23 = a1;
  uint64_t v27 = v14;
  unint64_t v28 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v16 = v25;
  sub_1C40573E4(v26, v15, (uint64_t *)&v29);
  swift_release();
  sub_1C3F7E2CC(v14, v13);
  *(_OWORD *)uint64_t v16 = v29;
  *(void *)&long long v29 = 2;
  sub_1C44973A8();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v26, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v19 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = type metadata accessor for SharedTagged_3();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(&v16[*(int *)(v20 + 36)], v12, v19);
  }
  return result;
}

uint64_t SharedTagged_3.init(_:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *a1;
  uint64_t v3 = (char *)a1 + *(int *)(type metadata accessor for WeakTagged_3() + 36);
  uint64_t v4 = (char *)a2 + *(int *)(type metadata accessor for SharedTagged_3() + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for CRExtensible();
  return (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(v4, v3, v5);
}

uint64_t SharedTagged_3.tagged1.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_u64[0])
  {
    unint64_t v6 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  else
  {
    uint64_t v8 = *v1;
    unint64_t v9 = v2[1];
    v10.n128_u64[0] = v8;
    v10.n128_u64[1] = v9;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    unint64_t v7 = v11.n128_u64[1];
    unint64_t v6 = v11.n128_u64[0];
    uint64_t result = sub_1C3F7E324(v8, v9);
  }
  *a1 = v6;
  a1[1] = v7;
  return result;
}

uint64_t SharedTagged_3.tagged2.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_u64[0] == 1)
  {
    uint64_t v6 = *v1;
    unint64_t v7 = v2[1];
    v10.n128_u64[0] = v6;
    v10.n128_u64[1] = v7;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    unint64_t v9 = v11.n128_u64[1];
    unint64_t v8 = v11.n128_u64[0];
    uint64_t result = sub_1C3F7E324(v6, v7);
  }
  else
  {
    unint64_t v8 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  *a1 = v8;
  a1[1] = v9;
  return result;
}

uint64_t SharedTagged_3.tagged3.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_u64[0] == 2)
  {
    uint64_t v6 = *v1;
    unint64_t v7 = v2[1];
    v10.n128_u64[0] = v6;
    v10.n128_u64[1] = v7;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    unint64_t v9 = v11.n128_u64[1];
    unint64_t v8 = v11.n128_u64[0];
    uint64_t result = sub_1C3F7E324(v6, v7);
  }
  else
  {
    unint64_t v8 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  *a1 = v8;
  a1[1] = v9;
  return result;
}

uint64_t SharedTagged_3.unknown.getter@<X0>(long long *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_i64[0] >= 3)
  {
    uint64_t v7 = *v1;
    unint64_t v8 = v2[1];
    v10.n128_u64[0] = v7;
    v10.n128_u64[1] = v8;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    __n128 v9 = v11;
    uint64_t result = sub_1C3F7E324(v7, v8);
    long long v6 = (__int128)v9;
  }
  else
  {
    long long v6 = xmmword_1C449BDD0;
  }
  *a1 = v6;
  return result;
}

uint64_t SharedTagged_3.any.getter@<X0>(__n128 *a1@<X8>)
{
  uint64_t v2 = v1;
  v8.n128_u64[0] = swift_getAssociatedTypeWitness();
  v8.n128_u64[1] = swift_getAssociatedConformanceWitness();
  __n128 v9 = &protocol witness table for Int;
  uint64_t v10 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  uint64_t v5 = *v1;
  unint64_t v6 = v2[1];
  v8.n128_u64[0] = v5;
  v8.n128_u64[1] = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  a1[1].n128_u64[1] = type metadata accessor for Ref();
  a1[2].n128_u64[0] = swift_getWitnessTable();
  Ref.init(id:)(&v8, a1);
  return sub_1C3F7E324(v5, v6);
}

uint64_t SharedTagged_3.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = (unint64_t *)v4;
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v38 = a1;
  uint64_t v41 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v37 = (unint64_t)&v33 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v7);
  uint64_t v36 = (void (*)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v33 - v8);
  uint64_t v9 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v9);
  uint64_t v35 = (void (*)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v33 - v10);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v11);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v43.n128_u64[0] = v12;
  v43.n128_u64[1] = AssociatedConformanceWitness;
  uint64_t v44 = &protocol witness table for Int;
  uint64_t v45 = MEMORY[0x1E4FBB560];
  uint64_t v14 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v14, (uint64_t)&v46);
  if (v46 == 2)
  {
    uint64_t v19 = *v4;
    unint64_t v37 = v5[1];
    v42.n128_u64[0] = v19;
    v42.n128_u64[1] = v37;
    uint64_t v20 = swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v42, &v43);
    __n128 v21 = v43;
    __n128 v42 = v43;
    uint64_t v22 = v40;
    uint64_t v35 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8);
    sub_1C3F7E324(v19, v37);
    v35(&v42, v7, v20, v39, v22);
    sub_1C3F7E2CC(v21.n128_i64[0], v21.n128_u64[1]);
    swift_getAssociatedTypeWitness();
  }
  else if (v46 == 1)
  {
    unint64_t v23 = v4[1];
    unint64_t v37 = *v5;
    v42.n128_u64[0] = v37;
    v42.n128_u64[1] = v23;
    uint64_t v24 = swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v42, &v43);
    __n128 v25 = v43;
    __n128 v42 = v43;
    uint64_t v26 = v40;
    uint64_t v36 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8);
    sub_1C3F7E324(v37, v23);
    v36(&v42, v9, v24, v39, v26);
    sub_1C3F7E2CC(v25.n128_i64[0], v25.n128_u64[1]);
    swift_getAssociatedTypeWitness();
  }
  else
  {
    if (v46)
    {
      unint64_t v27 = v4[1];
      uint64_t v36 = (void (*)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))*v5;
      v42.n128_u64[0] = (unint64_t)v36;
      v42.n128_u64[1] = v27;
      uint64_t v28 = AssociatedTypeWitness;
      uint64_t v29 = swift_getAssociatedConformanceWitness();
      Ref.init(id:)(&v42, &v43);
      __n128 v30 = v43;
      __n128 v42 = v43;
      uint64_t v31 = v40;
      uint64_t v35 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8);
      sub_1C3F7E324((uint64_t)v36, v27);
      v35(&v42, v28, v29, v39, v31);
      sub_1C3F7E2CC(v30.n128_i64[0], v30.n128_u64[1]);
    }
    else
    {
      unint64_t v15 = *v4;
      uint64_t v36 = (void (*)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))v4[1];
      unint64_t v37 = v15;
      v42.n128_u64[0] = v15;
      v42.n128_u64[1] = (unint64_t)v36;
      uint64_t v16 = swift_getAssociatedConformanceWitness();
      Ref.init(id:)(&v42, &v43);
      __n128 v17 = v43;
      __n128 v42 = v43;
      uint64_t v18 = v40;
      uint64_t v35 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8);
      sub_1C3F7E324(v37, (unint64_t)v36);
      v35(&v42, v11, v16, v39, v18);
      sub_1C3F7E2CC(v17.n128_i64[0], v17.n128_u64[1]);
    }
    swift_getAssociatedTypeWitness();
  }
  return swift_dynamicCast();
}

uint64_t sub_1C408A9BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v26 = a1;
  uint64_t v27 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  void v24[3] = (char *)v24 - v4;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v5);
  uint64_t v24[2] = (char *)v24 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v7);
  v24[1] = (char *)v24 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v9);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v29.n128_u64[0] = v10;
  v29.n128_u64[1] = AssociatedConformanceWitness;
  __n128 v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v12 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v12, (uint64_t)&v32);
  if (v32 == 2)
  {
    unint64_t v17 = v2[1];
    v28.n128_u64[0] = *v3;
    uint64_t v16 = v28.n128_u64[0];
    v28.n128_u64[1] = v17;
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v28, &v29);
    __n128 v18 = v29;
    __n128 v28 = v29;
    sub_1C3F7E324(v16, v17);
    type metadata accessor for Ref();
    sub_1C41F7E44();
    sub_1C3F7E2CC(v18.n128_i64[0], v18.n128_u64[1]);
    swift_getAssociatedTypeWitness();
  }
  else if (v32 == 1)
  {
    unint64_t v20 = v2[1];
    v28.n128_u64[0] = *v2;
    uint64_t v19 = v28.n128_u64[0];
    v28.n128_u64[1] = v20;
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v28, &v29);
    __n128 v21 = v29;
    __n128 v28 = v29;
    sub_1C3F7E324(v19, v20);
    type metadata accessor for Ref();
    sub_1C41F7E44();
    sub_1C3F7E2CC(v21.n128_i64[0], v21.n128_u64[1]);
    swift_getAssociatedTypeWitness();
  }
  else
  {
    unint64_t v14 = v2[1];
    v28.n128_u64[0] = *v3;
    uint64_t v13 = v28.n128_u64[0];
    v28.n128_u64[1] = v14;
    if (v32)
    {
      swift_getAssociatedConformanceWitness();
      Ref.init(id:)(&v28, &v29);
      __n128 v22 = v29;
      __n128 v28 = v29;
      sub_1C3F7E324(v13, v14);
      type metadata accessor for Ref();
      sub_1C41F7E44();
      sub_1C3F7E2CC(v22.n128_i64[0], v22.n128_u64[1]);
    }
    else
    {
      swift_getAssociatedConformanceWitness();
      Ref.init(id:)(&v28, &v29);
      __n128 v15 = v29;
      __n128 v28 = v29;
      sub_1C3F7E324(v13, v14);
      type metadata accessor for Ref();
      sub_1C41F7E44();
      sub_1C3F7E2CC(v15.n128_i64[0], v15.n128_u64[1]);
    }
    swift_getAssociatedTypeWitness();
  }
  return swift_dynamicCast();
}

uint64_t sub_1C408AEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v61 = a2;
  uint64_t v62 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v58 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v56 = (char *)&v49 - v5;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(v6 - 8);
  uint64_t v55 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v53 = (char *)&v49 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v51 = (char *)&v49 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v49 - v11;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(v13 - 8);
  uint64_t v60 = v13;
  MEMORY[0x1F4188790](v13);
  __n128 v15 = (char *)&v49 - v14;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v64.n128_u64[0] = v16;
  v64.n128_u64[1] = AssociatedConformanceWitness;
  uint64_t v65 = &protocol witness table for Int;
  uint64_t v66 = MEMORY[0x1E4FBB560];
  uint64_t v18 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v18, (uint64_t)&v67);
  switch(v67)
  {
    case 2:
      unint64_t v28 = v2[1];
      v63.n128_u64[0] = *v3;
      uint64_t v27 = v63.n128_u64[0];
      v63.n128_u64[1] = v28;
      uint64_t v29 = v55;
      swift_getAssociatedConformanceWitness();
      __n128 v30 = Ref.init(id:)(&v63, &v64);
      __n128 v31 = v64;
      uint64_t v33 = v59;
      uint64_t v32 = v60;
      uint64_t v34 = v62;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v59 + 16))(v15, v62, v60, v30);
      sub_1C3F7E324(v27, v28);
      uint64_t v35 = (uint64_t)v53;
      swift_dynamicCast();
      __n128 v63 = v31;
      sub_1C407C610(v35, (uint64_t)&v63, v29);
      uint64_t v36 = v54;
      break;
    case 1:
      unint64_t v38 = v2[1];
      v63.n128_u64[0] = *v3;
      uint64_t v37 = v63.n128_u64[0];
      v63.n128_u64[1] = v38;
      swift_getAssociatedConformanceWitness();
      __n128 v39 = Ref.init(id:)(&v63, &v64);
      __n128 v40 = v64;
      uint64_t v42 = v59;
      uint64_t v41 = v60;
      uint64_t v43 = v62;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v59 + 16))(v15, v62, v60, v39);
      sub_1C3F7E324(v37, v38);
      uint64_t v44 = (uint64_t)v51;
      swift_dynamicCast();
      __n128 v63 = v40;
      sub_1C407C610(v44, (uint64_t)&v63, v8);
      (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v44, v8);
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v43, v41);
    case 0:
      unint64_t v20 = v2[1];
      v63.n128_u64[0] = *v3;
      uint64_t v19 = v63.n128_u64[0];
      v63.n128_u64[1] = v20;
      swift_getAssociatedConformanceWitness();
      __n128 v21 = Ref.init(id:)(&v63, &v64);
      unint64_t v22 = v64.n128_u64[1];
      unint64_t v58 = v64.n128_u64[0];
      uint64_t v23 = v59;
      uint64_t v24 = v60;
      uint64_t v25 = v62;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v59 + 16))(v15, v62, v60, v21);
      sub_1C3F7E324(v19, v20);
      swift_dynamicCast();
      v63.n128_u64[0] = v58;
      v63.n128_u64[1] = v22;
      sub_1C407C610((uint64_t)v12, (uint64_t)&v63, v10);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v10);
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 8))(v25, v24);
    default:
      unint64_t v46 = v2[1];
      v63.n128_u64[0] = *v3;
      uint64_t v45 = v63.n128_u64[0];
      v63.n128_u64[1] = v46;
      uint64_t v29 = v58;
      swift_getAssociatedConformanceWitness();
      __n128 v47 = Ref.init(id:)(&v63, &v64);
      __n128 v48 = v64;
      uint64_t v33 = v59;
      uint64_t v32 = v60;
      uint64_t v34 = v62;
      (*(void (**)(char *, uint64_t, uint64_t, __n128))(v59 + 16))(v15, v62, v60, v47);
      sub_1C3F7E324(v45, v46);
      uint64_t v35 = (uint64_t)v56;
      swift_dynamicCast();
      __n128 v63 = v48;
      sub_1C407C610(v35, (uint64_t)&v63, v29);
      uint64_t v36 = v57;
      break;
  }
  (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v29);
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v33 + 8))(v34, v32);
}

uint64_t SharedTagged_3.subscript.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C40F00F8(a1, a2, (void (*)(uint64_t, uint64_t))sub_1C408A9BC);
}

uint64_t sub_1C408B62C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = type metadata accessor for SharedTagged_3();
  swift_retain();
  sub_1C40F1E7C(a1, v4, v5, (uint64_t)&protocol requirements base descriptor for Tagged_3, (uint64_t)&associated type descriptor for Tagged_3.AnyType, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C408AEF8);
  return swift_release();
}

uint64_t SharedTagged_3.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C40F1E7C(a1, a2, a3, (uint64_t)&protocol requirements base descriptor for Tagged_3, (uint64_t)&associated type descriptor for Tagged_3.AnyType, (uint64_t (*)(char *, uint64_t, uint64_t))sub_1C408AEF8);
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  return v5(a1, AssociatedTypeWitness);
}

void (*SharedTagged_3.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  v7[1] = a3;
  _OWORD v7[2] = v3;
  *uint64_t v7 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[3] = AssociatedTypeWitness;
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[5] = malloc(v10);
  v7[6] = malloc(v10);
  SharedTagged_3.subscript.getter(a2, a3);
  return sub_1C408B870;
}

void sub_1C408B870(uint64_t **a1, char a2)
{
}

uint64_t SharedTagged_3.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C40F0424(a1, a2, a3, a4, (uint64_t (*)(void))sub_1C408A9BC);
}

uint64_t SharedTagged_3.visitReferences(_:)(void *a1)
{
  v14.n128_u64[0] = swift_getAssociatedTypeWitness();
  v14.n128_u64[1] = swift_getAssociatedConformanceWitness();
  __n128 v15 = &protocol witness table for Int;
  uint64_t v16 = MEMORY[0x1E4FBB560];
  uint64_t v3 = type metadata accessor for CRExtensible();
  CRExtensible.rawValue.getter(v3, (uint64_t)&v17);
  uint64_t v4 = a1[4];
  uint64_t v12 = a1[3];
  __swift_project_boxed_opaque_existential_1(a1, v12);
  unint64_t v5 = v1[1];
  v13.n128_u64[0] = *v1;
  uint64_t v6 = v13.n128_u64[0];
  v13.n128_u64[1] = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  Ref.init(id:)(&v13, &v14);
  __n128 v9 = v14;
  __n128 v13 = v14;
  size_t v10 = *(void (**)(__n128 *, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8);
  sub_1C3F7E324(v6, v5);
  v10(&v13, AssociatedTypeWitness, AssociatedConformanceWitness, v12, v4);
  return sub_1C3F7E2CC(v9.n128_i64[0], v9.n128_u64[1]);
}

uint64_t SharedTagged_3.copy(renamingReferences:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1C4086A34(a1, a2, (uint64_t (*)(char *, uint64_t *, uint64_t, uint64_t))SharedTagged_3.init(_:id:), a3);
}

uint64_t SharedTagged_3.copy(renamingReferences:)(unint64_t a1, uint64_t a2)
{
  return sub_1C40F04E0(a1, a2, (void (*)(unint64_t *, uint64_t))SharedTagged_3.copy(renamingReferences:));
}

uint64_t SharedTagged_3.hash(into:)(uint64_t a1)
{
  return sub_1C40F0588(a1);
}

uint64_t static SharedTagged_3.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C40F069C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_3);
}

uint64_t SharedTagged_3.hashValue.getter(uint64_t a1)
{
  return sub_1C4086CA8(a1, (void (*)(unsigned char *, uint64_t))SharedTagged_3.hash(into:));
}

uint64_t sub_1C408BBA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C4086D20(a1, a2, a3, (void (*)(unsigned char *, uint64_t))SharedTagged_3.hash(into:));
}

uint64_t sub_1C408BBC0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return static SharedTagged_3.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

uint64_t SharedTagged_3.encode(to:)(void *a1)
{
  return sub_1C40F0858(a1);
}

uint64_t sub_1C408BBF0@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return SharedTagged_3.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t SharedTagged_3.init(from:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  return sub_1C40C8BE4(a1, a2, a3, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_3, 0, a4);
}

uint64_t sub_1C408BC40(uint64_t a1, uint64_t a2)
{
  return SharedTagged_3.encode(to:)(a1, a2);
}

uint64_t SharedTagged_3.encode(to:)(uint64_t a1, uint64_t a2)
{
  return sub_1C4086E34(a1, a2, (uint64_t)&protocol requirements base descriptor for Tagged_3, (uint64_t)&associated type descriptor for Tagged_3.Enum, (uint64_t)&associated conformance descriptor for Tagged_3.Tagged_3.Enum: RawRepresentable);
}

uint64_t (*SharedTagged_4.id.modify())()
{
  return nullsub_1;
}

uint64_t SharedTagged_4.tag.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C40EA434(a1, a2);
}

uint64_t SharedTagged_4.tag.setter(uint64_t a1, uint64_t a2)
{
  return sub_1C40EA528(a1, a2);
}

uint64_t (*SharedTagged_4.tag.modify())()
{
  return nullsub_1;
}

uint64_t SharedTagged_4.init(_:identity:)(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  return sub_1C4081DCC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, long long *))SharedTagged_4.init(_:id:));
}

{
  return sub_1C4081DCC(a1, a2, a3, a4, (uint64_t (*)(uint64_t, long long *))SharedTagged_4.init(_:id:));
}

uint64_t SharedTagged_4.init(_:id:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1C40EA66C(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_4, a5);
}

{
  return sub_1C40EA7CC(a1, a2, a3, a4, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for SharedTagged_4, a5);
}

uint64_t SharedTagged_4.init<A>(_:_:)@<X0>(uint64_t a1@<X1>, char *a2@<X8>)
{
  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v16 - v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v21 = AssociatedTypeWitness;
  *((void *)&v21 + 1) = AssociatedConformanceWitness;
  unint64_t v22 = &protocol witness table for Int;
  uint64_t v23 = MEMORY[0x1E4FBB560];
  uint64_t v7 = type metadata accessor for CRExtensible();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  __n128 v9 = (char *)&v16 - v8;
  long long v20 = xmmword_1C449BDD0;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v11 = v18;
  sub_1C40573E4(v19, v10, (uint64_t *)&v21);
  swift_release();
  *(_OWORD *)uint64_t v11 = v21;
  *(void *)&long long v21 = 0;
  sub_1C44973A8();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, AssociatedTypeWitness);
    uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&v11[*(int *)(v15 + 36)], v9, v14);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  long long v20;
  long long v21;
  _UNKNOWN **v22;
  uint64_t v23;

  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v16 - v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v21 = AssociatedTypeWitness;
  *((void *)&v21 + 1) = AssociatedConformanceWitness;
  unint64_t v22 = &protocol witness table for Int;
  uint64_t v23 = MEMORY[0x1E4FBB560];
  uint64_t v7 = type metadata accessor for CRExtensible();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  __n128 v9 = (char *)&v16 - v8;
  long long v20 = xmmword_1C449BDD0;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v11 = v18;
  sub_1C40573E4(v19, v10, (uint64_t *)&v21);
  swift_release();
  *(_OWORD *)uint64_t v11 = v21;
  *(void *)&long long v21 = 1;
  sub_1C44973A8();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, AssociatedTypeWitness);
    uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&v11[*(int *)(v15 + 36)], v9, v14);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  long long v20;
  long long v21;
  _UNKNOWN **v22;
  uint64_t v23;

  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v16 - v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v21 = AssociatedTypeWitness;
  *((void *)&v21 + 1) = AssociatedConformanceWitness;
  unint64_t v22 = &protocol witness table for Int;
  uint64_t v23 = MEMORY[0x1E4FBB560];
  uint64_t v7 = type metadata accessor for CRExtensible();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  __n128 v9 = (char *)&v16 - v8;
  long long v20 = xmmword_1C449BDD0;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v11 = v18;
  sub_1C40573E4(v19, v10, (uint64_t *)&v21);
  swift_release();
  *(_OWORD *)uint64_t v11 = v21;
  *(void *)&long long v21 = 2;
  sub_1C44973A8();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, AssociatedTypeWitness);
    uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&v11[*(int *)(v15 + 36)], v9, v14);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t AssociatedConformanceWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  long long v20;
  long long v21;
  _UNKNOWN **v22;
  uint64_t v23;

  uint64_t v18 = a2;
  uint64_t v19 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v16 - v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v21 = AssociatedTypeWitness;
  *((void *)&v21 + 1) = AssociatedConformanceWitness;
  unint64_t v22 = &protocol witness table for Int;
  uint64_t v23 = MEMORY[0x1E4FBB560];
  uint64_t v7 = type metadata accessor for CRExtensible();
  uint64_t v16 = *(void *)(v7 - 8);
  uint64_t v17 = v7;
  MEMORY[0x1F4188790](v7);
  __n128 v9 = (char *)&v16 - v8;
  long long v20 = xmmword_1C449BDD0;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v11 = v18;
  sub_1C40573E4(v19, v10, (uint64_t *)&v21);
  swift_release();
  *(_OWORD *)uint64_t v11 = v21;
  *(void *)&long long v21 = 3;
  sub_1C44973A8();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48))(v5, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v19, v10);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v5, AssociatedTypeWitness);
    uint64_t v14 = v17;
    swift_storeEnumTagMultiPayload();
    uint64_t v15 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v16 + 32))(&v11[*(int *)(v15 + 36)], v9, v14);
  }
  return result;
}

uint64_t SharedTagged_4.init<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = AssociatedTypeWitness;
  *((void *)&v24 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v9 = type metadata accessor for CRExtensible();
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v20 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_1C4055CC4(a2);
  swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v21 = a2;
  Capsule<>.rootID.getter((uint64_t *)&v24);
  *(_OWORD *)uint64_t v12 = v24;
  *(void *)&long long v24 = 0;
  sub_1C44973A8();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v21, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v8, AssociatedTypeWitness);
    uint64_t v16 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&v12[*(int *)(v17 + 36)], v11, v16);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  char *v23;
  long long v24;
  _UNKNOWN **v25;
  uint64_t v26;

  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = AssociatedTypeWitness;
  *((void *)&v24 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v9 = type metadata accessor for CRExtensible();
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v20 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_1C4055CC4(a2);
  swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v21 = a2;
  Capsule<>.rootID.getter((uint64_t *)&v24);
  *(_OWORD *)uint64_t v12 = v24;
  *(void *)&long long v24 = 1;
  sub_1C44973A8();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v21, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v8, AssociatedTypeWitness);
    uint64_t v16 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&v12[*(int *)(v17 + 36)], v11, v16);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  char *v23;
  long long v24;
  _UNKNOWN **v25;
  uint64_t v26;

  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = AssociatedTypeWitness;
  *((void *)&v24 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v9 = type metadata accessor for CRExtensible();
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v20 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_1C4055CC4(a2);
  swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v21 = a2;
  Capsule<>.rootID.getter((uint64_t *)&v24);
  *(_OWORD *)uint64_t v12 = v24;
  *(void *)&long long v24 = 2;
  sub_1C44973A8();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v21, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v8, AssociatedTypeWitness);
    uint64_t v16 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&v12[*(int *)(v17 + 36)], v11, v16);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  char *v23;
  long long v24;
  _UNKNOWN **v25;
  uint64_t v26;

  uint64_t v23 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v24 = AssociatedTypeWitness;
  *((void *)&v24 + 1) = AssociatedConformanceWitness;
  uint64_t v25 = &protocol witness table for Int;
  uint64_t v26 = MEMORY[0x1E4FBB560];
  uint64_t v9 = type metadata accessor for CRExtensible();
  uint64_t v18 = *(void *)(v9 - 8);
  uint64_t v19 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v20 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  sub_1C4055CC4(a2);
  swift_release();
  uint64_t v12 = v23;
  uint64_t v13 = type metadata accessor for Capsule();
  uint64_t v21 = a2;
  Capsule<>.rootID.getter((uint64_t *)&v24);
  *(_OWORD *)uint64_t v12 = v24;
  *(void *)&long long v24 = 3;
  sub_1C44973A8();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v8, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v21, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v8, AssociatedTypeWitness);
    uint64_t v16 = v19;
    swift_storeEnumTagMultiPayload();
    uint64_t v17 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v18 + 32))(&v12[*(int *)(v17 + 36)], v11, v16);
  }
  return result;
}

uint64_t SharedTagged_4.init<A>(_:_:id:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, char *a4@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = AssociatedConformanceWitness;
  __n128 v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v10 = type metadata accessor for CRExtensible();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = *a3;
  unint64_t v13 = a3[1];
  uint64_t v23 = a1;
  uint64_t v27 = v14;
  unint64_t v28 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v16 = v25;
  sub_1C40573E4(v26, v15, (uint64_t *)&v29);
  swift_release();
  sub_1C3F7E2CC(v14, v13);
  *(_OWORD *)uint64_t v16 = v29;
  *(void *)&long long v29 = 0;
  sub_1C44973A8();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v26, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v19 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(&v16[*(int *)(v20 + 36)], v12, v19);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  long long v29;
  _UNKNOWN **v30;
  uint64_t v31;

  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = AssociatedConformanceWitness;
  __n128 v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v10 = type metadata accessor for CRExtensible();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = *a3;
  unint64_t v13 = a3[1];
  uint64_t v23 = a1;
  uint64_t v27 = v14;
  unint64_t v28 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v16 = v25;
  sub_1C40573E4(v26, v15, (uint64_t *)&v29);
  swift_release();
  sub_1C3F7E2CC(v14, v13);
  *(_OWORD *)uint64_t v16 = v29;
  *(void *)&long long v29 = 1;
  sub_1C44973A8();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v26, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v19 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(&v16[*(int *)(v20 + 36)], v12, v19);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  long long v29;
  _UNKNOWN **v30;
  uint64_t v31;

  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = AssociatedConformanceWitness;
  __n128 v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v10 = type metadata accessor for CRExtensible();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = *a3;
  unint64_t v13 = a3[1];
  uint64_t v23 = a1;
  uint64_t v27 = v14;
  unint64_t v28 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v16 = v25;
  sub_1C40573E4(v26, v15, (uint64_t *)&v29);
  swift_release();
  sub_1C3F7E2CC(v14, v13);
  *(_OWORD *)uint64_t v16 = v29;
  *(void *)&long long v29 = 2;
  sub_1C44973A8();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v26, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v19 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(&v16[*(int *)(v20 + 36)], v12, v19);
  }
  return result;
}

{
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t AssociatedConformanceWitness;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  long long v29;
  _UNKNOWN **v30;
  uint64_t v31;

  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = AssociatedConformanceWitness;
  __n128 v30 = &protocol witness table for Int;
  uint64_t v31 = MEMORY[0x1E4FBB560];
  uint64_t v10 = type metadata accessor for CRExtensible();
  uint64_t v21 = *(void *)(v10 - 8);
  uint64_t v22 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v21 - v11;
  uint64_t v14 = *a3;
  unint64_t v13 = a3[1];
  uint64_t v23 = a1;
  uint64_t v27 = v14;
  unint64_t v28 = v13;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v16 = v25;
  sub_1C40573E4(v26, v15, (uint64_t *)&v29);
  swift_release();
  sub_1C3F7E2CC(v14, v13);
  *(_OWORD *)uint64_t v16 = v29;
  *(void *)&long long v29 = 3;
  sub_1C44973A8();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v9, 1, AssociatedTypeWitness);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v26, v15);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v12, v9, AssociatedTypeWitness);
    uint64_t v19 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v20 = type metadata accessor for SharedTagged_4();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v21 + 32))(&v16[*(int *)(v20 + 36)], v12, v19);
  }
  return result;
}

uint64_t SharedTagged_4.init(_:)@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  *a2 = *a1;
  uint64_t v3 = (char *)a1 + *(int *)(type metadata accessor for WeakTagged_4() + 36);
  uint64_t v4 = (char *)a2 + *(int *)(type metadata accessor for SharedTagged_4() + 36);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for CRExtensible();
  return (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v5 - 8) + 32))(v4, v3, v5);
}

uint64_t SharedTagged_4.tagged1.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_u64[0])
  {
    unint64_t v6 = 0;
    unint64_t v7 = 0xF000000000000000;
  }
  else
  {
    uint64_t v8 = *v1;
    unint64_t v9 = v2[1];
    v10.n128_u64[0] = v8;
    v10.n128_u64[1] = v9;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    unint64_t v7 = v11.n128_u64[1];
    unint64_t v6 = v11.n128_u64[0];
    uint64_t result = sub_1C3F7E324(v8, v9);
  }
  *a1 = v6;
  a1[1] = v7;
  return result;
}

uint64_t SharedTagged_4.tagged2.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_u64[0] == 1)
  {
    uint64_t v6 = *v1;
    unint64_t v7 = v2[1];
    v10.n128_u64[0] = v6;
    v10.n128_u64[1] = v7;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    unint64_t v9 = v11.n128_u64[1];
    unint64_t v8 = v11.n128_u64[0];
    uint64_t result = sub_1C3F7E324(v6, v7);
  }
  else
  {
    unint64_t v8 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  *a1 = v8;
  a1[1] = v9;
  return result;
}

uint64_t SharedTagged_4.tagged3.getter@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  v11.n128_u64[0] = swift_getAssociatedTypeWitness();
  v11.n128_u64[1] = swift_getAssociatedConformanceWitness();
  uint64_t v12 = &protocol witness table for Int;
  uint64_t v13 = MEMORY[0x1E4FBB560];
  uint64_t v4 = type metadata accessor for CRExtensible();
  uint64_t result = CRExtensible.rawValue.getter(v4, (uint64_t)&v11);
  if (v11.n128_u64[0] == 2)
  {
    uint64_t v6 = *v1;
    unint64_t v7 = v2[1];
    v10.n128_u64[0] = v6;
    v10.n128_u64[1] = v7;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    Ref.init(id:)(&v10, &v11);
    unint64_t v9 = v11.n128_u64[1];
    unint64_t v8 = v11.n128_u64[0];
    uint64_t result = sub_1C3F7E324(v6, v7);
  }
  else
  {
    unint64_t v8 = 0;
    unint64_t v9 = 0xF000000000000000;
  }
  *a1 = v8;
  a1[1] = v9;
  return result;
}