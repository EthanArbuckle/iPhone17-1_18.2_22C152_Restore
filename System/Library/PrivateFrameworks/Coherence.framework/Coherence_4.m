uint64_t sub_1C41EB0B0(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  unsigned int v17;

  v3 = *(void *)(*(void *)(a3[2] - 8) + 64);
  v4 = *(void *)(a3[3] - 8);
  if (*(void *)(v4 + 64) > v3) {
    v3 = *(void *)(v4 + 64);
  }
  v5 = *(void *)(a3[5] - 8);
  if (*(void *)(*(void *)(a3[4] - 8) + 64) > v3) {
    v3 = *(void *)(*(void *)(a3[4] - 8) + 64);
  }
  if (*(void *)(v5 + 64) > v3) {
    v3 = *(void *)(v5 + 64);
  }
  v6 = *(void *)(a3[6] - 8);
  if (*(void *)(v6 + 64) > v3) {
    v3 = *(void *)(v6 + 64);
  }
  v7 = *(void *)(a3[7] - 8);
  if (*(void *)(v7 + 64) > v3) {
    v3 = *(void *)(v7 + 64);
  }
  v8 = *(void *)(a3[8] - 8);
  if (*(void *)(v8 + 64) > v3) {
    v3 = *(void *)(v8 + 64);
  }
  v9 = *(void *)(a3[9] - 8);
  if (*(void *)(v9 + 64) > v3) {
    v3 = *(void *)(v9 + 64);
  }
  v10 = 16;
  if (v3 > 0x10) {
    v10 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_36;
  }
  v11 = v10 + 1;
  v12 = 8 * (v10 + 1);
  if ((v10 + 1) <= 3)
  {
    v15 = ((a2 + ~(-1 << v12) - 247) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_36;
      }
      goto LABEL_28;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_36;
      }
      goto LABEL_28;
    }
    if (v15 < 2)
    {
LABEL_36:
      v17 = *((unsigned __int8 *)a1 + v10);
      if (v17 >= 9) {
        return (v17 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_36;
  }
LABEL_28:
  v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v11 | v16) + 248;
}

void sub_1C41EB2BC(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  unint64_t v5 = *(void *)(*(void *)(a4[2] - 8) + 64);
  if (*(void *)(*(void *)(a4[3] - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(a4[3] - 8) + 64);
  }
  uint64_t v6 = *(void *)(a4[4] - 8);
  if (*(void *)(v6 + 64) > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(a4[5] - 8);
  if (*(void *)(v7 + 64) > v5) {
    unint64_t v5 = *(void *)(v7 + 64);
  }
  uint64_t v8 = *(void *)(a4[7] - 8);
  if (*(void *)(*(void *)(a4[6] - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(a4[6] - 8) + 64);
  }
  if (*(void *)(v8 + 64) > v5) {
    unint64_t v5 = *(void *)(v8 + 64);
  }
  uint64_t v9 = *(void *)(a4[8] - 8);
  if (*(void *)(v9 + 64) > v5) {
    unint64_t v5 = *(void *)(v9 + 64);
  }
  uint64_t v10 = *(void *)(a4[9] - 8);
  if (*(void *)(v10 + 64) > v5) {
    unint64_t v5 = *(void *)(v10 + 64);
  }
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v11 = v5 + 1;
  if (a3 < 0xF8)
  {
    int v12 = 0;
  }
  else if (v11 <= 3)
  {
    unsigned int v15 = ((a3 + ~(-1 << (8 * v11)) - 247) >> (8 * v11)) + 1;
    if (HIWORD(v15))
    {
      int v12 = 4;
    }
    else if (v15 >= 0x100)
    {
      int v12 = 2;
    }
    else
    {
      int v12 = v15 > 1;
    }
  }
  else
  {
    int v12 = 1;
  }
  if (a2 > 0xF7)
  {
    unsigned int v13 = a2 - 248;
    if (v11 < 4)
    {
      int v14 = (v13 >> (8 * v11)) + 1;
      if (v5 != -1)
      {
        int v16 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v11] = v14;
        break;
      case 2:
        *(_WORD *)&a1[v11] = v14;
        break;
      case 3:
LABEL_48:
        __break(1u);
        JUMPOUT(0x1C41EB55CLL);
      case 4:
        *(_DWORD *)&a1[v11] = v14;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v12)
    {
      case 1:
        a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_37;
      case 2:
        *(_WORD *)&a1[v11] = 0;
        goto LABEL_36;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_37;
      default:
LABEL_36:
        if (a2) {
LABEL_37:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C41EB584(unsigned __int8 *a1, void *a2)
{
  unint64_t v2 = *(void *)(*(void *)(a2[2] - 8) + 64);
  uint64_t v3 = *(void *)(a2[3] - 8);
  if (*(void *)(v3 + 64) > v2) {
    unint64_t v2 = *(void *)(v3 + 64);
  }
  uint64_t v4 = *(void *)(a2[4] - 8);
  if (*(void *)(v4 + 64) > v2) {
    unint64_t v2 = *(void *)(v4 + 64);
  }
  uint64_t v5 = *(void *)(a2[5] - 8);
  if (*(void *)(v5 + 64) > v2) {
    unint64_t v2 = *(void *)(v5 + 64);
  }
  uint64_t v6 = *(void *)(a2[6] - 8);
  if (*(void *)(v6 + 64) > v2) {
    unint64_t v2 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(a2[8] - 8);
  if (*(void *)(*(void *)(a2[7] - 8) + 64) > v2) {
    unint64_t v2 = *(void *)(*(void *)(a2[7] - 8) + 64);
  }
  if (*(void *)(v7 + 64) > v2) {
    unint64_t v2 = *(void *)(v7 + 64);
  }
  uint64_t v8 = *(void *)(a2[9] - 8);
  if (*(void *)(v8 + 64) > v2) {
    unint64_t v2 = *(void *)(v8 + 64);
  }
  uint64_t v9 = 16;
  if (v2 > 0x10) {
    uint64_t v9 = v2;
  }
  uint64_t v10 = a1[v9];
  int v11 = v10 - 9;
  if (v10 >= 9)
  {
    if (v9 <= 3) {
      uint64_t v12 = v9;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a1;
        goto LABEL_26;
      case 2:
        int v13 = *(unsigned __int16 *)a1;
        goto LABEL_26;
      case 3:
        int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_26;
      case 4:
        int v13 = *(_DWORD *)a1;
LABEL_26:
        unsigned int v14 = (v13 | (v11 << (8 * v9))) + 9;
        LODWORD(v10) = v13 + 9;
        if (v9 >= 4) {
          uint64_t v10 = v10;
        }
        else {
          uint64_t v10 = v14;
        }
        break;
      default:
        return v10;
    }
  }
  return v10;
}

void sub_1C41EB714(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  if (a2 > 8)
  {
    unint64_t v18 = *(void *)(*(void *)(a3[2] - 8) + 64);
    uint64_t v19 = *(void *)(a3[3] - 8);
    if (*(void *)(v19 + 64) > v18) {
      unint64_t v18 = *(void *)(v19 + 64);
    }
    uint64_t v20 = *(void *)(a3[4] - 8);
    if (*(void *)(v20 + 64) > v18) {
      unint64_t v18 = *(void *)(v20 + 64);
    }
    uint64_t v21 = *(void *)(a3[5] - 8);
    if (*(void *)(v21 + 64) > v18) {
      unint64_t v18 = *(void *)(v21 + 64);
    }
    uint64_t v22 = *(void *)(a3[7] - 8);
    if (*(void *)(*(void *)(a3[6] - 8) + 64) > v18) {
      unint64_t v18 = *(void *)(*(void *)(a3[6] - 8) + 64);
    }
    if (*(void *)(v22 + 64) > v18) {
      unint64_t v18 = *(void *)(v22 + 64);
    }
    uint64_t v23 = *(void *)(a3[8] - 8);
    if (*(void *)(v23 + 64) > v18) {
      unint64_t v18 = *(void *)(v23 + 64);
    }
    uint64_t v24 = *(void *)(a3[9] - 8);
    if (*(void *)(v24 + 64) > v18) {
      unint64_t v18 = *(void *)(v24 + 64);
    }
    if (v18 <= 0x10) {
      size_t v25 = 16;
    }
    else {
      size_t v25 = v18;
    }
    unsigned int v26 = a2 - 9;
    if (v25 < 4)
    {
      unsigned int v27 = v26 >> (8 * v25);
      int v28 = v26 & ~(-1 << (8 * v25));
      a1[v25] = v27 + 9;
      bzero(a1, v25);
      if (v25 == 3)
      {
        *(_WORD *)a1 = v28;
        a1[2] = BYTE2(v28);
      }
      else if (v25 == 2)
      {
        *(_WORD *)a1 = v28;
      }
      else
      {
        *a1 = v28;
      }
    }
    else
    {
      a1[v25] = 9;
      bzero(a1, v25);
      *(_DWORD *)a1 = v26;
    }
  }
  else
  {
    uint64_t v5 = a3[3];
    uint64_t v6 = *(void *)(a3[4] - 8);
    uint64_t v7 = *(void *)(a3[5] - 8);
    uint64_t v8 = *(void *)(a3[6] - 8);
    uint64_t v9 = *(void *)(a3[7] - 8);
    uint64_t v10 = *(void *)(a3[8] - 8);
    unint64_t v11 = *(void *)(*(void *)(a3[9] - 8) + 64);
    unint64_t v12 = *(void *)(v10 + 64);
    unint64_t v13 = *(void *)(v9 + 64);
    unint64_t v14 = *(void *)(v8 + 64);
    unint64_t v15 = *(void *)(v7 + 64);
    unint64_t v16 = *(void *)(v6 + 64);
    unint64_t v17 = *(void *)(v4 + 64);
    if (*(void *)(*(void *)(v5 - 8) + 64) > v17) {
      unint64_t v17 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    if (v16 > v17) {
      unint64_t v17 = v16;
    }
    if (v15 > v17) {
      unint64_t v17 = v15;
    }
    if (v14 > v17) {
      unint64_t v17 = v14;
    }
    if (v13 > v17) {
      unint64_t v17 = v13;
    }
    if (v12 > v17) {
      unint64_t v17 = v12;
    }
    if (v11 > v17) {
      unint64_t v17 = v11;
    }
    if (v17 <= 0x10) {
      unint64_t v17 = 16;
    }
    a1[v17] = a2;
  }
}

uint64_t sub_1C41EB9DC()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_getAssociatedTypeWitness();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_getAssociatedTypeWitness();
          if (v5 <= 0x3F)
          {
            uint64_t result = swift_getAssociatedTypeWitness();
            if (v6 <= 0x3F)
            {
              uint64_t result = swift_getAssociatedTypeWitness();
              if (v7 <= 0x3F)
              {
                uint64_t result = swift_getAssociatedTypeWitness();
                if (v8 <= 0x3F)
                {
                  swift_initEnumMetadataMultiPayload();
                  return 0;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void *sub_1C41EBCF4(void *a1, unsigned __int8 *a2)
{
  uint64_t v26 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v2 = *(void *)(v26 + 64);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v3 + 64) > v2) {
    unint64_t v2 = *(void *)(v3 + 64);
  }
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v4 + 64) > v2) {
    unint64_t v2 = *(void *)(v4 + 64);
  }
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v5 + 64) <= v2) {
    unint64_t v6 = v2;
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v7 + 64) > v6) {
    unint64_t v6 = *(void *)(v7 + 64);
  }
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v8 + 64) <= v6) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = *(void *)(v8 + 64);
  }
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v10 + 64) > v9) {
    unint64_t v9 = *(void *)(v10 + 64);
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v12 + 64) <= v9) {
    unint64_t v13 = v9;
  }
  else {
    unint64_t v13 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  size_t v14 = v13 + 1;
  int v15 = *(_DWORD *)(v10 + 80);
  uint64_t v16 = (*(unsigned char *)(v3 + 80) | *(unsigned char *)(v26 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v5 + 80) | *(unsigned char *)(v7 + 80) | *(unsigned char *)(v8 + 80) | v15 | *(unsigned char *)(v12 + 80));
  if (v16 <= 7
    && v14 <= 0x18
    && ((*(_DWORD *)(v3 + 80) | *(_DWORD *)(v26 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v5 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v8 + 80) | v15 | *(_DWORD *)(v12 + 80)) & 0x100000) == 0)
  {
    uint64_t v20 = a1;
    unsigned int v22 = a2[v13];
    unsigned int v23 = v22 - 9;
    if (v22 >= 9)
    {
      if (v13 <= 3) {
        uint64_t v24 = v13;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          if (v13 < 4) {
            goto LABEL_37;
          }
          goto LABEL_39;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          if (v13 >= 4) {
            goto LABEL_39;
          }
          goto LABEL_37;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v13 < 4) {
            goto LABEL_37;
          }
          goto LABEL_39;
        case 4:
          int v25 = *(_DWORD *)a2;
          if (v13 < 4) {
LABEL_37:
          }
            unsigned int v22 = (v25 | (v23 << (8 * v13))) + 9;
          else {
LABEL_39:
          }
            unsigned int v22 = v25 + 9;
          break;
        default:
          break;
      }
    }
    switch(v22)
    {
      case 0u:
        (*(void (**)(void *))(v26 + 16))(a1);
        *((unsigned char *)a1 + v13) = 0;
        break;
      case 1u:
        (*(void (**)(void *))(v3 + 16))(a1);
        *((unsigned char *)a1 + v13) = 1;
        break;
      case 2u:
        (*(void (**)(void *))(v4 + 16))(a1);
        *((unsigned char *)a1 + v13) = 2;
        break;
      case 3u:
        (*(void (**)(void *))(v5 + 16))(a1);
        *((unsigned char *)a1 + v13) = 3;
        break;
      case 4u:
        (*(void (**)(void *))(v7 + 16))(a1);
        *((unsigned char *)a1 + v13) = 4;
        break;
      case 5u:
        (*(void (**)(void *))(v8 + 16))(a1);
        *((unsigned char *)a1 + v13) = 5;
        break;
      case 6u:
        (*(void (**)(void *))(v10 + 16))(a1);
        *((unsigned char *)a1 + v13) = 6;
        break;
      case 7u:
        (*(void (**)(void *))(v12 + 16))(a1);
        *((unsigned char *)a1 + v13) = 7;
        break;
      case 8u:
        *((unsigned char *)a1 + v13) = 8;
        break;
      default:
        memcpy(a1, a2, v14);
        break;
    }
  }
  else
  {
    uint64_t v19 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v20 = (void *)(v19 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  return v20;
}

uint64_t sub_1C41EC354(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = *(void *)(v28 + 64);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(v4 - 8);
  uint64_t v27 = v4;
  if (*(void *)(v26 + 64) > v3) {
    unint64_t v3 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  if (*(void *)(v24 + 64) > v3) {
    unint64_t v3 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v6 - 8);
  if (*(void *)(v23 + 64) > v3) {
    unint64_t v3 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v7 - 8);
  if (*(void *)(v22 + 64) <= v3) {
    unint64_t v8 = v3;
  }
  else {
    unint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v9 - 8);
  if (*(void *)(v21 + 64) <= v8) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
  }
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(v11 - 8);
  if (*(void *)(v20 + 64) > v10) {
    unint64_t v10 = *(void *)(*(void *)(v11 - 8) + 64);
  }
  uint64_t result = swift_getAssociatedTypeWitness();
  unint64_t v13 = *(void *)(*(void *)(result - 8) + 64);
  if (v13 <= v10) {
    unint64_t v13 = v10;
  }
  unsigned int v14 = a1[v13];
  unsigned int v15 = v14 - 9;
  if (v14 >= 9)
  {
    if (v13 <= 3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a1;
        if (v13 >= 4) {
          goto LABEL_31;
        }
        goto LABEL_27;
      case 2:
        int v17 = *(unsigned __int16 *)a1;
        if (v13 >= 4) {
          goto LABEL_31;
        }
        goto LABEL_27;
      case 3:
        int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v13 < 4) {
          goto LABEL_27;
        }
        goto LABEL_31;
      case 4:
        int v17 = *(_DWORD *)a1;
        if (v13 < 4)
        {
LABEL_27:
          unsigned int v14 = (v17 | (v15 << (8 * v13))) + 9;
          break;
        }
LABEL_31:
        unsigned int v14 = v17 + 9;
        if (v14 > 7) {
          return result;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v18 = v28;
  switch(v14)
  {
    case 0u:
      goto LABEL_39;
    case 1u:
      uint64_t v18 = v26;
      uint64_t AssociatedTypeWitness = v27;
      goto LABEL_39;
    case 2u:
      uint64_t v18 = v24;
      uint64_t AssociatedTypeWitness = v25;
      goto LABEL_39;
    case 3u:
      uint64_t v18 = v23;
      uint64_t AssociatedTypeWitness = v6;
      goto LABEL_39;
    case 4u:
      uint64_t v18 = v22;
      uint64_t AssociatedTypeWitness = v7;
      goto LABEL_39;
    case 5u:
      uint64_t v18 = v21;
      uint64_t AssociatedTypeWitness = v9;
      goto LABEL_39;
    case 6u:
      uint64_t v18 = v20;
      uint64_t AssociatedTypeWitness = v11;
      goto LABEL_39;
    case 7u:
      uint64_t v18 = *(void *)(result - 8);
      uint64_t AssociatedTypeWitness = result;
LABEL_39:
      uint64_t v19 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v18 + 8);
      uint64_t result = v19(a1, AssociatedTypeWitness);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1C41EC880(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = AssociatedTypeWitness;
  unint64_t v4 = *(void *)(v30 + 64);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  if (*(void *)(v28 + 64) > v4) {
    unint64_t v4 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  if (*(void *)(v26 + 64) > v4) {
    unint64_t v4 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v7 - 8);
  if (*(void *)(v25 + 64) > v4) {
    unint64_t v4 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v8 - 8);
  if (*(void *)(v24 + 64) <= v4) {
    unint64_t v9 = v4;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v10 - 8);
  if (*(void *)(v23 + 64) <= v9) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  if (*(void *)(v13 + 64) > v11) {
    unint64_t v11 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  uint64_t v14 = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(v14 - 8) + 64) <= v11) {
    unint64_t v15 = v11;
  }
  else {
    unint64_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  unsigned int v16 = a2[v15];
  unsigned int v17 = v16 - 9;
  if (v16 < 9)
  {
    uint64_t v19 = a1;
  }
  else
  {
    if (v15 <= 3) {
      uint64_t v18 = v15;
    }
    else {
      uint64_t v18 = 4;
    }
    uint64_t v19 = a1;
    switch(v18)
    {
      case 1:
        int v20 = *a2;
        if (v15 >= 4) {
          goto LABEL_34;
        }
        goto LABEL_28;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        if (v15 < 4) {
          goto LABEL_28;
        }
        goto LABEL_34;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v15 < 4) {
          goto LABEL_28;
        }
        goto LABEL_34;
      case 4:
        int v20 = *(_DWORD *)a2;
        if (v15 < 4)
        {
LABEL_28:
          unsigned int v16 = (v20 | (v17 << (8 * v15))) + 9;
        }
        else
        {
LABEL_34:
          unsigned int v16 = v20 + 9;
          if (v16 > 8)
          {
LABEL_26:
            memcpy(v19, a2, v15 + 1);
            return v19;
          }
        }
        break;
      default:
        break;
    }
  }
  switch(v16)
  {
    case 0u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v30 + 16))(v19, a2, v31);
      *((unsigned char *)v19 + v15) = 0;
      return v19;
    case 1u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v28 + 16))(v19, a2, v29);
      char v21 = 1;
      goto LABEL_44;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v26 + 16))(v19, a2, v27);
      char v21 = 2;
      goto LABEL_44;
    case 3u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v25 + 16))(v19, a2, v7);
      char v21 = 3;
      goto LABEL_44;
    case 4u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v24 + 16))(v19, a2, v8);
      char v21 = 4;
      goto LABEL_44;
    case 5u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v23 + 16))(v19, a2, v10);
      char v21 = 5;
      goto LABEL_44;
    case 6u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v13 + 16))(v19, a2, v12);
      char v21 = 6;
      goto LABEL_44;
    case 7u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v14 - 8) + 16))(v19, a2, v14);
      char v21 = 7;
      goto LABEL_44;
    case 8u:
      char v21 = 8;
LABEL_44:
      *((unsigned char *)v19 + v15) = v21;
      break;
    default:
      goto LABEL_26;
  }
  return v19;
}

unsigned __int8 *sub_1C41ECE80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v5 = *(void *)(v37 + 64);
    uint64_t v6 = swift_getAssociatedTypeWitness();
    uint64_t v35 = *(void *)(v6 - 8);
    uint64_t v36 = v6;
    if (*(void *)(v35 + 64) > v5) {
      unint64_t v5 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    uint64_t v7 = swift_getAssociatedTypeWitness();
    uint64_t v33 = *(void *)(v7 - 8);
    uint64_t v34 = v7;
    if (*(void *)(v33 + 64) <= v5) {
      unint64_t v8 = v5;
    }
    else {
      unint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
    }
    uint64_t v9 = swift_getAssociatedTypeWitness();
    uint64_t v31 = *(void *)(v9 - 8);
    uint64_t v32 = v9;
    if (*(void *)(v31 + 64) <= v8) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
    }
    uint64_t v11 = swift_getAssociatedTypeWitness();
    uint64_t v30 = *(void *)(v11 - 8);
    if (*(void *)(v30 + 64) <= v10) {
      unint64_t v12 = v10;
    }
    else {
      unint64_t v12 = *(void *)(*(void *)(v11 - 8) + 64);
    }
    uint64_t v13 = swift_getAssociatedTypeWitness();
    uint64_t v29 = *(void *)(v13 - 8);
    if (*(void *)(v29 + 64) <= v12) {
      unint64_t v14 = v12;
    }
    else {
      unint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
    }
    uint64_t v15 = swift_getAssociatedTypeWitness();
    uint64_t v28 = *(void *)(v15 - 8);
    if (*(void *)(v28 + 64) > v14) {
      unint64_t v14 = *(void *)(*(void *)(v15 - 8) + 64);
    }
    uint64_t v16 = swift_getAssociatedTypeWitness();
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)(v16 - 8);
    if (*(void *)(v18 + 64) <= v14) {
      unint64_t v19 = v14;
    }
    else {
      unint64_t v19 = *(void *)(*(void *)(v16 - 8) + 64);
    }
    uint64_t v20 = v37;
    uint64_t v21 = AssociatedTypeWitness;
    switch((int)v37)
    {
      case 0:
        goto LABEL_29;
      case 1:
        uint64_t v20 = v35;
        uint64_t v21 = v36;
        goto LABEL_29;
      case 2:
        uint64_t v20 = v33;
        uint64_t v21 = v34;
        goto LABEL_29;
      case 3:
        uint64_t v20 = v31;
        uint64_t v21 = v32;
        goto LABEL_29;
      case 4:
        uint64_t v20 = v30;
        uint64_t v21 = v11;
        goto LABEL_29;
      case 5:
        uint64_t v20 = v29;
        uint64_t v21 = v13;
        goto LABEL_29;
      case 6:
        uint64_t v20 = v28;
        uint64_t v21 = v15;
        goto LABEL_29;
      case 7:
        uint64_t v20 = *(void *)(v16 - 8);
        uint64_t v21 = v16;
LABEL_29:
        (*(void (**)(unsigned __int8 *, uint64_t))(v20 + 8))(a1, v21);
        break;
      default:
        break;
    }
    unsigned int v22 = a2[v19];
    unsigned int v23 = v22 - 9;
    if (v22 < 9)
    {
LABEL_39:
      switch(v22)
      {
        case 0u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v37 + 16))(a1, a2, AssociatedTypeWitness);
          a1[v19] = 0;
          return a1;
        case 1u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v35 + 16))(a1, a2, v36);
          char v26 = 1;
          goto LABEL_54;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v33 + 16))(a1, a2, v34);
          char v26 = 2;
          goto LABEL_54;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v31 + 16))(a1, a2, v32);
          char v26 = 3;
          goto LABEL_54;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v30 + 16))(a1, a2, v11);
          char v26 = 4;
          goto LABEL_54;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 16))(a1, a2, v13);
          char v26 = 5;
          goto LABEL_54;
        case 6u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v28 + 16))(a1, a2, v15);
          char v26 = 6;
          goto LABEL_54;
        case 7u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v18 + 16))(a1, a2, v17);
          char v26 = 7;
          goto LABEL_54;
        case 8u:
          char v26 = 8;
LABEL_54:
          a1[v19] = v26;
          break;
        default:
          goto LABEL_45;
      }
    }
    else
    {
      if (v19 <= 3) {
        uint64_t v24 = v19;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          if (v19 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_38;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          if (v19 < 4) {
            goto LABEL_38;
          }
          goto LABEL_44;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v19 < 4) {
            goto LABEL_38;
          }
          goto LABEL_44;
        case 4:
          int v25 = *(_DWORD *)a2;
          if (v19 < 4)
          {
LABEL_38:
            unsigned int v22 = (v25 | (v23 << (8 * v19))) + 9;
            goto LABEL_39;
          }
LABEL_44:
          unsigned int v22 = v25 + 9;
          if (v22 <= 8) {
            goto LABEL_39;
          }
LABEL_45:
          memcpy(a1, a2, v19 + 1);
          break;
        default:
          goto LABEL_39;
      }
    }
  }
  return a1;
}

void *sub_1C41ED5C8(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = AssociatedTypeWitness;
  unint64_t v4 = *(void *)(v30 + 64);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  if (*(void *)(v28 + 64) > v4) {
    unint64_t v4 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v27 = v6;
  if (*(void *)(v26 + 64) > v4) {
    unint64_t v4 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v7 - 8);
  if (*(void *)(v25 + 64) > v4) {
    unint64_t v4 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v8 - 8);
  if (*(void *)(v24 + 64) <= v4) {
    unint64_t v9 = v4;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v10 - 8);
  if (*(void *)(v23 + 64) <= v9) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  if (*(void *)(v13 + 64) > v11) {
    unint64_t v11 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  uint64_t v14 = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(v14 - 8) + 64) <= v11) {
    unint64_t v15 = v11;
  }
  else {
    unint64_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  unsigned int v16 = a2[v15];
  unsigned int v17 = v16 - 9;
  if (v16 < 9)
  {
    unint64_t v19 = a1;
  }
  else
  {
    if (v15 <= 3) {
      uint64_t v18 = v15;
    }
    else {
      uint64_t v18 = 4;
    }
    unint64_t v19 = a1;
    switch(v18)
    {
      case 1:
        int v20 = *a2;
        if (v15 >= 4) {
          goto LABEL_34;
        }
        goto LABEL_28;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        if (v15 < 4) {
          goto LABEL_28;
        }
        goto LABEL_34;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v15 < 4) {
          goto LABEL_28;
        }
        goto LABEL_34;
      case 4:
        int v20 = *(_DWORD *)a2;
        if (v15 < 4)
        {
LABEL_28:
          unsigned int v16 = (v20 | (v17 << (8 * v15))) + 9;
        }
        else
        {
LABEL_34:
          unsigned int v16 = v20 + 9;
          if (v16 > 8)
          {
LABEL_26:
            memcpy(v19, a2, v15 + 1);
            return v19;
          }
        }
        break;
      default:
        break;
    }
  }
  switch(v16)
  {
    case 0u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v30 + 32))(v19, a2, v31);
      *((unsigned char *)v19 + v15) = 0;
      return v19;
    case 1u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v28 + 32))(v19, a2, v29);
      char v21 = 1;
      goto LABEL_44;
    case 2u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v26 + 32))(v19, a2, v27);
      char v21 = 2;
      goto LABEL_44;
    case 3u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v25 + 32))(v19, a2, v7);
      char v21 = 3;
      goto LABEL_44;
    case 4u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v24 + 32))(v19, a2, v8);
      char v21 = 4;
      goto LABEL_44;
    case 5u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v23 + 32))(v19, a2, v10);
      char v21 = 5;
      goto LABEL_44;
    case 6u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v13 + 32))(v19, a2, v12);
      char v21 = 6;
      goto LABEL_44;
    case 7u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v14 - 8) + 32))(v19, a2, v14);
      char v21 = 7;
      goto LABEL_44;
    case 8u:
      char v21 = 8;
LABEL_44:
      *((unsigned char *)v19 + v15) = v21;
      break;
    default:
      goto LABEL_26;
  }
  return v19;
}

unsigned __int8 *sub_1C41EDBC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v5 = *(void *)(v37 + 64);
    uint64_t v6 = swift_getAssociatedTypeWitness();
    uint64_t v35 = *(void *)(v6 - 8);
    uint64_t v36 = v6;
    if (*(void *)(v35 + 64) > v5) {
      unint64_t v5 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    uint64_t v7 = swift_getAssociatedTypeWitness();
    uint64_t v33 = *(void *)(v7 - 8);
    uint64_t v34 = v7;
    if (*(void *)(v33 + 64) <= v5) {
      unint64_t v8 = v5;
    }
    else {
      unint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
    }
    uint64_t v9 = swift_getAssociatedTypeWitness();
    uint64_t v31 = *(void *)(v9 - 8);
    uint64_t v32 = v9;
    if (*(void *)(v31 + 64) <= v8) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
    }
    uint64_t v11 = swift_getAssociatedTypeWitness();
    uint64_t v30 = *(void *)(v11 - 8);
    if (*(void *)(v30 + 64) <= v10) {
      unint64_t v12 = v10;
    }
    else {
      unint64_t v12 = *(void *)(*(void *)(v11 - 8) + 64);
    }
    uint64_t v13 = swift_getAssociatedTypeWitness();
    uint64_t v29 = *(void *)(v13 - 8);
    if (*(void *)(v29 + 64) <= v12) {
      unint64_t v14 = v12;
    }
    else {
      unint64_t v14 = *(void *)(*(void *)(v13 - 8) + 64);
    }
    uint64_t v15 = swift_getAssociatedTypeWitness();
    uint64_t v28 = *(void *)(v15 - 8);
    if (*(void *)(v28 + 64) > v14) {
      unint64_t v14 = *(void *)(*(void *)(v15 - 8) + 64);
    }
    uint64_t v16 = swift_getAssociatedTypeWitness();
    uint64_t v17 = v16;
    uint64_t v18 = *(void *)(v16 - 8);
    if (*(void *)(v18 + 64) <= v14) {
      unint64_t v19 = v14;
    }
    else {
      unint64_t v19 = *(void *)(*(void *)(v16 - 8) + 64);
    }
    uint64_t v20 = v37;
    uint64_t v21 = AssociatedTypeWitness;
    switch((int)v37)
    {
      case 0:
        goto LABEL_29;
      case 1:
        uint64_t v20 = v35;
        uint64_t v21 = v36;
        goto LABEL_29;
      case 2:
        uint64_t v20 = v33;
        uint64_t v21 = v34;
        goto LABEL_29;
      case 3:
        uint64_t v20 = v31;
        uint64_t v21 = v32;
        goto LABEL_29;
      case 4:
        uint64_t v20 = v30;
        uint64_t v21 = v11;
        goto LABEL_29;
      case 5:
        uint64_t v20 = v29;
        uint64_t v21 = v13;
        goto LABEL_29;
      case 6:
        uint64_t v20 = v28;
        uint64_t v21 = v15;
        goto LABEL_29;
      case 7:
        uint64_t v20 = *(void *)(v16 - 8);
        uint64_t v21 = v16;
LABEL_29:
        (*(void (**)(unsigned __int8 *, uint64_t))(v20 + 8))(a1, v21);
        break;
      default:
        break;
    }
    unsigned int v22 = a2[v19];
    unsigned int v23 = v22 - 9;
    if (v22 < 9)
    {
LABEL_39:
      switch(v22)
      {
        case 0u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v37 + 32))(a1, a2, AssociatedTypeWitness);
          a1[v19] = 0;
          return a1;
        case 1u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v35 + 32))(a1, a2, v36);
          char v26 = 1;
          goto LABEL_54;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v33 + 32))(a1, a2, v34);
          char v26 = 2;
          goto LABEL_54;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v31 + 32))(a1, a2, v32);
          char v26 = 3;
          goto LABEL_54;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v30 + 32))(a1, a2, v11);
          char v26 = 4;
          goto LABEL_54;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 32))(a1, a2, v13);
          char v26 = 5;
          goto LABEL_54;
        case 6u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v28 + 32))(a1, a2, v15);
          char v26 = 6;
          goto LABEL_54;
        case 7u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v18 + 32))(a1, a2, v17);
          char v26 = 7;
          goto LABEL_54;
        case 8u:
          char v26 = 8;
LABEL_54:
          a1[v19] = v26;
          break;
        default:
          goto LABEL_45;
      }
    }
    else
    {
      if (v19 <= 3) {
        uint64_t v24 = v19;
      }
      else {
        uint64_t v24 = 4;
      }
      switch(v24)
      {
        case 1:
          int v25 = *a2;
          if (v19 >= 4) {
            goto LABEL_44;
          }
          goto LABEL_38;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          if (v19 < 4) {
            goto LABEL_38;
          }
          goto LABEL_44;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v19 < 4) {
            goto LABEL_38;
          }
          goto LABEL_44;
        case 4:
          int v25 = *(_DWORD *)a2;
          if (v19 < 4)
          {
LABEL_38:
            unsigned int v22 = (v25 | (v23 << (8 * v19))) + 9;
            goto LABEL_39;
          }
LABEL_44:
          unsigned int v22 = v25 + 9;
          if (v22 <= 8) {
            goto LABEL_39;
          }
LABEL_45:
          memcpy(a1, a2, v19 + 1);
          break;
        default:
          goto LABEL_39;
      }
    }
  }
  return a1;
}

uint64_t sub_1C41EE310(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v5 > v4) {
    unint64_t v4 = v5;
  }
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 > v4) {
    unint64_t v4 = v6;
  }
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 > v4) {
    unint64_t v4 = v7;
  }
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 > v4) {
    unint64_t v4 = v8;
  }
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 > v4) {
    unint64_t v4 = v9;
  }
  unint64_t v10 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v10 > v4) {
    unint64_t v4 = v10;
  }
  unint64_t v11 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v11 <= v4) {
    unint64_t v12 = v4;
  }
  else {
    unint64_t v12 = v11;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_35;
  }
  unint64_t v13 = v12 + 1;
  char v14 = 8 * (v12 + 1);
  if ((v12 + 1) <= 3)
  {
    unsigned int v17 = ((a2 + ~(-1 << v14) - 246) >> v14) + 1;
    if (HIWORD(v17))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_35;
      }
      goto LABEL_27;
    }
    if (v17 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_35;
      }
      goto LABEL_27;
    }
    if (v17 < 2)
    {
LABEL_35:
      unsigned int v19 = *((unsigned __int8 *)a1 + v12);
      if (v19 >= 0xA) {
        return (v19 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_35;
  }
LABEL_27:
  int v18 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v18 = 0;
  }
  if (v13)
  {
    if (v13 > 3) {
      LODWORD(v13) = 4;
    }
    switch((int)v13)
    {
      case 2:
        LODWORD(v13) = *a1;
        break;
      case 3:
        LODWORD(v13) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v13) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v13) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v13 | v18) + 247;
}

void sub_1C41EE61C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 > v6) {
    unint64_t v6 = v7;
  }
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 > v6) {
    unint64_t v6 = v8;
  }
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 > v6) {
    unint64_t v6 = v9;
  }
  unint64_t v10 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v10 > v6) {
    unint64_t v6 = v10;
  }
  unint64_t v11 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v11 > v6) {
    unint64_t v6 = v11;
  }
  unint64_t v12 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v12 > v6) {
    unint64_t v6 = v12;
  }
  unint64_t v13 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v13 <= v6) {
    unint64_t v13 = v6;
  }
  size_t v14 = v13 + 1;
  if (a3 < 0xF7)
  {
    int v15 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v18 = ((a3 + ~(-1 << (8 * v14)) - 246) >> (8 * v14)) + 1;
    if (HIWORD(v18))
    {
      int v15 = 4;
    }
    else if (v18 >= 0x100)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v18 > 1;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (a2 > 0xF6)
  {
    unsigned int v16 = a2 - 247;
    if (v14 < 4)
    {
      int v17 = (v16 >> (8 * v14)) + 1;
      if (v13 != -1)
      {
        int v19 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v13 + 1);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v14] = v17;
        break;
      case 2:
        *(_WORD *)&a1[v14] = v17;
        break;
      case 3:
LABEL_46:
        __break(1u);
        JUMPOUT(0x1C41EE99CLL);
      case 4:
        *(_DWORD *)&a1[v14] = v17;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v15)
    {
      case 1:
        a1[v14] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_35;
      case 2:
        *(_WORD *)&a1[v14] = 0;
        goto LABEL_34;
      case 3:
        goto LABEL_46;
      case 4:
        *(_DWORD *)&a1[v14] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_35;
      default:
LABEL_34:
        if (a2) {
LABEL_35:
        }
          a1[v13] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C41EE9C4(unsigned __int8 *a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v3 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v3 > v2) {
    unint64_t v2 = v3;
  }
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 > v2) {
    unint64_t v2 = v4;
  }
  unint64_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v5 > v2) {
    unint64_t v2 = v5;
  }
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 > v2) {
    unint64_t v2 = v6;
  }
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 > v2) {
    unint64_t v2 = v7;
  }
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 > v2) {
    unint64_t v2 = v8;
  }
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 <= v2) {
    unint64_t v9 = v2;
  }
  uint64_t result = a1[v9];
  if (result >= 9)
  {
    if (v9 <= 3) {
      uint64_t v11 = v9;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a1;
        if (v9 < 4) {
          goto LABEL_25;
        }
        goto LABEL_27;
      case 2:
        int v12 = *(unsigned __int16 *)a1;
        if (v9 >= 4) {
          goto LABEL_27;
        }
        goto LABEL_25;
      case 3:
        int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v9 < 4) {
          goto LABEL_25;
        }
        goto LABEL_27;
      case 4:
        int v12 = *(_DWORD *)a1;
        if (v9 < 4) {
LABEL_25:
        }
          uint64_t result = (v12 | ((result - 9) << (8 * v9))) + 9;
        else {
LABEL_27:
        }
          uint64_t result = (v12 + 9);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C41EEC64(unsigned char *a1, unsigned int a2)
{
  size_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  size_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v5 > v4) {
    size_t v4 = v5;
  }
  size_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 > v4) {
    size_t v4 = v6;
  }
  size_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 > v4) {
    size_t v4 = v7;
  }
  size_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 > v4) {
    size_t v4 = v8;
  }
  size_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 > v4) {
    size_t v4 = v9;
  }
  size_t v10 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v10 > v4) {
    size_t v4 = v10;
  }
  size_t v11 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v11 <= v4) {
    size_t v12 = v4;
  }
  else {
    size_t v12 = v11;
  }
  if (a2 > 8)
  {
    unsigned int v13 = a2 - 9;
    if (v12 < 4)
    {
      unsigned int v14 = v13 >> (8 * v12);
      int v15 = v13 & ~(-1 << (8 * v12));
      a1[v12] = v14 + 9;
      bzero(a1, v12);
      if (v12 == 3)
      {
        *(_WORD *)a1 = v15;
        a1[2] = BYTE2(v15);
      }
      else if (v12 == 2)
      {
        *(_WORD *)a1 = v15;
      }
      else
      {
        *a1 = v15;
      }
    }
    else
    {
      a1[v12] = 9;
      bzero(a1, v12);
      *(_DWORD *)a1 = v13;
    }
  }
  else
  {
    a1[v12] = a2;
  }
}

uint64_t sub_1C41EEEF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 152);
}

uint64_t sub_1C41EEEF8()
{
  uint64_t result = type metadata accessor for TaggedValue_9.TaggedEnum();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C41EEFB4(unsigned __int8 *a1, void *a2)
{
  uint64_t v22 = *(void *)(a2[3] - 8);
  if (*(void *)(v22 + 64) <= *(void *)(*(void *)(a2[2] - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(a2[2] - 8) + 64);
  }
  else {
    unint64_t v3 = *(void *)(v22 + 64);
  }
  uint64_t v21 = *(void *)(a2[4] - 8);
  if (*(void *)(v21 + 64) <= v3) {
    unint64_t v4 = v3;
  }
  else {
    unint64_t v4 = *(void *)(v21 + 64);
  }
  uint64_t v20 = *(void *)(a2[5] - 8);
  if (*(void *)(v20 + 64) <= v4) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = *(void *)(v20 + 64);
  }
  uint64_t v6 = *(void *)(a2[6] - 8);
  if (*(void *)(v6 + 64) <= v5) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = *(void *)(v6 + 64);
  }
  uint64_t v8 = *(void *)(a2[7] - 8);
  if (*(void *)(v8 + 64) > v7) {
    unint64_t v7 = *(void *)(v8 + 64);
  }
  if (*(void *)(*(void *)(a2[8] - 8) + 64) <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(a2[8] - 8) + 64);
  }
  uint64_t v10 = a2[9];
  uint64_t v11 = a2[10];
  if (*(void *)(*(void *)(v10 - 8) + 64) <= v9) {
    unint64_t v12 = v9;
  }
  else {
    unint64_t v12 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  if (*(void *)(*(void *)(v11 - 8) + 64) <= v12) {
    unint64_t v13 = v12;
  }
  else {
    unint64_t v13 = *(void *)(*(void *)(v11 - 8) + 64);
  }
  if (v13 <= 0x10) {
    uint64_t v14 = 16;
  }
  else {
    uint64_t v14 = v13;
  }
  unsigned int v15 = a1[v14];
  if (v15 >= 0xA)
  {
    if (v14 <= 3) {
      uint64_t v16 = v14;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a1;
        if (v14 < 4) {
          goto LABEL_39;
        }
        goto LABEL_40;
      case 2:
        int v17 = *(unsigned __int16 *)a1;
        if (v14 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 3:
        int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v14 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 4:
        int v17 = *(_DWORD *)a1;
        if (v14 < 4) {
LABEL_39:
        }
          v17 |= (v15 - 10) << (8 * v14);
LABEL_40:
        unsigned int v15 = v17 + 10;
        break;
      default:
        break;
    }
  }
  switch(v15)
  {
    case 1u:
      unsigned int v18 = *(uint64_t (**)(void))(v22 + 8);
      goto LABEL_50;
    case 2u:
      unsigned int v18 = *(uint64_t (**)(void))(v21 + 8);
      goto LABEL_50;
    case 3u:
      unsigned int v18 = *(uint64_t (**)(void))(v20 + 8);
      goto LABEL_50;
    case 4u:
      unsigned int v18 = *(uint64_t (**)(void))(v6 + 8);
      return v18();
    case 5u:
      unsigned int v18 = *(uint64_t (**)(void))(v8 + 8);
      goto LABEL_50;
    case 6u:
      unsigned int v18 = *(uint64_t (**)(void))(*(void *)(a2[8] - 8) + 8);
      return v18();
    case 7u:
      unsigned int v18 = *(uint64_t (**)(void))(*(void *)(v10 - 8) + 8);
      return v18();
    case 8u:
      unsigned int v18 = *(uint64_t (**)(void))(*(void *)(v11 - 8) + 8);
      return v18();
    case 9u:
      return swift_release();
    default:
      unsigned int v18 = *(uint64_t (**)(void))(*(void *)(a2[2] - 8) + 8);
LABEL_50:
      return v18();
  }
}

void *sub_1C41EF49C(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[3] - 8);
  if (*(void *)(v4 + 64) <= *(void *)(*(void *)(a3[2] - 8) + 64)) {
    unint64_t v5 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v5 = *(void *)(v4 + 64);
  }
  uint64_t v6 = *(void *)(a3[4] - 8);
  if (*(void *)(v6 + 64) <= v5) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = *(void *)(v6 + 64);
  }
  uint64_t v8 = *(void *)(a3[5] - 8);
  if (*(void *)(v8 + 64) <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = *(void *)(v8 + 64);
  }
  uint64_t v10 = *(void *)(a3[6] - 8);
  if (*(void *)(v10 + 64) <= v9) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = *(void *)(v10 + 64);
  }
  uint64_t v12 = *(void *)(a3[7] - 8);
  if (*(void *)(v12 + 64) > v11) {
    unint64_t v11 = *(void *)(v12 + 64);
  }
  if (*(void *)(*(void *)(a3[8] - 8) + 64) <= v11) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = *(void *)(*(void *)(a3[8] - 8) + 64);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  if (*(void *)(*(void *)(v14 - 8) + 64) > v13) {
    unint64_t v13 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  if (*(void *)(*(void *)(v15 - 8) + 64) <= v13) {
    unint64_t v16 = v13;
  }
  else {
    unint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  }
  if (v16 <= 0x10) {
    uint64_t v17 = 16;
  }
  else {
    uint64_t v17 = v16;
  }
  unsigned int v18 = a2[v17];
  if (v18 >= 0xA)
  {
    if (v17 <= 3) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a2;
        if (v17 < 4) {
          goto LABEL_38;
        }
        goto LABEL_39;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        if (v17 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v17 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 4:
        int v20 = *(_DWORD *)a2;
        if (v17 < 4) {
LABEL_38:
        }
          v20 |= (v18 - 10) << (8 * v17);
LABEL_39:
        unsigned int v18 = v20 + 10;
        break;
      default:
        break;
    }
  }
  switch(v18)
  {
    case 1u:
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)a1 + v17) = 1;
      break;
    case 2u:
      (*(void (**)(void *))(v6 + 16))(a1);
      *((unsigned char *)a1 + v17) = 2;
      break;
    case 3u:
      (*(void (**)(void *))(v8 + 16))(a1);
      *((unsigned char *)a1 + v17) = 3;
      break;
    case 4u:
      (*(void (**)(void *))(v10 + 16))(a1);
      *((unsigned char *)a1 + v17) = 4;
      break;
    case 5u:
      (*(void (**)(void *))(v12 + 16))(a1);
      *((unsigned char *)a1 + v17) = 5;
      break;
    case 6u:
      (*(void (**)(void *))(*(void *)(a3[8] - 8) + 16))(a1);
      *((unsigned char *)a1 + v17) = 6;
      break;
    case 7u:
      (*(void (**)(void *))(*(void *)(v14 - 8) + 16))(a1);
      *((unsigned char *)a1 + v17) = 7;
      break;
    case 8u:
      (*(void (**)(void *))(*(void *)(v15 - 8) + 16))(a1);
      *((unsigned char *)a1 + v17) = 8;
      break;
    case 9u:
      uint64_t v21 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v21;
      *((unsigned char *)a1 + v17) = 9;
      swift_retain();
      break;
    default:
      (*(void (**)(void *))(*(void *)(a3[2] - 8) + 16))(a1);
      *((unsigned char *)a1 + v17) = 0;
      break;
  }
  return a1;
}

unsigned __int8 *sub_1C41EF9E8(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[3];
    uint64_t v35 = *(void *)(a3[2] - 8);
    unint64_t v6 = *(void *)(v35 + 64);
    uint64_t v34 = *(void *)(v5 - 8);
    if (*(void *)(v34 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    uint64_t v7 = a3[4];
    uint64_t v8 = a3[5];
    uint64_t v33 = *(void *)(v7 - 8);
    if (*(void *)(v33 + 64) > v6) {
      unint64_t v6 = *(void *)(v33 + 64);
    }
    uint64_t v32 = *(void *)(v8 - 8);
    if (*(void *)(v32 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v31 = *(void *)(v9 - 8);
    if (*(void *)(v31 + 64) > v6) {
      unint64_t v6 = *(void *)(v31 + 64);
    }
    uint64_t v30 = *(void *)(v10 - 8);
    uint64_t v11 = a3[8];
    uint64_t v12 = a3[9];
    if (*(void *)(v30 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v10 - 8) + 64);
    }
    uint64_t v29 = *(void *)(a3[8] - 8);
    if (*(void *)(v29 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(a3[8] - 8) + 64);
    }
    uint64_t v28 = *(void *)(v12 - 8);
    if (*(void *)(v28 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v12 - 8) + 64);
    }
    uint64_t v13 = a3[10];
    uint64_t v27 = *(void *)(v13 - 8);
    unint64_t v14 = *(void *)(v27 + 64);
    if (v14 <= v6) {
      unint64_t v14 = v6;
    }
    if (v14 <= 0x10) {
      uint64_t v15 = 16;
    }
    else {
      uint64_t v15 = v14;
    }
    unsigned int v16 = a1[v15];
    unsigned int v17 = v16 - 10;
    if (v16 >= 0xA)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a1;
          if (v15 < 4) {
            goto LABEL_33;
          }
          goto LABEL_34;
        case 2:
          int v19 = *(unsigned __int16 *)a1;
          if (v15 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 3:
          int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v15 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 4:
          int v19 = *(_DWORD *)a1;
          if (v15 < 4) {
LABEL_33:
          }
            v19 |= v17 << (8 * v15);
LABEL_34:
          unsigned int v16 = v19 + 10;
          break;
        default:
          break;
      }
    }
    uint64_t v25 = a3[3];
    uint64_t v26 = a3[2];
    switch(v16)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v34 + 8))(a1, v5);
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v33 + 8))(a1, v7);
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v32 + 8))(a1, v8);
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v31 + 8))(a1, v9);
        break;
      case 5u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v30 + 8))(a1, v10);
        break;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(a1, v11);
        break;
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v28 + 8))(a1, v12);
        break;
      case 8u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v27 + 8))(a1, v13);
        break;
      case 9u:
        swift_release();
        break;
      default:
        (*(void (**)(unsigned __int8 *, void))(v35 + 8))(a1, a3[2]);
        break;
    }
    unsigned int v20 = a2[v15];
    unsigned int v21 = v20 - 10;
    if (v20 >= 0xA)
    {
      if (v15 <= 3) {
        uint64_t v22 = v15;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          if (v15 < 4) {
            goto LABEL_56;
          }
          goto LABEL_58;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          if (v15 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_56;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v15 < 4) {
            goto LABEL_56;
          }
          goto LABEL_58;
        case 4:
          int v23 = *(_DWORD *)a2;
          if (v15 < 4) {
LABEL_56:
          }
            unsigned int v20 = (v23 | (v21 << (8 * v15))) + 10;
          else {
LABEL_58:
          }
            unsigned int v20 = v23 + 10;
          break;
        default:
          break;
      }
    }
    switch(v20)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v34 + 16))(a1, a2, v25);
        a1[v15] = 1;
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v33 + 16))(a1, a2, v7);
        a1[v15] = 2;
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v32 + 16))(a1, a2, v8);
        a1[v15] = 3;
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v31 + 16))(a1, a2, v9);
        a1[v15] = 4;
        break;
      case 5u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v30 + 16))(a1, a2, v10);
        a1[v15] = 5;
        break;
      case 6u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 16))(a1, a2, v11);
        a1[v15] = 6;
        break;
      case 7u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v28 + 16))(a1, a2, v12);
        a1[v15] = 7;
        break;
      case 8u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v27 + 16))(a1, a2, v13);
        a1[v15] = 8;
        break;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[v15] = 9;
        swift_retain();
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v35 + 16))(a1, a2, v26);
        a1[v15] = 0;
        break;
    }
  }
  return a1;
}

_OWORD *sub_1C41F01B0(_OWORD *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[3] - 8);
  if (*(void *)(v4 + 64) <= *(void *)(*(void *)(a3[2] - 8) + 64)) {
    unint64_t v5 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v5 = *(void *)(v4 + 64);
  }
  uint64_t v6 = *(void *)(a3[4] - 8);
  if (*(void *)(v6 + 64) <= v5) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = *(void *)(v6 + 64);
  }
  uint64_t v8 = *(void *)(a3[5] - 8);
  if (*(void *)(v8 + 64) <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = *(void *)(v8 + 64);
  }
  uint64_t v10 = *(void *)(a3[6] - 8);
  if (*(void *)(v10 + 64) <= v9) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = *(void *)(v10 + 64);
  }
  uint64_t v12 = *(void *)(a3[7] - 8);
  if (*(void *)(v12 + 64) > v11) {
    unint64_t v11 = *(void *)(v12 + 64);
  }
  if (*(void *)(*(void *)(a3[8] - 8) + 64) <= v11) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = *(void *)(*(void *)(a3[8] - 8) + 64);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  if (*(void *)(*(void *)(v14 - 8) + 64) > v13) {
    unint64_t v13 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  if (*(void *)(*(void *)(v15 - 8) + 64) <= v13) {
    unint64_t v16 = v13;
  }
  else {
    unint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  }
  if (v16 <= 0x10) {
    uint64_t v17 = 16;
  }
  else {
    uint64_t v17 = v16;
  }
  unsigned int v18 = a2[v17];
  if (v18 >= 0xA)
  {
    if (v17 <= 3) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a2;
        if (v17 < 4) {
          goto LABEL_38;
        }
        goto LABEL_39;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        if (v17 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v17 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 4:
        int v20 = *(_DWORD *)a2;
        if (v17 < 4) {
LABEL_38:
        }
          v20 |= (v18 - 10) << (8 * v17);
LABEL_39:
        unsigned int v18 = v20 + 10;
        break;
      default:
        break;
    }
  }
  switch(v18)
  {
    case 1u:
      (*(void (**)(_OWORD *))(v4 + 32))(a1);
      char v21 = 1;
      break;
    case 2u:
      (*(void (**)(_OWORD *))(v6 + 32))(a1);
      char v21 = 2;
      break;
    case 3u:
      (*(void (**)(_OWORD *))(v8 + 32))(a1);
      char v21 = 3;
      break;
    case 4u:
      (*(void (**)(_OWORD *))(v10 + 32))(a1);
      char v21 = 4;
      break;
    case 5u:
      (*(void (**)(_OWORD *))(v12 + 32))(a1);
      char v21 = 5;
      break;
    case 6u:
      (*(void (**)(_OWORD *))(*(void *)(a3[8] - 8) + 32))(a1);
      char v21 = 6;
      break;
    case 7u:
      (*(void (**)(_OWORD *))(*(void *)(v14 - 8) + 32))(a1);
      char v21 = 7;
      break;
    case 8u:
      (*(void (**)(_OWORD *))(*(void *)(v15 - 8) + 32))(a1);
      char v21 = 8;
      break;
    case 9u:
      *a1 = *(_OWORD *)a2;
      char v21 = 9;
      break;
    default:
      (*(void (**)(_OWORD *))(*(void *)(a3[2] - 8) + 32))(a1);
      char v21 = 0;
      break;
  }
  *((unsigned char *)a1 + v17) = v21;
  return a1;
}

unsigned __int8 *sub_1C41F06D8(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[3];
    uint64_t v36 = *(void *)(a3[2] - 8);
    unint64_t v6 = *(void *)(v36 + 64);
    uint64_t v35 = *(void *)(v5 - 8);
    if (*(void *)(v35 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    uint64_t v7 = a3[4];
    uint64_t v8 = a3[5];
    uint64_t v34 = *(void *)(v7 - 8);
    if (*(void *)(v34 + 64) > v6) {
      unint64_t v6 = *(void *)(v34 + 64);
    }
    uint64_t v33 = *(void *)(v8 - 8);
    if (*(void *)(v33 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v32 = *(void *)(v9 - 8);
    if (*(void *)(v32 + 64) > v6) {
      unint64_t v6 = *(void *)(v32 + 64);
    }
    uint64_t v31 = *(void *)(v10 - 8);
    uint64_t v11 = a3[8];
    uint64_t v12 = a3[9];
    if (*(void *)(v31 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v10 - 8) + 64);
    }
    uint64_t v30 = *(void *)(a3[8] - 8);
    if (*(void *)(v30 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(a3[8] - 8) + 64);
    }
    uint64_t v29 = *(void *)(v12 - 8);
    if (*(void *)(v29 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v12 - 8) + 64);
    }
    uint64_t v13 = a3[10];
    uint64_t v28 = *(void *)(v13 - 8);
    unint64_t v14 = *(void *)(v28 + 64);
    if (v14 <= v6) {
      unint64_t v14 = v6;
    }
    if (v14 <= 0x10) {
      uint64_t v15 = 16;
    }
    else {
      uint64_t v15 = v14;
    }
    unsigned int v16 = a1[v15];
    unsigned int v17 = v16 - 10;
    if (v16 >= 0xA)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a1;
          if (v15 < 4) {
            goto LABEL_33;
          }
          goto LABEL_34;
        case 2:
          int v19 = *(unsigned __int16 *)a1;
          if (v15 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 3:
          int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v15 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 4:
          int v19 = *(_DWORD *)a1;
          if (v15 < 4) {
LABEL_33:
          }
            v19 |= v17 << (8 * v15);
LABEL_34:
          unsigned int v16 = v19 + 10;
          break;
        default:
          break;
      }
    }
    uint64_t v26 = a3[3];
    uint64_t v27 = a3[2];
    switch(v16)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v35 + 8))(a1, v5);
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v34 + 8))(a1, v7);
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v33 + 8))(a1, v8);
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v32 + 8))(a1, v9);
        break;
      case 5u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v31 + 8))(a1, v10);
        break;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v30 + 8))(a1, v11);
        break;
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(a1, v12);
        break;
      case 8u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v28 + 8))(a1, v13);
        break;
      case 9u:
        swift_release();
        break;
      default:
        (*(void (**)(unsigned __int8 *, void))(v36 + 8))(a1, a3[2]);
        break;
    }
    unsigned int v20 = a2[v15];
    unsigned int v21 = v20 - 10;
    if (v20 >= 0xA)
    {
      if (v15 <= 3) {
        uint64_t v22 = v15;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          if (v15 < 4) {
            goto LABEL_56;
          }
          goto LABEL_58;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          if (v15 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_56;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v15 < 4) {
            goto LABEL_56;
          }
          goto LABEL_58;
        case 4:
          int v23 = *(_DWORD *)a2;
          if (v15 < 4) {
LABEL_56:
          }
            unsigned int v20 = (v23 | (v21 << (8 * v15))) + 10;
          else {
LABEL_58:
          }
            unsigned int v20 = v23 + 10;
          break;
        default:
          break;
      }
    }
    switch(v20)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v35 + 32))(a1, a2, v26);
        char v24 = 1;
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v34 + 32))(a1, a2, v7);
        char v24 = 2;
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v33 + 32))(a1, a2, v8);
        char v24 = 3;
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v32 + 32))(a1, a2, v9);
        char v24 = 4;
        break;
      case 5u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v31 + 32))(a1, a2, v10);
        char v24 = 5;
        break;
      case 6u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v30 + 32))(a1, a2, v11);
        char v24 = 6;
        break;
      case 7u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 32))(a1, a2, v12);
        char v24 = 7;
        break;
      case 8u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v28 + 32))(a1, a2, v13);
        char v24 = 8;
        break;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v24 = 9;
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v36 + 32))(a1, a2, v27);
        char v24 = 0;
        break;
    }
    a1[v15] = v24;
  }
  return a1;
}

uint64_t sub_1C41F0E74(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  unint64_t v3 = *(void *)(*(void *)(a3[2] - 8) + 64);
  uint64_t v4 = *(void *)(a3[3] - 8);
  if (*(void *)(v4 + 64) > v3) {
    unint64_t v3 = *(void *)(v4 + 64);
  }
  uint64_t v5 = *(void *)(a3[4] - 8);
  if (*(void *)(v5 + 64) > v3) {
    unint64_t v3 = *(void *)(v5 + 64);
  }
  uint64_t v6 = *(void *)(a3[6] - 8);
  if (*(void *)(*(void *)(a3[5] - 8) + 64) > v3) {
    unint64_t v3 = *(void *)(*(void *)(a3[5] - 8) + 64);
  }
  if (*(void *)(v6 + 64) > v3) {
    unint64_t v3 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(a3[7] - 8);
  if (*(void *)(v7 + 64) > v3) {
    unint64_t v3 = *(void *)(v7 + 64);
  }
  uint64_t v8 = *(void *)(a3[8] - 8);
  if (*(void *)(v8 + 64) > v3) {
    unint64_t v3 = *(void *)(v8 + 64);
  }
  uint64_t v9 = *(void *)(a3[9] - 8);
  if (*(void *)(v9 + 64) > v3) {
    unint64_t v3 = *(void *)(v9 + 64);
  }
  uint64_t v10 = *(void *)(a3[10] - 8);
  if (*(void *)(v10 + 64) > v3) {
    unint64_t v3 = *(void *)(v10 + 64);
  }
  uint64_t v11 = 16;
  if (v3 > 0x10) {
    uint64_t v11 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_38;
  }
  uint64_t v12 = v11 + 1;
  char v13 = 8 * (v11 + 1);
  if ((v11 + 1) <= 3)
  {
    unsigned int v16 = ((a2 + ~(-1 << v13) - 246) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_38;
      }
      goto LABEL_30;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_38;
      }
      goto LABEL_30;
    }
    if (v16 < 2)
    {
LABEL_38:
      unsigned int v18 = *((unsigned __int8 *)a1 + v11);
      if (v18 >= 0xA) {
        return (v18 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_38;
  }
LABEL_30:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v12 | v17) + 247;
}

void sub_1C41F10A0(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  unint64_t v5 = *(void *)(*(void *)(a4[2] - 8) + 64);
  if (*(void *)(*(void *)(a4[3] - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(a4[3] - 8) + 64);
  }
  uint64_t v6 = *(void *)(a4[4] - 8);
  if (*(void *)(v6 + 64) > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(a4[5] - 8);
  if (*(void *)(v7 + 64) > v5) {
    unint64_t v5 = *(void *)(v7 + 64);
  }
  uint64_t v8 = *(void *)(a4[6] - 8);
  if (*(void *)(v8 + 64) > v5) {
    unint64_t v5 = *(void *)(v8 + 64);
  }
  uint64_t v9 = *(void *)(a4[8] - 8);
  if (*(void *)(*(void *)(a4[7] - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(a4[7] - 8) + 64);
  }
  if (*(void *)(v9 + 64) > v5) {
    unint64_t v5 = *(void *)(v9 + 64);
  }
  uint64_t v10 = *(void *)(a4[9] - 8);
  if (*(void *)(v10 + 64) > v5) {
    unint64_t v5 = *(void *)(v10 + 64);
  }
  uint64_t v11 = *(void *)(a4[10] - 8);
  if (*(void *)(v11 + 64) > v5) {
    unint64_t v5 = *(void *)(v11 + 64);
  }
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v12 = v5 + 1;
  if (a3 < 0xF7)
  {
    int v13 = 0;
  }
  else if (v12 <= 3)
  {
    unsigned int v16 = ((a3 + ~(-1 << (8 * v12)) - 246) >> (8 * v12)) + 1;
    if (HIWORD(v16))
    {
      int v13 = 4;
    }
    else if (v16 >= 0x100)
    {
      int v13 = 2;
    }
    else
    {
      int v13 = v16 > 1;
    }
  }
  else
  {
    int v13 = 1;
  }
  if (a2 > 0xF6)
  {
    unsigned int v14 = a2 - 247;
    if (v12 < 4)
    {
      int v15 = (v14 >> (8 * v12)) + 1;
      if (v5 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v12] = v15;
        break;
      case 2:
        *(_WORD *)&a1[v12] = v15;
        break;
      case 3:
LABEL_50:
        __break(1u);
        JUMPOUT(0x1C41F1360);
      case 4:
        *(_DWORD *)&a1[v12] = v15;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v13)
    {
      case 1:
        a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_39;
      case 2:
        *(_WORD *)&a1[v12] = 0;
        goto LABEL_38;
      case 3:
        goto LABEL_50;
      case 4:
        *(_DWORD *)&a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_39;
      default:
LABEL_38:
        if (a2) {
LABEL_39:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t type metadata accessor for TaggedValue_9()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C41F13A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_checkMetadataState();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_checkMetadataState();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_checkMetadataState();
          if (v5 <= 0x3F)
          {
            uint64_t result = swift_checkMetadataState();
            if (v6 <= 0x3F)
            {
              uint64_t result = swift_checkMetadataState();
              if (v7 <= 0x3F)
              {
                uint64_t result = swift_checkMetadataState();
                if (v8 <= 0x3F)
                {
                  uint64_t result = swift_checkMetadataState();
                  if (v9 <= 0x3F)
                  {
                    swift_initEnumMetadataMultiPayload();
                    return 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void *sub_1C41F1634(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  uint64_t v5 = *(void *)(a3[3] - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    unint64_t v6 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = *(void *)(a3[4] - 8);
  if (*(void *)(v7 + 64) <= v6) {
    unint64_t v8 = v6;
  }
  else {
    unint64_t v8 = *(void *)(v7 + 64);
  }
  uint64_t v9 = *(void *)(a3[5] - 8);
  if (*(void *)(v9 + 64) <= v8) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(void *)(a3[6] - 8);
  if (*(void *)(v11 + 64) > v10) {
    unint64_t v10 = *(void *)(v11 + 64);
  }
  uint64_t v12 = *(void *)(a3[7] - 8);
  if (*(void *)(v12 + 64) <= v10) {
    unint64_t v13 = v10;
  }
  else {
    unint64_t v13 = *(void *)(*(void *)(a3[7] - 8) + 64);
  }
  uint64_t v14 = *(void *)(a3[8] - 8);
  if (*(void *)(v14 + 64) <= v13) {
    unint64_t v15 = v13;
  }
  else {
    unint64_t v15 = *(void *)(v14 + 64);
  }
  uint64_t v16 = a3[9];
  uint64_t v17 = a3[10];
  uint64_t v18 = *(void *)(v16 - 8);
  if (*(void *)(v18 + 64) > v15) {
    unint64_t v15 = *(void *)(*(void *)(v16 - 8) + 64);
  }
  uint64_t v19 = *(void *)(v17 - 8);
  if (*(void *)(v19 + 64) <= v15) {
    unint64_t v20 = v15;
  }
  else {
    unint64_t v20 = *(void *)(*(void *)(v17 - 8) + 64);
  }
  if (v20 <= 0x10) {
    uint64_t v21 = 16;
  }
  else {
    uint64_t v21 = v20;
  }
  int v22 = *(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80) | *(_DWORD *)(v11 + 80) | *(_DWORD *)(v12 + 80) | *(_DWORD *)(v14 + 80) | *(_DWORD *)(v18 + 80) | *(_DWORD *)(v19 + 80);
  if ((unint64_t)(v21 + 1) <= 0x18 && (v22 & 0x1000F8) == 0)
  {
    unsigned int v26 = a2[v21];
    if (v26 >= 0xA)
    {
      if (v21 <= 3) {
        uint64_t v27 = v21;
      }
      else {
        uint64_t v27 = 4;
      }
      switch(v27)
      {
        case 1:
          int v28 = *a2;
          if (v21 < 4) {
            goto LABEL_45;
          }
          goto LABEL_46;
        case 2:
          int v28 = *(unsigned __int16 *)a2;
          if (v21 >= 4) {
            goto LABEL_46;
          }
          goto LABEL_45;
        case 3:
          int v28 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v21 >= 4) {
            goto LABEL_46;
          }
          goto LABEL_45;
        case 4:
          int v28 = *(_DWORD *)a2;
          if (v21 < 4) {
LABEL_45:
          }
            v28 |= (v26 - 10) << (8 * v21);
LABEL_46:
          unsigned int v26 = v28 + 10;
          break;
        default:
          break;
      }
    }
    switch(v26)
    {
      case 1u:
        (*(void (**)(void *))(v5 + 16))(a1);
        *((unsigned char *)a1 + v21) = 1;
        break;
      case 2u:
        (*(void (**)(void *))(v7 + 16))(a1);
        *((unsigned char *)a1 + v21) = 2;
        break;
      case 3u:
        (*(void (**)(void *))(v9 + 16))(a1);
        *((unsigned char *)a1 + v21) = 3;
        break;
      case 4u:
        (*(void (**)(void *))(v11 + 16))(a1);
        *((unsigned char *)a1 + v21) = 4;
        break;
      case 5u:
        (*(void (**)(void *))(v12 + 16))(a1);
        *((unsigned char *)a1 + v21) = 5;
        break;
      case 6u:
        (*(void (**)(void *))(v14 + 16))(a1);
        *((unsigned char *)a1 + v21) = 6;
        break;
      case 7u:
        (*(void (**)(void *))(v18 + 16))(a1);
        *((unsigned char *)a1 + v21) = 7;
        break;
      case 8u:
        (*(void (**)(void *))(v19 + 16))(a1);
        *((unsigned char *)a1 + v21) = 8;
        break;
      case 9u:
        uint64_t v29 = *((void *)a2 + 1);
        *a1 = *(void *)a2;
        a1[1] = v29;
        *((unsigned char *)a1 + v21) = 9;
        goto LABEL_31;
      default:
        (*(void (**)(void *))(v4 + 16))(a1);
        *((unsigned char *)a1 + v21) = 0;
        break;
    }
  }
  else
  {
    uint64_t v24 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v24 + (((v22 & 0xF8 | 7u) + 16) & ~(unint64_t)(v22 & 0xF8 | 7u)));
LABEL_31:
    swift_retain();
  }
  return a1;
}

uint64_t sub_1C41F1BFC(unsigned __int8 *a1, void *a2)
{
  uint64_t v22 = *(void *)(a2[3] - 8);
  if (*(void *)(v22 + 64) <= *(void *)(*(void *)(a2[2] - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(a2[2] - 8) + 64);
  }
  else {
    unint64_t v3 = *(void *)(v22 + 64);
  }
  uint64_t v21 = *(void *)(a2[4] - 8);
  if (*(void *)(v21 + 64) <= v3) {
    unint64_t v4 = v3;
  }
  else {
    unint64_t v4 = *(void *)(v21 + 64);
  }
  uint64_t v20 = *(void *)(a2[5] - 8);
  if (*(void *)(v20 + 64) <= v4) {
    unint64_t v5 = v4;
  }
  else {
    unint64_t v5 = *(void *)(v20 + 64);
  }
  uint64_t v6 = *(void *)(a2[6] - 8);
  if (*(void *)(v6 + 64) <= v5) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = *(void *)(v6 + 64);
  }
  uint64_t v8 = *(void *)(a2[7] - 8);
  if (*(void *)(v8 + 64) > v7) {
    unint64_t v7 = *(void *)(v8 + 64);
  }
  if (*(void *)(*(void *)(a2[8] - 8) + 64) <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(a2[8] - 8) + 64);
  }
  uint64_t v10 = a2[9];
  uint64_t v11 = a2[10];
  if (*(void *)(*(void *)(v10 - 8) + 64) <= v9) {
    unint64_t v12 = v9;
  }
  else {
    unint64_t v12 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  if (*(void *)(*(void *)(v11 - 8) + 64) <= v12) {
    unint64_t v13 = v12;
  }
  else {
    unint64_t v13 = *(void *)(*(void *)(v11 - 8) + 64);
  }
  if (v13 <= 0x10) {
    uint64_t v14 = 16;
  }
  else {
    uint64_t v14 = v13;
  }
  unsigned int v15 = a1[v14];
  if (v15 >= 0xA)
  {
    if (v14 <= 3) {
      uint64_t v16 = v14;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a1;
        if (v14 < 4) {
          goto LABEL_39;
        }
        goto LABEL_40;
      case 2:
        int v17 = *(unsigned __int16 *)a1;
        if (v14 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 3:
        int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v14 >= 4) {
          goto LABEL_40;
        }
        goto LABEL_39;
      case 4:
        int v17 = *(_DWORD *)a1;
        if (v14 < 4) {
LABEL_39:
        }
          v17 |= (v15 - 10) << (8 * v14);
LABEL_40:
        unsigned int v15 = v17 + 10;
        break;
      default:
        break;
    }
  }
  switch(v15)
  {
    case 1u:
      uint64_t v18 = *(uint64_t (**)(void))(v22 + 8);
      goto LABEL_50;
    case 2u:
      uint64_t v18 = *(uint64_t (**)(void))(v21 + 8);
      goto LABEL_50;
    case 3u:
      uint64_t v18 = *(uint64_t (**)(void))(v20 + 8);
      goto LABEL_50;
    case 4u:
      uint64_t v18 = *(uint64_t (**)(void))(v6 + 8);
      return v18();
    case 5u:
      uint64_t v18 = *(uint64_t (**)(void))(v8 + 8);
      goto LABEL_50;
    case 6u:
      uint64_t v18 = *(uint64_t (**)(void))(*(void *)(a2[8] - 8) + 8);
      return v18();
    case 7u:
      uint64_t v18 = *(uint64_t (**)(void))(*(void *)(v10 - 8) + 8);
      return v18();
    case 8u:
      uint64_t v18 = *(uint64_t (**)(void))(*(void *)(v11 - 8) + 8);
      return v18();
    case 9u:
      return swift_release();
    default:
      uint64_t v18 = *(uint64_t (**)(void))(*(void *)(a2[2] - 8) + 8);
LABEL_50:
      return v18();
  }
}

void *sub_1C41F20E4(void *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[3] - 8);
  if (*(void *)(v4 + 64) <= *(void *)(*(void *)(a3[2] - 8) + 64)) {
    unint64_t v5 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v5 = *(void *)(v4 + 64);
  }
  uint64_t v6 = *(void *)(a3[4] - 8);
  if (*(void *)(v6 + 64) <= v5) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = *(void *)(v6 + 64);
  }
  uint64_t v8 = *(void *)(a3[5] - 8);
  if (*(void *)(v8 + 64) <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = *(void *)(v8 + 64);
  }
  uint64_t v10 = *(void *)(a3[6] - 8);
  if (*(void *)(v10 + 64) <= v9) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = *(void *)(v10 + 64);
  }
  uint64_t v12 = *(void *)(a3[7] - 8);
  if (*(void *)(v12 + 64) > v11) {
    unint64_t v11 = *(void *)(v12 + 64);
  }
  if (*(void *)(*(void *)(a3[8] - 8) + 64) <= v11) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = *(void *)(*(void *)(a3[8] - 8) + 64);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  if (*(void *)(*(void *)(v14 - 8) + 64) > v13) {
    unint64_t v13 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  if (*(void *)(*(void *)(v15 - 8) + 64) <= v13) {
    unint64_t v16 = v13;
  }
  else {
    unint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  }
  if (v16 <= 0x10) {
    uint64_t v17 = 16;
  }
  else {
    uint64_t v17 = v16;
  }
  unsigned int v18 = a2[v17];
  if (v18 >= 0xA)
  {
    if (v17 <= 3) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a2;
        if (v17 < 4) {
          goto LABEL_38;
        }
        goto LABEL_39;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        if (v17 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v17 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 4:
        int v20 = *(_DWORD *)a2;
        if (v17 < 4) {
LABEL_38:
        }
          v20 |= (v18 - 10) << (8 * v17);
LABEL_39:
        unsigned int v18 = v20 + 10;
        break;
      default:
        break;
    }
  }
  switch(v18)
  {
    case 1u:
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)a1 + v17) = 1;
      break;
    case 2u:
      (*(void (**)(void *))(v6 + 16))(a1);
      *((unsigned char *)a1 + v17) = 2;
      break;
    case 3u:
      (*(void (**)(void *))(v8 + 16))(a1);
      *((unsigned char *)a1 + v17) = 3;
      break;
    case 4u:
      (*(void (**)(void *))(v10 + 16))(a1);
      *((unsigned char *)a1 + v17) = 4;
      break;
    case 5u:
      (*(void (**)(void *))(v12 + 16))(a1);
      *((unsigned char *)a1 + v17) = 5;
      break;
    case 6u:
      (*(void (**)(void *))(*(void *)(a3[8] - 8) + 16))(a1);
      *((unsigned char *)a1 + v17) = 6;
      break;
    case 7u:
      (*(void (**)(void *))(*(void *)(v14 - 8) + 16))(a1);
      *((unsigned char *)a1 + v17) = 7;
      break;
    case 8u:
      (*(void (**)(void *))(*(void *)(v15 - 8) + 16))(a1);
      *((unsigned char *)a1 + v17) = 8;
      break;
    case 9u:
      uint64_t v21 = *((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v21;
      *((unsigned char *)a1 + v17) = 9;
      swift_retain();
      break;
    default:
      (*(void (**)(void *))(*(void *)(a3[2] - 8) + 16))(a1);
      *((unsigned char *)a1 + v17) = 0;
      break;
  }
  return a1;
}

unsigned __int8 *sub_1C41F2630(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[3];
    uint64_t v35 = *(void *)(a3[2] - 8);
    unint64_t v6 = *(void *)(v35 + 64);
    uint64_t v34 = *(void *)(v5 - 8);
    if (*(void *)(v34 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    uint64_t v7 = a3[4];
    uint64_t v8 = a3[5];
    uint64_t v33 = *(void *)(v7 - 8);
    if (*(void *)(v33 + 64) > v6) {
      unint64_t v6 = *(void *)(v33 + 64);
    }
    uint64_t v32 = *(void *)(v8 - 8);
    if (*(void *)(v32 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v31 = *(void *)(v9 - 8);
    if (*(void *)(v31 + 64) > v6) {
      unint64_t v6 = *(void *)(v31 + 64);
    }
    uint64_t v30 = *(void *)(v10 - 8);
    uint64_t v11 = a3[8];
    uint64_t v12 = a3[9];
    if (*(void *)(v30 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v10 - 8) + 64);
    }
    uint64_t v29 = *(void *)(a3[8] - 8);
    if (*(void *)(v29 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(a3[8] - 8) + 64);
    }
    uint64_t v28 = *(void *)(v12 - 8);
    if (*(void *)(v28 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v12 - 8) + 64);
    }
    uint64_t v13 = a3[10];
    uint64_t v27 = *(void *)(v13 - 8);
    unint64_t v14 = *(void *)(v27 + 64);
    if (v14 <= v6) {
      unint64_t v14 = v6;
    }
    if (v14 <= 0x10) {
      uint64_t v15 = 16;
    }
    else {
      uint64_t v15 = v14;
    }
    unsigned int v16 = a1[v15];
    unsigned int v17 = v16 - 10;
    if (v16 >= 0xA)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a1;
          if (v15 < 4) {
            goto LABEL_33;
          }
          goto LABEL_34;
        case 2:
          int v19 = *(unsigned __int16 *)a1;
          if (v15 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 3:
          int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v15 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 4:
          int v19 = *(_DWORD *)a1;
          if (v15 < 4) {
LABEL_33:
          }
            v19 |= v17 << (8 * v15);
LABEL_34:
          unsigned int v16 = v19 + 10;
          break;
        default:
          break;
      }
    }
    uint64_t v25 = a3[3];
    uint64_t v26 = a3[2];
    switch(v16)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v34 + 8))(a1, v5);
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v33 + 8))(a1, v7);
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v32 + 8))(a1, v8);
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v31 + 8))(a1, v9);
        break;
      case 5u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v30 + 8))(a1, v10);
        break;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(a1, v11);
        break;
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v28 + 8))(a1, v12);
        break;
      case 8u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v27 + 8))(a1, v13);
        break;
      case 9u:
        swift_release();
        break;
      default:
        (*(void (**)(unsigned __int8 *, void))(v35 + 8))(a1, a3[2]);
        break;
    }
    unsigned int v20 = a2[v15];
    unsigned int v21 = v20 - 10;
    if (v20 >= 0xA)
    {
      if (v15 <= 3) {
        uint64_t v22 = v15;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          if (v15 < 4) {
            goto LABEL_56;
          }
          goto LABEL_58;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          if (v15 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_56;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v15 < 4) {
            goto LABEL_56;
          }
          goto LABEL_58;
        case 4:
          int v23 = *(_DWORD *)a2;
          if (v15 < 4) {
LABEL_56:
          }
            unsigned int v20 = (v23 | (v21 << (8 * v15))) + 10;
          else {
LABEL_58:
          }
            unsigned int v20 = v23 + 10;
          break;
        default:
          break;
      }
    }
    switch(v20)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v34 + 16))(a1, a2, v25);
        a1[v15] = 1;
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v33 + 16))(a1, a2, v7);
        a1[v15] = 2;
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v32 + 16))(a1, a2, v8);
        a1[v15] = 3;
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v31 + 16))(a1, a2, v9);
        a1[v15] = 4;
        break;
      case 5u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v30 + 16))(a1, a2, v10);
        a1[v15] = 5;
        break;
      case 6u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 16))(a1, a2, v11);
        a1[v15] = 6;
        break;
      case 7u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v28 + 16))(a1, a2, v12);
        a1[v15] = 7;
        break;
      case 8u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v27 + 16))(a1, a2, v13);
        a1[v15] = 8;
        break;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *((void *)a1 + 1) = *((void *)a2 + 1);
        a1[v15] = 9;
        swift_retain();
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v35 + 16))(a1, a2, v26);
        a1[v15] = 0;
        break;
    }
  }
  return a1;
}

_OWORD *sub_1C41F2DF8(_OWORD *a1, unsigned __int8 *a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[3] - 8);
  if (*(void *)(v4 + 64) <= *(void *)(*(void *)(a3[2] - 8) + 64)) {
    unint64_t v5 = *(void *)(*(void *)(a3[2] - 8) + 64);
  }
  else {
    unint64_t v5 = *(void *)(v4 + 64);
  }
  uint64_t v6 = *(void *)(a3[4] - 8);
  if (*(void *)(v6 + 64) <= v5) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = *(void *)(v6 + 64);
  }
  uint64_t v8 = *(void *)(a3[5] - 8);
  if (*(void *)(v8 + 64) <= v7) {
    unint64_t v9 = v7;
  }
  else {
    unint64_t v9 = *(void *)(v8 + 64);
  }
  uint64_t v10 = *(void *)(a3[6] - 8);
  if (*(void *)(v10 + 64) <= v9) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = *(void *)(v10 + 64);
  }
  uint64_t v12 = *(void *)(a3[7] - 8);
  if (*(void *)(v12 + 64) > v11) {
    unint64_t v11 = *(void *)(v12 + 64);
  }
  if (*(void *)(*(void *)(a3[8] - 8) + 64) <= v11) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = *(void *)(*(void *)(a3[8] - 8) + 64);
  }
  uint64_t v14 = a3[9];
  uint64_t v15 = a3[10];
  if (*(void *)(*(void *)(v14 - 8) + 64) > v13) {
    unint64_t v13 = *(void *)(*(void *)(v14 - 8) + 64);
  }
  if (*(void *)(*(void *)(v15 - 8) + 64) <= v13) {
    unint64_t v16 = v13;
  }
  else {
    unint64_t v16 = *(void *)(*(void *)(v15 - 8) + 64);
  }
  if (v16 <= 0x10) {
    uint64_t v17 = 16;
  }
  else {
    uint64_t v17 = v16;
  }
  unsigned int v18 = a2[v17];
  if (v18 >= 0xA)
  {
    if (v17 <= 3) {
      uint64_t v19 = v17;
    }
    else {
      uint64_t v19 = 4;
    }
    switch(v19)
    {
      case 1:
        int v20 = *a2;
        if (v17 < 4) {
          goto LABEL_38;
        }
        goto LABEL_39;
      case 2:
        int v20 = *(unsigned __int16 *)a2;
        if (v17 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 3:
        int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v17 >= 4) {
          goto LABEL_39;
        }
        goto LABEL_38;
      case 4:
        int v20 = *(_DWORD *)a2;
        if (v17 < 4) {
LABEL_38:
        }
          v20 |= (v18 - 10) << (8 * v17);
LABEL_39:
        unsigned int v18 = v20 + 10;
        break;
      default:
        break;
    }
  }
  switch(v18)
  {
    case 1u:
      (*(void (**)(_OWORD *))(v4 + 32))(a1);
      char v21 = 1;
      break;
    case 2u:
      (*(void (**)(_OWORD *))(v6 + 32))(a1);
      char v21 = 2;
      break;
    case 3u:
      (*(void (**)(_OWORD *))(v8 + 32))(a1);
      char v21 = 3;
      break;
    case 4u:
      (*(void (**)(_OWORD *))(v10 + 32))(a1);
      char v21 = 4;
      break;
    case 5u:
      (*(void (**)(_OWORD *))(v12 + 32))(a1);
      char v21 = 5;
      break;
    case 6u:
      (*(void (**)(_OWORD *))(*(void *)(a3[8] - 8) + 32))(a1);
      char v21 = 6;
      break;
    case 7u:
      (*(void (**)(_OWORD *))(*(void *)(v14 - 8) + 32))(a1);
      char v21 = 7;
      break;
    case 8u:
      (*(void (**)(_OWORD *))(*(void *)(v15 - 8) + 32))(a1);
      char v21 = 8;
      break;
    case 9u:
      *a1 = *(_OWORD *)a2;
      char v21 = 9;
      break;
    default:
      (*(void (**)(_OWORD *))(*(void *)(a3[2] - 8) + 32))(a1);
      char v21 = 0;
      break;
  }
  *((unsigned char *)a1 + v17) = v21;
  return a1;
}

unsigned __int8 *sub_1C41F3320(unsigned __int8 *a1, unsigned __int8 *a2, void *a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = a3[3];
    uint64_t v36 = *(void *)(a3[2] - 8);
    unint64_t v6 = *(void *)(v36 + 64);
    uint64_t v35 = *(void *)(v5 - 8);
    if (*(void *)(v35 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
    }
    uint64_t v7 = a3[4];
    uint64_t v8 = a3[5];
    uint64_t v34 = *(void *)(v7 - 8);
    if (*(void *)(v34 + 64) > v6) {
      unint64_t v6 = *(void *)(v34 + 64);
    }
    uint64_t v33 = *(void *)(v8 - 8);
    if (*(void *)(v33 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    uint64_t v9 = a3[6];
    uint64_t v10 = a3[7];
    uint64_t v32 = *(void *)(v9 - 8);
    if (*(void *)(v32 + 64) > v6) {
      unint64_t v6 = *(void *)(v32 + 64);
    }
    uint64_t v31 = *(void *)(v10 - 8);
    uint64_t v11 = a3[8];
    uint64_t v12 = a3[9];
    if (*(void *)(v31 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v10 - 8) + 64);
    }
    uint64_t v30 = *(void *)(a3[8] - 8);
    if (*(void *)(v30 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(a3[8] - 8) + 64);
    }
    uint64_t v29 = *(void *)(v12 - 8);
    if (*(void *)(v29 + 64) > v6) {
      unint64_t v6 = *(void *)(*(void *)(v12 - 8) + 64);
    }
    uint64_t v13 = a3[10];
    uint64_t v28 = *(void *)(v13 - 8);
    unint64_t v14 = *(void *)(v28 + 64);
    if (v14 <= v6) {
      unint64_t v14 = v6;
    }
    if (v14 <= 0x10) {
      uint64_t v15 = 16;
    }
    else {
      uint64_t v15 = v14;
    }
    unsigned int v16 = a1[v15];
    unsigned int v17 = v16 - 10;
    if (v16 >= 0xA)
    {
      if (v15 <= 3) {
        uint64_t v18 = v15;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a1;
          if (v15 < 4) {
            goto LABEL_33;
          }
          goto LABEL_34;
        case 2:
          int v19 = *(unsigned __int16 *)a1;
          if (v15 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 3:
          int v19 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v15 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 4:
          int v19 = *(_DWORD *)a1;
          if (v15 < 4) {
LABEL_33:
          }
            v19 |= v17 << (8 * v15);
LABEL_34:
          unsigned int v16 = v19 + 10;
          break;
        default:
          break;
      }
    }
    uint64_t v26 = a3[3];
    uint64_t v27 = a3[2];
    switch(v16)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v35 + 8))(a1, v5);
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v34 + 8))(a1, v7);
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v33 + 8))(a1, v8);
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v32 + 8))(a1, v9);
        break;
      case 5u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v31 + 8))(a1, v10);
        break;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v30 + 8))(a1, v11);
        break;
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v29 + 8))(a1, v12);
        break;
      case 8u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v28 + 8))(a1, v13);
        break;
      case 9u:
        swift_release();
        break;
      default:
        (*(void (**)(unsigned __int8 *, void))(v36 + 8))(a1, a3[2]);
        break;
    }
    unsigned int v20 = a2[v15];
    unsigned int v21 = v20 - 10;
    if (v20 >= 0xA)
    {
      if (v15 <= 3) {
        uint64_t v22 = v15;
      }
      else {
        uint64_t v22 = 4;
      }
      switch(v22)
      {
        case 1:
          int v23 = *a2;
          if (v15 < 4) {
            goto LABEL_56;
          }
          goto LABEL_58;
        case 2:
          int v23 = *(unsigned __int16 *)a2;
          if (v15 >= 4) {
            goto LABEL_58;
          }
          goto LABEL_56;
        case 3:
          int v23 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v15 < 4) {
            goto LABEL_56;
          }
          goto LABEL_58;
        case 4:
          int v23 = *(_DWORD *)a2;
          if (v15 < 4) {
LABEL_56:
          }
            unsigned int v20 = (v23 | (v21 << (8 * v15))) + 10;
          else {
LABEL_58:
          }
            unsigned int v20 = v23 + 10;
          break;
        default:
          break;
      }
    }
    switch(v20)
    {
      case 1u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v35 + 32))(a1, a2, v26);
        char v24 = 1;
        break;
      case 2u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v34 + 32))(a1, a2, v7);
        char v24 = 2;
        break;
      case 3u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v33 + 32))(a1, a2, v8);
        char v24 = 3;
        break;
      case 4u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v32 + 32))(a1, a2, v9);
        char v24 = 4;
        break;
      case 5u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v31 + 32))(a1, a2, v10);
        char v24 = 5;
        break;
      case 6u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v30 + 32))(a1, a2, v11);
        char v24 = 6;
        break;
      case 7u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 32))(a1, a2, v12);
        char v24 = 7;
        break;
      case 8u:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v28 + 32))(a1, a2, v13);
        char v24 = 8;
        break;
      case 9u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        char v24 = 9;
        break;
      default:
        (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v36 + 32))(a1, a2, v27);
        char v24 = 0;
        break;
    }
    a1[v15] = v24;
  }
  return a1;
}

uint64_t sub_1C41F3ABC(unsigned __int16 *a1, unsigned int a2, void *a3)
{
  unint64_t v3 = *(void *)(*(void *)(a3[2] - 8) + 64);
  uint64_t v4 = *(void *)(a3[3] - 8);
  if (*(void *)(v4 + 64) > v3) {
    unint64_t v3 = *(void *)(v4 + 64);
  }
  uint64_t v5 = *(void *)(a3[4] - 8);
  if (*(void *)(v5 + 64) > v3) {
    unint64_t v3 = *(void *)(v5 + 64);
  }
  uint64_t v6 = *(void *)(a3[6] - 8);
  if (*(void *)(*(void *)(a3[5] - 8) + 64) > v3) {
    unint64_t v3 = *(void *)(*(void *)(a3[5] - 8) + 64);
  }
  if (*(void *)(v6 + 64) > v3) {
    unint64_t v3 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(a3[7] - 8);
  if (*(void *)(v7 + 64) > v3) {
    unint64_t v3 = *(void *)(v7 + 64);
  }
  uint64_t v8 = *(void *)(a3[8] - 8);
  if (*(void *)(v8 + 64) > v3) {
    unint64_t v3 = *(void *)(v8 + 64);
  }
  uint64_t v9 = *(void *)(a3[9] - 8);
  if (*(void *)(v9 + 64) > v3) {
    unint64_t v3 = *(void *)(v9 + 64);
  }
  uint64_t v10 = *(void *)(a3[10] - 8);
  if (*(void *)(v10 + 64) > v3) {
    unint64_t v3 = *(void *)(v10 + 64);
  }
  uint64_t v11 = 16;
  if (v3 > 0x10) {
    uint64_t v11 = v3;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_38;
  }
  uint64_t v12 = v11 + 1;
  char v13 = 8 * (v11 + 1);
  if ((v11 + 1) <= 3)
  {
    unsigned int v16 = ((a2 + ~(-1 << v13) - 246) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_38;
      }
      goto LABEL_30;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_38;
      }
      goto LABEL_30;
    }
    if (v16 < 2)
    {
LABEL_38:
      unsigned int v18 = *((unsigned __int8 *)a1 + v11);
      if (v18 >= 0xA) {
        return (v18 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_38;
  }
LABEL_30:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 > 3) {
      LODWORD(v12) = 4;
    }
    switch((int)v12)
    {
      case 2:
        LODWORD(v12) = *a1;
        break;
      case 3:
        LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v12) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v12) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v12 | v17) + 247;
}

void sub_1C41F3CE8(char *a1, unsigned int a2, unsigned int a3, void *a4)
{
  unint64_t v5 = *(void *)(*(void *)(a4[2] - 8) + 64);
  if (*(void *)(*(void *)(a4[3] - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(a4[3] - 8) + 64);
  }
  uint64_t v6 = *(void *)(a4[4] - 8);
  if (*(void *)(v6 + 64) > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(a4[5] - 8);
  if (*(void *)(v7 + 64) > v5) {
    unint64_t v5 = *(void *)(v7 + 64);
  }
  uint64_t v8 = *(void *)(a4[6] - 8);
  if (*(void *)(v8 + 64) > v5) {
    unint64_t v5 = *(void *)(v8 + 64);
  }
  uint64_t v9 = *(void *)(a4[8] - 8);
  if (*(void *)(*(void *)(a4[7] - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(a4[7] - 8) + 64);
  }
  if (*(void *)(v9 + 64) > v5) {
    unint64_t v5 = *(void *)(v9 + 64);
  }
  uint64_t v10 = *(void *)(a4[9] - 8);
  if (*(void *)(v10 + 64) > v5) {
    unint64_t v5 = *(void *)(v10 + 64);
  }
  uint64_t v11 = *(void *)(a4[10] - 8);
  if (*(void *)(v11 + 64) > v5) {
    unint64_t v5 = *(void *)(v11 + 64);
  }
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v12 = v5 + 1;
  if (a3 < 0xF7)
  {
    int v13 = 0;
  }
  else if (v12 <= 3)
  {
    unsigned int v16 = ((a3 + ~(-1 << (8 * v12)) - 246) >> (8 * v12)) + 1;
    if (HIWORD(v16))
    {
      int v13 = 4;
    }
    else if (v16 >= 0x100)
    {
      int v13 = 2;
    }
    else
    {
      int v13 = v16 > 1;
    }
  }
  else
  {
    int v13 = 1;
  }
  if (a2 > 0xF6)
  {
    unsigned int v14 = a2 - 247;
    if (v12 < 4)
    {
      int v15 = (v14 >> (8 * v12)) + 1;
      if (v5 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v12] = v15;
        break;
      case 2:
        *(_WORD *)&a1[v12] = v15;
        break;
      case 3:
LABEL_50:
        __break(1u);
        JUMPOUT(0x1C41F3FA8);
      case 4:
        *(_DWORD *)&a1[v12] = v15;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v13)
    {
      case 1:
        a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_39;
      case 2:
        *(_WORD *)&a1[v12] = 0;
        goto LABEL_38;
      case 3:
        goto LABEL_50;
      case 4:
        *(_DWORD *)&a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_39;
      default:
LABEL_38:
        if (a2) {
LABEL_39:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C41F3FD0(unsigned __int8 *a1, void *a2)
{
  unint64_t v2 = *(void *)(*(void *)(a2[2] - 8) + 64);
  uint64_t v3 = *(void *)(a2[3] - 8);
  if (*(void *)(v3 + 64) > v2) {
    unint64_t v2 = *(void *)(v3 + 64);
  }
  uint64_t v4 = *(void *)(a2[4] - 8);
  if (*(void *)(v4 + 64) > v2) {
    unint64_t v2 = *(void *)(v4 + 64);
  }
  uint64_t v5 = *(void *)(a2[5] - 8);
  if (*(void *)(v5 + 64) > v2) {
    unint64_t v2 = *(void *)(v5 + 64);
  }
  uint64_t v6 = *(void *)(a2[6] - 8);
  if (*(void *)(v6 + 64) > v2) {
    unint64_t v2 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(a2[7] - 8);
  if (*(void *)(v7 + 64) > v2) {
    unint64_t v2 = *(void *)(v7 + 64);
  }
  uint64_t v8 = *(void *)(a2[9] - 8);
  if (*(void *)(*(void *)(a2[8] - 8) + 64) > v2) {
    unint64_t v2 = *(void *)(*(void *)(a2[8] - 8) + 64);
  }
  if (*(void *)(v8 + 64) > v2) {
    unint64_t v2 = *(void *)(v8 + 64);
  }
  uint64_t v9 = *(void *)(a2[10] - 8);
  if (*(void *)(v9 + 64) > v2) {
    unint64_t v2 = *(void *)(v9 + 64);
  }
  uint64_t v10 = 16;
  if (v2 > 0x10) {
    uint64_t v10 = v2;
  }
  uint64_t v11 = a1[v10];
  int v12 = v11 - 10;
  if (v11 >= 0xA)
  {
    if (v10 <= 3) {
      uint64_t v13 = v10;
    }
    else {
      uint64_t v13 = 4;
    }
    switch(v13)
    {
      case 1:
        int v14 = *a1;
        goto LABEL_28;
      case 2:
        int v14 = *(unsigned __int16 *)a1;
        goto LABEL_28;
      case 3:
        int v14 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_28;
      case 4:
        int v14 = *(_DWORD *)a1;
LABEL_28:
        unsigned int v15 = (v14 | (v12 << (8 * v10))) + 10;
        LODWORD(v11) = v14 + 10;
        if (v10 >= 4) {
          uint64_t v11 = v11;
        }
        else {
          uint64_t v11 = v15;
        }
        break;
      default:
        return v11;
    }
  }
  return v11;
}

void sub_1C41F4180(unsigned char *a1, unsigned int a2, void *a3)
{
  uint64_t v4 = *(void *)(a3[2] - 8);
  if (a2 > 9)
  {
    unint64_t v21 = *(void *)(*(void *)(a3[2] - 8) + 64);
    uint64_t v22 = *(void *)(a3[3] - 8);
    if (*(void *)(v22 + 64) > v21) {
      unint64_t v21 = *(void *)(v22 + 64);
    }
    uint64_t v23 = *(void *)(a3[4] - 8);
    if (*(void *)(v23 + 64) > v21) {
      unint64_t v21 = *(void *)(v23 + 64);
    }
    uint64_t v24 = *(void *)(a3[5] - 8);
    if (*(void *)(v24 + 64) > v21) {
      unint64_t v21 = *(void *)(v24 + 64);
    }
    uint64_t v25 = *(void *)(a3[6] - 8);
    if (*(void *)(v25 + 64) > v21) {
      unint64_t v21 = *(void *)(v25 + 64);
    }
    uint64_t v26 = *(void *)(a3[8] - 8);
    if (*(void *)(*(void *)(a3[7] - 8) + 64) > v21) {
      unint64_t v21 = *(void *)(*(void *)(a3[7] - 8) + 64);
    }
    if (*(void *)(v26 + 64) > v21) {
      unint64_t v21 = *(void *)(v26 + 64);
    }
    uint64_t v27 = *(void *)(a3[9] - 8);
    if (*(void *)(v27 + 64) > v21) {
      unint64_t v21 = *(void *)(v27 + 64);
    }
    uint64_t v28 = *(void *)(a3[10] - 8);
    if (*(void *)(v28 + 64) > v21) {
      unint64_t v21 = *(void *)(v28 + 64);
    }
    if (v21 <= 0x10) {
      size_t v29 = 16;
    }
    else {
      size_t v29 = v21;
    }
    unsigned int v30 = a2 - 10;
    if (v29 < 4)
    {
      unsigned int v31 = v30 >> (8 * v29);
      int v32 = v30 & ~(-1 << (8 * v29));
      a1[v29] = v31 + 10;
      bzero(a1, v29);
      if (v29 == 3)
      {
        *(_WORD *)a1 = v32;
        a1[2] = BYTE2(v32);
      }
      else if (v29 == 2)
      {
        *(_WORD *)a1 = v32;
      }
      else
      {
        *a1 = v32;
      }
    }
    else
    {
      a1[v29] = 10;
      bzero(a1, v29);
      *(_DWORD *)a1 = v30;
    }
  }
  else
  {
    uint64_t v5 = *(void *)(a3[3] - 8);
    uint64_t v6 = *(void *)(a3[4] - 8);
    uint64_t v7 = *(void *)(a3[5] - 8);
    uint64_t v8 = *(void *)(a3[6] - 8);
    uint64_t v9 = *(void *)(a3[7] - 8);
    uint64_t v10 = *(void *)(a3[8] - 8);
    uint64_t v11 = *(void *)(a3[9] - 8);
    unint64_t v12 = *(void *)(*(void *)(a3[10] - 8) + 64);
    unint64_t v13 = *(void *)(v11 + 64);
    unint64_t v14 = *(void *)(v10 + 64);
    unint64_t v15 = *(void *)(v9 + 64);
    unint64_t v16 = *(void *)(v8 + 64);
    unint64_t v17 = *(void *)(v7 + 64);
    unint64_t v18 = *(void *)(v6 + 64);
    unint64_t v19 = *(void *)(v5 + 64);
    unint64_t v20 = *(void *)(v4 + 64);
    if (v19 > v20) {
      unint64_t v20 = v19;
    }
    if (v18 > v20) {
      unint64_t v20 = v18;
    }
    if (v17 > v20) {
      unint64_t v20 = v17;
    }
    if (v16 > v20) {
      unint64_t v20 = v16;
    }
    if (v15 > v20) {
      unint64_t v20 = v15;
    }
    if (v14 > v20) {
      unint64_t v20 = v14;
    }
    if (v13 > v20) {
      unint64_t v20 = v13;
    }
    if (v12 > v20) {
      unint64_t v20 = v12;
    }
    if (v20 <= 0x10) {
      unint64_t v20 = 16;
    }
    a1[v20] = a2;
  }
}

uint64_t sub_1C41F4488()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        uint64_t result = swift_getAssociatedTypeWitness();
        if (v4 <= 0x3F)
        {
          uint64_t result = swift_getAssociatedTypeWitness();
          if (v5 <= 0x3F)
          {
            uint64_t result = swift_getAssociatedTypeWitness();
            if (v6 <= 0x3F)
            {
              uint64_t result = swift_getAssociatedTypeWitness();
              if (v7 <= 0x3F)
              {
                uint64_t result = swift_getAssociatedTypeWitness();
                if (v8 <= 0x3F)
                {
                  uint64_t result = swift_getAssociatedTypeWitness();
                  if (v9 <= 0x3F)
                  {
                    swift_initEnumMetadataMultiPayload();
                    return 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void *sub_1C41F47F8(void *a1, unsigned __int8 *a2)
{
  uint64_t v28 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v2 = *(void *)(v28 + 64);
  uint64_t v27 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v27 + 64) > v2) {
    unint64_t v2 = *(void *)(v27 + 64);
  }
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v3 + 64) > v2) {
    unint64_t v2 = *(void *)(v3 + 64);
  }
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v4 + 64) <= v2) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = *(void *)(v4 + 64);
  }
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v6 + 64) > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v7 + 64) <= v5) {
    unint64_t v8 = v5;
  }
  else {
    unint64_t v8 = *(void *)(v7 + 64);
  }
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v9 + 64) <= v8) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = *(void *)(v9 + 64);
  }
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v11 + 64) > v10) {
    unint64_t v10 = *(void *)(v11 + 64);
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v13 + 64) <= v10) {
    unint64_t v14 = v10;
  }
  else {
    unint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  size_t v15 = v14 + 1;
  int v16 = *(_DWORD *)(v13 + 80);
  uint64_t v17 = (*(unsigned char *)(v27 + 80) | *(unsigned char *)(v28 + 80) | *(unsigned char *)(v3 + 80) | *(unsigned char *)(v4 + 80) | *(unsigned char *)(v6 + 80) | *(unsigned char *)(v7 + 80) | *(unsigned char *)(v9 + 80) | *(unsigned char *)(v11 + 80) | v16);
  if (v17 <= 7
    && v15 <= 0x18
    && ((*(_DWORD *)(v27 + 80) | *(_DWORD *)(v28 + 80) | *(_DWORD *)(v3 + 80) | *(_DWORD *)(v4 + 80) | *(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v9 + 80) | *(_DWORD *)(v11 + 80) | v16) & 0x100000) == 0)
  {
    unint64_t v21 = a1;
    unsigned int v23 = a2[v14];
    unsigned int v24 = v23 - 10;
    if (v23 >= 0xA)
    {
      if (v14 <= 3) {
        uint64_t v25 = v14;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *a2;
          if (v14 < 4) {
            goto LABEL_40;
          }
          goto LABEL_42;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          if (v14 >= 4) {
            goto LABEL_42;
          }
          goto LABEL_40;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v14 < 4) {
            goto LABEL_40;
          }
          goto LABEL_42;
        case 4:
          int v26 = *(_DWORD *)a2;
          if (v14 < 4) {
LABEL_40:
          }
            unsigned int v23 = (v26 | (v24 << (8 * v14))) + 10;
          else {
LABEL_42:
          }
            unsigned int v23 = v26 + 10;
          break;
        default:
          break;
      }
    }
    switch(v23)
    {
      case 0u:
        (*(void (**)(void *))(v28 + 16))(a1);
        *((unsigned char *)a1 + v14) = 0;
        break;
      case 1u:
        (*(void (**)(void *))(v27 + 16))(a1);
        *((unsigned char *)a1 + v14) = 1;
        break;
      case 2u:
        (*(void (**)(void *))(v3 + 16))(a1);
        *((unsigned char *)a1 + v14) = 2;
        break;
      case 3u:
        (*(void (**)(void *))(v4 + 16))(a1);
        *((unsigned char *)a1 + v14) = 3;
        break;
      case 4u:
        (*(void (**)(void *))(v6 + 16))(a1);
        *((unsigned char *)a1 + v14) = 4;
        break;
      case 5u:
        (*(void (**)(void *))(v7 + 16))(a1);
        *((unsigned char *)a1 + v14) = 5;
        break;
      case 6u:
        (*(void (**)(void *))(v9 + 16))(a1);
        *((unsigned char *)a1 + v14) = 6;
        break;
      case 7u:
        (*(void (**)(void *))(v11 + 16))(a1);
        *((unsigned char *)a1 + v14) = 7;
        break;
      case 8u:
        (*(void (**)(void *))(v13 + 16))(a1);
        *((unsigned char *)a1 + v14) = 8;
        break;
      case 9u:
        *((unsigned char *)a1 + v14) = 9;
        break;
      default:
        memcpy(a1, a2, v15);
        break;
    }
  }
  else
  {
    uint64_t v20 = *(void *)a2;
    *a1 = *(void *)a2;
    unint64_t v21 = (void *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return v21;
}

uint64_t sub_1C41F4EFC(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = *(void *)(v31 + 64);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v4 - 8);
  uint64_t v30 = v4;
  if (*(void *)(v29 + 64) > v3) {
    unint64_t v3 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v5 - 8);
  uint64_t v28 = v5;
  if (*(void *)(v27 + 64) > v3) {
    unint64_t v3 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v6 - 8);
  uint64_t v26 = v6;
  if (*(void *)(v25 + 64) > v3) {
    unint64_t v3 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v7 - 8);
  if (*(void *)(v24 + 64) > v3) {
    unint64_t v3 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v8 - 8);
  if (*(void *)(v23 + 64) <= v3) {
    unint64_t v9 = v3;
  }
  else {
    unint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  }
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v10 - 8);
  if (*(void *)(v22 + 64) <= v9) {
    unint64_t v11 = v9;
  }
  else {
    unint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  }
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v12 - 8);
  if (*(void *)(v21 + 64) > v11) {
    unint64_t v11 = *(void *)(*(void *)(v12 - 8) + 64);
  }
  uint64_t result = swift_getAssociatedTypeWitness();
  unint64_t v14 = *(void *)(*(void *)(result - 8) + 64);
  if (v14 <= v11) {
    unint64_t v14 = v11;
  }
  unsigned int v15 = a1[v14];
  unsigned int v16 = v15 - 10;
  if (v15 >= 0xA)
  {
    if (v14 <= 3) {
      uint64_t v17 = v14;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a1;
        if (v14 >= 4) {
          goto LABEL_33;
        }
        goto LABEL_29;
      case 2:
        int v18 = *(unsigned __int16 *)a1;
        if (v14 >= 4) {
          goto LABEL_33;
        }
        goto LABEL_29;
      case 3:
        int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v14 < 4) {
          goto LABEL_29;
        }
        goto LABEL_33;
      case 4:
        int v18 = *(_DWORD *)a1;
        if (v14 < 4)
        {
LABEL_29:
          unsigned int v15 = (v18 | (v16 << (8 * v14))) + 10;
          break;
        }
LABEL_33:
        unsigned int v15 = v18 + 10;
        if (v15 > 8) {
          return result;
        }
        break;
      default:
        break;
    }
  }
  uint64_t v19 = v31;
  switch(v15)
  {
    case 0u:
      goto LABEL_42;
    case 1u:
      uint64_t v19 = v29;
      uint64_t AssociatedTypeWitness = v30;
      goto LABEL_42;
    case 2u:
      uint64_t v19 = v27;
      uint64_t AssociatedTypeWitness = v28;
      goto LABEL_42;
    case 3u:
      uint64_t v19 = v25;
      uint64_t AssociatedTypeWitness = v26;
      goto LABEL_42;
    case 4u:
      uint64_t v19 = v24;
      uint64_t AssociatedTypeWitness = v7;
      goto LABEL_42;
    case 5u:
      uint64_t v19 = v23;
      uint64_t AssociatedTypeWitness = v8;
      goto LABEL_42;
    case 6u:
      uint64_t v19 = v22;
      uint64_t AssociatedTypeWitness = v10;
      goto LABEL_42;
    case 7u:
      uint64_t v19 = v21;
      uint64_t AssociatedTypeWitness = v12;
      goto LABEL_42;
    case 8u:
      uint64_t v19 = *(void *)(result - 8);
      uint64_t AssociatedTypeWitness = result;
LABEL_42:
      uint64_t v20 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v19 + 8);
      uint64_t result = v20(a1, AssociatedTypeWitness);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1C41F549C(void *a1, unsigned __int8 *a2)
{
  uint64_t v22 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v2 = *(void *)(v22 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v21 + 64) > v2) {
    unint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(v4 - 8);
  if (*(void *)(v20 + 64) > v2) {
    unint64_t v2 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  uint64_t v19 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v19 + 64) > v2) {
    unint64_t v2 = *(void *)(v19 + 64);
  }
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v18 + 64) > v2) {
    unint64_t v2 = *(void *)(v18 + 64);
  }
  uint64_t v17 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v17 + 64) > v2) {
    unint64_t v2 = *(void *)(v17 + 64);
  }
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v16 + 64) <= v2) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = *(void *)(v16 + 64);
  }
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v6 + 64) > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v7 = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(v7 - 8) + 64) <= v5) {
    unint64_t v8 = v5;
  }
  else {
    unint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 10;
  if (v9 < 0xA)
  {
    uint64_t v12 = a1;
  }
  else
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    uint64_t v12 = a1;
    switch(v11)
    {
      case 1:
        int v13 = *a2;
        if (v8 >= 4) {
          goto LABEL_35;
        }
        goto LABEL_29;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        if (v8 < 4) {
          goto LABEL_29;
        }
        goto LABEL_35;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v8 < 4) {
          goto LABEL_29;
        }
        goto LABEL_35;
      case 4:
        int v13 = *(_DWORD *)a2;
        if (v8 < 4)
        {
LABEL_29:
          unsigned int v9 = (v13 | (v10 << (8 * v8))) + 10;
        }
        else
        {
LABEL_35:
          unsigned int v9 = v13 + 10;
          if (v9 > 9)
          {
LABEL_27:
            memcpy(v12, a2, v8 + 1);
            return v12;
          }
        }
        break;
      default:
        break;
    }
  }
  switch(v9)
  {
    case 0u:
      (*(void (**)(void *))(v22 + 16))(v12);
      *((unsigned char *)v12 + v8) = 0;
      return v12;
    case 1u:
      (*(void (**)(void *))(v21 + 16))(v12);
      char v14 = 1;
      goto LABEL_46;
    case 2u:
      (*(void (**)(void *))(v20 + 16))(v12);
      char v14 = 2;
      goto LABEL_46;
    case 3u:
      (*(void (**)(void *))(v19 + 16))(v12);
      char v14 = 3;
      goto LABEL_46;
    case 4u:
      (*(void (**)(void *))(v18 + 16))(v12);
      char v14 = 4;
      goto LABEL_46;
    case 5u:
      (*(void (**)(void *))(v17 + 16))(v12);
      char v14 = 5;
      goto LABEL_46;
    case 6u:
      (*(void (**)(void *))(v16 + 16))(v12);
      char v14 = 6;
      goto LABEL_46;
    case 7u:
      (*(void (**)(void *))(v6 + 16))(v12);
      char v14 = 7;
      goto LABEL_46;
    case 8u:
      (*(void (**)(void *))(*(void *)(v7 - 8) + 16))(v12);
      char v14 = 8;
      goto LABEL_46;
    case 9u:
      char v14 = 9;
LABEL_46:
      *((unsigned char *)v12 + v8) = v14;
      break;
    default:
      goto LABEL_27;
  }
  return v12;
}

unsigned __int8 *sub_1C41F5B0C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v5 = *(void *)(v40 + 64);
    uint64_t v6 = swift_getAssociatedTypeWitness();
    uint64_t v38 = *(void *)(v6 - 8);
    uint64_t v39 = v6;
    if (*(void *)(v38 + 64) > v5) {
      unint64_t v5 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    uint64_t v7 = swift_getAssociatedTypeWitness();
    uint64_t v36 = *(void *)(v7 - 8);
    uint64_t v37 = v7;
    if (*(void *)(v36 + 64) > v5) {
      unint64_t v5 = *(void *)(*(void *)(v7 - 8) + 64);
    }
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v34 = *(void *)(v8 - 8);
    uint64_t v35 = v8;
    if (*(void *)(v34 + 64) <= v5) {
      unint64_t v9 = v5;
    }
    else {
      unint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    uint64_t v10 = swift_getAssociatedTypeWitness();
    uint64_t v32 = *(void *)(v10 - 8);
    uint64_t v33 = v10;
    if (*(void *)(v32 + 64) <= v9) {
      unint64_t v11 = v9;
    }
    else {
      unint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
    }
    uint64_t v12 = swift_getAssociatedTypeWitness();
    uint64_t v31 = *(void *)(v12 - 8);
    if (*(void *)(v31 + 64) <= v11) {
      unint64_t v13 = v11;
    }
    else {
      unint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
    }
    uint64_t v14 = swift_getAssociatedTypeWitness();
    uint64_t v30 = *(void *)(v14 - 8);
    if (*(void *)(v30 + 64) <= v13) {
      unint64_t v15 = v13;
    }
    else {
      unint64_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
    }
    uint64_t v16 = swift_getAssociatedTypeWitness();
    uint64_t v29 = *(void *)(v16 - 8);
    if (*(void *)(v29 + 64) > v15) {
      unint64_t v15 = *(void *)(*(void *)(v16 - 8) + 64);
    }
    uint64_t v17 = swift_getAssociatedTypeWitness();
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)(v17 - 8);
    if (*(void *)(v19 + 64) <= v15) {
      unint64_t v20 = v15;
    }
    else {
      unint64_t v20 = *(void *)(*(void *)(v17 - 8) + 64);
    }
    uint64_t v21 = v40;
    uint64_t v22 = AssociatedTypeWitness;
    switch((int)v40)
    {
      case 0:
        goto LABEL_32;
      case 1:
        uint64_t v21 = v38;
        uint64_t v22 = v39;
        goto LABEL_32;
      case 2:
        uint64_t v21 = v36;
        uint64_t v22 = v37;
        goto LABEL_32;
      case 3:
        uint64_t v21 = v34;
        uint64_t v22 = v35;
        goto LABEL_32;
      case 4:
        uint64_t v21 = v32;
        uint64_t v22 = v33;
        goto LABEL_32;
      case 5:
        uint64_t v21 = v31;
        uint64_t v22 = v12;
        goto LABEL_32;
      case 6:
        uint64_t v21 = v30;
        uint64_t v22 = v14;
        goto LABEL_32;
      case 7:
        uint64_t v21 = v29;
        uint64_t v22 = v16;
        goto LABEL_32;
      case 8:
        uint64_t v21 = *(void *)(v17 - 8);
        uint64_t v22 = v17;
LABEL_32:
        (*(void (**)(unsigned __int8 *, uint64_t))(v21 + 8))(a1, v22);
        break;
      default:
        break;
    }
    unsigned int v23 = a2[v20];
    unsigned int v24 = v23 - 10;
    if (v23 < 0xA)
    {
LABEL_42:
      switch(v23)
      {
        case 0u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v40 + 16))(a1, a2, AssociatedTypeWitness);
          a1[v20] = 0;
          return a1;
        case 1u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v38 + 16))(a1, a2, v39);
          char v27 = 1;
          goto LABEL_58;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v36 + 16))(a1, a2, v37);
          char v27 = 2;
          goto LABEL_58;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v34 + 16))(a1, a2, v35);
          char v27 = 3;
          goto LABEL_58;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v32 + 16))(a1, a2, v33);
          char v27 = 4;
          goto LABEL_58;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v31 + 16))(a1, a2, v12);
          char v27 = 5;
          goto LABEL_58;
        case 6u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v30 + 16))(a1, a2, v14);
          char v27 = 6;
          goto LABEL_58;
        case 7u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 16))(a1, a2, v16);
          char v27 = 7;
          goto LABEL_58;
        case 8u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v19 + 16))(a1, a2, v18);
          char v27 = 8;
          goto LABEL_58;
        case 9u:
          char v27 = 9;
LABEL_58:
          a1[v20] = v27;
          break;
        default:
          goto LABEL_48;
      }
    }
    else
    {
      if (v20 <= 3) {
        uint64_t v25 = v20;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *a2;
          if (v20 >= 4) {
            goto LABEL_47;
          }
          goto LABEL_41;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          if (v20 < 4) {
            goto LABEL_41;
          }
          goto LABEL_47;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v20 < 4) {
            goto LABEL_41;
          }
          goto LABEL_47;
        case 4:
          int v26 = *(_DWORD *)a2;
          if (v20 < 4)
          {
LABEL_41:
            unsigned int v23 = (v26 | (v24 << (8 * v20))) + 10;
            goto LABEL_42;
          }
LABEL_47:
          unsigned int v23 = v26 + 10;
          if (v23 <= 9) {
            goto LABEL_42;
          }
LABEL_48:
          memcpy(a1, a2, v20 + 1);
          break;
        default:
          goto LABEL_42;
      }
    }
  }
  return a1;
}

void *sub_1C41F62F0(void *a1, unsigned __int8 *a2)
{
  uint64_t v22 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v2 = *(void *)(v22 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  if (*(void *)(v21 + 64) > v2) {
    unint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  }
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(v4 - 8);
  if (*(void *)(v20 + 64) > v2) {
    unint64_t v2 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  uint64_t v19 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v19 + 64) > v2) {
    unint64_t v2 = *(void *)(v19 + 64);
  }
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v18 + 64) > v2) {
    unint64_t v2 = *(void *)(v18 + 64);
  }
  uint64_t v17 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v17 + 64) > v2) {
    unint64_t v2 = *(void *)(v17 + 64);
  }
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v16 + 64) <= v2) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = *(void *)(v16 + 64);
  }
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (*(void *)(v6 + 64) > v5) {
    unint64_t v5 = *(void *)(v6 + 64);
  }
  uint64_t v7 = swift_getAssociatedTypeWitness();
  if (*(void *)(*(void *)(v7 - 8) + 64) <= v5) {
    unint64_t v8 = v5;
  }
  else {
    unint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  }
  unsigned int v9 = a2[v8];
  unsigned int v10 = v9 - 10;
  if (v9 < 0xA)
  {
    uint64_t v12 = a1;
  }
  else
  {
    if (v8 <= 3) {
      uint64_t v11 = v8;
    }
    else {
      uint64_t v11 = 4;
    }
    uint64_t v12 = a1;
    switch(v11)
    {
      case 1:
        int v13 = *a2;
        if (v8 >= 4) {
          goto LABEL_35;
        }
        goto LABEL_29;
      case 2:
        int v13 = *(unsigned __int16 *)a2;
        if (v8 < 4) {
          goto LABEL_29;
        }
        goto LABEL_35;
      case 3:
        int v13 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v8 < 4) {
          goto LABEL_29;
        }
        goto LABEL_35;
      case 4:
        int v13 = *(_DWORD *)a2;
        if (v8 < 4)
        {
LABEL_29:
          unsigned int v9 = (v13 | (v10 << (8 * v8))) + 10;
        }
        else
        {
LABEL_35:
          unsigned int v9 = v13 + 10;
          if (v9 > 9)
          {
LABEL_27:
            memcpy(v12, a2, v8 + 1);
            return v12;
          }
        }
        break;
      default:
        break;
    }
  }
  switch(v9)
  {
    case 0u:
      (*(void (**)(void *))(v22 + 32))(v12);
      *((unsigned char *)v12 + v8) = 0;
      return v12;
    case 1u:
      (*(void (**)(void *))(v21 + 32))(v12);
      char v14 = 1;
      goto LABEL_46;
    case 2u:
      (*(void (**)(void *))(v20 + 32))(v12);
      char v14 = 2;
      goto LABEL_46;
    case 3u:
      (*(void (**)(void *))(v19 + 32))(v12);
      char v14 = 3;
      goto LABEL_46;
    case 4u:
      (*(void (**)(void *))(v18 + 32))(v12);
      char v14 = 4;
      goto LABEL_46;
    case 5u:
      (*(void (**)(void *))(v17 + 32))(v12);
      char v14 = 5;
      goto LABEL_46;
    case 6u:
      (*(void (**)(void *))(v16 + 32))(v12);
      char v14 = 6;
      goto LABEL_46;
    case 7u:
      (*(void (**)(void *))(v6 + 32))(v12);
      char v14 = 7;
      goto LABEL_46;
    case 8u:
      (*(void (**)(void *))(*(void *)(v7 - 8) + 32))(v12);
      char v14 = 8;
      goto LABEL_46;
    case 9u:
      char v14 = 9;
LABEL_46:
      *((unsigned char *)v12 + v8) = v14;
      break;
    default:
      goto LABEL_27;
  }
  return v12;
}

unsigned __int8 *sub_1C41F6960(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v5 = *(void *)(v40 + 64);
    uint64_t v6 = swift_getAssociatedTypeWitness();
    uint64_t v38 = *(void *)(v6 - 8);
    uint64_t v39 = v6;
    if (*(void *)(v38 + 64) > v5) {
      unint64_t v5 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    uint64_t v7 = swift_getAssociatedTypeWitness();
    uint64_t v36 = *(void *)(v7 - 8);
    uint64_t v37 = v7;
    if (*(void *)(v36 + 64) > v5) {
      unint64_t v5 = *(void *)(*(void *)(v7 - 8) + 64);
    }
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v34 = *(void *)(v8 - 8);
    uint64_t v35 = v8;
    if (*(void *)(v34 + 64) <= v5) {
      unint64_t v9 = v5;
    }
    else {
      unint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
    }
    uint64_t v10 = swift_getAssociatedTypeWitness();
    uint64_t v32 = *(void *)(v10 - 8);
    uint64_t v33 = v10;
    if (*(void *)(v32 + 64) <= v9) {
      unint64_t v11 = v9;
    }
    else {
      unint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
    }
    uint64_t v12 = swift_getAssociatedTypeWitness();
    uint64_t v31 = *(void *)(v12 - 8);
    if (*(void *)(v31 + 64) <= v11) {
      unint64_t v13 = v11;
    }
    else {
      unint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
    }
    uint64_t v14 = swift_getAssociatedTypeWitness();
    uint64_t v30 = *(void *)(v14 - 8);
    if (*(void *)(v30 + 64) <= v13) {
      unint64_t v15 = v13;
    }
    else {
      unint64_t v15 = *(void *)(*(void *)(v14 - 8) + 64);
    }
    uint64_t v16 = swift_getAssociatedTypeWitness();
    uint64_t v29 = *(void *)(v16 - 8);
    if (*(void *)(v29 + 64) > v15) {
      unint64_t v15 = *(void *)(*(void *)(v16 - 8) + 64);
    }
    uint64_t v17 = swift_getAssociatedTypeWitness();
    uint64_t v18 = v17;
    uint64_t v19 = *(void *)(v17 - 8);
    if (*(void *)(v19 + 64) <= v15) {
      unint64_t v20 = v15;
    }
    else {
      unint64_t v20 = *(void *)(*(void *)(v17 - 8) + 64);
    }
    uint64_t v21 = v40;
    uint64_t v22 = AssociatedTypeWitness;
    switch((int)v40)
    {
      case 0:
        goto LABEL_32;
      case 1:
        uint64_t v21 = v38;
        uint64_t v22 = v39;
        goto LABEL_32;
      case 2:
        uint64_t v21 = v36;
        uint64_t v22 = v37;
        goto LABEL_32;
      case 3:
        uint64_t v21 = v34;
        uint64_t v22 = v35;
        goto LABEL_32;
      case 4:
        uint64_t v21 = v32;
        uint64_t v22 = v33;
        goto LABEL_32;
      case 5:
        uint64_t v21 = v31;
        uint64_t v22 = v12;
        goto LABEL_32;
      case 6:
        uint64_t v21 = v30;
        uint64_t v22 = v14;
        goto LABEL_32;
      case 7:
        uint64_t v21 = v29;
        uint64_t v22 = v16;
        goto LABEL_32;
      case 8:
        uint64_t v21 = *(void *)(v17 - 8);
        uint64_t v22 = v17;
LABEL_32:
        (*(void (**)(unsigned __int8 *, uint64_t))(v21 + 8))(a1, v22);
        break;
      default:
        break;
    }
    unsigned int v23 = a2[v20];
    unsigned int v24 = v23 - 10;
    if (v23 < 0xA)
    {
LABEL_42:
      switch(v23)
      {
        case 0u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v40 + 32))(a1, a2, AssociatedTypeWitness);
          a1[v20] = 0;
          return a1;
        case 1u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v38 + 32))(a1, a2, v39);
          char v27 = 1;
          goto LABEL_58;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v36 + 32))(a1, a2, v37);
          char v27 = 2;
          goto LABEL_58;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v34 + 32))(a1, a2, v35);
          char v27 = 3;
          goto LABEL_58;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v32 + 32))(a1, a2, v33);
          char v27 = 4;
          goto LABEL_58;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v31 + 32))(a1, a2, v12);
          char v27 = 5;
          goto LABEL_58;
        case 6u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v30 + 32))(a1, a2, v14);
          char v27 = 6;
          goto LABEL_58;
        case 7u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v29 + 32))(a1, a2, v16);
          char v27 = 7;
          goto LABEL_58;
        case 8u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v19 + 32))(a1, a2, v18);
          char v27 = 8;
          goto LABEL_58;
        case 9u:
          char v27 = 9;
LABEL_58:
          a1[v20] = v27;
          break;
        default:
          goto LABEL_48;
      }
    }
    else
    {
      if (v20 <= 3) {
        uint64_t v25 = v20;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *a2;
          if (v20 >= 4) {
            goto LABEL_47;
          }
          goto LABEL_41;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          if (v20 < 4) {
            goto LABEL_41;
          }
          goto LABEL_47;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v20 < 4) {
            goto LABEL_41;
          }
          goto LABEL_47;
        case 4:
          int v26 = *(_DWORD *)a2;
          if (v20 < 4)
          {
LABEL_41:
            unsigned int v23 = (v26 | (v24 << (8 * v20))) + 10;
            goto LABEL_42;
          }
LABEL_47:
          unsigned int v23 = v26 + 10;
          if (v23 <= 9) {
            goto LABEL_42;
          }
LABEL_48:
          memcpy(a1, a2, v20 + 1);
          break;
        default:
          goto LABEL_42;
      }
    }
  }
  return a1;
}

uint64_t sub_1C41F7144(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v5 > v4) {
    unint64_t v4 = v5;
  }
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 > v4) {
    unint64_t v4 = v6;
  }
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 > v4) {
    unint64_t v4 = v7;
  }
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 > v4) {
    unint64_t v4 = v8;
  }
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 > v4) {
    unint64_t v4 = v9;
  }
  unint64_t v10 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v10 > v4) {
    unint64_t v4 = v10;
  }
  unint64_t v11 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v11 > v4) {
    unint64_t v4 = v11;
  }
  unint64_t v12 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v12 <= v4) {
    unint64_t v13 = v4;
  }
  else {
    unint64_t v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF6) {
    goto LABEL_37;
  }
  unint64_t v14 = v13 + 1;
  char v15 = 8 * (v13 + 1);
  if ((v13 + 1) <= 3)
  {
    unsigned int v18 = ((a2 + ~(-1 << v15) - 245) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_37;
      }
      goto LABEL_29;
    }
    if (v18 < 2)
    {
LABEL_37:
      unsigned int v20 = *((unsigned __int8 *)a1 + v13);
      if (v20 >= 0xB) {
        return (v20 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_37;
  }
LABEL_29:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 > 3) {
      LODWORD(v14) = 4;
    }
    switch((int)v14)
    {
      case 2:
        LODWORD(v14) = *a1;
        break;
      case 3:
        LODWORD(v14) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v14) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v14) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v14 | v19) + 246;
}

void sub_1C41F7488(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 > v6) {
    unint64_t v6 = v7;
  }
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 > v6) {
    unint64_t v6 = v8;
  }
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 > v6) {
    unint64_t v6 = v9;
  }
  unint64_t v10 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v10 > v6) {
    unint64_t v6 = v10;
  }
  unint64_t v11 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v11 > v6) {
    unint64_t v6 = v11;
  }
  unint64_t v12 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v12 > v6) {
    unint64_t v6 = v12;
  }
  unint64_t v13 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v13 > v6) {
    unint64_t v6 = v13;
  }
  unint64_t v14 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v14 <= v6) {
    unint64_t v14 = v6;
  }
  size_t v15 = v14 + 1;
  if (a3 < 0xF6)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 + ~(-1 << (8 * v15)) - 245) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (a2 > 0xF5)
  {
    unsigned int v17 = a2 - 246;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v14 != -1)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v14 + 1);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        break;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        break;
      case 3:
LABEL_48:
        __break(1u);
        JUMPOUT(0x1C41F7840);
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v16)
    {
      case 1:
        a1[v15] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_37;
      case 2:
        *(_WORD *)&a1[v15] = 0;
        goto LABEL_36;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v15] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_37;
      default:
LABEL_36:
        if (a2) {
LABEL_37:
        }
          a1[v14] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C41F7868(unsigned __int8 *a1)
{
  unint64_t v2 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  unint64_t v3 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v3 > v2) {
    unint64_t v2 = v3;
  }
  unint64_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v4 > v2) {
    unint64_t v2 = v4;
  }
  unint64_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v5 > v2) {
    unint64_t v2 = v5;
  }
  unint64_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 > v2) {
    unint64_t v2 = v6;
  }
  unint64_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 > v2) {
    unint64_t v2 = v7;
  }
  unint64_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 > v2) {
    unint64_t v2 = v8;
  }
  unint64_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 > v2) {
    unint64_t v2 = v9;
  }
  unint64_t v10 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v10 <= v2) {
    unint64_t v10 = v2;
  }
  uint64_t result = a1[v10];
  if (result >= 0xA)
  {
    if (v10 <= 3) {
      uint64_t v12 = v10;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a1;
        if (v10 < 4) {
          goto LABEL_27;
        }
        goto LABEL_29;
      case 2:
        int v13 = *(unsigned __int16 *)a1;
        if (v10 >= 4) {
          goto LABEL_29;
        }
        goto LABEL_27;
      case 3:
        int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v10 < 4) {
          goto LABEL_27;
        }
        goto LABEL_29;
      case 4:
        int v13 = *(_DWORD *)a1;
        if (v10 < 4) {
LABEL_27:
        }
          uint64_t result = (v13 | ((result - 10) << (8 * v10))) + 10;
        else {
LABEL_29:
        }
          uint64_t result = (v13 + 10);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C41F7B40(unsigned char *a1, unsigned int a2)
{
  size_t v4 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  size_t v5 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v5 > v4) {
    size_t v4 = v5;
  }
  size_t v6 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 > v4) {
    size_t v4 = v6;
  }
  size_t v7 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v7 > v4) {
    size_t v4 = v7;
  }
  size_t v8 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v8 > v4) {
    size_t v4 = v8;
  }
  size_t v9 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v9 > v4) {
    size_t v4 = v9;
  }
  size_t v10 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v10 > v4) {
    size_t v4 = v10;
  }
  size_t v11 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v11 > v4) {
    size_t v4 = v11;
  }
  size_t v12 = *(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v12 <= v4) {
    size_t v13 = v4;
  }
  else {
    size_t v13 = v12;
  }
  if (a2 > 9)
  {
    unsigned int v14 = a2 - 10;
    if (v13 < 4)
    {
      unsigned int v15 = v14 >> (8 * v13);
      int v16 = v14 & ~(-1 << (8 * v13));
      a1[v13] = v15 + 10;
      bzero(a1, v13);
      if (v13 == 3)
      {
        *(_WORD *)a1 = v16;
        a1[2] = BYTE2(v16);
      }
      else if (v13 == 2)
      {
        *(_WORD *)a1 = v16;
      }
      else
      {
        *a1 = v16;
      }
    }
    else
    {
      a1[v13] = 10;
      bzero(a1, v13);
      *(_DWORD *)a1 = v14;
    }
  }
  else
  {
    a1[v13] = a2;
  }
}

uint64_t Reference.identity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

__n128 Ref.init(id:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C41F7E44()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  v4[0] = v1;
  v4[1] = v2;
  sub_1C3F7E324(v1, v2);
  sub_1C4054DC4(v4);
  return sub_1C3F7E2CC(v1, v2);
}

double Ref.init<A>(_:_:identity:)@<D0>(uint64_t a1@<X1>, uint64_t *a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  uint64_t v7 = *a2;
  unint64_t v8 = a2[1];
  swift_retain();
  sub_1C40573E4(a1, a3, (uint64_t *)&v10);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 8))(a1, a3);
  sub_1C3F6C6F0(v7, v8);
  double result = *(double *)&v10;
  *a4 = v10;
  return result;
}

uint64_t Ref.subscript.getter()
{
  unint64_t v2 = v0[1];
  v4[0] = *v0;
  uint64_t v1 = v4[0];
  v4[1] = v2;
  swift_retain();
  sub_1C3F7E324(v4[0], v2);
  sub_1C4054DC4(v4);
  swift_release();
  return sub_1C3F7E2CC(v1, v2);
}

void (*Ref.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v7 = malloc(0x40uLL);
  *a1 = v7;
  uint64_t v9 = *v3;
  unint64_t v8 = v3[1];
  uint64_t v10 = *(void *)(a2 + *(void *)(*(void *)a2 + 112));
  v7[4] = v9;
  v7[5] = v8;
  v7[6] = v10;
  swift_retain();
  sub_1C3F7E324(v9, v8);
  v7[7] = sub_1C4055044(v7, v7 + 4, *(void *)(a3 + 16));
  return sub_1C405CE88;
}

uint64_t Ref.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v6 = *v4;
  return (*(uint64_t (**)(long long *, void, void, uint64_t))(a4 + 8))(&v6, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

{
  long long *v4;
  long long v6;

  long long v6 = *v4;
  return (*(uint64_t (**)(long long *, void, void, uint64_t))(a4 + 16))(&v6, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C41F81C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + a2 - 24);
  uint64_t v5 = *(void *)(a3 + a2 - 8);
  uint64_t v6 = type metadata accessor for Ref();
  return Ref.subscript.getter(a2, v6, v4, v5);
}

uint64_t sub_1C41F8234(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + a3 - 24);
  uint64_t v7 = *(void *)(a4 + a3 - 8);
  uint64_t v8 = type metadata accessor for Ref();
  return sub_1C41FA3D4(a1, a3, v8, v6, v7);
}

uint64_t Ref.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C41FA3D4(a1, a2, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a4 - 8) + 8))(a2, a4);
  uint64_t v9 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8);
  return v9(a1);
}

void (*Ref.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(void *a1)
{
  uint64_t v10 = malloc(0x38uLL);
  *a1 = v10;
  uint64_t v11 = *v5;
  unint64_t v12 = v5[1];
  v10[4] = *v5;
  v10[5] = v12;
  size_t v13 = *(uint64_t (**)(void *, void *, void, void, uint64_t, uint64_t))(a5 + 32);
  sub_1C3F7E324(v11, v12);
  v10[6] = v13(v10, v10 + 4, *(void *)(a3 + 16), *(void *)(a3 + 24), a4, a5);
  return sub_1C412D7AC;
}

uint64_t sub_1C41F8414(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v3 = a1[1];
  sub_1C3F7E324(*a1, v3);
  type metadata accessor for Ref();
  Ref.subscript.getter();
  return sub_1C3F7E2CC(v1, v3);
}

uint64_t sub_1C41F84AC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = type metadata accessor for Ref();
  swift_retain();
  sub_1C41FA4F8(a1, v4, v5);
  return swift_release();
}

uint64_t Ref.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C41FA4F8(a1, a2, a3);
  swift_release();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 8);
  return v5(a1);
}

uint64_t *Ref.subscript.getter(uint64_t a1, uint64_t a2)
{
  long long v6 = *v2;
  uint64_t v4 = type metadata accessor for Capsule();
  return Capsule.subscript.getter((uint64_t *)&v6, v4, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t Ref.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    long long v6 = *(_OWORD *)a1;
    uint64_t v11 = *(void *)(a1 + 16);
    v10[0] = *v3;
    v10[1] = v6;
    type metadata accessor for Capsule<>.ObservableDifference();
    return Capsule<>.ObservableDifference.subscript.getter(v10, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
  }
  else
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
    return v9(a3, 1, 1, AssociatedTypeWitness);
  }
}

uint64_t Ref.id.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  return sub_1C3F7E324(v2, v3);
}

uint64_t Ref.id.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C3F7E2CC(*(void *)v1, *(void *)(v1 + 8));
  *(void *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t (*Ref.id.modify())(void, void)
{
  return nullsub_1;
}

uint64_t Ref.init(identity:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C41F877C(a1, (uint64_t)&unk_1F1F9C4E0, a2);
}

uint64_t Ref.init(id:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C41F877C(a1, (uint64_t)&unk_1F1F9C4B8, a2);
}

uint64_t sub_1C41F877C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_1C4496678();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a1, v6);
  uint64_t v18 = sub_1C3F5E0D0(a2);
  uint64_t v19 = v10;
  uint64_t v11 = sub_1C3F5DF48();
  unint64_t v13 = v12;
  sub_1C4496588();
  sub_1C3F7E2CC(v11, v13);
  unsigned int v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v9, v6);
  uint64_t v15 = v18;
  uint64_t v16 = v19;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v14)(a1, v6);
  *a3 = v15;
  a3[1] = v16;
  return result;
}

double Ref.init<A>(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _OWORD *a4@<X8>)
{
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 48))(&v8, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a1, a2);
  double result = *(double *)&v8;
  *a4 = v8;
  return result;
}

double Ref.init<A>(_:_:)@<D0>(uint64_t a1@<X1>, _OWORD *a2@<X8>)
{
  swift_retain();
  sub_1C4055CC4(a1);
  swift_release();
  swift_release();
  uint64_t v4 = type metadata accessor for Capsule();
  Capsule<>.rootID.getter((uint64_t *)&v6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  double result = *(double *)&v6;
  *a2 = v6;
  return result;
}

uint64_t Ref.visitReferences(_:)(void *a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v6 = a1[3];
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v6);
  v9[0] = v4;
  v9[1] = v5;
  return (*(uint64_t (**)(void *, void, void, uint64_t, uint64_t))(v7 + 8))(v9, *(void *)(a2 + 16), *(void *)(a2 + 24), v6, v7);
}

uint64_t Ref.copy(renamingReferences:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v7 = *v3;
  unint64_t v8 = v3[1];
  uint64_t WitnessTable = swift_getWitnessTable();
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(WitnessTable + 48))(&v19, a2, WitnessTable);
  uint64_t v10 = v19;
  unint64_t v11 = v20;
  uint64_t v12 = *a1;
  if (*(void *)(*a1 + 16) && (uint64_t v13 = sub_1C3F850CC(v19, v20), (v14 & 1) != 0))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(v12 + 56) + 16 * v13);
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    sub_1C3F7E324(*v15, v17);
    uint64_t result = sub_1C3F7E2CC(v10, v11);
    *a3 = v16;
    a3[1] = v17;
  }
  else
  {
    sub_1C3F7E2CC(v10, v11);
    *a3 = v7;
    a3[1] = v8;
    return sub_1C3F7E324(v7, v8);
  }
  return result;
}

uint64_t Ref.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v6 = a1;
  swift_bridgeObjectRetain();
  Ref.copy(renamingReferences:)((uint64_t *)&v6, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t static Ref.canContainAssets.getter()
{
  return 0;
}

uint64_t Ref.ObservableDifference.contents.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  if (v3 >> 60 == 15) {
    uint64_t v4 = 0;
  }
  else {
    uint64_t v4 = *v1;
  }
  unint64_t v5 = 0xF000000000000000;
  if (v3 >> 60 != 15) {
    unint64_t v5 = v1[1];
  }
  *a1 = v4;
  a1[1] = v5;
  return sub_1C3F6C704(v2, v3);
}

uint64_t Ref.ObservableDifference.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = v3[1];
  if (v6) {
    BOOL v8 = v7 >> 60 == 15;
  }
  else {
    BOOL v8 = 1;
  }
  if (v8)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
    return v10(a3, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v11 = *v3;
    v13[1] = *(_OWORD *)a1;
    uint64_t v14 = v6;
    *(void *)&v13[0] = v11;
    *((void *)&v13[0] + 1) = v7;
    type metadata accessor for Capsule<>.ObservableDifference();
    return Capsule<>.ObservableDifference.subscript.getter(v13, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
  }
}

uint64_t Ref.ObservableDifference.isIdentityChanged.getter()
{
  long long v1 = *v0;
  long long v3 = xmmword_1C449BDD0;
  long long v4 = v1;
  return static Ref.ObservableDifference.== infix(_:_:)((uint64_t *)&v4, (uint64_t)&v3) & 1;
}

uint64_t static Ref.ObservableDifference.== infix(_:_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  uint64_t v5 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  if (v2 >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v9[0] = *a1;
      v9[1] = v2;
      v8[0] = v5;
      v8[1] = v4;
      sub_1C3F6C704(v5, v4);
      sub_1C3F6C704(v3, v2);
      sub_1C3F6C704(v5, v4);
      sub_1C3F6C704(v3, v2);
      char v6 = static Ref.== infix(_:_:)(v9, v8);
      sub_1C3F6C6F0(v3, v2);
      sub_1C3F6C6F0(v5, v4);
      sub_1C3F6C6F0(v5, v4);
      sub_1C3F6C6F0(v3, v2);
      return v6 & 1;
    }
    goto LABEL_5;
  }
  if (v4 >> 60 != 15)
  {
LABEL_5:
    sub_1C3F6C704(*(void *)a2, *(void *)(a2 + 8));
    sub_1C3F6C704(v3, v2);
    sub_1C3F6C6F0(v3, v2);
    sub_1C3F6C6F0(v5, v4);
    char v6 = 0;
    return v6 & 1;
  }
  sub_1C3F6C6F0(*a1, v2);
  sub_1C3F6C6F0(v5, v4);
  char v6 = 1;
  return v6 & 1;
}

uint64_t static Ref.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  sub_1C3F7E324(*a1, v3);
  sub_1C3F7E324(v4, v5);
  char v6 = sub_1C3FAD630(v2, v3, v4, v5);
  sub_1C3F7E2CC(v4, v5);
  sub_1C3F7E2CC(v2, v3);
  return v6 & 1;
}

uint64_t sub_1C41F8F58(uint64_t *a1, uint64_t a2)
{
  return static Ref.ObservableDifference.== infix(_:_:)(a1, a2);
}

double sub_1C41F8F64@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  *a1 = xmmword_1C449BDD0;
  return result;
}

double Ref.observableDifference(from:with:)@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = a4;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C4497B38();
  uint64_t v27 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v12 = *a1;
  unint64_t v13 = a1[1];
  uint64_t v14 = *v4;
  unint64_t v15 = v4[1];
  sub_1C3F7E324(*v4, v15);
  sub_1C3F7E324(v12, v13);
  char v16 = sub_1C3FAD630(v14, v15, v12, v13);
  sub_1C3F7E2CC(v12, v13);
  sub_1C3F7E2CC(v14, v15);
  if (v16)
  {
    uint64_t v26 = v6;
    unint64_t v17 = v29;
    sub_1C3F970C4(v28, (uint64_t)v31, &qword_1EBBBC198);
    uint64_t v18 = v32;
    if (v32)
    {
      uint64_t v19 = v33;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      v30[0] = v14;
      v30[1] = v15;
      (*(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8))(v30, v7, v26, v18, v19);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v11, 1, AssociatedTypeWitness);
      uint64_t v21 = v17;
      uint64_t v22 = v9;
      uint64_t v23 = v27;
      if (v20 != 1)
      {
        (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
        *unint64_t v17 = v14;
        v17[1] = v15;
        sub_1C3F7E324(v14, v15);
        return result;
      }
    }
    else
    {
      sub_1C3F962E0((uint64_t)v31, &qword_1EBBBC198);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v11, 1, 1, AssociatedTypeWitness);
      uint64_t v21 = v17;
      uint64_t v22 = v9;
      uint64_t v23 = v27;
    }
    (*(void (**)(char *, uint64_t))(v23 + 8))(v11, v22);
    double result = 0.0;
    *(_OWORD *)uint64_t v21 = xmmword_1C44A3FC0;
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)uint64_t v29 = xmmword_1C449BDD0;
  }
  return result;
}

uint64_t Ref.hash(into:)()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  sub_1C3F7E324(v2, v1);
  sub_1C4496568();
  return sub_1C3F7E2CC(v2, v1);
}

uint64_t Ref.hashValue.getter()
{
  return sub_1C4498628();
}

uint64_t sub_1C41F92D4()
{
  return sub_1C4498628();
}

uint64_t sub_1C41F9324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return Ref.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t Ref.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v53 = a3;
  uint64_t v52 = a2;
  v51 = a4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  MEMORY[0x1F4188790](v5 - 8);
  v60 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v58 = *(void *)(v7 - 8);
  uint64_t v59 = v7;
  MEMORY[0x1F4188790](v7);
  v61 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v54 = (uint64_t)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1F4188790](v56);
  uint64_t v57 = (uint64_t)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_Value(0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v55 = (uint64_t)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  int v20 = (char *)&v49 - v19;
  uint64_t v21 = a1;
  uint64_t v22 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v22, (uint64_t)v20, &qword_1EBBC0540);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(a1) = v23(v20, 1, v12);
  sub_1C3F962E0((uint64_t)v20, &qword_1EBBC0540);
  if (a1 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v24 = 0xD000000000000017;
    *(void *)(v24 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v24 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRValueContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v21;
  sub_1C3F970C4(v22, (uint64_t)v18, &qword_1EBBC0540);
  uint64_t result = v23(v18, 1, v12);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v26 = v21;
  uint64_t v27 = v55;
  sub_1C3F8AB70((uint64_t)v18, v55, type metadata accessor for Proto_Value);
  uint64_t v28 = *(void *)(v27 + *(int *)(v12 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v29 = v28;
  uint64_t v30 = v54;
  sub_1C3F970C4(v29, v54, &qword_1EBBBF8A0);
  uint64_t v31 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31) == 1)
  {
    swift_retain();
    sub_1C3F962E0(v30, &qword_1EBBBF8A0);
    uint64_t v32 = v61;
    uint64_t v34 = v57;
    uint64_t v33 = v58;
    uint64_t v35 = v56;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v34 = v57;
    uint64_t v33 = v58;
    uint64_t v35 = v56;
    if (EnumCaseMultiPayload == 7)
    {
      sub_1C3F8AB70(v30, v57, type metadata accessor for Proto_Reference);
      uint64_t v37 = (uint64_t)v60;
      uint64_t v32 = v61;
      uint64_t v38 = v59;
      goto LABEL_12;
    }
    swift_retain();
    sub_1C3F8B2E8(v30, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    uint64_t v32 = v61;
  }
  sub_1C4496888();
  uint64_t v39 = *(int *)(v35 + 20);
  uint64_t v38 = v59;
  uint64_t v37 = (uint64_t)v60;
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)(v34 + v39) = qword_1EBBBC808;
LABEL_12:
  swift_retain();
  sub_1C3F8B2E8(v27, type metadata accessor for Proto_Value);
  uint64_t v40 = *(void *)(v34 + *(int *)(v35 + 20))
      + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  sub_1C3F970C4(v40, v37, &qword_1EBBC0560);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v37, 1, v38) == 1)
  {
    *uint64_t v32 = MEMORY[0x1E4FBC860];
    v32[1] = sub_1C4496868();
    v32[2] = v41;
    sub_1C4496888();
    sub_1C3F962E0(v37, &qword_1EBBC0560);
  }
  else
  {
    sub_1C3F8AB70(v37, (uint64_t)v32, type metadata accessor for Proto_KeyPath);
  }
  uint64_t v42 = v64;
  sub_1C3F8B2E8(v34, type metadata accessor for Proto_Reference);
  swift_retain();
  uint64_t result = sub_1C3F766DC((uint64_t)v32, &v62);
  if (v42)
  {
    swift_release();
    swift_setDeallocating();
    return swift_release();
  }
  uint64_t v43 = v26;
  uint64_t v44 = *(void *)(v26 + 16);
  if (v44)
  {
    uint64_t v46 = v62;
    unint64_t v45 = v63;
    v47 = *(void (**)(uint64_t, uint64_t *, uint64_t, void, uint64_t, uint64_t))(*(void *)v44 + 176);
    sub_1C3F7E324(v62, v63);
    swift_retain();
    v47(v52, &v62, v43, 0, v52, v53);
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = sub_1C3F7E2CC(v46, v45);
    v48 = v51;
    uint64_t *v51 = v46;
    v48[1] = v45;
    return result;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1C41F9AA0()
{
  return Ref.encode(to:)();
}

uint64_t Ref.encode(to:)()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  v69 = (char *)v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v68 = (uint64_t)v57 - v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v70 = (uint64_t)v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v67 = (uint64_t)v57 - v8;
  uint64_t v9 = type metadata accessor for Proto_Reference(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v57 - v13;
  uint64_t v66 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v15 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v17 = (void *)((char *)v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = *v0;
  unint64_t v19 = v0[1];
  uint64_t v20 = v71;
  uint64_t result = sub_1C3F6DD10();
  if (v20) {
    return result;
  }
  uint64_t v22 = result;
  uint64_t v61 = v15;
  uint64_t v64 = v12;
  v65 = v14;
  uint64_t v71 = v9;
  uint64_t v63 = 0;
  *uint64_t v17 = MEMORY[0x1E4FBC860];
  swift_retain();
  unint64_t v23 = v19;
  sub_1C3F7E324(v18, v19);
  uint64_t v24 = sub_1C4496868();
  unint64_t v26 = v25;
  uint64_t v27 = v66;
  sub_1C4496888();
  sub_1C3F7E2CC(v24, v26);
  v17[1] = v18;
  v17[2] = v23;
  uint64_t v62 = v22;
  uint64_t v28 = v22 + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
  swift_beginAccess();
  uint64_t v59 = *(int *)(type metadata accessor for Proto_Value(0) + 20);
  uint64_t v29 = *(void *)(v28 + v59)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v30 = v67;
  sub_1C3F970C4(v29, v67, &qword_1EBBBF8A0);
  uint64_t v31 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
  v57[1] = v32 + 48;
  int v33 = v58(v30, 1, v31);
  uint64_t v34 = (uint64_t)v17;
  uint64_t v60 = v31;
  if (v33 == 1)
  {
    sub_1C3F962E0(v30, &qword_1EBBBF8A0);
    uint64_t v35 = v71;
    uint64_t v36 = (uint64_t)v69;
    uint64_t v37 = (uint64_t)v65;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v35 = v71;
    uint64_t v36 = (uint64_t)v69;
    uint64_t v37 = (uint64_t)v65;
    if (EnumCaseMultiPayload == 7)
    {
      sub_1C3F8AB70(v30, (uint64_t)v65, type metadata accessor for Proto_Reference);
      goto LABEL_10;
    }
    sub_1C3F8B2E8(v30, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v39 = v37;
  uint64_t v40 = *(int *)(v35 + 20);
  if (qword_1EBBBC818 != -1) {
    swift_once();
  }
  *(void *)(v39 + v40) = qword_1EBBBC808;
  swift_retain();
  uint64_t v37 = v39;
LABEL_10:
  uint64_t v41 = *(int *)(v35 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    uint64_t v42 = swift_retain();
    uint64_t v37 = (uint64_t)v65;
    *(void *)(v37 + v41) = sub_1C3FB0204(v42);
    swift_release();
  }
  uint64_t v43 = v37;
  uint64_t v44 = *(void *)(v37 + v41);
  uint64_t v45 = v68;
  sub_1C3F8AB70(v34, v68, type metadata accessor for Proto_KeyPath);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v61 + 56))(v45, 0, 1, v27);
  sub_1C41FA590(v45, v36);
  uint64_t v46 = v44 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  swift_retain();
  sub_1C41FA5F8(v36, v46);
  swift_endAccess();
  swift_release();
  sub_1C43F0BE0(v43);
  uint64_t v47 = *(void *)(v28 + v59)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v48 = v47;
  uint64_t v49 = v70;
  sub_1C3F970C4(v48, v70, &qword_1EBBBF8A0);
  if (v58(v49, 1, v60) == 1)
  {
    sub_1C3F962E0(v49, &qword_1EBBBF8A0);
    uint64_t v50 = (uint64_t)v64;
LABEL_17:
    uint64_t v52 = v71;
    sub_1C4496888();
    uint64_t v53 = *(int *)(v52 + 20);
    if (qword_1EBBBC818 != -1) {
      swift_once();
    }
    *(void *)(v50 + v53) = qword_1EBBBC808;
    swift_retain();
    goto LABEL_20;
  }
  int v51 = swift_getEnumCaseMultiPayload();
  uint64_t v50 = (uint64_t)v64;
  if (v51 != 7)
  {
    sub_1C3F8B2E8(v49, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_17;
  }
  sub_1C3F8AB70(v49, (uint64_t)v64, type metadata accessor for Proto_Reference);
  uint64_t v52 = v71;
LABEL_20:
  uint64_t v54 = *(int *)(v52 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    uint64_t v55 = swift_retain();
    *(void *)(v50 + v54) = sub_1C3FB0204(v55);
    swift_release();
  }
  uint64_t v56 = *(void *)(v50 + v54);
  swift_beginAccess();
  *(void *)(v56 + 24) = 0;
  *(unsigned char *)(v56 + 32) = 1;
  sub_1C43F0BE0(v50);
  swift_endAccess();
  return swift_release();
}

void sub_1C41FA1C8(unsigned char *a1@<X8>)
{
}

void Ref.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t Ref.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C3F7E324(v2, v3);
  sub_1C4498698();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v5, v6);
  sub_1C3FF6830();
  sub_1C4498348();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return sub_1C3F7E2CC(v2, v3);
}

uint64_t Ref.init(from:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1C40F7954(a1, (uint64_t)v9);
  __swift_project_boxed_opaque_existential_1(v9, v9[3]);
  sub_1C4498668();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1C3FF678C();
    sub_1C4498318();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
    *a2 = v6;
    a2[1] = v7;
  }
  return result;
}

uint64_t sub_1C41FA3A4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return Ref.init(from:)(a1, a2);
}

uint64_t sub_1C41FA3BC(void *a1)
{
  return Ref.encode(to:)(a1);
}

uint64_t sub_1C41FA3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9 = *(void *)(a3 + 16);
  MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *v5;
  unint64_t v12 = v5[1];
  (*(void (**)(char *))(v14 + 16))(v11);
  v17[0] = v13;
  v17[1] = v12;
  uint64_t v15 = *(uint64_t (**)(char *, void *, uint64_t, void, uint64_t, uint64_t))(a5 + 24);
  sub_1C3F7E324(v13, v12);
  return v15(v11, v17, v9, *(void *)(a3 + 24), a4, a5);
}

uint64_t sub_1C41FA4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  unint64_t v6 = v3[1];
  v9[0] = v7;
  v9[1] = v6;
  swift_retain();
  sub_1C3F7E324(v7, v6);
  sub_1C407C610(a1, (uint64_t)v9, *(void *)(a3 + 16));
  return swift_release();
}

uint64_t sub_1C41FA590(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C41FA5F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C41FA660()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C41FA67C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C41FA6B8(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C41FA720()
{
  return 32;
}

__n128 sub_1C41FA72C(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_1C41FA740()
{
  return 32;
}

__n128 sub_1C41FA74C(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t dispatch thunk of Reference.identity.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of Reference.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t type metadata accessor for Ref()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C41FA798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t *sub_1C41FA7A4(uint64_t *result)
{
  unint64_t v1 = result[1];
  if ((v1 & 0x3000000000000000) == 0) {
    return (uint64_t *)sub_1C3F7E2CC(*result, v1);
  }
  return result;
}

uint64_t sub_1C41FA7BC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = a2[1];
  if ((v3 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_1C3F7E324(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *sub_1C41FA814(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  unint64_t v5 = a2[1];
  uint64_t v6 = v5 & 0x3000000000000000;
  if ((v4 & 0x3000000000000000) == 0)
  {
    if (!v6)
    {
      uint64_t v9 = *a2;
      sub_1C3F7E324(v9, v5);
      uint64_t v10 = *a1;
      unint64_t v11 = a1[1];
      *a1 = v9;
      a1[1] = v5;
      sub_1C3F7E2CC(v10, v11);
      return a1;
    }
    sub_1C3F7E2CC(*a1, v4);
    goto LABEL_6;
  }
  if (v6)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v7 = *a2;
  sub_1C3F7E324(v7, v5);
  *a1 = v7;
  a1[1] = v5;
  return a1;
}

uint64_t *sub_1C41FA8A8(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if ((v4 & 0x3000000000000000) == 0)
  {
    uint64_t v5 = a2[1];
    if ((v5 & 0x3000000000000000) == 0)
    {
      uint64_t v7 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_1C3F7E2CC(v7, v4);
      return a1;
    }
    sub_1C3F7E2CC(*a1, v4);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t sub_1C41FA90C(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t sub_1C41FA960(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 12;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_1C41FA9B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 60;
  if (((4 * v1) & 0xC) != 0) {
    return 16 - ((4 * v1) & 0xC | (v1 >> 2));
  }
  else {
    return 0;
  }
}

void *sub_1C41FA9D8(void *result, unsigned int a2)
{
  if (a2 > 0xC)
  {
    *__n128 result = a2 - 13;
    result[1] = 0;
  }
  else if (a2)
  {
    *__n128 result = 0;
    result[1] = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

uint64_t type metadata accessor for Ref.ObservableDifference()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C41FAA24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v192 = a4;
  uint64_t v217 = a2;
  v212 = a5;
  uint64_t v7 = type metadata accessor for Proto_CRDT(0);
  uint64_t v204 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v181 = (uint64_t)v169 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v191 = (uint64_t)v169 - v10;
  uint64_t v208 = type metadata accessor for Proto_Value(0);
  uint64_t v211 = *(void *)(v208 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v208);
  v177 = (char *)v169 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v201 = (char *)v169 - v14;
  uint64_t v213 = a3;
  uint64_t v183 = *(void *)(a3 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v178 = (char *)v169 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v184 = (char *)v169 - v18;
  MEMORY[0x1F4188790](v17);
  v202 = (char *)v169 - v19;
  uint64_t v207 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v209 = *(void *)(v207 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v207);
  v187 = (void *)((char *)v169 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  v194 = (void *)((char *)v169 - v23);
  MEMORY[0x1F4188790](v22);
  v199 = (void *)((char *)v169 - v24);
  uint64_t v25 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  uint64_t v174 = (uint64_t)v169 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v188 = (uint64_t)v169 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v195 = (uint64_t)v169 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v182 = (uint64_t)v169 - v33;
  MEMORY[0x1F4188790](v32);
  v200 = (char *)v169 - v34;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v36 = MEMORY[0x1F4188790](v35 - 8);
  uint64_t v186 = (uint64_t)v169 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v193 = (uint64_t)v169 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v197 = (uint64_t)v169 - v41;
  MEMORY[0x1F4188790](v40);
  uint64_t v43 = (char *)v169 - v42;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v45 = MEMORY[0x1F4188790](v44 - 8);
  uint64_t v179 = (uint64_t)v169 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  uint64_t v189 = (uint64_t)v169 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  uint64_t v196 = (uint64_t)v169 - v50;
  MEMORY[0x1F4188790](v49);
  uint64_t v52 = (char *)v169 - v51;
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v54 = MEMORY[0x1F4188790](v53 - 8);
  v176 = (char *)v169 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  v198 = (char *)v169 - v57;
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  uint64_t v203 = (uint64_t)v169 - v59;
  MEMORY[0x1F4188790](v58);
  uint64_t v61 = (char *)v169 - v60;
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  uint64_t v63 = MEMORY[0x1F4188790](v62 - 8);
  uint64_t v175 = (uint64_t)v169 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = MEMORY[0x1F4188790](v63);
  uint64_t v185 = (uint64_t)v169 - v66;
  MEMORY[0x1F4188790](v65);
  uint64_t v68 = (char *)v169 - v67;
  uint64_t v206 = type metadata accessor for Proto_Register(0);
  uint64_t v69 = MEMORY[0x1F4188790](v206);
  uint64_t v180 = (uint64_t)v169 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = MEMORY[0x1F4188790](v69);
  uint64_t v190 = (uint64_t)v169 - v72;
  uint64_t v73 = MEMORY[0x1F4188790](v71);
  v75 = (char *)v169 - v74;
  MEMORY[0x1F4188790](v73);
  uint64_t v210 = (uint64_t)v169 - v76;
  uint64_t v205 = v7;
  uint64_t v77 = *(int *)(v7 + 20);
  uint64_t v215 = a1;
  uint64_t v78 = *(void *)(a1 + v77)
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v78, (uint64_t)v68, &qword_1EBBC0648);
  uint64_t v79 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  uint64_t v80 = *(void *)(v79 - 8);
  v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
  uint64_t v82 = v80 + 48;
  if (v81(v68, 1, v79) == 1)
  {
    sub_1C3F962E0((uint64_t)v68, &qword_1EBBC0648);
LABEL_12:
    uint64_t v95 = v213;
    if (swift_conformsToProtocol2()) {
      uint64_t v96 = v95;
    }
    else {
      uint64_t v96 = 0;
    }
    if (v96)
    {
      swift_release();
      uint64_t result = sub_1C3FB7638(v215, type metadata accessor for Proto_CRDT);
      uint64_t *v212 = 0;
      return result;
    }
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v98 = 0xD00000000000001CLL;
    *(void *)(v98 + 8) = 0x80000001C44B3190;
    *(unsigned char *)(v98 + 16) = 0;
    swift_willThrow();
    swift_release();
    v99 = type metadata accessor for Proto_CRDT;
    uint64_t v100 = v215;
    return sub_1C3FB7638(v100, v99);
  }
  if (swift_getEnumCaseMultiPayload())
  {
    sub_1C3FB7638((uint64_t)v68, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_12;
  }
  v169[1] = v82;
  v170 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v81;
  uint64_t v171 = v79;
  uint64_t v83 = v210;
  sub_1C3FB4F54((uint64_t)v68, v210, type metadata accessor for Proto_Register);
  uint64_t v84 = v206;
  uint64_t v173 = *(int *)(v206 + 20);
  uint64_t v85 = *(void *)(v83 + v173)
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1C3F970C4(v85, (uint64_t)v61, &qword_1EBBC0540);
  v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v211 + 48);
  v211 += 48;
  v172 = v86;
  LODWORD(v85) = v86((uint64_t)v61, 1, v208);
  sub_1C3F962E0((uint64_t)v61, &qword_1EBBC0540);
  sub_1C3FB7758(v83, (uint64_t)v75, type metadata accessor for Proto_Register);
  if (v85 == 1)
  {
    uint64_t v87 = *(void *)&v75[*(int *)(v84 + 20)]
        + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
    swift_beginAccess();
    sub_1C3F970C4(v87, (uint64_t)v52, &qword_1EBBC04F8);
    LODWORD(v87) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v204 + 48))(v52, 1, v205);
    sub_1C3F962E0((uint64_t)v52, &qword_1EBBC04F8);
    sub_1C3FB7638((uint64_t)v75, type metadata accessor for Proto_Register);
    uint64_t v88 = v217;
    uint64_t v89 = v207;
    if (v87 == 1)
    {
      uint64_t v90 = v210;
LABEL_11:
      sub_1C3FB7638(v90, type metadata accessor for Proto_Register);
      goto LABEL_12;
    }
  }
  else
  {
    sub_1C3FB7638((uint64_t)v75, type metadata accessor for Proto_Register);
    uint64_t v88 = v217;
    uint64_t v89 = v207;
  }
  uint64_t v91 = v210;
  uint64_t v92 = v173;
  uint64_t v93 = *(void *)(v210 + v173)
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1C3F970C4(v93, (uint64_t)v43, &qword_1EBBC0620);
  v94 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v209 + 48);
  v209 += 48;
  LODWORD(v93) = v94(v43, 1, v89);
  sub_1C3F962E0((uint64_t)v43, &qword_1EBBC0620);
  if (v93 == 1)
  {
    uint64_t v90 = v91;
    goto LABEL_11;
  }
  uint64_t v101 = *(void *)(v91 + v92)
       + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v102 = v203;
  sub_1C3F970C4(v101, v203, &qword_1EBBC0540);
  LODWORD(v101) = v172(v102, 1, v208);
  sub_1C3F962E0(v102, &qword_1EBBC0540);
  uint64_t v103 = *(void *)(v91 + v92);
  if (v101 == 1)
  {
    uint64_t v104 = v103 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
    swift_beginAccess();
    uint64_t v105 = v196;
    sub_1C3F970C4(v104, v196, &qword_1EBBC04F8);
    v106 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v204 + 48);
    LODWORD(v104) = v106(v105, 1, v205);
    sub_1C3F962E0(v105, &qword_1EBBC04F8);
    if (v104 == 1)
    {
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v107 = 0xD00000000000001CLL;
      *(void *)(v107 + 8) = 0x80000001C44B3190;
      *(unsigned char *)(v107 + 16) = 0;
      swift_willThrow();
LABEL_35:
      swift_release();
      sub_1C3FB7638(v215, type metadata accessor for Proto_CRDT);
      v99 = type metadata accessor for Proto_Register;
      uint64_t v100 = v210;
      return sub_1C3FB7638(v100, v99);
    }
    uint64_t v112 = *(void *)(v210 + v173)
         + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    uint64_t v113 = v193;
    sub_1C3F970C4(v112, v193, &qword_1EBBC0620);
    if (v94((char *)v113, 1, v207) == 1)
    {
      v114 = v194;
      unint64_t *v194 = 0;
      v114[1] = 0;
      sub_1C4496888();
      sub_1C3F962E0(v113, &qword_1EBBC0620);
    }
    else
    {
      v114 = v194;
      sub_1C3FB4F54(v113, (uint64_t)v194, type metadata accessor for Proto_Timestamp);
    }
    uint64_t v123 = v214;
    uint64_t v124 = v195;
    swift_retain();
    sub_1C43A3E60(v114, v88, v124);
    if (v123) {
      goto LABEL_35;
    }
    uint64_t v128 = *(void *)(v210 + v173)
         + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
    swift_beginAccess();
    uint64_t v129 = v189;
    sub_1C3F970C4(v128, v189, &qword_1EBBC04F8);
    uint64_t v130 = v205;
    if (v106(v129, 1, v205) == 1)
    {
      uint64_t v131 = v191;
      sub_1C4496888();
      uint64_t v132 = *(int *)(v130 + 20);
      if (qword_1EBBC0668 != -1) {
        swift_once();
      }
      *(void *)(v131 + v132) = qword_1EBBC0660;
      swift_retain();
      sub_1C3F962E0(v189, &qword_1EBBC04F8);
    }
    else
    {
      uint64_t v131 = v191;
      sub_1C3FB4F54(v129, v191, type metadata accessor for Proto_CRDT);
    }
    uint64_t v135 = *(void *)(v131 + *(int *)(v205 + 20))
         + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    uint64_t v136 = v185;
    sub_1C3F970C4(v135, v185, &qword_1EBBC0648);
    if (v170(v136, 1, v171) == 1)
    {
      sub_1C3F962E0(v136, &qword_1EBBC0648);
      uint64_t v137 = v190;
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v137 = v190;
      if (!EnumCaseMultiPayload)
      {
        sub_1C3FB4F54(v136, v190, type metadata accessor for Proto_Register);
        goto LABEL_50;
      }
      sub_1C3FB7638(v136, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    }
    sub_1C4496888();
    uint64_t v139 = *(int *)(v206 + 20);
    if (qword_1EBBBF248 != -1) {
      swift_once();
    }
    *(void *)(v137 + v139) = qword_1EBBBF238;
    swift_retain();
LABEL_50:
    sub_1C3FB7638(v191, type metadata accessor for Proto_CRDT);
    uint64_t v140 = *(void *)(v137 + *(int *)(v206 + 20))
         + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    uint64_t v141 = v186;
    sub_1C3F970C4(v140, v186, &qword_1EBBC0620);
    if (v94((char *)v141, 1, v207) == 1)
    {
      v142 = v187;
      unint64_t *v187 = 0;
      v142[1] = 0;
      sub_1C4496888();
      sub_1C3F962E0(v141, &qword_1EBBC0620);
    }
    else
    {
      v142 = v187;
      sub_1C3FB4F54(v141, (uint64_t)v187, type metadata accessor for Proto_Timestamp);
    }
    uint64_t v143 = v188;
    sub_1C3FB7638(v190, type metadata accessor for Proto_Register);
    uint64_t v144 = v217;
    swift_retain();
    sub_1C43A3E60(v142, v144, v143);
    uint64_t v145 = *(void *)(v210 + v173)
         + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
    swift_beginAccess();
    uint64_t v146 = v145;
    uint64_t v147 = v179;
    sub_1C3F970C4(v146, v179, &qword_1EBBC04F8);
    uint64_t v148 = v205;
    if (v106(v147, 1, v205) == 1)
    {
      uint64_t v149 = v181;
      sub_1C4496888();
      uint64_t v150 = *(int *)(v148 + 20);
      uint64_t v152 = (uint64_t)v177;
      v151 = v178;
      if (qword_1EBBC0668 != -1) {
        swift_once();
      }
      *(void *)(v149 + v150) = qword_1EBBC0660;
      swift_retain();
      sub_1C3F962E0(v179, &qword_1EBBC04F8);
    }
    else
    {
      uint64_t v149 = v181;
      sub_1C3FB4F54(v147, v181, type metadata accessor for Proto_CRDT);
      uint64_t v152 = (uint64_t)v177;
      v151 = v178;
    }
    uint64_t v153 = *(void *)(v149 + *(int *)(v148 + 20))
         + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    uint64_t v154 = v175;
    sub_1C3F970C4(v153, v175, &qword_1EBBC0648);
    if (v170(v154, 1, v171) == 1)
    {
      sub_1C3F962E0(v154, &qword_1EBBC0648);
      uint64_t v155 = v180;
    }
    else
    {
      int v156 = swift_getEnumCaseMultiPayload();
      uint64_t v155 = v180;
      if (!v156)
      {
        sub_1C3FB4F54(v154, v180, type metadata accessor for Proto_Register);
LABEL_66:
        uint64_t v158 = v217;
        uint64_t v159 = v213;
        uint64_t v160 = v192;
        uint64_t v161 = (uint64_t)v176;
        sub_1C3FB7638(v181, type metadata accessor for Proto_CRDT);
        uint64_t v162 = *(void *)(v155 + *(int *)(v206 + 20))
             + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
        swift_beginAccess();
        sub_1C3F970C4(v162, v161, &qword_1EBBC0540);
        uint64_t v163 = v208;
        if (v172(v161, 1, v208) == 1)
        {
          sub_1C4496888();
          uint64_t v164 = *(int *)(v163 + 20);
          if (qword_1EBBBF8C8 != -1) {
            swift_once();
          }
          *(void *)(v152 + v164) = qword_1EBBBF8B8;
          swift_retain();
          sub_1C3F962E0(v161, &qword_1EBBC0540);
        }
        else
        {
          sub_1C3FB4F54(v161, v152, type metadata accessor for Proto_Value);
        }
        sub_1C3FB7638(v180, type metadata accessor for Proto_Register);
        type metadata accessor for CRDecoder(0);
        swift_allocObject();
        swift_retain();
        uint64_t v165 = sub_1C3F974B0(v152, v158);
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v160 + 8) + 8) + 8))(v165, v159);
        swift_release();
        sub_1C3FB7638(v215, type metadata accessor for Proto_CRDT);
        sub_1C3FB7638(v210, type metadata accessor for Proto_Register);
        type metadata accessor for CRGroupedRegisterRef();
        uint64_t v166 = (uint64_t)v184;
        (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v184, v151, v159);
        uint64_t v167 = v182;
        sub_1C3FB4F54(v195, v182, type metadata accessor for FinalizedTimestamp);
        uint64_t v168 = v174;
        sub_1C3FB4F54(v188, v174, type metadata accessor for FinalizedTimestamp);
        uint64_t result = sub_1C41FD968(v166, v167, v168);
        uint64_t *v212 = result;
        return result;
      }
      sub_1C3FB7638(v154, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    }
    sub_1C4496888();
    uint64_t v157 = *(int *)(v206 + 20);
    if (qword_1EBBBF248 != -1) {
      swift_once();
    }
    *(void *)(v155 + v157) = qword_1EBBBF238;
    swift_retain();
    goto LABEL_66;
  }
  uint64_t v108 = v91;
  uint64_t v109 = v103
       + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  uint64_t v110 = v197;
  sub_1C3F970C4(v109, v197, &qword_1EBBC0620);
  if (v94((char *)v110, 1, v89) == 1)
  {
    v111 = v199;
    unint64_t *v199 = 0;
    v111[1] = 0;
    sub_1C4496888();
    sub_1C3F962E0(v110, &qword_1EBBC0620);
  }
  else
  {
    v111 = v199;
    sub_1C3FB4F54(v110, (uint64_t)v199, type metadata accessor for Proto_Timestamp);
  }
  uint64_t v115 = v214;
  uint64_t v116 = (uint64_t)v201;
  v117 = v202;
  uint64_t v118 = (uint64_t)v200;
  uint64_t v119 = (uint64_t)v198;
  swift_retain();
  sub_1C43A3E60(v111, v88, v118);
  if (v115)
  {
    swift_release();
    sub_1C3FB7638(v215, type metadata accessor for Proto_CRDT);
    v99 = type metadata accessor for Proto_Register;
    uint64_t v100 = v108;
    return sub_1C3FB7638(v100, v99);
  }
  uint64_t v120 = *(void *)(v108 + v173)
       + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1C3F970C4(v120, v119, &qword_1EBBC0540);
  uint64_t v121 = v208;
  if (v172(v119, 1, v208) == 1)
  {
    sub_1C4496888();
    uint64_t v122 = *(int *)(v121 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)(v116 + v122) = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0(v119, &qword_1EBBC0540);
  }
  else
  {
    sub_1C3FB4F54(v119, v116, type metadata accessor for Proto_Value);
  }
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  uint64_t v125 = sub_1C3F974B0(v116, v88);
  swift_release();
  uint64_t v126 = v125;
  uint64_t v127 = v213;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v192 + 8) + 8) + 8))(v126, v213);
  swift_release();
  sub_1C3FB7638(v215, type metadata accessor for Proto_CRDT);
  sub_1C3FB7638(v108, type metadata accessor for Proto_Register);
  uint64_t v133 = (uint64_t)v184;
  (*(void (**)(char *, char *, uint64_t))(v183 + 32))(v184, v117, v127);
  uint64_t v134 = v182;
  sub_1C3FB4F54(v118, v182, type metadata accessor for FinalizedTimestamp);
  uint64_t result = sub_1C41FC6C4(v133, v134, v216);
  uint64_t *v212 = v216[0];
  return result;
}

uint64_t sub_1C41FC378(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*v2)
  {
    uint64_t v11 = *v2;
  }
  else
  {
    type metadata accessor for CRRegisterRef();
    sub_1C41FF5EC(a2, (uint64_t)v10);
    if (qword_1EBBBBF18 != -1) {
      swift_once();
    }
    uint64_t v12 = __swift_project_value_buffer(v5, (uint64_t)qword_1EBBC58A8);
    sub_1C3FB7758(v12, (uint64_t)v8, type metadata accessor for FinalizedTimestamp);
    uint64_t v11 = swift_allocObject();
    sub_1C41FCC4C((uint64_t)v10, (uint64_t)v8);
  }
  uint64_t v13 = *(void (**)(uint64_t))(*(void *)v11 + 184);
  swift_retain();
  v13(a1);
  return swift_release();
}

uint64_t CRRegister.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  if (v7)
  {
    (*(void (**)(uint64_t))(*(void *)v7 + 120))(v4);
    return sub_1C3FB4F54((uint64_t)v6, a1, type metadata accessor for FinalizedTimestamp);
  }
  else
  {
    if (qword_1EBBBBF18 != -1) {
      swift_once();
    }
    uint64_t v9 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBBC58A8);
    return sub_1C3FB7758(v9, a1, type metadata accessor for FinalizedTimestamp);
  }
}

uint64_t CRRegister.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2;
  if (v3) {
    return (*(uint64_t (**)(void))(*(void *)v3 + 96))();
  }
  else {
    return sub_1C41FF5EC(a1, a2);
  }
}

uint64_t sub_1C41FC6C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  type metadata accessor for CRRegisterRef();
  uint64_t v6 = swift_allocObject();
  uint64_t result = sub_1C41FCC4C(a1, a2);
  *a3 = v6;
  return result;
}

uint64_t CRRegister.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t result = sub_1C3F62C10();
  if (!v3)
  {
    uint64_t v9 = v5;
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    swift_retain();
    sub_1C400C434(&v9, v7, v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C41FC7A0()
{
  uint64_t v0 = sub_1C4496678();
  __swift_allocate_value_buffer(v0, qword_1EBBC5890);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EBBC5890);
  return sub_1C4496648();
}

uint64_t sub_1C41FC818()
{
  uint64_t v0 = type metadata accessor for FinalizedTimestamp(0);
  __swift_allocate_value_buffer(v0, qword_1EBBC58A8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_1EBBC58A8);
  if (qword_1EBBBBF10 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1C4496678();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBBC5890);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v1, v3, v2);
  *(void *)(v1 + *(int *)(v0 + 20)) = 0;
  return result;
}

void sub_1C41FC8EC()
{
}

void sub_1C41FC938()
{
}

void sub_1C41FC984()
{
}

void sub_1C41FC9D0()
{
}

void sub_1C41FCA1C()
{
}

void sub_1C41FCA68()
{
}

void sub_1C41FCAB4()
{
}

uint64_t (*sub_1C41FCB04())()
{
  return j__swift_endAccess_1;
}

uint64_t sub_1C41FCB7C@<X0>(uint64_t a1@<X8>)
{
  if (qword_1EBBBBF18 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EBBC58A8);
  return sub_1C3FB7758(v3, a1, type metadata accessor for FinalizedTimestamp);
}

uint64_t sub_1C41FCBFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1C41FCC4C(a1, a2);
  return v4;
}

uint64_t sub_1C41FCC4C(uint64_t a1, uint64_t a2)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 192) - 8) + 32))(v2 + *(void *)(*(void *)v2 + 208), a1);
  sub_1C3FB4F54(a2, v2 + *(void *)(*(void *)v2 + 216), type metadata accessor for FinalizedTimestamp);
  return v2;
}

uint64_t sub_1C41FCD00()
{
  uint64_t v0 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x1F4188790](v1);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = sub_1C41FCB00(v4);
  sub_1C41FCB74(v7);
  uint64_t v8 = swift_allocObject();
  sub_1C41FCC4C((uint64_t)v6, (uint64_t)v3);
  return v8;
}

uint64_t sub_1C41FCE18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v52 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v51 = (uint64_t)&v48 - v6;
  uint64_t v7 = type metadata accessor for Proto_Value(0);
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v57 = (uint64_t)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v54 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v53 = type metadata accessor for FinalizedTimestamp(0);
  MEMORY[0x1F4188790](v53);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (uint64_t *)((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for Proto_Register(0);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v48 = (uint64_t)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v48 - v23;
  sub_1C4496888();
  uint64_t v25 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  if (qword_1EBBC0668 != -1) {
    swift_once();
  }
  uint64_t v58 = a2;
  *(void *)(a2 + v25) = qword_1EBBC0660;
  swift_retain();
  uint64_t v26 = sub_1C4496888();
  uint64_t v27 = *(int *)(v20 + 20);
  if (qword_1EBBBF248 != -1) {
    uint64_t v26 = swift_once();
  }
  *(void *)&v24[v27] = qword_1EBBBF238;
  sub_1C41FCB74(v26);
  swift_retain();
  sub_1C4496888();
  uint64_t v28 = v55;
  uint64_t v29 = sub_1C3FA10C4((uint64_t)v15);
  uint64_t v30 = *(void *)&v15[*(int *)(v53 + 20)];
  *uint64_t v19 = v29;
  v19[1] = v30;
  sub_1C3FB7638((uint64_t)v15, type metadata accessor for FinalizedTimestamp);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Register._StorageClass(0);
    swift_allocObject();
    uint64_t v31 = swift_retain();
    *(void *)&v24[v27] = sub_1C3FB87F8(v31);
    swift_release();
  }
  uint64_t v32 = *(void *)&v24[v27];
  sub_1C3FB4F54((uint64_t)v19, (uint64_t)v13, type metadata accessor for Proto_Timestamp);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v13, 0, 1, v16);
  uint64_t v33 = v54;
  sub_1C3F961BC((uint64_t)v13, v54, &qword_1EBBC0620);
  uint64_t v34 = v32 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v33, v34, &qword_1EBBC0620);
  swift_endAccess();
  uint64_t v35 = swift_release();
  MEMORY[0x1F4188790](v35);
  *(&v48 - 2) = v59;
  *(&v48 - 1) = v28;
  uint64_t v36 = v56;
  uint64_t v37 = v57;
  sub_1C3F6DC00((void (*)(uint64_t))sub_1C4204A6C, v57);
  uint64_t v38 = v58;
  if (v36)
  {
    sub_1C3FB7638((uint64_t)v24, type metadata accessor for Proto_Register);
    uint64_t v39 = type metadata accessor for Proto_CRDT;
    uint64_t v40 = v38;
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Register._StorageClass(0);
      swift_allocObject();
      uint64_t v41 = swift_retain();
      *(void *)&v24[v27] = sub_1C3FB87F8(v41);
      swift_release();
    }
    uint64_t v42 = *(void *)&v24[v27];
    uint64_t v43 = v51;
    sub_1C3FB4F54(v37, v51, type metadata accessor for Proto_Value);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v43, 0, 1, v50);
    uint64_t v44 = v52;
    sub_1C3F961BC(v43, v52, &qword_1EBBC0540);
    uint64_t v45 = v42 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
    swift_beginAccess();
    swift_retain();
    sub_1C3F98338(v44, v45, &qword_1EBBC0540);
    swift_endAccess();
    swift_release();
    uint64_t v46 = v48;
    sub_1C3FB7758((uint64_t)v24, v48, type metadata accessor for Proto_Register);
    sub_1C43F10C0(v46);
    uint64_t v39 = type metadata accessor for Proto_Register;
    uint64_t v40 = (uint64_t)v24;
  }
  return sub_1C3FB7638(v40, v39);
}

uint64_t sub_1C41FD4BC()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 192) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 208));
  return sub_1C3FB7638(v0 + *(void *)(*(void *)v0 + 216), type metadata accessor for FinalizedTimestamp);
}

uint64_t sub_1C41FD558()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 192) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 208));
  sub_1C3FB7638(v0 + *(void *)(*(void *)v0 + 216), type metadata accessor for FinalizedTimestamp);
  return v0;
}

uint64_t sub_1C41FD5F8()
{
  return sub_1C41FEB84((void (*)(void))sub_1C41FD558);
}

uint64_t sub_1C41FD610@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 208);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 192) - 8) + 16))(a1, v4);
}

uint64_t (*sub_1C41FD6B4())()
{
  return j_j__swift_endAccess_1;
}

uint64_t sub_1C41FD71C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = (uint64_t)v1 + *(void *)(*v1 + 208);
  swift_beginAccess();
  uint64_t v5 = *(void *)(v3 + 192);
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24))(v4, a1, v5);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
}

uint64_t sub_1C41FD7FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 216);
  swift_beginAccess();
  return sub_1C3FB7758(v3, a1, type metadata accessor for FinalizedTimestamp);
}

uint64_t sub_1C41FD870(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 216);
  swift_beginAccess();
  sub_1C415C5EC(a1, v3);
  swift_endAccess();
  return sub_1C3FB7638(a1, type metadata accessor for FinalizedTimestamp);
}

uint64_t sub_1C41FD8F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 224);
  swift_beginAccess();
  return sub_1C3FB7758(v3, a1, type metadata accessor for FinalizedTimestamp);
}

uint64_t sub_1C41FD968(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_1C41FD9C0(a1, a2, a3);
  return v6;
}

uint64_t sub_1C41FD9C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v3 + 192) - 8) + 32))(v3 + *(void *)(*(void *)v3 + 208), a1);
  sub_1C3FB4F54(a2, v3 + *(void *)(*(void *)v3 + 216), type metadata accessor for FinalizedTimestamp);
  sub_1C3FB4F54(a3, v3 + *(void *)(*(void *)v3 + 224), type metadata accessor for FinalizedTimestamp);
  return v3;
}

uint64_t sub_1C41FDAA8()
{
  uint64_t v1 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  uint64_t v7 = (char *)&v15 - v6;
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = sub_1C41FCB00(v8);
  sub_1C41FCB74(v11);
  uint64_t v12 = v0 + *(void *)(*(void *)v0 + 224);
  swift_beginAccess();
  sub_1C3FB7758(v12, (uint64_t)v4, type metadata accessor for FinalizedTimestamp);
  uint64_t v13 = swift_allocObject();
  sub_1C41FD9C0((uint64_t)v10, (uint64_t)v7, (uint64_t)v4);
  return v13;
}

uint64_t sub_1C41FDC3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v90 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v102 = (uint64_t)&v90 - v11;
  uint64_t v12 = type metadata accessor for Proto_CRDT(0);
  uint64_t v103 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v109 = (char *)&v90 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v101 = (uint64_t)&v90 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v100 = (uint64_t)&v90 - v17;
  uint64_t v99 = type metadata accessor for Proto_Value(0);
  uint64_t v98 = *(void *)(v99 - 8);
  MEMORY[0x1F4188790](v99);
  uint64_t v107 = (uint64_t)&v90 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v106 = (uint64_t)&v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v104 = (uint64_t)&v90 - v22;
  uint64_t v110 = type metadata accessor for FinalizedTimestamp(0);
  MEMORY[0x1F4188790](v110);
  uint64_t v24 = (char *)&v90 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v113 = *(void *)(v25 - 8);
  uint64_t v114 = v25;
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v105 = (uint64_t *)((char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v26);
  uint64_t v29 = (uint64_t *)((char *)&v90 - v28);
  uint64_t v30 = type metadata accessor for Proto_Register(0);
  uint64_t v31 = MEMORY[0x1F4188790](v30);
  uint64_t v32 = MEMORY[0x1F4188790](v31);
  uint64_t v33 = MEMORY[0x1F4188790](v32);
  uint64_t v111 = (uint64_t)&v90 - v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v112 = (uint64_t)&v90 - v37;
  if (*(unsigned __int8 *)(a1 + 72) >= 2u)
  {
    uint64_t v40 = a1;
    uint64_t v95 = v36;
    uint64_t v90 = v35;
    uint64_t v93 = v7;
    sub_1C4496888();
    uint64_t v91 = v12;
    uint64_t v41 = *(int *)(v12 + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    uint64_t v92 = v10;
    *(void *)(a2 + v41) = qword_1EBBC0660;
    swift_retain();
    uint64_t v42 = v112;
    sub_1C4496888();
    uint64_t v43 = *(int *)(v30 + 20);
    if (qword_1EBBBF248 != -1) {
      swift_once();
    }
    uint64_t v97 = a2;
    uint64_t v44 = qword_1EBBBF238;
    *(void *)(v42 + v43) = qword_1EBBBF238;
    swift_retain();
    uint64_t v45 = v111;
    uint64_t v46 = sub_1C4496888();
    uint64_t v96 = *(int *)(v30 + 20);
    *(void *)(v45 + v96) = v44;
    sub_1C41FCB74(v46);
    swift_retain();
    sub_1C4496888();
    uint64_t v47 = v40;
    uint64_t v48 = sub_1C3FA10C4((uint64_t)v24);
    uint64_t v49 = *(void *)&v24[*(int *)(v110 + 20)];
    *uint64_t v29 = v48;
    v29[1] = v49;
    sub_1C3FB7638((uint64_t)v24, type metadata accessor for FinalizedTimestamp);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Register._StorageClass(0);
      swift_allocObject();
      uint64_t v50 = swift_retain();
      *(void *)(v42 + v43) = sub_1C3FB87F8(v50);
      swift_release();
    }
    uint64_t v94 = v43;
    uint64_t v51 = *(void *)(v42 + v43);
    uint64_t v52 = v104;
    sub_1C3FB4F54((uint64_t)v29, v104, type metadata accessor for Proto_Timestamp);
    uint64_t v53 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v113 + 56);
    v113 += 56;
    v53(v52, 0, 1, v114);
    uint64_t v54 = v106;
    sub_1C3F961BC(v52, v106, &qword_1EBBC0620);
    uint64_t v55 = v51
        + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    swift_retain();
    sub_1C3F98338(v54, v55, &qword_1EBBC0620);
    swift_endAccess();
    swift_release();
    sub_1C41FD8F4((uint64_t)v24);
    uint64_t v56 = v105;
    sub_1C4496888();
    uint64_t v57 = sub_1C3FA10C4((uint64_t)v24);
    uint64_t v58 = *(void *)&v24[*(int *)(v110 + 20)];
    *uint64_t v56 = v57;
    v56[1] = v58;
    sub_1C3FB7638((uint64_t)v24, type metadata accessor for FinalizedTimestamp);
    uint64_t v59 = v111;
    uint64_t v60 = v96;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Register._StorageClass(0);
      swift_allocObject();
      uint64_t v61 = swift_retain();
      *(void *)(v59 + v60) = sub_1C3FB87F8(v61);
      swift_release();
    }
    uint64_t v62 = *(void *)(v59 + v60);
    sub_1C3FB4F54((uint64_t)v56, v52, type metadata accessor for Proto_Timestamp);
    v53(v52, 0, 1, v114);
    sub_1C3F961BC(v52, v54, &qword_1EBBC0620);
    uint64_t v63 = v60;
    uint64_t v64 = v62
        + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    swift_retain();
    sub_1C3F98338(v54, v64, &qword_1EBBC0620);
    swift_endAccess();
    uint64_t v65 = swift_release();
    MEMORY[0x1F4188790](v65);
    *(&v90 - 2) = v115;
    *(&v90 - 1) = v47;
    uint64_t v67 = v107;
    uint64_t v66 = v108;
    sub_1C3F6DC00((void (*)(uint64_t))sub_1C4204A6C, v107);
    uint64_t v68 = (uint64_t)v109;
    if (v66)
    {
      sub_1C3FB7638(v59, type metadata accessor for Proto_Register);
      sub_1C3FB7638(v112, type metadata accessor for Proto_Register);
      uint64_t v69 = type metadata accessor for Proto_CRDT;
      uint64_t v70 = v97;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Register._StorageClass(0);
        swift_allocObject();
        uint64_t v71 = swift_retain();
        *(void *)(v59 + v63) = sub_1C3FB87F8(v71);
        swift_release();
      }
      uint64_t v72 = *(void *)(v59 + v63);
      uint64_t v73 = v100;
      sub_1C3FB4F54(v67, v100, type metadata accessor for Proto_Value);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v98 + 56))(v73, 0, 1, v99);
      uint64_t v74 = v73;
      uint64_t v75 = v101;
      sub_1C3F961BC(v74, v101, &qword_1EBBC0540);
      uint64_t v76 = v72 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v75, v76, &qword_1EBBC0540);
      swift_endAccess();
      swift_release();
      sub_1C3FB7758(v59, v95, type metadata accessor for Proto_Register);
      uint64_t v77 = *(void *)(v112 + v94)
          + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
      swift_beginAccess();
      uint64_t v78 = v77;
      uint64_t v79 = v102;
      sub_1C3F970C4(v78, v102, &qword_1EBBC04F8);
      uint64_t v80 = v103;
      uint64_t v81 = v91;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v79, 1, v91) == 1)
      {
        sub_1C4496888();
        *(void *)(v68 + *(int *)(v81 + 20)) = qword_1EBBC0660;
        swift_retain();
        sub_1C3F962E0(v79, &qword_1EBBC04F8);
      }
      else
      {
        sub_1C3FB4F54(v79, v68, type metadata accessor for Proto_CRDT);
      }
      sub_1C43F10C0(v95);
      uint64_t v82 = v112;
      uint64_t v83 = v94;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Register._StorageClass(0);
        swift_allocObject();
        uint64_t v84 = swift_retain();
        *(void *)(v82 + v83) = sub_1C3FB87F8(v84);
        swift_release();
      }
      uint64_t v85 = *(void *)(v82 + v83);
      uint64_t v86 = (uint64_t)v92;
      sub_1C3FB4F54(v68, (uint64_t)v92, type metadata accessor for Proto_CRDT);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v80 + 56))(v86, 0, 1, v81);
      uint64_t v87 = (uint64_t)v93;
      sub_1C3F961BC(v86, (uint64_t)v93, &qword_1EBBC04F8);
      uint64_t v88 = v85 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v87, v88, &qword_1EBBC04F8);
      swift_endAccess();
      swift_release();
      uint64_t v89 = v90;
      sub_1C3FB7758(v82, v90, type metadata accessor for Proto_Register);
      sub_1C43F10C0(v89);
      sub_1C3FB7638(v111, type metadata accessor for Proto_Register);
      uint64_t v70 = v82;
      uint64_t v69 = type metadata accessor for Proto_Register;
    }
    return sub_1C3FB7638(v70, v69);
  }
  else
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v38 = 0xD00000000000003CLL;
    *(void *)(v38 + 8) = 0x80000001C44B3110;
    *(unsigned char *)(v38 + 16) = 3;
    return swift_willThrow();
  }
}

uint64_t sub_1C41FE8A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 192);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v11 - v7;
  v9(v6);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)(v3 + 200) + 8) + 8) + 16))(a2, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1C41FE9D8()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 192) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 208));
  sub_1C3FB7638(v0 + *(void *)(*(void *)v0 + 216), type metadata accessor for FinalizedTimestamp);
  return sub_1C3FB7638(v0 + *(void *)(*(void *)v0 + 224), type metadata accessor for FinalizedTimestamp);
}

uint64_t sub_1C41FEAA0()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 192) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 208));
  sub_1C3FB7638(v0 + *(void *)(*(void *)v0 + 216), type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638(v0 + *(void *)(*(void *)v0 + 224), type metadata accessor for FinalizedTimestamp);
  return v0;
}

uint64_t sub_1C41FEB6C()
{
  return sub_1C41FEB84((void (*)(void))sub_1C41FEAA0);
}

uint64_t sub_1C41FEB84(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t sub_1C41FEBE0()
{
  uint64_t v1 = v0;
  type metadata accessor for CRRegisterRefBase();
  uint64_t result = sub_1C4498288();
  if ((result & 1) == 0)
  {
    uint64_t v3 = *v0;
    if (*v1)
    {
      uint64_t v4 = (*(uint64_t (**)(void))(*(void *)v3 + 176))();
      uint64_t result = swift_release();
    }
    else
    {
      uint64_t v4 = 0;
    }
    *uint64_t v1 = v4;
  }
  return result;
}

uint64_t CRRegister.setValue(in:_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v72 = a3;
  uint64_t v76 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v76 - 8);
  uint64_t v70 = a2;
  uint64_t v71 = v5;
  MEMORY[0x1F4188790](a1);
  uint64_t v74 = (char *)&v67 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v67 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v68 = (uint64_t)&v67 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v69 = (uint64_t)&v67 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v73 = (uint64_t)&v67 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v67 - v18;
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v67 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v67 - v23;
  uint64_t v25 = v3;
  uint64_t v77 = *v3;
  CRRegister.timestamp.getter((uint64_t)&v67 - v23);
  uint64_t v75 = v7;
  uint64_t v26 = *(int *)(v7 + 20);
  uint64_t v27 = *(void *)(a1 + v26);
  uint64_t v28 = *(void *)&v24[v26];
  sub_1C3FB7758(a1, (uint64_t)v22, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7758((uint64_t)v24, (uint64_t)v19, type metadata accessor for FinalizedTimestamp);
  if (v27 == v28)
  {
    char v29 = sub_1C4496618();
    sub_1C3FB7638((uint64_t)v19, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v22, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v24, type metadata accessor for FinalizedTimestamp);
    if (v29)
    {
      uint64_t v30 = v76;
      type metadata accessor for CRRegisterRefBase();
      uint64_t v31 = v25;
      if ((sub_1C4498288() & 1) != 0
        && *v25
        && (type metadata accessor for CRGroupedRegisterRef(), (uint64_t v32 = swift_dynamicCastClass()) != 0))
      {
        uint64_t v33 = v32;
        uint64_t v34 = v32 + *(void *)(*(void *)v32 + 224);
        swift_beginAccess();
        uint64_t v35 = v69;
        sub_1C3FB7758(v34, v69, type metadata accessor for FinalizedTimestamp);
        swift_retain();
        uint64_t v36 = v73;
        uint64_t result = sub_1C4496668();
        uint64_t v38 = *(int *)(v75 + 20);
        uint64_t v39 = *(void *)(v35 + v38);
        BOOL v40 = __OFADD__(v39, 1);
        uint64_t v41 = v39 + 1;
        if (!v40)
        {
          *(void *)(v36 + v38) = v41;
          sub_1C3FB7638(v35, type metadata accessor for FinalizedTimestamp);
          swift_beginAccess();
          sub_1C4158E4C(v36, v34);
          swift_endAccess();
          uint64_t v42 = v33 + *(void *)(*(void *)v33 + 208);
          swift_beginAccess();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 24))(v42, v70, v30);
          goto LABEL_17;
        }
      }
      else
      {
        uint64_t v59 = (uint64_t)v74;
        (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v74, v70, v30);
        uint64_t v60 = v73;
        sub_1C3FB7758(a1, v73, type metadata accessor for FinalizedTimestamp);
        uint64_t v77 = *v25;
        uint64_t v61 = v68;
        sub_1C41FF400(v68);
        uint64_t v62 = v69;
        uint64_t result = sub_1C4496668();
        uint64_t v63 = *(int *)(v75 + 20);
        uint64_t v64 = *(void *)(v61 + v63);
        uint64_t v65 = v64 + 1;
        if (!__OFADD__(v64, 1))
        {
          type metadata accessor for CRGroupedRegisterRef();
          *(void *)(v62 + v63) = v65;
          sub_1C3FB7638(v61, type metadata accessor for FinalizedTimestamp);
          uint64_t v66 = swift_allocObject();
          sub_1C41FD9C0(v59, v60, v62);
          swift_release();
          *uint64_t v31 = v66;
          return 1;
        }
        __break(1u);
      }
      __break(1u);
      return result;
    }
  }
  else
  {
    sub_1C3FB7638((uint64_t)v19, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v22, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v24, type metadata accessor for FinalizedTimestamp);
  }
  uint64_t v43 = v25;
  uint64_t v77 = *v25;
  CRRegister.timestamp.getter((uint64_t)v10);
  uint64_t v44 = v75;
  uint64_t v45 = *(void *)&v10[*(int *)(v75 + 20)];
  uint64_t v46 = *(void *)(a1 + v26);
  uint64_t v47 = v76;
  if (v45 == v46)
  {
    char v48 = sub_1C410BE0C();
    sub_1C3FB7638((uint64_t)v10, type metadata accessor for FinalizedTimestamp);
    uint64_t v49 = (uint64_t)v74;
    if ((v48 & 1) == 0) {
      return 0;
    }
  }
  else
  {
    sub_1C3FB7638((uint64_t)v10, type metadata accessor for FinalizedTimestamp);
    uint64_t v49 = (uint64_t)v74;
    if (v45 >= v46) {
      return 0;
    }
  }
  type metadata accessor for CRRegisterRefBase();
  if ((sub_1C4498288() & 1) == 0
    || !*v25
    || (type metadata accessor for CRGroupedRegisterRef(), (uint64_t v50 = swift_dynamicCastClass()) == 0))
  {
    type metadata accessor for CRGroupedRegisterRef();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 16))(v49, v70, v47);
    uint64_t v56 = v73;
    sub_1C3FB7758(a1, v73, type metadata accessor for FinalizedTimestamp);
    uint64_t v57 = v69;
    sub_1C4496668();
    *(void *)(v57 + *(int *)(v44 + 20)) = 0;
    uint64_t v58 = swift_allocObject();
    sub_1C41FD9C0(v49, v56, v57);
    swift_release();
    *uint64_t v43 = v58;
    return 1;
  }
  uint64_t v51 = v50;
  uint64_t v52 = v50 + *(void *)(*(void *)v50 + 216);
  swift_beginAccess();
  swift_retain();
  sub_1C415C5EC(a1, v52);
  swift_endAccess();
  uint64_t v53 = v73;
  sub_1C4496668();
  *(void *)(v53 + *(int *)(v44 + 20)) = 0;
  uint64_t v54 = v51 + *(void *)(*(void *)v51 + 224);
  swift_beginAccess();
  sub_1C4158E4C(v53, v54);
  swift_endAccess();
  uint64_t v55 = v51 + *(void *)(*(void *)v51 + 208);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 24))(v55, v70, v47);
LABEL_17:
  swift_endAccess();
  swift_release();
  return 1;
}

uint64_t sub_1C41FF400@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  if (v7)
  {
    (*(void (**)(uint64_t))(*(void *)v7 + 144))(v4);
    return sub_1C3FB4F54((uint64_t)v6, a1, type metadata accessor for FinalizedTimestamp);
  }
  else
  {
    if (qword_1EBBBBF18 != -1) {
      swift_once();
    }
    uint64_t v9 = __swift_project_value_buffer(v3, (uint64_t)qword_1EBBC58A8);
    return sub_1C3FB7758(v9, a1, type metadata accessor for FinalizedTimestamp);
  }
}

uint64_t CRRegister.projectedValue.getter@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t sub_1C41FF534(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_retain();
  uint64_t v2 = (uint64_t (*)(uint64_t *, void))CRRegister.projectedValue.modify();
  *uint64_t v3 = v1;
  swift_release();
  return v2(&v5, 0);
}

uint64_t (*CRRegister.projectedValue.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CRRegister.projectedValue.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_release();
  *uint64_t v1 = v2;
  return result;
}

uint64_t sub_1C41FF5EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_1C4497B38();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - v6;
  uint64_t v8 = swift_conformsToProtocol2();
  if (v8) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0;
  }
  if (v8) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = 0;
  }
  if (v10)
  {
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 16);
    *((void *)&v17 + 1) = v10;
    uint64_t v18 = v9;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v16);
    v11(v10, v9);
  }
  else
  {
    uint64_t v18 = 0;
    long long v16 = 0u;
    long long v17 = 0u;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBBBF20);
  int v12 = swift_dynamicCast();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  if (v12)
  {
    uint64_t v14 = *(void *)(v3 - 8);
    v13(v7, 0, 1, v3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v7, v3);
  }
  else
  {
    v13(v7, 1, 1, v3);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    uint64_t result = sub_1C4497F58();
    __break(1u);
  }
  return result;
}

uint64_t sub_1C41FF834(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  if (*v1)
  {
    type metadata accessor for CRGroupedRegisterRef();
    uint64_t result = swift_dynamicCastClass();
    if (result)
    {
      type metadata accessor for CRRegisterRef();
      uint64_t v14 = v11;
      CRRegister.value.getter(a1, (uint64_t)v10);
      uint64_t v14 = v11;
      CRRegister.timestamp.getter((uint64_t)v7);
      uint64_t v12 = swift_allocObject();
      sub_1C41FCC4C((uint64_t)v10, (uint64_t)v7);
      uint64_t result = swift_release();
      *uint64_t v2 = v12;
    }
  }
  return result;
}

uint64_t sub_1C41FF98C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = type metadata accessor for CRRegister();
  return CRRegister.value.setter((uint64_t)v2, v4);
}

uint64_t CRRegister.value.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v27 = a1;
  uint64_t v5 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C41FF834(a2);
  sub_1C41FEBE0();
  uint64_t v16 = *v2;
  if (*v2)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v27, v12);
    long long v17 = *(void (**)(char *))(*(void *)v16 + 104);
    swift_retain();
    v17(v15);
    uint64_t v28 = v16;
    CRRegister.timestamp.getter((uint64_t)v8);
    uint64_t result = sub_1C4496668();
    uint64_t v19 = *(int *)(v5 + 20);
    uint64_t v20 = *(void *)&v8[v19];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      *(void *)&v11[v19] = v22;
      sub_1C3FB7638((uint64_t)v8, type metadata accessor for FinalizedTimestamp);
      (*(void (**)(char *))(*(void *)v16 + 128))(v11);
      swift_release();
      return (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v27, v12);
    }
    __break(1u);
    goto LABEL_8;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v27, v12);
  uint64_t v28 = 0;
  CRRegister.timestamp.getter((uint64_t)v8);
  uint64_t result = sub_1C4496668();
  uint64_t v23 = *(int *)(v5 + 20);
  uint64_t v24 = *(void *)&v8[v23];
  uint64_t v25 = v24 + 1;
  if (__OFADD__(v24, 1))
  {
LABEL_8:
    __break(1u);
    return result;
  }
  type metadata accessor for CRRegisterRef();
  *(void *)&v11[v23] = v25;
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v27, v12);
  sub_1C3FB7638((uint64_t)v8, type metadata accessor for FinalizedTimestamp);
  uint64_t v26 = swift_allocObject();
  sub_1C41FCC4C((uint64_t)v15, (uint64_t)v11);
  uint64_t result = swift_release();
  *uint64_t v3 = v26;
  return result;
}

void (*CRRegister.value.modify(void *a1, uint64_t a2))(void *a1, char a2)
{
  uint64_t v5 = malloc(0x78uLL);
  *a1 = v5;
  v5[4] = a2;
  v5[5] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  v5[6] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[7] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[8] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[9] = v9;
  uint64_t v10 = type metadata accessor for FinalizedTimestamp(0);
  v5[10] = v10;
  size_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  v5[11] = malloc(v11);
  v5[12] = malloc(v11);
  sub_1C41FF834(a2);
  sub_1C41FEBE0();
  uint64_t v12 = *v2;
  v5[13] = v12;
  if (v12)
  {
    uint64_t v13 = *(uint64_t (**)(void *))(*(void *)v12 + 112);
    swift_retain();
    v5[14] = v13(v5);
    return sub_1C41FFED4;
  }
  else
  {
    sub_1C41FF5EC(a2, (uint64_t)v9);
    return sub_1C41FFFFC;
  }
}

void sub_1C41FFED4(void *a1, char a2)
{
  uint64_t v3 = *a1;
  (*(void (**)(void, void))(*a1 + 112))(*a1, 0);
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = *(void *)(v3 + 88);
    uint64_t v5 = *(void *)(v3 + 80);
    CRRegister.timestamp.getter(v4);
    sub_1C4496668();
    uint64_t v6 = *(int *)(v5 + 20);
    uint64_t v7 = *(void *)(v4 + v6);
    BOOL v8 = __OFADD__(v7, 1);
    uint64_t v9 = v7 + 1;
    if (v8)
    {
      __break(1u);
      return;
    }
    uint64_t v11 = *(void *)(v3 + 96);
    uint64_t v10 = *(void *)(v3 + 104);
    uint64_t v12 = *(void *)(v3 + 88);
    *(void *)(v11 + v6) = v9;
    sub_1C3FB7638(v12, type metadata accessor for FinalizedTimestamp);
    (*(void (**)(uint64_t))(*(void *)v10 + 128))(v11);
  }
  swift_release();
  uint64_t v13 = *(void **)(v3 + 88);
  uint64_t v15 = *(void **)(v3 + 64);
  uint64_t v14 = *(void **)(v3 + 72);
  free(*(void **)(v3 + 96));
  free(v13);
  free(v14);
  free(v15);
  free((void *)v3);
}

void sub_1C41FFFFC(void *a1, char a2)
{
  uint64_t v2 = (void *)*a1;
  if (a2)
  {
    (*(void (**)(void, void))(v2[7] + 8))(v2[9], v2[6]);
  }
  else
  {
    uint64_t v3 = v2[11];
    uint64_t v4 = v2[10];
    (*(void (**)(void, void, void))(v2[7] + 16))(v2[8], v2[9], v2[6]);
    CRRegister.timestamp.getter(v3);
    sub_1C4496668();
    uint64_t v5 = *(int *)(v4 + 20);
    uint64_t v6 = *(void *)(v3 + v5);
    uint64_t v7 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      return;
    }
    uint64_t v9 = v2[11];
    uint64_t v8 = v2[12];
    uint64_t v10 = v2[8];
    uint64_t v18 = v2[9];
    uint64_t v11 = v2[6];
    uint64_t v12 = v2[7];
    uint64_t v13 = (uint64_t *)v2[5];
    type metadata accessor for CRRegisterRef();
    *(void *)(v8 + v5) = v7;
    sub_1C3FB7638(v9, type metadata accessor for FinalizedTimestamp);
    uint64_t v14 = swift_allocObject();
    sub_1C41FCC4C(v10, v8);
    swift_release();
    *uint64_t v13 = v14;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v18, v11);
  }
  uint64_t v15 = (void *)v2[11];
  long long v17 = (void *)v2[8];
  uint64_t v16 = (void *)v2[9];
  free((void *)v2[12]);
  free(v15);
  free(v16);
  free(v17);
  free(v2);
}

uint64_t CRRegister.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return CRRegister.value.getter(a1, a2);
}

uint64_t CRRegister.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_1C4204068(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
  return v4(a1);
}

void (*CRRegister.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  CRRegister.value.getter(a2, (uint64_t)v9);
  return sub_1C420030C;
}

void sub_1C420030C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_1C4204068((uint64_t)v3, v7);
    size_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_1C4204068((*a1)[5], v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t CRRegister.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v17 - v13;
  if (*(void *)(*(void *)v12 + 16))
  {
    uint64_t v18 = *v3;
    CRRegister.value.getter(a2, (uint64_t)v11);
    uint64_t v15 = *(void *)(a2 + 24);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 + 8) + 24))(a1, v7);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  else
  {
    uint64_t v18 = *v3;
    CRRegister.value.getter(a2, (uint64_t)&v17 - v13);
    uint64_t v15 = *(void *)(a2 + 24);
  }
  return CRRegister.init(_:)((uint64_t)v14, v7, v15, a3);
}

uint64_t CRRegister.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v29 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v8 = MEMORY[0x1F4188790](v29);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v15((char *)&v26 - v16, a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF878);
  if (!swift_dynamicCast())
  {
    uint64_t v32 = 0;
    long long v30 = 0u;
    long long v31 = 0u;
    sub_1C3F962E0((uint64_t)&v30, (uint64_t *)&unk_1EBBBBF20);
    goto LABEL_5;
  }
  uint64_t v27 = a1;
  uint64_t v28 = a3;
  uint64_t v17 = a4;
  uint64_t v18 = *((void *)&v31 + 1);
  uint64_t v19 = v32;
  __swift_project_boxed_opaque_existential_1(&v30, *((uint64_t *)&v31 + 1));
  uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
  uint64_t v21 = v18;
  a4 = v17;
  uint64_t v22 = v19;
  a1 = v27;
  char v23 = v20(v21, v22);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  if ((v23 & 1) == 0)
  {
LABEL_5:
    v15(v14, a1, a2);
    sub_1C4496668();
    *(void *)&v10[*(int *)(v29 + 20)] = 0;
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a1, a2);
    uint64_t result = sub_1C41FC6C4((uint64_t)v14, (uint64_t)v10, (uint64_t *)&v30);
    uint64_t v25 = v30;
    goto LABEL_6;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(a1, a2);
  uint64_t v25 = 0;
LABEL_6:
  *a4 = v25;
  return result;
}

uint64_t CRRegister.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v6 = a1;
  swift_bridgeObjectRetain();
  CRRegister.copy(renamingReferences:)((uint64_t)&v6, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t CRRegister.init<A>(_:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, void *a4@<X8>)
{
  uint64_t v8 = sub_1C4497B38();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v14 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v14 - v10, a2, v8);
  uint64_t v14 = a3;
  uint64_t WitnessTable = swift_getWitnessTable();
  CRRegister.init(_:)((uint64_t)v11, v8, WitnessTable, &v15);

  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  *a4 = v15;
  return result;
}

uint64_t CRRegister.init(_:_:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v10 + 16))(v12);
  CRRegister.init(_:)((uint64_t)v12, a3, a4, &v15);

  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a2, a3);
  *a5 = v15;
  return result;
}

uint64_t CRRegister.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a2);
  CRRegister.init(_:)((uint64_t)v10, a2, a3, &v13);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(a1, a2);
  *a4 = v13;
  return result;
}

uint64_t CRRegister.init<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - v8, a1, v6);
  uint64_t v12 = a2;
  uint64_t WitnessTable = swift_getWitnessTable();
  CRRegister.init(_:)((uint64_t)v9, v6, WitnessTable, &v13);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
  *a3 = v13;
  return result;
}

void CRRegister.init<>(defaultState:)(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t CRRegister.init(_:clock:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v35 = a4;
  uint64_t v38 = a5;
  uint64_t v8 = sub_1C4496678();
  uint64_t v33 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v32 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v10 = MEMORY[0x1F4188790](v37);
  uint64_t v36 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v34 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v31 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v31 - v18;
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  v20((char *)&v31 - v18, (uint64_t)a1, a3);
  uint64_t v21 = a2;
  if (a2)
  {
    long long v31 = v20;
    uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
    v22(v19, a3);
LABEL_8:
    uint64_t v28 = v32;
    uint64_t v27 = v33;
    uint64_t v29 = (uint64_t)v34;
    v31(v34, (uint64_t)a1, a3);
    sub_1C4496668();
    v22(a1, a3);
    uint64_t v30 = (uint64_t)v36;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v36, v28, v8);
    *(void *)(v30 + *(int *)(v37 + 20)) = v21;
    uint64_t result = sub_1C41FC6C4(v29, v30, (uint64_t *)&v39);
    uint64_t v26 = v39;
    goto LABEL_9;
  }
  v20(v17, (uint64_t)v19, a3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF878);
  if (!swift_dynamicCast())
  {
    long long v31 = v20;
    uint64_t v41 = 0;
    long long v39 = 0u;
    long long v40 = 0u;
    uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
    v22(v19, a3);
    sub_1C3F962E0((uint64_t)&v39, (uint64_t *)&unk_1EBBBBF20);
    goto LABEL_8;
  }
  uint64_t v23 = *((void *)&v40 + 1);
  uint64_t v24 = v41;
  __swift_project_boxed_opaque_existential_1(&v39, *((uint64_t *)&v40 + 1));
  LOBYTE(v24) = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
  v22(v19, a3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v39);
  if ((v24 & 1) == 0)
  {
    long long v31 = v20;
    goto LABEL_8;
  }
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v22)(a1, a3);
  uint64_t v26 = 0;
LABEL_9:
  *uint64_t v38 = v26;
  return result;
}

uint64_t CRRegister.merge(_:)(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v46 = (uint64_t)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v45 = (uint64_t)&v44 - v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v44 - v9;
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v47 = (uint64_t)&v44 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v44 - v17;
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)&v44 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v44 - v22;
  uint64_t v24 = *a1;
  uint64_t v25 = v1;
  uint64_t v49 = *v1;
  CRRegister.timestamp.getter((uint64_t)&v44 - v22);
  uint64_t v26 = v24;
  uint64_t v49 = v24;
  CRRegister.timestamp.getter((uint64_t)v21);
  uint64_t v48 = v3;
  uint64_t v27 = *(int *)(v3 + 20);
  uint64_t v28 = *(void *)&v23[v27];
  uint64_t v29 = *(void *)&v21[v27];
  if (v28 == v29) {
    char v30 = sub_1C410BE0C();
  }
  else {
    char v30 = v28 < v29;
  }
  sub_1C3FB7638((uint64_t)v21, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638((uint64_t)v23, type metadata accessor for FinalizedTimestamp);
  long long v31 = v25;
  if (v30)
  {
LABEL_5:
    swift_release();
    *long long v31 = v26;
    return swift_retain();
  }
  uint64_t v49 = *v25;
  CRRegister.timestamp.getter((uint64_t)v18);
  uint64_t v49 = v24;
  CRRegister.timestamp.getter((uint64_t)v15);
  uint64_t v33 = v47;
  uint64_t v34 = *(int *)(v48 + 20);
  uint64_t v35 = *(void *)&v18[v34];
  uint64_t v36 = *(void *)&v15[v34];
  sub_1C3FB7758((uint64_t)v18, v47, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7758((uint64_t)v15, (uint64_t)v10, type metadata accessor for FinalizedTimestamp);
  if (v35 == v36)
  {
    char v37 = sub_1C4496618();
    sub_1C3FB7638((uint64_t)v10, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638(v33, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v15, type metadata accessor for FinalizedTimestamp);
    uint64_t result = sub_1C3FB7638((uint64_t)v18, type metadata accessor for FinalizedTimestamp);
    if (v37)
    {
      uint64_t v49 = *v31;
      uint64_t v38 = v45;
      sub_1C41FF400(v45);
      uint64_t v49 = v26;
      uint64_t v39 = v46;
      sub_1C41FF400(v46);
      uint64_t v40 = *(int *)(v48 + 20);
      uint64_t v41 = *(void *)(v38 + v40);
      uint64_t v42 = *(void *)(v39 + v40);
      char v43 = v41 == v42 ? sub_1C410BE0C() : v41 < v42;
      sub_1C3FB7638(v39, type metadata accessor for FinalizedTimestamp);
      uint64_t result = sub_1C3FB7638(v38, type metadata accessor for FinalizedTimestamp);
      if (v43) {
        goto LABEL_5;
      }
    }
  }
  else
  {
    sub_1C3FB7638((uint64_t)v10, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638(v33, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v15, type metadata accessor for FinalizedTimestamp);
    return sub_1C3FB7638((uint64_t)v18, type metadata accessor for FinalizedTimestamp);
  }
  return result;
}

uint64_t CRRegister.visitReferences(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t result = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  if (v10)
  {
    (*(void (**)(uint64_t))(*(void *)v10 + 96))(result);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) + 8) + 48))(a1, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  return result;
}

Swift::Bool __swiftcall CRRegister.needToFinalizeTimestamps()()
{
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = ((uint64_t (*)())MEMORY[0x1F4188790])();
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  if (v8)
  {
    (*(void (**)(uint64_t))(*(void *)v8 + 96))(v5);
    LOBYTE(v8) = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v2 + 24) + 8) + 56))(v3);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  return v8 & 1;
}

uint64_t CRRegister.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2)
{
  v7[0] = *(void *)v2;
  uint64_t result = CRRegister.needToFinalizeTimestamps()();
  if (result)
  {
    uint64_t result = sub_1C41FEBE0();
    if (*(void *)v2)
    {
      uint64_t v6 = (uint64_t (*)(void *, void))(*(uint64_t (**)(void *))(**(void **)v2 + 112))(v7);
      (*(void (**)(uint64_t, void))(*(void *)(*(void *)(a2 + 24) + 8) + 64))(a1, *(void *)(a2 + 16));
      return v6(v7, 0);
    }
  }
  return result;
}

uint64_t CRRegister.description.getter(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v1;
  uint64_t v8 = 0x7473696765525243;
  unint64_t v9 = 0xEB000000005B7265;
  v7[1] = v5;
  CRRegister.value.getter(v2, (uint64_t)v4);
  sub_1C4497218();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  return v8;
}

uint64_t CRRegister.actionUndoingDifference(from:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v28 = a3;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v27 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  unint64_t v9 = (char *)&v26 - v8;
  uint64_t v10 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v11 = v10 - 8;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = *a1;
  uint64_t v29 = *v3;
  CRRegister.timestamp.getter((uint64_t)&v26 - v15);
  uint64_t v29 = v17;
  CRRegister.timestamp.getter((uint64_t)v14);
  uint64_t v18 = *(int *)(v11 + 28);
  uint64_t v19 = *(void *)&v14[v18];
  uint64_t v20 = *(void *)&v16[v18];
  if (v19 == v20) {
    char v21 = sub_1C410BE0C();
  }
  else {
    char v21 = v19 < v20;
  }
  sub_1C3FB7638((uint64_t)v14, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638((uint64_t)v16, type metadata accessor for FinalizedTimestamp);
  if (v21)
  {
    uint64_t v29 = v17;
    CRRegister.value.getter(a2, (uint64_t)v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v9, 0, 1, v6);
    uint64_t v22 = v28;
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v28, v9, v27);
    uint64_t v23 = type metadata accessor for CRRegister.MutatingAction();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  }
  else
  {
    uint64_t v25 = type metadata accessor for CRRegister.MutatingAction();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v28, 1, 1, v25);
  }
}

uint64_t CRRegister.apply(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v29 = a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v28 = sub_1C4497B38();
  uint64_t v26 = *(void *)(v28 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v28);
  uint64_t v6 = (char *)&v25 - v5;
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v4);
  uint64_t v25 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = type metadata accessor for CRRegister.MutatingAction();
  uint64_t v12 = sub_1C4497B38();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v25 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v29, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v11) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, v11);
  uint64_t v21 = v26;
  uint64_t v22 = v28;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v6, v19, v28);
  uint64_t v23 = v27;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v6, 1, v3) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v6, v22);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v10, v6, v3);
    uint64_t v24 = (uint64_t)v25;
    (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v25, v10, v3);
    CRRegister.value.setter(v24, a2);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v3);
    return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v11);
  }
}

uint64_t CRRegister.hasDelta(from:)(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v4 = v3 - 8;
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  uint64_t v10 = *a1;
  uint64_t v17 = *v1;
  CRRegister.timestamp.getter((uint64_t)&v16 - v8);
  uint64_t v17 = v10;
  CRRegister.timestamp.getter((uint64_t)v7);
  uint64_t v11 = *(int *)(v4 + 28);
  uint64_t v12 = *(void *)&v7[v11];
  uint64_t v13 = *(void *)&v9[v11];
  if (v12 == v13) {
    char v14 = sub_1C410BE0C();
  }
  else {
    char v14 = v12 < v13;
  }
  sub_1C3FB7638((uint64_t)v7, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638((uint64_t)v9, type metadata accessor for FinalizedTimestamp);
  return v14 & 1;
}

uint64_t CRRegister.delta(_:from:)@<X0>(uint64_t *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v6 = v5 - 8;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v19 - v10;
  uint64_t v12 = *a1;
  uint64_t v13 = *v2;
  uint64_t v20 = v12;
  CRRegister.timestamp.getter((uint64_t)&v19 - v10);
  uint64_t v20 = v13;
  CRRegister.timestamp.getter((uint64_t)v9);
  uint64_t v14 = *(int *)(v6 + 28);
  uint64_t v15 = *(void *)&v11[v14];
  uint64_t v16 = *(void *)&v9[v14];
  if (v15 == v16) {
    char v17 = sub_1C410BE0C();
  }
  else {
    char v17 = v15 < v16;
  }
  sub_1C3FB7638((uint64_t)v9, type metadata accessor for FinalizedTimestamp);
  uint64_t result = sub_1C3FB7638((uint64_t)v11, type metadata accessor for FinalizedTimestamp);
  if (v17) {
    uint64_t result = swift_retain();
  }
  else {
    uint64_t v13 = 1;
  }
  *a2 = v13;
  return result;
}

uint64_t CRRegister.canMerge(delta:)()
{
  return 1;
}

uint64_t sub_1C4202124(uint64_t *a1)
{
  return 1;
}

uint64_t CRRegister.merge(delta:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  CRRegister.merge(_:)(&v2);
  return 1;
}

uint64_t CRRegister.observableDifference(from:with:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v45 = a2;
  uint64_t v46 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v44 = (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v43 = (uint64_t)&v39 - v12;
  uint64_t v40 = *(void *)(*(void *)(v13 + 24) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_1C4497B38();
  uint64_t v41 = *(void *)(v15 - 8);
  uint64_t v42 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v39 = (char *)&v39 - v16;
  uint64_t v17 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v18 = v17 - 8;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v39 - v22;
  uint64_t v24 = *a1;
  uint64_t v25 = *v4;
  uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  uint64_t v47 = a4;
  v26(a4, 1, 1, AssociatedTypeWitness);
  uint64_t v48 = v24;
  CRRegister.timestamp.getter((uint64_t)v23);
  uint64_t v48 = v25;
  CRRegister.timestamp.getter((uint64_t)v21);
  uint64_t v27 = *(int *)(v18 + 28);
  uint64_t v28 = *(void *)&v21[v27];
  uint64_t v29 = *(void *)&v23[v27];
  if (v28 == v29) {
    char v30 = sub_1C410BE0C();
  }
  else {
    char v30 = v28 < v29;
  }
  sub_1C3FB7638((uint64_t)v21, type metadata accessor for FinalizedTimestamp);
  uint64_t result = sub_1C3FB7638((uint64_t)v23, type metadata accessor for FinalizedTimestamp);
  if ((v30 & 1) == 0)
  {
    uint64_t v48 = v25;
    uint64_t v32 = v43;
    CRRegister.value.getter(a3, v43);
    uint64_t v48 = v24;
    uint64_t v33 = v44;
    CRRegister.value.getter(a3, v44);
    uint64_t v34 = v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 40))(v33, v45, v8);
    uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v46 + 8);
    v35(v33, v8);
    v35(v32, v8);
    uint64_t v37 = v41;
    uint64_t v36 = v42;
    uint64_t v38 = v47;
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v47, v42);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v37 + 32))(v38, v34, v36);
  }
  return result;
}

uint64_t sub_1C4202508@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return CRRegister.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t CRRegister.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v12, (uint64_t)v11, &qword_1EBBC04F8);
  uint64_t v13 = type metadata accessor for Proto_CRDT(0);
  LODWORD(v12) = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v11, 1, v13);
  sub_1C3F962E0((uint64_t)v11, &qword_1EBBC04F8);
  if (v12 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v14 = 0xD000000000000014;
    *(void *)(v14 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v14 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = a1;
    *(void *)(inited + 24) = 0;
    *(unsigned char *)(inited + 32) = 1;
    sub_1C3FFFF8C(a2, a3, &v18);
    uint64_t result = swift_release();
    if (!v4) {
      *a4 = v18;
    }
  }
  return result;
}

uint64_t sub_1C42026FC(uint64_t a1, uint64_t a2)
{
  return CRRegister.encode(to:)(a1, a2);
}

BOOL CRRegister.hasEncodedData.getter()
{
  return *v0 != 0;
}

uint64_t CRRegister.minEncodingVersion.getter(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *v1;
  CRRegister.value.getter(v5, (uint64_t)v7);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)(a1 + 24) + 8) + 8) + 32))(v3);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
}

uint64_t static CRRegister<>.== infix(_:_:)(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v62 = a4;
  uint64_t v63 = a5;
  uint64_t v59 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v8 = MEMORY[0x1F4188790](v59);
  uint64_t v57 = (uint64_t)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v56 = (uint64_t)&v55 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v55 = (uint64_t)&v55 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v55 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v61 = (uint64_t)&v55 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v58 = (uint64_t)&v55 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v60 = (uint64_t)&v55 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v55 - v24;
  uint64_t v26 = *(void *)(a3 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v23);
  uint64_t v29 = (char *)&v55 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  long long v31 = (char *)&v55 - v30;
  uint64_t v32 = *a1;
  uint64_t v33 = *a2;
  uint64_t v64 = *a1;
  uint64_t v34 = type metadata accessor for CRRegister();
  CRRegister.value.getter(v34, (uint64_t)v31);
  uint64_t v64 = v33;
  CRRegister.value.getter(v34, (uint64_t)v29);
  LOBYTE(a1) = sub_1C4497178();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v26 + 8);
  v35(v29, a3);
  v35(v31, a3);
  if (a1)
  {
    uint64_t v36 = (uint64_t)v16;
    uint64_t v64 = v32;
    CRRegister.timestamp.getter((uint64_t)v25);
    uint64_t v64 = v33;
    uint64_t v37 = v60;
    CRRegister.timestamp.getter(v60);
    uint64_t v39 = v58;
    uint64_t v38 = v59;
    uint64_t v40 = *(int *)(v59 + 20);
    uint64_t v41 = *(void *)&v25[v40];
    uint64_t v42 = *(void *)(v37 + v40);
    sub_1C3FB7758((uint64_t)v25, v58, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7758(v37, v61, type metadata accessor for FinalizedTimestamp);
    if (v41 != v42)
    {
      char v51 = 0;
      uint64_t v53 = v60;
      uint64_t v52 = v61;
LABEL_10:
      sub_1C3FB7638(v52, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v39, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v53, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638((uint64_t)v25, type metadata accessor for FinalizedTimestamp);
      return v51 & 1;
    }
    uint64_t v43 = v61;
    char v44 = sub_1C4496618();
    sub_1C3FB7638(v43, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638(v39, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638(v60, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v25, type metadata accessor for FinalizedTimestamp);
    if (v44)
    {
      uint64_t v64 = v32;
      sub_1C41FF400(v36);
      uint64_t v64 = v33;
      uint64_t v45 = v55;
      sub_1C41FF400(v55);
      uint64_t v46 = *(int *)(v38 + 20);
      uint64_t v47 = *(void *)(v36 + v46);
      uint64_t v48 = *(void *)(v45 + v46);
      uint64_t v49 = v56;
      sub_1C3FB7758(v36, v56, type metadata accessor for FinalizedTimestamp);
      uint64_t v50 = v57;
      sub_1C3FB7758(v45, v57, type metadata accessor for FinalizedTimestamp);
      if (v47 == v48) {
        char v51 = sub_1C4496618();
      }
      else {
        char v51 = 0;
      }
      uint64_t v52 = v50;
      uint64_t v39 = v49;
      uint64_t v53 = v45;
      uint64_t v25 = (char *)v36;
      goto LABEL_10;
    }
  }
  char v51 = 0;
  return v51 & 1;
}

uint64_t sub_1C4202C9C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return static CRRegister<>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8));
}

uint64_t CRRegister.MutatingAction.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v68 = a3;
  uint64_t v70 = a4;
  uint64_t v74 = a2;
  uint64_t v63 = sub_1C4497B38();
  uint64_t v62 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v69 = (char *)v59 - v5;
  uint64_t v73 = type metadata accessor for Proto_Value(0);
  uint64_t v76 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  uint64_t v67 = (uint64_t)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v66 = (char *)v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v71 = (uint64_t)v59 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v64 = (uint64_t)v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v59 - v14;
  uint64_t v77 = type metadata accessor for Proto_Register(0);
  uint64_t v16 = MEMORY[0x1F4188790](v77);
  uint64_t v65 = (uint64_t)v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)v59 - v18;
  uint64_t v20 = type metadata accessor for Proto_CRDT(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v72 = (uint64_t)v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)v59 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v26 - 8);
  uint64_t v28 = (char *)v59 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v29, (uint64_t)v28, &qword_1EBBC04F8);
  LODWORD(v29) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 48))(v28, 1, v20);
  sub_1C3F962E0((uint64_t)v28, &qword_1EBBC04F8);
  if (v29 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v30 = 0xD000000000000014;
    *(void *)(v30 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v30 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRDTContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = a1;
  *(void *)(inited + 24) = 0;
  *(unsigned char *)(inited + 32) = 1;
  swift_retain();
  sub_1C3FBA924((uint64_t)v25);
  uint64_t v33 = *(void *)&v25[*(int *)(v20 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v33, (uint64_t)v15, &qword_1EBBC0648);
  uint64_t v34 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v59[1] = v35 + 48;
  int v36 = v60(v15, 1, v34);
  uint64_t v61 = a1;
  if (v36 == 1)
  {
    sub_1C3F962E0((uint64_t)v15, &qword_1EBBC0648);
    uint64_t v37 = v73;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v37 = v73;
    if (!EnumCaseMultiPayload)
    {
      sub_1C3FB4F54((uint64_t)v15, (uint64_t)v19, type metadata accessor for Proto_Register);
      goto LABEL_10;
    }
    sub_1C3FB7638((uint64_t)v15, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v39 = *(int *)(v77 + 20);
  if (qword_1EBBBF248 != -1) {
    swift_once();
  }
  *(void *)&v19[v39] = qword_1EBBBF238;
  swift_retain();
LABEL_10:
  sub_1C3FB7638((uint64_t)v25, type metadata accessor for Proto_CRDT);
  uint64_t v40 = *(void *)&v19[*(int *)(v77 + 20)]
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v41 = v71;
  sub_1C3F970C4(v40, v71, &qword_1EBBC0540);
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48);
  v76 += 48;
  LODWORD(v40) = v42(v41, 1, v37);
  sub_1C3F962E0(v41, &qword_1EBBC0540);
  sub_1C3FB7638((uint64_t)v19, type metadata accessor for Proto_Register);
  if (v40 == 1)
  {
    swift_release();
    swift_setDeallocating();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v70, 1, 1);
  }
  uint64_t v43 = v72;
  sub_1C3FBA924(v72);
  uint64_t v44 = *(void *)(v43 + *(int *)(v20 + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v45 = v44;
  uint64_t v46 = v64;
  sub_1C3F970C4(v45, v64, &qword_1EBBC0648);
  if (v60((char *)v46, 1, v34) == 1)
  {
    sub_1C3F962E0(v46, &qword_1EBBC0648);
    uint64_t v47 = v74;
    uint64_t v48 = v69;
    uint64_t v49 = (uint64_t)v66;
    uint64_t v50 = v65;
LABEL_16:
    sub_1C4496888();
    uint64_t v52 = *(int *)(v77 + 20);
    if (qword_1EBBBF248 != -1) {
      swift_once();
    }
    *(void *)(v50 + v52) = qword_1EBBBF238;
    swift_retain();
    goto LABEL_19;
  }
  int v51 = swift_getEnumCaseMultiPayload();
  uint64_t v49 = (uint64_t)v66;
  uint64_t v50 = v65;
  if (v51)
  {
    sub_1C3FB7638(v46, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    uint64_t v47 = v74;
    uint64_t v48 = v69;
    goto LABEL_16;
  }
  sub_1C3FB4F54(v46, v65, type metadata accessor for Proto_Register);
  uint64_t v47 = v74;
  uint64_t v48 = v69;
LABEL_19:
  sub_1C3FB7638(v72, type metadata accessor for Proto_CRDT);
  uint64_t v53 = *(void *)(v50 + *(int *)(v77 + 20))
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  sub_1C3F970C4(v53, v49, &qword_1EBBC0540);
  if (v42(v49, 1, v37) == 1)
  {
    uint64_t v54 = v67;
    sub_1C4496888();
    uint64_t v55 = *(int *)(v37 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)(v54 + v55) = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0(v49, &qword_1EBBC0540);
  }
  else
  {
    uint64_t v54 = v67;
    sub_1C3FB4F54(v49, v67, type metadata accessor for Proto_Value);
  }
  sub_1C3FB7638(v50, type metadata accessor for Proto_Register);
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  uint64_t v56 = v61;
  swift_retain();
  uint64_t v57 = sub_1C3F974B0(v54, v56);
  swift_release();
  uint64_t v58 = v75;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v68 + 8) + 8) + 8))(v57, v47);
  swift_release();
  swift_setDeallocating();
  uint64_t result = swift_release();
  if (!v58)
  {
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v48, 0, 1, v47);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v62 + 32))(v70, v48, v63);
  }
  return result;
}

uint64_t CRRegister.MutatingAction.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v58 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v57 = (char *)&v48 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v54 = (uint64_t)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for Proto_Register(0);
  MEMORY[0x1F4188790](v55);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_Value(0);
  uint64_t v56 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = a2;
  uint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = sub_1C4497B38();
  uint64_t v60 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v48 - v18;
  uint64_t v20 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = v62;
  uint64_t result = sub_1C3F62C10();
  if (v23) {
    return result;
  }
  int v51 = v14;
  uint64_t v52 = result;
  uint64_t v50 = v12;
  uint64_t v53 = v22;
  uint64_t v62 = 0;
  uint64_t v49 = v11;
  uint64_t v25 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v19, v61, v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v15) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v19, v16);
  }
  uint64_t v26 = v53;
  uint64_t v27 = (*(uint64_t (**)(char *, char *, uint64_t))(v20 + 32))(v53, v19, v15);
  MEMORY[0x1F4188790](v27);
  uint64_t v28 = *(void *)(v59 + 24);
  *(&v48 - 4) = v15;
  *(&v48 - 3) = v28;
  *(&v48 - 2) = (uint64_t)v26;
  *(&v48 - 1) = a1;
  uint64_t v29 = v52;
  swift_retain();
  uint64_t v30 = v62;
  sub_1C3F6DC00((void (*)(uint64_t))sub_1C4018244, (uint64_t)v51);
  if (v30)
  {
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v26, v15);
  }
  uint64_t v31 = v29 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
  swift_beginAccess();
  uint64_t v32 = *(int *)(type metadata accessor for Proto_CRDT(0) + 20);
  uint64_t v62 = v31;
  uint64_t v33 = *(void *)(v31 + v32)
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v34 = v54;
  sub_1C3F970C4(v33, v54, &qword_1EBBC0648);
  uint64_t v35 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 48))(v34, 1, v35) == 1)
  {
    sub_1C3F962E0(v34, &qword_1EBBC0648);
    uint64_t v36 = (uint64_t)v49;
    uint64_t v37 = (uint64_t)v57;
    uint64_t v38 = v50;
    uint64_t v39 = v55;
LABEL_10:
    sub_1C4496888();
    uint64_t v41 = *(int *)(v39 + 20);
    uint64_t v42 = (uint64_t)v58;
    if (qword_1EBBBF248 != -1) {
      swift_once();
    }
    *(void *)(v36 + v41) = qword_1EBBBF238;
    swift_retain();
    goto LABEL_13;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v36 = (uint64_t)v49;
  uint64_t v37 = (uint64_t)v57;
  uint64_t v38 = v50;
  uint64_t v39 = v55;
  if (EnumCaseMultiPayload)
  {
    sub_1C3FB7638(v34, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_10;
  }
  sub_1C3FB4F54(v34, (uint64_t)v49, type metadata accessor for Proto_Register);
  uint64_t v42 = (uint64_t)v58;
LABEL_13:
  uint64_t v43 = *(int *)(v39 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Register._StorageClass(0);
    swift_allocObject();
    uint64_t v44 = swift_retain();
    uint64_t v45 = sub_1C3FB87F8(v44);
    uint64_t v38 = v50;
    *(void *)(v36 + v43) = v45;
    swift_release();
  }
  uint64_t v46 = *(void *)(v36 + v43);
  sub_1C3FB4F54((uint64_t)v51, v37, type metadata accessor for Proto_Value);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v56 + 56))(v37, 0, 1, v38);
  sub_1C3F961BC(v37, v42, &qword_1EBBC0540);
  uint64_t v47 = v46 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v42, v47, &qword_1EBBC0540);
  swift_endAccess();
  swift_release();
  sub_1C43F10C0(v36);
  swift_endAccess();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v53, v15);
}

void CRRegister.MutatingAction.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C4203E64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CRRegister.MutatingAction.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C4203E84(uint64_t a1, uint64_t a2)
{
  return CRRegister.MutatingAction.encode(to:)(a1, a2);
}

void sub_1C4203E9C(unsigned char *a1@<X8>)
{
}

uint64_t CRRegister<>.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = (void *)MEMORY[0x1F4188790](a1);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v9 = *v2;
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1C4498698();
  uint64_t v14 = v9;
  CRRegister.value.getter(a2, (uint64_t)v8);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v12, v13);
  sub_1C4498348();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_1C4204004(uint64_t a1, uint64_t a2)
{
  return CRRegister<>.encode(to:)(a1, a2);
}

uint64_t type metadata accessor for CRRegisterRefBase()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CRGroupedRegisterRef()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CRRegisterRef()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C4204068(uint64_t a1, uint64_t a2)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v4);
  return CRRegister.value.setter((uint64_t)v4, a2);
}

uint64_t type metadata accessor for CRRegister.MutatingAction()
{
  return __swift_instantiateGenericMetadata();
}

_UNKNOWN **sub_1C4204140()
{
  return &protocol witness table for CRRegister<A>;
}

uint64_t sub_1C420414C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C4204188@<X0>(void *a1@<X8>)
{
  return CRRegister.projectedValue.getter(a1);
}

uint64_t sub_1C42041C0()
{
  return 16;
}

__n128 sub_1C42041CC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C42041D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_3Tm(a1, a2, a3, (uint64_t (*)(uint64_t))CRRegister.value.getter);
}

uint64_t sub_1C42041F4()
{
  return 16;
}

__n128 sub_1C4204200(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C420420C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_get_3Tm(a1, a2, a3, (uint64_t (*)(uint64_t))CRRegister.wrappedValue.getter);
}

uint64_t keypath_get_3Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = type metadata accessor for CRRegister();
  return a4(v5);
}

uint64_t sub_1C4204280(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRRegister();
  return sub_1C4204068(a1, v2);
}

uint64_t sub_1C42042C0()
{
  return 16;
}

__n128 sub_1C42042CC(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C42042D8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C4204310()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FinalizedTimestamp(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1C42043E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for FinalizedTimestamp(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void *sub_1C42044B0(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

void *sub_1C42044F8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_1C420452C(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1C4204588(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1C42045D8()
{
  uint64_t result = sub_1C4497B38();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C4204668(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1C4204808(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1C4204A44);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1C4204A6C()
{
  return sub_1C41FE8A8(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t CRTaggedValue.tag.getter()
{
  return *(void *)v0;
}

uint64_t CRTaggedValue.tag.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*CRTaggedValue.tag.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CRTaggedValue.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t CRTaggedValue.value.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t (*CRTaggedValue.value.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CRTaggedValue.init(tag:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  int v6 = (char *)a4 + *(int *)(type metadata accessor for CRTaggedValue() + 36);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v7(v6, a2, a3);
}

uint64_t type metadata accessor for CRTaggedValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t CRTaggedValue.observableDifference(from:with:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v30 = a4;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C4497B38();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  unsigned int v13 = (char *)&v27 - v12;
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v17 = (char *)&v27 - v16;
  if (*v4 == *(void *)a1)
  {
    uint64_t v28 = v15;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 40))(&a1[*(int *)(a3 + 36)], v29, v7, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v30, 1, 1, AssociatedTypeWitness);
    }
    else
    {
      uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
      v23(v17, v13, AssociatedTypeWitness);
      uint64_t v24 = v30;
      v23(v30, v17, AssociatedTypeWitness);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v24, 0, 1, AssociatedTypeWitness);
    }
  }
  else
  {
    uint64_t v19 = swift_conformsToProtocol2();
    if (v19) {
      uint64_t v20 = v19;
    }
    else {
      uint64_t v20 = 0;
    }
    if (v19) {
      uint64_t v21 = AssociatedTypeWitness;
    }
    else {
      uint64_t v21 = 0;
    }
    if (v21)
    {
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v20 + 8);
      *((void *)&v32 + 1) = v21;
      uint64_t v33 = v20;
      __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v31);
      v22(v21, v20);
    }
    else
    {
      uint64_t v33 = 0;
      long long v31 = 0u;
      long long v32 = 0u;
    }
    __swift_instantiateConcreteTypeFromMangledName(qword_1EA39C168);
    uint64_t v25 = v30;
    int v26 = swift_dynamicCast();
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v25, v26 ^ 1u, 1, AssociatedTypeWitness);
  }
}

uint64_t CRTaggedValue.visitReferences(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(a2 + 24) + 8) + 48))(a1, *(void *)(a2 + 16));
}

Swift::Bool __swiftcall CRTaggedValue.needToFinalizeTimestamps()()
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(v0 + 24) + 8) + 56))(*(void *)(v0 + 16)) & 1;
}

uint64_t CRTaggedValue.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(a2 + 24) + 8) + 64))(a1, *(void *)(a2 + 16));
}

void CRTaggedValue.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C4204FD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return CRTaggedValue.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t CRTaggedValue.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v90 = a3;
  uint64_t v78 = a4;
  uint64_t v91 = a2;
  uint64_t v79 = *(void *)(a2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](a1);
  uint64_t v77 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v88 = (char *)&v76 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v85 = (uint64_t)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v92 = (uint64_t)&v76 - v11;
  uint64_t v98 = type metadata accessor for Proto_TaggedValue(0);
  uint64_t v12 = MEMORY[0x1F4188790](v98);
  uint64_t v87 = (uint64_t)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v94 = (uint64_t)&v76 - v14;
  uint64_t v15 = type metadata accessor for Proto_Value(0);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v86 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v95 = (char *)&v76 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v97 = (uint64_t)&v76 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v96 = (uint64_t)&v76 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v93 = (uint64_t)&v76 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v76 - v28;
  MEMORY[0x1F4188790](v27);
  long long v31 = (char *)&v76 - v30;
  uint64_t v32 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v32, (uint64_t)v31, &qword_1EBBC0540);
  uint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48);
  uint64_t v34 = v16 + 48;
  uint64_t v33 = v35;
  unsigned int v36 = v35((uint64_t)v31, 1, v15);
  sub_1C3F962E0((uint64_t)v31, &qword_1EBBC0540);
  if (v36 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v37 = 0xD000000000000017;
    *(void *)(v37 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v37 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRValueContainer();
  uint64_t inited = swift_initStackObject();
  uint64_t v81 = a1;
  uint64_t v84 = inited;
  *(void *)(inited + 16) = a1;
  sub_1C3F970C4(v32, (uint64_t)v29, &qword_1EBBC0540);
  uint64_t v83 = v34;
  uint64_t v82 = v33;
  uint64_t result = v33((uint64_t)v29, 1, v15);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v40 = v97;
  sub_1C3F8ADE0((uint64_t)v29, v97, type metadata accessor for Proto_Value);
  uint64_t v80 = v15;
  uint64_t v41 = *(void *)(v40 + *(int *)(v15 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v42 = v92;
  sub_1C3F970C4(v41, v92, &qword_1EBBBF8A0);
  uint64_t v43 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48);
  int v45 = v44(v42, 1, v43);
  uint64_t v46 = (uint64_t)v95;
  if (v45 == 1)
  {
    swift_retain();
    sub_1C3F962E0(v42, &qword_1EBBBF8A0);
    uint64_t v47 = v94;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v47 = v94;
    if (EnumCaseMultiPayload == 11)
    {
      sub_1C3F8ADE0(v42, v94, type metadata accessor for Proto_TaggedValue);
      uint64_t v49 = v82;
      goto LABEL_12;
    }
    swift_retain();
    sub_1C3F8B288(v42, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1C4496888();
  uint64_t v50 = *(int *)(v98 + 20);
  uint64_t v49 = v82;
  if (qword_1EA39AF70 != -1) {
    swift_once();
  }
  *(void *)(v47 + v50) = qword_1EA39AF60;
LABEL_12:
  swift_retain();
  sub_1C3F8B288(v97, type metadata accessor for Proto_Value);
  uint64_t v51 = *(void *)(v47 + *(int *)(v98 + 20));
  swift_beginAccess();
  uint64_t v97 = *(void *)(v51 + 16);
  sub_1C3F8B288(v47, type metadata accessor for Proto_TaggedValue);
  uint64_t v52 = *(void *)(v84 + 16) + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  uint64_t v53 = v93;
  sub_1C3F970C4(v52, v93, &qword_1EBBC0540);
  uint64_t v54 = v80;
  uint64_t result = v49(v53, 1, v80);
  if (result == 1)
  {
LABEL_31:
    __break(1u);
    return result;
  }
  sub_1C3F8ADE0(v53, v46, type metadata accessor for Proto_Value);
  uint64_t v55 = *(void *)(v46 + *(int *)(v54 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v56 = v55;
  uint64_t v57 = v85;
  sub_1C3F970C4(v56, v85, &qword_1EBBBF8A0);
  if (v44(v57, 1, v43) == 1)
  {
    sub_1C3F962E0(v57, &qword_1EBBBF8A0);
    uint64_t v58 = v81;
    uint64_t v59 = v91;
    uint64_t v60 = v90;
    uint64_t v61 = v89;
    uint64_t v62 = v88;
    uint64_t v63 = v87;
    uint64_t v64 = (uint64_t)v86;
LABEL_18:
    sub_1C4496888();
    uint64_t v66 = *(int *)(v98 + 20);
    if (qword_1EA39AF70 != -1) {
      swift_once();
    }
    *(void *)(v63 + v66) = qword_1EA39AF60;
    swift_retain();
    goto LABEL_21;
  }
  int v65 = swift_getEnumCaseMultiPayload();
  uint64_t v60 = v90;
  uint64_t v63 = v87;
  uint64_t v64 = (uint64_t)v86;
  if (v65 != 11)
  {
    sub_1C3F8B288(v57, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    uint64_t v58 = v81;
    uint64_t v59 = v91;
    uint64_t v61 = v89;
    uint64_t v62 = v88;
    goto LABEL_18;
  }
  sub_1C3F8ADE0(v57, v87, type metadata accessor for Proto_TaggedValue);
  uint64_t v58 = v81;
  uint64_t v59 = v91;
  uint64_t v61 = v89;
  uint64_t v62 = v88;
LABEL_21:
  sub_1C3F8B288(v46, type metadata accessor for Proto_Value);
  uint64_t v67 = *(void *)(v63 + *(int *)(v98 + 20))
      + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  uint64_t v68 = v96;
  sub_1C3F970C4(v67, v96, &qword_1EBBC0540);
  uint64_t v69 = v80;
  if (v82(v68, 1, v80) == 1)
  {
    sub_1C4496888();
    uint64_t v70 = *(int *)(v69 + 20);
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)(v64 + v70) = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0(v96, &qword_1EBBC0540);
  }
  else
  {
    sub_1C3F8ADE0(v68, v64, type metadata accessor for Proto_Value);
  }
  sub_1C3F8B288(v63, type metadata accessor for Proto_TaggedValue);
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  uint64_t v71 = sub_1C3F974B0(v64, v58);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v60 + 8) + 8) + 8))(v71, v59);
  if (v61)
  {
    swift_release();
    swift_setDeallocating();
    return swift_release();
  }
  swift_release();
  swift_release();
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v79 + 32);
  uint64_t v73 = v77;
  v72(v77, v62, v59);
  uint64_t v74 = v78;
  *uint64_t v78 = v97;
  uint64_t v75 = type metadata accessor for CRTaggedValue();
  return ((uint64_t (*)(char *, char *, uint64_t))v72)((char *)v74 + *(int *)(v75 + 36), v73, v59);
}

uint64_t sub_1C4205B68(uint64_t a1, uint64_t a2)
{
  return CRTaggedValue.encode(to:)(a1, a2);
}

uint64_t CRTaggedValue.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v70 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v58 - v6;
  uint64_t v72 = type metadata accessor for Proto_Value(0);
  uint64_t v69 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v9 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v58 - v14;
  uint64_t v16 = type metadata accessor for Proto_TaggedValue(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v58 - v20;
  uint64_t v22 = v74;
  uint64_t result = sub_1C3F6DD10();
  if (v22) {
    return result;
  }
  uint64_t v63 = v21;
  uint64_t v65 = a1;
  uint64_t v60 = v13;
  uint64_t v68 = v16;
  uint64_t v66 = v9;
  uint64_t v74 = 0;
  uint64_t v61 = v19;
  uint64_t v62 = v7;
  uint64_t v24 = v71;
  uint64_t v64 = *v71;
  uint64_t v25 = result + OBJC_IVAR____TtCC9Coherence9CREncoder16CRValueContainer_value;
  uint64_t v26 = result;
  swift_beginAccess();
  uint64_t v27 = v72;
  uint64_t v28 = *(void *)(v25 + *(int *)(v72 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v28, (uint64_t)v15, &qword_1EBBBF8A0);
  uint64_t v29 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v30 = *(void *)(v29 - 8);
  long long v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
  uint64_t v58 = v30 + 48;
  unsigned int v32 = v31(v15, 1, v29);
  uint64_t v67 = v26;
  uint64_t v59 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v31;
  if (v32 == 1)
  {
    swift_retain();
    sub_1C3F962E0((uint64_t)v15, &qword_1EBBBF8A0);
    uint64_t v33 = (uint64_t)v66;
    uint64_t v34 = v68;
    uint64_t v35 = (uint64_t)v63;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v34 = v68;
    uint64_t v35 = (uint64_t)v63;
    if (EnumCaseMultiPayload == 11)
    {
      sub_1C3F8ADE0((uint64_t)v15, (uint64_t)v63, type metadata accessor for Proto_TaggedValue);
      swift_retain();
      uint64_t v33 = (uint64_t)v66;
      goto LABEL_10;
    }
    swift_retain();
    sub_1C3F8B288((uint64_t)v15, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    uint64_t v33 = (uint64_t)v66;
  }
  sub_1C4496888();
  uint64_t v37 = *(int *)(v34 + 20);
  if (qword_1EA39AF70 != -1) {
    swift_once();
  }
  *(void *)(v35 + v37) = qword_1EA39AF60;
  swift_retain();
LABEL_10:
  uint64_t v38 = *(int *)(v34 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_TaggedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v39 = swift_retain();
    *(void *)(v35 + v38) = sub_1C4400A40(v39);
    swift_release();
  }
  uint64_t v40 = *(void *)(v35 + v38);
  swift_beginAccess();
  *(void *)(v40 + 16) = v64;
  sub_1C43F0970(v35);
  uint64_t v41 = swift_endAccess();
  MEMORY[0x1F4188790](v41);
  *((_OWORD *)&v58 - 2) = *(_OWORD *)(v73 + 16);
  uint64_t v42 = v65;
  *(&v58 - 2) = (uint64_t)v24;
  *(&v58 - 1) = v42;
  uint64_t v43 = v74;
  sub_1C3F6DC00((void (*)(uint64_t))sub_1C4206558, v33);
  if (v43) {
    return swift_release();
  }
  uint64_t v74 = 0;
  swift_beginAccess();
  uint64_t v44 = *(int *)(v27 + 20);
  uint64_t v73 = v25;
  uint64_t v45 = *(void *)(v25 + v44)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v46 = (uint64_t)v60;
  sub_1C3F970C4(v45, (uint64_t)v60, &qword_1EBBBF8A0);
  if (v59(v46, 1, v29) == 1)
  {
    uint64_t v47 = v27;
    sub_1C3F962E0(v46, &qword_1EBBBF8A0);
    uint64_t v49 = v69;
    uint64_t v48 = (uint64_t)v70;
    uint64_t v50 = (uint64_t)v62;
LABEL_19:
    uint64_t v52 = (uint64_t)v61;
    sub_1C4496888();
    uint64_t v53 = *(int *)(v68 + 20);
    if (qword_1EA39AF70 != -1) {
      swift_once();
    }
    *(void *)(v52 + v53) = qword_1EA39AF60;
    swift_retain();
    goto LABEL_22;
  }
  int v51 = swift_getEnumCaseMultiPayload();
  uint64_t v49 = v69;
  uint64_t v48 = (uint64_t)v70;
  uint64_t v50 = (uint64_t)v62;
  uint64_t v47 = v27;
  if (v51 != 11)
  {
    sub_1C3F8B288(v46, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_19;
  }
  uint64_t v52 = (uint64_t)v61;
  sub_1C3F8ADE0(v46, (uint64_t)v61, type metadata accessor for Proto_TaggedValue);
LABEL_22:
  uint64_t v54 = *(int *)(v68 + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_TaggedValue._StorageClass(0);
    swift_allocObject();
    uint64_t v55 = swift_retain();
    *(void *)(v52 + v54) = sub_1C4400A40(v55);
    swift_release();
  }
  uint64_t v56 = *(void *)(v52 + v54);
  sub_1C3F8ADE0((uint64_t)v66, v50, type metadata accessor for Proto_Value);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v49 + 56))(v50, 0, 1, v47);
  sub_1C4124B88(v50, v48);
  uint64_t v57 = v56 + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
  swift_beginAccess();
  swift_retain();
  sub_1C4124BF0(v48, v57);
  swift_endAccess();
  swift_release();
  sub_1C43F0970(v52);
  swift_endAccess();
  return swift_release();
}

void sub_1C420633C(unsigned char *a1@<X8>)
{
}

uint64_t static CRTaggedValue<>.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  type metadata accessor for CRTaggedValue();
  return sub_1C4497178() & 1;
}

uint64_t CRTaggedValue<>.hash(into:)()
{
  return sub_1C4497088();
}

uint64_t CRTaggedValue<>.hashValue.getter()
{
  return sub_1C4498628();
}

uint64_t sub_1C420649C(void *a1, void *a2)
{
  return static CRTaggedValue<>.== infix(_:_:)(a1, a2);
}

uint64_t sub_1C42064AC()
{
  return CRTaggedValue<>.hashValue.getter();
}

uint64_t sub_1C42064B4()
{
  return CRTaggedValue<>.hash(into:)();
}

uint64_t sub_1C42064BC()
{
  return sub_1C4498628();
}

uint64_t CRTaggedValue<>.encode(to:)()
{
  return sub_1C4497068();
}

uint64_t sub_1C420653C()
{
  return CRTaggedValue<>.encode(to:)();
}

uint64_t sub_1C4206558()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[5];
  type metadata accessor for CRTaggedValue();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 8) + 8) + 16))(v3, v1);
}

uint64_t sub_1C42065D0(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C420660C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C4206650()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C42066F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 8) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 8) & ~v5, ((unint64_t)a2 + v5 + 8) & ~v5);
  }
  return v3;
}

uint64_t sub_1C42067DC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

void *sub_1C4206818(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1C4206888(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1C42068F8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_1C4206968(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_1C42069D8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 8) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 8) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_1C4206B54(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 8) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C4206D88);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 8] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t sub_1C4206DB0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C4206E0C()
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Capsule();
  uint64_t v1 = sub_1C4497608();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v30 - v3;
  uint64_t v5 = sub_1C4496678();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v41 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v41 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v41);
  BOOL v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  int v12 = (char *)&v30 - v11;
  swift_beginAccess();
  uint64_t v13 = *(void *)(v0 + 112);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v31 = v0;
  uint64_t v32 = v13 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  uint64_t v42 = v5 - 8;
  uint64_t v34 = v2 + 16;
  uint64_t v35 = v2;
  uint64_t v39 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v40 = TupleTypeMetadata2 - 8;
  uint64_t v37 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v38 = (void (**)(char *, char *, uint64_t))(v2 + 32);
  int64_t v33 = (unint64_t)(v15 + 63) >> 6;
  int64_t v30 = v33 - 1;
  uint64_t v36 = v13;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  if (!v17) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  int64_t v21 = v19;
  unint64_t v22 = v20 | (v19 << 6);
LABEL_5:
  uint64_t v23 = v36;
  (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v10, *(void *)(v36 + 48) + *(void *)(*(void *)(v5 - 8) + 72) * v22, v5);
  (*(void (**)(char *, unint64_t, uint64_t))(v35 + 16))(&v10[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v23 + 56) + *(void *)(v35 + 72) * v22, v1);
  for (uint64_t i = 0; ; uint64_t i = 1)
  {
    while (1)
    {
LABEL_12:
      uint64_t v27 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v10, i, 1, TupleTypeMetadata2);
      (*v39)(v12, v10, v41);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v12, 1, TupleTypeMetadata2) == 1)
      {
        swift_release();
        uint64_t v29 = v31;
        swift_bridgeObjectRelease();
        swift_unknownObjectWeakDestroy();
        swift_defaultActor_destroy();
        return v29;
      }
      (*v38)(v4, &v12[*(int *)(TupleTypeMetadata2 + 48)], v1);
      sub_1C44975F8();
      (*v37)(v4, v1);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v12, v5);
      int64_t v19 = v21;
      if (v17) {
        goto LABEL_4;
      }
LABEL_6:
      int64_t v25 = v19 + 1;
      if (__OFADD__(v19, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v25 >= v33)
      {
        int64_t v21 = v19;
        goto LABEL_11;
      }
      unint64_t v26 = *(void *)(v32 + 8 * v25);
      if (v26) {
        goto LABEL_9;
      }
      int64_t v21 = v19 + 2;
      if (v19 + 2 < v33) {
        break;
      }
      unint64_t v17 = 0;
      uint64_t i = 1;
      int64_t v21 = v19 + 1;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v21);
    if (v26)
    {
      int64_t v25 = v19 + 2;
LABEL_9:
      unint64_t v17 = (v26 - 1) & v26;
      unint64_t v22 = __clz(__rbit64(v26)) + (v25 << 6);
      int64_t v21 = v25;
      goto LABEL_5;
    }
    int64_t v28 = v19 + 3;
    if (v28 < v33) {
      break;
    }
LABEL_11:
    unint64_t v17 = 0;
  }
  unint64_t v26 = *(void *)(v32 + 8 * v28);
  if (v26)
  {
    int64_t v25 = v28;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v25 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v25 >= v33)
    {
      unint64_t v17 = 0;
      uint64_t i = 1;
      int64_t v21 = v30;
      goto LABEL_12;
    }
    unint64_t v26 = *(void *)(v32 + 8 * v25);
    ++v28;
    if (v26) {
      goto LABEL_9;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C420734C()
{
  sub_1C4206E0C();
  return MEMORY[0x1F4188210](v0);
}

uint64_t type metadata accessor for AsyncUpdatesActor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C4207390(uint64_t a1)
{
  uint64_t v49 = a1;
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for Capsule();
  uint64_t v43 = *(void (***)(char *, uint64_t, uint64_t))(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v47 = (char *)&v34 - v3;
  uint64_t v46 = sub_1C44975B8();
  uint64_t v42 = *(void (***)(char *, uint64_t))(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)&v34 - v4;
  uint64_t v48 = v2;
  uint64_t v5 = sub_1C4497608();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v34 - v7;
  uint64_t v9 = sub_1C4496678();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v52 = sub_1C4497B38();
  uint64_t v11 = *(void *)(v52 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v52);
  uint64_t v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v34 - v15;
  swift_beginAccess();
  uint64_t v17 = *(void *)(v1 + 112);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v36 = v17 + 64;
  uint64_t v19 = 1 << *(unsigned char *)(v17 + 32);
  uint64_t v20 = -1;
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  unint64_t v21 = v20 & v18;
  uint64_t v53 = v9 - 8;
  uint64_t v38 = v6 + 16;
  uint64_t v39 = v6;
  uint64_t v50 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t v51 = TupleTypeMetadata2 - 8;
  v43 += 2;
  uint64_t v44 = (void (**)(char *, char *, uint64_t))(v6 + 32);
  uint64_t v41 = (void (**)(char *, uint64_t))(v6 + 8);
  ++v42;
  int64_t v37 = (unint64_t)(v19 + 63) >> 6;
  int64_t v35 = v37 - 1;
  uint64_t v40 = v17;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v23 = 0;
  if (!v21) {
    goto LABEL_6;
  }
LABEL_4:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  int64_t v25 = v23;
  unint64_t v26 = v24 | (v23 << 6);
LABEL_5:
  uint64_t v27 = v40;
  (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v14, *(void *)(v40 + 48) + *(void *)(*(void *)(v9 - 8) + 72) * v26, v9);
  (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(&v14[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v27 + 56) + *(void *)(v39 + 72) * v26, v5);
  for (uint64_t i = 0; ; uint64_t i = 1)
  {
    while (1)
    {
LABEL_12:
      uint64_t v31 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v31 + 56))(v14, i, 1, TupleTypeMetadata2);
      (*v50)(v16, v14, v52);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v16, 1, TupleTypeMetadata2) == 1) {
        return swift_release();
      }
      (*v44)(v8, &v16[*(int *)(TupleTypeMetadata2 + 48)], v5);
      (*v43)(v47, v49, v48);
      uint64_t v32 = v45;
      sub_1C44975E8();
      (*v42)(v32, v46);
      (*v41)(v8, v5);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v16, v9);
      int64_t v23 = v25;
      if (v21) {
        goto LABEL_4;
      }
LABEL_6:
      int64_t v29 = v23 + 1;
      if (__OFADD__(v23, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v29 >= v37)
      {
        int64_t v25 = v23;
        goto LABEL_11;
      }
      unint64_t v30 = *(void *)(v36 + 8 * v29);
      if (v30) {
        goto LABEL_9;
      }
      int64_t v25 = v23 + 2;
      if (v23 + 2 < v37) {
        break;
      }
      unint64_t v21 = 0;
      uint64_t i = 1;
      int64_t v25 = v23 + 1;
    }
    unint64_t v30 = *(void *)(v36 + 8 * v25);
    if (v30)
    {
      int64_t v29 = v23 + 2;
LABEL_9:
      unint64_t v21 = (v30 - 1) & v30;
      unint64_t v26 = __clz(__rbit64(v30)) + (v29 << 6);
      int64_t v25 = v29;
      goto LABEL_5;
    }
    int64_t v33 = v23 + 3;
    if (v33 < v37) {
      break;
    }
LABEL_11:
    unint64_t v21 = 0;
  }
  unint64_t v30 = *(void *)(v36 + 8 * v33);
  if (v30)
  {
    int64_t v29 = v33;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v29 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v29 >= v37)
    {
      unint64_t v21 = 0;
      uint64_t i = 1;
      int64_t v25 = v35;
      goto LABEL_12;
    }
    unint64_t v30 = *(void *)(v36 + 8 * v29);
    ++v33;
    if (v30) {
      goto LABEL_9;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C4207A08(uint64_t a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v49 = a1;
  uint64_t v50 = v1 + 15;
  uint64_t v3 = v2[10];
  uint64_t v55 = v2[12];
  uint64_t v54 = v2[11];
  uint64_t v48 = v3;
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for Capsule();
  uint64_t v5 = sub_1C44975B8();
  uint64_t v43 = *(void *)(v5 - 8);
  uint64_t v44 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v42 = (char *)&v39 - v6;
  uint64_t v7 = sub_1C4497B38();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v39 - v9;
  uint64_t v52 = *(void *)(v4 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v40 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v41 = (char *)&v39 - v12;
  uint64_t v53 = v4;
  uint64_t v47 = sub_1C4497608();
  uint64_t v13 = sub_1C4497B38();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = sub_1C4496678();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  unint64_t v22 = (char *)&v39 - v21;
  sub_1C4496668();
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  unint64_t v24 = *(void (**)(char *, char *, uint64_t))(v17 + 16);
  v24(v20, v22, v16);
  unint64_t v25 = (*(unsigned __int8 *)(v17 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v26 = (char *)swift_allocObject();
  uint64_t v27 = v54;
  *((void *)v26 + 2) = v48;
  *((void *)v26 + 3) = v27;
  *((void *)v26 + 4) = v55;
  *((void *)v26 + 5) = v23;
  uint64_t v28 = v16;
  uint64_t v29 = v47;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v26[v25], v20, v28);
  uint64_t v30 = v49;
  sub_1C44975C8();
  v24(v20, v22, v28);
  uint64_t v31 = v30;
  uint64_t v32 = *(void *)(v29 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v15, v31, v29);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v15, 0, 1, v29);
  swift_beginAccess();
  sub_1C4208AA0();
  sub_1C4497008();
  sub_1C4497048();
  swift_endAccess();
  if (MEMORY[0x1C8782180](v50))
  {
    int64_t v33 = v51;
    (*(void (**)(uint64_t))(v55 + 24))(v54);
    swift_unknownObjectRelease();
    uint64_t v35 = v52;
    uint64_t v34 = v53;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v33, 1, v53) != 1)
    {
      uint64_t v36 = v41;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v41, v33, v34);
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v40, v36, v34);
      int64_t v37 = v42;
      sub_1C44975E8();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v37, v44);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
      return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v28);
    }
  }
  else
  {
    int64_t v33 = v51;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v51, 1, 1, v53);
  }
  (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v28);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v33, v46);
}

uint64_t sub_1C420804C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v8 = sub_1C4496678();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0980);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C44975A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = (char *)swift_allocObject();
  *((void *)v17 + 2) = 0;
  *((void *)v17 + 3) = 0;
  uint64_t v18 = v21;
  *((void *)v17 + 4) = a4;
  *((void *)v17 + 5) = v18;
  *((void *)v17 + 6) = v22;
  *((void *)v17 + 7) = v15;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v17[v16], (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_1C446E67C((uint64_t)v13, (uint64_t)&unk_1EA39EAB0, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1C420828C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  return MEMORY[0x1F4188298](sub_1C42082B0, 0, 0);
}

uint64_t sub_1C42082B0()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if (Strong)
  {
    return MEMORY[0x1F4188298](sub_1C4208378, Strong, 0);
  }
  else
  {
    **(unsigned char **)(v0 + 40) = 1;
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
}

uint64_t sub_1C4208378()
{
  sub_1C4208410(*(void *)(v0 + 56));
  swift_release();
  return MEMORY[0x1F4188298](sub_1C42083E8, 0, 0);
}

uint64_t sub_1C42083E8()
{
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 64) == 0;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C4208410(uint64_t a1)
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Capsule();
  uint64_t v2 = sub_1C4497608();
  uint64_t v3 = sub_1C4497B38();
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - v4;
  uint64_t v6 = sub_1C4496678();
  MEMORY[0x1F4188790](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v5, 1, 1, v2);
  swift_beginAccess();
  sub_1C4208AA0();
  sub_1C4497008();
  sub_1C4497048();
  return swift_endAccess();
}

uint64_t sub_1C420861C()
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Capsule();
  uint64_t v0 = sub_1C44975D8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (uint64_t *)((char *)&v5 - v2);
  swift_checkMetadataState();
  *uint64_t v3 = 1;
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4FBD018], v0);
  return sub_1C4497638();
}

uint64_t sub_1C420879C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 80);
  uint64_t v19 = *(void *)(*a2 + 96);
  uint64_t v6 = *(void *)(v4 + 88);
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Capsule();
  uint64_t v7 = sub_1C4497608();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0980);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C44975A8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v15 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v16 = (char *)swift_allocObject();
  *((void *)v16 + 2) = 0;
  *((void *)v16 + 3) = 0;
  *((void *)v16 + 4) = v5;
  *((void *)v16 + 5) = v6;
  *((void *)v16 + 6) = v19;
  *((void *)v16 + 7) = a2;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v16[v15], v10, v7);
  swift_retain();
  sub_1C3F61348((uint64_t)v13, (uint64_t)&unk_1EA39EAC0, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_1C42089F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 16) = a4;
  *(void *)(v5 + 24) = a5;
  return MEMORY[0x1F4188298](sub_1C4208A18, a4, 0);
}

uint64_t sub_1C4208A18()
{
  sub_1C4207A08(*(void *)(v0 + 24));
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C4208A78()
{
  return v0;
}

uint64_t sub_1C4208A84()
{
  return sub_1C4208A78();
}

unint64_t sub_1C4208AA0()
{
  unint64_t result = qword_1EBBBF868;
  if (!qword_1EBBBF868)
  {
    sub_1C4496678();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBBBF868);
  }
  return result;
}

uint64_t sub_1C4208AF8()
{
  swift_weakDestroy();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C4208B30()
{
  uint64_t v1 = sub_1C4496678();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 48) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C4208BFC(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = *(void *)(sub_1C4496678() - 8);
  uint64_t v7 = v1[5];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return sub_1C420804C(a1, v7, v8, v3, v4, v5);
}

uint64_t sub_1C4208C94()
{
  uint64_t v1 = sub_1C4496678();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C4208D68(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C4496678() - 8);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_1C40182C8;
  v7[6] = v5;
  v7[7] = v6;
  v7[5] = a1;
  return MEMORY[0x1F4188298](sub_1C42082B0, 0, 0);
}

uint64_t sub_1C4208E60()
{
  swift_defaultActor_initialize();
  sub_1C4496678();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Capsule();
  sub_1C4497608();
  swift_getTupleTypeMetadata2();
  sub_1C4497478();
  sub_1C4208AA0();
  *(void *)(v0 + 112) = sub_1C4496F28();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  return v0;
}

uint64_t sub_1C4208F78()
{
  return sub_1C4208E60();
}

uint64_t sub_1C4208FC0(uint64_t a1)
{
  return sub_1C420879C(a1, v1);
}

uint64_t sub_1C4208FC8()
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Capsule();
  uint64_t v1 = sub_1C4497608();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

uint64_t sub_1C42090D0()
{
  swift_getAssociatedConformanceWitness();
  type metadata accessor for Capsule();
  uint64_t v2 = *(void *)(sub_1C4497608() - 8);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[2] = v3;
  v5[3] = v4;
  v5[1] = sub_1C40185EC;
  return MEMORY[0x1F4188298](sub_1C4208A18, v3, 0);
}

uint64_t CROrderedDictionary.index(where:)(uint64_t (*a1)(char *, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v43 = *(void *)(a3 + 24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v63 = *(char **)(TupleTypeMetadata2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v50 = (char *)&v42 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = swift_getTupleTypeMetadata2();
  uint64_t v60 = sub_1C4497B38();
  uint64_t v15 = *(void *)(v60 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v60);
  uint64_t v59 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v58 = (char *)&v42 - v18;
  uint64_t v19 = v3[1];
  uint64_t v65 = *v3;
  uint64_t v66 = v19;
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C877FF50](v67, a3, WitnessTable);
  uint64_t v65 = v67[0];
  uint64_t v66 = v67[1];
  sub_1C4497F98();
  sub_1C4497F68();
  uint64_t v21 = sub_1C4497F88();
  uint64_t v56 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v57 = v21;
  uint64_t v22 = v43;
  uint64_t v55 = v14 - 8;
  uint64_t v48 = v5 - 8;
  uint64_t v47 = v43 - 8;
  uint64_t v49 = (void (**)(char *, uint64_t))(v63 + 8);
  uint64_t v52 = v9;
  uint64_t v51 = TupleTypeMetadata2;
  uint64_t v46 = v14;
  uint64_t v64 = v13;
  while (1)
  {
    uint64_t v23 = v59;
    sub_1C4497F78();
    unint64_t v24 = (uint64_t *)v58;
    (*v56)(v58, v23, v60);
    int v25 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v24, 1, v14);
    if (v25 == 1)
    {
      uint64_t v5 = 0;
      goto LABEL_7;
    }
    int v44 = v25;
    uint64_t v26 = *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v63 = &v13[v26];
    uint64_t v45 = *v24;
    uint64_t v61 = (char *)v24 + *(int *)(v14 + 48) + v26;
    uint64_t v27 = v50;
    uint64_t v28 = &v50[v26];
    uint64_t v62 = *(void *)(v5 - 8);
    uint64_t v29 = *(void (**)(char *))(v62 + 32);
    v29(v50);
    uint64_t v30 = *(void *)(v22 - 8);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v31(v28, v61, v22);
    uint64_t v32 = v27;
    uint64_t v13 = v64;
    ((void (*)(char *, char *, uint64_t))v29)(v64, v32, v5);
    TupleTypeMetadata2 = v51;
    int64_t v33 = v63;
    uint64_t v34 = v28;
    uint64_t v35 = v52;
    v31(v63, v34, v22);
    uint64_t v36 = &v35[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v37 = v62;
    (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v35, v13, v5);
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v36, v33, v22);
    uint64_t v38 = v68;
    char v39 = v53(v35, v36);
    uint64_t v68 = v38;
    if (v38) {
      break;
    }
    char v40 = v39;
    (*v49)(v13, TupleTypeMetadata2);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v22);
    (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v5);
    uint64_t v14 = v46;
    if (v40)
    {
      uint64_t v5 = v45;
LABEL_7:
      swift_release();
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  (*v49)(v13, TupleTypeMetadata2);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v22);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v5);
  return v5;
}

uint64_t CROrderedDictionary.subscript.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1C4215210(a1, a2, a3);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a3 + 24) - 8) + 8);
  return v5(a1);
}

uint64_t CROrderedDictionary.moveOrInsert(value:forKey:to:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v41 = a3;
  uint64_t v42 = a1;
  uint64_t v7 = (void *)a4[3];
  uint64_t v8 = sub_1C4497B38();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v35 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v31 - v12;
  uint64_t v43 = v4;
  uint64_t v14 = v4[1];
  uint64_t v34 = v4 + 1;
  uint64_t v15 = (uint64_t (*)(void, void))a4[2];
  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t))a4[4];
  uint64_t v17 = (uint64_t (*)(void, void))a4[5];
  uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t))a4[6];
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))a4[7];
  int v44 = v15;
  uint64_t v45 = v7;
  char v39 = v18;
  char v40 = v16;
  uint64_t v46 = v16;
  uint64_t v47 = v17;
  uint64_t v48 = v18;
  uint64_t v38 = v19;
  uint64_t v49 = v19;
  uint64_t v50 = v14;
  uint64_t v33 = type metadata accessor for CRDictionary();
  CRDictionary.subscript.getter(a2, (uint64_t)v13);
  uint64_t v32 = *(v7 - 1);
  int v20 = (*(uint64_t (**)(char *, uint64_t, void *))(v32 + 48))(v13, 1, v7);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
  uint64_t v36 = v9 + 8;
  uint64_t v37 = v8;
  uint64_t v31 = v21;
  uint64_t v22 = v21((uint64_t)v13, v8);
  if (v20 == 1) {
    return CROrderedDictionary.insert(value:forKey:at:)(v42, a2, v41, (uint64_t)a4);
  }
  int v44 = (uint64_t (*)(void, void))*v43;
  MEMORY[0x1F4188790](v22);
  *(&v31 - 8) = v15;
  *(&v31 - 7) = (uint64_t (*)(uint64_t, uint64_t))v7;
  *(&v31 - 6) = v40;
  *(&v31 - 5) = v17;
  unint64_t v24 = v38;
  *(&v31 - 4) = v39;
  *(&v31 - 3) = v24;
  *(&v31 - 2) = (uint64_t (*)(uint64_t, uint64_t))a2;
  type metadata accessor for CROrderedSetElement();
  uint64_t v25 = type metadata accessor for CRSequence();
  swift_retain();
  swift_getWitnessTable();
  Swift::Int v26 = sub_1C4373740((uint64_t (*)(char *))sub_1C4215530, (uint64_t)(&v31 - 10), v25);
  char v28 = v27;
  uint64_t result = swift_release();
  if ((v28 & 1) == 0)
  {
    CROrderedDictionary.move(from:to:)(v26, v41);
    uint64_t v29 = v32;
    uint64_t v30 = (uint64_t)v35;
    (*(void (**)(char *, uint64_t, void *))(v32 + 16))(v35, v42, v7);
    (*(void (**)(uint64_t, void, uint64_t, void *))(v29 + 56))(v30, 0, 1, v7);
    sub_1C41589BC(v30, a2, v33);
    return v31(v30, v37);
  }
  return result;
}

uint64_t CROrderedDictionary.insert(value:forKey:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v48 = a3;
  uint64_t v37 = a1;
  uint64_t v47 = type metadata accessor for Timestamp(0);
  uint64_t v8 = MEMORY[0x1F4188790](v47);
  uint64_t v46 = (uint64_t)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(a4 + 16);
  uint64_t v38 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v41 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a4 + 40);
  uint64_t v13 = type metadata accessor for CROrderedSetElement();
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v39 = (uint64_t)&v36 - v14;
  uint64_t v15 = *(void *)(a4 + 24);
  uint64_t v16 = sub_1C4497B38();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  int v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v36 - v21;
  uint64_t v49 = v5;
  uint64_t v50 = v10;
  uint64_t v55 = v5[1];
  uint64_t v23 = *(void *)(a4 + 32);
  uint64_t v45 = v10;
  uint64_t v51 = v15;
  uint64_t v52 = v23;
  uint64_t v40 = v12;
  uint64_t v53 = v12;
  long long v54 = *(_OWORD *)(a4 + 48);
  uint64_t v24 = type metadata accessor for CRDictionary();
  uint64_t v44 = a2;
  CRDictionary.subscript.getter(a2, (uint64_t)v22);
  uint64_t v25 = *(void *)(v15 - 8);
  LODWORD(a4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v22, 1, v15);
  Swift::Int v26 = *(uint64_t (**)(char *, uint64_t))(v17 + 8);
  uint64_t result = v26(v22, v16);
  if (a4 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v20, v37, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v20, 0, 1, v15);
    uint64_t v28 = v44;
    sub_1C41589BC((uint64_t)v20, v44, v24);
    v26(v20, v16);
    uint64_t v29 = v43;
    type metadata accessor for CRSequence();
    uint64_t v30 = v49;
    sub_1C43734D8();
    uint64_t v31 = (uint64_t)v41;
    uint64_t v32 = v28;
    uint64_t v33 = v45;
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v41, v32, v45);
    uint64_t v50 = *v30;
    uint64_t v34 = v46;
    sub_1C4373544(v46);
    *(void *)(v34 + *(int *)(type metadata accessor for Replica() + 20)) = 0;
    *(void *)(v34 + *(int *)(v47 + 20)) = 0;
    uint64_t v35 = v39;
    sub_1C3F8A474(v31, v34, v33, v39);
    CRSequence.insert(_:at:)(v35, v48);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v35, v29);
  }
  return result;
}

uint64_t CROrderedDictionary.append(value:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v34 = a1;
  uint64_t v44 = type metadata accessor for Timestamp(0);
  uint64_t v7 = MEMORY[0x1F4188790](v44);
  uint64_t v43 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v35 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v38 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a3 + 40);
  uint64_t v12 = type metadata accessor for CROrderedSetElement();
  uint64_t v39 = *(void *)(v12 - 8);
  uint64_t v40 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v36 = (uint64_t)&v34 - v13;
  uint64_t v14 = *(void *)(a3 + 24);
  uint64_t v15 = sub_1C4497B38();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v34 - v20;
  uint64_t v45 = v4;
  uint64_t v46 = v9;
  uint64_t v51 = v4[1];
  uint64_t v22 = *(void *)(a3 + 32);
  uint64_t v42 = v9;
  uint64_t v47 = v14;
  uint64_t v48 = v22;
  uint64_t v37 = v11;
  uint64_t v49 = v11;
  long long v50 = *(_OWORD *)(a3 + 48);
  uint64_t v23 = type metadata accessor for CRDictionary();
  uint64_t v41 = a2;
  CRDictionary.subscript.getter(a2, (uint64_t)v21);
  uint64_t v24 = *(void *)(v14 - 8);
  LODWORD(a3) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v21, 1, v14);
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  uint64_t result = v25(v21, v15);
  if (a3 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v19, v34, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v19, 0, 1, v14);
    uint64_t v27 = v41;
    sub_1C41589BC((uint64_t)v19, v41, v23);
    v25(v19, v15);
    uint64_t v28 = v40;
    type metadata accessor for CRSequence();
    uint64_t v29 = v45;
    sub_1C43734D8();
    uint64_t v30 = (uint64_t)v38;
    uint64_t v31 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v38, v27, v42);
    uint64_t v46 = *v29;
    uint64_t v32 = v43;
    sub_1C4373544(v43);
    *(void *)(v32 + *(int *)(type metadata accessor for Replica() + 20)) = 0;
    *(void *)(v32 + *(int *)(v44 + 20)) = 0;
    uint64_t v33 = v36;
    sub_1C3F8A474(v30, v32, v31, v36);
    CRSequence.append(_:)(v33);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 8))(v33, v28);
  }
  return result;
}

uint64_t CROrderedDictionary.moveOrAppend(value:forKey:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v43 = a1;
  uint64_t v6 = a3[3];
  uint64_t v7 = sub_1C4497B38();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v37 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v44 = v3;
  uint64_t v13 = v3[1];
  uint64_t v36 = v3 + 1;
  uint64_t v14 = a3[2];
  uint64_t v15 = a3[4];
  uint64_t v16 = a3[5];
  uint64_t v17 = a3[6];
  uint64_t v18 = a3[7];
  uint64_t v45 = v14;
  uint64_t v46 = v6;
  uint64_t v41 = v17;
  uint64_t v42 = v15;
  uint64_t v47 = v15;
  uint64_t v48 = v16;
  uint64_t v49 = v17;
  uint64_t v40 = v18;
  uint64_t v50 = v18;
  uint64_t v51 = v13;
  uint64_t v19 = a2;
  uint64_t v35 = type metadata accessor for CRDictionary();
  CRDictionary.subscript.getter(a2, (uint64_t)v12);
  uint64_t v34 = *(void *)(v6 - 8);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48))(v12, 1, v6);
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  uint64_t v38 = v8 + 8;
  uint64_t v39 = v7;
  uint64_t v33 = v21;
  v21((uint64_t)v12, v7);
  if (v20 == 1) {
    return CROrderedDictionary.append(value:forKey:)(v43, a2, (uint64_t)a3);
  }
  uint64_t v23 = v44[1];
  uint64_t v45 = *v44;
  uint64_t v24 = v45;
  uint64_t v46 = v23;
  id v25 = CROrderedDictionary.count.getter();
  uint64_t v32 = (uint64_t)&v32;
  uint64_t v45 = v24;
  MEMORY[0x1F4188790](v25);
  *(&v32 - 8) = v14;
  *(&v32 - 7) = v6;
  *(&v32 - 6) = v42;
  *(&v32 - 5) = v16;
  uint64_t v26 = v40;
  *(&v32 - 4) = v41;
  *(&v32 - 3) = v26;
  *(&v32 - 2) = v19;
  type metadata accessor for CROrderedSetElement();
  uint64_t v27 = type metadata accessor for CRSequence();
  swift_retain();
  swift_getWitnessTable();
  Swift::Int v28 = sub_1C4373740((uint64_t (*)(char *))sub_1C4215530, (uint64_t)(&v32 - 10), v27);
  LOBYTE(v24) = v29;
  uint64_t result = swift_release();
  if ((v24 & 1) == 0)
  {
    CROrderedDictionary.move(from:to:)(v28, (Swift::Int)v25);
    uint64_t v30 = v34;
    uint64_t v31 = (uint64_t)v37;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v37, v43, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56))(v31, 0, 1, v6);
    sub_1C41589BC(v31, v19, v35);
    return v33(v31, v39);
  }
  return result;
}

id CROrderedDictionary.count.getter()
{
  return CRSequence.count.getter();
}

uint64_t sub_1C420A788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  uint64_t v85 = a8;
  uint64_t v80 = a7;
  uint64_t v86 = a6;
  uint64_t v84 = a5;
  uint64_t v83 = a3;
  uint64_t v81 = a2;
  uint64_t v72 = a9;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC06E8);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v76 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for Proto_Sequence(0);
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v73 = (uint64_t)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0748);
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v16 = (char *)&v72 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Proto_Set(0);
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  int v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = swift_allocObject();
  uint64_t v87 = v21;
  *(void *)(v21 + 16) = 0;
  uint64_t v22 = v21 + 16;
  uint64_t v23 = a1;
  uint64_t v78 = *(int *)(type metadata accessor for Proto_OrderedSet(0) + 20);
  uint64_t v24 = *(void *)(a1 + v78)
      + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  sub_1C3F970C4(v24, (uint64_t)v16, (uint64_t *)&unk_1EBBC0748);
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17);
  uint64_t v82 = v23;
  uint64_t v77 = v22;
  if (v25 == 1)
  {
    sub_1C4496888();
    uint64_t v26 = *(int *)(v17 + 20);
    if (qword_1EBBC01E8 != -1) {
      swift_once();
    }
    *(void *)&v20[v26] = qword_1EBBC01E0;
    swift_retain();
    sub_1C3F962E0((uint64_t)v16, (uint64_t *)&unk_1EBBC0748);
  }
  else
  {
    sub_1C421608C((uint64_t)v16, (uint64_t)v20, type metadata accessor for Proto_Set);
  }
  uint64_t v28 = v86;
  uint64_t v27 = v87;
  uint64_t v29 = v85;
  uint64_t v30 = v80;
  uint64_t v31 = (void *)swift_allocObject();
  uint64_t v32 = v83;
  v31[2] = v83;
  void v31[3] = a4;
  uint64_t v33 = a4;
  uint64_t v34 = (uint64_t)v84;
  v31[4] = v84;
  v31[5] = v28;
  v31[6] = v30;
  v31[7] = v29;
  v31[8] = v27;
  uint64_t v35 = v81;
  swift_retain();
  swift_retain();
  uint64_t v36 = (uint64_t)v31;
  uint64_t v37 = v79;
  sub_1C41556EC((uint64_t)v20, v35, (uint64_t)sub_1C421618C, v36, v32, v33, v34, v28, v88, v30, v29);
  if (v37)
  {
    swift_release();
    sub_1C3F86CF8(v82, type metadata accessor for Proto_OrderedSet);
    return swift_release();
  }
  uint64_t v38 = (uint64_t *)v88[0];
  uint64_t v39 = (void *)v77;
  uint64_t result = swift_beginAccess();
  if (*v39)
  {
    v88[0] = *v39;
    uint64_t v41 = (void *)(*(void *)(v82 + v78)
                   + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps);
    swift_beginAccess();
    *(void *)&long long v89 = *v41;
    type metadata accessor for CRDictionaryElement();
    swift_retain();
    uint64_t v42 = (void *)v83;
    swift_getTupleTypeMetadata2();
    uint64_t v43 = sub_1C4497528();
    uint64_t v80 = v38;
    uint64_t v44 = v43;
    uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39ECE8);
    uint64_t WitnessTable = swift_getWitnessTable();
    unint64_t v46 = sub_1C42161E0();
    uint64_t v47 = sub_1C4498538();
    uint64_t v79 = &v72;
    long long v89 = v90;
    uint64_t v48 = MEMORY[0x1F4188790](v47);
    *(&v72 - 8) = v42;
    *(&v72 - 7) = (void *)v33;
    uint64_t v49 = (void *)v85;
    uint64_t v50 = (void *)v86;
    *(&v72 - 6) = v84;
    *(&v72 - 5) = v50;
    *(&v72 - 4) = v30;
    *(&v72 - 3) = v49;
    MEMORY[0x1F4188790](v48);
    *(&v72 - 8) = v42;
    *(&v72 - 7) = v51;
    *(&v72 - 6) = v52;
    *(&v72 - 5) = v50;
    *(&v72 - 4) = v30;
    *(&v72 - 3) = v53;
    uint64_t v70 = sub_1C421623C;
    uint64_t v71 = v54;
    v88[0] = v44;
    v88[1] = v77;
    v88[2] = WitnessTable;
    v88[3] = v46;
    uint64_t v55 = sub_1C4497D98();
    uint64_t v56 = (char *)type metadata accessor for CROrderedSetElement();
    uint64_t v57 = v35;
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
    uint64_t v59 = swift_getWitnessTable();
    uint64_t v60 = sub_1C3F7182C((void (*)(char *, char *))sub_1C4216270, (uint64_t)(&v72 - 10), v55, v56, v58, v59, MEMORY[0x1E4FBC0F0], (uint64_t)&v91);
    uint64_t v61 = v80;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v62 = v82;
    uint64_t v63 = *(void *)(v82 + v78)
        + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
    swift_beginAccess();
    uint64_t v64 = v76;
    sub_1C3F970C4(v63, v76, &qword_1EBBC06E8);
    uint64_t v65 = v75;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48))(v64, 1, v75) == 1)
    {
      uint64_t v66 = v73;
      sub_1C4496888();
      uint64_t v67 = *(int *)(v65 + 20);
      if (qword_1EBBBC000 != -1) {
        swift_once();
      }
      *(void *)(v66 + v67) = qword_1EBBBBFF0;
      swift_retain();
      sub_1C3F962E0(v64, &qword_1EBBC06E8);
    }
    else
    {
      uint64_t v66 = v73;
      sub_1C421608C(v64, v73, type metadata accessor for Proto_Sequence);
    }
    sub_1C3F8C978(v66, v60, v57, (uint64_t)v56, (uint64_t)&off_1F1F9B310, (uint64_t *)&v90);
    sub_1C3F86CF8(v62, type metadata accessor for Proto_OrderedSet);
    uint64_t v68 = v90;
    swift_retain();
    swift_release();
    uint64_t v69 = v72;
    *uint64_t v72 = v68;
    v69[1] = v61;
    swift_release();
    return swift_release();
  }
  __break(1u);
  return result;
}

uint64_t sub_1C420B040@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v77 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0748);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v69 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v68 = (uint64_t)&v61 - v9;
  uint64_t v67 = type metadata accessor for Proto_Set(0);
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v74 = (uint64_t)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC06E8);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v73 = (uint64_t)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v61 - v14;
  uint64_t v16 = type metadata accessor for Proto_Sequence(0);
  uint64_t v70 = *(void *)(v16 - 8);
  uint64_t v71 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *v3;
  uint64_t v72 = v3[1];
  sub_1C4496888();
  uint64_t v20 = *(int *)(type metadata accessor for Proto_OrderedSet(0) + 20);
  if (qword_1EBBBC060 != -1)
  {
    uint64_t v60 = v20;
    swift_once();
    uint64_t v20 = v60;
  }
  uint64_t v76 = v20;
  *(void *)(a3 + v20) = qword_1EBBBC058;
  v78[0] = v19;
  uint64_t v21 = *(void *)(a2 + 16);
  uint64_t v22 = *(void *)(a2 + 40);
  type metadata accessor for CROrderedSetElement();
  uint64_t v23 = type metadata accessor for CRSequence();
  swift_retain();
  swift_retain();
  uint64_t v24 = v75;
  sub_1C3F5539C(v77, (uint64_t)v18);
  swift_release();
  if (v24) {
    return sub_1C3F86CF8(a3, type metadata accessor for Proto_OrderedSet);
  }
  uint64_t v62 = a2;
  uint64_t v75 = v22;
  uint64_t v63 = v23;
  uint64_t v64 = v19;
  uint64_t v65 = 0;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v26 = v76;
    type metadata accessor for Proto_OrderedSet._StorageClass(0);
    swift_allocObject();
    uint64_t v27 = swift_retain();
    *(void *)(a3 + v26) = sub_1C3F7BD98(v27);
    swift_release();
  }
  uint64_t v61 = a3;
  uint64_t v28 = *(void *)(a3 + v76);
  sub_1C421608C((uint64_t)v18, (uint64_t)v15, type metadata accessor for Proto_Sequence);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v15, 0, 1, v71);
  uint64_t v29 = v73;
  sub_1C3F961BC((uint64_t)v15, v73, &qword_1EBBC06E8);
  uint64_t v30 = v28 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v29, v30, &qword_1EBBC06E8);
  swift_endAccess();
  swift_release();
  v79[8] = v72;
  swift_retain();
  uint64_t v72 = sub_1C3F51ACC();
  v79[0] = v64;
  uint64_t v31 = v63;
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C877FF80](v78, v31, WitnessTable);
  v79[0] = v78[0];
  uint64_t v33 = (void *)swift_allocObject();
  uint64_t v34 = v62;
  uint64_t v35 = *(void *)(v62 + 24);
  uint64_t v36 = *(void *)(v62 + 32);
  uint64_t v37 = v21;
  v33[2] = v21;
  v33[3] = v35;
  uint64_t v38 = v75;
  v33[4] = v36;
  v33[5] = v38;
  uint64_t v39 = *(void *)(v34 + 56);
  uint64_t v73 = *(void *)(v34 + 48);
  v33[6] = v73;
  v33[7] = v39;
  sub_1C4497D58();
  swift_getWitnessTable();
  sub_1C4497FF8();
  swift_release();
  swift_release();
  v79[0] = v79[3];
  v79[1] = v79[4];
  v79[2] = v79[5];
  v78[0] = v21;
  v78[1] = v35;
  uint64_t v70 = v35;
  uint64_t v71 = v36;
  uint64_t v40 = v39;
  v78[2] = v36;
  v78[3] = v75;
  v78[4] = v73;
  v78[5] = v39;
  uint64_t v41 = (void *)type metadata accessor for CRDictionary();
  uint64_t v42 = sub_1C4497E68();
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v44 = v65;
  sub_1C4156DA8(v72, v77, v79, v41, v42, v43, v74);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (v44) {
    return sub_1C3F86CF8(v61, type metadata accessor for Proto_OrderedSet);
  }
  uint64_t v72 = v40;
  uint64_t v45 = v70;
  uint64_t v65 = 0;
  uint64_t v46 = v61;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v47 = v76;
    type metadata accessor for Proto_OrderedSet._StorageClass(0);
    swift_allocObject();
    uint64_t v48 = swift_retain();
    *(void *)(v46 + v47) = sub_1C3F7BD98(v48);
    swift_release();
  }
  uint64_t v49 = *(void *)(v46 + v76);
  uint64_t v50 = v68;
  sub_1C421608C(v74, v68, type metadata accessor for Proto_Set);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v66 + 56))(v50, 0, 1, v67);
  uint64_t v51 = v69;
  sub_1C3F961BC(v50, v69, (uint64_t *)&unk_1EBBC0748);
  uint64_t v52 = v49 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v51, v52, (uint64_t *)&unk_1EBBC0748);
  swift_endAccess();
  uint64_t v53 = swift_release();
  v78[0] = v64;
  MEMORY[0x1F4188790](v53);
  *(&v61 - 8) = v37;
  *(&v61 - 7) = v45;
  uint64_t v54 = v75;
  *(&v61 - 6) = v71;
  *(&v61 - 5) = v54;
  uint64_t v55 = v72;
  *(&v61 - 4) = v73;
  *(&v61 - 3) = v55;
  *(&v61 - 2) = v77;
  type metadata accessor for Proto_Timestamp(0);
  swift_retain();
  uint64_t v56 = sub_1C3F65E34((void (*)(char *))sub_1C42160F4, (uint64_t)(&v61 - 10));
  swift_release();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    uint64_t v57 = v76;
    type metadata accessor for Proto_OrderedSet._StorageClass(0);
    swift_allocObject();
    uint64_t v58 = swift_retain();
    *(void *)(v46 + v57) = sub_1C3F7BD98(v58);
    swift_release();
  }
  uint64_t v59 = (uint64_t *)(*(void *)(v46 + v76)
                  + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamps);
  swift_beginAccess();
  *uint64_t v59 = v56;
  return swift_bridgeObjectRelease();
}

void CROrderedDictionary.init()(void *a1@<X8>)
{
  CRDictionary.init()(&v3);
  uint64_t v2 = v3;
  type metadata accessor for CROrderedSetElement();
  CRSequence.init()(&v3);
  *a1 = v3;
  a1[1] = v2;
}

Swift::Void __swiftcall CROrderedDictionary.remove(at:)(Swift::Int at)
{
  uint64_t v3 = v1;
  Swift::Int v22 = at;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](at);
  uint64_t v19 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v7 + 40);
  uint64_t v8 = type metadata accessor for CROrderedSetElement();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v17 - v10;
  uint64_t v18 = *(void *)(v3 + 24);
  uint64_t v21 = sub_1C4497B38();
  uint64_t v12 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v14 = (char *)v17 - v13;
  uint64_t v23 = *v2;
  v17[1] = type metadata accessor for CRSequence();
  CRSequence.subscript.getter();
  uint64_t v15 = (uint64_t)v19;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v19, v11, v4);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v16 = *(void *)(v3 + 32);
  uint64_t v23 = v4;
  uint64_t v24 = v18;
  uint64_t v25 = v16;
  uint64_t v26 = v20;
  long long v27 = *(_OWORD *)(v3 + 48);
  type metadata accessor for CRDictionary();
  CRDictionary.removeValue(forKey:)(v15, (uint64_t)v14);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v15, v4);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v21);
  CRSequence.remove(at:)(v22);
}

uint64_t CROrderedDictionary.merge(_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v5 = sub_1C4496688();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v213 = v5;
  uint64_t v214 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v210 = (char *)&v155 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  v212 = (char *)&v155 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EAC8);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v161 = (char *)&v155 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EAD0);
  uint64_t v12 = MEMORY[0x1F4188790](v158);
  uint64_t v160 = (char *)&v155 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v155 - v14;
  uint64_t v171 = type metadata accessor for Replica();
  uint64_t v16 = MEMORY[0x1F4188790](v171);
  uint64_t v165 = (uint64_t)&v155 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v164 = (uint64_t)&v155 - v18;
  uint64_t v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC128);
  MEMORY[0x1F4188790](v194);
  uint64_t v208 = (uint64_t *)((char *)&v155 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v205 = *(void *)(a2 + 40);
  uint64_t v21 = a2;
  uint64_t v22 = type metadata accessor for CROrderedSetElement();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v200 = sub_1C4497B38();
  uint64_t v157 = *(void *)(v200 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v200);
  v199 = (char *)&v155 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  v198 = (char *)&v155 - v25;
  uint64_t v159 = sub_1C44967E8();
  uint64_t v163 = *(void *)(v159 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v159);
  uint64_t v190 = (char *)&v155 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v26);
  v170 = (char *)&v155 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC120);
  uint64_t v30 = MEMORY[0x1F4188790](v29 - 8);
  uint64_t v189 = (uint64_t)&v155 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v204 = (uint64_t)&v155 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v203 = (uint64_t)&v155 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  v172 = (char *)&v155 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  uint64_t v169 = (uint64_t)&v155 - v39;
  MEMORY[0x1F4188790](v38);
  v177 = (char *)&v155 - v40;
  uint64_t v41 = type metadata accessor for Timestamp(0);
  uint64_t v162 = *(void *)(v41 - 8);
  uint64_t v42 = MEMORY[0x1F4188790](v41);
  uint64_t v174 = (uint64_t)&v155 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v180 = (uint64_t)&v155 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  uint64_t v179 = (uint64_t)&v155 - v47;
  MEMORY[0x1F4188790](v46);
  uint64_t v175 = (uint64_t)&v155 - v48;
  uint64_t v49 = *(void *)(v21 + 24);
  uint64_t v196 = (void (**)(char *, char *, uint64_t))sub_1C4497B38();
  uint64_t v185 = (void (**)(uint64_t, void (**)(char *, char *, uint64_t)))*(v196 - 1);
  uint64_t v50 = MEMORY[0x1F4188790](v196);
  uint64_t v195 = (uint64_t)&v155 - v51;
  uint64_t v202 = v22;
  uint64_t v191 = *(void *)(v22 - 8);
  uint64_t v52 = MEMORY[0x1F4188790](v50);
  uint64_t v207 = (char *)&v155 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x1F4188790](v52);
  v178 = (char *)&v155 - v55;
  uint64_t v156 = v56;
  MEMORY[0x1F4188790](v54);
  uint64_t v58 = (char *)&v155 - v57;
  uint64_t v59 = a1[1];
  v217[0] = *a1;
  uint64_t v60 = type metadata accessor for CRSequence();
  CRSequence.merge(_:)(v217);
  uint64_t v219 = v59;
  uint64_t v61 = *(void *)(v21 + 32);
  v217[0] = v20;
  v217[1] = v49;
  uint64_t v197 = v49;
  v217[2] = v61;
  v217[3] = v205;
  long long v218 = *(_OWORD *)(v21 + 48);
  uint64_t v192 = (void (**)(uint64_t, void, uint64_t, uint64_t))type metadata accessor for CRDictionary();
  uint64_t v193 = v2 + 1;
  CRDictionary.merge(_:)(&v219, (uint64_t)v192);
  uint64_t v219 = sub_1C4496EA8();
  uint64_t v211 = v2;
  v217[0] = *v2;
  uint64_t v62 = v217[0];
  CRSequence.count.getter();
  uint64_t v63 = v202;
  uint64_t v168 = sub_1C4497008();
  sub_1C4496F18();
  v217[0] = v62;
  uint64_t v64 = v20;
  uint64_t v209 = v60;
  uint64_t v65 = sub_1C3F87640();
  uint64_t v66 = (uint64_t)v178;
  uint64_t v67 = v58;
  uint64_t v68 = v65;
  if (MEMORY[0x1C8780160](v65, v63))
  {
    uint64_t v69 = 0;
    uint64_t v188 = (void (**)(char *, uint64_t *, uint64_t))(v191 + 16);
    v187 = (void (**)(uint64_t, char *, uint64_t))(v191 + 32);
    uint64_t v186 = v197 - 8;
    ++v185;
    uint64_t v182 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v162 + 48);
    uint64_t v167 = (void (**)(char *, char *, uint64_t))(v206 + 16);
    uint64_t v166 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v162 + 56);
    uint64_t v183 = (void (**)(uint64_t, uint64_t))(v191 + 8);
    v176 = v67;
    uint64_t v184 = v68;
    do
    {
      char v71 = sub_1C44974A8();
      sub_1C4497438();
      if (v71)
      {
        (*(void (**)(char *, unint64_t, uint64_t))(v191 + 16))(v67, v68+ ((*(unsigned __int8 *)(v191 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v191 + 80))+ *(void *)(v191 + 72) * v69, v63);
        uint64_t v72 = v69 + 1;
        if (__OFADD__(v69, 1)) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = sub_1C4497DA8();
        if (v156 != 8)
        {
          __break(1u);
          return result;
        }
        v217[0] = result;
        (*v188)(v67, v217, v63);
        swift_unknownObjectRelease();
        uint64_t v72 = v69 + 1;
        if (__OFADD__(v69, 1))
        {
LABEL_23:
          __break(1u);
          break;
        }
      }
      uint64_t v206 = v72;
      uint64_t v73 = v41;
      uint64_t v74 = v64;
      (*v187)(v66, v67, v63);
      v217[0] = *v193;
      uint64_t v75 = v195;
      CRDictionary.subscript.getter(v66, v195);
      int v76 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v197 - 8) + 48))(v75, 1);
      (*v185)(v75, v196);
      if (v76 == 1)
      {
        (*v183)(v66, v63);
        uint64_t v41 = v73;
      }
      else
      {
        uint64_t v77 = (uint64_t)v177;
        MEMORY[0x1C877FC90](v66, v219, v64, v73, v205);
        uint64_t v78 = *v182;
        if ((*v182)(v77, 1, v73) == 1)
        {
          uint64_t v181 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v78;
          sub_1C3F962E0(v77, &qword_1EBBBC120);
LABEL_14:
          uint64_t v91 = (uint64_t)v172;
          uint64_t v92 = v178;
          uint64_t v41 = v73;
          MEMORY[0x1C877FC90](v178, v219, v64, v73, v205);
          int v93 = v181(v91, 1, v73);
          sub_1C3F962E0(v91, &qword_1EBBBC120);
          if (v93 == 1)
          {
            (*v167)(v170, v92, v64);
            uint64_t v94 = v169;
            sub_1C3F86BC8((uint64_t)&v92[*(int *)(v63 + 36)], v169, type metadata accessor for Timestamp);
            (*v166)(v94, 0, 1, v73);
            sub_1C4497048();
          }
          (*v183)((uint64_t)v92, v63);
          uint64_t v66 = (uint64_t)v92;
          uint64_t v67 = v176;
          goto LABEL_4;
        }
        uint64_t v79 = v77;
        uint64_t v80 = v175;
        sub_1C421608C(v79, v175, type metadata accessor for Timestamp);
        uint64_t v81 = v80;
        uint64_t v82 = v66 + *(int *)(v63 + 36);
        uint64_t v83 = *(int *)(v73 + 20);
        uint64_t v84 = *(void *)(v81 + v83);
        uint64_t v85 = *(void *)(v82 + v83);
        BOOL v86 = v84 < v85;
        if (v84 == v85
          && (uint64_t v87 = *(int *)(v171 + 20),
              uint64_t v88 = *(void *)(v81 + v87),
              uint64_t v89 = *(void *)(v82 + v87),
              BOOL v86 = v88 < v89,
              v88 == v89))
        {
          char v90 = sub_1C410BE0C();
          uint64_t v81 = v175;
          if ((v90 & 1) == 0) {
            goto LABEL_13;
          }
        }
        else if (!v86)
        {
LABEL_13:
          uint64_t v181 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v78;
          sub_1C3F86CF8(v81, type metadata accessor for Timestamp);
          goto LABEL_14;
        }
        uint64_t v95 = v178;
        (*v167)(v170, v178, v74);
        uint64_t v96 = v82;
        uint64_t v97 = v169;
        sub_1C3F86BC8(v96, v169, type metadata accessor for Timestamp);
        (*v166)(v97, 0, 1, v73);
        uint64_t v67 = v176;
        sub_1C4497048();
        uint64_t v66 = (uint64_t)v95;
        uint64_t v64 = v74;
        uint64_t v41 = v73;
        sub_1C3F86CF8(v175, type metadata accessor for Timestamp);
        (*v183)(v66, v63);
      }
LABEL_4:
      uint64_t v68 = v184;
      uint64_t v70 = v206;
      ++v69;
    }
    while (v70 != MEMORY[0x1C8780160](v184, v63));
  }
  swift_bridgeObjectRelease();
  sub_1C44967D8();
  v217[0] = *v211;
  v217[0] = sub_1C3F87640();
  uint64_t v99 = sub_1C4497528();
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C877FF50](&v216, v99, WitnessTable);
  swift_bridgeObjectRelease();
  uint64_t v215 = v216;
  sub_1C4497F98();
  sub_1C4497F68();
  uint64_t v197 = sub_1C4497F88();
  uint64_t v196 = (void (**)(char *, char *, uint64_t))(v157 + 32);
  uint64_t v101 = TupleTypeMetadata2;
  uint64_t v195 = TupleTypeMetadata2 - 8;
  uint64_t v193 = (uint64_t *)(v191 + 32);
  uint64_t v192 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v162 + 56);
  uint64_t v102 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v162 + 48);
  v191 += 8;
  uint64_t v173 = v41;
  while (1)
  {
    uint64_t v103 = v199;
    sub_1C4497F78();
    uint64_t v104 = (uint64_t *)v198;
    (*v196)(v198, v103, v200);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v101 - 8) + 48))(v104, 1, v101) == 1) {
      break;
    }
    uint64_t v105 = v63;
    uint64_t v206 = *v104;
    uint64_t v106 = (char *)v104 + *(int *)(v101 + 48);
    uint64_t v107 = v207;
    ((void (*)(char *, char *, uint64_t))*v193)(v207, v106, v63);
    uint64_t v108 = v203;
    uint64_t v109 = v64;
    MEMORY[0x1C877FC90](v107, v219, v64, v41, v205);
    uint64_t v110 = v204;
    sub_1C3F86BC8((uint64_t)&v107[*(int *)(v105 + 36)], v204, type metadata accessor for Timestamp);
    (*v192)(v110, 0, 1, v41);
    uint64_t v111 = v41;
    uint64_t v112 = v108;
    uint64_t v113 = (void (*)(void, void, void))v208;
    uint64_t v114 = (uint64_t)v208 + *(int *)(v194 + 48);
    sub_1C3F970C4(v112, (uint64_t)v208, &qword_1EBBBC120);
    sub_1C3F970C4(v110, v114, &qword_1EBBBC120);
    uint64_t v115 = *v102;
    if ((*v102)((uint64_t)v113, 1, v111) == 1)
    {
      sub_1C3F962E0(v110, &qword_1EBBBC120);
      sub_1C3F962E0(v112, &qword_1EBBBC120);
      uint64_t v116 = &qword_1EBBBC128;
      uint64_t v41 = v111;
      if (v115(v114, 1, v111) == 1)
      {
        sub_1C3F962E0((uint64_t)v208, &qword_1EBBBC120);
        uint64_t v64 = v109;
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v117 = v189;
      sub_1C3F970C4((uint64_t)v208, v189, &qword_1EBBBC120);
      uint64_t v116 = &qword_1EBBBC128;
      uint64_t v41 = v111;
      if (v115(v114, 1, v111) != 1)
      {
        uint64_t v118 = v179;
        sub_1C421608C(v114, v179, type metadata accessor for Timestamp);
        uint64_t v119 = *(int *)(v111 + 20);
        uint64_t v120 = *(void *)(v117 + v119);
        uint64_t v121 = *(void *)(v118 + v119);
        uint64_t v122 = v117;
        uint64_t v123 = v180;
        sub_1C3F86BC8(v122, v180, type metadata accessor for Timestamp);
        uint64_t v124 = v174;
        sub_1C3F86BC8(v118, v174, type metadata accessor for Timestamp);
        if (v120 == v121)
        {
          uint64_t v125 = *(int *)(v171 + 20);
          uint64_t v126 = *(void *)(v123 + v125);
          uint64_t v127 = *(void *)(v124 + v125);
          uint64_t v128 = v123;
          uint64_t v129 = v164;
          sub_1C3F86BC8(v128, v164, (uint64_t (*)(void))type metadata accessor for Replica);
          uint64_t v130 = v165;
          sub_1C3F86BC8(v124, v165, (uint64_t (*)(void))type metadata accessor for Replica);
          if (v126 == v127)
          {
            char v131 = sub_1C4496618();
            sub_1C3F86CF8(v130, (uint64_t (*)(void))type metadata accessor for Replica);
            sub_1C3F86CF8(v129, (uint64_t (*)(void))type metadata accessor for Replica);
            sub_1C3F86CF8(v124, type metadata accessor for Timestamp);
            sub_1C3F86CF8(v180, type metadata accessor for Timestamp);
            sub_1C3F86CF8(v179, type metadata accessor for Timestamp);
            sub_1C3F962E0(v204, &qword_1EBBBC120);
            sub_1C3F962E0(v203, &qword_1EBBBC120);
            sub_1C3F86CF8(v189, type metadata accessor for Timestamp);
            sub_1C3F962E0((uint64_t)v208, &qword_1EBBBC120);
            uint64_t v64 = v109;
            uint64_t v41 = v173;
            if (v131) {
              goto LABEL_26;
            }
            goto LABEL_40;
          }
          sub_1C3F86CF8(v130, (uint64_t (*)(void))type metadata accessor for Replica);
          sub_1C3F86CF8(v129, (uint64_t (*)(void))type metadata accessor for Replica);
          uint64_t v123 = v180;
          uint64_t v118 = v179;
        }
        sub_1C3F86CF8(v124, type metadata accessor for Timestamp);
        sub_1C3F86CF8(v123, type metadata accessor for Timestamp);
        sub_1C3F86CF8(v118, type metadata accessor for Timestamp);
        uint64_t v116 = &qword_1EBBBC120;
        uint64_t v117 = v189;
        uint64_t v41 = v173;
      }
      sub_1C3F962E0(v204, &qword_1EBBBC120);
      sub_1C3F962E0(v203, &qword_1EBBBC120);
      sub_1C3F86CF8(v117, type metadata accessor for Timestamp);
    }
    sub_1C3F962E0((uint64_t)v208, v116);
    uint64_t v64 = v109;
LABEL_40:
    sub_1C4496748();
LABEL_26:
    uint64_t v63 = v202;
    (*(void (**)(char *, uint64_t))v191)(v207, v202);
    uint64_t v101 = TupleTypeMetadata2;
  }
  swift_bridgeObjectRelease();
  uint64_t v132 = v163;
  uint64_t v133 = *(void (**)(char *, char *, uint64_t))(v163 + 16);
  uint64_t v134 = v161;
  uint64_t v135 = v159;
  v133(v161, v190, v159);
  uint64_t v136 = (uint64_t)v160;
  v133(v160, v134, v135);
  sub_1C421554C(qword_1EBBBBCE8, MEMORY[0x1E4F27D00]);
  uint64_t v137 = v212;
  sub_1C4497818();
  v138 = *(char **)(v132 + 8);
  uint64_t v139 = v134;
  uint64_t v140 = v135;
  uint64_t v163 = v132 + 8;
  uint64_t v207 = v138;
  ((void (*)(char *, uint64_t))v138)(v139, v135);
  uint64_t v141 = v158;
  uint64_t v142 = v214;
  (*(void (**)(uint64_t, char *, uint64_t))(v214 + 32))(v136 + *(int *)(v158 + 36), v137, v213);
  sub_1C3F961BC(v136, (uint64_t)v15, &qword_1EA39EAD0);
  uint64_t v143 = &v15[*(int *)(v141 + 36)];
  uint64_t v208 = *(void **)(v142 + 16);
  uint64_t v214 = v142 + 16;
  uint64_t v144 = (void (**)(char *, uint64_t))(v142 + 8);
  uint64_t v146 = v212;
  uint64_t v145 = v213;
  uint64_t v147 = v210;
  while (1)
  {
    ((void (*)(char *, char *, uint64_t))v208)(v146, v143, v145);
    sub_1C44977D8();
    sub_1C421554C(&qword_1EBBBBCD0, MEMORY[0x1E4F27CC8]);
    char v148 = sub_1C4497178();
    uint64_t v149 = v140;
    uint64_t v150 = (uint64_t)v15;
    v151 = *v144;
    (*v144)(v147, v145);
    v151(v146, v145);
    if (v148) {
      break;
    }
    sub_1C421554C(qword_1EA39EAD8, MEMORY[0x1E4F27D00]);
    sub_1C4497098();
    uint64_t v152 = (void (*)(uint64_t *, void))sub_1C44978C8();
    Swift::Int v154 = *v153;
    v152(v217, 0);
    CRSequence.remove(at:)(v154);
    uint64_t v15 = (char *)v150;
    uint64_t v140 = v149;
  }
  sub_1C3F962E0(v150, &qword_1EA39EAD0);
  ((void (*)(char *, uint64_t))v207)(v190, v149);
  return swift_bridgeObjectRelease();
}

uint64_t CROrderedDictionary.visitReferences(_:)(uint64_t a1)
{
  uint64_t v2 = (void *)type metadata accessor for CRDictionary();
  return CRDictionary.visitReferences(_:)(a1, v2);
}

uint64_t CROrderedDictionary.makeIterator()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 8);
  type metadata accessor for CROrderedSetElement();
  type metadata accessor for CRSequence();
  *a1 = sub_1C3F87640();
  a1[1] = 0;
  a1[2] = v3;
  return swift_retain();
}

uint64_t CROrderedDictionary.Iterator.next()@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v4 = (char *)a1[3];
  uint64_t v5 = sub_1C4497B38();
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v49 = (char *)&v46 - v7;
  uint64_t v8 = a1[2];
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v48 = (char *)&v46 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v52 = (char *)&v46 - v14;
  uint64_t v50 = a1[5];
  uint64_t v15 = type metadata accessor for CROrderedSetElement();
  uint64_t v16 = sub_1C4497B38();
  uint64_t v55 = *(void *)(v16 - 8);
  uint64_t v56 = v16;
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v46 - v20;
  uint64_t v23 = *v2;
  uint64_t v22 = v2[1];
  uint64_t v53 = v2;
  uint64_t v24 = MEMORY[0x1C8780160](v23, v15);
  uint64_t v51 = a1;
  if (v22 == v24)
  {
    uint64_t v25 = *(void *)(v15 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v21, 1, 1, v15);
    uint64_t v26 = v56;
  }
  else
  {
    uint64_t v46 = v4;
    char v27 = sub_1C44974A8();
    sub_1C4497438();
    if (v27)
    {
      uint64_t v28 = *(void *)(v15 - 8);
      uint64_t result = (*(uint64_t (**)(char *, unint64_t, uint64_t))(v28 + 16))(v21, v23+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(void *)(v28 + 72) * v22, v15);
    }
    else
    {
      uint64_t result = sub_1C4497DA8();
      uint64_t v28 = *(void *)(v15 - 8);
      if (*(void *)(v28 + 64) != 8)
      {
LABEL_16:
        __break(1u);
        return result;
      }
      v57[0] = result;
      (*(void (**)(char *, void *, uint64_t))(v28 + 16))(v21, v57, v15);
      uint64_t result = swift_unknownObjectRelease();
    }
    uint64_t v26 = v56;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
LABEL_15:
      __break(1u);
      goto LABEL_16;
    }
    v53[1] = v22 + 1;
    uint64_t v25 = v28;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v21, 0, 1, v15);
    uint64_t v4 = v46;
  }
  uint64_t v30 = v55;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v19, v21, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v19, 1, v15) == 1)
  {
    uint64_t v31 = *(void (**)(char *, uint64_t))(v30 + 8);
    v31(v19, v26);
    v31(v21, v26);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v54, 1, 1, TupleTypeMetadata2);
  }
  uint64_t v46 = v21;
  uint64_t v34 = v47;
  uint64_t v33 = v48;
  uint64_t v35 = v4;
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v36(v48, v19, v8);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v19, v15);
  uint64_t v37 = v52;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v52, v33, v8);
  uint64_t v38 = v54;
  v36(v54, v37, v8);
  v36(v11, v37, v8);
  uint64_t v39 = v35;
  uint64_t v59 = v53[2];
  uint64_t v40 = v51[4];
  v57[0] = v8;
  v57[1] = v35;
  uint64_t v41 = (uint64_t)v49;
  void v57[2] = v40;
  v57[3] = v50;
  long long v58 = *((_OWORD *)v51 + 3);
  type metadata accessor for CRDictionary();
  uint64_t v53 = v11;
  CRDictionary.subscript.getter((uint64_t)v11, v41);
  uint64_t v42 = *((void *)v39 - 1);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, char *))(v42 + 48))(v41, 1, v39);
  if (result == 1) {
    goto LABEL_15;
  }
  uint64_t v43 = swift_getTupleTypeMetadata2();
  uint64_t v44 = &v38[*(int *)(v43 + 48)];
  uint64_t v45 = *(void (**)(char *, uint64_t))(v34 + 8);
  v45((char *)v53, v8);
  v45(v37, v8);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v46, v56);
  (*(void (**)(char *, uint64_t, char *))(v42 + 32))(v44, v41, v39);
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v38, 0, 1, v43);
}

Swift::Void __swiftcall CROrderedDictionary.move(from:to:)(Swift::Int from, Swift::Int to)
{
  uint64_t v4 = v2;
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v37 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](from);
  uint64_t v38 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Timestamp(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v31 - v13;
  uint64_t v36 = *(void *)(v4 + 40);
  uint64_t v15 = type metadata accessor for CROrderedSetElement();
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v21 = (char *)v31 - v20;
  if (from == to) {
    return;
  }
  if (__OFSUB__(to, 1))
  {
    __break(1u);
    goto LABEL_11;
  }
  if (to - 1 == from) {
    return;
  }
  v31[0] = to - 1;
  uint64_t v32 = v12;
  uint64_t v34 = v19;
  uint64_t v39 = *v3;
  uint64_t v22 = type metadata accessor for CRSequence();
  uint64_t v35 = v9;
  CRSequence.subscript.getter();
  CRSequence.remove(at:)(from);
  v31[1] = v3;
  uint64_t v39 = *v3;
  uint64_t v33 = v22;
  sub_1C4373544((uint64_t)v14);
  *(void *)&v14[*(int *)(type metadata accessor for Replica() + 20)] = 0;
  uint64_t v23 = *(int *)(v35 + 20);
  uint64_t v24 = *(void *)&v21[*(int *)(v15 + 36) + v23];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_11:
    __break(1u);
    return;
  }
  if (from >= to) {
    Swift::Int v27 = to;
  }
  else {
    Swift::Int v27 = v31[0];
  }
  *(void *)&v14[v23] = v26;
  uint64_t v28 = (uint64_t)v38;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v38, v21, v7);
  uint64_t v29 = (uint64_t)v32;
  sub_1C3F86BC8((uint64_t)v14, (uint64_t)v32, type metadata accessor for Timestamp);
  sub_1C3F8A474(v28, v29, v7, (uint64_t)v18);
  CRSequence.insert(_:at:)((uint64_t)v18, v27);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v34 + 8);
  v30(v18, v15);
  sub_1C3F86CF8((uint64_t)v14, type metadata accessor for Timestamp);
  v30(v21, v15);
}

Swift::Bool __swiftcall CROrderedDictionary.needToFinalizeTimestamps()()
{
  if (CRDictionary.needToFinalizeTimestamps()())
  {
    return 1;
  }
  else
  {
    type metadata accessor for CROrderedSetElement();
    type metadata accessor for CRSequence();
    return CRSequence.needToFinalizeTimestamps()();
  }
}

uint64_t CROrderedDictionary.finalizeTimestamps(_:)(uint64_t a1)
{
  return CRDictionary.finalizeTimestamps(_:)(a1);
}

id CROrderedDictionary.subscript.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v30 = *(void *)(a2 + 24);
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v29 = (uint64_t)&v24 - v8;
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v28 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v26 = *(void *)(a2 + 40);
  Swift::Int v27 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CROrderedSetElement();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = *v3;
  uint64_t v16 = v3[1];
  uint64_t v31 = *v3;
  type metadata accessor for CRSequence();
  id result = CRSequence.count.getter();
  if ((uint64_t)result <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v31 = v15;
    swift_retain();
    CRSequence.subscript.getter();
    uint64_t v18 = (uint64_t)v27;
    uint64_t v19 = v28;
    (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v27, v14, v9);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v36 = v16;
    uint64_t v20 = *(void *)(a2 + 32);
    uint64_t v21 = v30;
    uint64_t v31 = v9;
    uint64_t v32 = v30;
    uint64_t v33 = v20;
    uint64_t v34 = v26;
    long long v35 = *(_OWORD *)(a2 + 48);
    type metadata accessor for CRDictionary();
    uint64_t v22 = v29;
    CRDictionary.subscript.getter(v18, v29);
    swift_release();
    uint64_t v23 = *(void *)(v21 - 8);
    id result = (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v22, 1, v21);
    if (result != 1)
    {
      (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v9);
      return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v25, v22, v21);
    }
  }
  __break(1u);
  return result;
}

uint64_t CROrderedDictionary.remove(atOffsets:)(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC150);
  MEMORY[0x1F4188790](v4 - 8);
  long long v58 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC148);
  uint64_t v6 = MEMORY[0x1F4188790](v59);
  uint64_t v57 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v56 - v9;
  uint64_t v11 = *(void *)(a2[2] - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v73 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v13;
  uint64_t v72 = a2[5];
  uint64_t v14 = type metadata accessor for CROrderedSetElement();
  uint64_t v63 = *(void (***)(char *, uint64_t))(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v75 = a2;
  uint64_t v70 = a2[3];
  char v71 = (char *)&v56 - v15;
  uint64_t v69 = sub_1C4497B38();
  uint64_t v60 = *(void (***)(uint64_t, uint64_t))(v69 - 8);
  MEMORY[0x1F4188790](v69);
  uint64_t v68 = (uint64_t)&v56 - v16;
  uint64_t v17 = sub_1C44967E8();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v67 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C4496688();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v78 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v77 = (char *)&v56 - v24;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF188);
  uint64_t v26 = v25 - 8;
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a1;
  sub_1C44966C8();
  uint64_t v81 = &v28[*(int *)(v26 + 44)];
  uint64_t v82 = v28;
  int v76 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v79 = v21 + 16;
  uint64_t v29 = (void (**)(char *, uint64_t))(v21 + 8);
  uint64_t v66 = (void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v65 = (void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v64 = (void (**)(char *, char *, uint64_t))(v11 + 16);
  ++v63;
  uint64_t v62 = v80 + 1;
  uint64_t v61 = (void (**)(uint64_t, uint64_t))(v11 + 8);
  for (++v60; ; (*v60)(v42, v69))
  {
    uint64_t v30 = v14;
    uint64_t v31 = v77;
    v76(v77, v81, v20);
    sub_1C421554C(qword_1EBBBBCE8, MEMORY[0x1E4F27D00]);
    uint64_t v32 = v78;
    sub_1C4497818();
    sub_1C421554C(&qword_1EBBBBCD0, MEMORY[0x1E4F27CC8]);
    char v33 = sub_1C4497178();
    uint64_t v34 = *v29;
    (*v29)(v32, v20);
    v34(v31, v20);
    if (v33) {
      break;
    }
    uint64_t v35 = (uint64_t)v82;
    uint64_t v36 = (void (*)(void *, void))sub_1C44978C8();
    v36(v83, 0);
    uint64_t v37 = v67;
    (*v66)(v67, v35, v17);
    sub_1C4497828();
    (*v65)(v37, v17);
    v83[0] = *v80;
    type metadata accessor for CRSequence();
    uint64_t v38 = v71;
    uint64_t v14 = v30;
    CRSequence.subscript.getter();
    uint64_t v40 = (uint64_t)v73;
    uint64_t v39 = v74;
    (*v64)(v73, v38, v74);
    (*v63)(v38, v14);
    uint64_t v41 = v75[4];
    v83[0] = v39;
    v83[1] = v70;
    v83[2] = v41;
    v83[3] = v72;
    long long v84 = *((_OWORD *)v75 + 3);
    type metadata accessor for CRDictionary();
    uint64_t v42 = v68;
    CRDictionary.removeValue(forKey:)(v40, v68);
    (*v61)(v40, v39);
  }
  sub_1C3F962E0((uint64_t)v82, &qword_1EBBBF188);
  uint64_t v43 = v58;
  sub_1C44967C8();
  uint64_t v44 = sub_1C44967A8();
  uint64_t v45 = *(void *)(v44 - 8);
  uint64_t v46 = (uint64_t)v57;
  (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v57, v43, v44);
  sub_1C421554C((unint64_t *)&qword_1EBBBEE28, MEMORY[0x1E4F27CE0]);
  sub_1C4497818();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v44);
  uint64_t v47 = v59;
  *(void *)(v46 + *(int *)(v59 + 36)) = v83[0];
  sub_1C3F961BC(v46, (uint64_t)v10, &qword_1EBBBC148);
  uint64_t v48 = &v10[*(int *)(v47 + 36)];
  uint64_t v49 = *(void *)v48;
  sub_1C44977D8();
  if (v49 != v83[0])
  {
    sub_1C421554C(qword_1EA39D5B8, MEMORY[0x1E4F27CE0]);
    do
    {
      sub_1C4497098();
      uint64_t v50 = (void (*)(void *, void))sub_1C44978C8();
      uint64_t v52 = *v51;
      uint64_t v53 = v51[1];
      v50(v83, 0);
      type metadata accessor for CRSequence();
      CRSequence.removeSubrange(_:)(v52, v53);
      uint64_t v54 = *(void *)v48;
      sub_1C44977D8();
    }
    while (v54 != v83[0]);
  }
  return sub_1C3F962E0((uint64_t)v10, &qword_1EBBBC148);
}

uint64_t sub_1C420EC94(char *a1, char *a2, uint64_t a3, void (**a4)(char *, void), uint64_t a5, void (**a6)(uint64_t, uint64_t), void (**a7)(void, void), uint64_t a8, uint64_t a9)
{
  long long v84 = a4;
  uint64_t v81 = a3;
  uint64_t v15 = *(void (***)(void, void))(a5 + 24);
  uint64_t v97 = (uint64_t)*(v15 - 1);
  MEMORY[0x1F4188790](a1);
  uint64_t v83 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(v17 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v19 = sub_1C4497B38();
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v103 = (char *)&v72 - v20;
  uint64_t v79 = a8;
  uint64_t v21 = *(void **)(a8 + 8);
  uint64_t v75 = a9;
  uint64_t v22 = *(void *)(a9 + 8);
  uint64_t v104 = (uint64_t)a6;
  uint64_t v105 = a7;
  uint64_t v106 = v21;
  uint64_t v107 = v22;
  uint64_t v76 = sub_1C4497D98();
  MEMORY[0x1F4188790](v76);
  uint64_t v74 = (char *)&v72 - v23;
  uint64_t v85 = a6;
  uint64_t v104 = (uint64_t)a6;
  uint64_t v105 = a7;
  BOOL v86 = a7;
  uint64_t v78 = v21;
  uint64_t v106 = v21;
  uint64_t v107 = v22;
  uint64_t v77 = v22;
  uint64_t v100 = sub_1C4497D88();
  uint64_t v82 = *(void *)(v100 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v100);
  uint64_t v99 = (char *)&v72 - v25;
  uint64_t v73 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v27 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = a5;
  uint64_t v28 = *(void *)(a5 + 40);
  uint64_t v98 = v18;
  uint64_t v101 = v28;
  uint64_t v95 = (void *)type metadata accessor for CROrderedSetElement();
  uint64_t v29 = *(v95 - 1);
  MEMORY[0x1F4188790](v95);
  uint64_t v31 = (char *)&v72 - v30;
  uint64_t v102 = v15;
  uint64_t v32 = sub_1C4497B38();
  uint64_t v72 = *(void *)(v32 - 8);
  uint64_t result = MEMORY[0x1F4188790](v32);
  int v93 = (char *)&v72 - v34;
  uint64_t v87 = a1;
  if (a1 == a2) {
    goto LABEL_6;
  }
  uint64_t v35 = v87;
  if ((uint64_t)a2 < (uint64_t)v87)
  {
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)v87 >= (uint64_t)a2)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v91 = v96 + 1;
  uint64_t v90 = type metadata accessor for CRSequence();
  uint64_t v89 = (void (**)(char *, char *, uint64_t))(v73 + 16);
  uint64_t v88 = (void (**)(char *, void *))(v29 + 8);
  uint64_t v36 = (void (**)(char *, uint64_t))(v73 + 8);
  uint64_t v37 = (void (**)(uint64_t, uint64_t))(v72 + 8);
  uint64_t v38 = v35;
  uint64_t v39 = v98;
  uint64_t v40 = (uint64_t)v93;
  do
  {
    uint64_t v41 = v38 + 1;
    uint64_t v104 = *v96;
    CRSequence.subscript.getter();
    (*v89)(v27, v31, v39);
    (*v88)(v31, v95);
    uint64_t v42 = *(void **)(v94 + 32);
    uint64_t v104 = v39;
    uint64_t v105 = v102;
    uint64_t v106 = v42;
    uint64_t v107 = v101;
    long long v108 = *(_OWORD *)(v94 + 48);
    type metadata accessor for CRDictionary();
    CRDictionary.removeValue(forKey:)((uint64_t)v27, v40);
    (*v36)(v27, v39);
    (*v37)(v40, v32);
    uint64_t v38 = v41;
  }
  while (a2 != v41);
LABEL_6:
  uint64_t v92 = v27;
  uint64_t v43 = (uint64_t)v95;
  uint64_t v89 = (void (**)(char *, char *, uint64_t))type metadata accessor for CRSequence();
  uint64_t v44 = v96;
  uint64_t v45 = sub_1C43734D8();
  MEMORY[0x1F4188790](v45);
  uint64_t v46 = v102;
  *(&v72 - 12) = v98;
  *(&v72 - 11) = (uint64_t)v46;
  uint64_t v47 = v32;
  uint64_t v48 = (uint64_t)v85;
  uint64_t v49 = v86;
  *(&v72 - 10) = (uint64_t)v85;
  *(&v72 - 9) = (uint64_t)v49;
  uint64_t v50 = v94;
  uint64_t v91 = *(void **)(v94 + 32);
  uint64_t v51 = v101;
  *(&v72 - 8) = (uint64_t)v91;
  *(&v72 - 7) = v51;
  uint64_t v52 = *(void *)(v50 + 48);
  uint64_t v53 = *(void *)(v50 + 56);
  uint64_t v94 = v52;
  *(&v72 - 6) = v52;
  *(&v72 - 5) = v53;
  uint64_t v90 = v53;
  uint64_t v54 = v79;
  uint64_t v55 = v75;
  *(&v72 - 4) = v79;
  *(&v72 - 3) = v55;
  *(&v72 - 2) = (uint64_t)v44;
  uint64_t v104 = sub_1C41275E0((void (*)(char *, char *))sub_1C4216000, (uint64_t)(&v72 - 14), v48, v43, MEMORY[0x1E4FBC248], v54, MEMORY[0x1E4FBC278], v56);
  uint64_t v57 = sub_1C4497528();
  swift_getWitnessTable();
  CRSequence.replaceSubrange<A>(_:with:)((uint64_t)v87, (uint64_t)a2, (uint64_t)&v104, (uint64_t)v89, v57);
  swift_bridgeObjectRelease();
  sub_1C4498538();
  sub_1C4497D68();
  long long v58 = v103;
  sub_1C4497D78();
  uint64_t v59 = TupleTypeMetadata2;
  uint64_t v60 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48);
  int v61 = v60(v58, 1, TupleTypeMetadata2);
  uint64_t v62 = v98;
  uint64_t v63 = v83;
  uint64_t v64 = (uint64_t)v93;
  if (v61 != 1)
  {
    uint64_t v95 = *(void **)(v97 + 32);
    uint64_t v89 = (void (**)(char *, char *, uint64_t))(v73 + 32);
    uint64_t v88 = (void (**)(char *, void *))(v97 + 16);
    uint64_t v87 = (char *)(v97 + 56);
    uint64_t v96 = v44 + 1;
    BOOL v86 = (void (**)(uint64_t, uint64_t))(v73 + 8);
    uint64_t v85 = (void (**)(uint64_t, uint64_t))(v72 + 8);
    v97 += 32;
    long long v84 = (void (**)(char *, void))(v97 - 24);
    do
    {
      uint64_t v65 = &v58[*(int *)(v59 + 48)];
      uint64_t v66 = v102;
      ((void (*)(char *, char *, void (**)(void, void)))v95)(v63, v65, v102);
      uint64_t v67 = v47;
      uint64_t v68 = (uint64_t)v92;
      (*v89)(v92, v103, v62);
      ((void (*)(uint64_t, char *, void (**)(void, void)))*v88)(v64, v63, v66);
      (*(void (**)(uint64_t, void, uint64_t, void (**)(void, void)))v87)(v64, 0, 1, v66);
      uint64_t v104 = v62;
      uint64_t v105 = v66;
      uint64_t v106 = v91;
      uint64_t v107 = v101;
      *(void *)&long long v108 = v94;
      *((void *)&v108 + 1) = v90;
      uint64_t v69 = type metadata accessor for CRDictionary();
      sub_1C41589BC(v64, v68, v69);
      uint64_t v70 = v68;
      uint64_t v47 = v67;
      (*v86)(v70, v62);
      (*v85)(v64, v67);
      char v71 = v66;
      long long v58 = v103;
      (*v84)(v63, v71);
      sub_1C4497D78();
    }
    while (v60(v58, 1, v59) != 1);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v99, v100);
}

uint64_t CROrderedDictionary.observableDifference(from:with:)@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v6 = *v4;
  uint64_t v7 = v4[1];
  void v9[2] = *a1;
  v9[3] = v5;
  v9[0] = v6;
  v9[1] = v7;
  return sub_1C4211904(v9, a2, a3, a4);
}

uint64_t CROrderedDictionary.hasDelta(from:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)a1[1];
  uint64_t v4 = *(void *)(v1 + 8);
  uint64_t v8 = *a1;
  type metadata accessor for CROrderedSetElement();
  type metadata accessor for CRSequence();
  if (sub_1C4373E7C(&v8) && (void *)v4 == v3)
  {
    char v5 = 0;
  }
  else
  {
    uint64_t v7 = v3;
    uint64_t v8 = v4;
    type metadata accessor for CRDictionary();
    if (CRDictionary.hasDelta(from:)(&v7))
    {
      char v5 = 1;
    }
    else
    {
      uint64_t v8 = v2;
      char v5 = CRSequence.hasDelta(from:)(&v8);
    }
  }
  return v5 & 1;
}

void CROrderedDictionary.actionUndoingDifference(from:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v5 = *(char **)a1;
  uint64_t v7 = *v3;
  uint64_t v6 = v3[1];
  uint64_t v19 = *(char **)(a1 + 8);
  uint64_t v20 = v6;
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 56);
  long long v15 = *(_OWORD *)(a2 + 16);
  uint64_t v16 = v8;
  long long v17 = *(_OWORD *)(a2 + 40);
  uint64_t v18 = v9;
  uint64_t v10 = (char *)type metadata accessor for CRDictionary();
  CRDictionary.actionUndoingDifference(from:)(&v19, v10, (uint64_t *)&v15);
  long long v11 = v15;
  uint64_t v19 = v5;
  uint64_t v20 = v7;
  type metadata accessor for CROrderedSetElement();
  type metadata accessor for CRSequence();
  CRSequence.actionUndoingDifference(from:)(&v19, &v15);
  uint64_t v12 = v15;
  if ((unint64_t)v11 | (unint64_t)v15) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = 1;
  }
  if ((unint64_t)v11 | (unint64_t)v15) {
    uint64_t v14 = *((void *)&v11 + 1);
  }
  else {
    uint64_t v14 = 0;
  }
  if (!((unint64_t)v11 | (unint64_t)v15)) {
    uint64_t v12 = 0;
  }
  *a3 = v13;
  a3[1] = v14;
  a3[2] = v12;
}

void CROrderedDictionary.apply(_:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  if (*a1 != 1)
  {
    uint64_t v4 = a1[1];
    id v10 = (id)a1[2];
    id v5 = v10;
    sub_1C3FE3ADC(v2);
    uint64_t v6 = *(void **)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 40);
    type metadata accessor for CROrderedSetElement();
    type metadata accessor for CRSequence();
    id v8 = v10;
    if (sub_1C4374290(&v10))
    {
      v14[0] = v2;
      v14[1] = v4;
      sub_1C3FE3ADC(v2);
      id v10 = v6;
      long long v11 = *(_OWORD *)(a2 + 24);
      uint64_t v12 = v7;
      long long v13 = *(_OWORD *)(a2 + 48);
      uint64_t v9 = type metadata accessor for CRDictionary();
      CRDictionary.apply(_:)(v14, v9);
      sub_1C4215594(v2, v4, v5);
      sub_1C3F870F4(v2);
    }
    else
    {
      sub_1C4215594(v2, v4, v5);
    }
  }
}

BOOL CROrderedDictionary.hasEncodedData.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_beginAccess();
  return *(void *)(*(void *)(v1 + 32) + 16) || *(void *)(*(void *)(v1 + 24) + 16) != 0;
}

uint64_t CROrderedDictionary.copy(renamingReferences:)@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v6 = a2[2];
  uint64_t v65 = *(void (***)(uint64_t, uint64_t))(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v67 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 + 24);
  uint64_t v64 = *(void (***)(uint64_t, uint64_t))(v10 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v66 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v13 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  char v71 = (char *)&v58 - v14;
  uint64_t v15 = sub_1C4497B38();
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v59 = (char *)&v58 - v19;
  uint64_t v21 = *v3;
  uint64_t v20 = v3[1];
  uint64_t v22 = a2[4];
  uint64_t v23 = a2[6];
  uint64_t v24 = a2[7];
  uint64_t v74 = a2[5];
  uint64_t v75 = v22;
  uint64_t v61 = v23;
  uint64_t v73 = v24;
  CROrderedDictionary.init()(v83);
  uint64_t v68 = a1;
  uint64_t v25 = *a1;
  uint64_t v26 = v65;
  uint64_t v27 = *(void *)(v25 + 16);
  uint64_t v28 = v13;
  uint64_t v72 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v70 = (void (**)(uint64_t, char *, uint64_t))(v65 + 4);
  uint64_t v29 = v64;
  uint64_t v69 = (void (**)(uint64_t, char *, uint64_t))(v64 + 4);
  if (v27)
  {
    uint64_t v76 = v21;
    uint64_t v77 = v20;
    CROrderedDictionary.makeIterator()(v82);
    uint64_t v65 = v26 + 1;
    uint64_t v64 = v29 + 1;
    uint64_t v63 = (void (**)(char *, uint64_t))(v28 + 8);
    uint64_t v30 = (uint64_t)a2;
    uint64_t v31 = v75;
    uint64_t v32 = TupleTypeMetadata2;
    uint64_t v33 = v10;
    uint64_t v34 = v61;
    uint64_t v35 = v59;
    uint64_t v62 = v32;
    uint64_t v36 = v71;
    uint64_t v37 = v68;
    while (1)
    {
      uint64_t v76 = v6;
      uint64_t v77 = v33;
      uint64_t v78 = v31;
      uint64_t v79 = v74;
      uint64_t v80 = v34;
      uint64_t v81 = v73;
      uint64_t v38 = (void *)type metadata accessor for CROrderedDictionary.Iterator();
      CROrderedDictionary.Iterator.next()(v38, v35);
      if ((*v72)(v35, 1, v32) == 1) {
        break;
      }
      uint64_t v39 = v35;
      uint64_t v40 = *(int *)(v32 + 48);
      uint64_t v41 = &v35[v40];
      uint64_t v42 = &v36[v40];
      (*v70)((uint64_t)v36, v39, v6);
      (*v69)((uint64_t)v42, v41, v33);
      uint64_t v43 = (uint64_t)v66;
      (*(void (**)(void *, uint64_t))(*(void *)(v34 + 8) + 24))(v37, v33);
      uint64_t v35 = v39;
      uint64_t v44 = v6;
      uint64_t v45 = (uint64_t)v67;
      (*(void (**)(void *, uint64_t))(*(void *)(v75 + 8) + 24))(v37, v44);
      CROrderedDictionary.append(value:forKey:)(v43, v45, v30);
      uint64_t v46 = v45;
      uint64_t v6 = v44;
      (*v65)(v46, v44);
      uint64_t v47 = v43;
      uint64_t v32 = v62;
      (*v64)(v47, v33);
      (*v63)(v36, v32);
      uint64_t v31 = v75;
    }
  }
  else
  {
    uint64_t v76 = v21;
    uint64_t v77 = v20;
    uint64_t v48 = (uint64_t)a2;
    CROrderedDictionary.makeIterator()(v82);
    uint64_t v49 = (void (**)(uint64_t, uint64_t))(v28 + 8);
    for (uint64_t i = (uint64_t)v71; ; (*v49)(i, TupleTypeMetadata2))
    {
      uint64_t v76 = v6;
      uint64_t v77 = v10;
      uint64_t v78 = v75;
      uint64_t v79 = v74;
      uint64_t v80 = v61;
      uint64_t v81 = v73;
      uint64_t v51 = (void *)type metadata accessor for CROrderedDictionary.Iterator();
      CROrderedDictionary.Iterator.next()(v51, v18);
      if ((*v72)(v18, 1, TupleTypeMetadata2) == 1) {
        break;
      }
      uint64_t v52 = *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v53 = &v18[v52];
      uint64_t v54 = i + v52;
      (*v70)(i, v18, v6);
      (*v69)(v54, v53, v10);
      CROrderedDictionary.append(value:forKey:)(v54, i, v48);
    }
  }
  swift_release();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v56 = v60;
  uint64_t v57 = v83[1];
  void *v60 = v83[0];
  v56[1] = v57;
  return result;
}

uint64_t CROrderedDictionary.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v6 = a1;
  swift_bridgeObjectRetain();
  CROrderedDictionary.copy(renamingReferences:)(&v6, a2, a3);
  return swift_bridgeObjectRelease();
}

void CROrderedDictionary.init(_:)(void *a1@<X0>, void *a2@<X8>)
{
  CROrderedDictionary.init()(v5);

  uint64_t v4 = v5[1];
  *a2 = v5[0];
  a2[1] = v4;
}

uint64_t sub_1C42100B0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for Timestamp(0);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v14, a1, a3);
  v17[1] = *a2;
  type metadata accessor for CROrderedSetElement();
  type metadata accessor for CRSequence();
  sub_1C4373544((uint64_t)v12);
  *(void *)&v12[*(int *)(type metadata accessor for Replica() + 20)] = 0;
  *(void *)&v12[*(int *)(v9 + 28)] = 0;
  return sub_1C3F8A474((uint64_t)v14, (uint64_t)v12, a3, a4);
}

void CROrderedDictionary.removeValue(forKey:)(uint64_t a1, void *a2)
{
  uint64_t v5 = a2[3];
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v23 = v2;
  uint64_t v10 = a2[2];
  uint64_t v12 = a2[4];
  uint64_t v11 = a2[5];
  uint64_t v13 = a2[6];
  uint64_t v14 = a2[7];
  uint64_t v24 = v10;
  uint64_t v25 = v5;
  uint64_t v26 = v12;
  uint64_t v27 = v11;
  uint64_t v21 = v13;
  uint64_t v28 = v13;
  uint64_t v29 = v14;
  type metadata accessor for CRDictionary();
  uint64_t v22 = a1;
  CRDictionary.removeValue(forKey:)(a1, (uint64_t)v9);
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v9, 1, v5);
  uint64_t v16 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v15 != 1)
  {
    uint64_t v24 = *v23;
    MEMORY[0x1F4188790](v16);
    *(&v21 - 8) = v10;
    *(&v21 - 7) = v5;
    *(&v21 - 6) = v12;
    *(&v21 - 5) = v11;
    *(&v21 - 4) = v21;
    *(&v21 - 3) = v14;
    *(&v21 - 2) = v22;
    type metadata accessor for CROrderedSetElement();
    uint64_t v17 = type metadata accessor for CRSequence();
    swift_retain();
    swift_getWitnessTable();
    Swift::Int v18 = sub_1C4373740((uint64_t (*)(char *))sub_1C4215530, (uint64_t)(&v21 - 10), v17);
    char v20 = v19;
    swift_release();
    if ((v20 & 1) == 0) {
      CRSequence.remove(at:)(v18);
    }
  }
}

BOOL CROrderedDictionary.contains(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 24);
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v13 - v8;
  uint64_t v16 = *(void *)(v2 + 8);
  v13[1] = *(void *)(a2 + 16);
  long long v13[2] = v5;
  long long v10 = *(_OWORD *)(a2 + 48);
  long long v14 = *(_OWORD *)(a2 + 32);
  long long v15 = v10;
  type metadata accessor for CRDictionary();
  CRDictionary.subscript.getter(a1, (uint64_t)v9);
  BOOL v11 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v9, 1, v5) != 1;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v11;
}

uint64_t CROrderedDictionary.map<A>(_:)(void (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v4;
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v8 = sub_1C4497B38();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  BOOL v11 = (char *)v37 - v10;
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v52 = a3;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v9);
  uint64_t v51 = (char *)v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v46 = (char *)v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = *(void *)(v17 + 40);
  uint64_t v53 = type metadata accessor for CROrderedSetElement();
  uint64_t v18 = sub_1C4497B38();
  MEMORY[0x1F4188790](v18 - 8);
  char v20 = (char *)v37 - v19;
  uint64_t v22 = *v3;
  uint64_t v21 = v3[1];
  uint64_t v61 = sub_1C4496EB8();
  uint64_t v54 = v22;
  uint64_t v55 = v21;
  uint64_t v49 = v21;
  uint64_t v45 = (uint64_t)CROrderedDictionary.count.getter();
  uint64_t v45 = sub_1C4497528();
  sub_1C4497458();
  uint64_t v54 = v22;
  uint64_t v23 = v53;
  type metadata accessor for CRSequence();
  CRSequence.makeIterator()(v60);
  uint64_t v44 = type metadata accessor for CRSequence.Iterator();
  CRSequence.Iterator.next()(v44, (uint64_t)v20);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v43 = v24 + 48;
  if (v42(v20, 1, v23) == 1)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return v61;
  }
  else
  {
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    uint64_t v25 = v13 + 16;
    uint64_t v41 = v26;
    uint64_t v40 = v6 - 8;
    uint64_t v38 = (void (**)(uint64_t, uint64_t))(v25 - 8);
    uint64_t v39 = (void (**)(char *, uint64_t))(v24 + 8);
    uint64_t v27 = v53;
    v37[1] = v25;
    v37[0] = (uint64_t)v20;
    while (1)
    {
      uint64_t v28 = (uint64_t)v51;
      v41(v51, v20, v12);
      uint64_t v29 = *v39;
      uint64_t v30 = v49;
      swift_retain();
      v29(v20, v27);
      uint64_t v59 = v30;
      uint64_t v31 = *(void *)(v52 + 32);
      uint64_t v54 = v12;
      uint64_t v55 = v6;
      uint64_t v56 = v31;
      uint64_t v57 = v50;
      long long v58 = *(_OWORD *)(v52 + 48);
      type metadata accessor for CRDictionary();
      CRDictionary.subscript.getter(v28, (uint64_t)v11);
      swift_release();
      uint64_t v32 = v12;
      uint64_t v33 = *(void *)(v6 - 8);
      uint64_t v34 = v6;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48))(v11, 1, v6);
      if (result == 1) {
        break;
      }
      uint64_t v36 = v32;
      (*v38)(v28, v32);
      v47(v11);
      if (v5)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v11, v34);
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v34);
      sub_1C44974D8();
      char v20 = (char *)v37[0];
      CRSequence.Iterator.next()(v44, v37[0]);
      uint64_t v27 = v53;
      uint64_t v12 = v36;
      uint64_t v6 = v34;
      if (v42(v20, 1, v53) == 1) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t CROrderedDictionary._map<A>(_:)(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  MEMORY[0x1F4188790](a1);
  v35[1] = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v46 = *(void *)(v6 + 16);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v47 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  v35[0] = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  BOOL v11 = (char *)v35 - v10;
  uint64_t v12 = sub_1C4497B38();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = (char *)v35 - v13;
  uint64_t v15 = *v3;
  uint64_t v16 = v3[1];
  uint64_t v54 = sub_1C4496EB8();
  uint64_t v49 = v15;
  uint64_t v50 = v16;
  CROrderedDictionary.count.getter();
  v35[2] = sub_1C4497528();
  sub_1C4497458();
  uint64_t v49 = v15;
  uint64_t v50 = v16;
  uint64_t v17 = TupleTypeMetadata2;
  uint64_t v18 = v46;
  uint64_t v19 = v35[0];
  CROrderedDictionary.makeIterator()(&v53);
  long long v20 = *(_OWORD *)(a3 + 32);
  long long v43 = *(_OWORD *)(a3 + 48);
  long long v44 = v20;
  uint64_t v42 = (unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48);
  uint64_t v38 = v18 - 8;
  uint64_t v37 = v7 - 8;
  uint64_t v39 = (void (**)(char *, uint64_t))(v47 + 8);
  for (i = v14; ; uint64_t v14 = i)
  {
    uint64_t v49 = v18;
    uint64_t v50 = v7;
    long long v51 = v44;
    long long v52 = v43;
    uint64_t v21 = (void *)type metadata accessor for CROrderedDictionary.Iterator();
    CROrderedDictionary.Iterator.next()(v21, v14);
    if ((*v42)(v14, 1, v17) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return v54;
    }
    uint64_t v22 = *(int *)(v17 + 48);
    uint64_t v23 = &v11[v22];
    uint64_t v24 = &v14[v22];
    uint64_t v47 = *(void *)(v18 - 8);
    (*(void (**)(char *, char *, uint64_t))(v47 + 32))(v11, v14, v18);
    uint64_t v25 = *(void *)(v7 - 8);
    uint64_t v26 = v7;
    uint64_t v27 = v18;
    uint64_t v28 = v25;
    (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v23, v24, v26);
    uint64_t v29 = *(int *)(v17 + 48);
    uint64_t v30 = v47;
    uint64_t v31 = v19 + v29;
    uint64_t v32 = v27;
    uint64_t v7 = v26;
    (*(void (**)(uint64_t, char *, uint64_t))(v47 + 16))(v19, v11, v32);
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 16))(v31, v23, v26);
    uint64_t v33 = v48;
    v40(v19, v31);
    uint64_t v48 = v33;
    if (v33) {
      break;
    }
    (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v26);
    uint64_t v18 = v46;
    (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v19, v46);
    sub_1C44974D8();
    uint64_t v17 = TupleTypeMetadata2;
    (*v39)(v11, TupleTypeMetadata2);
  }
  (*v39)(v11, TupleTypeMetadata2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v28 + 8))(v31, v26);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v19, v46);
}

uint64_t CROrderedDictionary.subscript.getter(uint64_t a1, uint64_t a2)
{
  return sub_1C421128C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))CRDictionary.subscript.getter);
}

id sub_1C4210FB4@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = type metadata accessor for CROrderedDictionary();
  return CROrderedDictionary.subscript.getter(v3, v4, a2);
}

id sub_1C4211024(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  uint64_t v5 = type metadata accessor for CROrderedDictionary();
  return sub_1C4215210(a1, v4, v5);
}

void (*CROrderedDictionary.subscript.modify(void *a1, uint64_t a2, uint64_t a3))(uint64_t **a1, char a2)
{
  uint64_t v7 = malloc(0x38uLL);
  *a1 = v7;
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t v8 = *(void *)(a3 + 24);
  void v7[2] = v3;
  v7[3] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  void v7[4] = v9;
  size_t v10 = *(void *)(v9 + 64);
  v7[5] = malloc(v10);
  BOOL v11 = malloc(v10);
  v7[6] = v11;
  CROrderedDictionary.subscript.getter(a2, a3, (uint64_t)v11);
  return sub_1C421117C;
}

void sub_1C421117C(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[5];
  uint64_t v4 = (void *)(*a1)[6];
  uint64_t v5 = (*a1)[3];
  uint64_t v6 = (*a1)[4];
  uint64_t v7 = (*a1)[1];
  uint64_t v8 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[5], v4, v5);
    sub_1C4215210((uint64_t)v3, v8, v7);
    uint64_t v9 = *(void (**)(void *, uint64_t))(v6 + 8);
    v9(v3, v5);
    v9(v4, v5);
  }
  else
  {
    sub_1C4215210((*a1)[6], v8, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);
  free(v2);
}

uint64_t sub_1C4211274(uint64_t a1, uint64_t a2)
{
  return sub_1C421128C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))sub_1C4150728);
}

uint64_t sub_1C421128C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t v5 = type metadata accessor for CRDictionary();
  return a3(a1, v5);
}

uint64_t CROrderedDictionary.delta(_:from:)@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  swift_retain();
  return swift_retain();
}

uint64_t CROrderedDictionary.canMerge(delta:)()
{
  return 1;
}

uint64_t sub_1C4211354(uint64_t *a1, uint64_t a2)
{
  return 1;
}

uint64_t CROrderedDictionary.merge(delta:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  CROrderedDictionary.merge(_:)(v4, a2);
  return 1;
}

uint64_t sub_1C42113BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return CROrderedDictionary.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void **)(a2 + 32), *(void *)(a2 + 40), *(uint64_t **)(a2 + 48), *(void *)(a2 + 56), a3);
}

uint64_t CROrderedDictionary.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  uint64_t v25 = a8;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v15, &qword_1EBBC04F8);
  uint64_t v17 = type metadata accessor for Proto_CRDT(0);
  LODWORD(v16) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v15, 1, v17);
  sub_1C3F962E0((uint64_t)v15, &qword_1EBBC04F8);
  if (v16 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v18 = 0xD000000000000014;
    *(void *)(v18 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v18 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = a1;
    *(void *)(inited + 24) = 0;
    *(unsigned char *)(inited + 32) = 1;
    uint64_t v21 = v28[3];
    sub_1C4000F20(a2, a3, a4, a5, v26, v27, v28);
    uint64_t result = swift_release();
    if (!v21)
    {
      uint64_t v22 = v28[1];
      uint64_t v23 = v25;
      *uint64_t v25 = v28[0];
      v23[1] = v22;
    }
  }
  return result;
}

uint64_t sub_1C42115D0(uint64_t a1, void *a2)
{
  return CROrderedDictionary.encode(to:)(a1, a2);
}

uint64_t CROrderedDictionary.encode(to:)(uint64_t a1, void *a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = v2[1];
  uint64_t result = sub_1C3F62C10();
  if (!v3)
  {
    v14[0] = v5;
    v14[1] = v6;
    uint64_t v8 = a2[2];
    uint64_t v9 = a2[3];
    uint64_t v10 = a2[4];
    uint64_t v11 = a2[5];
    uint64_t v13 = a2[6];
    uint64_t v12 = a2[7];
    swift_retain();
    sub_1C400C6EC(v14, v8, v9, v10, v11, v13, v12);
    return swift_release();
  }
  return result;
}

void sub_1C421168C(unsigned char *a1@<X8>)
{
}

void CROrderedDictionary.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t CROrderedDictionary.ObservableDifference.contents.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CROrderedDictionary.ObservableDifference.removed.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 68);
  uint64_t v5 = sub_1C44967E8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t CROrderedDictionary.ObservableDifference.moved.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t CROrderedDictionary.ObservableDifference.added.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 76);
  uint64_t v5 = sub_1C44967E8();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);
  return v6(a2, v4, v5);
}

uint64_t CROrderedDictionary.ObservableDifference.subscript.getter(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v5 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return MEMORY[0x1C877FC90](&v5, v2, MEMORY[0x1E4FBB550], AssociatedTypeWitness, MEMORY[0x1E4FBB560]);
}

uint64_t sub_1C4211820@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  uint64_t v9 = (int *)type metadata accessor for CROrderedDictionary.ObservableDifference();
  uint64_t v10 = (char *)a5 + v9[17];
  uint64_t v11 = sub_1C44967E8();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);
  v12(v10, a2, v11);
  *(void *)((char *)a5 + v9[18]) = a3;
  return ((uint64_t (*)(char *, uint64_t, uint64_t))v12)((char *)a5 + v9[19], a4, v11);
}

uint64_t sub_1C4211904@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  v314 = a4;
  uint64_t v8 = a3[6];
  uint64_t v9 = a3[3];
  uint64_t v326 = *(void *)(v8 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v318 = sub_1C4497B38();
  uint64_t v309 = *(void *)(v318 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v318);
  v323 = (char *)v302 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  v322 = (char *)v302 - v14;
  uint64_t v327 = AssociatedTypeWitness;
  uint64_t v312 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v13);
  v317 = (char *)v302 - v15;
  uint64_t v313 = v8;
  uint64_t v16 = type metadata accessor for CRDictionaryElement();
  uint64_t v330 = sub_1C4497B38();
  uint64_t v311 = *(void *)(v330 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v330);
  v332 = (char *)v302 - v18;
  uint64_t v341 = *(void *)(v16 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v339 = (char *)v302 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v324 = (char *)v302 - v21;
  uint64_t v22 = (void *)a3[2];
  uint64_t v333 = v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v344 = sub_1C4497B38();
  uint64_t v310 = *(void *)(v344 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v344);
  v345 = (char *)v302 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  v343 = (char *)v302 - v26;
  v334 = a3;
  uint64_t v373 = a3[5];
  uint64_t v27 = type metadata accessor for CROrderedSetElement();
  uint64_t v331 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  *(void *)&long long v370 = (char *)v302 - (((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v320 = v29;
  MEMORY[0x1F4188790](v28);
  v366 = (char *)v302 - v30;
  uint64_t v308 = sub_1C44967E8();
  uint64_t v307 = *(void *)(v308 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v308);
  v306 = (char *)v302 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  v305 = (char *)v302 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  v347 = (char *)v302 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  v351 = (char *)v302 - v38;
  uint64_t v342 = *(v22 - 1);
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  v329 = (char *)v302 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  v346 = (char *)v302 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  v349 = (char *)v302 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  v365 = (char *)v302 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  v350 = (char *)v302 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  long long v51 = (char *)v302 - v50;
  MEMORY[0x1F4188790](v49);
  v372 = (char *)v302 - v52;
  uint64_t v358 = swift_getTupleTypeMetadata2();
  uint64_t v362 = sub_1C4497B38();
  uint64_t v53 = *(void *)(v362 - 8);
  uint64_t v54 = MEMORY[0x1F4188790](v362);
  v321 = (char *)v302 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = MEMORY[0x1F4188790](v54);
  v353 = (char *)v302 - v57;
  uint64_t v58 = MEMORY[0x1F4188790](v56);
  v361 = (void (**)(char *, uint64_t))((char *)v302 - v59);
  MEMORY[0x1F4188790](v58);
  uint64_t v61 = (void *)((char *)v302 - v60);
  uint64_t v62 = *a1;
  uint64_t v316 = a1[1];
  uint64_t v63 = *v4;
  uint64_t v315 = v4[1];
  uint64_t v328 = a2;
  if (!*(void *)(a2 + 24))
  {
    v382 = (void *)v63;
    uint64_t v388 = v62;
    uint64_t v166 = v62;
    type metadata accessor for CRSequence();
    BOOL v167 = sub_1C4373E7C(&v388);
    uint64_t v62 = v166;
    if (v167 && v315 == v316)
    {
      uint64_t v168 = v334[4];
      uint64_t v169 = v334[7];
      v382 = v22;
      uint64_t v383 = v9;
      uint64_t v384 = v168;
      uint64_t v385 = v373;
      uint64_t v386 = v313;
      uint64_t v387 = v169;
      uint64_t v170 = type metadata accessor for CROrderedDictionary.ObservableDifference();
      return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v170 - 8) + 56))(v314, 1, 1, v170);
    }
  }
  uint64_t v388 = v62;
  uint64_t v381 = v63;
  uint64_t v64 = v62;
  uint64_t v65 = type metadata accessor for CRSequence();
  *(void *)&long long v368 = v63;
  uint64_t v66 = (void (**)(char *, char *, void *))v65;
  swift_retain();
  swift_retain();
  v367 = v66;
  uint64_t v67 = v368;
  CRSequence.observableDifference(from:with:)((uint64_t)&v381, (uint64_t *)&v382);
  uint64_t v304 = v64;
  swift_release();
  swift_release();
  uint64_t v337 = v9;
  uint64_t v338 = (uint64_t)v382;
  uint64_t v335 = TupleTypeMetadata2;
  if (!v382)
  {
    type metadata accessor for _NSRange(255);
    type metadata accessor for CRSequenceStorage();
    sub_1C4497B38();
    swift_getTupleTypeMetadata3();
    uint64_t v338 = sub_1C4497478();
  }
  uint64_t v68 = v53;
  uint64_t v392 = sub_1C4496EA8();
  uint64_t v391 = sub_1C4496EA8();
  v382 = (void *)v67;
  uint64_t v69 = (void (**)(char *, void, void *))v367;
  uint64_t WitnessTable = swift_getWitnessTable();
  MEMORY[0x1C877FF50](&v388, v69, WitnessTable);
  uint64_t v381 = v388;
  v302[1] = sub_1C4497F98();
  sub_1C4497F68();
  uint64_t v303 = WitnessTable;
  uint64_t v71 = sub_1C4497F88();
  v360 = (void (**)(void))(v68 + 32);
  uint64_t v72 = v358;
  v374 = (void (**)(char *, char *, void *))(v342 + 16);
  v371 = (void (**)(char *, uint64_t))(v331 + 8);
  uint64_t v348 = v71;
  while (1)
  {
    uint64_t v73 = v361;
    sub_1C4497F78();
    uint64_t v74 = *v360;
    ((void (*)(uint64_t *, void (**)(char *, uint64_t), uint64_t))*v360)(v61, v73, v362);
    uint64_t v75 = *(void *)(v72 - 8);
    uint64_t v76 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v75 + 48);
    uint64_t v77 = (void (**)(char *, char *, uint64_t))(v75 + 48);
    if (v76(v61, 1, v72) == 1) {
      break;
    }
    uint64_t v78 = *v61;
    uint64_t v79 = (char *)v61 + *(int *)(v72 + 48);
    (*v374)(v372, v79, v22);
    (*v371)(v79, v27);
    uint64_t v388 = v78;
    char v389 = 0;
    sub_1C4497008();
    sub_1C4497048();
  }
  v355 = v77;
  v356 = v76;
  v357 = v74;
  swift_bridgeObjectRelease();
  sub_1C44967D8();
  sub_1C44967D8();
  type metadata accessor for _NSRange(255);
  type metadata accessor for CRSequenceStorage();
  sub_1C4497B38();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v81 = v338;
  uint64_t v82 = MEMORY[0x1C8780110](v338, TupleTypeMetadata3);
  uint64_t v83 = v335;
  if (v82 < 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v340 = MEMORY[0x1E4FBC860];
    goto LABEL_150;
  }
  uint64_t v381 = sub_1C4496EC8();
  uint64_t v379 = sub_1C4496EC8();
  uint64_t v84 = swift_bridgeObjectRetain();
  uint64_t v85 = MEMORY[0x1C8780160](v84, TupleTypeMetadata3);
  uint64_t v369 = v27;
  uint64_t v86 = TupleTypeMetadata3;
  uint64_t v87 = v371;
  uint64_t v336 = TupleTypeMetadata3;
  if (v85)
  {
    v364 = 0;
    uint64_t v88 = 0;
    uint64_t v325 = v81 + 32;
    uint64_t v89 = (void (**)(char *, void *))(v342 + 8);
    *(void *)&long long v359 = v331 + 16;
    v363 = v22;
    while (1)
    {
      char v90 = sub_1C44974A8();
      sub_1C4497438();
      if ((v90 & 1) == 0) {
        goto LABEL_216;
      }
      if (__OFADD__(v88, 1))
      {
LABEL_217:
        __break(1u);
LABEL_218:
        __break(1u);
LABEL_219:
        __break(1u);
LABEL_220:
        __break(1u);
LABEL_221:
        __break(1u);
        goto LABEL_222;
      }
      uint64_t v91 = (void *)(v325 + 32 * v88);
      uint64_t v92 = *v91;
      uint64_t v93 = v91[1];
      uint64_t v94 = *v91 + v93;
      if (__OFADD__(*v91, v93)) {
        goto LABEL_218;
      }
      if (v94 < v92) {
        goto LABEL_219;
      }
      uint64_t v96 = (void (**)(void, void))v91[2];
      uint64_t v95 = (void (**)(char *, char *, void))v91[3];
      uint64_t v340 = v88 + 1;
      uint64_t v352 = (uint64_t)v96;
      v354 = v95;
      if (v92 != v94) {
        break;
      }
      uint64_t v97 = v95;
LABEL_20:
      uint64_t v22 = v363;
      uint64_t v101 = v331;
      id v102 = v354;
      if (v354)
      {
        uint64_t v103 = sub_1C4379E5C();
        v354 = (void (**)(char *, char *, void))v102;
        uint64_t v104 = swift_bridgeObjectRetain();
        if (MEMORY[0x1C8780160](v104, v27))
        {
          uint64_t v105 = 0;
          do
          {
            char v106 = sub_1C44974A8();
            sub_1C4497438();
            if (v106)
            {
              (*(void (**)(void, unint64_t, uint64_t))(v101 + 16))(v370, v103+ ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ *(void *)(v101 + 72) * v105, v27);
              uint64_t v107 = v105 + 1;
              if (__OFADD__(v105, 1)) {
                goto LABEL_200;
              }
            }
            else
            {
              uint64_t result = sub_1C4497DA8();
              if (v320 != (id)8) {
                goto LABEL_235;
              }
              v382 = (void *)result;
              (*(void (**)(void, void **, uint64_t))v359)(v370, &v382, v27);
              swift_unknownObjectRelease();
              uint64_t v107 = v105 + 1;
              if (__OFADD__(v105, 1)) {
                goto LABEL_200;
              }
            }
            long long v108 = (char *)v370;
            (*v374)(v51, (char *)v370, v22);
            uint64_t v27 = v369;
            (*v87)(v108, v369);
            sub_1C4497748();
            uint64_t v109 = v372;
            sub_1C44976F8();
            uint64_t v110 = v109;
            uint64_t v87 = v371;
            (*v89)(v110, v22);
            ++v105;
          }
          while (v107 != MEMORY[0x1C8780160](v103, v27));
        }
        id v112 = v354;

        swift_bridgeObjectRelease();
      }
      BOOL v113 = __OFSUB__(v364, v352);
      v364 -= v352;
      if (v113) {
        goto LABEL_220;
      }
      uint64_t v81 = v338;
      uint64_t v86 = v336;
      uint64_t v114 = MEMORY[0x1C8780160](v338, v336);
      uint64_t v88 = v340;
      if (v340 == v114) {
        goto LABEL_34;
      }
    }
    if (v92 < v94)
    {
      uint64_t v98 = v95;
      while (!__OFADD__(v92, v364))
      {
        ++v92;
        v382 = (void *)v368;
        uint64_t v22 = v366;
        CRSequence.subscript.getter();
        uint64_t v99 = v363;
        (*v374)(v51, (char *)v22, v363);
        sub_1C4497748();
        uint64_t v100 = v372;
        sub_1C44976F8();
        (*v89)(v100, v99);
        (*v87)((char *)v22, v27);
        if (!--v93) {
          goto LABEL_20;
        }
      }
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
LABEL_202:
      __break(1u);
LABEL_203:
      __break(1u);
LABEL_204:
      __break(1u);
LABEL_205:
      __break(1u);
LABEL_206:
      __break(1u);
LABEL_207:
      __break(1u);
LABEL_208:
      __break(1u);
LABEL_209:
      __break(1u);
LABEL_210:
      __break(1u);
LABEL_211:
      __break(1u);
LABEL_212:
      __break(1u);
      goto LABEL_213;
    }
LABEL_222:
    __break(1u);
LABEL_223:
    uint64_t result = sub_1C4497DA8();
    __break(1u);
LABEL_224:
    __break(1u);
LABEL_225:
    __break(1u);
LABEL_226:
    __break(1u);
LABEL_227:
    __break(1u);
LABEL_228:
    __break(1u);
LABEL_229:
    __break(1u);
LABEL_230:
    __break(1u);
LABEL_231:
    __break(1u);
LABEL_232:
    __break(1u);
LABEL_233:
    __break(1u);
LABEL_234:
    __break(1u);
LABEL_235:
    __break(1u);
LABEL_236:
    __break(1u);
    return result;
  }
LABEL_34:
  swift_bridgeObjectRelease();
  uint64_t v115 = v373;
  uint64_t v390 = sub_1C4496EA8();
  uint64_t v340 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39ECE0);
  uint64_t v378 = sub_1C4496EA8();
  uint64_t v116 = MEMORY[0x1C8780160](v81, v86);
  uint64_t v117 = v350;
  if (v116)
  {
    uint64_t v352 = 0;
    uint64_t v118 = 0;
    uint64_t v119 = 0;
    uint64_t v319 = v81 + 32;
    v364 = (char *)(v342 + 8);
    v363 = (void *)MEMORY[0x1E4FBC860];
    while (1)
    {
      char v120 = sub_1C44974A8();
      uint64_t result = sub_1C4497438();
      if ((v120 & 1) == 0) {
        goto LABEL_223;
      }
      if (__OFADD__(v119, 1)) {
        goto LABEL_224;
      }
      uint64_t v121 = (uint64_t *)(v319 + 32 * v119);
      uint64_t v122 = *v121;
      *(void *)&long long v359 = v121[1];
      uint64_t v123 = v122 + v359;
      if (__OFADD__(v122, (void)v359)) {
        goto LABEL_225;
      }
      if (v123 < v122) {
        goto LABEL_226;
      }
      uint64_t v125 = v121[2];
      uint64_t v124 = (void (**)(char *, char *, void))v121[3];
      *(void *)&long long v370 = v122;
      uint64_t v325 = v119 + 1;
      uint64_t v331 = v125;
      v354 = v124;
      if (v122 != v123) {
        break;
      }
      uint64_t result = v124;
LABEL_42:
      id v126 = v354;
      if (v354)
      {
        uint64_t v127 = v115;
        v382 = (void *)sub_1C4379E5C();
        uint64_t v128 = sub_1C4497528();
        id v320 = v126;
        uint64_t v129 = swift_getWitnessTable();
        MEMORY[0x1C877FF50](&v388, v128, v129);
        v377 = (void *)v388;
        sub_1C4497F98();
        sub_1C4497F68();
        v354 = (void (**)(char *, char *, void))sub_1C4497F88();
        uint64_t v130 = v374;
        while (1)
        {
          sub_1C4497F78();
          uint64_t v132 = (uint64_t *)v353;
          v357();
          uint64_t v133 = v358;
          if (v356(v132, 1, v358) == 1) {
            break;
          }
          uint64_t v134 = *v132;
          uint64_t v135 = (char *)v132 + *(int *)(v133 + 48);
          uint64_t v136 = *v130;
          (*v130)(v365, v135, v22);
          (*v371)(v135, v27);
          swift_bridgeObjectRetain();
          char v137 = sub_1C4497738();
          swift_bridgeObjectRelease();
          if (v137)
          {
            uint64_t v138 = v370 + v118;
            if (__OFADD__((void)v370, v118)) {
              goto LABEL_203;
            }
            uint64_t v139 = v138 + v134;
            if (__OFADD__(v138, v134)) {
              goto LABEL_206;
            }
            uint64_t v140 = v365;
            v136(v372, v365, v22);
            uint64_t v388 = v363[2];
            char v389 = 0;
            sub_1C4497008();
            sub_1C4497048();
            uint64_t v141 = (uint64_t)v349;
            v136(v349, v140, v22);
            uint64_t v142 = v378;
            uint64_t v143 = *(void *)(v378 + 16);
            *(void *)&long long v144 = -1;
            *((void *)&v144 + 1) = -1;
            long long v359 = v144;
            if (v143)
            {
              unint64_t v145 = sub_1C3F88430(v141, (uint64_t)v22, v127);
              if (v146) {
                long long v359 = *(_OWORD *)(*(void *)(v142 + 56) + 16 * v145);
              }
            }
            uint64_t v147 = *(uint64_t (**)(char *, void *))v364;
            (*(void (**)(uint64_t, void *))v364)(v141, v22);
            BOOL v113 = __OFADD__((void)v370, v134);
            uint64_t v148 = v370 + v134;
            uint64_t v117 = v350;
            if (v113) {
              goto LABEL_207;
            }
            uint64_t v149 = v363;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v149 = sub_1C3FF1BF8(0, v149[2] + 1, 1, v149);
            }
            unint64_t v151 = v149[2];
            unint64_t v150 = v149[3];
            if (v151 >= v150 >> 1) {
              uint64_t v149 = sub_1C3FF1BF8((void *)(v150 > 1), v151 + 1, 1, v149);
            }
            v149[2] = v151 + 1;
            v363 = v149;
            char v131 = &v149[4 * v151];
            *((_OWORD *)v131 + 2) = v359;
            v131[6] = v139;
            v131[7] = v148;
            uint64_t v127 = v373;
            uint64_t v27 = v369;
            v147(v365, v22);
          }
          else
          {
            if (__OFADD__(v134, (void)v370)) {
              goto LABEL_204;
            }
            sub_1C4496748();
            (*(void (**)(char *, void *))v364)(v365, v22);
          }
          BOOL v113 = __OFSUB__(v118--, 1);
          uint64_t v130 = v374;
          if (v113) {
            goto LABEL_201;
          }
        }
        id v152 = v320;

        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v87 = v371;
        uint64_t v115 = v127;
      }
      BOOL v113 = __OFSUB__(v352, v331);
      v352 -= v331;
      uint64_t v153 = v361;
      if (v113) {
        goto LABEL_227;
      }
      uint64_t v154 = MEMORY[0x1C8780160](v338, v336);
      uint64_t v119 = v325;
      if (v325 == v154) {
        goto LABEL_87;
      }
    }
    if (v122 < v123)
    {
      uint64_t v155 = v124;
      uint64_t v156 = 0;
      while (1)
      {
        uint64_t v157 = v122 + v156 + v352;
        if (__OFADD__(v122 + v156, v352)) {
          goto LABEL_202;
        }
        v382 = (void *)v368;
        uint64_t v158 = v366;
        CRSequence.subscript.getter();
        uint64_t v159 = v27;
        uint64_t v160 = *v374;
        (*v374)(v117, v158, v22);
        (*v87)(v158, v159);
        swift_bridgeObjectRetain();
        char v161 = sub_1C4497738();
        swift_bridgeObjectRelease();
        if (v161)
        {
          uint64_t v122 = v370;
          uint64_t v162 = v118 + v370;
          if (__OFADD__(v118, (void)v370)) {
            goto LABEL_211;
          }
          uint64_t v115 = v373;
          MEMORY[0x1C877FC90](&v382, v117, v390, v22, MEMORY[0x1E4FBB550], v373);
          if (v383)
          {
            v160(v372, v117, v22);
            v382 = (void *)v157;
            uint64_t v383 = v162;
            LOBYTE(v384) = 0;
            sub_1C4497008();
            uint64_t v87 = v371;
            sub_1C4497048();
            uint64_t result = (*(uint64_t (**)(char *, void *))v364)(v117, v22);
            uint64_t v27 = v369;
            BOOL v113 = __OFADD__(v118++, 1);
            if (v113) {
              goto LABEL_212;
            }
          }
          else
          {
            unint64_t v163 = (unint64_t)v382;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              v363 = sub_1C423282C(v363);
            }
            uint64_t v164 = v373;
            uint64_t v27 = v369;
            if ((v163 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_215:
              __break(1u);
LABEL_216:
              sub_1C4497DA8();
              __break(1u);
              goto LABEL_217;
            }
            if (v163 >= v363[2]) {
              goto LABEL_215;
            }
            uint64_t v165 = &v363[4 * v163];
            v165[4] = v157;
            v165[5] = v162;
            uint64_t result = (*(uint64_t (**)(char *, void *))v364)(v117, v22);
            uint64_t v115 = v164;
            uint64_t v122 = v370;
            BOOL v113 = __OFADD__(v118++, 1);
            if (v113) {
              goto LABEL_212;
            }
          }
        }
        else
        {
          sub_1C4496748();
          uint64_t result = (*(uint64_t (**)(char *, void *))v364)(v117, v22);
          uint64_t v115 = v373;
          uint64_t v27 = v369;
          uint64_t v122 = v370;
        }
        if ((void)v359 == ++v156) {
          goto LABEL_42;
        }
      }
    }
    goto LABEL_233;
  }
  v363 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v153 = v361;
LABEL_87:
  uint64_t result = swift_bridgeObjectRelease();
  v376 = (void *)MEMORY[0x1E4FBC860];
  v377 = (void *)MEMORY[0x1E4FBC860];
  if (!v363[2])
  {
    uint64_t v340 = MEMORY[0x1E4FBC860];
    uint64_t v83 = v335;
    uint64_t v200 = v362;
    v201 = (uint64_t *)v321;
    goto LABEL_146;
  }
  unint64_t v171 = 0;
  v172 = (void *)MEMORY[0x1E4FBC860];
  unint64_t v173 = v363[2];
  uint64_t v174 = (void *)MEMORY[0x1E4FBC860];
  *(void *)&long long v370 = v173;
  do
  {
    if (v171 >= v173) {
      goto LABEL_228;
    }
    uint64_t v175 = v363;
    v176 = &v363[4 * v171 + 4];
    uint64_t v179 = v176[1];
    v178 = v176 + 1;
    uint64_t v177 = v179;
    uint64_t v180 = v174[2];
    if (v180)
    {
      uint64_t v181 = 0;
      uint64_t v182 = v174 + 4;
      uint64_t v183 = v174[2];
      while (1)
      {
        uint64_t v184 = *v182++;
        if (v177 >= v184)
        {
          BOOL v113 = __OFADD__(v181++, 1);
          if (v113) {
            goto LABEL_205;
          }
        }
        if (!--v183) {
          goto LABEL_98;
        }
      }
    }
    uint64_t v181 = 0;
LABEL_98:
    uint64_t v185 = v172[2];
    if (v185)
    {
      uint64_t v186 = v172 + 4;
      uint64_t v187 = v172[2];
      do
      {
        uint64_t v188 = *v186++;
        if (v188 < v177)
        {
          BOOL v113 = __OFSUB__(v181--, 1);
          if (v113) {
            goto LABEL_208;
          }
        }
      }
      while (--v187);
    }
    uint64_t v189 = v363[4 * v171 + 6];
    uint64_t v190 = 0;
    if (v180)
    {
      uint64_t v191 = v174 + 4;
      do
      {
        uint64_t v192 = *v191++;
        if (v189 >= v192)
        {
          BOOL v113 = __OFADD__(v190++, 1);
          if (v113) {
            goto LABEL_209;
          }
        }
      }
      while (--v180);
    }
    if (v185)
    {
      uint64_t v193 = v172 + 4;
      do
      {
        uint64_t v194 = *v193++;
        if (v194 < v189)
        {
          BOOL v113 = __OFSUB__(v190--, 1);
          if (v113) {
            goto LABEL_210;
          }
        }
      }
      while (--v185);
    }
    swift_beginAccess();
    uint64_t v174 = v377;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v174 = sub_1C3FF1BEC(0, v174[2] + 1, 1, v174);
    }
    unint64_t v196 = v174[2];
    unint64_t v195 = v174[3];
    if (v196 >= v195 >> 1) {
      uint64_t v174 = sub_1C3FF1BEC((void *)(v195 > 1), v196 + 1, 1, v174);
    }
    v174[2] = v196 + 1;
    v174[v196 + 4] = v189;
    v377 = v174;
    uint64_t result = swift_endAccess();
    if (v171 >= v175[2]) {
      goto LABEL_229;
    }
    uint64_t v197 = *v178;
    swift_beginAccess();
    v172 = v376;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v172 = sub_1C3FF1BEC(0, v172[2] + 1, 1, v172);
    }
    unint64_t v199 = v172[2];
    unint64_t v198 = v172[3];
    if (v199 >= v198 >> 1) {
      v172 = sub_1C3FF1BEC((void *)(v198 > 1), v199 + 1, 1, v172);
    }
    v172[2] = v199 + 1;
    v172[v199 + 4] = v197;
    v376 = v172;
    swift_endAccess();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1C423282C(v175);
      v363 = (void *)result;
    }
    uint64_t v200 = v362;
    v201 = (uint64_t *)v321;
    uint64_t v202 = v370;
    unint64_t v173 = v363[2];
    if (v171 >= v173) {
      goto LABEL_230;
    }
    uint64_t v203 = &v363[4 * v171 + 4];
    uint64_t v204 = v203[1];
    BOOL v113 = __OFADD__(v204, v181);
    uint64_t v205 = v204 + v181;
    if (v113) {
      goto LABEL_231;
    }
    v203[1] = v205;
    uint64_t v207 = v203[2];
    uint64_t v206 = v203 + 2;
    uint64_t v208 = v207 + v190;
    if (__OFADD__(v207, v190)) {
      goto LABEL_232;
    }
    ++v171;
    *uint64_t v206 = v208;
    uint64_t v27 = v369;
  }
  while (v171 != v202);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v209 = (void *)(result + 48);
  uint64_t v210 = MEMORY[0x1E4FBC860];
  uint64_t v83 = v335;
  do
  {
    long long v216 = *((_OWORD *)v209 - 1);
    uint64_t v217 = *(v209 - 1);
    uint64_t v218 = *v209;
    if (v217 != *v209)
    {
      BOOL v113 = __OFSUB__(v218, 1);
      uint64_t v219 = v218 - 1;
      if (v113) {
        goto LABEL_234;
      }
      if (v217 != v219)
      {
        long long v368 = *(_OWORD *)v209;
        long long v370 = v216;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        v382 = (void *)v210;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1C4012808(0, *(void *)(v210 + 16) + 1, 1);
          uint64_t v210 = (uint64_t)v382;
        }
        long long v211 = v370;
        long long v212 = v368;
        unint64_t v214 = *(void *)(v210 + 16);
        unint64_t v213 = *(void *)(v210 + 24);
        if (v214 >= v213 >> 1)
        {
          uint64_t result = sub_1C4012808(v213 > 1, v214 + 1, 1);
          long long v212 = v368;
          long long v211 = v370;
          uint64_t v210 = (uint64_t)v382;
        }
        *(void *)(v210 + 16) = v214 + 1;
        uint64_t v215 = v210 + 32 * v214;
        *(_OWORD *)(v215 + 32) = v211;
        *(_OWORD *)(v215 + 48) = v212;
        uint64_t v200 = v362;
        v201 = (uint64_t *)v321;
      }
    }
    v209 += 4;
    --v173;
  }
  while (v173);
  uint64_t v340 = v210;
  swift_bridgeObjectRelease();
  uint64_t v153 = v361;
LABEL_146:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v382 = (void *)v304;
  MEMORY[0x1C877FF50](&v388, v367, v303);
  uint64_t v375 = v388;
  sub_1C4497F68();
  sub_1C4497F78();
  ((void (*)(uint64_t *, void (**)(char *, uint64_t), uint64_t))v357)(v201, v153, v200);
  uint64_t v220 = v358;
  unsigned int v221 = v356(v201, 1, v358);
  v222 = v372;
  v223 = v371;
  if (v221 != 1)
  {
    v224 = v153;
    *(void *)&long long v370 = *v374;
    do
    {
      uint64_t v225 = *v201;
      v226 = (char *)v201 + *(int *)(v220 + 48);
      ((void (*)(char *, char *, void *))v370)(v222, v226, v22);
      (*v223)(v226, v27);
      uint64_t v388 = v225;
      char v389 = 0;
      sub_1C4497008();
      sub_1C4497048();
      sub_1C4497F78();
      uint64_t v220 = v358;
      ((void (*)(uint64_t *, void (**)(char *, uint64_t), uint64_t))v357)(v201, v224, v362);
    }
    while (v356(v201, 1, v220) != 1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_150:
  uint64_t v227 = v333;
  v228 = v332;
  v229 = v345;
  uint64_t v230 = v309;
  uint64_t v390 = sub_1C4496EA8();
  uint64_t v231 = v315;
  swift_beginAccess();
  uint64_t v232 = *(void *)(v231 + 40);
  uint64_t v233 = *(void *)(v232 + 64);
  v356 = (unsigned int (*)(uint64_t *, uint64_t, uint64_t))(v232 + 64);
  uint64_t v234 = 1 << *(unsigned char *)(v232 + 32);
  uint64_t v235 = -1;
  if (v234 < 64) {
    uint64_t v235 = ~(-1 << v234);
  }
  unint64_t v236 = v235 & v233;
  unint64_t v237 = (unint64_t)(v234 + 63) >> 6;
  uint64_t v369 = v83 - 8;
  uint64_t v362 = v341 + 16;
  *(void *)&long long v368 = v310 + 32;
  v367 = (void (**)(char *, char *, void *))(v342 + 32);
  v238 = (void (**)(void))(v341 + 32);
  v366 = (char *)(v316 + 40);
  v365 = (char *)(v341 + 48);
  *(void *)&long long v370 = v342 + 8;
  v364 = (char *)(v341 + 8);
  uint64_t v358 = v326 + 40;
  v357 = (void (*)(void))(v312 + 48);
  v355 = (void (**)(char *, char *, uint64_t))(v312 + 32);
  v354 = (void (**)(char *, char *, void))(v312 + 16);
  v353 = (char *)(v312 + 56);
  uint64_t v352 = v312 + 8;
  v350 = (char *)(v230 + 8);
  v361 = (void (**)(char *, uint64_t))(v311 + 8);
  uint64_t v338 = v237 - 1;
  v239 = (void *)swift_bridgeObjectRetain();
  v240 = 0;
  *(void *)&long long v359 = v237;
  uint64_t v348 = v237 - 4;
  v363 = v239;
  v349 = (char *)(v239 + 12);
  v241 = v324;
  v360 = v238;
  while (2)
  {
    if (v236)
    {
      v242 = v241;
      unint64_t v243 = __clz(__rbit64(v236));
      uint64_t v244 = (v236 - 1) & v236;
      v372 = v240;
      unint64_t v245 = v243 | ((void)v240 << 6);
      goto LABEL_157;
    }
    uint64_t v263 = (uint64_t)(v240 + 1);
    if (__OFADD__(v240, 1)) {
      goto LABEL_221;
    }
    if (v263 >= (uint64_t)v359)
    {
      v372 = v240;
      uint64_t v244 = 0;
      uint64_t v247 = 1;
      goto LABEL_158;
    }
    unint64_t v264 = *((void *)v356 + v263);
    if (!v264)
    {
      if ((uint64_t)(v240 + 2) >= (uint64_t)v359)
      {
        uint64_t v244 = 0;
        uint64_t v247 = 1;
      }
      else
      {
        unint64_t v264 = *((void *)v356 + (void)(v240 + 2));
        if (v264)
        {
          uint64_t v263 = (uint64_t)(v240 + 2);
          goto LABEL_166;
        }
        uint64_t v263 = (uint64_t)(v240 + 3);
        if ((uint64_t)(v240 + 3) >= (uint64_t)v359)
        {
          uint64_t v244 = 0;
          uint64_t v247 = 1;
          v372 = v240 + 2;
          goto LABEL_158;
        }
        unint64_t v264 = *((void *)v356 + v263);
        if (v264) {
          goto LABEL_166;
        }
        while ((char *)v348 != v240)
        {
          unint64_t v264 = *(void *)&v349[8 * (void)v240++];
          if (v264)
          {
            uint64_t v263 = (uint64_t)(v240 + 3);
            goto LABEL_166;
          }
        }
        uint64_t v244 = 0;
        uint64_t v247 = 1;
        uint64_t v263 = v338;
      }
      v372 = (char *)v263;
      goto LABEL_158;
    }
LABEL_166:
    v242 = v241;
    uint64_t v244 = (v264 - 1) & v264;
    unint64_t v245 = __clz(__rbit64(v264)) + (v263 << 6);
    v372 = (char *)v263;
LABEL_157:
    v246 = v363;
    (*(void (**)(char *, unint64_t, void *))(v342 + 16))(v229, v363[6] + *(void *)(v342 + 72) * v245, v22);
    (*(void (**)(char *, unint64_t, uint64_t))(v341 + 16))(&v229[*(int *)(v83 + 48)], v246[7] + *(void *)(v341 + 72) * v245, v227);
    uint64_t v247 = 0;
    v241 = v242;
LABEL_158:
    uint64_t v248 = *(void *)(v83 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v248 + 56))(v229, v247, 1, v83);
    v249 = v343;
    (*(void (**)(void))v368)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48))(v249, 1, v83) != 1)
    {
      v371 = (void (**)(char *, uint64_t))v244;
      v250 = v249;
      v251 = &v249[*(int *)(v83 + 48)];
      v252 = v346;
      (*v367)(v346, v250, v22);
      v253 = *v238;
      ((void (*)(char *, char *, uint64_t))*v238)(v241, v251, v227);
      v254 = (uint64_t *)v366;
      swift_beginAccess();
      uint64_t v255 = *v254;
      swift_bridgeObjectRetain();
      uint64_t v256 = v373;
      MEMORY[0x1C877FC90](v252, v255, v22, v227, v373);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v365)(v228, 1, v227) == 1)
      {
        (*(void (**)(char *, uint64_t))v364)(v241, v227);
        (*(void (**)(char *, void *))v370)(v252, v22);
        (*v361)(v228, v330);
        v229 = v345;
        goto LABEL_154;
      }
      v257 = v339;
      ((void (*)(char *, char *, uint64_t))v253)(v339, v228, v227);
      uint64_t v258 = MEMORY[0x1E4FBB550];
      MEMORY[0x1C877FC90](&v382, v252, v391, v22, MEMORY[0x1E4FBB550], v256);
      uint64_t v259 = (uint64_t)v382;
      char v260 = v383;
      v261 = v329;
      (*v374)(v329, v252, v22);
      if (v260)
      {
        uint64_t result = (uint64_t)MEMORY[0x1C877FC90](&v379, v261, v392, v22, v258, v256);
        if (v380) {
          goto LABEL_236;
        }
        uint64_t v262 = v379;
      }
      else
      {
        uint64_t v262 = v259;
      }
      v265 = *(void (**)(char *, void *))v370;
      (*(void (**)(char *, void *))v370)(v261, v22);
      v266 = &v241[*(int *)(v227 + 36)];
      uint64_t v267 = v337;
      v268 = v257;
      if (sub_1C4497178())
      {
        uint64_t v269 = v267;
        v270 = v322;
        (*(void (**)(char *, uint64_t, uint64_t))(v326 + 40))(v266, v328, v269);
        uint64_t v271 = v327;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))v357)(v270, 1, v327) == 1)
        {
          v272 = *(uint64_t (**)(char *, void *))v364;
          v273 = (void *)v333;
          (*(void (**)(char *, uint64_t))v364)(v339, v333);
          v241 = v324;
          v272(v324, v273);
          v265(v346, v22);
          v274 = v270;
          uint64_t v227 = (uint64_t)v273;
          (*(void (**)(char *, uint64_t))v350)(v274, v318);
        }
        else
        {
          v278 = v317;
          (*v355)(v317, v270, v271);
          v279 = v323;
          (*v354)(v323, v278, v271);
          (*(void (**)(char *, void, uint64_t, uint64_t))v353)(v279, 0, 1, v271);
          uint64_t v379 = v262;
          sub_1C4497008();
          sub_1C4497048();
          (*(void (**)(char *, uint64_t))v352)(v278, v271);
          v280 = *(uint64_t (**)(char *, void *))v364;
          uint64_t v227 = v333;
          (*(void (**)(char *, uint64_t))v364)(v339, v333);
          v241 = v324;
          v280(v324, (void *)v227);
          v265(v346, v22);
        }
        v228 = v332;
LABEL_180:
        uint64_t v83 = v335;
        v229 = v345;
        v238 = v360;
LABEL_154:
        unint64_t v236 = (unint64_t)v371;
        v240 = v372;
        continue;
      }
      uint64_t v275 = *(int *)(type metadata accessor for FinalizedTimestamp(0) + 20);
      uint64_t v276 = *(void *)&v241[v275];
      uint64_t v277 = *(void *)&v257[v275];
      if (v276 == v277)
      {
        if ((sub_1C410BE0C() & 1) == 0) {
          goto LABEL_179;
        }
LABEL_178:
        (*(void (**)(char *, uint64_t, uint64_t))(v326 + 40))(v266, v328, v337);
        uint64_t v379 = v262;
        sub_1C4497008();
        sub_1C4497048();
      }
      else if (v276 < v277)
      {
        goto LABEL_178;
      }
LABEL_179:
      v281 = *(uint64_t (**)(char *, void *))v364;
      uint64_t v227 = v333;
      (*(void (**)(char *, uint64_t))v364)(v268, v333);
      v281(v241, (void *)v227);
      v265(v346, v22);
      v228 = v332;
      goto LABEL_180;
    }
    break;
  }
  swift_release();
  if (sub_1C44966F8() > 0
    || (swift_bridgeObjectRetain(), uint64_t v282 = sub_1C4496F68(), swift_bridgeObjectRelease(), v282 > 0)
    || *(void *)(v340 + 16)
    || sub_1C44966F8() >= 1)
  {
    uint64_t v283 = v390;
    v284 = *(void (**)(char *, char *, uint64_t))(v307 + 32);
    uint64_t v285 = (uint64_t)v305;
    uint64_t v286 = v308;
    v284(v305, v347, v308);
    v287 = v306;
    v284(v306, v351, v286);
    uint64_t v288 = v334[4];
    uint64_t v289 = v334[7];
    uint64_t v290 = v313;
    v291 = v314;
    uint64_t v292 = v283;
    uint64_t v293 = (uint64_t)v287;
    uint64_t v294 = v337;
    uint64_t v295 = v373;
    sub_1C4211820(v292, v285, v340, v293, v314);
    v382 = v22;
    uint64_t v383 = v294;
    uint64_t v384 = v288;
    uint64_t v385 = v295;
    uint64_t v386 = v290;
    uint64_t v387 = v289;
    uint64_t v296 = type metadata accessor for CROrderedDictionary.ObservableDifference();
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v296 - 8) + 56))(v291, 0, 1, v296);
    goto LABEL_198;
  }
LABEL_213:
  swift_bridgeObjectRelease();
  v297 = *(void (**)(char *, uint64_t))(v307 + 8);
  uint64_t v298 = v308;
  v297(v347, v308);
  v297(v351, v298);
  uint64_t v299 = v334[4];
  uint64_t v300 = v334[7];
  v382 = v22;
  uint64_t v383 = v337;
  uint64_t v384 = v299;
  uint64_t v385 = v373;
  uint64_t v386 = v313;
  uint64_t v387 = v300;
  uint64_t v301 = type metadata accessor for CROrderedDictionary.ObservableDifference();
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v301 - 8) + 56))(v314, 1, 1, v301);
  swift_bridgeObjectRelease();
LABEL_198:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t CROrderedDictionary.MergeableDelta.merge(delta:)(uint64_t *a1)
{
  uint64_t v1 = a1[1];
  v4[0] = *a1;
  v4[1] = v1;
  uint64_t v2 = type metadata accessor for CROrderedDictionary();
  CROrderedDictionary.merge(_:)(v4, v2);
  return 1;
}

uint64_t CROrderedDictionary.MergeableDelta.canMerge(delta:)()
{
  return 1;
}

uint64_t CROrderedDictionary.MergeableDelta.visitReferences(_:)(uint64_t a1)
{
  return CROrderedDictionary.visitReferences(_:)(a1);
}

uint64_t CROrderedDictionary.MergeableDelta.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  uint64_t result = CROrderedDictionary.init(from:)(a1, a2, a3, a4, a5, a6, a7, v12);
  if (!v8)
  {
    uint64_t v11 = v12[1];
    *a8 = v12[0];
    a8[1] = v11;
  }
  return result;
}

uint64_t CROrderedDictionary.MergeableDelta.encode(to:)(uint64_t a1)
{
  swift_retain();
  swift_retain();
  uint64_t v2 = (void *)type metadata accessor for CROrderedDictionary();
  CROrderedDictionary.encode(to:)(a1, v2);
  swift_release();
  return swift_release();
}

uint64_t sub_1C42147BC(uint64_t *a1)
{
  return 1;
}

uint64_t sub_1C42147DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  return CROrderedDictionary.MergeableDelta.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void **)(a2 + 32), *(void *)(a2 + 40), *(uint64_t **)(a2 + 48), *(void *)(a2 + 56), a3);
}

uint64_t sub_1C4214804(uint64_t a1)
{
  return CROrderedDictionary.MergeableDelta.encode(to:)(a1);
}

uint64_t sub_1C4214820@<X0>(uint64_t *a1@<X8>)
{
  CROrderedDictionary.makeIterator()(a1);
  swift_release();
  return swift_release();
}

uint64_t sub_1C421485C()
{
  return 0;
}

uint64_t sub_1C4214864()
{
  uint64_t v0 = sub_1C4422858();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_1C42148B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v44 = a6;
  uint64_t v45 = a1;
  uint64_t v47 = (char *)a3;
  uint64_t v48 = a4;
  uint64_t v46 = a2;
  uint64_t v43 = a7;
  uint64_t v8 = type metadata accessor for Proto_Timestamp(0);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (unint64_t *)((char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = type metadata accessor for Timestamp(0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = type metadata accessor for CRDictionaryElement();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v18 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v40 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v39 - v22;
  uint64_t v24 = (char *)&v39 + *(int *)(v21 + 48) - v22;
  uint64_t v25 = *(void *)(a5 - 8);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  uint64_t v27 = v45;
  uint64_t v45 = a5;
  v26((char *)&v39 - v22, v27, a5);
  uint64_t v28 = *(void *)(v16 - 8);
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v28 + 16);
  uint64_t v41 = v24;
  v29(v24, v46, v16);
  sub_1C3F86BC8((uint64_t)v47, (uint64_t)v10, type metadata accessor for Proto_Timestamp);
  uint64_t v30 = v48;
  swift_retain();
  uint64_t v47 = v15;
  uint64_t v31 = v30;
  uint64_t v32 = v49;
  sub_1C3F8A234(v10, v31, (uint64_t)v15);
  if (v32) {
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v23, TupleTypeMetadata2);
  }
  uint64_t v34 = (uint64_t)v40;
  uint64_t v35 = &v40[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v36 = v23;
  uint64_t v37 = v45;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v40, v36, v45);
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v35, v41, v16);
  uint64_t v38 = v42;
  sub_1C421608C((uint64_t)v47, v42, type metadata accessor for Timestamp);
  sub_1C3F8A474(v34, v38, v37, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v35, v16);
}

uint64_t sub_1C4214C30(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  type metadata accessor for CRDictionaryElement();
  uint64_t v13 = a1 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  type metadata accessor for Proto_Timestamp(255);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t result = a2(a1, v13, a1 + *(int *)(TupleTypeMetadata2 + 48));
  if (v10) {
    *a10 = v10;
  }
  return result;
}

uint64_t sub_1C4214D04@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Replica();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1 + *(int *)(type metadata accessor for CROrderedSetElement() + 36);
  type metadata accessor for Proto_Timestamp(0);
  *a2 = 0;
  a2[1] = 0;
  sub_1C4496888();
  sub_1C3F86BC8(v7, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for Replica);
  uint64_t v8 = sub_1C3FA10C4((uint64_t)v6);
  uint64_t v9 = sub_1C4496678();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v6, v9);
  *a2 = v8;
  uint64_t result = type metadata accessor for Timestamp(0);
  a2[1] = *(void *)(v7 + *(int *)(result + 20));
  return result;
}

uint64_t CROrderedDictionary<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v29 = a4;
  uint64_t v32 = a3;
  uint64_t v28 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v45 = (char *)&v27 - v10;
  uint64_t v11 = sub_1C4497B38();
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v13 = (char *)&v27 - v12;
  uint64_t v14 = *v4;
  *(void *)&long long v36 = v4[1];
  uint64_t v15 = a1[3];
  *(void *)&long long v35 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  sub_1C4498688();
  uint64_t v38 = v14;
  uint64_t v16 = v28;
  uint64_t v39 = v36;
  CROrderedDictionary.makeIterator()(&v42);
  long long v17 = *(_OWORD *)(a2 + 32);
  long long v35 = *(_OWORD *)(a2 + 48);
  long long v36 = v17;
  uint64_t v18 = TupleTypeMetadata2;
  uint64_t v34 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v31 = v16 - 8;
  uint64_t v30 = v7 - 8;
  uint64_t v19 = (void (**)(char *, uint64_t))(v9 + 8);
  for (uint64_t i = TupleTypeMetadata2; ; v25(v45, i))
  {
    uint64_t v38 = v16;
    uint64_t v39 = v7;
    long long v40 = v36;
    long long v41 = v35;
    uint64_t v20 = (void *)type metadata accessor for CROrderedDictionary.Iterator();
    CROrderedDictionary.Iterator.next()(v20, v13);
    if ((*v34)(v13, 1, v18) == 1)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    }
    uint64_t v21 = *(int *)(v18 + 48);
    uint64_t v22 = &v13[v21];
    uint64_t v23 = &v45[v21];
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v45, v13, v16);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v23, v22, v7);
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
    uint64_t v24 = v37;
    sub_1C4498158();
    if (v24) {
      break;
    }
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v43, v44);
    sub_1C4498158();
    uint64_t v25 = *v19;
    uint64_t v37 = 0;
    uint64_t v18 = i;
  }
  (*v19)(v45, i);
  swift_release();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
}

uint64_t sub_1C42151F0(void *a1, uint64_t a2, uint64_t a3)
{
  return CROrderedDictionary<>.encode(to:)(a1, a2, *(void *)(a3 - 8), *(void *)(a3 - 16));
}

id sub_1C4215210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v24 = a1;
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = sub_1C4497B38();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v26 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v25 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(a3 + 40);
  uint64_t v12 = type metadata accessor for CROrderedSetElement();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v23 - v14;
  uint64_t v27 = v3;
  uint64_t v16 = *v3;
  uint64_t v31 = *v3;
  type metadata accessor for CRSequence();
  id result = CRSequence.count.getter();
  if ((uint64_t)result <= v30)
  {
    __break(1u);
  }
  else
  {
    uint64_t v31 = v16;
    CRSequence.subscript.getter();
    uint64_t v19 = (uint64_t)v25;
    uint64_t v18 = v26;
    (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v25, v15, v10);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v20 = *(void *)(v5 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v9, v24, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v9, 0, 1, v5);
    uint64_t v21 = *(void *)(a3 + 32);
    uint64_t v31 = v10;
    uint64_t v32 = v5;
    uint64_t v33 = v21;
    uint64_t v34 = v23;
    long long v35 = *(_OWORD *)(a3 + 48);
    uint64_t v22 = type metadata accessor for CRDictionary();
    sub_1C41589BC((uint64_t)v9, v19, v22);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v10);
    return (id)(*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v9, v29);
  }
  return result;
}

uint64_t sub_1C4215530()
{
  return sub_1C42155F0() & 1;
}

uint64_t sub_1C421554C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C4215594(uint64_t a1, uint64_t a2, void *a3)
{
  if (a1 != 1)
  {
    sub_1C3F870F4(a1);
  }
}

uint64_t type metadata accessor for CROrderedDictionary.Iterator()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C42155F0()
{
  return sub_1C4497178() & 1;
}

_UNKNOWN **sub_1C4215630()
{
  return &protocol witness table for CROrderedDictionary<A, B>.MergeableDelta;
}

uint64_t sub_1C421563C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C4215678()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C421569C()
{
  return 48;
}

__n128 sub_1C42156A8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(a2 + 32) = v3;
  *(__n128 *)a2 = result;
  return result;
}

uint64_t sub_1C42156BC()
{
  uint64_t result = sub_1C44967E8();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C421575C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[17];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C44967E8();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[19];
    *(uint64_t *)((char *)v7 + a3[18]) = *(uint64_t *)((char *)a2 + a3[18]);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    swift_bridgeObjectRetain();
    v12(v14, v15, v11);
  }
  return v7;
}

uint64_t sub_1C4215880(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 68);
  uint64_t v5 = sub_1C44967E8();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 76);
  return v8(v6, v5);
}

void *sub_1C421593C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[17];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C44967E8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  uint64_t v11 = a3[19];
  *(void *)((char *)a1 + a3[18]) = *(void *)((char *)a2 + a3[18]);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  swift_bridgeObjectRetain();
  v10(v12, v13, v9);
  return a1;
}

char *sub_1C4215A14(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[17];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C44967E8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10(&a1[a3[19]], &a2[a3[19]], v9);
  return a1;
}

char *sub_1C4215AF4(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v6 = a3[17];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C44967E8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[19];
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  v10(&a1[v11], &a2[v11], v9);
  return a1;
}

char *sub_1C4215BB0(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[17];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_1C44967E8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  *(void *)&a1[a3[18]] = *(void *)&a2[a3[18]];
  swift_bridgeObjectRelease();
  v10(&a1[a3[19]], &a2[a3[19]], v9);
  return a1;
}

uint64_t sub_1C4215C80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C4215C94);
}

uint64_t sub_1C4215C94(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1C44967E8();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 68);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1C4215D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C4215D58);
}

void *sub_1C4215D58(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1C44967E8();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 68);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for CROrderedDictionary.ObservableDifference()
{
  return swift_getGenericMetadata();
}

uint64_t *sub_1C4215E18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  if (!v4)
  {
    if (v5)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v5)
  {
    uint64_t v6 = type metadata accessor for CRDictionary.MutatingAction();
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  uint64_t v7 = (void *)a1[2];
  uint64_t v8 = (void *)a2[2];
  a1[2] = (uint64_t)v8;
  id v9 = v8;

  return a1;
}

void *sub_1C4215F10(void *a1, uint64_t a2)
{
  if (!*a1) {
    goto LABEL_5;
  }
  if (!*(void *)a2)
  {
    uint64_t v4 = type metadata accessor for CRDictionary.MutatingAction();
    (*(void (**)(void *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
LABEL_6:
  uint64_t v5 = (void *)a1[2];
  a1[2] = *(void *)(a2 + 16);

  return a1;
}

uint64_t type metadata accessor for CROrderedDictionary.MutatingAction()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for CROrderedDictionary.MergeableDelta()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C4216000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C42100B0(a1, *(void **)(v2 + 96), *(void *)(v2 + 16), a2);
}

uint64_t sub_1C4216048()
{
  return MEMORY[0x1F4186498](v0, 64, 7);
}

uint64_t sub_1C4216058@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 16) - 8) + 16))(a2, a1);
}

uint64_t sub_1C421608C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C42160F4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C4214D04(a1, a2);
}

uint64_t sub_1C421611C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C4216154()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 72, 7);
}

uint64_t sub_1C421618C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 64);
  swift_beginAccess();
  *(void *)(v3 + 16) = a1;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRetain();
}

unint64_t sub_1C42161E0()
{
  unint64_t result = qword_1EA39ECF0;
  if (!qword_1EA39ECF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA39ECE8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_1EA39ECF0);
  }
  return result;
}

uint64_t sub_1C421623C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C42148B0(a1, a2, a3, v4[8], v4[2], v4[5], a4);
}

uint64_t sub_1C4216270(uint64_t a1, void *a2)
{
  return sub_1C4214C30(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), a2);
}

uint64_t sub_1C42162A8()
{
  uint64_t result = sub_1C4496498();
  if (v1 <= 0x3F) {
    return swift_initClassMetadata2();
  }
  return result;
}

void sub_1C4216390(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v7 = (sqlite3_stmt *)sub_1C3F5FA40();
  if (v3) {
    return;
  }
  uint64_t v8 = v7;
  if (sqlite3_step(v7) != 101)
  {
    if (!sqlite3_errmsg(*(sqlite3 **)(v4 + 32)))
    {
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
    uint64_t v16 = sub_1C4497288();
    uint64_t v18 = v17;
    sub_1C3FE3570();
    swift_allocError();
    *(void *)uint64_t v19 = v16;
    *(void *)(v19 + 8) = v18;
    *(unsigned char *)(v19 + 16) = 2;
    swift_willThrow();
LABEL_9:
    sqlite3_finalize(v8);
    return;
  }
  uint64_t v9 = sqlite3_finalize(v8);
  if (a1)
  {
    uint64_t v10 = *(sqlite3 **)(v4 + 32);
    uint64_t v11 = *(sqlite3_snapshot **)(a1 + 16);
    swift_retain();
    if (sqlite3_snapshot_open(v10, "main", v11))
    {
      if (sqlite3_errmsg(*(sqlite3 **)(v4 + 32)))
      {
        uint64_t v12 = sub_1C4497288();
        uint64_t v14 = v13;
        sub_1C3FE3570();
        swift_allocError();
        *(void *)uint64_t v15 = v12;
        *(void *)(v15 + 8) = v14;
        *(unsigned char *)(v15 + 16) = 4;
        swift_willThrow();
        swift_release();
        return;
      }
      goto LABEL_19;
    }
    uint64_t v9 = swift_release();
  }
  a2(v9);
  uint64_t v8 = (sqlite3_stmt *)sub_1C3F5FA40();
  if (sqlite3_step(v8) == 101) {
    goto LABEL_9;
  }
  if (!sqlite3_errmsg(*(sqlite3 **)(v4 + 32)))
  {
LABEL_21:
    __break(1u);
    return;
  }
  uint64_t v20 = sub_1C4497288();
  uint64_t v22 = v21;
  sub_1C3FE3570();
  uint64_t v23 = (void *)swift_allocError();
  *(void *)uint64_t v24 = v20;
  *(void *)(v24 + 8) = v22;
  *(unsigned char *)(v24 + 16) = 2;
  swift_willThrow();
  sqlite3_finalize(v8);
  uint64_t v25 = (sqlite3_stmt *)sub_1C3F5FA40();
  if (sqlite3_step(v25) == 101)
  {
    sqlite3_finalize(v25);
    swift_willThrow();
    return;
  }
  if (!sqlite3_errmsg(*(sqlite3 **)(v4 + 32)))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v26 = sub_1C4497288();
  uint64_t v28 = v27;
  sub_1C3FE3570();
  swift_allocError();
  *(void *)uint64_t v29 = v26;
  *(void *)(v29 + 8) = v28;
  *(unsigned char *)(v29 + 16) = 2;
  swift_willThrow();
  sqlite3_finalize(v25);
}

uint64_t sub_1C421666C()
{
  uint64_t v0 = swift_allocObject();
  sub_1C421836C();
  return v0;
}

uint64_t sub_1C42166A4(char *a1, char *a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v16 = swift_allocObject();
  sub_1C4218414(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v16;
}

void sub_1C4216750()
{
}

uint64_t sub_1C42167A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32) + *(void *)(**(void **)(v1 + 32) + 96);
  swift_beginAccess();
  type metadata accessor for Capsule();
  uint64_t v4 = sub_1C4497B38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C4216878()
{
  return sub_1C4497A58();
}

uint64_t sub_1C42168D8(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v98 = a1;
  uint64_t v3 = *v1;
  uint64_t v99 = (int *)type metadata accessor for PartiallyOrderedReferenceMap();
  MEMORY[0x1F4188790](v99);
  uint64_t v5 = (char *)&v86 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v3 + 80);
  uint64_t v7 = *(void *)(v3 + 88);
  uint64_t v118 = type metadata accessor for Capsule();
  uint64_t v8 = sub_1C4497B38();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v86 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v86 - v15;
  uint64_t v17 = v2[9];
  uint64_t v18 = v100;
  uint64_t result = sub_1C4497A58();
  if (!v18)
  {
    *(void *)&long long v100 = v16;
    uint64_t v89 = v5;
    char v90 = v14;
    uint64_t v93 = 0;
    uint64_t v94 = v7;
    uint64_t v88 = v11;
    uint64_t v95 = v6;
    uint64_t v97 = v17;
    uint64_t v20 = MEMORY[0x1E4FBC860];
    unint64_t v21 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
    unint64_t v22 = sub_1C3F7E37C(v20);
    unint64_t v116 = v21;
    unint64_t v117 = v22;
    uint64_t v23 = (void *)v2[5];
    uint64_t v24 = v2[4] + *(void *)(*(void *)v2[4] + 96);
    swift_beginAccess();
    uint64_t v25 = v118;
    uint64_t v96 = *(void *)(v118 - 8);
    uint64_t v26 = v96 + 48;
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v96 + 48);
    uint64_t result = v27(v24, 1, v118);
    if (result != 1)
    {
      id v28 = v23;
      swift_retain();
      Capsule.finalizeTimestamps(_:)((uint64_t)v28, v25);
      swift_endAccess();
      swift_release();

      uint64_t v29 = (void *)v2[5];
      type metadata accessor for CREncoder();
      uint64_t inited = swift_initStackObject();
      uint64_t v31 = MEMORY[0x1E4FBC868];
      *(void *)(inited + 32) = MEMORY[0x1E4FBC868];
      *(void *)(inited + 40) = v20;
      *(void *)(inited + 48) = v20;
      *(void *)(inited + 56) = v31;
      *(void *)(inited + 64) = v20;
      *(void *)(inited + 80) = 0;
      *(void *)(inited + 88) = 0;
      *(void *)(inited + 16) = v29;
      *(void *)(inited + 24) = v20;
      *(unsigned char *)(inited + 72) = 1;
      uint64_t v32 = v100;
      sub_1C42167A0(v100);
      uint64_t v91 = v27;
      uint64_t v92 = v26;
      uint64_t result = v27(v32, 1, v25);
      if (result == 1)
      {
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        return result;
      }
      id v33 = v29;
      uint64_t v34 = v93;
      long long v35 = sub_1C40058B4();
      uint64_t v37 = v32;
      uint64_t v38 = v96;
      if (v34)
      {
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v32, v25);
        sub_1C4497A58();
        swift_willThrow();
LABEL_7:
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
      uint64_t v39 = (uint64_t)v35;
      uint64_t v40 = v36;
      swift_release();
      uint64_t v41 = (uint64_t)v2;
      uint64_t v44 = *(void (**)(void, void))(v38 + 8);
      uint64_t v43 = v38 + 8;
      uint64_t v42 = v44;
      uint64_t v45 = ((uint64_t (*)(uint64_t, uint64_t))v44)(v37, v25);
      *(void *)&long long v100 = &v86;
      MEMORY[0x1F4188790](v45);
      *(&v86 - 4) = v41;
      *(&v86 - 3) = v39;
      *(&v86 - 2) = v40;
      *(&v86 - 1) = (uint64_t)&v116;
      sub_1C4497A58();
      uint64_t v93 = v42;
      uint64_t v86 = v39;
      unint64_t v87 = v40;
      uint64_t v46 = (uint64_t)v90;
      sub_1C42167A0((uint64_t)v90);
      uint64_t result = v91(v46, 1, v25);
      if (result == 1) {
        goto LABEL_20;
      }
      uint64_t v47 = v41;
      uint64_t v48 = (uint64_t)v89;
      sub_1C3FB05E4(v25, (uint64_t)v89);
      uint64_t v96 = v43;
      v93(v46, v25);
      uint64_t v49 = *(void *)(v41 + 16);
      uint64_t v50 = *(int **)(v41 + 24);
      uint64_t v51 = *(void *)(v48 + v99[5]);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v52 = swift_bridgeObjectRetain();
      uint64_t v53 = sub_1C40615F4(v52);
      sub_1C42276D0(v48, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
      *(void *)&long long v108 = v51;
      *((void *)&v108 + 1) = v53;
      long long v109 = xmmword_1C449E3E0;
      long long v110 = 0u;
      long long v111 = 0u;
      uint64_t v112 = v49;
      BOOL v113 = v50;
      char v114 = 0;
      uint64_t v115 = 0;
      sub_1C423170C((uint64_t *)&v102);
      uint64_t v54 = v104;
      if (v104)
      {
        uint64_t v56 = (void *)*((void *)&v102 + 1);
        uint64_t v55 = (void *)v102;
        long long v57 = v103;
        uint64_t v58 = v105;
        uint64_t v59 = v106;
        uint64_t v60 = v107;
        do
        {
          v101[0] = v55;
          v101[1] = v56;
          long long v100 = v57;
          long long v102 = v57;
          *(void *)&long long v103 = v54;
          *((void *)&v103 + 1) = v58;
          uint64_t v104 = v59;
          uint64_t v105 = v60;
          sub_1C421DE84((uint64_t)v101, &v102, v47, (uint64_t)&v116);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          sub_1C3F7E2CC((uint64_t)v55, (unint64_t)v56);
          sub_1C423170C((uint64_t *)&v102);
          uint64_t v56 = (void *)*((void *)&v102 + 1);
          uint64_t v55 = (void *)v102;
          long long v57 = v103;
          uint64_t v54 = v104;
          uint64_t v58 = v105;
          uint64_t v59 = v106;
          uint64_t v60 = v107;
        }
        while (v104);
      }
      uint64_t v61 = *((void *)&v109 + 1);
      uint64_t v99 = v113;
      *(void *)&long long v100 = v112;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C407D5A0(v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v62 = (uint64_t)v88;
      sub_1C42167A0((uint64_t)v88);
      uint64_t v63 = v118;
      uint64_t result = v91(v62, 1, v118);
      if (result == 1) {
        goto LABEL_21;
      }
      Capsule.version.getter(v63, &v108);
      long long v100 = v108;
      v93(v62, v63);
      *(_OWORD *)(v47 + 16) = v100;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v64 = type metadata accessor for CRSQLStoreBundleCapsule();
      uint64_t v65 = *(void **)(v47 + 40);
      uint64_t v66 = swift_allocObject();
      uint64_t v67 = v65;
      swift_retain();
      sub_1C421E988(v67, v47);
      uint64_t v68 = (void *)MEMORY[0x1E4FBC860];
      *(void *)&long long v108 = v66;
      swift_beginAccess();
      unint64_t v69 = v116;
      uint64_t v70 = v117;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C413DDA4(v69, v70, 0, v64, (uint64_t)&off_1F1F9B858);
      uint64_t v72 = v71;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v73 = *(void *)(*(void *)(v66 + 32) + OBJC_IVAR___CRContext_assetManager);
      v101[0] = v68;
      uint64_t v74 = *(void *)(v47 + 56);
      swift_retain();
      sub_1C3FE3CD8(v74, v101);
      uint64_t v75 = swift_bridgeObjectRetain();
      sub_1C421C618(v75, v98);
      *(void *)&long long v100 = v73;
      uint64_t v96 = v72;
      swift_bridgeObjectRelease();
      uint64_t v76 = qword_1EBBC10F0;
      id v77 = *(id *)(v47 + 40);
      if (v76 != -1) {
        swift_once();
      }
      uint64_t v78 = *(void **)(qword_1EBBC5A60 + 40);
      uint64_t v79 = swift_allocObject();
      *(void *)(v79 + 16) = v77;
      uint64_t v80 = v79;
      uint64_t v118 = v79;
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = sub_1C3F5F33C;
      *(void *)(v81 + 24) = v80;
      *(void *)&long long v110 = sub_1C3F5F2E0;
      *((void *)&v110 + 1) = v81;
      *(void *)&long long v108 = MEMORY[0x1E4F143A8];
      *((void *)&v108 + 1) = 1107296256;
      *(void *)&long long v109 = sub_1C3F5F2B8;
      *((void *)&v109 + 1) = &block_descriptor_68;
      uint64_t v82 = _Block_copy(&v108);
      uint64_t v83 = v77;
      uint64_t v84 = v82;
      uint64_t v99 = v83;
      uint64_t v85 = v78;
      swift_retain();
      swift_release();
      dispatch_sync(v85, v84);

      _Block_release(v84);
      LOBYTE(v80) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      sub_1C3F7E2CC(v86, v87);

      swift_release();
      uint64_t result = swift_release();
      if ((v80 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        sub_1C4497A58();
        sub_1C421C0A8(v96, v98);
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_1C4217420(char *a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1C421E988(a1, a2);
  return v4;
}

uint64_t sub_1C4217478()
{
  return sub_1C4497A58();
}

uint64_t sub_1C42174D0()
{
  return sub_1C4497A58();
}

uint64_t sub_1C4217524()
{
  return sub_1C3FE1B18();
}

uint64_t sub_1C4217548(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v9 = v8;
  uint64_t v53 = a7;
  uint64_t v54 = a3;
  uint64_t v49 = a2;
  uint64_t v50 = a1;
  uint64_t v62 = *MEMORY[0x1E4F143B8];
  uint64_t v13 = sub_1C44968B8();
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for Proto_Document(0);
  uint64_t v17 = MEMORY[0x1F4188790](v16);
  uint64_t v52 = (uint64_t)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a6;
  uint64_t v19 = *(void *)(a6 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v55 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *a4;
  unint64_t v22 = a4[1];
  uint64_t v24 = *(void *)(v7 + 56);
  *(void *)&long long v57 = a5;
  uint64_t v51 = v20;
  switch(v22 >> 62)
  {
    case 1uLL:
      uint64_t v47 = v19;
      if (v23 >> 32 < (int)v23) {
        __break(1u);
      }
      uint64_t v48 = v15;
      swift_retain_n();
      sub_1C3F7E324(v23, v22);
      sub_1C4225718((int)v23, v23 >> 32, v24, (uint64_t *)&v59);
      if (v8)
      {
        sub_1C3F7E2CC(v23, v22);
        return swift_release();
      }
      sub_1C3F7E2CC(v23, v22);
      swift_release();
      uint64_t v19 = v47;
      goto LABEL_14;
    case 2uLL:
      uint64_t v48 = v15;
      uint64_t v26 = v19;
      uint64_t v27 = *(void *)(v23 + 16);
      uint64_t v28 = *(void *)(v23 + 24);
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_1C4225718(v27, v28, v24, (uint64_t *)&v59);
      if (v9)
      {
        swift_release();
        swift_release();
        return swift_release();
      }
      swift_release();
      swift_release();
      swift_release();
      uint64_t v19 = v26;
      goto LABEL_14;
    case 3uLL:
      *(void *)((char *)&v58 + 6) = 0;
      *(void *)&long long v58 = 0;
      swift_retain();
      uint64_t v25 = (char *)&v58;
      goto LABEL_9;
    default:
      *(void *)&long long v58 = v23;
      WORD4(v58) = v22;
      BYTE10(v58) = BYTE2(v22);
      BYTE11(v58) = BYTE3(v22);
      BYTE12(v58) = BYTE4(v22);
      BYTE13(v58) = BYTE5(v22);
      swift_retain();
      uint64_t v25 = (char *)&v58 + BYTE6(v22);
LABEL_9:
      sub_1C3FE190C((uint64_t)&v58, (uint64_t)v25, v24, (uint64_t *)&v59);
      if (v8) {
        return swift_release();
      }
      swift_release();
LABEL_14:
      unint64_t v30 = *((void *)&v59 + 1);
      if (*((void *)&v59 + 1) >> 60 == 15)
      {
        sub_1C3FE3FF0();
        swift_allocError();
        *(void *)uint64_t v31 = 0xD00000000000001BLL;
        *(void *)(v31 + 8) = 0x80000001C44B2820;
        *(unsigned char *)(v31 + 16) = 0;
        return swift_willThrow();
      }
      else
      {
        uint64_t v32 = v59;
        long long v33 = v60;
        sub_1C3F7E324(v59, *((unint64_t *)&v59 + 1));
        sub_1C3F7E324(v33, *((unint64_t *)&v33 + 1));
        sub_1C3F7E2CC(v33, *((unint64_t *)&v33 + 1));
        type metadata accessor for CRDecoder(0);
        swift_allocObject();
        uint64_t v34 = v57;
        swift_retain();
        uint64_t v35 = sub_1C3FFF55C(v32, v30, v34);
        uint64_t v46 = v32;
        unint64_t v45 = v30;
        uint64_t v48 = (char *)v33;
        (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v53 + 16) + 8) + 8))(v35, v56);
        uint64_t v47 = v19;
        uint64_t v36 = swift_allocObject();
        uint64_t v37 = MEMORY[0x1E4FBC860];
        *(void *)(v36 + 16) = 0;
        *(void *)(v36 + 24) = v37;
        uint64_t v38 = MEMORY[0x1E4FBC868];
        *(void *)(v36 + 32) = v37;
        *(void *)(v36 + 40) = v38;
        *(unsigned char *)(v36 + 48) = 0;
        *(void *)(v36 + 56) = 0;
        uint64_t v39 = v36 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
        uint64_t v40 = type metadata accessor for Proto_CRDT(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v39, 1, 1, v40);
        uint64_t v41 = v36 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
        uint64_t v42 = type metadata accessor for Proto_Value(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v41, 1, 1, v42);
        *(void *)(v36 + 16) = v57;
        swift_retain();
        swift_release();
        *(unsigned char *)(v36 + 49) = 1;
        uint64_t v61 = 0;
        long long v59 = 0u;
        long long v60 = 0u;
        uint64_t v43 = (uint64_t)v48;
        sub_1C3F7E324((uint64_t)v48, *((unint64_t *)&v33 + 1));
        sub_1C44968A8();
        sub_1C42275C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
        sub_1C4496A98();
        uint64_t v44 = v52;
        sub_1C3FFC790(v52, &v58);
        sub_1C42276D0(v44, type metadata accessor for Proto_Document);
        sub_1C4226E2C(v46, v45, v43, *((unint64_t *)&v33 + 1));
        swift_setDeallocating();
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C3F962E0(v36 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
        sub_1C3F962E0(v36 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
        swift_deallocClassInstance();
        long long v57 = v58;
        uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v47 + 32))(v50, v55, v56);
        *uint64_t v49 = v57;
      }
      return result;
  }
}

uint64_t sub_1C4217D1C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v32 = a5;
  uint64_t v6 = v5;
  uint64_t v45 = a4;
  uint64_t v10 = sub_1C4496498();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t aBlock = sub_1C4496548();
  uint64_t v36 = v13;
  uint64_t v43 = 47;
  unint64_t v44 = 0xE100000000000000;
  uint64_t v41 = 95;
  unint64_t v42 = 0xE100000000000000;
  sub_1C4028934();
  sub_1C4497B98();
  swift_bridgeObjectRelease();
  sub_1C4496438();
  swift_bridgeObjectRelease();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  uint64_t v15 = (uint64_t *)(v14 + 16);
  if (a3)
  {
    id v30 = a3;
    uint64_t v28 = v12;
    uint64_t v29 = sub_1C4496418();
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = v6;
    v16[3] = v14;
    uint64_t v31 = v14;
    v16[4] = v45;
    v16[5] = a1;
    v16[6] = a2;
    uint64_t v17 = swift_allocObject();
    uint64_t v27 = sub_1C4227408;
    *(void *)(v17 + 16) = sub_1C4227408;
    *(void *)(v17 + 24) = v16;
    uint64_t v39 = sub_1C4227950;
    uint64_t v40 = v17;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v36 = 1107296256;
    uint64_t v37 = sub_1C4023C54;
    uint64_t v38 = &block_descriptor_43;
    uint64_t v18 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_1C3F7E324(a1, a2);
    swift_retain();
    swift_release();
    uint64_t v20 = (void *)v29;
    id v19 = v30;
    objc_msgSend(v30, sel_coordinateReadingItemAtURL_options_error_byAccessor_, v29, 0, 0, v18);

    _Block_release(v18);
    LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (v18)
    {
      __break(1u);
      return result;
    }
    uint64_t v22 = (uint64_t)v27;
    uint64_t v12 = v28;
  }
  else
  {
    sub_1C421E604((uint64_t)v12, v5, v14, v45, a1, a2);
    uint64_t v22 = 0;
  }
  swift_beginAccess();
  uint64_t v23 = *v15;
  if (*v15)
  {
    uint64_t v24 = *(void (**)(char *, uint64_t))(v33 + 8);
    swift_retain();
    v24(v12, v34);
    swift_release();
    uint64_t result = sub_1C3F7E5BC(v22);
    *uint64_t v32 = v23;
  }
  else
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v25 = 0xD000000000000017;
    *(void *)(v25 + 8) = 0x80000001C44B3340;
    *(unsigned char *)(v25 + 16) = 0;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v12, v34);
    swift_release();
    return sub_1C3F7E5BC(v22);
  }
  return result;
}

uint64_t sub_1C4218140(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v6 = (uint64_t (*)(uint64_t *))result;
    unint64_t v7 = 0;
    uint64_t v8 = MEMORY[0x1E4FBC860];
    uint64_t v13 = (uint64_t (*)(uint64_t *))result;
    while (v7 < *(void *)(a3 + 16))
    {
      uint64_t v9 = *(void *)(a3 + 8 * v7 + 32);
      uint64_t v14 = v9;
      swift_retain();
      char v10 = v6(&v14);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        return v8;
      }
      if (v10)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v15 = v8;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_1C40126A0(0, *(void *)(v8 + 16) + 1, 1);
          uint64_t v8 = v15;
        }
        unint64_t v12 = *(void *)(v8 + 16);
        unint64_t v11 = *(void *)(v8 + 24);
        if (v12 >= v11 >> 1)
        {
          uint64_t result = sub_1C40126A0(v11 > 1, v12 + 1, 1);
          uint64_t v8 = v15;
        }
        *(void *)(v8 + 16) = v12 + 1;
        *(void *)(v8 + 8 * v12 + 32) = v9;
        uint64_t v6 = v13;
      }
      else
      {
        uint64_t result = swift_release();
      }
      if (v5 == ++v7) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
LABEL_14:
    swift_bridgeObjectRelease();
    return v8;
  }
  return result;
}

uint64_t sub_1C42182A8()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  type metadata accessor for Capsule();
  uint64_t v2 = sub_1C4497B38();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1C4218354()
{
  return sub_1C421A698((void (*)(void))sub_1C42182A8);
}

uint64_t sub_1C421836C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return v0;
}

uint64_t sub_1C4218414(char *a1, char *a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v193 = a8;
  int v184 = a7;
  int v185 = a6;
  uint64_t v194 = a5;
  int v192 = a4;
  uint64_t v195 = a3;
  unint64_t v213 = a2;
  uint64_t v208 = a1;
  uint64_t v190 = a10;
  uint64_t v189 = (char *)a9;
  uint64_t v220 = *MEMORY[0x1E4F143B8];
  uint64_t v186 = *v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  MEMORY[0x1F4188790](v11 - 8);
  uint64_t v182 = (uint64_t)&v175 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_1C4496498();
  uint64_t v188 = *(void *)(v209 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v209);
  uint64_t v175 = (char *)&v175 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  v176 = (char *)&v175 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v177 = (char *)&v175 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v183 = (char *)&v175 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v179 = (char *)&v175 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v180 = (char *)&v175 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v181 = (char *)&v175 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v191 = (char *)&v175 - v27;
  uint64_t v203 = (void *)sub_1C4497A38();
  uint64_t v214 = *(v203 - 1);
  MEMORY[0x1F4188790](v203);
  uint64_t v202 = (char *)&v175 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1C4497A08();
  MEMORY[0x1F4188790](v29);
  uint64_t v210 = (char *)&v175 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_1C4496DA8();
  MEMORY[0x1F4188790](v31 - 8);
  uint64_t v32 = (void *)sub_1C4496678();
  id v207 = v32;
  uint64_t v33 = *((void *)v32 - 1);
  MEMORY[0x1F4188790](v32);
  uint64_t v35 = (char *)&v175 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x1E4FBC868];
  long long v212 = v10;
  long long v10[2] = MEMORY[0x1E4FBC868];
  v10[3] = v36;
  unint64_t v211 = sub_1C3F60AA0();
  uint64_t v218 = 0x746972772D6C7173;
  unint64_t v219 = 0xEA00000000002D65;
  sub_1C4496668();
  uint64_t v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E0);
  uint64_t v37 = swift_allocObject();
  long long v204 = xmmword_1C449B4A0;
  *(_OWORD *)(v37 + 16) = xmmword_1C449B4A0;
  char v38 = sub_1C4496658();
  uint64_t v39 = MEMORY[0x1E4FBC358];
  uint64_t v40 = MEMORY[0x1E4FBC3B0];
  *(void *)(v37 + 56) = MEMORY[0x1E4FBC358];
  *(void *)(v37 + 64) = v40;
  uint64_t v41 = v40;
  *(unsigned char *)(v37 + 32) = v38;
  uint64_t v42 = sub_1C4496658();
  *(void *)(v37 + 96) = v39;
  *(void *)(v37 + 104) = v41;
  *(unsigned char *)(v37 + 72) = BYTE1(v42);
  sub_1C44971E8();
  uint64_t v43 = *(void (**)(char *, id))(v33 + 8);
  uint64_t v206 = v33 + 8;
  uint64_t v205 = v43;
  v43(v35, v32);
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4496D88();
  uint64_t v218 = MEMORY[0x1E4FBC860];
  uint64_t v200 = sub_1C42275C8(qword_1EBBC1060, MEMORY[0x1E4FBCC10]);
  unint64_t v199 = (uint64_t *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC1040);
  v201 = (const char *)sub_1C3F815A4((unint64_t *)&qword_1EBBC1050, (uint64_t *)&unk_1EBBC1040);
  uint64_t v187 = v29;
  sub_1C4497BF8();
  LODWORD(v198) = *MEMORY[0x1E4FBCC58];
  unint64_t v44 = *(void (**)(void))(v214 + 104);
  v214 += 104;
  uint64_t v197 = (void (*)(char *, char *, void *))v44;
  uint64_t v45 = v203;
  v44(v202);
  uint64_t v46 = sub_1C4497A78();
  uint64_t v47 = v212;
  v212[8] = v46;
  uint64_t v218 = 0x646165722D6C7173;
  unint64_t v219 = 0xE90000000000002DLL;
  sub_1C4496668();
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = v204;
  char v49 = sub_1C4496658();
  uint64_t v50 = MEMORY[0x1E4FBC358];
  *(void *)(v48 + 56) = MEMORY[0x1E4FBC358];
  uint64_t v51 = MEMORY[0x1E4FBC3B0];
  *(void *)(v48 + 64) = MEMORY[0x1E4FBC3B0];
  *(unsigned char *)(v48 + 32) = v49;
  uint64_t v52 = sub_1C4496658();
  *(void *)(v48 + 96) = v50;
  *(void *)(v48 + 104) = v51;
  *(unsigned char *)(v48 + 72) = BYTE1(v52);
  sub_1C44971E8();
  v205(v35, v207);
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4496D88();
  uint64_t v218 = MEMORY[0x1E4FBC860];
  sub_1C4497BF8();
  uint64_t v53 = v202;
  v197(v202, (char *)v198, v45);
  v47[9] = sub_1C4497A78();
  uint64_t v218 = 0x65722D7465737361;
  unint64_t v219 = 0xEB000000002D6461;
  sub_1C4496668();
  uint64_t v54 = swift_allocObject();
  *(_OWORD *)(v54 + 16) = v204;
  char v55 = sub_1C4496658();
  uint64_t v56 = MEMORY[0x1E4FBC358];
  *(void *)(v54 + 56) = MEMORY[0x1E4FBC358];
  uint64_t v57 = MEMORY[0x1E4FBC3B0];
  *(void *)(v54 + 64) = MEMORY[0x1E4FBC3B0];
  *(unsigned char *)(v54 + 32) = v55;
  uint64_t v58 = sub_1C4496658();
  *(void *)(v54 + 96) = v56;
  *(void *)(v54 + 104) = v57;
  *(unsigned char *)(v54 + 72) = BYTE1(v58);
  sub_1C44971E8();
  uint64_t v196 = (uint64_t)v35;
  v205(v35, v207);
  uint64_t v59 = v188;
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4496D88();
  uint64_t v60 = MEMORY[0x1E4FBC860];
  uint64_t v218 = MEMORY[0x1E4FBC860];
  sub_1C4497BF8();
  v197(v53, (char *)v198, v203);
  uint64_t v61 = v212;
  uint64_t v62 = v191;
  v61[10] = sub_1C4497A78();
  *((unsigned char *)v61 + qword_1EA3B89A8) = 0;
  uint64_t v63 = qword_1EA3B89A0;
  *(void *)((char *)v61 + qword_1EA3B89A0) = v60;
  uint64_t v64 = (char *)v61;
  unint64_t v211 = (unint64_t)v61 + qword_1EA3B89D0;
  *(void *)((char *)v61 + qword_1EA3B89D0) = 0;
  uint64_t v203 = self;
  id v65 = objc_msgSend(v203, sel_defaultManager);
  sub_1C4496438();
  sub_1C4496488();
  uint64_t v66 = *(char **)(v59 + 8);
  uint64_t v214 = v59 + 8;
  uint64_t v67 = v66;
  ((void (*)(char *, uint64_t))v66)(v62, v209);
  uint64_t v68 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  LOBYTE(v61) = objc_msgSend(v65, sel_fileExistsAtPath_, v68);

  if ((v61 & 1) == 0)
  {
    if (v192)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v79 = 0xD000000000000014;
      *(void *)(v79 + 8) = 0x80000001C44B3380;
      *(unsigned char *)(v79 + 16) = 0;
      swift_willThrow();

      swift_release();
      sub_1C3F962E0(v195, &qword_1EBBC0760);
      uint64_t v80 = v209;
      uint64_t v81 = (void (*)(char *, uint64_t))v67;
      ((void (*)(char *, uint64_t))v67)(v213, v209);
    }
    else
    {
      id v82 = objc_msgSend(v203, sel_defaultManager);
      sub_1C4496438();
      uint64_t v83 = (void *)sub_1C4496418();
      ((void (*)(char *, uint64_t))v67)(v62, v209);
      uint64_t v218 = 0;
      unsigned __int8 v84 = objc_msgSend(v82, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v83, 1, 0, &v218);

      id v85 = (id)v218;
      if (v84) {
        goto LABEL_2;
      }
      uint64_t v86 = v85;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C44963A8();

      swift_willThrow();
      swift_release();
      sub_1C3F962E0(v195, &qword_1EBBC0760);
      uint64_t v80 = v209;
      uint64_t v81 = (void (*)(char *, uint64_t))v67;
      ((void (*)(char *, uint64_t))v67)(v213, v209);
    }
    int v87 = 0;
LABEL_43:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v87)
    {
      swift_release();

      swift_release();
    }

    if (v87)
    {
      v81(&v64[qword_1EA3B8958], v80);
      v81(&v64[qword_1EA3B89D8], v80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_deallocPartialClassInstance();
    return (uint64_t)v64;
  }
LABEL_2:
  uint64_t v200 = v63;
  uint64_t v69 = sub_1C411EF0C(v193);
  swift_bridgeObjectRelease();
  uint64_t v70 = sub_1C411DBB4(v69);
  swift_bridgeObjectRelease();
  uint64_t v218 = v70;
  swift_retain();
  uint64_t v71 = v178;
  sub_1C42259A4(&v218, sub_1C411E920, sub_1C42260B8);
  if (!v71)
  {
    uint64_t v210 = 0;
    swift_release();
    uint64_t v72 = qword_1EA3B89B0;
    *(void *)&v64[qword_1EA3B89B0] = v218;
    uint64_t v73 = v208;
    uint64_t v74 = v190;
    uint64_t v202 = v67;
    if (!v189)
    {
      uint64_t v78 = 0;
LABEL_12:
      *(void *)&v64[qword_1EA3B89C8] = v78;
      uint64_t v88 = (void *)v211;
      swift_beginAccess();
      *uint64_t v88 = v78;
      *(void *)&long long v204 = v78;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRelease();
      if (v74)
      {
        if (*v88)
        {
          uint64_t v89 = swift_bridgeObjectRetain();
          char v90 = v210;
          uint64_t v91 = sub_1C4226C84(v89, v74);
          uint64_t v210 = v90;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v91 = 0;
        }
        *uint64_t v88 = v91;
        swift_bridgeObjectRelease();
      }
      uint64_t v92 = (char *)v212;
      uint64_t v93 = v213;
      uint64_t v94 = *(void *)((char *)v212 + v72);
      unint64_t v199 = (void *)((char *)v212 + qword_1EA3B89B8);
      uint64_t *v199 = v94;
      *((void *)v92 + 5) = v73;
      uint64_t v198 = OBJC_IVAR___CRContext_assetManager;
      v201 = *(const char **)&v73[OBJC_IVAR___CRContext_assetManager];
      *((void *)v92 + 6) = v201;
      uint64_t v95 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
      uint64_t v96 = v209;
      v95(&v92[qword_1EA3B8958], v93, v209);
      uint64_t v97 = v182;
      sub_1C3F970C4(v195, v182, &qword_1EBBC0760);
      uint64_t v98 = v179;
      v95(v179, v93, v96);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v97, 1, v96) == 1)
      {
        uint64_t v99 = *(void (**)(char *, char *, uint64_t))(v59 + 32);
        uint64_t v100 = (v59 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
        uint64_t v101 = v180;
        v99(v180, v98, v96);
        long long v102 = (void (*)(void, void, void))v99;
        swift_bridgeObjectRetain();
        long long v103 = v208;
        swift_retain();
        sub_1C3F962E0(v97, &qword_1EBBC0760);
        uint64_t v104 = (void (*)(char *, uint64_t))v202;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v105 = v208;
        swift_retain();
        uint64_t v104 = (void (*)(char *, uint64_t))v202;
        ((void (*)(char *, uint64_t))v202)(v98, v96);
        uint64_t v106 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 32);
        uint64_t v100 = (v59 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
        uint64_t v101 = v180;
        v106(v180, v97, v96);
        long long v102 = (void (*)(void, void, void))v106;
      }
      uint64_t v107 = v181;
      sub_1C4496428();
      v104(v101, v96);
      uint64_t v64 = (char *)v212;
      long long v108 = (char *)v212 + qword_1EA3B89D8;
      uint64_t v197 = (void (*)(char *, char *, void *))v102;
      uint64_t v193 = v100;
      v102((char *)v212 + qword_1EA3B89D8, v107, v96);
      *((void *)v64 + 4) = v194;
      v64[qword_1EA3B8998] = v184 & 1;
      swift_retain();
      v201 = "allowedEncodings";
      long long v109 = v183;
      sub_1C4496438();
      uint64_t v110 = sub_1C4496488();
      unint64_t v112 = v111;
      uint64_t v113 = v96;
      char v114 = v104;
      v104(v109, v113);
      uint64_t v115 = &v208[OBJC_IVAR___CRContext_encryptionDelegate];
      sub_1C3F970C4((uint64_t)&v208[OBJC_IVAR___CRContext_encryptionDelegate], (uint64_t)&v218, qword_1EBBC0C90);
      uint64_t v116 = type metadata accessor for CRSQLStore();
      swift_allocObject();
      uint64_t v117 = v204;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v118 = v210;
      uint64_t v119 = sub_1C3FDB4C8(v110, v112, (uint64_t)&v218, 1, v192 & 1, v185 & 1, (uint64_t)&unk_1F1F9C2E8, v117);
      if (!v118)
      {
        uint64_t v124 = v119;
        uint64_t v210 = v108;
        swift_bridgeObjectRelease();
        uint64_t v125 = swift_bridgeObjectRelease();
        *((void *)v64 + 7) = v124;
        id v126 = v208;
        uint64_t v81 = v114;
        if ((*(unsigned char *)(v124 + 66) & 1) == 0)
        {
LABEL_38:
          if (*(unsigned __int16 *)(v124 + 64) > 2u)
          {
LABEL_41:
            uint64_t v168 = *((void *)v64 + 7);
            if ((*(unsigned char *)(v168 + 70) & 1) == 0)
            {
              signed __int16 v169 = *(_WORD *)(v168 + 68);
              uint64_t v170 = (uint64_t *)v211;
              swift_beginAccess();
              sub_1C421A35C(v169, v170);
              uint64_t v125 = swift_endAccess();
            }
            MEMORY[0x1F4188790](v125);
            *(&v175 - 2) = v172;
            *(&v175 - 1) = v210;
            type metadata accessor for CRAssetWatchedDirectory();
            sub_1C4497A58();
            swift_release();
            uint64_t v173 = v218;
            sub_1C3F962E0(v195, &qword_1EBBC0760);
            v81(v213, v209);

            *(void *)&v64[qword_1EA3B89C0] = v173;
            return (uint64_t)v64;
          }
          id v127 = v126;
LABEL_40:
          MEMORY[0x1F4188790](v125);
          *((unsigned char *)&v175 - 16) = v166;
          BOOL v167 = v199;
          swift_beginAccess();
          sub_1C421A264((void (*)(uint64_t *__return_ptr))sub_1C42275A0, v167, v216);
          uint64_t v125 = swift_endAccess();
          id v126 = v127;
          goto LABEL_41;
        }
LABEL_26:
        id v127 = v126;
        goto LABEL_40;
      }
      swift_bridgeObjectRelease();
      id v215 = v118;
      id v120 = v118;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC00F0);
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();

        swift_release();
        sub_1C3F962E0(v195, &qword_1EBBC0760);
        uint64_t v128 = v209;
        uint64_t v81 = v114;
        v114(v213, v209);

        int v87 = 1;
        uint64_t v80 = v128;
        goto LABEL_43;
      }
      uint64_t v190 = v116;
      uint64_t v210 = v108;
      uint64_t v121 = v216[0];
      char v122 = v217;
      uint64_t v81 = v114;
      if (v217 != 2)
      {
        uint64_t v129 = v216[1];
        swift_bridgeObjectRelease();

        swift_release();
        sub_1C4016918(v121, v129, v122);
        sub_1C3F962E0(v195, &qword_1EBBC0760);
        uint64_t v130 = v209;
        v114(v213, v209);

        int v87 = 1;
        uint64_t v80 = v130;
        goto LABEL_43;
      }
      if (v216[0])
      {
        swift_bridgeObjectRelease();

        swift_release();
        sub_1C3F962E0(v195, &qword_1EBBC0760);
        uint64_t v123 = v209;
        v114(v213, v209);

        int v87 = 1;
        uint64_t v80 = v123;
        goto LABEL_43;
      }
      uint64_t v189 = v115;

      uint64_t v131 = (uint64_t)v177;
      sub_1C4496438();
      id v126 = v208;
      if (v192)
      {
        id v132 = v203;
        id v133 = objc_msgSend(v203, sel_defaultManager);
        uint64_t v134 = (void *)sub_1C4496418();
        uint64_t v218 = 0;
        id v135 = objc_msgSend(v133, sel_URLForDirectory_inDomain_appropriateForURL_create_error_, 99, 1, v134, 1, &v218);

        id v136 = (id)v218;
        if (!v135)
        {
          id v160 = (id)v218;
          swift_bridgeObjectRelease();
          sub_1C44963A8();

          swift_willThrow();
          swift_release();
          sub_1C3F962E0(v195, &qword_1EBBC0760);
          uint64_t v161 = v131;
          uint64_t v80 = v209;
          uint64_t v81 = v114;
          v114(v213, v209);
          v114((char *)v161, v80);

          int v87 = 1;
          goto LABEL_43;
        }
        char v137 = v191;
        sub_1C4496478();
        id v138 = v136;

        sub_1C4496438();
        v114(v137, v209);
        id v139 = objc_msgSend(v132, sel_defaultManager);
        uint64_t v140 = (void *)sub_1C4496418();
        uint64_t v218 = 0;
        unsigned int v141 = objc_msgSend(v139, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v140, 1, 0, &v218);

        id v142 = (id)v218;
        if (v141)
        {
          uint64_t v218 = 0x2D65646172677055;
          unint64_t v219 = 0xE800000000000000;
          id v143 = v142;
          uint64_t v144 = v196;
          sub_1C4496668();
          sub_1C42275C8(&qword_1EA39ED30, MEMORY[0x1E4F27990]);
          id v145 = v207;
          sub_1C4498088();
          sub_1C4497268();
          swift_bridgeObjectRelease();
          v205((char *)v144, v145);
          sub_1C4496438();
          swift_bridgeObjectRelease();
          id v207 = objc_msgSend(v203, (SEL)&off_1E64C2338 + 3);
          char v146 = v191;
          uint64_t v147 = v213;
          sub_1C4496438();
          uint64_t v148 = (void *)sub_1C4496418();
          ((void (*)(char *, uint64_t))v202)(v146, v209);
          uint64_t v149 = (void *)sub_1C4496418();
          uint64_t v218 = 0;
          id v150 = v207;
          unsigned int v151 = objc_msgSend(v207, sel_copyItemAtURL_toURL_error_, v148, v149, &v218);

          id v152 = (id)v218;
          if (v151)
          {
            uint64_t v153 = v191;
            uint64_t v154 = v175;
            sub_1C4496438();
            uint64_t v155 = v209;
            uint64_t v81 = (void (*)(char *, uint64_t))v202;
            ((void (*)(char *, uint64_t))v202)(v154, v209);
            v81(v176, v155);
            v81((char *)v131, v155);
            v197((char *)v131, v153, (void *)v155);
            goto LABEL_34;
          }
          uint64_t v174 = v152;
          swift_bridgeObjectRelease();
          sub_1C44963A8();
          uint64_t v81 = (void (*)(char *, uint64_t))v202;

          swift_willThrow();
          swift_release();
          sub_1C3F962E0(v195, &qword_1EBBC0760);
          uint64_t v164 = v209;
          v81(v147, v209);
          unint64_t v163 = v175;
        }
        else
        {
          id v162 = (id)v218;
          swift_bridgeObjectRelease();
          sub_1C44963A8();
          uint64_t v81 = (void (*)(char *, uint64_t))v202;

          swift_willThrow();
          swift_release();
          sub_1C3F962E0(v195, &qword_1EBBC0760);
          unint64_t v163 = v213;
          uint64_t v164 = v209;
        }
        v81(v163, v164);
        v81(v176, v164);
        v81((char *)v131, v164);

        int v87 = 1;
        uint64_t v80 = v164;
        goto LABEL_43;
      }
LABEL_34:
      uint64_t v156 = v204;
      sub_1C423075C(v126, v131, v204);
      id v207 = (id)sub_1C4496488();
      uint64_t v158 = v157;
      sub_1C3F970C4((uint64_t)v189, (uint64_t)&v218, qword_1EBBC0C90);
      swift_allocObject();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v159 = (uint64_t)v207;
      id v207 = v158;
      uint64_t v165 = sub_1C3FDB4C8(v159, (unint64_t)v158, (uint64_t)&v218, 1, v192 & 1, v185 & 1, (uint64_t)&unk_1F1F9C2C0, v156);
      v81((char *)v131, v209);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *((void *)v64 + 7) = v165;

      uint64_t v124 = *((void *)v64 + 7);
      if ((*(unsigned char *)(v124 + 66) & 1) == 0) {
        goto LABEL_38;
      }
      goto LABEL_26;
    }
    uint64_t v75 = sub_1C411EE98((uint64_t)v189);
    swift_bridgeObjectRelease();
    uint64_t v76 = sub_1C411DAD0(v75);
    swift_bridgeObjectRelease();
    uint64_t v218 = v76;
    swift_retain();
    id v77 = v210;
    sub_1C42259A4(&v218, sub_1C411E90C, sub_1C4225A28);
    uint64_t v210 = v77;
    if (!v77)
    {
      swift_release();
      uint64_t v78 = v218;
      goto LABEL_12;
    }
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

int64_t sub_1C421A264@<X0>(void (*a1)(uint64_t *__return_ptr)@<X0>, uint64_t *a2@<X2>, unsigned char *a3@<X8>)
{
  uint64_t v4 = *a2;
  if (!*(void *)(*a2 + 16)) {
    goto LABEL_8;
  }
  unsigned int v5 = *(unsigned __int8 *)(v4 + 32);
  if (v5 <= 1)
  {
    a1(&v9);
    if (v9 > v5) {
      LOBYTE(v5) = v9;
    }
  }
  int64_t result = sub_1C3FFB060(v5, v4);
  if (v7)
  {
LABEL_8:
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v8 = 0xD000000000000012;
    *(void *)(v8 + 8) = 0x80000001C44B3320;
    *(unsigned char *)(v8 + 16) = 3;
    return swift_willThrow();
  }
  else if (result < 0)
  {
    __break(1u);
  }
  else
  {
    int64_t result = (int64_t)sub_1C4134C50(0, result);
    *a3 = v5;
  }
  return result;
}

int64_t sub_1C421A35C(signed __int16 a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (!*a2)
  {
    int v7 = 0;
    return v7 | ((v2 == 0) << 16);
  }
  uint64_t v9 = *a2;
  if (!*(void *)(v2 + 16)
    || (*(__int16 *)(v2 + 32) <= a1 ? (unsigned __int16 v4 = a1) : (unsigned __int16 v4 = *(_WORD *)(v2 + 32)),
        int64_t result = sub_1C3FFB0A8(v4, v2),
        (v6 & 1) != 0))
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v8 = 0xD000000000000016;
    *(void *)(v8 + 8) = 0x80000001C44B3300;
    *(unsigned char *)(v8 + 16) = 3;
    return swift_willThrow();
  }
  if ((result & 0x8000000000000000) == 0)
  {
    sub_1C4134DA8(0, result);
    *a2 = v9;
    int v7 = v4;
    return v7 | ((v2 == 0) << 16);
  }
  __break(1u);
  return result;
}

id *sub_1C421A45C()
{
  uint64_t v1 = v0;
  v12[1] = *(id *)MEMORY[0x1E4F143B8];
  sub_1C3FDA68C();
  if (*((unsigned char *)v0 + qword_1EA3B89A8) == 1)
  {
    id v2 = objc_msgSend(self, sel_defaultManager);
    uint64_t v3 = (void *)sub_1C4496418();
    v12[0] = 0;
    unsigned int v4 = objc_msgSend(v2, sel_removeItemAtURL_error_, v3, v12);

    if (v4)
    {
      id v5 = v12[0];
    }
    else
    {
      id v6 = v12[0];
      int v7 = (void *)sub_1C44963A8();

      swift_willThrow();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_release();
  swift_release();

  uint64_t v8 = (char *)v1 + qword_1EA3B8958;
  uint64_t v9 = sub_1C4496498();
  char v10 = *(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8);
  v10(v8, v9);
  v10((char *)v1 + qword_1EA3B89D8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_1C421A680()
{
  return sub_1C421A698((void (*)(void))sub_1C421A45C);
}

uint64_t sub_1C421A698(void (*a1)(void))
{
  a1();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRDataStoreBundleNonCoordinated()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C421A70C()
{
  type metadata accessor for Capsule();
  uint64_t result = sub_1C4497B38();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CRDataStoreBundleNonCoordinated.ModelStorage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C421A7C8()
{
  return sub_1C421C4D8();
}

uint64_t sub_1C421A7D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  char v55 = (void *)a2;
  uint64_t v63 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = *(void *)(*(void *)a1 + 80);
  uint64_t v57 = *(void *)(*(void *)a1 + 88);
  *(void *)&long long v58 = v5;
  uint64_t v6 = type metadata accessor for Capsule();
  uint64_t v7 = sub_1C4497B38();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  char v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v54 = (uint64_t)&v48 - v11;
  uint64_t v12 = type metadata accessor for Proto_Document(0);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v56 = (uint64_t)&v48 - v16;
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v18 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9C270);
  uint64_t v20 = v18;
  unint64_t v21 = v19;
  switch(v19 >> 62)
  {
    case 1uLL:
      uint64_t v52 = v7;
      if (v18 >> 32 < (int)v18) {
        __break(1u);
      }
      uint64_t v51 = v10;
      swift_retain_n();
      sub_1C4225718((int)v20, v20 >> 32, v17, (uint64_t *)&v60);
      if (v2) {
        goto LABEL_10;
      }
      sub_1C3F7E2CC(v20, v21);
      swift_release_n();
      char v10 = v51;
      uint64_t v7 = v52;
      goto LABEL_13;
    case 2uLL:
      uint64_t v51 = (char *)v6;
      uint64_t v52 = v7;
      uint64_t v23 = *(void *)(v18 + 16);
      uint64_t v24 = *(void *)(v18 + 24);
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_1C4225718(v23, v24, v17, (uint64_t *)&v60);
      if (v3)
      {
        swift_release();
        swift_release();
LABEL_10:
        sub_1C3F7E2CC(v20, v21);
        return swift_release_n();
      }
      else
      {
        swift_release();
        swift_release();
        sub_1C3F7E2CC(v20, v21);
        swift_release_n();
        uint64_t v6 = (uint64_t)v51;
        uint64_t v7 = v52;
LABEL_13:
        unint64_t v26 = *((void *)&v60 + 1);
        if (*((void *)&v60 + 1) >> 60 == 15)
        {
          sub_1C3FE3FF0();
          swift_allocError();
          *(_OWORD *)uint64_t v27 = xmmword_1C44A4870;
          *(unsigned char *)(v27 + 16) = 0;
          return swift_willThrow();
        }
        else
        {
          uint64_t v51 = v10;
          uint64_t v52 = v7;
          uint64_t v28 = v60;
          uint64_t v48 = v15;
          uint64_t v49 = v61;
          unint64_t v50 = v62;
          type metadata accessor for CRDataStoreBundleDecodeContext();
          uint64_t v29 = *(void *)(a1 + 48);
          uint64_t v30 = *(void **)(a1 + 64);
          unint64_t v31 = v26;
          uint64_t v32 = v55;
          uint64_t v33 = sub_1C411FC38(a1, 0, v29, (uint64_t)v55, (uint64_t)v30);
          id v34 = v32;
          unint64_t v35 = v31;
          uint64_t v36 = v28;
          id v37 = v30;
          swift_retain();
          swift_retain();
          uint64_t v38 = v56;
          sub_1C3FFB204(&v60, v56, v28, v35);
          LOWORD(v28) = v39;
          char v55 = (void *)v36;
          uint64_t v40 = (uint64_t)v48;
          sub_1C42278C0(v38, (uint64_t)v48);
          swift_retain();
          swift_retain();
          sub_1C3F74E7C((char *)&v60, v28, v40, (uint64_t)v33, v29, v58, v57, v54);
          *(void *)&long long v58 = v33;
          uint64_t v41 = *(void *)(v6 - 8);
          uint64_t v42 = v54;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v54, 0, 1, v6);
          uint64_t v43 = *(void *)(a1 + 32) + *(void *)(**(void **)(a1 + 32) + 96);
          swift_beginAccess();
          unint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 40);
          swift_retain();
          uint64_t v45 = v43;
          uint64_t v46 = (uint64_t)v51;
          v44(v45, v42, v52);
          swift_endAccess();
          swift_release();
          sub_1C42167A0(v46);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v46, 1, v6) == 1)
          {
            __break(1u);
            JUMPOUT(0x1C421AEF0);
          }
          sub_1C4226E2C((uint64_t)v55, v35, v49, v50);
          swift_release();
          sub_1C42276D0(v56, type metadata accessor for Proto_Document);
          Capsule.version.getter(v6, &v60);
          uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
          long long v58 = v60;
          v47(v46, v6);
          *(_OWORD *)(a1 + 16) = v58;
          swift_bridgeObjectRelease();
          return swift_bridgeObjectRelease();
        }
      }
    case 3uLL:
      memset(v59, 0, 14);
      swift_retain_n();
      uint64_t v22 = (char *)v59;
      goto LABEL_9;
    default:
      v59[0] = v18;
      LOWORD(v59[1]) = v19;
      BYTE2(v59[1]) = BYTE2(v19);
      BYTE3(v59[1]) = BYTE3(v19);
      BYTE4(v59[1]) = BYTE4(v19);
      BYTE5(v59[1]) = BYTE5(v19);
      swift_retain_n();
      uint64_t v22 = (char *)v59 + BYTE6(v21);
LABEL_9:
      sub_1C3FE190C((uint64_t)v59, (uint64_t)v22, v17, (uint64_t *)&v60);
      if (v2) {
        goto LABEL_10;
      }
      sub_1C3F7E2CC(v20, v21);
      swift_release_n();
      goto LABEL_13;
  }
}

void *sub_1C421AF00@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int64_t a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  uint64_t v6 = v5;
  LODWORD(v141) = a4;
  int64_t v139 = a3;
  id v142 = a2;
  id v138 = a5;
  v151[2] = *MEMORY[0x1E4F143B8];
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  MEMORY[0x1F4188790](v9 - 8);
  unint64_t v140 = (unint64_t)&v125 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C4496498();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v143 = (char *)&v125 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v8 + 80);
  uint64_t v15 = *(void *)(v8 + 88);
  uint64_t v16 = type metadata accessor for CRSQLStoreBundleCapsule();
  uint64_t v17 = *(void **)(a1 + 40);
  uint64_t v18 = swift_allocObject();
  unint64_t v19 = v17;
  swift_retain();
  uint64_t result = sub_1C421E988(v19, a1);
  uint64_t v144 = v6;
  if (v6) {
    return result;
  }
  uint64_t v134 = v16;
  unint64_t v21 = *(void **)(v18 + 16);
  uint64_t v22 = v142;
  *(void *)(v18 + 16) = v142;
  id v23 = v22;

  uint64_t v24 = type metadata accessor for CRDataStoreBundleNonCoordinated();
  uint64_t v137 = v18;
  unint64_t v135 = v24;
  id v136 = *(id *)(a1 + 40);
  uint64_t v25 = *(void (**)(void))(v12 + 16);
  ((void (*)(char *, int64_t, uint64_t))v25)(v143, v139, v11);
  uint64_t v26 = v14;
  unint64_t v27 = v140;
  v25();
  uint64_t v28 = v27;
  (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v12 + 56))(v27, 0, 1, v11);
  uint64_t v29 = v26;
  type metadata accessor for CRDataStoreBundleNonCoordinated.ModelStorage();
  uint64_t v30 = swift_allocObject();
  sub_1C421836C();
  uint64_t v31 = *(void *)(a1 + qword_1EA3B89B0);
  uint64_t v32 = *(void *)(a1 + qword_1EA3B89C8);
  uint64_t v33 = swift_allocObject();
  id v34 = (char *)v136;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v35 = v34;
  uint64_t v36 = v144;
  sub_1C4218414(v35, v143, v28, 1, v30, 0, v141 & 1, v31, v32, 0);
  id v143 = (char *)a1;
  uint64_t v144 = v36;
  if (v36) {
    return (void *)swift_release();
  }
  uint64_t v129 = v15;
  uint64_t v130 = v29;
  id v37 = (void *)*((void *)v143 + 5);
  uint64_t v38 = v134;
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = v37;
  swift_retain();
  uint64_t v41 = v40;
  uint64_t v42 = v144;
  sub_1C421E988(v41, v33);
  uint64_t v144 = v42;
  if (v42) {
    goto LABEL_6;
  }
  *(void *)&long long v148 = v39;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v44 = swift_getWitnessTable();
  uint64_t v45 = v144;
  uint64_t v46 = sub_1C413CA44((uint64_t)&v148, 0, 0, 0, v38, v38, WitnessTable, v44);
  uint64_t v144 = v45;
  if (v45)
  {
    swift_release();
    goto LABEL_6;
  }
  uint64_t v47 = v46;
  uint64_t v48 = MEMORY[0x1E4FBC860];
  unint64_t v49 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
  unint64_t v50 = sub_1C3F7E37C(v48);
  int64_t v51 = 0;
  unint64_t v145 = v49;
  unint64_t v146 = v50;
  uint64_t v52 = *(void *)(v47 + 56);
  uint64_t v127 = v47 + 56;
  uint64_t v53 = 1 << *(unsigned char *)(v47 + 32);
  uint64_t v54 = -1;
  if (v53 < 64) {
    uint64_t v54 = ~(-1 << v53);
  }
  unint64_t v55 = v54 & v52;
  int64_t v128 = (unint64_t)(v53 + 63) >> 6;
  uint64_t v132 = v39;
  uint64_t v131 = v33;
  uint64_t v126 = v44;
  uint64_t v133 = v47;
  if (!v55) {
    goto LABEL_13;
  }
LABEL_12:
  unint64_t v56 = __clz(__rbit64(v55));
  uint64_t v57 = (void *)((v55 - 1) & v55);
  for (unint64_t i = v56 | (v51 << 6); ; unint64_t i = __clz(__rbit64(v60)) + (v51 << 6))
  {
    unint64_t v62 = (uint64_t *)(*(void *)(v47 + 48) + 16 * i);
    uint64_t v63 = *v62;
    unint64_t v64 = v62[1];
    unint64_t v65 = *((void *)v143 + 7);
    int64_t v139 = v51;
    id v136 = v57;
    switch(v64 >> 62)
    {
      case 1uLL:
        if (v63 >> 32 < (int)v63) {
          goto LABEL_73;
        }
        sub_1C3F7E324(v63, v64);
        swift_retain_n();
        sub_1C3F7E324(v63, v64);
        swift_retain();
        sub_1C3F7E324(v63, v64);
        uint64_t v75 = v144;
        uint64_t v76 = sub_1C42277D4((int)v63, v63 >> 32, v64 & 0x3FFFFFFFFFFFFFFFLL, v65);
        uint64_t v144 = v75;
        if (v75)
        {
          swift_release();
          sub_1C3F7E2CC(v63, v64);
          sub_1C3F7E2CC(v63, v64);
          swift_release();
LABEL_60:
          swift_release();
          sub_1C3F7E2CC(v63, v64);
          swift_release();
LABEL_61:
          swift_release();
          swift_release();
          goto LABEL_62;
        }
        unint64_t v140 = v77;
        unint64_t v141 = v76;
        swift_release();
        sub_1C3F7E2CC(v63, v64);
        sub_1C3F7E2CC(v63, v64);
        swift_release_n();
        break;
      case 2uLL:
        uint64_t v71 = *(void *)(v63 + 16);
        uint64_t v70 = *(void *)(v63 + 24);
        swift_retain_n();
        sub_1C3F7E324(v63, v64);
        swift_retain();
        sub_1C3F7E324(v63, v64);
        swift_retain();
        swift_retain();
        uint64_t v72 = v144;
        uint64_t v73 = sub_1C42277D4(v71, v70, v64 & 0x3FFFFFFFFFFFFFFFLL, v65);
        uint64_t v144 = v72;
        if (v72)
        {
          swift_release();
          swift_release();
          swift_release();
          sub_1C3F7E2CC(v63, v64);
          swift_release();
          goto LABEL_60;
        }
        unint64_t v140 = v74;
        unint64_t v141 = v73;
        swift_release();
        swift_release();
        swift_release();
        sub_1C3F7E2CC(v63, v64);
        swift_release_n();
        break;
      case 3uLL:
        *(void *)((char *)&v148 + 6) = 0;
        *(void *)&long long v148 = 0;
        swift_retain_n();
        uint64_t v78 = v144;
        uint64_t v67 = sub_1C3FDC278(&v148, (uint64_t)&v148);
        uint64_t v144 = v78;
        if (v78) {
          goto LABEL_57;
        }
        if (v67) {
          goto LABEL_35;
        }
        goto LABEL_27;
      default:
        *(void *)&long long v148 = v63;
        WORD4(v148) = v64;
        BYTE10(v148) = BYTE2(v64);
        BYTE11(v148) = BYTE3(v64);
        BYTE12(v148) = BYTE4(v64);
        BYTE13(v148) = BYTE5(v64);
        swift_retain_n();
        uint64_t v66 = v144;
        uint64_t v67 = sub_1C3FDC278(&v148, (uint64_t)&v148 + BYTE6(v64));
        uint64_t v144 = v66;
        if (v66)
        {
LABEL_57:
          sub_1C3F7E2CC(v63, v64);
          swift_release();
          swift_release();
          sub_1C3F7E2CC(v63, v64);
          swift_release();
          goto LABEL_61;
        }
        if (v67)
        {
LABEL_35:
          unint64_t v140 = v68;
          unint64_t v141 = v67;
        }
        else
        {
LABEL_27:
          uint64_t v69 = MEMORY[0x1E4FBC860];
          unint64_t v141 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
          unint64_t v140 = sub_1C3F7E37C(v69);
        }
        sub_1C3F7E2CC(v63, v64);
        swift_release();
        swift_release();
        break;
    }
    *(void *)&long long v148 = v63;
    *((void *)&v148 + 1) = v64;
    uint64_t v79 = v144;
    sub_1C4221500(&v148, v147);
    uint64_t v144 = v79;
    if (v79)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)sub_1C3F7E2CC(v63, v64);
    }
    uint64_t v80 = v147[0];
    if (!v147[0])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&long long v148 = 0;
      *((void *)&v148 + 1) = 0xE000000000000000;
      sub_1C4497D28();
      swift_bridgeObjectRelease();
      *(void *)&long long v148 = 0xD000000000000011;
      *((void *)&v148 + 1) = 0x80000001C44B32E0;
      v147[0] = 10278;
      v147[1] = 0xE200000000000000;
      v151[0] = v63;
      v151[1] = v64;
      sub_1C3FF44C8();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      long long v97 = v148;
      sub_1C3FE3FF0();
      uint64_t v98 = swift_allocError();
      *(_OWORD *)uint64_t v99 = v97;
      *(unsigned char *)(v99 + 16) = 0;
      uint64_t v144 = v98;
      swift_willThrow();
      swift_release();
      swift_release();
      sub_1C3F7E2CC(v63, v64);
LABEL_6:
      swift_release();
      return (void *)swift_release();
    }
    unint64_t v135 = v65;
    uint64_t v81 = type metadata accessor for RetainVisitor();
    unint64_t v82 = v64;
    uint64_t v83 = swift_allocObject();
    uint64_t v84 = MEMORY[0x1E4FBC860];
    unint64_t v85 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
    unint64_t v86 = sub_1C3F7E37C(v84);
    *(void *)(v83 + 16) = v85;
    *(void *)(v83 + 24) = v86;
    uint64_t v149 = v81;
    id v150 = &off_1F1F982A0;
    *(void *)&long long v148 = v83;
    int v87 = *(void (**)(long long *))(*(void *)v80 + 120);
    swift_retain_n();
    v87(&v148);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v148);
    swift_release();
    swift_beginAccess();
    uint64_t v88 = *(void *)(v83 + 16);
    uint64_t v89 = *(void *)(v83 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3F7EDE8(v88, v89);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3F7FEDC(v141, v140);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v90 = (void *)*((void *)v143 + 5);
    uint64_t v91 = *(void *)(v83 + 16);
    uint64_t v92 = *(void *)(v83 + 24);
    sub_1C3F7E324(v63, v82);
    id v93 = v90;
    unint64_t v94 = v82;
    id v95 = v93;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v96 = v144;
    sub_1C3FDC3A8(v95, v63, v94, v91, v92);
    uint64_t v144 = v96;
    if (v96)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C3F7E2CC(v63, v94);
      swift_release();
      swift_release();
      swift_release();

      sub_1C3F7E2CC(v63, v94);
      swift_release();
      goto LABEL_62;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v63, v94);
    swift_release();
    swift_release();

    sub_1C3F7E2CC(v63, v94);
    uint64_t v47 = v133;
    int64_t v51 = v139;
    unint64_t v55 = (unint64_t)v136;
    if (v136) {
      goto LABEL_12;
    }
LABEL_13:
    if (__OFADD__(v51++, 1))
    {
      __break(1u);
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    if (v51 >= v128) {
      goto LABEL_49;
    }
    unint64_t v60 = *(void *)(v127 + 8 * v51);
    if (!v60) {
      break;
    }
LABEL_23:
    uint64_t v57 = (void *)((v60 - 1) & v60);
  }
  int64_t v61 = v51 + 1;
  if (v51 + 1 >= v128) {
    goto LABEL_49;
  }
  unint64_t v60 = *(void *)(v127 + 8 * v61);
  if (v60) {
    goto LABEL_22;
  }
  int64_t v61 = v51 + 2;
  if (v51 + 2 >= v128) {
    goto LABEL_49;
  }
  unint64_t v60 = *(void *)(v127 + 8 * v61);
  if (v60)
  {
LABEL_22:
    int64_t v51 = v61;
    goto LABEL_23;
  }
  int64_t v61 = v51 + 3;
  if (v51 + 3 < v128)
  {
    unint64_t v60 = *(void *)(v127 + 8 * v61);
    if (!v60)
    {
      while (1)
      {
        int64_t v51 = v61 + 1;
        if (__OFADD__(v61, 1)) {
          break;
        }
        if (v51 >= v128) {
          goto LABEL_49;
        }
        unint64_t v60 = *(void *)(v127 + 8 * v51);
        ++v61;
        if (v60) {
          goto LABEL_23;
        }
      }
LABEL_74:
      __break(1u);
    }
    goto LABEL_22;
  }
LABEL_49:
  swift_release();
  uint64_t v100 = &v143[qword_1EA3B89A0];
  swift_beginAccess();
  uint64_t v101 = *(void *)v100;
  uint64_t v102 = *(void *)(*(void *)v100 + 16);
  if (!v102)
  {
LABEL_64:
    uint64_t v112 = v137;
    v147[0] = v137;
    unint64_t v113 = v145;
    uint64_t v114 = v146;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v115 = v134;
    uint64_t v116 = v144;
    sub_1C413DDA4(v113, v114, 0, v134, (uint64_t)&off_1F1F9B858);
    uint64_t v144 = v116;
    uint64_t v118 = v142;
    if (v116)
    {
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease_n();
      return (void *)swift_bridgeObjectRelease_n();
    }
    uint64_t v119 = v117;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C421F1D4(v147);
    *((_OWORD *)v143 + 1) = *(_OWORD *)v147;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v120 = v144;
    sub_1C421C0A8(v119, v118);
    uint64_t v144 = v120;
    if (v120)
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    uint64_t v121 = *((void *)v143 + 4);
    v151[0] = v112;
    uint64_t v122 = v121 + *(void *)(*(void *)v121 + 96);
    swift_beginAccess();
    uint64_t v123 = type metadata accessor for Capsule();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v123 - 8) + 48))(v122, 1, v123) == 1)
    {
      __break(1u);
      JUMPOUT(0x1C421C098);
    }
    swift_retain();
    uint64_t v124 = v144;
    sub_1C443EF38((uint64_t)v151, v123, v115, v126);
    swift_endAccess();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    uint64_t v144 = v124;
    if (!v124) {
      sub_1C421F1D4(v138);
    }
    return (void *)swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v103 = 0;
  while (2)
  {
    uint64_t v104 = *(void *)(v101 + 8 * v103 + 32);
    uint64_t v105 = *(void *)(v104 + 16);
    unint64_t v106 = *(void *)(v104 + 24);
    swift_retain();
    sub_1C3F7E324(v105, v106);
    unsigned __int8 v107 = sub_1C421FFE4(v105, v106);
    sub_1C3F7E2CC(v105, v106);
    if ((v107 & 1) == 0)
    {
LABEL_52:
      swift_release();
      if (v102 == ++v103)
      {
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
      continue;
    }
    break;
  }
  uint64_t v108 = *(void *)(v104 + 16);
  unint64_t v109 = *(void *)(v104 + 24);
  sub_1C3F7E324(v108, v109);
  uint64_t v110 = v144;
  sub_1C422158C(v108, v109, v147);
  uint64_t v144 = v110;
  if (!v110)
  {
    sub_1C3F7E2CC(v108, v109);
    uint64_t v111 = v144;
    sub_1C422162C(v147);
    uint64_t v144 = v111;
    if (v111)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      return (void *)swift_bridgeObjectRelease();
    }
    swift_release();
    goto LABEL_52;
  }
  swift_release();
  sub_1C3F7E2CC(v108, v109);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
LABEL_62:
  swift_release();
  swift_bridgeObjectRelease();
  return (void *)swift_bridgeObjectRelease();
}

void sub_1C421C0A8(uint64_t a1, void *a2)
{
  uint64_t v26 = sub_1C4496498();
  uint64_t v5 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_init);
    uint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_3;
    }
LABEL_11:
    id v21 = a2;

    return;
  }
  id v23 = a2;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v9 = self;
  uint64_t v24 = v2 + qword_1EA3B89D8;
  id v25 = v9;
  uint64_t v10 = (void (**)(char *, uint64_t))(v5 + 8);
  v22[3] = v29;
  id v11 = a2;
  swift_bridgeObjectRetain();
  v22[1] = a1;
  uint64_t v12 = (unint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v14 = *(v12 - 1);
    unint64_t v13 = *v12;
    sub_1C3F7E324(v14, *v12);
    uint64_t aBlock = sub_1C4496548();
    uint64_t v28 = v15;
    v29[6] = 47;
    v29[7] = 0xE100000000000000;
    v29[4] = 95;
    v29[5] = 0xE100000000000000;
    sub_1C4028934();
    sub_1C4497B98();
    swift_bridgeObjectRelease();
    sub_1C4496438();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(v25, sel_defaultManager);
    sub_1C4496488();
    uint64_t v17 = (void *)sub_1C4497188();
    swift_bridgeObjectRelease();
    unsigned int v18 = objc_msgSend(v16, sel_fileExistsAtPath_, v17);

    if (v18) {
      break;
    }
    (*v10)(v7, v26);
    sub_1C3F7E2CC(v14, v13);
LABEL_5:
    v12 += 2;
    if (!--v8) {
      goto LABEL_9;
    }
  }
  unint64_t v19 = (void *)sub_1C4496418();
  v29[2] = sub_1C42168D4;
  v29[3] = 0;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  uint64_t v28 = 1107296256;
  v29[0] = sub_1C4023C54;
  v29[1] = &block_descriptor_71;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  objc_msgSend(v23, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v19, 1, 0, v20);
  _Block_release(v20);

  sub_1C3F7E2CC(v14, v13);
  (*v10)(v7, v26);
  if ((swift_isEscapingClosureAtFileLocation() & 1) == 0) {
    goto LABEL_5;
  }
  __break(1u);
LABEL_9:

  swift_bridgeObjectRelease();
}

uint64_t sub_1C421C44C()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRDataStoreBundleNonCoordinated.AssetClass()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C421C49C()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = MEMORY[0x1E4FBC860];
  return result;
}

uint64_t sub_1C421C4CC()
{
  return sub_1C421C4D8();
}

uint64_t sub_1C421C4D8()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for CRDataStoreBundleNonCoordinated.CoordinatorWrapper()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C421C52C()
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  return result;
}

void sub_1C421C554()
{
  sub_1C4223974();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_1C421C618(uint64_t a1, char *a2)
{
  unint64_t v56 = a2;
  v63[3] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v4 = *v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0980);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v60 = (uint64_t)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C4496498();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v57 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v49 - v11;
  long long v58 = v2;
  uint64_t v61 = v8;
  uint64_t v62 = v13;
  unint64_t v55 = *(void (**)(char *, char *))(v8 + 16);
  v55((char *)&v49 - v11, (char *)v2 + qword_1EA3B89D8);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_defaultManager);
  sub_1C4496488();
  id v16 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  unsigned __int8 v17 = objc_msgSend(v15, sel_fileExistsAtPath_, v16);

  unsigned int v18 = v12;
  if ((v17 & 1) == 0)
  {
    id v19 = objc_msgSend(v14, sel_defaultManager);
    uint64_t v20 = (void *)sub_1C4496418();
    v63[0] = 0;
    unsigned int v21 = objc_msgSend(v19, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v20, 1, 0, v63);

    if (!v21)
    {
      id v48 = v63[0];
      sub_1C44963A8();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v12, v62);
    }
    id v22 = v63[0];
  }
  uint64_t v23 = *(void *)(v4 + 80);
  uint64_t v24 = *(void *)(v4 + 88);
  type metadata accessor for CRDataStoreBundleNonCoordinated.AssetClass();
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = MEMORY[0x1E4FBC860];
  MEMORY[0x1F4188790](v25);
  *(&v49 - 2) = (uint64_t)v18;
  swift_bridgeObjectRetain();
  uint64_t v26 = v59;
  uint64_t v27 = sub_1C4218140((uint64_t)sub_1C4226E7C, (uint64_t)(&v49 - 4), a1);
  if (*(void *)(v27 + 16))
  {
    dispatch_group_t v53 = dispatch_group_create();
    dispatch_group_enter(v53);
    type metadata accessor for CRDataStoreBundleNonCoordinated.CoordinatorWrapper();
    uint64_t v52 = swift_allocObject();
    uint64_t v28 = v56;
    *(void *)(v52 + 16) = v56;
    uint64_t v29 = v28;
    uint64_t v30 = v60;
    sub_1C4497588();
    uint64_t v31 = sub_1C44975A8();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
    uint64_t v50 = v23;
    uint64_t v51 = v25;
    uint64_t v32 = v57;
    uint64_t v33 = v62;
    ((void (*)(char *, char *, uint64_t))v55)(v57, v18, v62);
    uint64_t v34 = v24;
    uint64_t v35 = v61;
    unint64_t v36 = (*(unsigned __int8 *)(v61 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80);
    unint64_t v37 = (v54 + v36 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v59 = v26;
    unint64_t v38 = (v37 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v56 = v18;
    unint64_t v39 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v40 = (char *)swift_allocObject();
    uint64_t v41 = v27;
    uint64_t v42 = (uint64_t)v40;
    *((void *)v40 + 2) = 0;
    *((void *)v40 + 3) = 0;
    *((void *)v40 + 4) = v50;
    *((void *)v40 + 5) = v34;
    *((void *)v40 + 6) = v41;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v40[v36], v32, v33);
    uint64_t v43 = v51;
    *(void *)(v42 + v37) = v52;
    *(void *)(v42 + v38) = v43;
    dispatch_group_t v44 = v53;
    *(void *)(v42 + v39) = v53;
    swift_retain();
    swift_retain();
    uint64_t v45 = v44;
    sub_1C3F61348(v60, (uint64_t)&unk_1EA39ED00, v42);
    swift_release();
    sub_1C44979F8();
    swift_beginAccess();
    uint64_t v46 = swift_bridgeObjectRetain();
    sub_1C415FF18(v46);
    swift_endAccess();
    swift_release();
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v56, v33);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v61 + 8))(v18, v62);
    swift_release();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C421CBA0(uint64_t a1)
{
  uint64_t v2 = sub_1C4496498();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  unint64_t v7 = *(void *)(*(void *)a1 + 24);
  sub_1C3F7E324(v6, v7);
  v12[4] = sub_1C4496548();
  v12[5] = v8;
  id v12[2] = 47;
  v12[3] = 0xE100000000000000;
  v12[0] = 95;
  v12[1] = 0xE100000000000000;
  sub_1C4028934();
  sub_1C4497B98();
  swift_bridgeObjectRelease();
  sub_1C3F7E2CC(v6, v7);
  sub_1C4496438();
  swift_bridgeObjectRelease();
  id v9 = objc_msgSend(self, sel_defaultManager);
  sub_1C4496488();
  uint64_t v10 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  LODWORD(a1) = objc_msgSend(v9, sel_fileExistsAtPath_, v10);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return a1 ^ 1;
}

uint64_t sub_1C421CDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[22] = a7;
  v8[23] = a8;
  v8[20] = a5;
  v8[21] = a6;
  v8[19] = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0990);
  v8[24] = v9;
  v8[25] = *(void *)(v9 - 8);
  v8[26] = swift_task_alloc();
  uint64_t v10 = sub_1C4496498();
  v8[27] = v10;
  v8[28] = *(void *)(v10 - 8);
  v8[29] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C421CEC8, 0, 0);
}

uint64_t sub_1C421CEC8()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = *(void *)(v1 + 16);
  v0[30] = v2;
  if (v2)
  {
    uint64_t v3 = MEMORY[0x1E4FBC860];
    v0[31] = 0;
    v0[32] = v3;
    uint64_t v4 = v0[29];
    uint64_t v14 = v0[21];
    uint64_t v5 = *(void **)(v1 + 32);
    v0[33] = v5;
    uint64_t v6 = v5[2];
    unint64_t v7 = v5[3];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1C3F7E324(v6, v7);
    v0[13] = sub_1C4496548();
    v0[14] = v8;
    v0[15] = 47;
    v0[16] = 0xE100000000000000;
    v0[17] = 95;
    v0[18] = 0xE100000000000000;
    sub_1C4028934();
    sub_1C4497B98();
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v6, v7);
    sub_1C4496438();
    swift_bridgeObjectRelease();
    uint64_t v9 = swift_task_alloc();
    v0[34] = v9;
    *(void *)(v9 + 16) = v14;
    *(void *)(v9 + 24) = v4;
    uint64_t v10 = v5[4];
    v0[35] = v10;
    v0[36] = *(void *)(v10 + 24);
    swift_retain();
    return MEMORY[0x1F4188298](sub_1C421D0EC, 0, 0);
  }
  else
  {
    uint64_t v11 = v0[23];
    *(void *)(v0[22] + 16) = MEMORY[0x1E4FBC860];
    swift_bridgeObjectRelease();
    dispatch_group_leave(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1C421D0EC()
{
  uint64_t v2 = v0[25];
  uint64_t v1 = v0[26];
  uint64_t v3 = v0[24];
  v0[2] = v0;
  v0[3] = sub_1C421D224;
  uint64_t v4 = swift_continuation_init();
  uint64_t v5 = swift_allocObject();
  v0[10] = &unk_1EA39ED20;
  *(void *)(v5 + 16) = v4;
  v0[11] = v5;
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC09A8);
  sub_1C44975E8();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return MEMORY[0x1F41881E8](v0 + 2);
}

uint64_t sub_1C421D224()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  uint64_t v8 = *v0;
  uint64_t v7 = (char *)&dword_1EA39ED10 + dword_1EA39ED10;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 296) = v3;
  *uint64_t v3 = v8;
  v3[1] = sub_1C421D3A8;
  uint64_t v4 = *(void *)(v1 + 272);
  uint64_t v5 = *(void *)(v1 + 264);
  return ((uint64_t (*)(uint64_t, void, void *, uint64_t))v7)(v5, 0, &unk_1EA39ED18, v4);
}

uint64_t sub_1C421D3A8(char a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C421D7AC;
  }
  else
  {
    *(unsigned char *)(v4 + 304) = a1;
    swift_release();
    swift_task_dealloc();
    uint64_t v5 = sub_1C421D4D8;
  }
  return MEMORY[0x1F4188298](v5, 0, 0);
}

uint64_t sub_1C421D4D8()
{
  if (*(unsigned char *)(v0 + 304))
  {
    uint64_t v2 = *(void **)(v0 + 256);
  }
  else
  {
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v2 = *(void **)(v0 + 256);
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v2 = sub_1C3FF1870(0, v2[2] + 1, 1, *(void **)(v0 + 256));
    }
    unint64_t v4 = v2[2];
    unint64_t v3 = v2[3];
    if (v4 >= v3 >> 1) {
      uint64_t v2 = sub_1C3FF1870((void *)(v3 > 1), v4 + 1, 1, v2);
    }
    uint64_t v5 = *(void *)(v0 + 264);
    v2[2] = v4 + 1;
    v2[v4 + 4] = v5;
  }
  uint64_t v7 = *(void *)(v0 + 240);
  uint64_t v6 = *(void *)(v0 + 248);
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v8 = *(void *)(v0 + 232);
  uint64_t v10 = *(void *)(v0 + 216);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  if (v6 + 1 == v7)
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = *(NSObject **)(v0 + 184);
    *(void *)(*(void *)(v0 + 176) + 16) = v2;
    swift_bridgeObjectRelease();
    dispatch_group_leave(v11);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
  else
  {
    uint64_t v14 = *(void *)(v0 + 248) + 1;
    *(void *)(v0 + 248) = v14;
    *(void *)(v0 + 256) = v2;
    uint64_t v15 = *(void *)(v0 + 232);
    uint64_t v22 = *(void *)(v0 + 168);
    id v16 = *(void **)(*(void *)(v0 + 152) + 8 * v14 + 32);
    *(void *)(v0 + 264) = v16;
    uint64_t v17 = v16[2];
    unint64_t v18 = v16[3];
    swift_retain();
    sub_1C3F7E324(v17, v18);
    *(void *)(v0 + 104) = sub_1C4496548();
    *(void *)(v0 + 112) = v19;
    *(void *)(v0 + 120) = 47;
    *(void *)(v0 + 128) = 0xE100000000000000;
    *(void *)(v0 + 136) = 95;
    *(void *)(v0 + 144) = 0xE100000000000000;
    sub_1C4028934();
    sub_1C4497B98();
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v17, v18);
    sub_1C4496438();
    swift_bridgeObjectRelease();
    uint64_t v20 = swift_task_alloc();
    *(void *)(v0 + 272) = v20;
    *(void *)(v20 + 16) = v22;
    *(void *)(v20 + 24) = v15;
    uint64_t v21 = v16[4];
    *(void *)(v0 + 280) = v21;
    *(void *)(v0 + 288) = *(void *)(v21 + 24);
    swift_retain();
    return MEMORY[0x1F4188298](sub_1C421D0EC, 0, 0);
  }
}

uint64_t sub_1C421D7AC()
{
  return swift_release();
}

uint64_t sub_1C421D7B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[10] = a3;
  v4[11] = a4;
  v4[8] = a1;
  v4[9] = a2;
  uint64_t v5 = sub_1C4496498();
  v4[12] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v4[13] = v6;
  v4[14] = *(void *)(v6 + 64);
  v4[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C421D880, 0, 0);
}

uint64_t sub_1C421D880()
{
  uint64_t v1 = *(void **)(v0[10] + 16);
  if (v1)
  {
    id v2 = *(id *)(v0[10] + 16);
  }
  else
  {
    id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F28CA0]), sel_init);
    uint64_t v1 = 0;
  }
  uint64_t v3 = v0[15];
  uint64_t v4 = v0[12];
  uint64_t v5 = v0[13];
  uint64_t v6 = v0[9];
  id v7 = v1;
  uint64_t v8 = (void *)sub_1C4496418();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v6, v4);
  unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = swift_allocObject();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v10 + v9, v3, v4);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1C42272F8;
  *(void *)(v11 + 24) = v10;
  v0[6] = sub_1C4227378;
  v0[7] = v11;
  v0[2] = MEMORY[0x1E4F143A8];
  v0[3] = 1107296256;
  v0[4] = sub_1C4023C54;
  v0[5] = &block_descriptor_30;
  uint64_t v12 = _Block_copy(v0 + 2);
  swift_retain();
  swift_release();
  objc_msgSend(v2, sel_coordinateWritingItemAtURL_options_error_byAccessor_, v8, 0, 0, v12);

  _Block_release(v12);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    *(unsigned char *)v0[8] = 1;
    swift_task_dealloc();
    uint64_t v15 = (uint64_t (*)(void))v0[1];
    return v15();
  }
  return result;
}

void sub_1C421DAD0()
{
  v8[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_1C4496418();
  id v2 = (void *)sub_1C4496418();
  v8[0] = 0;
  unsigned int v3 = objc_msgSend(v0, sel_copyItemAtURL_toURL_error_, v1, v2, v8);

  id v4 = v8[0];
  if (v3)
  {
    id v5 = v4;
  }
  else
  {
    id v6 = v8[0];
    id v7 = (void *)sub_1C44963A8();

    swift_willThrow();
  }
}

void sub_1C421DC08()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  id v0 = objc_msgSend(self, sel_defaultManager);
  uint64_t v1 = (void *)sub_1C4496418();
  v7[0] = 0;
  unsigned int v2 = objc_msgSend(v0, sel_removeItemAtURL_error_, v1, v7);

  id v3 = v7[0];
  if (v2)
  {
    id v4 = v3;
  }
  else
  {
    id v5 = v7[0];
    id v6 = (void *)sub_1C44963A8();

    swift_willThrow();
  }
}

uint64_t sub_1C421DD28(unsigned char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v10 = (uint64_t *)(v4 + qword_1EA3B89B8);
  swift_beginAccess();
  sub_1C421A264((void (*)(uint64_t *__return_ptr))sub_1C42256E0, v10, a1);
  uint64_t result = swift_endAccess();
  if (!v5)
  {
    signed __int16 v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 40))(a3, a4);
    uint64_t v13 = (uint64_t *)(v6 + qword_1EA3B89D0);
    swift_beginAccess();
    int v14 = sub_1C421A35C(v12, v13);
    swift_endAccess();
    return v14 & 0x1FFFF;
  }
  return result;
}

uint64_t sub_1C421DE84(uint64_t a1, long long *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v34 = a4;
  long long v6 = a2[1];
  long long v31 = *a2;
  long long v7 = a2[2];
  long long v32 = v6;
  long long v33 = v7;
  uint64_t v8 = *(void **)(a3 + 40);
  type metadata accessor for CREncoder();
  uint64_t inited = swift_initStackObject();
  uint64_t v10 = MEMORY[0x1E4FBC860];
  uint64_t v11 = MEMORY[0x1E4FBC868];
  *(void *)(inited + 32) = MEMORY[0x1E4FBC868];
  *(void *)(inited + 40) = v10;
  *(void *)(inited + 48) = v10;
  *(void *)(inited + 56) = v11;
  *(void *)(inited + 64) = v10;
  *(void *)(inited + 80) = 0;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 16) = v8;
  *(void *)(inited + 24) = v10;
  *(unsigned char *)(inited + 72) = 1;
  long long v30 = v32;
  id v12 = v8;
  uint64_t v13 = sub_1C4007A4C(&v30);
  if (v4)
  {
    swift_setDeallocating();
    CREncoder.deinit();
    return swift_deallocClassInstance();
  }
  else
  {
    uint64_t v16 = v13;
    unint64_t v28 = v14;
    uint64_t v17 = a3;
    swift_setDeallocating();
    CREncoder.deinit();
    uint64_t result = swift_deallocClassInstance();
    uint64_t v18 = v31;
    if ((void)v31)
    {
      *(void *)&long long v30 = v31;
      swift_retain();
      sub_1C421DD28(&v29, (uint64_t)&v30, (uint64_t)&type metadata for AnyCRDT, (uint64_t)&protocol witness table for AnyCRDT);
      swift_release();
      char v19 = v29;
      uint64_t v20 = *(void **)(v17 + 40);
      uint64_t v21 = swift_allocObject();
      uint64_t v22 = MEMORY[0x1E4FBC868];
      *(void *)(v21 + 32) = MEMORY[0x1E4FBC868];
      *(void *)(v21 + 40) = v10;
      *(void *)(v21 + 48) = v10;
      *(void *)(v21 + 56) = v22;
      *(void *)(v21 + 64) = v10;
      *(void *)(v21 + 80) = 0;
      *(void *)(v21 + 88) = 0;
      *(void *)(v21 + 16) = v20;
      *(void *)(v21 + 24) = v10;
      *(unsigned char *)(v21 + 72) = v19;
      *(void *)&long long v30 = v18;
      swift_retain();
      id v23 = v20;
      uint64_t v24 = sub_1C400672C((uint64_t *)&v30);
      unint64_t v26 = v25;
      swift_release();
      uint64_t v27 = swift_release();
      MEMORY[0x1F4188790](v27);
      sub_1C4497A58();
      sub_1C3F7E2CC(v24, v26);
      return sub_1C3F7E2CC(v16, v28);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

void sub_1C421E180(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9)
{
  uint64_t v14 = *(void *)(a6 + 32);
  uint64_t v15 = *(void *)(a6 + 40);
  id v16 = *(id *)(a1 + 40);
  uint64_t v17 = v16;
  if ((a9 & 0xFE) != 0) {
    unsigned __int16 v18 = 2;
  }
  else {
    unsigned __int16 v18 = 1;
  }
  uint64_t v19 = sub_1C3FE1414(v16, a2, a3, a4, a5, v14, v15, a7, a8, v18, (a9 & 0x1FFFFFFFFuLL) >> 16);
  uint64_t v21 = v20;

  if (!v23)
  {
    swift_beginAccess();
    sub_1C3F7EDE8(v19, v21);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C421E2BC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  id v6 = *(id *)(a1 + 40);
  uint64_t v7 = MEMORY[0x1E4FBC860];
  unint64_t v8 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
  unint64_t v9 = sub_1C3F7E37C(v7);
  uint64_t v10 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9C298);
  unint64_t v12 = v11;
  uint64_t v13 = sub_1C3FE1414(v6, a2, a3, 0, 0xC000000000000000, v8, v9, v10, v11, 1u, 0x10000);
  if (v3)
  {
    sub_1C3F7E2CC(v10, v12);
  }
  else
  {
    uint64_t v15 = v13;
    uint64_t v16 = v14;
    sub_1C3F7E2CC(v10, v12);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3F7EDE8(v15, v16);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

const char *sub_1C421E3FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  sub_1C4497268();
  uint64_t v3 = (sqlite3_stmt *)sub_1C3F5FA40();
  if (v1) {
    return (const char *)swift_bridgeObjectRelease();
  }
  uint64_t v4 = v3;
  if (sqlite3_step(v3) == 101)
  {
LABEL_5:
    sqlite3_finalize(v4);
    return (const char *)swift_bridgeObjectRelease();
  }
  uint64_t result = sqlite3_errmsg(*(sqlite3 **)(v2 + 32));
  if (result)
  {
    uint64_t v6 = sub_1C4497288();
    uint64_t v8 = v7;
    sub_1C3FE3570();
    swift_allocError();
    *(void *)uint64_t v9 = v6;
    *(void *)(v9 + 8) = v8;
    *(unsigned char *)(v9 + 16) = 2;
    swift_willThrow();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

const char *sub_1C421E4FC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 56);
  sqlite3_step(*(sqlite3_stmt **)(v2 + 128));
  sqlite3_reset(*(sqlite3_stmt **)(v2 + 128));
  sub_1C4497268();
  uint64_t v3 = (sqlite3_stmt *)sub_1C3F5FA40();
  if (v1) {
    return (const char *)swift_bridgeObjectRelease();
  }
  uint64_t v4 = v3;
  if (sqlite3_step(v3) == 101)
  {
LABEL_5:
    sqlite3_finalize(v4);
    return (const char *)swift_bridgeObjectRelease();
  }
  uint64_t result = sqlite3_errmsg(*(sqlite3 **)(v2 + 32));
  if (result)
  {
    uint64_t v6 = sub_1C4497288();
    uint64_t v8 = v7;
    sub_1C3FE3570();
    swift_allocError();
    *(void *)uint64_t v9 = v6;
    *(void *)(v9 + 8) = v8;
    *(unsigned char *)(v9 + 16) = 2;
    swift_willThrow();
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C421E604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v10 = (void *)(a3 + 16);
  id v11 = objc_msgSend(self, sel_defaultManager);
  sub_1C4496488();
  unint64_t v12 = (void *)sub_1C4497188();
  swift_bridgeObjectRelease();
  unsigned int v13 = objc_msgSend(v11, sel_fileExistsAtPath_, v12);

  if (v13)
  {
    if (*(unsigned char *)(a2 + qword_1EA3B8998) == 1) {
      sub_1C43C67E8(a5, a6, a1, aBlock);
    }
    else {
      sub_1C43C6B58(a5, a6, a1, aBlock);
    }
    uint64_t v14 = aBlock[0];
    swift_beginAccess();
    *uint64_t v10 = v14;
    swift_release();
  }
  uint64_t result = swift_beginAccess();
  if (!*v10)
  {
    sub_1C43C63D4(a5, a6, aBlock);
    uint64_t v16 = aBlock[0];
    uint64_t v17 = *(NSObject **)(a2 + 80);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a2;
    *(void *)(v18 + 24) = v16;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_1C4227468;
    *(void *)(v19 + 24) = v18;
    aBlock[4] = sub_1C3F5F2E0;
    aBlock[5] = v19;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C3F5F2B8;
    aBlock[3] = &block_descriptor_53;
    uint64_t v20 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    dispatch_sync(v17, v20);
    _Block_release(v20);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      swift_beginAccess();
      *uint64_t v10 = v16;
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1C421E8A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void **)(a1 + qword_1EA3B89A0);
  swift_beginAccess();
  uint64_t v4 = *v3;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v3 = v4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v4 = sub_1C3FF1870(0, v4[2] + 1, 1, v4);
    *uint64_t v3 = v4;
  }
  unint64_t v7 = v4[2];
  unint64_t v6 = v4[3];
  if (v7 >= v6 >> 1)
  {
    uint64_t v4 = sub_1C3FF1870((void *)(v6 > 1), v7 + 1, 1, v4);
    *uint64_t v3 = v4;
  }
  uint64_t v4[2] = v7 + 1;
  v4[v7 + 4] = a2;
  return swift_endAccess();
}

void *sub_1C421E988(char *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v66 = *MEMORY[0x1E4F143B8];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C4496678();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v57 = v14;
  uint64_t v58 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2[2] = 0;
  v2[6] = 0;
  uint64_t v55 = v12;
  unint64_t v56 = v2 + 6;
  v2[7] = 0;
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 56);
  v54((char *)v2 + qword_1EA3B8A10, 1, 1);
  v2[3] = a2;
  v2[4] = a1;
  uint64_t v15 = *(void *)&a1[OBJC_IVAR___CRContext_assetManager];
  type metadata accessor for CRDataStorePartialDecodeContext();
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t v17 = MEMORY[0x1E4FBC868];
  v16[2] = MEMORY[0x1E4FBC868];
  v16[3] = v17;
  v16[4] = v15;
  v2[5] = v16;
  uint64_t v18 = *(void *)(a2 + 56);
  uint64_t v59 = a1;
  swift_retain();
  swift_retain();
  uint64_t v19 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9B830);
  uint64_t v21 = v19;
  unint64_t v22 = v20;
  switch(v20 >> 62)
  {
    case 1uLL:
      if (v19 >> 32 < (int)v19) {
        __break(1u);
      }
      dispatch_group_t v53 = v10;
      swift_retain_n();
      sub_1C4225718((int)v21, v21 >> 32, v18, &v62);
      if (v3) {
        goto LABEL_10;
      }
      goto LABEL_14;
    case 2uLL:
      dispatch_group_t v53 = v10;
      uint64_t v24 = *(void *)(v19 + 16);
      uint64_t v25 = *(void *)(v19 + 24);
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_1C4225718(v24, v25, v18, &v62);
      if (v4)
      {
        swift_release();
        swift_release();

        swift_release();
        swift_release();
        goto LABEL_11;
      }
      swift_release();
      swift_release();
LABEL_14:
      sub_1C3F7E2CC(v21, v22);
      swift_release_n();
      uint64_t v10 = v53;
      goto LABEL_15;
    case 3uLL:
      memset(v61, 0, 14);
      swift_retain_n();
      uint64_t v23 = (char *)v61;
      goto LABEL_9;
    default:
      v61[0] = v19;
      LOWORD(v61[1]) = v20;
      BYTE2(v61[1]) = BYTE2(v20);
      BYTE3(v61[1]) = BYTE3(v20);
      BYTE4(v61[1]) = BYTE4(v20);
      BYTE5(v61[1]) = BYTE5(v20);
      swift_retain_n();
      uint64_t v23 = (char *)v61 + BYTE6(v22);
LABEL_9:
      sub_1C3FE190C((uint64_t)v61, (uint64_t)v23, v18, &v62);
      if (v3)
      {
LABEL_10:
        swift_release();
        swift_release();

LABEL_11:
        sub_1C3F7E2CC(v21, v22);
        swift_release();
        swift_release();
      }
      else
      {
        sub_1C3F7E2CC(v21, v22);
        swift_release_n();
LABEL_15:
        unint64_t v26 = v63;
        if (v63 >> 60 == 15)
        {
          swift_release();
          sub_1C3FE3FF0();
          swift_allocError();
          *(_OWORD *)uint64_t v27 = xmmword_1C44A4870;
          *(unsigned char *)(v27 + 16) = 0;
          swift_willThrow();

          swift_release();
        }
        else
        {
          uint64_t v52 = v62;
          dispatch_group_t v53 = v10;
          uint64_t v28 = v64;
          unint64_t v51 = v65;
          uint64_t v29 = v5[5];
          type metadata accessor for CRDecoder(0);
          uint64_t v30 = swift_allocObject();
          uint64_t v31 = MEMORY[0x1E4FBC860];
          *(void *)(v30 + 16) = 0;
          *(void *)(v30 + 24) = v31;
          *(void *)(v30 + 32) = v31;
          *(void *)(v30 + 40) = MEMORY[0x1E4FBC868];
          *(unsigned char *)(v30 + 48) = 0;
          *(void *)(v30 + 56) = 0;
          uint64_t v32 = v30 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
          uint64_t v33 = type metadata accessor for Proto_CRDT(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 1, 1, v33);
          uint64_t v34 = v30 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
          uint64_t v35 = type metadata accessor for Proto_Value(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v34, 1, 1, v35);
          uint64_t v49 = v28;
          uint64_t v50 = 0;
          *(void *)(v30 + 16) = v29;
          uint64_t v36 = v52;
          uint64_t v37 = v28;
          unint64_t v38 = v51;
          sub_1C4227550(v52, v26, v37, v51);
          swift_retain();
          swift_release();
          *(unsigned char *)(v30 + 49) = 1;
          uint64_t v39 = v58;
          uint64_t v40 = v50;
          sub_1C3FFCBA8(&v60, v58, v36, v26);

          swift_release();
          uint64_t v41 = v49;
          sub_1C4226E2C(v36, v26, v49, v38);
          sub_1C4226E2C(v36, v26, v41, v38);
          if (v40)
          {
            swift_release();
            swift_setDeallocating();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C3F962E0(v30 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
            sub_1C3F962E0(v30 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
            swift_deallocClassInstance();
          }
          else
          {
            swift_setDeallocating();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C3F962E0(v30 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
            sub_1C3F962E0(v30 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
            swift_deallocClassInstance();
            long long v42 = v60;
            uint64_t v43 = (uint64_t)v53;
            uint64_t v44 = v39;
            uint64_t v45 = v57;
            (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v53, v44, v57);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v54)(v43, 0, 1, v45);
            swift_beginAccess();
            uint64_t v46 = v5[6];
            *((_OWORD *)v5 + 3) = v42;
            sub_1C3F870F4(v46);
            uint64_t v47 = (uint64_t)v5 + qword_1EA3B8A10;
            swift_beginAccess();
            sub_1C42274E8(v43, v47);
            swift_endAccess();
          }
        }
      }
      return v5;
  }
}

uint64_t sub_1C421F1D4@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = *(void *)(v1 + 48);
  if (result)
  {
    uint64_t v4 = *(void *)(v1 + 56);
    *a1 = result;
    a1[1] = v4;
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C421F230(void (*a1)(uint64_t))
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Capsule();
  uint64_t v7 = sub_1C4497B38();
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)v36 - v8;
  uint64_t result = swift_beginAccess();
  if (!*(void *)(v1 + 48))
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v39 = v5;
  a1(v1 + 48);
  swift_endAccess();
  uint64_t v11 = *(void **)(v1 + 32);
  type metadata accessor for CREncoder();
  uint64_t inited = swift_initStackObject();
  uint64_t v13 = MEMORY[0x1E4FBC860];
  uint64_t v14 = MEMORY[0x1E4FBC868];
  *(void *)(inited + 32) = MEMORY[0x1E4FBC868];
  *(void *)(inited + 40) = v13;
  *(void *)(inited + 48) = v13;
  *(void *)(inited + 56) = v14;
  *(void *)(inited + 64) = v13;
  *(void *)(inited + 80) = 0;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 16) = v11;
  *(void *)(inited + 24) = v13;
  *(unsigned char *)(inited + 72) = 1;
  v36[1] = *(void **)(v1 + 24);
  sub_1C42167A0((uint64_t)v9);
  uint64_t v15 = *(void *)(v6 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48))(v9, 1, v6);
  if (result == 1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  Capsule<>.rootID.getter(v43);
  uint64_t v16 = v43[0];
  uint64_t v17 = v43[1];
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t))(v15 + 8);
  v36[0] = v11;
  uint64_t result = v18(v9, v6);
  uint64_t v37 = v16;
  v42[0] = v16;
  v42[1] = v17;
  unint64_t v38 = v17;
  uint64_t v19 = *(void *)(v1 + 48);
  if (!v19)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v20 = *(void *)(v1 + 56);
  *(void *)&long long v41 = *(void *)(v1 + 48);
  *((void *)&v41 + 1) = v20;
  uint64_t v21 = v1 + qword_1EA3B8A10;
  swift_beginAccess();
  uint64_t v22 = (uint64_t)v39;
  sub_1C3F970C4(v21, (uint64_t)v39, &qword_1EBBC07E8);
  uint64_t v23 = sub_1C4496678();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23);
  if (result == 1)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v25 = v40;
  unint64_t v26 = sub_1C4005A28(v42, &v41, 0, v22);
  if (v25)
  {
    swift_release();
    sub_1C3F870F4(v19);
    sub_1C3F7E2CC(v37, v38);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
  }
  else
  {
    unint64_t v28 = v27;
    uint64_t v29 = (uint64_t)v26;
    swift_release();
    sub_1C3F870F4(v19);
    sub_1C3F7E2CC(v37, v38);
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    swift_retain();
    uint64_t v30 = MEMORY[0x1E4FBC860];
    unint64_t v31 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
    unint64_t v32 = sub_1C3F7E37C(v30);
    uint64_t v33 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9B7E0);
    unint64_t v35 = v34;
    uint64_t v40 = v29;
    sub_1C3FE1414(v36[0], v29, v28, 0, 0xC000000000000000, v31, v32, v33, v34, 1u, 0x10000);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v33, v35);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1C3F7E2CC(v40, v28);
  }
}

uint64_t sub_1C421F6FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E8);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + qword_1EA3B8A10;
  swift_beginAccess();
  sub_1C3F970C4(v6, (uint64_t)v5, &qword_1EBBC07E8);
  uint64_t v7 = sub_1C4496678();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C421F828(uint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v54 = *(void *)(*v1 + 88);
  uint64_t v4 = type metadata accessor for Capsule();
  uint64_t v5 = sub_1C4497B38();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v45 - v6;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E8);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v53 = (uint64_t)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v45 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v45 - v14;
  uint64_t v16 = sub_1C4496678();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v15, a1, v16);
  uint64_t v51 = v17;
  uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56);
  uint64_t v52 = v16;
  v18(v15, 0, 1, v16);
  sub_1C4227480((uint64_t)v15, (uint64_t)v13);
  uint64_t v19 = (uint64_t)v2 + qword_1EA3B8A10;
  swift_beginAccess();
  unint64_t v50 = v19;
  sub_1C42274E8((uint64_t)v13, v19);
  swift_endAccess();
  uint64_t v20 = (void *)v2[4];
  type metadata accessor for CREncoder();
  uint64_t inited = swift_initStackObject();
  uint64_t v22 = MEMORY[0x1E4FBC860];
  uint64_t v23 = MEMORY[0x1E4FBC868];
  *(void *)(inited + 32) = MEMORY[0x1E4FBC868];
  *(void *)(inited + 40) = v22;
  *(void *)(inited + 48) = v22;
  *(void *)(inited + 56) = v23;
  *(void *)(inited + 64) = v22;
  *(void *)(inited + 80) = 0;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 16) = v20;
  *(void *)(inited + 24) = v22;
  *(unsigned char *)(inited + 72) = 1;
  uint64_t v47 = v2[3];
  sub_1C42167A0((uint64_t)v7);
  uint64_t v24 = *(void *)(v4 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v7, 1, v4);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_11;
  }
  Capsule<>.rootID.getter(v57);
  uint64_t v27 = v57[0];
  uint64_t v26 = v57[1];
  unint64_t v28 = *(void (**)(char *, uint64_t))(v24 + 8);
  id v46 = v20;
  v28(v7, v4);
  uint64_t v48 = v27;
  v56[0] = v27;
  v56[1] = v26;
  unint64_t v54 = v26;
  uint64_t result = swift_beginAccess();
  uint64_t v29 = v2[6];
  if (!v29)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v30 = v2[7];
  *(void *)&long long v55 = v29;
  *((void *)&v55 + 1) = v30;
  uint64_t v31 = v53;
  sub_1C3F970C4(v50, v53, &qword_1EBBC07E8);
  uint64_t v32 = v51;
  uint64_t v33 = v52;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v31, 1, v52);
  if (result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v34 = v49;
  unint64_t v35 = sub_1C4005A28(v56, &v55, 0, v31);
  unint64_t v50 = v36;
  if (v34)
  {
    swift_release();
    sub_1C3F870F4(v29);
    sub_1C3F7E2CC(v48, v54);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
  }
  else
  {
    uint64_t v37 = (uint64_t)v35;
    swift_release();
    sub_1C3F870F4(v29);
    sub_1C3F7E2CC(v48, v54);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v31, v33);
    swift_retain();
    uint64_t v38 = MEMORY[0x1E4FBC860];
    unint64_t v39 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
    unint64_t v40 = sub_1C3F7E37C(v38);
    uint64_t v41 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9B808);
    unint64_t v43 = v42;
    unint64_t v44 = v50;
    unint64_t v54 = v39;
    sub_1C3FE1414(v46, v37, v50, 0, 0xC000000000000000, v39, v40, v41, v42, 1u, 0x10000);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v41, v43);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1C3F7E2CC(v37, v44);
  }
}

uint64_t sub_1C421FDB4(uint64_t *a1)
{
  v11[3] = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  uint64_t v4 = *(void *)(*(void *)(v1 + 24) + 56);
  switch(v2 >> 62)
  {
    case 1uLL:
      if (v3 >> 32 < (int)v3) {
        __break(1u);
      }
      swift_retain();
      sub_1C3F7E324(v3, v2);
      char v8 = sub_1C4226BD4((int)v3, v3 >> 32, v2 & 0x3FFFFFFFFFFFFFFFLL, v4);
      sub_1C3F7E2CC(v3, v2);
      goto LABEL_8;
    case 2uLL:
      uint64_t v6 = *(void *)(v3 + 16);
      uint64_t v7 = *(void *)(v3 + 24);
      swift_retain();
      swift_retain();
      swift_retain();
      char v8 = sub_1C4226BD4(v6, v7, v2 & 0x3FFFFFFFFFFFFFFFLL, v4);
      swift_release();
      swift_release();
LABEL_8:
      swift_release();
      return v8 & 1;
    case 3uLL:
      memset(v11, 0, 14);
      swift_retain();
      uint64_t v5 = (char *)v11;
      goto LABEL_5;
    default:
      v11[0] = *a1;
      LOWORD(v11[1]) = v2;
      BYTE2(v11[1]) = BYTE2(v2);
      BYTE3(v11[1]) = BYTE3(v2);
      BYTE4(v11[1]) = BYTE4(v2);
      BYTE5(v11[1]) = BYTE5(v2);
      swift_retain();
      uint64_t v5 = (char *)v11 + BYTE6(v2);
LABEL_5:
      sub_1C3FE2138((uint64_t)v11, (uint64_t)v5, v4, (BOOL *)&v10);
      swift_release();
      char v8 = v10;
      return v8 & 1;
  }
}

id sub_1C421FFE4(uint64_t a1, unint64_t a2)
{
  uint64_t v57 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = sub_1C4496498();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v41 - v10;
  uint64_t v12 = *(void *)(v2 + 24);
  uint64_t v13 = (uint64_t *)(v12 + qword_1EA3B89A0);
  swift_beginAccess();
  uint64_t v14 = *v13;
  uint64_t v52 = *(void *)(*v13 + 16);
  if (!v52) {
    goto LABEL_39;
  }
  uint64_t v41 = v12;
  unint64_t v42 = v9;
  unint64_t v43 = v11;
  uint64_t v44 = v6;
  uint64_t v45 = v5;
  BOOL v15 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v49 = v15;
  uint64_t v48 = HIDWORD(a1) - (int)a1;
  uint64_t v51 = BYTE6(a2);
  swift_bridgeObjectRetain();
  uint64_t v16 = 0;
  unint64_t v50 = a2 >> 62;
  unint64_t v17 = a2;
  uint64_t v46 = a1;
  unint64_t v47 = a2;
  uint64_t v18 = a1;
  while (2)
  {
    uint64_t v19 = *(void *)(v14 + 8 * v16++ + 32);
    uint64_t v21 = *(void *)(v19 + 16);
    unint64_t v20 = *(void *)(v19 + 24);
    uint64_t v22 = 0;
    switch(v20 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v21), v21))
        {
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
LABEL_49:
          __break(1u);
LABEL_50:
          __break(1u);
        }
        uint64_t v22 = HIDWORD(v21) - (int)v21;
LABEL_14:
        sub_1C3F7E324(*(void *)(v19 + 16), *(void *)(v19 + 24));
        break;
      case 2uLL:
        uint64_t v24 = *(void *)(v21 + 16);
        uint64_t v23 = *(void *)(v21 + 24);
        uint64_t v22 = v23 - v24;
        if (!__OFSUB__(v23, v24)) {
          goto LABEL_14;
        }
        goto LABEL_44;
      case 3uLL:
        break;
      default:
        uint64_t v22 = BYTE6(v20);
        break;
    }
    uint64_t v25 = v51;
    switch(v50)
    {
      case 1uLL:
        uint64_t v25 = v48;
        if (v49) {
          goto LABEL_45;
        }
        goto LABEL_19;
      case 2uLL:
        uint64_t v27 = *(void *)(v18 + 16);
        uint64_t v26 = *(void *)(v18 + 24);
        BOOL v28 = __OFSUB__(v26, v27);
        uint64_t v25 = v26 - v27;
        if (!v28) {
          goto LABEL_19;
        }
        goto LABEL_46;
      case 3uLL:
        if (v22) {
          goto LABEL_7;
        }
        goto LABEL_40;
      default:
LABEL_19:
        if (v22 != v25)
        {
LABEL_7:
          sub_1C3F7E2CC(v21, v20);
LABEL_8:
          if (v52 == v16)
          {
            swift_bridgeObjectRelease();
            uint64_t v6 = v44;
            uint64_t v5 = v45;
            uint64_t v11 = v43;
            uint64_t v9 = v42;
            uint64_t v12 = v41;
LABEL_39:
            (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, v12 + qword_1EA3B89D8, v5);
            *(void *)&long long __s1 = sub_1C4496548();
            *((void *)&__s1 + 1) = v35;
            v55[0] = 47;
            v55[1] = 0xE100000000000000;
            uint64_t v53 = 95;
            unint64_t v54 = 0xE100000000000000;
            sub_1C4028934();
            sub_1C4497B98();
            swift_bridgeObjectRelease();
            sub_1C4496438();
            swift_bridgeObjectRelease();
            unint64_t v36 = *(void (**)(char *, uint64_t))(v6 + 8);
            v36(v9, v5);
            id v37 = objc_msgSend(self, sel_defaultManager);
            sub_1C4496488();
            uint64_t v38 = (void *)sub_1C4497188();
            swift_bridgeObjectRelease();
            id v39 = objc_msgSend(v37, sel_fileExistsAtPath_, v38);

            v36(v11, v5);
            return v39;
          }
          continue;
        }
        if (v22 >= 1)
        {
          switch(v20 >> 62)
          {
            case 1uLL:
              if (v21 >> 32 < (int)v21) {
                goto LABEL_47;
              }
              sub_1C3F7E324(v21, v20);
              swift_retain();
              uint64_t v29 = sub_1C4496298();
              if (!v29) {
                goto LABEL_28;
              }
              uint64_t v30 = sub_1C44962C8();
              if (__OFSUB__((int)v21, v30)) {
                goto LABEL_50;
              }
              v29 += (int)v21 - v30;
LABEL_28:
              sub_1C44962B8();
              uint64_t v18 = v46;
              unint64_t v17 = v47;
              sub_1C3FAD970(v29, v46, v47, (char *)&__s1);
              sub_1C3F7E2CC(v21, v20);
              break;
            case 2uLL:
              uint64_t v32 = *(void *)(v21 + 16);
              uint64_t v31 = *(void *)(v21 + 24);
              swift_retain();
              swift_retain();
              swift_retain();
              uint64_t v33 = sub_1C4496298();
              if (!v33) {
                goto LABEL_32;
              }
              uint64_t v34 = sub_1C44962C8();
              if (__OFSUB__(v32, v34)) {
                goto LABEL_49;
              }
              v33 += v32 - v34;
LABEL_32:
              if (__OFSUB__(v31, v32)) {
                goto LABEL_48;
              }
              sub_1C44962B8();
              uint64_t v18 = v46;
              unint64_t v17 = v47;
              sub_1C3FAD970(v33, v46, v47, (char *)&__s1);
              swift_release();
              swift_release();
              break;
            case 3uLL:
              *(void *)((char *)&__s1 + 6) = 0;
              *(void *)&long long __s1 = 0;
              swift_retain();
              sub_1C3FAD970((uint64_t)&__s1, v18, v17, (char *)v55);
              sub_1C3F7E2CC(v21, v20);
              swift_release();
              if (LOBYTE(v55[0]) == 1) {
                goto LABEL_41;
              }
              goto LABEL_8;
            default:
              *(void *)&long long __s1 = v21;
              WORD4(__s1) = v20;
              BYTE10(__s1) = BYTE2(v20);
              BYTE11(__s1) = BYTE3(v20);
              BYTE12(__s1) = BYTE4(v20);
              BYTE13(__s1) = BYTE5(v20);
              swift_retain();
              sub_1C3FAD970((uint64_t)&__s1, v18, v17, (char *)v55);
              sub_1C3F7E2CC(v21, v20);
              swift_release();
              if (v55[0]) {
                goto LABEL_41;
              }
              goto LABEL_8;
          }
          sub_1C3F7E2CC(v21, v20);
          swift_release();
          if (__s1) {
            goto LABEL_41;
          }
          goto LABEL_8;
        }
LABEL_40:
        sub_1C3F7E2CC(v21, v20);
LABEL_41:
        swift_bridgeObjectRelease();
        return 0;
    }
  }
}

uint64_t sub_1C4220698(uint64_t *a1, uint64_t a2)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v6 = *(void *)(*(void *)(v2 + 24) + 56);
  long long v14 = xmmword_1C44A4880;
  uint64_t v7 = v3;
  switch(v5 >> 62)
  {
    case 1uLL:
      if (v4 >> 32 < (int)v4) {
        __break(1u);
      }
      swift_retain_n();
      sub_1C3F7E324(v4, v5);
      sub_1C42257CC((int)v4, v4 >> 32, v5 & 0x3FFFFFFFFFFFFFFFLL, v6, a2, (uint64_t *)&v14);
      sub_1C3F7E2CC(v4, v5);
      if (v3) {
        goto LABEL_10;
      }
      goto LABEL_13;
    case 2uLL:
      uint64_t v11 = *(void *)(v4 + 16);
      uint64_t v10 = *(void *)(v4 + 24);
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_1C42257CC(v11, v10, v5 & 0x3FFFFFFFFFFFFFFFLL, v6, a2, (uint64_t *)&v14);
      if (v7)
      {
        swift_release();
        swift_release();
LABEL_10:
        sub_1C3F7FEB8(v14);
        return swift_release();
      }
      else
      {
        swift_release();
        swift_release();
LABEL_13:
        swift_release();
        return v14;
      }
    case 3uLL:
      memset(v13, 0, 14);
      swift_retain();
      uint64_t v9 = (char *)v13;
      goto LABEL_9;
    default:
      v13[0] = v4;
      LOWORD(v13[1]) = v5;
      BYTE2(v13[1]) = BYTE2(v5);
      BYTE3(v13[1]) = BYTE3(v5);
      BYTE4(v13[1]) = BYTE4(v5);
      BYTE5(v13[1]) = BYTE5(v5);
      swift_retain();
      uint64_t v9 = (char *)v13 + BYTE6(v5);
LABEL_9:
      sub_1C3FE2598(v13, (uint64_t)v9, v6, a2, (uint64_t *)&v14);
      if (v3) {
        goto LABEL_10;
      }
      goto LABEL_13;
  }
}

uint64_t sub_1C4220918(uint64_t a1, uint64_t a2)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = *(void *)(*(void *)(v2 + 24) + 56);
  uint64_t v6 = *(void *)(*(void *)a1 + 16);
  unint64_t v5 = *(void *)(*(void *)a1 + 24);
  unsigned __int8 v12 = 2;
  switch(v5 >> 62)
  {
    case 1uLL:
      if (v6 >> 32 < (int)v6) {
        __break(1u);
      }
      swift_retain_n();
      sub_1C3F7E324(v6, v5);
      sub_1C4225898((int)v6, v6 >> 32, v5 & 0x3FFFFFFFFFFFFFFFLL, v4, a2, &v12);
      goto LABEL_7;
    case 2uLL:
      uint64_t v9 = *(void *)(v6 + 16);
      uint64_t v10 = *(void *)(v6 + 24);
      swift_retain_n();
      sub_1C3F7E324(v6, v5);
      swift_retain();
      swift_retain();
      sub_1C4225898(v9, v10, v5 & 0x3FFFFFFFFFFFFFFFLL, v4, a2, &v12);
      swift_release();
      swift_release();
LABEL_7:
      sub_1C3F7E2CC(v6, v5);
      uint64_t result = swift_release();
      if (v3) {
        return result;
      }
      return v12;
    case 3uLL:
      memset(v11, 0, sizeof(v11));
      swift_retain_n();
      sub_1C3FE21E4((uint64_t)v11, (uint64_t)v11, v4, a2, &v12);
      if (v3)
      {
        sub_1C3F7E2CC(v6, v5);
        return swift_release_n();
      }
      else
      {
        sub_1C3F7E2CC(v6, v5);
        swift_release_n();
        return v12;
      }
    default:
      *(void *)uint64_t v11 = v6;
      *(_WORD *)&v11[8] = v5;
      v11[10] = BYTE2(v5);
      v11[11] = BYTE3(v5);
      v11[12] = BYTE4(v5);
      v11[13] = BYTE5(v5);
      swift_retain_n();
      sub_1C3FE21E4((uint64_t)v11, (uint64_t)&v11[BYTE6(v5)], v4, a2, &v12);
      sub_1C3F7E2CC(v6, v5);
      uint64_t result = swift_release_n();
      if (!v3) {
        return v12;
      }
      return result;
  }
}

unint64_t sub_1C4220BD8(uint64_t *a1)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v20 = *a1;
  unint64_t v21 = v4;
  v19[0] = 0;
  sub_1C4221734(&v20, (uint64_t)v19, (uint64_t)&type metadata for AnyCRDT, (uint64_t)&off_1F1F9CB20, &v15);
  if (!v2)
  {
    unint64_t v5 = v15;
    if (v15)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v6 = type metadata accessor for RetainVisitor();
      uint64_t v7 = swift_allocObject();
      uint64_t v8 = MEMORY[0x1E4FBC860];
      unint64_t v9 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
      unint64_t v10 = sub_1C3F7E37C(v8);
      *(void *)(v7 + 16) = v9;
      *(void *)(v7 + 24) = v10;
      uint64_t v17 = v6;
      uint64_t v18 = &off_1F1F982A0;
      unint64_t v15 = v7;
      uint64_t v11 = *(void (**)(unint64_t *))(*(void *)v5 + 120);
      swift_retain();
      v11(&v15);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v15);
      swift_release();
      swift_beginAccess();
      unint64_t v1 = *(void *)(v7 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_release();
    }
    else
    {
      unint64_t v15 = 0;
      unint64_t v16 = 0xE000000000000000;
      sub_1C4497D28();
      swift_bridgeObjectRelease();
      unint64_t v15 = 0xD000000000000011;
      unint64_t v16 = 0x80000001C44B32E0;
      uint64_t v20 = 10278;
      unint64_t v21 = 0xE200000000000000;
      v19[0] = v3;
      v19[1] = v4;
      sub_1C3FF44C8();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      unint64_t v1 = v15;
      unint64_t v13 = v16;
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v14 = v1;
      *(void *)(v14 + 8) = v13;
      *(unsigned char *)(v14 + 16) = 0;
      swift_willThrow();
    }
  }
  return v1;
}

uint64_t sub_1C4220E04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)&long long v22 = *a1;
  uint64_t result = sub_1C4220BD8((uint64_t *)&v22);
  if (v4) {
    return result;
  }
  uint64_t v8 = result;
  if (!result)
  {
    *(void *)&long long v22 = 0;
    *((void *)&v22 + 1) = 0xE000000000000000;
    sub_1C4497D28();
    swift_bridgeObjectRelease();
    *(void *)&long long v22 = 0xD000000000000015;
    *((void *)&v22 + 1) = 0x80000001C44B3360;
    sub_1C3FF44C8();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    sub_1C4497268();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    sub_1C4497268();
    long long v20 = v22;
    sub_1C3FE3FF0();
    swift_allocError();
    *(_OWORD *)uint64_t v21 = v20;
    *(unsigned char *)(v21 + 16) = 0;
    return swift_willThrow();
  }
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v23 = v8 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v23 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v14) {
        return swift_release();
      }
      unint64_t v18 = *(void *)(v23 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v14) {
          return swift_release();
        }
        unint64_t v18 = *(void *)(v23 + 8 * v9);
        if (!v18)
        {
          int64_t v9 = v17 + 3;
          if (v17 + 3 >= v14) {
            return swift_release();
          }
          unint64_t v18 = *(void *)(v23 + 8 * v9);
          if (!v18)
          {
            int64_t v9 = v17 + 4;
            if (v17 + 4 >= v14) {
              return swift_release();
            }
            unint64_t v18 = *(void *)(v23 + 8 * v9);
            if (!v18) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_7:
    long long v22 = *(_OWORD *)(*(void *)(v8 + 48) + 16 * v16);
    uint64_t result = (*(uint64_t (**)(long long *, ValueMetadata *, _UNKNOWN **, uint64_t, uint64_t))(a4 + 8))(&v22, &type metadata for AnyCRDT, &protocol witness table for AnyCRDT, a3, a4);
  }
  int64_t v19 = v17 + 5;
  if (v19 >= v14) {
    return swift_release();
  }
  unint64_t v18 = *(void *)(v23 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v14) {
      return swift_release();
    }
    unint64_t v18 = *(void *)(v23 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_26;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C42210DC(uint64_t *a1, long long *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  uint64_t v9 = *a3;
  uint64_t v8 = a3[1];
  uint64_t v10 = *a4;
  uint64_t v12 = *a5;
  uint64_t v11 = a5[1];
  *(void *)&long long v35 = *a3;
  *((void *)&v35 + 1) = v8;
  v31[0] = 0;
  uint64_t result = sub_1C4221734((uint64_t *)&v35, (uint64_t)v31, (uint64_t)&type metadata for AnyCRDT, (uint64_t)&off_1F1F9CB20, &v32);
  if (!v5)
  {
    uint64_t v36 = v8;
    uint64_t v29 = v11;
    if (v32)
    {
      BOOL v28 = a2;
      uint64_t v30 = v32;
      long long v34 = v33;
      uint64_t v14 = v36;
      uint64_t v32 = v9;
      *(void *)&long long v33 = v36;
      unint64_t v15 = sub_1C4220BD8(&v32);
      if (v15)
      {
        uint64_t v20 = v30;
        uint64_t v26 = v16;
        uint64_t v27 = v15;
        if (v10 != v30)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            uint64_t v21 = (*(uint64_t (**)(void))(*(void *)v30 + 160))();
            swift_release();
            uint64_t v20 = v21;
          }
          (*(void (**)(uint64_t))(*(void *)v20 + 96))(v10);
          uint64_t v10 = v20;
        }
        sub_1C410D0A4(v29);
        sub_1C410D0A4(v12);
        uint64_t v32 = v9;
        *(void *)&long long v33 = v14;
        long long v22 = v34;
        long long v35 = v34;
        v31[0] = v10;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        sub_1C4222CC4(&v32, &v35, v31, v27, v26);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        *a1 = v10;
        *BOOL v28 = v22;
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v32 = 0;
        *(void *)&long long v33 = 0xE000000000000000;
        sub_1C4497D28();
        swift_bridgeObjectRelease();
        uint64_t v32 = 0xD000000000000015;
        *(void *)&long long v33 = 0x80000001C44B3360;
        *(void *)&long long v35 = 10278;
        *((void *)&v35 + 1) = 0xE200000000000000;
        v31[0] = v9;
        v31[1] = v14;
        sub_1C3FF44C8();
        sub_1C4497268();
        swift_bridgeObjectRelease();
        sub_1C4497268();
        sub_1C4497268();
        swift_bridgeObjectRelease();
        sub_1C4497268();
        uint64_t v23 = v32;
        uint64_t v24 = v33;
        sub_1C3FE3FF0();
        swift_allocError();
        *(void *)uint64_t v25 = v23;
        *(void *)(v25 + 8) = v24;
        *(unsigned char *)(v25 + 16) = 0;
        swift_willThrow();
        return swift_release();
      }
    }
    else
    {
      uint64_t v32 = 0;
      *(void *)&long long v33 = 0xE000000000000000;
      sub_1C4497D28();
      swift_bridgeObjectRelease();
      uint64_t v32 = 0xD000000000000011;
      *(void *)&long long v33 = 0x80000001C44B32E0;
      *(void *)&long long v35 = 10278;
      *((void *)&v35 + 1) = 0xE200000000000000;
      *(void *)&long long v34 = v9;
      *((void *)&v34 + 1) = v36;
      sub_1C3FF44C8();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      uint64_t v17 = v32;
      uint64_t v18 = v33;
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v19 = v17;
      *(void *)(v19 + 8) = v18;
      *(unsigned char *)(v19 + 16) = 0;
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1C4221500@<X0>(long long *a1@<X0>, void *a2@<X8>)
{
  long long v8 = *a1;
  uint64_t v7 = 0;
  uint64_t result = sub_1C4221734((uint64_t *)&v8, (uint64_t)&v7, (uint64_t)&type metadata for AnyCRDT, (uint64_t)&off_1F1F9CB20, &v6);
  if (!v2)
  {
    uint64_t v5 = v6;
    if (v6)
    {
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = v5;
    }
    else
    {
      *a2 = 0;
    }
  }
  return result;
}

uint64_t sub_1C422158C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v8 = v3 + 16;
  uint64_t v7 = *(void **)(v3 + 16);
  uint64_t v9 = *(void *)(*(void *)(*(void *)(v8 + 8) + 40) + OBJC_IVAR___CRContext_assetManager);
  id v10 = v7;
  swift_retain();
  sub_1C4217D1C(a1, a2, v7, v9, a3);

  return swift_release();
}

uint64_t sub_1C422162C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EA39B898);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C449B490;
  *(void *)(inited + 32) = v2;
  uint64_t v4 = *(void **)(v1 + 16);
  id v5 = v4;
  swift_retain();
  sub_1C421C618(inited, (char *)v4);

  swift_setDeallocating();
  return swift_arrayDestroy();
}

uint64_t sub_1C42216F0@<X0>(long long *a1@<X0>, void *a2@<X8>)
{
  long long v4 = *a1;
  uint64_t v3 = 0;
  return sub_1C4221734((uint64_t *)&v4, (uint64_t)&v3, (uint64_t)&type metadata for AnyCRDT, (uint64_t)&off_1F1F9CB20, a2);
}

uint64_t sub_1C4221734@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v61 = a4;
  uint64_t v65 = a2;
  uint64_t v66 = a5;
  uint64_t v71 = *MEMORY[0x1E4F143B8];
  uint64_t v10 = sub_1C44968B8();
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v59 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v58);
  unint64_t v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_1C4497B38();
  uint64_t v14 = *(void *)(v64 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v64);
  uint64_t v62 = (char *)&v52 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = *a1;
  unint64_t v19 = a1[1];
  uint64_t v20 = *(void *)(*(void *)(v5 + 24) + 56);
  uint64_t v63 = v21;
  long long v60 = (char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(v19 >> 62)
  {
    case 1uLL:
      unint64_t v56 = v13;
      if (v18 >> 32 < (int)v18) {
        __break(1u);
      }
      uint64_t v57 = v14;
      swift_retain_n();
      sub_1C3F7E324(v18, v19);
      sub_1C4225718((int)v18, v18 >> 32, v20, (uint64_t *)&v68);
      if (v6)
      {
        sub_1C3F7E2CC(v18, v19);
        goto LABEL_10;
      }
      sub_1C3F7E2CC(v18, v19);
      uint64_t result = swift_release();
      unint64_t v13 = v56;
      uint64_t v14 = v57;
      goto LABEL_15;
    case 2uLL:
      uint64_t v23 = *(void *)(v18 + 16);
      uint64_t v24 = *(void *)(v18 + 24);
      swift_retain_n();
      swift_retain();
      swift_retain();
      sub_1C4225718(v23, v24, v20, (uint64_t *)&v68);
      if (v7)
      {
        swift_release();
        swift_release();
        uint64_t result = swift_release();
      }
      else
      {
        swift_release();
        swift_release();
LABEL_13:
        uint64_t result = swift_release();
LABEL_15:
        unint64_t v26 = *((void *)&v68 + 1);
        if (*((void *)&v68 + 1) >> 60 == 15)
        {
          uint64_t v27 = v66;
          *uint64_t v66 = 0;
          v27[1] = 0;
          v27[2] = 0;
        }
        else
        {
          unint64_t v56 = v13;
          uint64_t v57 = v14;
          uint64_t v28 = v68;
          long long v29 = v69;
          sub_1C3F7E324(v68, *((unint64_t *)&v68 + 1));
          sub_1C3F7E324(v29, *((unint64_t *)&v29 + 1));
          sub_1C3F7E2CC(v29, *((unint64_t *)&v29 + 1));
          uint64_t v30 = *(void *)(v5 + 40);
          type metadata accessor for CRDecoder(0);
          swift_allocObject();
          swift_retain();
          uint64_t v31 = sub_1C3FFF55C(v28, v26, v30);
          unsigned long long v55 = v29;
          uint64_t v53 = v28;
          unint64_t v54 = v26;
          *(unsigned char *)(v31 + 48) = 1;
          uint64_t v32 = v57;
          long long v33 = v62;
          uint64_t v34 = v64;
          uint64_t v35 = v31;
          (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v62, v65, v64);
          uint64_t v36 = v63;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v63 + 48))(v33, 1, a3) == 1)
          {
            (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v34);
            uint64_t v37 = swift_retain();
            AnyCRDT.init(from:)(v37, (uint64_t *)&v68);
          }
          else
          {
            BOOL v49 = v60;
            (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v60, v33, a3);
            (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v61 + 8))(&v68, v35, a3);
            (*(void (**)(char *, uint64_t))(v36 + 8))(v49, a3);
          }
          uint64_t v64 = v35;
          unsigned long long v40 = v55;
          unint64_t v39 = v40 >> 64;
          uint64_t v38 = v40;
          uint64_t v65 = v68;
          uint64_t v41 = swift_allocObject();
          uint64_t v42 = MEMORY[0x1E4FBC860];
          *(void *)(v41 + 16) = 0;
          *(void *)(v41 + 24) = v42;
          uint64_t v43 = MEMORY[0x1E4FBC868];
          *(void *)(v41 + 32) = v42;
          *(void *)(v41 + 40) = v43;
          *(unsigned char *)(v41 + 48) = 0;
          *(void *)(v41 + 56) = 0;
          uint64_t v44 = v41 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
          uint64_t v45 = type metadata accessor for Proto_CRDT(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v44, 1, 1, v45);
          uint64_t v46 = v41 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
          uint64_t v47 = type metadata accessor for Proto_Value(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 1, 1, v47);
          *(void *)(v41 + 16) = v30;
          swift_retain();
          swift_release();
          *(unsigned char *)(v41 + 49) = 1;
          uint64_t v70 = 0;
          long long v68 = 0u;
          long long v69 = 0u;
          sub_1C3F7E324(v38, v39);
          sub_1C44968A8();
          sub_1C42275C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
          uint64_t v48 = (uint64_t)v56;
          sub_1C4496A98();
          sub_1C3FFC790(v48, &v67);
          sub_1C42276D0(v48, type metadata accessor for Proto_Document);
          sub_1C4226E2C(v53, v54, v38, v39);
          swift_release();
          swift_setDeallocating();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C3F962E0(v41 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
          sub_1C3F962E0(v41 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
          uint64_t result = swift_deallocClassInstance();
          long long v50 = v67;
          uint64_t v51 = v66;
          *uint64_t v66 = v65;
          *(_OWORD *)(v51 + 1) = v50;
        }
      }
      break;
    case 3uLL:
      *(void *)((char *)&v67 + 6) = 0;
      *(void *)&long long v67 = 0;
      swift_retain();
      long long v22 = (char *)&v67;
      goto LABEL_9;
    default:
      *(void *)&long long v67 = v18;
      WORD4(v67) = v19;
      BYTE10(v67) = BYTE2(v19);
      BYTE11(v67) = BYTE3(v19);
      BYTE12(v67) = BYTE4(v19);
      BYTE13(v67) = BYTE5(v19);
      swift_retain();
      long long v22 = (char *)&v67 + BYTE6(v19);
LABEL_9:
      sub_1C3FE190C((uint64_t)&v67, (uint64_t)v22, v20, (uint64_t *)&v68);
      if (!v6) {
        goto LABEL_13;
      }
LABEL_10:
      uint64_t result = swift_release();
      break;
  }
  return result;
}

uint64_t sub_1C4222038(uint64_t a1)
{
  uint64_t v3 = v2;
  long long v4 = v1;
  uint64_t v85 = *MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C44968B8();
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v74 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for Proto_Document(0);
  MEMORY[0x1F4188790](v73);
  uint64_t v72 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Timestamp(0);
  uint64_t result = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16))
  {
    uint64_t v13 = (uint64_t)v12;
    sub_1C4496668();
    uint64_t v70 = *(int *)(type metadata accessor for Replica() + 20);
    uint64_t v71 = v13;
    *(void *)(v13 + v70) = 0;
    *(void *)(v13 + *(int *)(v9 + 20)) = 0;
    uint64_t v14 = *(void *)(a1 + 56);
    uint64_t v75 = a1 + 56;
    uint64_t v15 = 1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = -1;
    if (v15 < 64) {
      uint64_t v16 = ~(-1 << v15);
    }
    unint64_t v17 = v16 & v14;
    int64_t v76 = (unint64_t)(v15 + 63) >> 6;
    long long v69 = (char *)&v82 + 8;
    swift_bridgeObjectRetain();
    int64_t v18 = 0;
    long long v68 = xmmword_1C449B0C0;
    uint64_t v77 = a1;
    uint64_t v78 = v4;
    while (1)
    {
      if (v17)
      {
        unint64_t v19 = __clz(__rbit64(v17));
        uint64_t v20 = (v17 - 1) & v17;
        unint64_t v21 = v19 | (v18 << 6);
      }
      else
      {
        BOOL v22 = __OFADD__(v18++, 1);
        if (v22)
        {
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          __break(1u);
LABEL_89:
          __break(1u);
LABEL_90:
          __break(1u);
LABEL_91:
          __break(1u);
LABEL_92:
          __break(1u);
LABEL_93:
          __break(1u);
LABEL_94:
          __break(1u);
LABEL_95:
          __break(1u);
LABEL_96:
          __break(1u);
LABEL_97:
          __break(1u);
LABEL_98:
          __break(1u);
        }
        if (v18 >= v76) {
          goto LABEL_82;
        }
        unint64_t v23 = *(void *)(v75 + 8 * v18);
        if (!v23)
        {
          int64_t v24 = v18 + 1;
          if (v18 + 1 >= v76) {
            goto LABEL_82;
          }
          unint64_t v23 = *(void *)(v75 + 8 * v24);
          if (!v23)
          {
            int64_t v24 = v18 + 2;
            if (v18 + 2 >= v76) {
              goto LABEL_82;
            }
            unint64_t v23 = *(void *)(v75 + 8 * v24);
            if (!v23)
            {
              int64_t v24 = v18 + 3;
              if (v18 + 3 >= v76)
              {
LABEL_82:
                uint64_t v66 = swift_release();
                MEMORY[0x1F4188790](v66);
                uint64_t v67 = v71;
                *((void *)&v68 - 2) = v71;
                sub_1C421F230((void (*)(uint64_t))sub_1C4226DDC);
                return sub_1C42276D0(v67, type metadata accessor for Timestamp);
              }
              unint64_t v23 = *(void *)(v75 + 8 * v24);
              if (!v23)
              {
                while (1)
                {
                  int64_t v18 = v24 + 1;
                  if (__OFADD__(v24, 1)) {
                    goto LABEL_94;
                  }
                  if (v18 >= v76) {
                    goto LABEL_82;
                  }
                  unint64_t v23 = *(void *)(v75 + 8 * v18);
                  ++v24;
                  if (v23) {
                    goto LABEL_19;
                  }
                }
              }
            }
          }
          int64_t v18 = v24;
        }
LABEL_19:
        uint64_t v20 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v21);
      uint64_t v26 = *v25;
      unint64_t v27 = v25[1];
      uint64_t v28 = v4[3];
      uint64_t v29 = *(void *)(v28 + 56);
      unint64_t v80 = v20;
      int64_t v81 = v18;
      uint64_t v79 = v28;
      switch(v27 >> 62)
      {
        case 1uLL:
          if (v26 >> 32 < (int)v26) {
            goto LABEL_88;
          }
          sub_1C3F7E324(v26, v27);
          swift_retain();
          sub_1C3F7E324(v26, v27);
          uint64_t v34 = (char *)sub_1C4496298();
          if (!v34) {
            goto LABEL_28;
          }
          uint64_t v35 = sub_1C44962C8();
          if (__OFSUB__((int)v26, v35)) {
            goto LABEL_93;
          }
          v34 += (int)v26 - v35;
LABEL_28:
          uint64_t v36 = sub_1C44962B8();
          if (v36 >= (v26 >> 32) - (int)v26) {
            uint64_t v37 = (v26 >> 32) - (int)v26;
          }
          else {
            uint64_t v37 = v36;
          }
          long long v4 = v78;
          if (v34)
          {
            if (v37 < (uint64_t)0xFFFFFFFF80000000) {
              goto LABEL_86;
            }
            if (v37 > 0x7FFFFFFF) {
              goto LABEL_87;
            }
          }
          else
          {
            LODWORD(v37) = 0;
          }
          sqlite3_bind_blob(*(sqlite3_stmt **)(v29 + 232), 1, v34, v37, *(void (__cdecl **)(void *))(v29 + 72));
          if (sqlite3_step(*(sqlite3_stmt **)(v29 + 232)) == 100)
          {
            uint64_t v32 = sqlite3_column_bytes(*(sqlite3_stmt **)(v29 + 232), 0);
            uint64_t v53 = sqlite3_column_blob(*(sqlite3_stmt **)(v29 + 232), 0);
            if (!v53) {
              goto LABEL_98;
            }
            if (v32)
            {
              if ((int)v32 < 15)
              {
                uint64_t v49 = sub_1C3F5E208(v53, &v53[(int)v32]);
                unint64_t v50 = v56 & 0xFFFFFFFFFFFFFFLL;
              }
              else
              {
LABEL_68:
                sub_1C44962E8();
                swift_allocObject();
                if (v32 == 0x7FFFFFFF)
                {
                  uint64_t v54 = sub_1C4496288();
                  sub_1C44964E8();
                  uint64_t v49 = swift_allocObject();
                  *(_OWORD *)(v49 + 16) = v68;
                  unint64_t v50 = v54 | 0x8000000000000000;
                }
                else
                {
                  uint64_t v49 = v32 << 32;
                  unint64_t v50 = sub_1C4496288() | 0x4000000000000000;
                }
              }
            }
            else
            {
LABEL_71:
              uint64_t v49 = 0;
              unint64_t v50 = 0xC000000000000000;
            }
          }
          else
          {
LABEL_70:
            uint64_t v49 = 0;
            unint64_t v50 = 0xF000000000000000;
          }
LABEL_76:
          sqlite3_reset(*(sqlite3_stmt **)(v29 + 232));
          sub_1C3F7E2CC(v26, v27);
          swift_release();
LABEL_79:
          if (v50 >> 60 == 15)
          {
            sub_1C3F7E2CC(v26, v27);
          }
          else
          {
            uint64_t v57 = v4[5];
            type metadata accessor for CRDecoder(0);
            uint64_t v58 = swift_allocObject();
            *(void *)(v58 + 16) = 0;
            uint64_t v59 = MEMORY[0x1E4FBC860];
            *(void *)(v58 + 24) = MEMORY[0x1E4FBC860];
            *(void *)(v58 + 32) = v59;
            *(void *)(v58 + 40) = MEMORY[0x1E4FBC868];
            *(unsigned char *)(v58 + 48) = 0;
            *(void *)(v58 + 56) = 0;
            uint64_t v60 = v58 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
            uint64_t v61 = type metadata accessor for Proto_CRDT(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v60, 1, 1, v61);
            uint64_t v62 = v58 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
            uint64_t v63 = type metadata accessor for Proto_Value(0);
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 1, 1, v63);
            *(void *)(v58 + 16) = v57;
            swift_retain();
            swift_release();
            *(unsigned char *)(v58 + 49) = 1;
            uint64_t v84 = 0;
            memset(__dst, 0, sizeof(__dst));
            sub_1C3F7E324(v49, v50);
            sub_1C44968A8();
            sub_1C42275C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
            uint64_t v64 = (uint64_t)v72;
            sub_1C4496A98();
            if (v3)
            {
              swift_release();
              sub_1C3F7E2CC(v26, v27);
              swift_release();
              sub_1C3F6C6F0(v49, v50);
              return sub_1C42276D0(v71, type metadata accessor for Timestamp);
            }
            sub_1C3FFC790(v64, &v82);
            uint64_t v3 = 0;
            sub_1C42276D0(v64, type metadata accessor for Proto_Document);
            swift_setDeallocating();
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C3F962E0(v58 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
            sub_1C3F962E0(v58 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
            swift_deallocClassInstance();
            sub_1C3F844E4(v71);
            uint64_t v65 = (void *)v4[4];
            __dst[0] = v82;
            sub_1C3F7E324(v26, v27);
            swift_retain();
            sub_1C3FE27FC(v65, v26, v27, __dst);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C3F7E2CC(v26, v27);
            sub_1C3F7E2CC(v26, v27);
            swift_release();
            sub_1C3F6C6F0(v49, v50);
            a1 = v77;
            long long v4 = v78;
          }
          unint64_t v17 = v80;
          int64_t v18 = v81;
          break;
        case 2uLL:
          uint64_t v38 = *(void *)(v26 + 16);
          uint64_t v39 = *(void *)(v26 + 24);
          sub_1C3F7E324(v26, v27);
          swift_retain();
          sub_1C3F7E324(v26, v27);
          swift_retain();
          swift_retain();
          unsigned long long v40 = (char *)sub_1C4496298();
          if (!v40) {
            goto LABEL_38;
          }
          uint64_t v41 = sub_1C44962C8();
          if (__OFSUB__(v38, v41)) {
            goto LABEL_92;
          }
          v40 += v38 - v41;
LABEL_38:
          BOOL v22 = __OFSUB__(v39, v38);
          uint64_t v42 = v39 - v38;
          if (v22) {
            goto LABEL_89;
          }
          uint64_t v43 = sub_1C44962B8();
          if (v43 >= v42) {
            uint64_t v44 = v42;
          }
          else {
            uint64_t v44 = v43;
          }
          if (v40) {
            uint64_t v45 = v44;
          }
          else {
            uint64_t v45 = 0;
          }
          if (v45 < (uint64_t)0xFFFFFFFF80000000) {
            goto LABEL_90;
          }
          if (v45 > 0x7FFFFFFF) {
            goto LABEL_91;
          }
          sqlite3_bind_blob(*(sqlite3_stmt **)(v29 + 232), 1, v40, v45, *(void (__cdecl **)(void *))(v29 + 72));
          if (sqlite3_step(*(sqlite3_stmt **)(v29 + 232)) == 100)
          {
            uint64_t v46 = sqlite3_column_bytes(*(sqlite3_stmt **)(v29 + 232), 0);
            uint64_t v47 = sqlite3_column_blob(*(sqlite3_stmt **)(v29 + 232), 0);
            long long v4 = v78;
            if (!v47) {
              goto LABEL_96;
            }
            if (v46)
            {
              if ((int)v46 < 15)
              {
                uint64_t v49 = sub_1C3F5E208(v47, &v47[(int)v46]);
                unint64_t v50 = v55 & 0xFFFFFFFFFFFFFFLL;
              }
              else
              {
                sub_1C44962E8();
                swift_allocObject();
                if (v46 == 0x7FFFFFFF)
                {
                  uint64_t v48 = sub_1C4496288();
                  sub_1C44964E8();
                  uint64_t v49 = swift_allocObject();
                  *(_OWORD *)(v49 + 16) = v68;
                  unint64_t v50 = v48 | 0x8000000000000000;
                }
                else
                {
                  uint64_t v49 = v46 << 32;
                  unint64_t v50 = sub_1C4496288() | 0x4000000000000000;
                }
              }
            }
            else
            {
              uint64_t v49 = 0;
              unint64_t v50 = 0xC000000000000000;
            }
          }
          else
          {
            uint64_t v49 = 0;
            unint64_t v50 = 0xF000000000000000;
            long long v4 = v78;
          }
          sqlite3_reset(*(sqlite3_stmt **)(v29 + 232));
          swift_release();
          swift_release();
          sub_1C3F7E2CC(v26, v27);
          swift_release();
          a1 = v77;
          goto LABEL_79;
        case 3uLL:
          *(void *)((char *)&v82 + 6) = 0;
          *(void *)&long long v82 = 0;
          uint64_t v51 = *(sqlite3_stmt **)(v29 + 232);
          uint64_t v52 = *(void (__cdecl **)(void *))(v29 + 72);
          swift_retain();
          sqlite3_bind_blob(v51, 1, &v82, 0, v52);
          if (sqlite3_step(*(sqlite3_stmt **)(v29 + 232)) != 100) {
            goto LABEL_70;
          }
          uint64_t v32 = sqlite3_column_bytes(*(sqlite3_stmt **)(v29 + 232), 0);
          long long v33 = sqlite3_column_blob(*(sqlite3_stmt **)(v29 + 232), 0);
          if (v33) {
            goto LABEL_55;
          }
          goto LABEL_97;
        default:
          *(void *)&long long v82 = v26;
          WORD4(v82) = v27;
          BYTE10(v82) = BYTE2(v27);
          BYTE11(v82) = BYTE3(v27);
          BYTE12(v82) = BYTE4(v27);
          BYTE13(v82) = BYTE5(v27);
          uint64_t v30 = *(sqlite3_stmt **)(v29 + 232);
          uint64_t v31 = *(void (__cdecl **)(void *))(v29 + 72);
          swift_retain();
          sqlite3_bind_blob(v30, 1, &v82, BYTE6(v27), v31);
          if (sqlite3_step(*(sqlite3_stmt **)(v29 + 232)) != 100) {
            goto LABEL_70;
          }
          uint64_t v32 = sqlite3_column_bytes(*(sqlite3_stmt **)(v29 + 232), 0);
          long long v33 = sqlite3_column_blob(*(sqlite3_stmt **)(v29 + 232), 0);
          if (!v33) {
            goto LABEL_95;
          }
LABEL_55:
          if (!v32) {
            goto LABEL_71;
          }
          if ((int)v32 >= 15) {
            goto LABEL_68;
          }
          *(void *)((char *)__dst + 6) = 0;
          *(void *)&__dst[0] = 0;
          BYTE14(__dst[0]) = v32;
          memcpy(__dst, v33, (int)v32);
          uint64_t v49 = *(void *)&__dst[0];
          unint64_t v50 = DWORD2(__dst[0]) | ((unint64_t)BYTE12(__dst[0]) << 32) | ((unint64_t)BYTE13(__dst[0]) << 40) | ((unint64_t)BYTE14(__dst[0]) << 48);
          goto LABEL_76;
      }
    }
  }
  return result;
}

uint64_t sub_1C4222CC4(uint64_t *a1, long long *a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = v5;
  uint64_t v10 = *a1;
  unint64_t v11 = a1[1];
  uint64_t v41 = *a3;
  uint64_t v12 = *(void **)(v7 + 32);
  type metadata accessor for CREncoder();
  long long v42 = *a2;
  uint64_t inited = swift_initStackObject();
  uint64_t v14 = MEMORY[0x1E4FBC860];
  uint64_t v15 = MEMORY[0x1E4FBC868];
  *(void *)(inited + 32) = MEMORY[0x1E4FBC868];
  *(void *)(inited + 40) = v14;
  *(void *)(inited + 48) = v14;
  *(void *)(inited + 56) = v15;
  *(void *)(inited + 64) = v14;
  *(void *)(inited + 80) = 0;
  *(void *)(inited + 88) = 0;
  *(void *)(inited + 16) = v12;
  *(void *)(inited + 24) = v14;
  *(unsigned char *)(inited + 72) = 1;
  long long aBlock = v42;
  id v16 = v12;
  uint64_t v17 = sub_1C4007A4C(&aBlock);
  if (v6)
  {
    swift_setDeallocating();
    CREncoder.deinit();
    return swift_deallocClassInstance();
  }
  else
  {
    unint64_t v37 = v11;
    uint64_t v38 = v10;
    uint64_t v39 = v17;
    unint64_t v43 = v18;
    swift_setDeallocating();
    CREncoder.deinit();
    swift_deallocClassInstance();
    *(void *)&long long aBlock = v41;
    int v20 = sub_1C421DD28(&v50, (uint64_t)&aBlock, (uint64_t)&type metadata for AnyCRDT, (uint64_t)&protocol witness table for AnyCRDT);
    unsigned int v21 = v50;
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = MEMORY[0x1E4FBC868];
    *(void *)(v22 + 32) = MEMORY[0x1E4FBC868];
    *(void *)(v22 + 40) = v14;
    *(void *)(v22 + 48) = v14;
    *(void *)(v22 + 56) = v23;
    *(void *)(v22 + 64) = v14;
    *(void *)(v22 + 80) = 0;
    *(void *)(v22 + 88) = 0;
    *(void *)(v22 + 16) = v16;
    *(void *)(v22 + 24) = v14;
    *(unsigned char *)(v22 + 72) = v21;
    *(void *)&long long aBlock = v41;
    id v24 = v16;
    uint64_t v25 = sub_1C400672C((uint64_t *)&aBlock);
    unint64_t v27 = v26;
    swift_release();
    unsigned int v34 = v21;
    int v49 = v20;
    uint64_t v35 = v25;
    if (qword_1EBBC10F0 != -1) {
      swift_once();
    }
    uint64_t v28 = *(void **)(qword_1EBBC5A60 + 40);
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v24;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_1C3F5F340;
    *(void *)(v30 + 24) = v29;
    uint64_t v47 = sub_1C3F5F30C;
    uint64_t v48 = v30;
    *(void *)&long long aBlock = MEMORY[0x1E4F143A8];
    *((void *)&aBlock + 1) = 1107296256;
    uint64_t v45 = sub_1C3F5F2B8;
    uint64_t v46 = &block_descriptor_7;
    uint64_t v31 = _Block_copy(&aBlock);
    id v36 = v24;
    uint64_t v32 = v28;
    swift_retain();
    swift_release();
    dispatch_sync(v32, v31);

    _Block_release(v31);
    LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    uint64_t result = swift_release();
    if (v31)
    {
      __break(1u);
    }
    else
    {
      swift_retain();
      int v33 = v49 & 0x1FFFF;
      if (v34 >= 2) {
        sub_1C3FE1414(v36, v35, v27, v39, v43, a4, a5, v38, v37, 2u, v33);
      }
      else {
        sub_1C3FE1414(v36, v35, v27, v39, v43, a4, a5, v38, v37, 1u, v33);
      }
      swift_release();
      sub_1C3F7E2CC(v35, v27);
      sub_1C3F7E2CC(v39, v43);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

void *sub_1C4223128@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t *a4@<X8>)
{
  void *(*v10)(uint64_t *__return_ptr, long long *, uint64_t *, uint64_t, _UNKNOWN **, uint64_t, uint64_t);
  uint64_t v11;
  void *result;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25[2];
  long long v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;

  uint64_t v9 = *(void *)(a1 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  *(void *)&unint64_t v26 = v9;
  *((void *)&v26 + 1) = v8;
  v25[0] = a1;
  uint64_t v10 = *(void *(**)(uint64_t *__return_ptr, long long *, uint64_t *, uint64_t, _UNKNOWN **, uint64_t, uint64_t))(a3 + 48);
  unint64_t v11 = type metadata accessor for AnyReference();
  uint64_t result = v10(&v27, &v26, v25, v11, &off_1F1F96DD8, a2, a3);
  if (!v4)
  {
    uint64_t v13 = v8;
    uint64_t v14 = v27;
    if (v27)
    {
      uint64_t v15 = v28;
      id v16 = v9;
      unint64_t v27 = v9;
      uint64_t v28 = v13;
      uint64_t v23 = v29;
      id v24 = v15;
      *(void *)&unint64_t v26 = v15;
      *((void *)&v26 + 1) = v29;
      v25[0] = v14;
      sub_1C3F7E324(v9, v13);
      uint64_t v17 = MEMORY[0x1E4FBC860];
      unint64_t v18 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
      unint64_t v19 = sub_1C3F7E37C(v17);
      sub_1C4222CC4(&v27, &v26, v25, v18, v19);
      sub_1C3F7E2CC(v16, v13);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      *a4 = v24;
      a4[1] = v23;
    }
    else
    {
      unint64_t v27 = 0;
      uint64_t v28 = 0xE000000000000000;
      sub_1C4497D28();
      swift_bridgeObjectRelease();
      unint64_t v27 = 0xD000000000000011;
      uint64_t v28 = 0x80000001C44B32E0;
      *(void *)&unint64_t v26 = 10278;
      *((void *)&v26 + 1) = 0xE200000000000000;
      v25[0] = v9;
      v25[1] = v8;
      sub_1C3F7E324(v9, v8);
      sub_1C3FF44C8();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C4497268();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C3F7E2CC(v9, v8);
      sub_1C4497268();
      int v20 = v27;
      unsigned int v21 = v28;
      sub_1C3FE3FF0();
      swift_allocError();
      *(void *)uint64_t v22 = v20;
      *(void *)(v22 + 8) = v21;
      *(unsigned char *)(v22 + 16) = 0;
      return (void *)swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_1C42233A0()
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  swift_retain();
  sub_1C3FDBDF4((void (*)(uint64_t, unint64_t, uint64_t, unint64_t))sub_1C4223C3C);
  swift_release();
  if (v0) {
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_1C4223440(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void **a8)
{
  uint64_t v39 = a6;
  uint64_t v40 = a7;
  uint64_t v45 = a1;
  uint64_t v14 = sub_1C44968B8();
  MEMORY[0x1F4188790](v14 - 8);
  uint64_t v15 = type metadata accessor for Proto_Document(0);
  uint64_t result = MEMORY[0x1F4188790](v15);
  unint64_t v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4 >> 60 != 15)
  {
    unint64_t v37 = a2;
    uint64_t v38 = a8;
    uint64_t v19 = *(void *)(a5 + 40);
    type metadata accessor for CRDecoder(0);
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = MEMORY[0x1E4FBC860];
    *(void *)(v20 + 16) = 0;
    *(void *)(v20 + 24) = v21;
    uint64_t v22 = MEMORY[0x1E4FBC868];
    *(void *)(v20 + 32) = v21;
    *(void *)(v20 + 40) = v22;
    *(unsigned char *)(v20 + 48) = 0;
    *(void *)(v20 + 56) = 0;
    uint64_t v23 = v20 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
    uint64_t v24 = type metadata accessor for Proto_CRDT(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v23, 1, 1, v24);
    uint64_t v25 = v20 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
    uint64_t v26 = type metadata accessor for Proto_Value(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
    *(void *)(v20 + 16) = v19;
    sub_1C3F6C704(a3, a4);
    swift_retain();
    swift_release();
    *(unsigned char *)(v20 + 49) = 1;
    uint64_t v43 = 0;
    long long v41 = 0u;
    long long v42 = 0u;
    sub_1C3F7E324(a3, a4);
    sub_1C44968A8();
    sub_1C42275C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
    sub_1C4496A98();
    if (!v8)
    {
      sub_1C3FFC790((uint64_t)v18, &v44);
      sub_1C42276D0((uint64_t)v18, type metadata accessor for Proto_Document);
      swift_setDeallocating();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1C3F962E0(v20 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
      sub_1C3F962E0(v20 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
      swift_deallocClassInstance();
      uint64_t v27 = v44;
      if (sub_1C4112134(*((uint64_t *)&v44 + 1), v40))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v29 = v37;
        uint64_t v28 = v38;
        uint64_t v30 = v45;
      }
      else
      {
        char v31 = sub_1C4112134(v27, v39);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v29 = v37;
        uint64_t v28 = v38;
        uint64_t v30 = v45;
        if ((v31 & 1) == 0) {
          return sub_1C3F6C6F0(a3, a4);
        }
      }
      uint64_t v32 = *v28;
      sub_1C3F7E324(v30, v29);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v28 = v32;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v32 = sub_1C3FF12A8(0, v32[2] + 1, 1, v32);
        *uint64_t v28 = v32;
      }
      unint64_t v35 = v32[2];
      unint64_t v34 = v32[3];
      if (v35 >= v34 >> 1) {
        uint64_t v32 = sub_1C3FF12A8((void *)(v34 > 1), v35 + 1, 1, v32);
      }
      v32[2] = v35 + 1;
      id v36 = &v32[2 * v35];
      v36[4] = v30;
      v36[5] = v29;
      *uint64_t v28 = v32;
      return sub_1C3F6C6F0(a3, a4);
    }
    sub_1C3F6C6F0(a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C42238AC()
{
  swift_release();
  swift_release();
  sub_1C3F870F4(*(void *)(v0 + 48));
  sub_1C3F962E0(v0 + qword_1EA3B8A10, &qword_1EBBC07E8);
  return v0;
}

uint64_t sub_1C4223904()
{
  sub_1C42238AC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CRSQLStoreBundleCapsule()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C4223974()
{
  if (!qword_1EA39B408[0])
  {
    sub_1C4496678();
    unint64_t v0 = sub_1C4497B38();
    if (!v1) {
      atomic_store(v0, qword_1EA39B408);
    }
  }
}

uint64_t sub_1C42239CC(void (*a1)(uint64_t))
{
  return sub_1C421F230(a1);
}

uint64_t sub_1C42239E4(uint64_t a1)
{
  return sub_1C421F828(a1);
}

uint64_t sub_1C42239FC(uint64_t a1)
{
  return sub_1C4222038(a1);
}

uint64_t sub_1C4223A14(uint64_t *a1, long long *a2, uint64_t *a3, uint64_t *a4, uint64_t *a5)
{
  return sub_1C42210DC(a1, a2, a3, a4, a5);
}

uint64_t sub_1C4223A2C@<X0>(long long *a1@<X0>, void *a2@<X8>)
{
  return sub_1C4221500(a1, a2);
}

void *sub_1C4223A44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, unint64_t *a4@<X8>)
{
  return sub_1C4223128(a1, a2, a3, a4);
}

unint64_t sub_1C4223A5C(uint64_t a1, unint64_t a2)
{
  return (unint64_t)sub_1C421FFE4(a1, a2) & 1;
}

uint64_t sub_1C4223A88(uint64_t *a1)
{
  return sub_1C422162C(a1);
}

unint64_t sub_1C4223AA0(uint64_t *a1)
{
  return sub_1C4220BD8(a1);
}

uint64_t sub_1C4223AB8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C4220E04(a1, a2, a3, a4);
}

uint64_t sub_1C4223AD0(uint64_t *a1, uint64_t a2)
{
  return sub_1C4220698(a1, a2);
}

uint64_t sub_1C4223AF4(uint64_t a1, uint64_t a2)
{
  return sub_1C4220918(a1, a2);
}

uint64_t sub_1C4223B18@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C421F1D4(a1);
}

uint64_t sub_1C4223B3C@<X0>(uint64_t a1@<X8>)
{
  return sub_1C421F6FC(a1);
}

uint64_t sub_1C4223B60@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  return sub_1C4221734(a1, a2, a3, a4, a5);
}

uint64_t sub_1C4223B84@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C42233A0();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C4223BB4(uint64_t *a1)
{
  return sub_1C421FDB4(a1) & 1;
}

uint64_t sub_1C4223BDC@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  return sub_1C422158C(a1, a2, a3);
}

uint64_t sub_1C4223C00(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C4223C3C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  return sub_1C4223440(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void *)(v4 + 32), *(void ***)(v4 + 40));
}

uint64_t sub_1C4223C5C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 136) = a4;
  *(void *)(v5 + 144) = v4;
  *(unsigned char *)(v5 + 257) = a2;
  *(void *)(v5 + 120) = a1;
  *(void *)(v5 + 128) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  *(void *)(v5 + 152) = swift_task_alloc();
  uint64_t v6 = sub_1C4496498();
  *(void *)(v5 + 160) = v6;
  *(void *)(v5 + 168) = *(void *)(v6 - 8);
  *(void *)(v5 + 176) = swift_task_alloc();
  *(void *)(v5 + 184) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C4223D64, v4, 0);
}

uint64_t sub_1C4223D64()
{
  uint64_t v39 = v0;
  if (qword_1EBBBB068 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C4496C58();
  *(void *)(v0 + 192) = __swift_project_value_buffer(v1, (uint64_t)qword_1EBBC58C0);
  swift_retain_n();
  swift_retain();
  uint64_t v2 = sub_1C4496C38();
  os_log_type_t v3 = sub_1C44979B8();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 120);
  if (v4)
  {
    os_log_type_t typea = v3;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v38 = v35;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v9 = *(void *)(v5 + 120);
    unint64_t v8 = *(void *)(v5 + 128);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 88) = sub_1C43BE154(v9, v8, &v38);
    sub_1C4497B68();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v10 = *(void *)(v6 + 16);
    unint64_t v11 = *(void *)(v6 + 24);
    sub_1C3F7E324(v10, v11);
    *(void *)(v0 + 72) = sub_1C4496548();
    *(void *)(v0 + 80) = v12;
    *(void *)(v0 + 56) = 47;
    *(void *)(v0 + 64) = 0xE100000000000000;
    *(void *)(v0 + 40) = 95;
    *(void *)(v0 + 48) = 0xE100000000000000;
    sub_1C4028934();
    uint64_t v13 = sub_1C4497B98();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v10, v11);
    *(void *)(v0 + 112) = sub_1C43BE154(v13, v15, &v38);
    sub_1C4497B68();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C3F4F000, v2, typea, "%s readAsset %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8782060](v35, -1, -1);
    MEMORY[0x1C8782060](v7, -1, -1);
  }
  else
  {
    swift_release();
    swift_release_n();
  }

  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v17 = *(void *)(v0 + 120);
  uint64_t v19 = *(void *)(v17 + 16);
  unint64_t v18 = *(void *)(v17 + 24);
  swift_beginAccess();
  uint64_t v20 = *(void *)(v16 + 112);
  if (!*(void *)(v20 + 16)) {
    goto LABEL_12;
  }
  sub_1C3F7E324(v19, v18);
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C4061A50(v19, v18);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v19, v18);
    goto LABEL_12;
  }
  char v23 = *(unsigned char *)(v0 + 257);
  uint64_t v24 = (void *)(*(void *)(v20 + 56) + 16 * v21);
  *(void *)(v0 + 200) = *v24;
  uint64_t v25 = v24[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C3F7E2CC(v19, v18);
  if ((v23 & 1) == 0)
  {
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(ObjectType, v25))
    {
      swift_unknownObjectRelease();
LABEL_12:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v27 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v27(2);
    }
  }
  uint64_t v29 = *(void *)(v0 + 144);
  uint64_t v30 = swift_getObjectType();
  uint64_t v31 = *(void *)(v29 + 120);
  *(void *)(v0 + 208) = v31;
  uint64_t v32 = *(void *)(v29 + 128);
  *(void *)(v0 + 216) = v32;
  type = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 + 56)
                                                                             + **(int **)(v25 + 56));
  int v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v33;
  *int v33 = v0;
  v33[1] = sub_1C422425C;
  uint64_t v34 = *(void *)(v0 + 152);
  return type(v34, v31, v32, v30, v25);
}

uint64_t sub_1C422425C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C422436C, v1, 0);
}

uint64_t sub_1C422436C()
{
  uint64_t v27 = v0;
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_unknownObjectRelease();
    sub_1C3F962E0(v3, &qword_1EBBC0760);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(2);
  }
  else
  {
    uint64_t v6 = v0[23];
    uint64_t v7 = v0[22];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v7, v6, v1);
    swift_retain();
    unint64_t v8 = sub_1C4496C38();
    os_log_type_t v9 = sub_1C44979B8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = v0[26];
      unint64_t v11 = v0[27];
      uint64_t v12 = v0[21];
      uint64_t v24 = v0[22];
      uint64_t v23 = v0[20];
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v26 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      swift_bridgeObjectRetain();
      v0[13] = sub_1C43BE154(v10, v11, &v26);
      sub_1C4497B68();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v13 + 12) = 2080;
      sub_1C42275C8(&qword_1EA39ED28, MEMORY[0x1E4F276F0]);
      uint64_t v15 = sub_1C4498088();
      v0[12] = sub_1C43BE154(v15, v16, &v26);
      sub_1C4497B68();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v17(v24, v23);
      _os_log_impl(&dword_1C3F4F000, v8, v9, "%s reading url %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8782060](v14, -1, -1);
      MEMORY[0x1C8782060](v13, -1, -1);
    }
    else
    {
      uint64_t v19 = v0[21];
      uint64_t v18 = v0[22];
      uint64_t v20 = v0[20];
      swift_release();
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v17(v18, v20);
    }

    v0[29] = v17;
    uint64_t v25 = (uint64_t (*)(void *, uint64_t))(v0[16] + *(int *)v0[16]);
    uint64_t v21 = (void *)swift_task_alloc();
    v0[30] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1C4224744;
    uint64_t v22 = v0[23];
    return v25(v0 + 32, v22);
  }
}

uint64_t sub_1C4224744()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    BOOL v4 = sub_1C422492C;
  }
  else {
    BOOL v4 = sub_1C4224870;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C4224870()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v4 = *(unsigned __int8 *)(v0 + 256);
  swift_unknownObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v5(v4);
}

uint64_t sub_1C422492C()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[29];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[20];
  swift_unknownObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C42249E0(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 136) = a4;
  *(void *)(v5 + 144) = v4;
  *(unsigned char *)(v5 + 256) = a2;
  *(void *)(v5 + 120) = a1;
  *(void *)(v5 + 128) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0760);
  *(void *)(v5 + 152) = swift_task_alloc();
  uint64_t v6 = sub_1C4496498();
  *(void *)(v5 + 160) = v6;
  *(void *)(v5 + 168) = *(void *)(v6 - 8);
  *(void *)(v5 + 176) = swift_task_alloc();
  *(void *)(v5 + 184) = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C4224AE8, v4, 0);
}

uint64_t sub_1C4224AE8()
{
  uint64_t v39 = v0;
  if (qword_1EBBBB068 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1C4496C58();
  *(void *)(v0 + 192) = __swift_project_value_buffer(v1, (uint64_t)qword_1EBBC58C0);
  swift_retain_n();
  swift_retain();
  uint64_t v2 = sub_1C4496C38();
  os_log_type_t v3 = sub_1C44979B8();
  BOOL v4 = os_log_type_enabled(v2, v3);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 120);
  if (v4)
  {
    os_log_type_t typea = v3;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v38 = v35;
    *(_DWORD *)uint64_t v7 = 136315394;
    uint64_t v9 = *(void *)(v5 + 120);
    unint64_t v8 = *(void *)(v5 + 128);
    swift_bridgeObjectRetain();
    *(void *)(v0 + 96) = sub_1C43BE154(v9, v8, &v38);
    sub_1C4497B68();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v7 + 12) = 2080;
    uint64_t v10 = *(void *)(v6 + 16);
    unint64_t v11 = *(void *)(v6 + 24);
    sub_1C3F7E324(v10, v11);
    *(void *)(v0 + 40) = sub_1C4496548();
    *(void *)(v0 + 48) = v12;
    *(void *)(v0 + 56) = 47;
    *(void *)(v0 + 64) = 0xE100000000000000;
    *(void *)(v0 + 72) = 95;
    *(void *)(v0 + 80) = 0xE100000000000000;
    sub_1C4028934();
    uint64_t v13 = sub_1C4497B98();
    unint64_t v15 = v14;
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v10, v11);
    *(void *)(v0 + 112) = sub_1C43BE154(v13, v15, &v38);
    sub_1C4497B68();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C3F4F000, v2, typea, "%s readAsset %s", (uint8_t *)v7, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C8782060](v35, -1, -1);
    MEMORY[0x1C8782060](v7, -1, -1);
  }
  else
  {
    swift_release();
    swift_release_n();
  }

  uint64_t v16 = *(void *)(v0 + 144);
  uint64_t v17 = *(void *)(v0 + 120);
  uint64_t v19 = *(void *)(v17 + 16);
  unint64_t v18 = *(void *)(v17 + 24);
  swift_beginAccess();
  uint64_t v20 = *(void *)(v16 + 112);
  if (!*(void *)(v20 + 16)) {
    goto LABEL_12;
  }
  sub_1C3F7E324(v19, v18);
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_1C4061A50(v19, v18);
  if ((v22 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    sub_1C3F7E2CC(v19, v18);
    goto LABEL_12;
  }
  char v23 = *(unsigned char *)(v0 + 256);
  uint64_t v24 = (void *)(*(void *)(v20 + 56) + 16 * v21);
  *(void *)(v0 + 200) = *v24;
  uint64_t v25 = v24[1];
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  sub_1C3F7E2CC(v19, v18);
  if ((v23 & 1) == 0)
  {
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v25 + 40))(ObjectType, v25))
    {
      swift_unknownObjectRelease();
LABEL_12:
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v27 = *(uint64_t (**)(uint64_t))(v0 + 8);
      return v27(1);
    }
  }
  uint64_t v29 = *(void *)(v0 + 144);
  uint64_t v30 = swift_getObjectType();
  uint64_t v31 = *(void *)(v29 + 120);
  *(void *)(v0 + 208) = v31;
  uint64_t v32 = *(void *)(v29 + 128);
  *(void *)(v0 + 216) = v32;
  type = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v25 + 56)
                                                                             + **(int **)(v25 + 56));
  int v33 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v33;
  *int v33 = v0;
  v33[1] = sub_1C4224FE4;
  uint64_t v34 = *(void *)(v0 + 152);
  return type(v34, v31, v32, v30, v25);
}

uint64_t sub_1C4224FE4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  swift_task_dealloc();
  return MEMORY[0x1F4188298](sub_1C42250F4, v1, 0);
}

uint64_t sub_1C42250F4()
{
  uint64_t v26 = v0;
  uint64_t v1 = v0[20];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[19];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    swift_unknownObjectRelease();
    sub_1C3F962E0(v3, &qword_1EBBC0760);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    BOOL v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(1);
  }
  else
  {
    uint64_t v6 = v0[23];
    uint64_t v7 = v0[22];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v6, v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v7, v6, v1);
    swift_retain();
    unint64_t v8 = sub_1C4496C38();
    os_log_type_t v9 = sub_1C44979B8();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = v0[26];
      unint64_t v11 = v0[27];
      uint64_t v12 = v0[21];
      uint64_t v23 = v0[22];
      uint64_t v22 = v0[20];
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v25 = v14;
      *(_DWORD *)uint64_t v13 = 136315394;
      swift_bridgeObjectRetain();
      v0[13] = sub_1C43BE154(v10, v11, &v25);
      sub_1C4497B68();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v13 + 12) = 2080;
      sub_1C42275C8(&qword_1EA39ED28, MEMORY[0x1E4F276F0]);
      uint64_t v15 = sub_1C4498088();
      v0[11] = sub_1C43BE154(v15, v16, &v25);
      sub_1C4497B68();
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
      v17(v23, v22);
      _os_log_impl(&dword_1C3F4F000, v8, v9, "%s reading url %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C8782060](v14, -1, -1);
      MEMORY[0x1C8782060](v13, -1, -1);
    }
    else
    {
      uint64_t v19 = v0[21];
      uint64_t v18 = v0[22];
      uint64_t v20 = v0[20];
      swift_release();
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v19 + 8);
      v17(v18, v20);
    }

    v0[29] = v17;
    uint64_t v24 = (uint64_t (*)(void))(v0[16] + *(int *)v0[16]);
    uint64_t v21 = (void *)swift_task_alloc();
    v0[30] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_1C42254BC;
    return v24();
  }
}

uint64_t sub_1C42254BC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 248) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 144);
  if (v0) {
    BOOL v4 = sub_1C422492C;
  }
  else {
    BOOL v4 = sub_1C42255E8;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C42255E8()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[29];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[20];
  swift_unknownObjectRelease();
  v1(v2, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  BOOL v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_1C4225698()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C42256D0()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C42256E0()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 40) + 32))(*(void *)(v0 + 24));
}

uint64_t sub_1C4225718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1C4496298();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_1C44962C8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v12 = sub_1C44962B8();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  sub_1C3FE190C(v9, v15, a3, a4);
  return swift_release();
}

uint64_t sub_1C42257CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t result = sub_1C4496298();
  uint64_t v12 = (char *)result;
  if (result)
  {
    uint64_t result = sub_1C44962C8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v12 += a1 - result;
  }
  BOOL v13 = __OFSUB__(a2, a1);
  uint64_t v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = sub_1C44962B8();
  if (v15 >= v14) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = &v12[v16];
  if (v12) {
    uint64_t v18 = (uint64_t)v17;
  }
  else {
    uint64_t v18 = 0;
  }
  sub_1C3FE2598(v12, v18, a4, a5, a6);
  return swift_release();
}

uint64_t sub_1C4225898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned char *a6)
{
  uint64_t result = sub_1C4496298();
  uint64_t v12 = result;
  if (result)
  {
    uint64_t result = sub_1C44962C8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v12 += a1 - result;
  }
  BOOL v13 = __OFSUB__(a2, a1);
  uint64_t v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = sub_1C44962B8();
  if (v15 >= v14) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = v12 + v16;
  if (v12) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = 0;
  }
  sub_1C3FE21E4(v12, v18, a4, a5, a6);
  return swift_release();
}

uint64_t sub_1C4225964(uint64_t *a1)
{
  return sub_1C42259A4(a1, sub_1C411E90C, sub_1C4225A28);
}

uint64_t sub_1C42259A4(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_1C4225A28(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C4498068();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        int v81 = *(__int16 *)(v79 + 2 * i);
        uint64_t v82 = v78;
        do
        {
          int v83 = *(__int16 *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(_WORD *)(v79 + v82 + 2) = v83;
          *(_WORD *)(v79 + v82) = v81;
          v82 -= 2;
        }
        while (v82 != -2);
        v78 += 2;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v95 = result;
  uint64_t v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          unint64_t v86 = v11;
          int v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_1C4226734((__int16 *)(v84 + 2 * v88), (__int16 *)(v84 + 2 * *(void *)&v87[16 * v12 - 16]), v84 + 2 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v86 = sub_1C411E87C((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          char v90 = &v86[16 * v85 + 32];
          *(void *)char v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v94 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C4497488();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v96;
    uint64_t v94 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 2;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v97 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      int v14 = *(__int16 *)(v10 + 2 * v9);
      int v15 = *(__int16 *)(v10 + 2 * v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        __int16 v16 = v14;
        while (1)
        {
          int v17 = *(__int16 *)(v10 + 2 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          __int16 v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              __int16 v20 = *(_WORD *)(v10 + 2 * v19);
              *(_WORD *)(v10 + 2 * v19) = *(_WORD *)(v10 + 2 * v18);
              *(_WORD *)(v10 + 2 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = (__int16 *)(v93 + 2 * v9);
      do
      {
        int v23 = *(__int16 *)(v10 + 2 * v9);
        uint64_t v24 = v13;
        uint64_t v25 = v22;
        do
        {
          int v26 = *v25;
          if (v23 >= v26) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          v25[1] = v26;
          *v25-- = v23;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C411E2A8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_1C411E2A8((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          id v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          long long v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        int v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        unint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1C4226734((__int16 *)(v10 + 2 * *(void *)v71), (__int16 *)(v10 + 2 * *(void *)v74), v10 + 2 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1C4497F48();
  __break(1u);
  return result;
}

uint64_t sub_1C42260B8(void *a1)
{
  uint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C4498068();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v81 = *(unsigned __int8 *)(v79 + i);
        uint64_t v82 = v78;
        do
        {
          unsigned int v83 = *(unsigned __int8 *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(unsigned char *)(v79 + v82 + 1) = v83;
          *(unsigned char *)(v79 + v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v94 = result;
  uint64_t v95 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (unsigned __int8 *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_103:
      uint64_t v93 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          unint64_t v86 = v11;
          int v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_1C4226998((unsigned __int8 *)(v84 + v88), (unsigned __int8 *)(v84 + *(void *)&v87[16 * v12 - 16]), v84 + v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v86 = sub_1C411E87C((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          char v90 = &v86[16 * v85 + 32];
          *(void *)char v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v93 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v93 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C4497488();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v95;
    uint64_t v93 = v7;
    __dst = (unsigned __int8 *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v92 = v2;
  uint64_t v10 = *v2;
  uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v96 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      unsigned int v14 = *(unsigned __int8 *)(v10 + v9);
      unsigned int v15 = *(unsigned __int8 *)(v10 + v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        unsigned int v16 = v14;
        while (1)
        {
          unsigned int v17 = *(unsigned __int8 *)(v10 + v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          unsigned int v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              char v20 = *(unsigned char *)(v10 + v19);
              *(unsigned char *)(v10 + v19) = *(unsigned char *)(v10 + v18);
              *(unsigned char *)(v10 + v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v94) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v94;
    if (__OFADD__(v13, v94)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = (unsigned char *)(v10 + v9);
      do
      {
        unsigned int v23 = *(unsigned __int8 *)(v10 + v9);
        uint64_t v24 = v13;
        uint64_t v25 = v22;
        do
        {
          unsigned int v26 = *(v25 - 1);
          if (v23 >= v26) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *uint64_t v25 = v26;
          *--uint64_t v25 = v23;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_1C411E2A8(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v96;
    if (v28 >= v27 >> 1)
    {
      uint64_t v77 = sub_1C411E2A8((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v96;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          id v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          long long v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        int v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        uint64_t v73 = v29;
        unint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_1C4226998((unsigned __int8 *)(v10 + *(void *)v71), (unsigned __int8 *)(v10 + *(void *)v74), v10 + v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v96;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v95;
    if (v9 >= v95)
    {
      uint64_t v2 = v92;
      uint64_t v8 = v93;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_1C4497F48();
  __break(1u);
  return result;
}

uint64_t sub_1C4226734(__int16 *__src, __int16 *a2, unint64_t a3, char *__dst)
{
  unsigned int v26 = __src;
  BOOL v4 = (__int16 *)__dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  if ((char *)a2 - (char *)__src >= 0) {
    int64_t v9 = (char *)a2 - (char *)__src;
  }
  else {
    int64_t v9 = v8 + 1;
  }
  uint64_t v10 = v9 >> 1;
  uint64_t v11 = a3 - (void)a2;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  else {
    uint64_t v12 = v11 + 1;
  }
  uint64_t v13 = v12 >> 1;
  uint64_t v25 = (__int16 *)__dst;
  if (v10 >= v12 >> 1)
  {
    if (v11 >= -1)
    {
      if (__dst != (char *)a2 || &a2[v13] <= (__int16 *)__dst) {
        memmove(__dst, a2, 2 * v13);
      }
      uint64_t v18 = &v4[v13];
      uint64_t v24 = v18;
      unsigned int v26 = v6;
      if (v7 < v6 && v11 >= 2)
      {
        uint64_t v19 = (__int16 *)(a3 - 2);
        while (1)
        {
          char v20 = v19 + 1;
          uint64_t v21 = v6 - 1;
          int v22 = *(v6 - 1);
          if (*(v18 - 1) >= v22)
          {
            uint64_t v24 = v18 - 1;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *uint64_t v19 = *(v18 - 1);
            }
            --v18;
            if (v6 <= v7) {
              goto LABEL_44;
            }
          }
          else
          {
            if (v20 != v6 || v19 >= v6) {
              *uint64_t v19 = v22;
            }
            unsigned int v26 = --v6;
            if (v21 <= v7) {
              goto LABEL_44;
            }
          }
          --v19;
          if (v18 <= v4) {
            goto LABEL_44;
          }
        }
      }
      goto LABEL_44;
    }
  }
  else if (v8 >= -1)
  {
    if (__dst != (char *)__src || &__src[v10] <= (__int16 *)__dst) {
      memmove(__dst, __src, 2 * v10);
    }
    unsigned int v14 = &v4[v10];
    uint64_t v24 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 2)
    {
      do
      {
        int v15 = *v6;
        int v16 = *v4;
        if (v15 >= v16)
        {
          if (v7 != v4) {
            *uint64_t v7 = v16;
          }
          uint64_t v25 = ++v4;
          unsigned int v17 = v6;
        }
        else
        {
          unsigned int v17 = v6 + 1;
          if (v7 < v6 || v7 >= v17 || v7 != v6) {
            *uint64_t v7 = v15;
          }
        }
        ++v7;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v17;
      }
      while ((unint64_t)v17 < a3);
      unsigned int v26 = v7;
    }
LABEL_44:
    sub_1C411E4F0((void **)&v26, (const void **)&v25, &v24);
    return 1;
  }
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C4226998(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  int v22 = __src;
  BOOL v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  uint64_t v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst) {
        memmove(__dst, a2, a3 - (void)a2);
      }
      unsigned int v14 = &v4[v9];
      char v20 = &v4[v9];
      int v22 = v6;
      if (v7 < v6 && (unsigned __int8 *)a3 != v6)
      {
        int v15 = (unsigned __int8 *)(a3 - 1);
        while (1)
        {
          int v16 = v15 + 1;
          unsigned int v17 = v6 - 1;
          unsigned int v18 = *(v6 - 1);
          if (*(v14 - 1) >= v18)
          {
            char v20 = v14 - 1;
            if (v16 < v14 || v15 >= v14 || v16 != v14) {
              *int v15 = *(v14 - 1);
            }
            --v14;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v16 != v6 || v15 >= v6) {
              *int v15 = v18;
            }
            int v22 = --v6;
            if (v17 <= v7) {
              goto LABEL_38;
            }
          }
          --v15;
          if (v14 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    uint64_t v10 = &v4[v8];
    char v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        unsigned int v11 = *v6;
        unsigned int v12 = *v4;
        if (v11 >= v12)
        {
          if (v7 != v4) {
            *uint64_t v7 = v12;
          }
          uint64_t v21 = ++v4;
          uint64_t v13 = v6;
        }
        else
        {
          uint64_t v13 = v6 + 1;
          if (v7 < v6 || v7 >= v13 || v7 != v6) {
            *uint64_t v7 = v11;
          }
        }
        ++v7;
        if (v4 >= v10) {
          break;
        }
        uint64_t v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      int v22 = v7;
    }
LABEL_38:
    sub_1C411E5A8((void **)&v22, (const void **)&v21, &v20);
    return 1;
  }
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

uint64_t sub_1C4226BD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = sub_1C4496298();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_1C44962C8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v12 = sub_1C44962B8();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  sub_1C3FE2138(v9, v15, a4, &v17);
  if (!v4) {
    return v17;
  }
  return v16;
}

uint64_t sub_1C4226C84(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v5 = result + 32;
    uint64_t v6 = MEMORY[0x1E4FBC860];
    while (1)
    {
      if (v4 <= v2) {
        unint64_t v7 = v2;
      }
      else {
        unint64_t v7 = v4;
      }
      while (1)
      {
        if (v4 == v7) {
          goto LABEL_25;
        }
        uint64_t v8 = v4++;
        uint64_t v9 = *(void *)(a2 + 16);
        if (!v9) {
          goto LABEL_6;
        }
        int v10 = *(unsigned __int16 *)(v5 + 2 * v8);
        if (*(unsigned __int16 *)(a2 + 32) == v10) {
          break;
        }
        if (v9 != 1)
        {
          uint64_t v11 = 17;
          while (1)
          {
            uint64_t v12 = v11 - 15;
            if (__OFADD__(v11 - 16, 1)) {
              break;
            }
            if (*(unsigned __int16 *)(a2 + 2 * v11) == v10) {
              goto LABEL_16;
            }
            ++v11;
            if (v12 == v9) {
              goto LABEL_6;
            }
          }
          __break(1u);
LABEL_25:
          __break(1u);
          return result;
        }
LABEL_6:
        if (v4 == v2) {
          return v6;
        }
      }
LABEL_16:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_1C4012828(0, *(void *)(v6 + 16) + 1, 1);
      }
      unint64_t v14 = *(void *)(v6 + 16);
      unint64_t v13 = *(void *)(v6 + 24);
      if (v14 >= v13 >> 1) {
        uint64_t result = sub_1C4012828(v13 > 1, v14 + 1, 1);
      }
      *(void *)(v6 + 16) = v14 + 1;
      *(_WORD *)(v6 + 2 * v14 + 32) = v10;
      if (v4 == v2) {
        return v6;
      }
    }
  }
  return MEMORY[0x1E4FBC860];
}

uint64_t sub_1C4226DDC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for Replica();
  return sub_1C3F844E4(v1);
}

uint64_t sub_1C4226E2C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_1C3F7E2CC(result, a2);
    return sub_1C3F7E2CC(a3, a4);
  }
  return result;
}

uint64_t sub_1C4226E7C(uint64_t a1)
{
  return sub_1C421CBA0(a1) & 1;
}

uint64_t sub_1C4226E9C()
{
  uint64_t v1 = sub_1C4496498();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  swift_release();

  return MEMORY[0x1F4186498](v0, v6 + 8, v5);
}

uint64_t sub_1C4226FB4(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1C4496498() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[6];
  uint64_t v11 = (uint64_t)v1 + v5;
  uint64_t v12 = *(void *)((char *)v1 + v6);
  uint64_t v13 = *(void *)((char *)v1 + v7);
  uint64_t v14 = *(void *)((char *)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_1C40185EC;
  return sub_1C421CDA0(a1, v8, v9, v10, v11, v12, v13, v14);
}

uint64_t sub_1C4227108(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_1C40182C8;
  return sub_1C421D7B4(a1, a2, v7, v6);
}

uint64_t sub_1C42271BC()
{
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C42271CC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_1C40182C8;
  return sub_1C43CA560(a1, v4);
}

uint64_t sub_1C4227268()
{
  uint64_t v1 = sub_1C4496498();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x1F4186498](v0, v5, v6);
}

void sub_1C42272F8()
{
  sub_1C4496498();
  sub_1C421DAD0();
}

uint64_t sub_1C4227368()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4227378(uint64_t a1)
{
  return sub_1C4023C2C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1C4227380()
{
  swift_release();
  return MEMORY[0x1F4186498](v0, 24, 7);
}

uint64_t sub_1C42273B8()
{
  swift_release();
  swift_release();
  swift_release();
  sub_1C3F7E2CC(*(void *)(v0 + 40), *(void *)(v0 + 48));
  return MEMORY[0x1F4186498](v0, 56, 7);
}

uint64_t sub_1C4227408(uint64_t a1)
{
  return sub_1C421E604(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_1C4227418()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4227428()
{
  swift_release();
  swift_release();
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4227468()
{
  return sub_1C421E8A8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C4227470()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

uint64_t sub_1C4227480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C42274E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C4227550(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 60 != 15)
  {
    sub_1C3F7E324(result, a2);
    return sub_1C3F7E324(a3, a4);
  }
  return result;
}

void sub_1C42275A0(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

void sub_1C42275AC(uint64_t *a1@<X8>)
{
  sub_1C43CF560(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C42275C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C4227610()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C4227638()
{
  return sub_1C42168D8(*(char **)(v0 + 24));
}

uint64_t sub_1C4227660()
{
  return sub_1C3FDAF24(1702257011, 0xE400000000000000, 0);
}

const char *sub_1C4227694()
{
  return sub_1C421E3FC(v0);
}

uint64_t sub_1C42276B0()
{
  return sub_1C421E2BC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1C42276D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C4227730()
{
  return MEMORY[0x1F4186498](v0, 32, 7);
}

const char *sub_1C4227740()
{
  return sub_1C421E4FC(v0);
}

void sub_1C422775C()
{
  sub_1C421E180(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned __int8 *)(v0 + 80) | ((unint64_t)*(unsigned __int16 *)(v0 + 82) << 16) | ((unint64_t)*(unsigned __int8 *)(v0 + 84) << 32));
}

void *sub_1C42277B0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C421AF00(*(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40), a1);
}

uint64_t sub_1C42277D4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t result = sub_1C4496298();
  uint64_t v9 = (char *)result;
  if (result)
  {
    uint64_t result = sub_1C44962C8();
    if (__OFSUB__(a1, result))
    {
LABEL_16:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v12 = sub_1C44962B8();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = &v9[v13];
  if (v9) {
    uint64_t v15 = (uint64_t)v14;
  }
  else {
    uint64_t v15 = 0;
  }
  unint64_t v16 = a4;
  uint64_t v17 = sub_1C3FDC278(v9, v15);
  if (!v4)
  {
    unint64_t v16 = v17;
    if (!v17)
    {
      uint64_t v18 = MEMORY[0x1E4FBC860];
      unint64_t v16 = sub_1C3F7E4A4(MEMORY[0x1E4FBC860]);
      sub_1C3F7E37C(v18);
    }
  }
  return v16;
}

uint64_t sub_1C42278A4()
{
  return sub_1C421A7D8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1C42278C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Proto_Document(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C4227954@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v210 = a2;
  uint64_t v229 = *MEMORY[0x1E4F143B8];
  char v217 = (void *)sub_1C4496678();
  uint64_t v199 = *(v217 - 1);
  MEMORY[0x1F4188790](v217);
  uint64_t v214 = (char *)&v180 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E8);
  MEMORY[0x1F4188790](v4 - 8);
  long long v216 = (char *)&v180 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Proto_Version(0);
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v202 = v6;
  uint64_t v203 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v182 = (uint64_t *)((char *)&v180 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v8);
  uint64_t v184 = (uint64_t)&v180 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0578);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  int v185 = (char *)&v180 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v183 = (char *)&v180 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v186 = (uint64_t)&v180 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v201 = (uint64_t)&v180 - v18;
  uint64_t v19 = type metadata accessor for Proto_Value(0);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v209 = (unsigned int (**)(char *, uint64_t, void *))((char *)&v180 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v20);
  uint64_t v193 = (uint64_t)&v180 - v22;
  uint64_t v23 = type metadata accessor for Proto_Reference(0);
  uint64_t v24 = MEMORY[0x1F4188790](v23 - 8);
  uint64_t v190 = (uint64_t)&v180 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v192 = (uint64_t)&v180 - v26;
  uint64_t v27 = type metadata accessor for Proto_CRDT(0);
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  uint64_t v189 = (uint64_t)&v180 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v191 = (uint64_t)&v180 - v30;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  uint64_t v32 = MEMORY[0x1F4188790](v31 - 8);
  uint64_t v188 = (uint64_t)&v180 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v187 = (uint64_t)&v180 - v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v208 = (uint64_t)&v180 - v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0350);
  uint64_t v38 = MEMORY[0x1F4188790](v37 - 8);
  uint64_t v200 = (uint64_t)&v180 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v197 = (char *)&v180 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v196 = (char *)&v180 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v198 = (uint64_t)&v180 - v45;
  uint64_t v46 = MEMORY[0x1F4188790](v44);
  uint64_t v48 = (char *)&v180 - v47;
  MEMORY[0x1F4188790](v46);
  uint64_t v50 = (char *)&v180 - v49;
  uint64_t v51 = type metadata accessor for Proto_Constants(0);
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  uint64_t v195 = (uint64_t *)((char *)&v180 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  uint64_t v194 = (uint64_t *)((char *)&v180 - v56);
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  BOOL v59 = (uint64_t *)((char *)&v180 - v58);
  MEMORY[0x1F4188790](v57);
  uint64_t v61 = (uint64_t *)((char *)&v180 - v60);
  uint64_t v207 = type metadata accessor for Proto_Document(0);
  uint64_t v204 = *(int *)(v207 + 20);
  uint64_t v205 = a1;
  uint64_t v62 = *(void *)&a1[v204];
  uint64_t v63 = v62 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  sub_1C3F970C4(v63, (uint64_t)v50, &qword_1EBBC0350);
  uint64_t v206 = v52;
  unint64_t v211 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48);
  uint64_t v212 = v52 + 48;
  if (v211(v50, 1, v51) == 1)
  {
    uint64_t *v61 = sub_1C4496868();
    v61[1] = v64;
    v61[2] = MEMORY[0x1E4FBC860];
    uint64_t v65 = v51;
    sub_1C4496888();
    sub_1C3F962E0((uint64_t)v50, &qword_1EBBC0350);
  }
  else
  {
    uint64_t v65 = v51;
    sub_1C42306F4((uint64_t)v50, (uint64_t)v61, type metadata accessor for Proto_Constants);
  }
  uint64_t v66 = *v61;
  unint64_t v67 = v61[1];
  sub_1C3F7E324(*v61, v67);
  sub_1C4230A10((uint64_t)v61, type metadata accessor for Proto_Constants);
  uint64_t v68 = v215;
  uint64_t v69 = sub_1C3FA29A4(v66, v67);
  if (v68) {
    return sub_1C3F7E2CC(v66, v67);
  }
  uint64_t v71 = v69;
  sub_1C3F7E2CC(v66, v67);
  *(void *)(v213 + 16) = v71;
  swift_bridgeObjectRelease();
  uint64_t v72 = v62 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  sub_1C3F970C4(v72, (uint64_t)v48, &qword_1EBBC0350);
  if (v211(v48, 1, v65) == 1)
  {
    *BOOL v59 = sub_1C4496868();
    v59[1] = v73;
    void v59[2] = MEMORY[0x1E4FBC860];
    sub_1C4496888();
    sub_1C3F962E0((uint64_t)v48, &qword_1EBBC0350);
  }
  else
  {
    sub_1C42306F4((uint64_t)v48, (uint64_t)v59, type metadata accessor for Proto_Constants);
  }
  uint64_t v74 = v210;
  uint64_t v75 = v207;
  uint64_t v180 = v65;
  uint64_t v76 = v59[2];
  swift_bridgeObjectRetain();
  sub_1C4230A10((uint64_t)v59, type metadata accessor for Proto_Constants);
  uint64_t v77 = v213;
  *(void *)(v213 + 32) = v76;
  swift_bridgeObjectRelease();
  sub_1C4496888();
  uint64_t v78 = *(int *)(v75 + 20);
  if (qword_1EBBC0328 != -1) {
    swift_once();
  }
  uint64_t v181 = v78;
  *(void *)(v74 + v78) = qword_1EBBC05C0;
  uint64_t v79 = v62 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
  swift_beginAccess();
  uint64_t v80 = v208;
  sub_1C3F970C4(v79, v208, &qword_1EBBC0598);
  uint64_t v81 = type metadata accessor for Proto_Document.OneOf_Root(0);
  uint64_t v82 = *(void *)(v81 - 8);
  int v83 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v82 + 48))(v80, 1, v81);
  uint64_t v84 = (unsigned int (**)(void, void, void))v209;
  if (v83 == 1)
  {
    uint64_t v85 = v74;
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v90 = v80;
        uint64_t v91 = v193;
        sub_1C42306F4(v90, v193, type metadata accessor for Proto_Value);
        swift_retain();
        sub_1C422A660(v91, (uint64_t)v84);
        uint64_t v162 = v181;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for Proto_Document._StorageClass(0);
          swift_allocObject();
          uint64_t v163 = swift_retain();
          *(void *)(v74 + v162) = sub_1C3F7CB4C(v163);
          swift_release();
        }
        uint64_t v85 = v74;
        uint64_t v164 = *(void *)(v74 + v162);
        uint64_t v165 = v187;
        sub_1C42306F4((uint64_t)v209, v187, type metadata accessor for Proto_Value);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 56))(v165, 0, 1, v81);
        uint64_t v166 = v188;
        sub_1C3F961BC(v165, v188, &qword_1EBBC0598);
        uint64_t v167 = v164
             + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
        swift_beginAccess();
        swift_retain();
        sub_1C3F98338(v166, v167, &qword_1EBBC0598);
        swift_endAccess();
        swift_release();
        sub_1C4230A10(v193, type metadata accessor for Proto_Value);
      }
      else
      {
        uint64_t v105 = v80;
        uint64_t v106 = v192;
        sub_1C42306F4(v105, v192, type metadata accessor for Proto_Reference);
        swift_retain();
        sub_1C422DC7C(v106, v190);
        uint64_t v174 = v181;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          type metadata accessor for Proto_Document._StorageClass(0);
          swift_allocObject();
          uint64_t v175 = swift_retain();
          *(void *)(v74 + v174) = sub_1C3F7CB4C(v175);
          swift_release();
        }
        uint64_t v85 = v74;
        uint64_t v176 = *(void *)(v74 + v174);
        uint64_t v177 = v187;
        sub_1C42306F4(v190, v187, type metadata accessor for Proto_Reference);
        swift_storeEnumTagMultiPayload();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 56))(v177, 0, 1, v81);
        uint64_t v178 = v188;
        sub_1C3F961BC(v177, v188, &qword_1EBBC0598);
        uint64_t v179 = v176
             + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
        swift_beginAccess();
        swift_retain();
        sub_1C3F98338(v178, v179, &qword_1EBBC0598);
        swift_endAccess();
        swift_release();
        sub_1C4230A10(v192, type metadata accessor for Proto_Reference);
      }
    }
    else
    {
      uint64_t v103 = v80;
      uint64_t v104 = v191;
      sub_1C42306F4(v103, v191, type metadata accessor for Proto_CRDT);
      swift_retain();
      sub_1C42295EC(v104, v189);
      uint64_t v168 = v181;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Document._StorageClass(0);
        swift_allocObject();
        uint64_t v169 = swift_retain();
        *(void *)(v74 + v168) = sub_1C3F7CB4C(v169);
        swift_release();
      }
      uint64_t v85 = v74;
      uint64_t v170 = *(void *)(v74 + v168);
      uint64_t v171 = v187;
      sub_1C42306F4(v189, v187, type metadata accessor for Proto_CRDT);
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v82 + 56))(v171, 0, 1, v81);
      uint64_t v172 = v188;
      sub_1C3F961BC(v171, v188, &qword_1EBBC0598);
      uint64_t v173 = v170 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v172, v173, &qword_1EBBC0598);
      swift_endAccess();
      swift_release();
      sub_1C4230A10(v191, type metadata accessor for Proto_CRDT);
    }
  }
  uint64_t v86 = *(void *)&v205[v204];
  swift_beginAccess();
  swift_retain();
  uint64_t v87 = swift_bridgeObjectRetain();
  uint64_t v88 = sub_1C42301C0(v87, v77);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v204 = 0;
  uint64_t v92 = v181;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v93 = swift_retain();
    *(void *)(v85 + v92) = sub_1C3F7CB4C(v93);
    swift_release();
  }
  uint64_t v94 = (uint64_t *)(*(void *)(v85 + v92)
                  + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__references);
  swift_beginAccess();
  *uint64_t v94 = v88;
  swift_bridgeObjectRelease();
  uint64_t v95 = v86 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
  swift_beginAccess();
  uint64_t v96 = v201;
  sub_1C3F970C4(v95, v201, &qword_1EBBC0578);
  unint64_t v97 = v202;
  uint64_t v98 = *(uint64_t (**)(uint64_t, uint64_t, unint64_t))(v203 + 48);
  LODWORD(v95) = v98(v96, 1, v202);
  sub_1C3F962E0(v96, &qword_1EBBC0578);
  if (v95 != 1)
  {
    uint64_t v99 = v86 + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    uint64_t v100 = v186;
    sub_1C3F970C4(v99, v186, &qword_1EBBC0578);
    if (v98(v100, 1, v97) == 1)
    {
      uint64_t v101 = MEMORY[0x1E4FBC860];
      uint64_t v102 = v182;
      *uint64_t v182 = MEMORY[0x1E4FBC860];
      v102[1] = v101;
      sub_1C4496888();
      sub_1C3F962E0(v100, &qword_1EBBC0578);
    }
    else
    {
      uint64_t v102 = v182;
      sub_1C42306F4(v100, (uint64_t)v182, type metadata accessor for Proto_Version);
    }
    uint64_t v107 = v181;
    uint64_t v109 = v184;
    uint64_t v108 = (uint64_t)v185;
    uint64_t v110 = (uint64_t)v183;
    sub_1C42306F4((uint64_t)v102, v184, type metadata accessor for Proto_Version);
    uint64_t v111 = v210;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Document._StorageClass(0);
      swift_allocObject();
      uint64_t v112 = swift_retain();
      *(void *)(v111 + v107) = sub_1C3F7CB4C(v112);
      swift_release();
    }
    uint64_t v113 = *(void *)(v111 + v107);
    sub_1C42306F4(v109, v110, type metadata accessor for Proto_Version);
    (*(void (**)(uint64_t, void, uint64_t, unint64_t))(v203 + 56))(v110, 0, 1, v97);
    sub_1C3F961BC(v110, v108, &qword_1EBBC0578);
    uint64_t v114 = v113
         + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__version;
    swift_beginAccess();
    swift_retain();
    sub_1C3F98338(v108, v114, &qword_1EBBC0578);
    swift_endAccess();
    swift_release();
  }
  unint64_t v115 = *(void *)(*(void *)(v77 + 16) + 16);
  if (v115 >> 59) {
    __break(1u);
  }
  uint64_t v227 = sub_1C3FB0FAC(16 * v115);
  unint64_t v228 = v116;
  uint64_t v117 = *(void *)(v77 + 16);
  uint64_t v118 = *(void *)(v117 + 16);
  uint64_t v119 = v217;
  uint64_t v203 = v117;
  if (v118)
  {
    uint64_t v120 = v199 + 16;
    id v215 = *(void (**)(void, void, void))(v199 + 16);
    uint64_t v121 = v117 + ((*(unsigned __int8 *)(v199 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v199 + 80));
    uint64_t v122 = (void (**)(char *, uint64_t, uint64_t, void *))(v199 + 56);
    uint64_t v208 = *(void *)(v199 + 72);
    uint64_t v209 = (unsigned int (**)(char *, uint64_t, void *))(v199 + 48);
    uint64_t v207 = v199 + 32;
    uint64_t v205 = (char *)(v199 + 8);
    swift_bridgeObjectRetain();
    unint64_t v202 = (v120 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v123 = v216;
    uint64_t v124 = v214;
    while (1)
    {
      v215(v123, v121, v119);
      uint64_t v125 = *v122;
      (*v122)(v123, 0, 1, v119);
      if ((*v209)(v123, 1, v119) == 1) {
        break;
      }
      (*(void (**)(char *, char *, void *))v207)(v124, v123, v119);
      uint64_t v218 = sub_1C4496658();
      char v219 = v126;
      char v220 = v127;
      char v221 = v128;
      char v222 = v129;
      char v223 = v130;
      char v224 = v131;
      char v225 = v132;
      char v226 = v133;
      sub_1C4496658();
      sub_1C44962E8();
      swift_allocObject();
      sub_1C4496288();
      sub_1C4496588();
      uint64_t v123 = v216;
      uint64_t v119 = v217;
      swift_release();
      (*(void (**)(char *, void *))v205)(v124, v119);
      v121 += v208;
      if (!--v118) {
        goto LABEL_35;
      }
    }
  }
  else
  {
    uint64_t v125 = *(void (**)(char *, uint64_t, uint64_t, void *))(v199 + 56);
    swift_bridgeObjectRetain();
    uint64_t v123 = v216;
LABEL_35:
    v125(v123, 1, 1, v119);
  }
  swift_bridgeObjectRelease();
  uint64_t v134 = v227;
  unint64_t v135 = v228;
  uint64_t v136 = v210;
  uint64_t v137 = *(void *)(v210 + v181)
       + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  uint64_t v138 = v198;
  sub_1C3F970C4(v137, v198, &qword_1EBBC0350);
  uint64_t v139 = v180;
  if (v211((char *)v138, 1, v180) == 1)
  {
    sub_1C3F7E324(v134, v135);
    uint64_t v140 = sub_1C4496868();
    unint64_t v141 = v194;
    uint64_t *v194 = v140;
    v141[1] = v142;
    v141[2] = MEMORY[0x1E4FBC860];
    sub_1C4496888();
    sub_1C3F962E0(v138, &qword_1EBBC0350);
  }
  else
  {
    unint64_t v141 = v194;
    sub_1C42306F4(v138, (uint64_t)v194, type metadata accessor for Proto_Constants);
    sub_1C3F7E324(v134, v135);
  }
  uint64_t v144 = (uint64_t)v196;
  uint64_t v143 = (uint64_t)v197;
  sub_1C3F7E2CC(*v141, v141[1]);
  *unint64_t v141 = v134;
  v141[1] = v135;
  uint64_t v145 = v181;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v146 = swift_retain();
    *(void *)(v136 + v145) = sub_1C3F7CB4C(v146);
    swift_release();
  }
  uint64_t v147 = *(void *)(v136 + v145);
  sub_1C42306F4((uint64_t)v141, v144, type metadata accessor for Proto_Constants);
  long long v148 = *(void **)(v206 + 56);
  v206 += 56;
  char v217 = v148;
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v148)(v144, 0, 1, v139);
  sub_1C3F961BC(v144, v143, &qword_1EBBC0350);
  uint64_t v149 = v147
       + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v143, v149, &qword_1EBBC0350);
  swift_endAccess();
  swift_release();
  uint64_t v150 = *(void *)(v213 + 32);
  uint64_t v151 = *(void *)(v136 + v145)
       + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  uint64_t v152 = v151;
  uint64_t v153 = v180;
  uint64_t v154 = v200;
  sub_1C3F970C4(v152, v200, &qword_1EBBC0350);
  if (v211((char *)v154, 1, v153) == 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v155 = sub_1C4496868();
    uint64_t v156 = v195;
    *uint64_t v195 = v155;
    v156[1] = v157;
    v156[2] = MEMORY[0x1E4FBC860];
    sub_1C4496888();
    sub_1C3F962E0(v154, &qword_1EBBC0350);
  }
  else
  {
    uint64_t v156 = v195;
    sub_1C42306F4(v154, (uint64_t)v195, type metadata accessor for Proto_Constants);
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  v156[2] = v150;
  uint64_t v158 = v181;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Document._StorageClass(0);
    swift_allocObject();
    uint64_t v159 = swift_retain();
    *(void *)(v136 + v158) = sub_1C3F7CB4C(v159);
    swift_release();
  }
  uint64_t v160 = *(void *)(v136 + v158);
  sub_1C42306F4((uint64_t)v156, v144, type metadata accessor for Proto_Constants);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v217)(v144, 0, 1, v153);
  sub_1C3F961BC(v144, v143, &qword_1EBBC0350);
  uint64_t v161 = v160
       + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v143, v161, &qword_1EBBC0350);
  swift_endAccess();
  swift_release();
  return sub_1C3F7E2CC(v227, v228);
}

uint64_t sub_1C422910C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v41 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0350);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v39 = (uint64_t)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v38 - v6;
  uint64_t v8 = type metadata accessor for Proto_Constants(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v12 = (void *)((char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (void *)((char *)v38 - v13);
  uint64_t v15 = type metadata accessor for Proto_RetainCounts(0);
  uint64_t v16 = *(int *)(v15 + 20);
  uint64_t v40 = a1;
  v38[0] = v15;
  v38[1] = v16;
  uint64_t v17 = *(void *)(a1 + v16);
  uint64_t v18 = v17
      + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
  swift_beginAccess();
  sub_1C3F970C4(v18, (uint64_t)v7, &qword_1EBBC0350);
  uint64_t v19 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  if (v19(v7, 1, v8) == 1)
  {
    *uint64_t v14 = sub_1C4496868();
    v14[1] = v20;
    void v14[2] = MEMORY[0x1E4FBC860];
    sub_1C4496888();
    sub_1C3F962E0((uint64_t)v7, &qword_1EBBC0350);
  }
  else
  {
    sub_1C42306F4((uint64_t)v7, (uint64_t)v14, type metadata accessor for Proto_Constants);
  }
  uint64_t v21 = v43;
  uint64_t v22 = *v14;
  unint64_t v23 = v14[1];
  sub_1C3F7E324(*v14, v23);
  sub_1C4230A10((uint64_t)v14, type metadata accessor for Proto_Constants);
  uint64_t v24 = sub_1C3FA29A4(v22, v23);
  uint64_t result = sub_1C3F7E2CC(v22, v23);
  if (!v21)
  {
    *(void *)(v42 + 16) = v24;
    swift_bridgeObjectRelease();
    uint64_t v26 = v17
        + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__constants;
    swift_beginAccess();
    uint64_t v27 = v26;
    uint64_t v28 = v39;
    sub_1C3F970C4(v27, v39, &qword_1EBBC0350);
    if (v19((char *)v28, 1, v8) == 1)
    {
      *uint64_t v12 = sub_1C4496868();
      v12[1] = v29;
      id v12[2] = MEMORY[0x1E4FBC860];
      sub_1C4496888();
      sub_1C3F962E0(v28, &qword_1EBBC0350);
    }
    else
    {
      sub_1C42306F4(v28, (uint64_t)v12, type metadata accessor for Proto_Constants);
    }
    uint64_t v30 = v41;
    uint64_t v31 = v12[2];
    swift_bridgeObjectRetain();
    sub_1C4230A10((uint64_t)v12, type metadata accessor for Proto_Constants);
    uint64_t v32 = v42;
    *(void *)(v42 + 32) = v31;
    swift_bridgeObjectRelease();
    sub_1C4230158(v40, v30, type metadata accessor for Proto_RetainCounts);
    swift_beginAccess();
    swift_retain();
    uint64_t v33 = swift_bridgeObjectRetain();
    uint64_t v34 = sub_1C422FE10(v33, v32, type metadata accessor for Proto_KeyPath, (void (*)(BOOL, unint64_t, uint64_t))sub_1C4012644, (void (*)(uint64_t))sub_1C422D670, type metadata accessor for Proto_KeyPath);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v35 = *(int *)(v38[0] + 20);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_RetainCounts._StorageClass(0);
      swift_allocObject();
      uint64_t v36 = swift_retain();
      *(void *)(v30 + v35) = sub_1C43F54D8(v36);
      swift_release();
    }
    uint64_t v37 = (uint64_t *)(*(void *)(v30 + v35)
                    + OBJC_IVAR____TtCV9Coherence18Proto_RetainCountsP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__referenceKeys);
    swift_beginAccess();
    *uint64_t v37 = v34;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C42295EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v127 = a2;
  uint64_t v3 = type metadata accessor for Proto_CustomCRDT(0);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v122 = (uint64_t)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v121 = (uint64_t)&v105 - v6;
  uint64_t v7 = type metadata accessor for Proto_Counter(0);
  uint64_t v8 = MEMORY[0x1F4188790](v7 - 8);
  uint64_t v120 = (uint64_t)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v119 = (uint64_t)&v105 - v10;
  uint64_t v11 = type metadata accessor for Proto_OrderedSet(0);
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v116 = (uint64_t)&v105 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v117 = (uint64_t)&v105 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v111 = (uint64_t)&v105 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v115 = (uint64_t)&v105 - v18;
  uint64_t v109 = type metadata accessor for Proto_Sequence(0);
  uint64_t v19 = MEMORY[0x1F4188790](v109);
  uint64_t v124 = (uint64_t)&v105 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v123 = (char *)&v105 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v108 = (uint64_t)&v105 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v107 = (uint64_t)&v105 - v25;
  uint64_t v26 = type metadata accessor for Proto_Struct(0);
  uint64_t v27 = MEMORY[0x1F4188790](v26 - 8);
  uint64_t v110 = (uint64_t)&v105 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v105 = (uint64_t)&v105 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v113 = (uint64_t)&v105 - v31;
  uint64_t v125 = type metadata accessor for Proto_Set(0);
  uint64_t v32 = MEMORY[0x1F4188790](v125);
  uint64_t v118 = (uint64_t)&v105 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v128 = (uint64_t)&v105 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  uint64_t v112 = (uint64_t)&v105 - v37;
  MEMORY[0x1F4188790](v36);
  uint64_t v114 = (uint64_t)&v105 - v38;
  uint64_t v39 = type metadata accessor for Proto_Register(0);
  uint64_t v40 = MEMORY[0x1F4188790](v39 - 8);
  uint64_t v106 = (uint64_t)&v105 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v40);
  uint64_t v43 = (char *)&v105 - v42;
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v44 - 8);
  uint64_t v46 = (char *)&v105 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  uint64_t v51 = (char *)&v105 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v49);
  uint64_t v53 = (char *)&v105 - v52;
  uint64_t v54 = type metadata accessor for Proto_CRDT(0);
  uint64_t v55 = *(void *)(a1 + *(int *)(v54 + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v55, (uint64_t)v46, &qword_1EBBC0648);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47) == 1)
  {
    sub_1C3F962E0((uint64_t)v46, &qword_1EBBC0648);
    sub_1C4497F58();
    __break(1u);
    JUMPOUT(0x1C422A638);
  }
  sub_1C42306F4((uint64_t)v46, (uint64_t)v53, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  uint64_t v56 = v127;
  sub_1C4496888();
  uint64_t v57 = *(int *)(v54 + 20);
  if (qword_1EBBC0668 != -1) {
    swift_once();
  }
  *(void *)(v56 + v57) = qword_1EBBC0660;
  sub_1C4230158((uint64_t)v53, (uint64_t)v51, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v59 = v129;
  uint64_t v60 = v128;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v60 = v114;
      sub_1C42306F4((uint64_t)v51, v114, type metadata accessor for Proto_Set);
      uint64_t v67 = v112;
      sub_1C4230158(v60, v112, type metadata accessor for Proto_Set);
      uint64_t v73 = *(int *)(v125 + 20);
      swift_beginAccess();
      swift_retain();
      uint64_t v74 = v126;
      swift_retain();
      uint64_t v75 = swift_bridgeObjectRetain();
      uint64_t v76 = sub_1C422FFB8(v75, v74);
      swift_bridgeObjectRelease();
      swift_release();
      if (v59) {
        goto LABEL_12;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Set._StorageClass(0);
        swift_allocObject();
        uint64_t v98 = swift_retain();
        *(void *)(v67 + v73) = sub_1C3F7B768(v98);
        swift_release();
      }
      uint64_t v99 = (uint64_t *)(*(void *)(v67 + v73)
                      + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
      swift_beginAccess();
      *uint64_t v99 = v76;
      swift_bridgeObjectRelease();
      sub_1C43F187C(v67);
      goto LABEL_31;
    case 2:
      sub_1C42306F4((uint64_t)v51, v128, type metadata accessor for Proto_Set);
      uint64_t v67 = v118;
      sub_1C4230158(v60, v118, type metadata accessor for Proto_Set);
      uint64_t v68 = *(int *)(v125 + 20);
      swift_beginAccess();
      swift_retain();
      uint64_t v69 = v126;
      swift_retain();
      uint64_t v70 = swift_bridgeObjectRetain();
      uint64_t v71 = sub_1C422FFB8(v70, v69);
      if (v59)
      {
        swift_bridgeObjectRelease();
        swift_release();
LABEL_12:
        sub_1C4230A10(v67, type metadata accessor for Proto_Set);
        uint64_t v63 = v60;
        uint64_t v62 = type metadata accessor for Proto_Set;
        goto LABEL_22;
      }
      uint64_t v92 = v71;
      swift_bridgeObjectRelease();
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Set._StorageClass(0);
        swift_allocObject();
        uint64_t v93 = swift_retain();
        *(void *)(v67 + v68) = sub_1C3F7B768(v93);
        swift_release();
      }
      uint64_t v94 = (uint64_t *)(*(void *)(v67 + v68)
                      + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
      swift_beginAccess();
      *uint64_t v94 = v92;
      swift_bridgeObjectRelease();
      sub_1C43F1AEC(v67);
LABEL_31:
      uint64_t v90 = type metadata accessor for Proto_Set;
      uint64_t v91 = v60;
      break;
    case 3:
      uint64_t v77 = v113;
      sub_1C42306F4((uint64_t)v51, v113, type metadata accessor for Proto_Struct);
      uint64_t v78 = v110;
      sub_1C4230158(v77, v110, type metadata accessor for Proto_Struct);
      swift_retain();
      uint64_t v79 = v126;
      swift_retain();
      uint64_t v80 = swift_bridgeObjectRetain();
      uint64_t v81 = sub_1C422FE10(v80, v79, type metadata accessor for Proto_CRDT, (void (*)(BOOL, unint64_t, uint64_t))sub_1C40123BC, (void (*)(uint64_t))sub_1C42295EC, type metadata accessor for Proto_CRDT);
      if (v59)
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_1C4230A10(v78, type metadata accessor for Proto_Struct);
        uint64_t v63 = v77;
        uint64_t v62 = type metadata accessor for Proto_Struct;
        goto LABEL_22;
      }
      uint64_t v95 = v81;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      *(void *)(v78 + 8) = v95;
      uint64_t v96 = v105;
      sub_1C42306F4(v78, v105, type metadata accessor for Proto_Struct);
      sub_1C3F62D84(v96);
      uint64_t v90 = type metadata accessor for Proto_Struct;
      uint64_t v91 = v77;
      break;
    case 4:
      uint64_t v64 = v107;
      sub_1C42306F4((uint64_t)v51, v107, type metadata accessor for Proto_Sequence);
      uint64_t v65 = v108;
      sub_1C4230158(v64, v108, type metadata accessor for Proto_Sequence);
      swift_retain();
      sub_1C43EEEE8(v65);
      uint64_t v66 = type metadata accessor for Proto_Sequence;
      goto LABEL_38;
    case 5:
      uint64_t v43 = v123;
      sub_1C42306F4((uint64_t)v51, (uint64_t)v123, type metadata accessor for Proto_Sequence);
      uint64_t v83 = v124;
      sub_1C4230158((uint64_t)v43, v124, type metadata accessor for Proto_Sequence);
      uint64_t v84 = *(int *)(v109 + 20);
      swift_beginAccess();
      swift_retain();
      uint64_t v85 = v126;
      swift_retain();
      uint64_t v86 = swift_bridgeObjectRetain();
      uint64_t v87 = sub_1C422FE10(v86, v85, type metadata accessor for Proto_Value, (void (*)(BOOL, unint64_t, uint64_t))sub_1C3F6EE30, (void (*)(uint64_t))sub_1C422A660, type metadata accessor for Proto_Value);
      if (v59)
      {
        swift_bridgeObjectRelease();
        swift_release();
        sub_1C4230A10(v83, type metadata accessor for Proto_Sequence);
        uint64_t v63 = (uint64_t)v43;
        uint64_t v62 = type metadata accessor for Proto_Sequence;
        goto LABEL_22;
      }
      uint64_t v100 = v87;
      swift_bridgeObjectRelease();
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Sequence._StorageClass(0);
        swift_allocObject();
        uint64_t v101 = (void *)swift_retain();
        uint64_t v102 = sub_1C3F7C6CC(v101);
        uint64_t v83 = v124;
        *(void *)(v124 + v84) = v102;
        swift_release();
      }
      uint64_t v103 = *(void *)(v83 + v84);
      swift_beginAccess();
      *(void *)(v103 + 32) = v100;
      swift_bridgeObjectRelease();
      sub_1C43EF3C8(v83);
      unint64_t v97 = type metadata accessor for Proto_Sequence;
      goto LABEL_35;
    case 6:
      uint64_t v64 = v115;
      sub_1C42306F4((uint64_t)v51, v115, type metadata accessor for Proto_OrderedSet);
      swift_retain();
      uint64_t v88 = v111;
      sub_1C422CDBC(v64, v111);
      if (v59) {
        goto LABEL_21;
      }
      sub_1C43F0E50(v88);
      goto LABEL_37;
    case 7:
      uint64_t v64 = v119;
      sub_1C42306F4((uint64_t)v51, v119, type metadata accessor for Proto_Counter);
      uint64_t v82 = v120;
      sub_1C4230158(v64, v120, type metadata accessor for Proto_Counter);
      swift_retain();
      sub_1C43F1D5C(v82);
      uint64_t v66 = type metadata accessor for Proto_Counter;
      goto LABEL_38;
    case 8:
      uint64_t v64 = v117;
      sub_1C42306F4((uint64_t)v51, v117, type metadata accessor for Proto_OrderedSet);
      swift_retain();
      uint64_t v89 = v116;
      sub_1C422CDBC(v64, v116);
      if (v59)
      {
LABEL_21:
        uint64_t v62 = type metadata accessor for Proto_OrderedSet;
        uint64_t v63 = v64;
        goto LABEL_22;
      }
      sub_1C3F59F38(v89);
LABEL_37:
      uint64_t v66 = type metadata accessor for Proto_OrderedSet;
LABEL_38:
      uint64_t v90 = v66;
      uint64_t v91 = v64;
      break;
    case 9:
      uint64_t v64 = v121;
      sub_1C42306F4((uint64_t)v51, v121, type metadata accessor for Proto_CustomCRDT);
      uint64_t v72 = v122;
      sub_1C4230158(v64, v122, type metadata accessor for Proto_CustomCRDT);
      swift_retain();
      sub_1C43EF638(v72);
      uint64_t v66 = type metadata accessor for Proto_CustomCRDT;
      goto LABEL_38;
    default:
      sub_1C42306F4((uint64_t)v51, (uint64_t)v43, type metadata accessor for Proto_Register);
      swift_retain();
      uint64_t v61 = v106;
      sub_1C422BC14((uint64_t)v43, v106);
      if (v59)
      {
        uint64_t v62 = type metadata accessor for Proto_Register;
        uint64_t v63 = (uint64_t)v43;
LABEL_22:
        sub_1C4230A10(v63, v62);
        uint64_t v90 = type metadata accessor for Proto_CRDT;
        uint64_t v91 = v56;
      }
      else
      {
        sub_1C43F10C0(v61);
        unint64_t v97 = type metadata accessor for Proto_Register;
LABEL_35:
        uint64_t v90 = v97;
        uint64_t v91 = (uint64_t)v43;
      }
      break;
  }
  sub_1C4230A10(v91, v90);
  return sub_1C4230A10((uint64_t)v53, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
}

uint64_t sub_1C422A660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v171 = a2;
  uint64_t v142 = type metadata accessor for Proto_CustomCRValue(0);
  uint64_t v3 = MEMORY[0x1F4188790](v142);
  long long v148 = (uint64_t *)((char *)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v3);
  uint64_t v158 = (uint64_t)&v138 - v5;
  uint64_t v165 = type metadata accessor for Proto_TaggedValue(0);
  uint64_t v6 = MEMORY[0x1F4188790](v165);
  uint64_t v150 = (uint64_t)&v138 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v166 = (char *)&v138 - v8;
  uint64_t v141 = type metadata accessor for Proto_RepeatedValue(0);
  uint64_t v9 = MEMORY[0x1F4188790](v141);
  uint64_t v147 = (uint64_t *)((char *)&v138 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v9);
  uint64_t v162 = (uint64_t)&v138 - v11;
  uint64_t v12 = type metadata accessor for Proto_Value(0);
  uint64_t v167 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v154 = (uint64_t)&v138 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v161 = (uint64_t)&v138 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v151 = (uint64_t)&v138 - v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v152 = (char *)&v138 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v149 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v146 = (uint64_t)&v138 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v163 = (uint64_t)&v138 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v153 = (uint64_t)&v138 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v157 = (uint64_t)&v138 - v29;
  uint64_t v159 = type metadata accessor for Proto_Optional(0);
  uint64_t v30 = MEMORY[0x1F4188790](v159);
  uint64_t v139 = (uint64_t)&v138 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v164 = (uint64_t)&v138 - v32;
  uint64_t v33 = type metadata accessor for Proto_Reference(0);
  uint64_t v34 = MEMORY[0x1F4188790](v33 - 8);
  uint64_t v155 = (uint64_t)&v138 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v156 = (uint64_t)&v138 - v36;
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v38 = MEMORY[0x1F4188790](v37 - 8);
  uint64_t v144 = (uint64_t)&v138 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  uint64_t v145 = (uint64_t)&v138 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  uint64_t v143 = (uint64_t)&v138 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  uint64_t v140 = (uint64_t)&v138 - v45;
  MEMORY[0x1F4188790](v44);
  uint64_t v47 = (char *)&v138 - v46;
  uint64_t v48 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v50 = MEMORY[0x1F4188790](v48);
  uint64_t v52 = (char *)&v138 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v50);
  uint64_t v54 = (char *)&v138 - v53;
  uint64_t v168 = v12;
  uint64_t v55 = *(void *)(a1 + *(int *)(v12 + 20))
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v55, (uint64_t)v47, &qword_1EBBBF8A0);
  uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  uint64_t v160 = v49 + 48;
  if (v56(v47, 1, v48) == 1)
  {
    sub_1C3F962E0((uint64_t)v47, &qword_1EBBBF8A0);
    sub_1C4497F58();
    __break(1u);
    JUMPOUT(0x1C422BBD8);
  }
  sub_1C42306F4((uint64_t)v47, (uint64_t)v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  uint64_t v57 = v171;
  sub_1C4230158(a1, v171, type metadata accessor for Proto_Value);
  sub_1C4230158((uint64_t)v54, (uint64_t)v52, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  uint64_t v58 = v48;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      sub_1C4230A10((uint64_t)v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      return sub_1C3F7E2CC(*(void *)v52, *((void *)v52 + 1));
    case 6u:
    case 9u:
    case 0xCu:
      sub_1C4230A10((uint64_t)v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      return sub_1C4230A10((uint64_t)v52, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    case 7u:
      uint64_t v68 = (uint64_t)v54;
      uint64_t v69 = v156;
      sub_1C42306F4((uint64_t)v52, v156, type metadata accessor for Proto_Reference);
      uint64_t v70 = v155;
      uint64_t v71 = v170;
      sub_1C422DC7C(v69, v155);
      if (v71)
      {
        uint64_t v72 = type metadata accessor for Proto_Reference;
        uint64_t v73 = v69;
        goto LABEL_24;
      }
      sub_1C43F0BE0(v70);
      uint64_t v93 = type metadata accessor for Proto_Reference;
      uint64_t v94 = v69;
      goto LABEL_26;
    case 8u:
      uint64_t v165 = v48;
      uint64_t v166 = v54;
      uint64_t v82 = v164;
      sub_1C42306F4((uint64_t)v52, v164, type metadata accessor for Proto_Optional);
      uint64_t v83 = *(int *)(v159 + 20);
      uint64_t v84 = *(void *)(v82 + v83)
          + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
      swift_beginAccess();
      uint64_t v85 = v157;
      sub_1C3F970C4(v84, v157, &qword_1EBBC0540);
      uint64_t v86 = v168;
      uint64_t v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
      LODWORD(v84) = v87(v85, 1, v168);
      sub_1C3F962E0(v85, &qword_1EBBC0540);
      if (v84 == 1)
      {
        sub_1C4230A10(v82, type metadata accessor for Proto_Optional);
        return sub_1C4230A10((uint64_t)v166, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      }
      uint64_t v96 = *(void *)(v82 + v83)
          + OBJC_IVAR____TtCV9Coherence14Proto_OptionalP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
      swift_beginAccess();
      uint64_t v97 = v96;
      uint64_t v98 = v153;
      sub_1C3F970C4(v97, v153, &qword_1EBBC0540);
      int v99 = v87(v98, 1, v86);
      uint64_t v100 = v170;
      if (v99 == 1)
      {
        uint64_t v101 = v151;
        sub_1C4496888();
        uint64_t v102 = *(int *)(v86 + 20);
        uint64_t v103 = v165;
        uint64_t v104 = (uint64_t)v152;
        uint64_t v57 = v171;
        if (qword_1EBBBF8C8 != -1) {
          swift_once();
        }
        *(void *)(v101 + v102) = qword_1EBBBF8B8;
        swift_retain();
        sub_1C3F962E0(v153, &qword_1EBBC0540);
      }
      else
      {
        uint64_t v101 = v151;
        sub_1C42306F4(v98, v151, type metadata accessor for Proto_Value);
        uint64_t v103 = v165;
        uint64_t v104 = (uint64_t)v152;
        uint64_t v57 = v171;
      }
      sub_1C422A660(v101);
      sub_1C4230A10(v101, type metadata accessor for Proto_Value);
      if (v100)
      {
        sub_1C4230A10(v164, type metadata accessor for Proto_Optional);
        uint64_t v68 = (uint64_t)v166;
        goto LABEL_25;
      }
      uint64_t v122 = *(void *)(v57 + *(int *)(v168 + 20))
           + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
      swift_beginAccess();
      uint64_t v123 = v122;
      uint64_t v124 = v140;
      sub_1C3F970C4(v123, v140, &qword_1EBBBF8A0);
      unsigned int v125 = v56((char *)v124, 1, v103);
      uint64_t v126 = v164;
      if (v125 == 1)
      {
        sub_1C3F962E0(v124, &qword_1EBBBF8A0);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 8)
        {
          uint64_t v136 = v139;
          sub_1C42306F4(v124, v139, type metadata accessor for Proto_Optional);
          goto LABEL_70;
        }
        sub_1C4230A10(v124, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      }
      uint64_t v136 = v139;
      sub_1C4496888();
      uint64_t v137 = *(int *)(v159 + 20);
      if (qword_1EBBBB580 != -1) {
        swift_once();
      }
      *(void *)(v136 + v137) = qword_1EBBBB578;
      swift_retain();
LABEL_70:
      sub_1C43F04A4(v104);
      sub_1C43F0700(v136);
      sub_1C4230A10(v126, type metadata accessor for Proto_Optional);
      uint64_t v95 = (uint64_t)v166;
      return sub_1C4230A10(v95, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    case 0xAu:
      uint64_t v60 = v54;
      uint64_t v61 = v162;
      sub_1C42306F4((uint64_t)v52, v162, type metadata accessor for Proto_RepeatedValue);
      uint64_t v62 = v169;
      swift_retain();
      uint64_t v63 = swift_bridgeObjectRetain();
      uint64_t v64 = v170;
      uint64_t v65 = sub_1C422FE10(v63, v62, type metadata accessor for Proto_Value, (void (*)(BOOL, unint64_t, uint64_t))sub_1C3F6EE30, (void (*)(uint64_t))sub_1C422A660, type metadata accessor for Proto_Value);
      if (v64)
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v66 = type metadata accessor for Proto_RepeatedValue;
        uint64_t v67 = v61;
        goto LABEL_18;
      }
      uint64_t v105 = v65;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v106 = *(void *)(v57 + *(int *)(v168 + 20))
           + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
      swift_beginAccess();
      uint64_t v107 = v143;
      sub_1C3F970C4(v106, v143, &qword_1EBBBF8A0);
      if (v56((char *)v107, 1, v58) == 1)
      {
        sub_1C3F962E0(v107, &qword_1EBBBF8A0);
        uint64_t v108 = v162;
        uint64_t v109 = v147;
      }
      else
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        uint64_t v108 = v162;
        uint64_t v109 = v147;
        if (EnumCaseMultiPayload == 10)
        {
          sub_1C42306F4(v107, (uint64_t)v147, type metadata accessor for Proto_RepeatedValue);
          goto LABEL_52;
        }
        sub_1C4230A10(v107, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      }
      *uint64_t v109 = MEMORY[0x1E4FBC860];
      sub_1C4496888();
LABEL_52:
      swift_bridgeObjectRelease();
      *uint64_t v109 = v105;
      sub_1C43EF8B0((uint64_t)v109);
      uint64_t v127 = type metadata accessor for Proto_RepeatedValue;
      uint64_t v128 = v108;
      goto LABEL_63;
    case 0xBu:
      uint64_t v74 = (uint64_t)v166;
      sub_1C42306F4((uint64_t)v52, (uint64_t)v166, type metadata accessor for Proto_TaggedValue);
      uint64_t v75 = *(void *)(v74 + *(int *)(v165 + 20))
          + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
      swift_beginAccess();
      uint64_t v76 = v163;
      sub_1C3F970C4(v75, v163, &qword_1EBBC0540);
      uint64_t v77 = v168;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v167 + 48))(v76, 1, v168) == 1)
      {
        uint64_t v78 = v154;
        sub_1C4496888();
        uint64_t v79 = *(int *)(v77 + 20);
        uint64_t v80 = v170;
        if (qword_1EBBBF8C8 != -1) {
          swift_once();
        }
        uint64_t v68 = (uint64_t)v54;
        *(void *)(v78 + v79) = qword_1EBBBF8B8;
        swift_retain();
        sub_1C3F962E0(v163, &qword_1EBBC0540);
        uint64_t v81 = v78;
      }
      else
      {
        uint64_t v68 = (uint64_t)v54;
        uint64_t v81 = v154;
        sub_1C42306F4(v76, v154, type metadata accessor for Proto_Value);
        uint64_t v80 = v170;
      }
      sub_1C422A660(v81);
      if (!v80)
      {
        sub_1C4230A10(v81, type metadata accessor for Proto_Value);
        uint64_t v110 = *(void *)(v57 + *(int *)(v168 + 20))
             + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
        swift_beginAccess();
        uint64_t v111 = v110;
        uint64_t v112 = v145;
        sub_1C3F970C4(v111, v145, &qword_1EBBBF8A0);
        if (v56((char *)v112, 1, v58) == 1)
        {
          sub_1C3F962E0(v112, &qword_1EBBBF8A0);
          uint64_t v113 = v150;
        }
        else
        {
          int v119 = swift_getEnumCaseMultiPayload();
          uint64_t v113 = v150;
          if (v119 == 11)
          {
            sub_1C42306F4(v112, v150, type metadata accessor for Proto_TaggedValue);
            uint64_t v120 = (uint64_t)v149;
LABEL_57:
            uint64_t v130 = *(int *)(v165 + 20);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              type metadata accessor for Proto_TaggedValue._StorageClass(0);
              swift_allocObject();
              uint64_t v131 = swift_retain();
              *(void *)(v113 + v130) = sub_1C4400A40(v131);
              swift_release();
            }
            uint64_t v132 = *(void *)(v113 + v130);
            uint64_t v133 = v146;
            sub_1C42306F4(v161, v146, type metadata accessor for Proto_Value);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v167 + 56))(v133, 0, 1, v168);
            sub_1C3F961BC(v133, v120, &qword_1EBBC0540);
            uint64_t v134 = v132
                 + OBJC_IVAR____TtCV9Coherence17Proto_TaggedValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__wrapped;
            swift_beginAccess();
            swift_retain();
            sub_1C3F98338(v120, v134, &qword_1EBBC0540);
            swift_endAccess();
            swift_release();
            sub_1C43F0970(v113);
            uint64_t v93 = type metadata accessor for Proto_TaggedValue;
            uint64_t v94 = (uint64_t)v166;
            goto LABEL_26;
          }
          sub_1C4230A10(v112, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
        }
        uint64_t v120 = (uint64_t)v149;
        sub_1C4496888();
        uint64_t v129 = *(int *)(v165 + 20);
        if (qword_1EA39AF70 != -1) {
          swift_once();
        }
        *(void *)(v113 + v129) = qword_1EA39AF60;
        swift_retain();
        goto LABEL_57;
      }
      sub_1C4230A10(v81, type metadata accessor for Proto_Value);
      uint64_t v72 = type metadata accessor for Proto_TaggedValue;
      uint64_t v73 = (uint64_t)v166;
LABEL_24:
      sub_1C4230A10(v73, v72);
LABEL_25:
      uint64_t v93 = type metadata accessor for Proto_Value;
      uint64_t v94 = v57;
LABEL_26:
      sub_1C4230A10(v94, v93);
      uint64_t v95 = v68;
      return sub_1C4230A10(v95, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    case 0xDu:
      uint64_t v60 = v54;
      uint64_t v88 = v158;
      sub_1C42306F4((uint64_t)v52, v158, type metadata accessor for Proto_CustomCRValue);
      uint64_t v89 = v169;
      swift_retain();
      uint64_t v90 = swift_bridgeObjectRetain();
      uint64_t v91 = v170;
      uint64_t v92 = sub_1C422FE10(v90, v89, type metadata accessor for Proto_Value, (void (*)(BOOL, unint64_t, uint64_t))sub_1C3F6EE30, (void (*)(uint64_t))sub_1C422A660, type metadata accessor for Proto_Value);
      if (v91)
      {
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v66 = type metadata accessor for Proto_CustomCRValue;
        uint64_t v67 = v88;
LABEL_18:
        sub_1C4230A10(v67, v66);
        uint64_t v68 = (uint64_t)v60;
        goto LABEL_25;
      }
      uint64_t v114 = v92;
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v115 = *(void *)(v57 + *(int *)(v168 + 20))
           + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
      swift_beginAccess();
      uint64_t v116 = v144;
      sub_1C3F970C4(v115, v144, &qword_1EBBBF8A0);
      if (v56((char *)v116, 1, v58) == 1)
      {
        sub_1C3F962E0(v116, &qword_1EBBBF8A0);
        uint64_t v117 = v148;
      }
      else
      {
        int v121 = swift_getEnumCaseMultiPayload();
        uint64_t v117 = v148;
        if (v121 == 13)
        {
          sub_1C42306F4(v116, (uint64_t)v148, type metadata accessor for Proto_CustomCRValue);
          goto LABEL_62;
        }
        sub_1C4230A10(v116, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
      }
      uint64_t v135 = MEMORY[0x1E4FBC860];
      void *v117 = MEMORY[0x1E4FBC860];
      v117[1] = v135;
      sub_1C4496888();
LABEL_62:
      swift_bridgeObjectRelease();
      v117[1] = v114;
      sub_1C3F6FE54((uint64_t)v117);
      uint64_t v127 = type metadata accessor for Proto_CustomCRValue;
      uint64_t v128 = v88;
LABEL_63:
      sub_1C4230A10(v128, v127);
      uint64_t v95 = (uint64_t)v60;
      return sub_1C4230A10(v95, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    case 0xEu:
      sub_1C43EFD7C(*(float *)v52);
      return sub_1C4230A10((uint64_t)v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    default:
      return sub_1C4230A10((uint64_t)v54, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
}

uint64_t sub_1C422BC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v59 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v56 = (uint64_t)&v56 - v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v63 = (uint64_t)&v56 - v8;
  uint64_t v9 = type metadata accessor for Proto_Value(0);
  uint64_t v67 = *(void *)(v9 - 8);
  uint64_t v68 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v64 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v66 = (char *)&v56 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v61 = (uint64_t)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v60 = (uint64_t)&v56 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v56 - v18;
  uint64_t v20 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (uint64_t *)((char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v56 - v25;
  sub_1C4496888();
  uint64_t v27 = type metadata accessor for Proto_Register(0);
  uint64_t v28 = *(int *)(v27 + 20);
  if (qword_1EBBBF248 != -1) {
    swift_once();
  }
  uint64_t v69 = a2;
  uint64_t v62 = v28;
  *(void *)(a2 + v28) = qword_1EBBBF238;
  uint64_t v29 = v59;
  uint64_t v58 = *(int *)(v27 + 20);
  uint64_t v30 = *(void *)(v59 + v58)
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1C3F970C4(v30, (uint64_t)v19, &qword_1EBBC0620);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    *uint64_t v24 = 0;
    v24[1] = 0;
    uint64_t v31 = v20;
    swift_retain();
    sub_1C4496888();
    sub_1C3F962E0((uint64_t)v19, &qword_1EBBC0620);
  }
  else
  {
    uint64_t v31 = v20;
    sub_1C42306F4((uint64_t)v19, (uint64_t)v24, type metadata accessor for Proto_Timestamp);
    swift_retain();
  }
  sub_1C42306F4((uint64_t)v24, (uint64_t)v26, type metadata accessor for Proto_Timestamp);
  uint64_t v32 = v69;
  uint64_t v33 = v62;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Register._StorageClass(0);
    swift_allocObject();
    uint64_t v34 = swift_retain();
    *(void *)(v32 + v33) = sub_1C3FB87F8(v34);
    swift_release();
  }
  uint64_t v35 = *(void *)(v32 + v33);
  uint64_t v36 = v60;
  sub_1C42306F4((uint64_t)v26, v60, type metadata accessor for Proto_Timestamp);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v36, 0, 1, v31);
  uint64_t v37 = v61;
  sub_1C3F961BC(v36, v61, &qword_1EBBC0620);
  uint64_t v38 = v35 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v37, v38, &qword_1EBBC0620);
  swift_endAccess();
  swift_release();
  uint64_t v39 = *(void *)(v29 + v58)
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v40 = v63;
  sub_1C3F970C4(v39, v63, &qword_1EBBC0540);
  uint64_t v42 = v67;
  uint64_t v41 = v68;
  int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v40, 1, v68);
  uint64_t v44 = v64;
  if (v43 == 1)
  {
    sub_1C4496888();
    uint64_t v45 = *(int *)(v41 + 20);
    uint64_t v46 = (uint64_t)v66;
    if (qword_1EBBBF8C8 != -1) {
      swift_once();
    }
    *(void *)(v44 + v45) = qword_1EBBBF8B8;
    swift_retain();
    sub_1C3F962E0(v40, &qword_1EBBC0540);
  }
  else
  {
    sub_1C42306F4(v40, v64, type metadata accessor for Proto_Value);
    uint64_t v46 = (uint64_t)v66;
  }
  uint64_t v47 = v65;
  sub_1C422A660(v44, v46);
  sub_1C4230A10(v44, type metadata accessor for Proto_Value);
  if (v47) {
    return sub_1C4230A10(v32, type metadata accessor for Proto_Register);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Register._StorageClass(0);
    swift_allocObject();
    uint64_t v49 = swift_retain();
    *(void *)(v32 + v33) = sub_1C3FB87F8(v49);
    swift_release();
  }
  uint64_t v50 = *(void *)(v32 + v33);
  uint64_t v51 = v46;
  uint64_t v52 = v56;
  sub_1C42306F4(v51, v56, type metadata accessor for Proto_Value);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v52, 0, 1, v41);
  uint64_t v53 = v52;
  uint64_t v54 = v57;
  sub_1C3F961BC(v53, v57, &qword_1EBBC0540);
  uint64_t v55 = v50 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v54, v55, &qword_1EBBC0540);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C422C350@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C4230158(a1, a2, type metadata accessor for Proto_Set);
  uint64_t v5 = *(int *)(type metadata accessor for Proto_Set(0) + 20);
  swift_beginAccess();
  swift_retain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C422FFB8(v6, v2);
  swift_bridgeObjectRelease();
  swift_release();
  if (v3) {
    return sub_1C4230A10(a2, type metadata accessor for Proto_Set);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set._StorageClass(0);
    swift_allocObject();
    uint64_t v9 = swift_retain();
    *(void *)(a2 + v5) = sub_1C3F7B768(v9);
    swift_release();
  }
  uint64_t v10 = (uint64_t *)(*(void *)(a2 + v5)
                  + OBJC_IVAR____TtCV9Coherence9Proto_SetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__insertions);
  swift_beginAccess();
  *uint64_t v10 = v7;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C422C4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v79 = a3;
  uint64_t v82 = a2;
  uint64_t v83 = type metadata accessor for Proto_CRDT(0);
  uint64_t v81 = *(void *)(v83 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v83);
  uint64_t v75 = (uint64_t)&v69 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v76 = (uint64_t)&v69 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v70 = (uint64_t)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v69 = (uint64_t)&v69 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v74 = (uint64_t)&v69 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v80 = (uint64_t)&v69 - v16;
  uint64_t v17 = type metadata accessor for Proto_Value(0);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v77 = (uint64_t)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v78 = (char *)&v69 - v21;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  uint64_t v23 = MEMORY[0x1F4188790](v22 - 8);
  uint64_t v72 = (uint64_t)&v69 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v71 = (uint64_t)&v69 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v69 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v69 - v30;
  sub_1C4230158(a1, a4, type metadata accessor for Proto_Set.Element);
  uint64_t v32 = *(int *)(type metadata accessor for Proto_Set.Element(0) + 20);
  uint64_t v33 = *(void *)(a4 + v32)
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
  swift_beginAccess();
  sub_1C3F970C4(v33, (uint64_t)v31, &qword_1EBBC0540);
  uint64_t v73 = v18;
  uint64_t v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  LODWORD(v33) = v34(v31, 1, v17);
  sub_1C3F962E0((uint64_t)v31, &qword_1EBBC0540);
  uint64_t v85 = v32;
  if (v33 == 1)
  {
    uint64_t v36 = v83;
    uint64_t v35 = v84;
    uint64_t v37 = a4;
  }
  else
  {
    uint64_t v38 = *(void *)(a4 + v32)
        + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
    swift_beginAccess();
    sub_1C3F970C4(v38, (uint64_t)v29, &qword_1EBBC0540);
    int v39 = v34(v29, 1, v17);
    uint64_t v37 = a4;
    uint64_t v40 = v17;
    if (v39 == 1)
    {
      uint64_t v41 = v77;
      sub_1C4496888();
      uint64_t v42 = *(int *)(v40 + 20);
      uint64_t v43 = v84;
      uint64_t v44 = (uint64_t)v78;
      if (qword_1EBBBF8C8 != -1) {
        swift_once();
      }
      *(void *)(v41 + v42) = qword_1EBBBF8B8;
      swift_retain();
      sub_1C3F962E0((uint64_t)v29, &qword_1EBBC0540);
    }
    else
    {
      uint64_t v41 = v77;
      sub_1C42306F4((uint64_t)v29, v77, type metadata accessor for Proto_Value);
      uint64_t v43 = v84;
      uint64_t v44 = (uint64_t)v78;
    }
    sub_1C422A660(v41, v44);
    uint64_t v35 = v43;
    sub_1C4230A10(v41, type metadata accessor for Proto_Value);
    uint64_t v36 = v83;
    if (v43)
    {
LABEL_19:
      uint64_t result = sub_1C4230A10(v37, type metadata accessor for Proto_Set.Element);
      *uint64_t v79 = v35;
      return result;
    }
    uint64_t v45 = v85;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for Proto_Set.Element._StorageClass(0);
      swift_allocObject();
      uint64_t v46 = swift_retain();
      *(void *)(v37 + v45) = sub_1C3F97F64(v46);
      swift_release();
    }
    uint64_t v47 = *(void *)(v37 + v45);
    uint64_t v48 = v71;
    sub_1C42306F4(v44, v71, type metadata accessor for Proto_Value);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v73 + 56))(v48, 0, 1, v40);
    uint64_t v49 = v72;
    sub_1C3F961BC(v48, v72, &qword_1EBBC0540);
    uint64_t v50 = v47 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__key;
    swift_beginAccess();
    swift_retain();
    sub_1C3F98338(v49, v50, &qword_1EBBC0540);
    swift_endAccess();
    swift_release();
  }
  uint64_t v51 = v85;
  uint64_t v52 = *(void *)(v37 + v85)
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v53 = v80;
  sub_1C3F970C4(v52, v80, &qword_1EBBC04F8);
  uint64_t v54 = v37;
  uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
  LODWORD(v52) = v55(v53, 1, v36);
  uint64_t result = sub_1C3F962E0(v53, &qword_1EBBC04F8);
  if (v52 == 1) {
    return result;
  }
  uint64_t v57 = v54;
  uint64_t v58 = *(void *)(v54 + v51)
      + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  uint64_t v59 = v74;
  sub_1C3F970C4(v58, v74, &qword_1EBBC04F8);
  if (v55(v59, 1, v36) == 1)
  {
    uint64_t v60 = v75;
    sub_1C4496888();
    uint64_t v61 = *(int *)(v36 + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)(v60 + v61) = qword_1EBBC0660;
    swift_retain();
    sub_1C3F962E0(v59, &qword_1EBBC04F8);
    uint64_t v37 = v57;
  }
  else
  {
    uint64_t v60 = v75;
    sub_1C42306F4(v59, v75, type metadata accessor for Proto_CRDT);
    uint64_t v37 = v57;
  }
  sub_1C42295EC(v60);
  sub_1C4230A10(v60, type metadata accessor for Proto_CRDT);
  if (v35) {
    goto LABEL_19;
  }
  uint64_t v62 = v85;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Set.Element._StorageClass(0);
    swift_allocObject();
    uint64_t v63 = swift_retain();
    *(void *)(v37 + v62) = sub_1C3F97F64(v63);
    swift_release();
  }
  uint64_t v64 = *(void *)(v37 + v62);
  uint64_t v65 = v69;
  sub_1C42306F4(v76, v69, type metadata accessor for Proto_CRDT);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v65, 0, 1, v36);
  uint64_t v66 = v65;
  uint64_t v67 = v70;
  sub_1C3F961BC(v66, v70, &qword_1EBBC04F8);
  uint64_t v68 = v64 + OBJC_IVAR____TtCVV9Coherence9Proto_Set7ElementP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__value;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v67, v68, &qword_1EBBC04F8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C422CDBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC06E8);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v63 = (uint64_t)&v60 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v62 = (uint64_t)&v60 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v66 = (uint64_t)&v60 - v9;
  uint64_t v68 = type metadata accessor for Proto_Sequence(0);
  uint64_t v70 = *(void *)(v68 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v68);
  uint64_t v69 = (uint64_t)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v67 = (char *)&v60 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EBBC0748);
  uint64_t v14 = MEMORY[0x1F4188790](v13 - 8);
  uint64_t v65 = (uint64_t)&v60 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v64 = (uint64_t)&v60 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v60 - v18;
  uint64_t v20 = type metadata accessor for Proto_Set(0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v60 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v60 - v25;
  sub_1C4230158(a1, a2, type metadata accessor for Proto_OrderedSet);
  uint64_t v27 = type metadata accessor for Proto_OrderedSet(0);
  uint64_t v28 = a2;
  uint64_t v29 = *(void *)(a2 + *(int *)(v27 + 20));
  uint64_t v30 = *(int *)(v27 + 20);
  uint64_t v31 = v29 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  sub_1C3F970C4(v31, (uint64_t)v19, (uint64_t *)&unk_1EBBC0748);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
  {
    sub_1C4496888();
    uint64_t v32 = *(int *)(v20 + 20);
    if (qword_1EBBC01E8 != -1) {
      swift_once();
    }
    *(void *)&v24[v32] = qword_1EBBC01E0;
    swift_retain();
    sub_1C3F962E0((uint64_t)v19, (uint64_t *)&unk_1EBBC0748);
  }
  else
  {
    sub_1C42306F4((uint64_t)v19, (uint64_t)v24, type metadata accessor for Proto_Set);
  }
  uint64_t v33 = v71;
  sub_1C422C350((uint64_t)v24, (uint64_t)v26);
  sub_1C4230A10((uint64_t)v24, type metadata accessor for Proto_Set);
  uint64_t v34 = v28;
  if (v33) {
    return sub_1C4230A10(v28, type metadata accessor for Proto_OrderedSet);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_OrderedSet._StorageClass(0);
    swift_allocObject();
    uint64_t v35 = swift_retain();
    *(void *)(v28 + v30) = sub_1C3F7BD98(v35);
    swift_release();
  }
  uint64_t v36 = *(void *)(v28 + v30);
  uint64_t v37 = v64;
  sub_1C42306F4((uint64_t)v26, v64, type metadata accessor for Proto_Set);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v37, 0, 1, v20);
  uint64_t v38 = v65;
  sub_1C3F961BC(v37, v65, (uint64_t *)&unk_1EBBC0748);
  uint64_t v39 = v36 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__set;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v38, v39, (uint64_t *)&unk_1EBBC0748);
  swift_endAccess();
  swift_release();
  uint64_t v40 = *(void *)(v34 + v30)
      + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  swift_beginAccess();
  uint64_t v41 = v66;
  sub_1C3F970C4(v40, v66, &qword_1EBBC06E8);
  uint64_t v42 = v68;
  int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v41, 1, v68);
  uint64_t v61 = v30;
  if (v43 == 1)
  {
    uint64_t v44 = v69;
    sub_1C4496888();
    uint64_t v45 = *(int *)(v42 + 20);
    uint64_t v46 = (uint64_t)v67;
    if (qword_1EBBBC000 != -1) {
      swift_once();
    }
    *(void *)(v44 + v45) = qword_1EBBBBFF0;
    swift_retain();
    sub_1C3F962E0(v41, &qword_1EBBC06E8);
  }
  else
  {
    uint64_t v44 = v69;
    sub_1C42306F4(v41, v69, type metadata accessor for Proto_Sequence);
    uint64_t v46 = (uint64_t)v67;
  }
  sub_1C4230158(v44, v46, type metadata accessor for Proto_Sequence);
  uint64_t v47 = *(int *)(v42 + 20);
  swift_beginAccess();
  uint64_t v48 = v72;
  swift_retain();
  uint64_t v49 = swift_bridgeObjectRetain();
  uint64_t v50 = sub_1C422FE10(v49, v48, type metadata accessor for Proto_Value, (void (*)(BOOL, unint64_t, uint64_t))sub_1C3F6EE30, (void (*)(uint64_t))sub_1C422A660, type metadata accessor for Proto_Value);
  swift_bridgeObjectRelease();
  swift_release();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Sequence._StorageClass(0);
    swift_allocObject();
    uint64_t v52 = (void *)swift_retain();
    *(void *)(v46 + v47) = sub_1C3F7C6CC(v52);
    swift_release();
  }
  uint64_t v53 = *(void *)(v46 + v47);
  swift_beginAccess();
  *(void *)(v53 + 32) = v50;
  swift_bridgeObjectRelease();
  sub_1C4230A10(v69, type metadata accessor for Proto_Sequence);
  uint64_t v54 = v61;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_OrderedSet._StorageClass(0);
    swift_allocObject();
    uint64_t v55 = swift_retain();
    *(void *)(v34 + v54) = sub_1C3F7BD98(v55);
    swift_release();
  }
  uint64_t v56 = *(void *)(v34 + v54);
  uint64_t v57 = v62;
  sub_1C42306F4(v46, v62, type metadata accessor for Proto_Sequence);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v70 + 56))(v57, 0, 1, v42);
  uint64_t v58 = v63;
  sub_1C3F961BC(v57, v63, &qword_1EBBC06E8);
  uint64_t v59 = v56 + OBJC_IVAR____TtCV9Coherence16Proto_OrderedSetP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__sequence;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v58, v59, &qword_1EBBC06E8);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_1C422D670@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_1C4496678();
  uint64_t v44 = *(void *)(v4 - 8);
  uint64_t v45 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C4497208();
  uint64_t v42 = *(void *)(v7 - 8);
  uint64_t v43 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (uint64_t *)((char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v42 - v14;
  uint64_t v16 = type metadata accessor for Proto_Value(0);
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  if (*(void *)(v20 + 16) != 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v29 = 0xD000000000000021;
    *(void *)(v29 + 8) = 0x80000001C44B3400;
    *(unsigned char *)(v29 + 16) = 0;
    return swift_willThrow();
  }
  *a2 = MEMORY[0x1E4FBC860];
  a2[1] = sub_1C4496868();
  a2[2] = v21;
  type metadata accessor for Proto_KeyPath(0);
  uint64_t result = sub_1C4496888();
  if (!*(void *)(v20 + 16))
  {
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
    return result;
  }
  sub_1C4230158(v20 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), (uint64_t)v19, type metadata accessor for Proto_Value);
  uint64_t v23 = *(void *)&v19[*(int *)(v16 + 20)]
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v23, (uint64_t)v15, &qword_1EBBBF8A0);
  sub_1C4230A10((uint64_t)v19, type metadata accessor for Proto_Value);
  uint64_t v24 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v15, 1, v24) != 1)
  {
    sub_1C3F970C4((uint64_t)v15, (uint64_t)v13, &qword_1EBBBF8A0);
    uint64_t result = swift_getEnumCaseMultiPayload();
    switch(result)
    {
      case 5:
        unint64_t v30 = *v13;
        if ((*v13 & 0x8000000000000000) == 0)
        {
          uint64_t v31 = *(void *)(v46 + 16);
          if (v30 < *(void *)(v31 + 16))
          {
            uint64_t v33 = v44;
            uint64_t v32 = v45;
            (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v6, v31+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v30, v45);
            *(void *)&long long v47 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9A160);
            *((void *)&v47 + 1) = v34;
            uint64_t v35 = sub_1C3F5DF48();
            unint64_t v37 = v36;
            sub_1C4496588();
            sub_1C3F7E2CC(v35, v37);
            (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v32);
            goto LABEL_16;
          }
          goto LABEL_24;
        }
        goto LABEL_22;
      case 3:
        uint64_t v38 = *v13;
        unint64_t v39 = v13[1];
        *(void *)&long long v47 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9A188);
        *((void *)&v47 + 1) = v40;
        sub_1C4496588();
        sub_1C3F7E2CC(v38, v39);
        goto LABEL_16;
      case 2:
        if ((*v13 & 0x8000000000000000) == 0)
        {
          if ((unint64_t)*v13 < *(void *)(*(void *)(v46 + 32) + 16))
          {
            swift_bridgeObjectRetain();
            *(void *)&long long v47 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9A1B0);
            *((void *)&v47 + 1) = v25;
            sub_1C44971F8();
            uint64_t v26 = sub_1C44971C8();
            unint64_t v28 = v27;
            swift_bridgeObjectRelease();
            uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v9, v43);
            if (v28 >> 60 != 15)
            {
              sub_1C4496588();
              sub_1C3F6C6F0(v26, v28);
LABEL_16:
              long long v46 = v47;
              sub_1C3F7E2CC(a2[1], a2[2]);
              *(_OWORD *)(a2 + 1) = v46;
              return sub_1C3F962E0((uint64_t)v15, &qword_1EBBBF8A0);
            }
            goto LABEL_25;
          }
          goto LABEL_23;
        }
        goto LABEL_21;
    }
    sub_1C4230A10((uint64_t)v13, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  sub_1C3FE3FF0();
  swift_allocError();
  *(void *)uint64_t v41 = 0xD00000000000001BLL;
  *(void *)(v41 + 8) = 0x80000001C44B3430;
  *(unsigned char *)(v41 + 16) = 0;
  swift_willThrow();
  sub_1C3F962E0((uint64_t)v15, &qword_1EBBBF8A0);
  return sub_1C4230A10((uint64_t)a2, type metadata accessor for Proto_KeyPath);
}

uint64_t sub_1C422DC7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v30 = (uint64_t)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v29 = (uint64_t)&v28 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (uint64_t *)((char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (uint64_t *)((char *)&v28 - v16);
  sub_1C4230158(a1, a2, type metadata accessor for Proto_Reference);
  uint64_t v18 = *(int *)(type metadata accessor for Proto_Reference(0) + 20);
  uint64_t v19 = *(void *)(a2 + v18)
      + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  sub_1C3F970C4(v19, (uint64_t)v10, &qword_1EBBC0560);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    *uint64_t v15 = MEMORY[0x1E4FBC860];
    v15[1] = sub_1C4496868();
    void v15[2] = v20;
    sub_1C4496888();
    sub_1C3F962E0((uint64_t)v10, &qword_1EBBC0560);
  }
  else
  {
    sub_1C42306F4((uint64_t)v10, (uint64_t)v15, type metadata accessor for Proto_KeyPath);
  }
  uint64_t v21 = v31;
  sub_1C422D670(v15, v17);
  sub_1C4230A10((uint64_t)v15, type metadata accessor for Proto_KeyPath);
  if (v21) {
    return sub_1C4230A10(a2, type metadata accessor for Proto_Reference);
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_Reference._StorageClass(0);
    swift_allocObject();
    uint64_t v23 = swift_retain();
    *(void *)(a2 + v18) = sub_1C3FB0204(v23);
    swift_release();
  }
  uint64_t v24 = *(void *)(a2 + v18);
  uint64_t v25 = v29;
  sub_1C42306F4((uint64_t)v17, v29, type metadata accessor for Proto_KeyPath);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
  uint64_t v26 = v30;
  sub_1C3F961BC(v25, v30, &qword_1EBBC0560);
  uint64_t v27 = v24 + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
  swift_beginAccess();
  swift_retain();
  sub_1C3F98338(v26, v27, &qword_1EBBC0560);
  swift_endAccess();
  return swift_release();
}

sqlite3_stmt *sub_1C422E024(uint64_t a1, char *a2)
{
  uint64_t v170 = a2;
  uint64_t v195 = *MEMORY[0x1E4F143B8];
  uint64_t v4 = sub_1C44968B8();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v168 = (char *)&v146 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for Proto_RetainCounts(0);
  uint64_t v6 = MEMORY[0x1F4188790](v167);
  uint64_t v165 = (uint64_t)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v176 = (uint64_t)&v146 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v174 = (char *)&v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = type metadata accessor for Proto_KeyPath(0);
  unint64_t v185 = *(void *)(v163 - 8);
  MEMORY[0x1F4188790](v163);
  uint64_t v162 = (uint64_t *)((char *)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0598);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v173 = (char *)&v146 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1F4188790](v166);
  uint64_t v161 = (uint64_t)&v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v175 = type metadata accessor for Proto_Document(0);
  uint64_t v15 = MEMORY[0x1F4188790](v175);
  uint64_t v159 = (uint64_t)&v146 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v169 = (char *)&v146 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v146 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v146 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v146 - v25;
  uint64_t v27 = sub_1C4497208();
  uint64_t v187 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)&v146 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  uint64_t result = (sqlite3_stmt *)sub_1C3F5FA40();
  if (v2) {
    return result;
  }
  uint64_t v32 = result;
  uint64_t v186 = v29;
  uint64_t v151 = v21;
  uint64_t v152 = v26;
  long long v148 = v24;
  uint64_t v184 = v30;
  if (sqlite3_step(result) == 100) {
    uint64_t v33 = sqlite3_column_int(v32, 0);
  }
  else {
    uint64_t v33 = 0;
  }
  uint64_t v34 = v27;
  unint64_t v36 = v186;
  uint64_t v35 = v187;
  sqlite3_finalize(v32);
  uint64_t v189 = sub_1C3FF13E0(0, v33 & ~(v33 >> 63), 0, MEMORY[0x1E4FBC860]);
  sub_1C3FDBA04(v184, &v189);
  uint64_t v186 = 0;
  sub_1C44971F8();
  uint64_t v164 = sub_1C44971C8();
  unint64_t v38 = v37;
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v34);
  if (v38 >> 60 == 15) {
    goto LABEL_65;
  }
  uint64_t v39 = v189[2];
  uint64_t v40 = (uint64_t)v173;
  uint64_t v41 = (uint64_t)v174;
  if (!v39) {
    goto LABEL_53;
  }
  uint64_t v149 = OBJC_IVAR___CRContext_assetManager;
  uint64_t v147 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v185 + 48);
  uint64_t v146 = swift_bridgeObjectRetain();
  uint64_t v42 = (unint64_t *)(v146 + 40);
  unint64_t v150 = v38;
  while (2)
  {
    uint64_t v156 = v39;
    uint64_t v44 = *(v42 - 1);
    unint64_t v43 = *v42;
    sub_1C3F7E324(v44, *v42);
    char v45 = sub_1C3FAD630(v44, v43, v164, v38);
    unint64_t v177 = v43;
    uint64_t v183 = v44;
    if ((v45 & 1) == 0)
    {
      uint64_t v171 = v42;
      type metadata accessor for UpgradeKeyPaths();
      uint64_t v49 = (void *)swift_allocObject();
      uint64_t v50 = MEMORY[0x1E4FBC860];
      v49[2] = MEMORY[0x1E4FBC860];
      uint64_t v51 = MEMORY[0x1E4FBC868];
      v49[3] = MEMORY[0x1E4FBC868];
      v49[4] = v50;
      v49[5] = v51;
      v49[6] = 0;
      v49[7] = 0;
      uint64_t v52 = v148;
      uint64_t v53 = v186;
      sub_1C3FACEA0(&v190, (uint64_t)v148, v44, v43);
      if (v53)
      {
        swift_bridgeObjectRelease();
        sub_1C3F7E2CC(v44, v177);
        sub_1C3F6C6F0(v164, v38);
        swift_release();
        return (sqlite3_stmt *)swift_bridgeObjectRelease();
      }
      uint64_t v54 = (uint64_t)v152;
      sub_1C4227954(v52, (uint64_t)v152);
      uint64_t v48 = 0;
      sub_1C4230A10((uint64_t)v52, type metadata accessor for Proto_Document);
      swift_release();
      uint64_t v55 = *(void *)(v54 + *(int *)(v175 + 20))
          + OBJC_IVAR____TtCV9Coherence14Proto_DocumentP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__root;
      swift_beginAccess();
      sub_1C3F970C4(v55, v40, &qword_1EBBC0598);
      uint64_t v56 = type metadata accessor for Proto_Document.OneOf_Root(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 48))(v40, 1, v56) == 1)
      {
        sub_1C3F962E0(v40, &qword_1EBBC0598);
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 2)
        {
          uint64_t v57 = v40;
          uint64_t v58 = v161;
          sub_1C42306F4(v57, v161, type metadata accessor for Proto_Reference);
          uint64_t v59 = v166;
          uint64_t v60 = (uint64_t)v152;
LABEL_19:
          sub_1C4230A10(v60, type metadata accessor for Proto_Document);
          uint64_t v63 = *(void *)(v58 + *(int *)(v59 + 20))
              + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
          swift_beginAccess();
          sub_1C3F970C4(v63, v41, &qword_1EBBC0560);
          if ((*v147)(v41, 1, v163) == 1)
          {
            uint64_t v64 = v162;
            *uint64_t v162 = MEMORY[0x1E4FBC860];
            v64[1] = sub_1C4496868();
            v64[2] = v65;
            sub_1C4496888();
            sub_1C3F962E0(v41, &qword_1EBBC0560);
          }
          else
          {
            uint64_t v64 = v162;
            sub_1C42306F4(v41, (uint64_t)v162, type metadata accessor for Proto_KeyPath);
          }
          uint64_t v42 = v171;
          uint64_t v44 = v183;
          sub_1C4230A10(v58, type metadata accessor for Proto_Reference);
          uint64_t v46 = v64[1];
          unint64_t v185 = v64[2];
          sub_1C3F7E324(v46, v185);
          sub_1C4230A10((uint64_t)v64, type metadata accessor for Proto_KeyPath);
          unint64_t v43 = v177;
          goto LABEL_23;
        }
        sub_1C4230A10(v40, type metadata accessor for Proto_Document.OneOf_Root);
      }
      uint64_t v61 = v166;
      uint64_t v58 = v161;
      sub_1C4496888();
      uint64_t v62 = *(int *)(v61 + 20);
      uint64_t v60 = (uint64_t)v152;
      if (qword_1EBBBC818 != -1) {
        swift_once();
      }
      *(void *)(v58 + v62) = qword_1EBBBC808;
      swift_retain();
      uint64_t v59 = v166;
      goto LABEL_19;
    }
    uint64_t v46 = sub_1C3F5E0D0((uint64_t)&unk_1F1F9A138);
    unint64_t v185 = v47;
    uint64_t v48 = v186;
LABEL_23:
    uint64_t v171 = v42 + 2;
    uint64_t v172 = v46;
    uint64_t v186 = (char *)(v43 >> 62);
    switch(v43 >> 62)
    {
      case 1uLL:
        if (v44 >> 32 < (int)v44)
        {
          __break(1u);
LABEL_63:
          __break(1u);
        }
        unint64_t v68 = v177;
        uint64_t v69 = v184;
        swift_retain_n();
        sub_1C3F7E324(v44, v68);
        swift_retain();
        sub_1C422FD5C((int)v44, v44 >> 32, v69, (uint64_t *)&v190);
        if (!v48)
        {
          sub_1C3F7E2CC(v44, v68);
          swift_release_n();
LABEL_33:
          unint64_t v73 = *((void *)&v190 + 1);
          uint64_t v74 = v169;
          if (*((void *)&v190 + 1) >> 60 != 15)
          {
            uint64_t v75 = v190;
            uint64_t v187 = v191;
            uint64_t v76 = v192;
            unint64_t v180 = *((void *)&v191 + 1);
            uint64_t v181 = v193;
            unint64_t v182 = v194;
            uint64_t v77 = type metadata accessor for UpgradeKeyPaths();
            uint64_t v78 = (void *)swift_allocObject();
            uint64_t v79 = MEMORY[0x1E4FBC860];
            v78[2] = MEMORY[0x1E4FBC860];
            uint64_t v80 = MEMORY[0x1E4FBC868];
            v78[3] = MEMORY[0x1E4FBC868];
            v78[4] = v79;
            v78[5] = v80;
            void v78[6] = 0;
            v78[7] = 0;
            unint64_t v178 = v73;
            uint64_t v179 = v75;
            sub_1C3FACEA0(&v190, (uint64_t)v74, v75, v73);
            uint64_t v160 = v76;
            uint64_t v81 = (uint64_t)v151;
            sub_1C4227954(v74, (uint64_t)v151);
            sub_1C4230A10((uint64_t)v74, type metadata accessor for Proto_Document);
            swift_release();
            sub_1C42309C8((unint64_t *)&qword_1EBBC05F0, (void (*)(uint64_t))type metadata accessor for Proto_Document);
            uint64_t v82 = sub_1C4496AA8();
            uint64_t v155 = v77;
            uint64_t v157 = v82;
            unint64_t v158 = v83;
            sub_1C4230A10(v81, type metadata accessor for Proto_Document);
            unint64_t v84 = v178;
            uint64_t v85 = v179;
            sub_1C3F7E324(v179, v178);
            unint64_t v86 = v180;
            uint64_t v87 = v187;
            sub_1C3F7E324(v187, v180);
            uint64_t v89 = v181;
            unint64_t v88 = v182;
            sub_1C3F7E324(v181, v182);
            sub_1C3F7E2CC(v89, v88);
            sub_1C3F7E2CC(v85, v84);
            sub_1C3F7E324(v85, v84);
            sub_1C3F7E324(v87, v86);
            sub_1C3F7E324(v89, v88);
            unint64_t v90 = v84;
            sub_1C3F7E2CC(v89, v88);
            sub_1C3F7E2CC(v85, v84);
            switch(v86 >> 62)
            {
              case 1uLL:
                uint64_t v107 = v187;
                unint64_t v91 = v180;
                sub_1C3F7E2CC(v187, v180);
                if ((int)v107 != v107 >> 32) {
                  goto LABEL_36;
                }
                goto LABEL_40;
              case 2uLL:
                uint64_t v108 = *(void *)(v187 + 16);
                uint64_t v109 = *(void *)(v187 + 24);
                unint64_t v91 = v180;
                sub_1C3F7E2CC(v187, v180);
                if (v108 == v109) {
                  goto LABEL_40;
                }
                goto LABEL_36;
              case 3uLL:
                uint64_t v106 = v187;
                unint64_t v91 = v180;
                sub_1C3F7E2CC(v187, v180);
                uint64_t v153 = v106;
                unint64_t v154 = v91;
                goto LABEL_42;
              default:
                unint64_t v91 = v180;
                sub_1C3F7E2CC(v187, v180);
                if ((v91 & 0xFF000000000000) != 0)
                {
LABEL_36:
                  type metadata accessor for CRDecoder(0);
                  uint64_t v92 = swift_allocObject();
                  *(void *)(v92 + 16) = 0;
                  uint64_t v93 = MEMORY[0x1E4FBC860];
                  *(void *)(v92 + 24) = MEMORY[0x1E4FBC860];
                  *(void *)(v92 + 32) = v93;
                  *(void *)(v92 + 40) = MEMORY[0x1E4FBC868];
                  *(unsigned char *)(v92 + 48) = 0;
                  *(void *)(v92 + 56) = 0;
                  uint64_t v94 = v92 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
                  uint64_t v95 = type metadata accessor for Proto_CRDT(0);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 56))(v94, 1, 1, v95);
                  uint64_t v96 = v92 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
                  uint64_t v97 = type metadata accessor for Proto_Value(0);
                  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v97 - 8) + 56))(v96, 1, 1, v97);
                  *(void *)(v92 + 16) = 0;
                  swift_release();
                  *(unsigned char *)(v92 + 49) = 1;
                  uint64_t v98 = v159;
                  sub_1C3FACEA0(v188, v159, v187, v91);
                  sub_1C3FFC790(v98, &v190);
                  sub_1C4230A10(v98, type metadata accessor for Proto_Document);
                  swift_setDeallocating();
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_1C3F962E0(v92 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt, &qword_1EBBC04F8);
                  sub_1C3F962E0(v92 + OBJC_IVAR____TtC9Coherence9CRDecoder_value, &qword_1EBBC0540);
                  swift_deallocClassInstance();
                  long long v99 = v190;
                  type metadata accessor for CREncoder();
                  uint64_t inited = swift_initStackObject();
                  uint64_t v101 = MEMORY[0x1E4FBC868];
                  *(void *)(inited + 32) = MEMORY[0x1E4FBC868];
                  uint64_t v102 = MEMORY[0x1E4FBC860];
                  *(void *)(inited + 40) = MEMORY[0x1E4FBC860];
                  *(void *)(inited + 48) = v102;
                  *(void *)(inited + 56) = v101;
                  *(void *)(inited + 64) = v102;
                  *(void *)(inited + 80) = 0;
                  *(void *)(inited + 88) = 0;
                  uint64_t v103 = v170;
                  *(void *)(inited + 16) = v170;
                  *(void *)(inited + 24) = v102;
                  *(unsigned char *)(inited + 72) = 1;
                  long long v190 = v99;
                  id v104 = v103;
                  uint64_t v153 = sub_1C4007A4C(&v190);
                  unint64_t v154 = v105;
                  uint64_t v106 = v187;
                  sub_1C3F7E2CC(v187, v91);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_release();
                  unint64_t v90 = v178;
                }
                else
                {
LABEL_40:
                  uint64_t v106 = v187;
                  uint64_t v153 = v187;
                  unint64_t v154 = v91;
                  unint64_t v90 = v178;
                }
LABEL_42:
                uint64_t v110 = v179;
                sub_1C3F7E324(v179, v90);
                sub_1C3F7E324(v106, v91);
                sub_1C3F7E324(v181, v182);
                sub_1C3F7E2CC(v106, v91);
                sub_1C3F7E2CC(v110, v90);
                uint64_t v192 = 0;
                long long v190 = 0u;
                long long v191 = 0u;
                sub_1C44968A8();
                sub_1C42309C8(&qword_1EA39B6F0, (void (*)(uint64_t))type metadata accessor for Proto_RetainCounts);
                uint64_t v111 = v176;
                sub_1C4496A98();
                uint64_t v112 = (void *)swift_initStackObject();
                uint64_t v113 = MEMORY[0x1E4FBC860];
                v112[2] = MEMORY[0x1E4FBC860];
                uint64_t v114 = MEMORY[0x1E4FBC868];
                v112[3] = MEMORY[0x1E4FBC868];
                v112[4] = v113;
                v112[5] = v114;
                v112[6] = 0;
                v112[7] = 0;
                uint64_t v115 = v165;
                sub_1C422910C(v111, v165);
                uint64_t v116 = v183;
                swift_setDeallocating();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v117 = v170;
                uint64_t v118 = *(void *)&v170[v149];
                swift_retain();
                uint64_t v119 = sub_1C413B3C8(v115, v118);
                uint64_t v121 = v120;
                type metadata accessor for CREncoder();
                uint64_t v122 = swift_initStackObject();
                uint64_t v123 = MEMORY[0x1E4FBC868];
                *(void *)(v122 + 32) = MEMORY[0x1E4FBC868];
                uint64_t v124 = MEMORY[0x1E4FBC860];
                *(void *)(v122 + 40) = MEMORY[0x1E4FBC860];
                *(void *)(v122 + 48) = v124;
                *(void *)(v122 + 56) = v123;
                *(void *)(v122 + 64) = v124;
                *(void *)(v122 + 80) = 0;
                *(void *)(v122 + 88) = 0;
                *(void *)(v122 + 16) = v117;
                *(void *)(v122 + 24) = v124;
                *(unsigned char *)(v122 + 72) = 1;
                id v125 = v117;
                uint64_t v126 = sub_1C400ACCC(v119, v121);
                unint64_t v128 = v127;
                swift_setDeallocating();
                CREncoder.deinit();
                swift_deallocClassInstance();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v129 = v185;
                switch((unint64_t)v186)
                {
                  case 1uLL:
                    if (v116 >> 32 < (int)v116) {
                      goto LABEL_63;
                    }
                    unint64_t v132 = v177;
                    swift_retain_n();
                    sub_1C3F7E324(v183, v132);
                    swift_retain();
                    sub_1C422FCB8((int)v116, v116 >> 32);
                    uint64_t v186 = 0;
                    unint64_t v133 = v128;
                    sub_1C3F7E2CC(v183, v132);
                    swift_release_n();
                    unint64_t v129 = v185;
                    break;
                  case 2uLL:
                    unint64_t v133 = v128;
                    uint64_t v134 = *(void *)(v116 + 16);
                    uint64_t v135 = *(void *)(v116 + 24);
                    swift_retain_n();
                    swift_retain();
                    swift_retain();
                    sub_1C422FCB8(v134, v135);
                    uint64_t v186 = 0;
                    swift_release_n();
                    swift_release();
                    swift_release();
                    unint64_t v129 = v185;
                    uint64_t v136 = v172;
                    goto LABEL_50;
                  case 3uLL:
                    *(void *)((char *)&v190 + 6) = 0;
                    *(void *)&long long v190 = 0;
                    swift_retain_n();
                    uint64_t v131 = &v190;
                    goto LABEL_48;
                  default:
                    *(void *)&long long v190 = v116;
                    DWORD2(v190) = v177;
                    WORD6(v190) = WORD2(v177);
                    uint64_t v130 = (long long *)((char *)&v190 + BYTE6(v177));
                    swift_retain_n();
                    uint64_t v131 = v130;
LABEL_48:
                    sub_1C3FDC160((const char *)&v190, (uint64_t)v131);
                    uint64_t v186 = 0;
                    unint64_t v133 = v128;
                    swift_release_n();
                    break;
                }
                uint64_t v136 = v172;
LABEL_50:
                unint64_t v185 = v129;
                unint64_t v145 = v129;
                uint64_t v137 = v157;
                unint64_t v138 = v158;
                uint64_t v139 = v153;
                unint64_t v140 = v154;
                uint64_t v141 = v160;
                uint64_t v142 = v186;
                sub_1C3FDCBF0(v157, v158, v153, v154, v160, v126, v133, v136, v145);
                sub_1C3F7E2CC(v126, v133);
                sub_1C3F7E2CC(v137, v138);
                sub_1C3F7E2CC(v183, v177);
                if (v142)
                {
                  sub_1C3F6C6F0(v164, v150);
                  sub_1C423095C(v179, v178, v187, v180, v141, v181, v182);
                  sub_1C3F7E2CC(v139, v140);
                  sub_1C3F7E2CC(v172, v185);
                  sub_1C4230A10(v176, type metadata accessor for Proto_RetainCounts);
                  swift_bridgeObjectRelease();
                  return (sqlite3_stmt *)swift_bridgeObjectRelease();
                }
                uint64_t v186 = 0;
                sub_1C423095C(v179, v178, v187, v180, v141, v181, v182);
                sub_1C3F7E2CC(v139, v140);
                sub_1C3F7E2CC(v172, v185);
                sub_1C4230A10(v176, type metadata accessor for Proto_RetainCounts);
                uint64_t v39 = v156 - 1;
                uint64_t v40 = (uint64_t)v173;
                uint64_t v41 = (uint64_t)v174;
                unint64_t v38 = v150;
                uint64_t v42 = v171;
                if (v156 != 1) {
                  continue;
                }
                swift_bridgeObjectRelease();
                break;
            }
LABEL_53:
            sub_1C3FDA940(1, 0x10000);
            sub_1C3F6C6F0(v164, v38);
            return (sqlite3_stmt *)swift_bridgeObjectRelease();
          }
          __break(1u);
LABEL_65:
          __break(1u);
          JUMPOUT(0x1C422FC14);
        }
        sub_1C3F7E2CC(v44, v68);
        sub_1C3F7E2CC(v44, v68);
        sub_1C3F6C6F0(v164, v150);
        sub_1C3F7E2CC(v172, v185);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        break;
      case 2uLL:
        uint64_t v70 = *(void *)(v44 + 16);
        uint64_t v71 = *(void *)(v44 + 24);
        uint64_t v72 = v184;
        swift_retain_n();
        swift_retain();
        swift_retain();
        sub_1C422FD5C(v70, v71, v72, (uint64_t *)&v190);
        if (!v48)
        {
          swift_release_n();
          swift_release();
          swift_release();
          goto LABEL_33;
        }
        swift_release();
        swift_release();
        uint64_t v143 = v44;
        unint64_t v144 = v177;
LABEL_60:
        sub_1C3F7E2CC(v143, v144);
        sub_1C3F6C6F0(v164, v150);
        sub_1C3F7E2CC(v172, v185);
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        break;
      case 3uLL:
        *(void *)&v188[6] = 0;
        *(void *)uint64_t v188 = 0;
        uint64_t v66 = v184;
        swift_retain_n();
        uint64_t v67 = v188;
        goto LABEL_31;
      default:
        *(void *)uint64_t v188 = v44;
        *(_WORD *)&v188[8] = v43;
        v188[10] = BYTE2(v43);
        v188[11] = BYTE3(v43);
        v188[12] = BYTE4(v43);
        v188[13] = BYTE5(v43);
        uint64_t v66 = v184;
        swift_retain_n();
        uint64_t v67 = &v188[BYTE6(v43)];
LABEL_31:
        sub_1C3FE1EA8((uint64_t)v188, (uint64_t)v67, v66, (uint64_t *)&v190);
        if (v48)
        {
          uint64_t v143 = v44;
          unint64_t v144 = v43;
          goto LABEL_60;
        }
        swift_release_n();
        goto LABEL_33;
    }
    return (sqlite3_stmt *)swift_bridgeObjectRelease();
  }
}

uint64_t sub_1C422FC44()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UpgradeKeyPaths()
{
  return self;
}

uint64_t sub_1C422FCB8(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_1C4496298();
  uint64_t v5 = (const char *)result;
  if (result)
  {
    uint64_t result = sub_1C44962C8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v5 += a1 - result;
  }
  BOOL v6 = __OFSUB__(a2, a1);
  uint64_t v7 = a2 - a1;
  if (v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v8 = sub_1C44962B8();
  if (v8 >= v7) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = v8;
  }
  uint64_t v10 = &v5[v9];
  if (v5) {
    uint64_t v11 = (uint64_t)v10;
  }
  else {
    uint64_t v11 = 0;
  }
  sub_1C3FDC160(v5, v11);
  return swift_release();
}

uint64_t sub_1C422FD5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result = sub_1C4496298();
  uint64_t v9 = result;
  if (result)
  {
    uint64_t result = sub_1C44962C8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v12 = sub_1C44962B8();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t v14 = v9 + v13;
  if (v9) {
    uint64_t v15 = v14;
  }
  else {
    uint64_t v15 = 0;
  }
  sub_1C3FE1EA8(v9, v15, a3, a4);
  return swift_release();
}

uint64_t sub_1C422FE10(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), void (*a4)(BOOL, unint64_t, uint64_t), void (*a5)(uint64_t), uint64_t (*a6)(void))
{
  uint64_t v23 = a6;
  uint64_t v24 = a2;
  uint64_t v25 = a5;
  uint64_t v9 = a3(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)&v20 - v11;
  unint64_t v13 = *(void *)(a1 + 16);
  uint64_t v14 = MEMORY[0x1E4FBC860];
  if (v13)
  {
    uint64_t v26 = MEMORY[0x1E4FBC860];
    uint64_t v21 = a4;
    a4(0, v13, 0);
    uint64_t v14 = v26;
    unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v15 = a1 + v22;
    uint64_t v16 = *(void *)(v10 + 72);
    while (1)
    {
      v25(v15);
      if (v6) {
        break;
      }
      uint64_t v26 = v14;
      unint64_t v18 = *(void *)(v14 + 16);
      unint64_t v17 = *(void *)(v14 + 24);
      if (v18 >= v17 >> 1)
      {
        v21(v17 > 1, v18 + 1, 1);
        uint64_t v14 = v26;
      }
      *(void *)(v14 + 16) = v18 + 1;
      sub_1C42306F4((uint64_t)v12, v14 + v22 + v18 * v16, v23);
      v15 += v16;
      if (!--v13) {
        return v14;
      }
    }
    swift_release();
  }
  return v14;
}

uint64_t sub_1C422FFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v17 = a2;
  uint64_t v5 = type metadata accessor for Proto_Set.Element(0);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x1E4FBC860];
  if (v9)
  {
    uint64_t v19 = MEMORY[0x1E4FBC860];
    sub_1C4012380(0, v9, 0);
    uint64_t v10 = v19;
    unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = a1 + v11;
    uint64_t v13 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1C422C4B4(v12, v17, &v18, (uint64_t)v8);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      uint64_t v19 = v10;
      unint64_t v15 = *(void *)(v10 + 16);
      unint64_t v14 = *(void *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C4012380(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v19;
      }
      *(void *)(v10 + 16) = v15 + 1;
      sub_1C42306F4((uint64_t)v8, v10 + v11 + v15 * v13, type metadata accessor for Proto_Set.Element);
      v12 += v13;
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1C4230158(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C42301C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0560);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v47 = (uint64_t)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v46 = (uint64_t)&v40 - v9;
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)&v40 - v10;
  uint64_t v12 = type metadata accessor for Proto_KeyPath(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (uint64_t *)((char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v14);
  uint64_t v51 = (uint64_t *)((char *)&v40 - v17);
  uint64_t v48 = type metadata accessor for Proto_Reference(0);
  MEMORY[0x1F4188790](v48);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v21 = *(void *)(a1 + 16);
  uint64_t v22 = MEMORY[0x1E4FBC860];
  if (v21)
  {
    uint64_t v52 = MEMORY[0x1E4FBC860];
    uint64_t v50 = v13;
    uint64_t v23 = v18;
    sub_1C4012470(0, v21, 0);
    unint64_t v43 = (*(unsigned __int8 *)(v23 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v44 = v11;
    uint64_t v24 = a1 + v43;
    uint64_t v25 = *(void *)(v23 + 72);
    char v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    uint64_t v41 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56);
    uint64_t v42 = v25;
    while (1)
    {
      sub_1C4230158(v24, (uint64_t)v20, type metadata accessor for Proto_Reference);
      uint64_t v26 = *(int *)(v48 + 20);
      uint64_t v27 = *(void *)&v20[v26]
          + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
      swift_beginAccess();
      sub_1C3F970C4(v27, (uint64_t)v11, &qword_1EBBC0560);
      if ((*v45)(v11, 1, v12) == 1)
      {
        *uint64_t v16 = MEMORY[0x1E4FBC860];
        v16[1] = sub_1C4496868();
        v16[2] = v28;
        sub_1C4496888();
        sub_1C3F962E0((uint64_t)v11, &qword_1EBBC0560);
      }
      else
      {
        sub_1C42306F4((uint64_t)v11, (uint64_t)v16, type metadata accessor for Proto_KeyPath);
      }
      uint64_t v22 = v49;
      sub_1C422D670(v16, v51);
      sub_1C4230A10((uint64_t)v16, type metadata accessor for Proto_KeyPath);
      if (v3) {
        break;
      }
      uint64_t v50 = 0;
      uint64_t v29 = v12;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Reference._StorageClass(0);
        swift_allocObject();
        uint64_t v30 = swift_retain();
        *(void *)&v20[v26] = sub_1C3FB0204(v30);
        swift_release();
      }
      uint64_t v31 = *(void *)&v20[v26];
      uint64_t v32 = v46;
      sub_1C42306F4((uint64_t)v51, v46, type metadata accessor for Proto_KeyPath);
      (*v41)(v32, 0, 1, v29);
      uint64_t v33 = v32;
      uint64_t v34 = v47;
      sub_1C3F961BC(v33, v47, &qword_1EBBC0560);
      uint64_t v35 = v31
          + OBJC_IVAR____TtCV9Coherence15Proto_ReferenceP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__keyPath;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v34, v35, &qword_1EBBC0560);
      swift_endAccess();
      swift_release();
      uint64_t v22 = v52;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C4012470(0, *(void *)(v22 + 16) + 1, 1);
        uint64_t v22 = v52;
      }
      unint64_t v37 = *(void *)(v22 + 16);
      unint64_t v36 = *(void *)(v22 + 24);
      uint64_t v3 = v50;
      if (v37 >= v36 >> 1)
      {
        sub_1C4012470(v36 > 1, v37 + 1, 1);
        uint64_t v22 = v52;
      }
      *(void *)(v22 + 16) = v37 + 1;
      uint64_t v38 = v42;
      sub_1C42306F4((uint64_t)v20, v22 + v43 + v37 * v42, type metadata accessor for Proto_Reference);
      v24 += v38;
      --v21;
      uint64_t v12 = v29;
      unint64_t v11 = v44;
      if (!v21) {
        return v22;
      }
    }
    sub_1C4230A10((uint64_t)v20, type metadata accessor for Proto_Reference);
    swift_release();
  }
  return v22;
}

uint64_t sub_1C42306F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C423075C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496488();
  unint64_t v8 = v7;
  sub_1C3F970C4((uint64_t)a1 + OBJC_IVAR___CRContext_encryptionDelegate, (uint64_t)v12, qword_1EBBC0C90);
  type metadata accessor for CRSQLStore();
  swift_initStackObject();
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C3FDB4C8(v6, v8, (uint64_t)v12, 1, 0, 0, (uint64_t)&unk_1F1F9A110, a3);
  if (!v3)
  {
    uint64_t v10 = result;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39C220);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1C449B490;
    sub_1C4497D28();
    swift_bridgeObjectRelease();
    sub_1C4496498();
    sub_1C42309C8(&qword_1EA39ED28, MEMORY[0x1E4F276F0]);
    sub_1C4498088();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    *(void *)(v11 + 56) = MEMORY[0x1E4FBB1A0];
    *(void *)(v11 + 32) = 0xD000000000000020;
    *(void *)(v11 + 40) = 0x80000001C44B3470;
    sub_1C44985C8();
    swift_bridgeObjectRelease();
    swift_retain();
    sub_1C3FDB0B0(0, v10, v10, a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C423095C(uint64_t result, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a2 >> 60 != 15)
  {
    sub_1C3F7E2CC(result, a2);
    sub_1C3F7E2CC(a3, a4);
    return sub_1C3F7E2CC(a6, a7);
  }
  return result;
}

uint64_t sub_1C42309C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C4230A10(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1C4230A70(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C4496678();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C4230B64(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C4496678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C4230C28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C4496678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1C4230CB8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1C4496678();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C4230D64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C4230D78);
}

uint64_t sub_1C4230D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496678();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C4230E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C4230E4C);
}

uint64_t sub_1C4230E4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C4496678();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C4230F08()
{
  uint64_t result = sub_1C4496678();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C4230FA4(void (*a1)(void *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C3F67EA0(0, v5, 0);
    uint64_t v6 = v21;
    for (uint64_t i = (uint64_t *)(a3 + 48); ; i += 3)
    {
      uint64_t v9 = *(i - 2);
      uint64_t v10 = *(i - 1);
      uint64_t v11 = *i;
      v19[0] = v9;
      v19[1] = v10;
      void v19[2] = v11;
      sub_1C3FE3ADC(v9);
      swift_bridgeObjectRetain();
      a1(v20, v19);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1C3F870F4(v9);
      swift_bridgeObjectRelease();
      uint64_t v12 = v20[0];
      uint64_t v13 = v20[1];
      uint64_t v21 = v6;
      unint64_t v15 = *(void *)(v6 + 16);
      unint64_t v14 = *(void *)(v6 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C3F67EA0(v14 > 1, v15 + 1, 1);
        uint64_t v6 = v21;
      }
      *(void *)(v6 + 16) = v15 + 1;
      uint64_t v16 = v6 + 16 * v15;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v13;
      if (!--v5) {
        return v6;
      }
    }
    sub_1C3F870F4(v9);
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1C42310F8(void (*a1)(long long *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = MEMORY[0x1E4FBC860];
  if (!v3) {
    return v4;
  }
  uint64_t v5 = a3;
  uint64_t v27 = MEMORY[0x1E4FBC860];
  sub_1C4012878(0, v3, 0);
  uint64_t v4 = v27;
  uint64_t result = sub_1C42337F8(v5);
  int64_t v7 = result;
  int v9 = v8;
  char v11 = v10 & 1;
  uint64_t v22 = v5 + 56;
  while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(v5 + 32))
  {
    if (((*(void *)(v22 + (((unint64_t)v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(v5 + 36) != v9) {
      goto LABEL_16;
    }
    uint64_t v12 = v5;
    uint64_t v13 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v7);
    uint64_t v15 = *v13;
    unint64_t v14 = v13[1];
    v25[0] = v15;
    v25[1] = v14;
    sub_1C3F7E324(v15, v14);
    a1(&v26, v25);
    if (v24)
    {
      sub_1C3F7E2CC(v15, v14);
      swift_release();
      return v4;
    }
    uint64_t v24 = 0;
    sub_1C3F7E2CC(v15, v14);
    long long v16 = v26;
    uint64_t v27 = v4;
    unint64_t v18 = *(void *)(v4 + 16);
    unint64_t v17 = *(void *)(v4 + 24);
    if (v18 >= v17 >> 1)
    {
      long long v21 = v26;
      sub_1C4012878(v17 > 1, v18 + 1, 1);
      long long v16 = v21;
      uint64_t v4 = v27;
    }
    *(void *)(v4 + 16) = v18 + 1;
    *(_OWORD *)(v4 + 16 * v18 + 32) = v16;
    uint64_t v5 = v12;
    uint64_t result = sub_1C423389C(v7, v9, v11 & 1, v12);
    int64_t v7 = result;
    int v9 = v19;
    char v11 = v20 & 1;
    if (!--v3)
    {
      sub_1C3F882B0(result, v19, v20 & 1);
      return v4;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_1C42312D4(void (*a1)(long long *__return_ptr, void *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = MEMORY[0x1E4FBC860];
  if (v5)
  {
    uint64_t v25 = MEMORY[0x1E4FBC860];
    sub_1C4012898(0, v5, 0);
    uint64_t v6 = v25;
    int v9 = (unint64_t *)(a3 + 40);
    while (1)
    {
      uint64_t v10 = *(v9 - 1);
      unint64_t v11 = *v9;
      v21[0] = v10;
      v21[1] = v11;
      sub_1C3F7E324(v10, v11);
      a1(&v22, v21);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_1C3F7E2CC(v10, v11);
      long long v12 = v22;
      long long v13 = v23;
      uint64_t v14 = v24;
      uint64_t v25 = v6;
      unint64_t v16 = *(void *)(v6 + 16);
      unint64_t v15 = *(void *)(v6 + 24);
      if (v16 >= v15 >> 1)
      {
        long long v19 = v23;
        long long v20 = v22;
        sub_1C4012898(v15 > 1, v16 + 1, 1);
        long long v13 = v19;
        long long v12 = v20;
        uint64_t v6 = v25;
      }
      v9 += 2;
      *(void *)(v6 + 16) = v16 + 1;
      uint64_t v17 = v6 + 40 * v16;
      *(_OWORD *)(v17 + 32) = v12;
      *(_OWORD *)(v17 + 48) = v13;
      *(void *)(v17 + 64) = v14;
      if (!--v5) {
        return v6;
      }
    }
    sub_1C3F7E2CC(v10, v11);
    swift_release();
  }
  return v6;
}

uint64_t sub_1C4231420(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  long long v19 = a1;
  uint64_t v20 = a2;
  uint64_t v6 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6 - 8);
  int v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x1E4FBC860];
  if (v10)
  {
    uint64_t v21 = MEMORY[0x1E4FBC860];
    sub_1C40128B8(0, v10, 0);
    uint64_t v11 = v21;
    uint64_t v12 = *(void *)(type metadata accessor for Proto4_IndexedTimestamp(0) - 8);
    uint64_t v13 = a3 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v18 = *(void *)(v12 + 72);
    while (1)
    {
      v19(v13);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v21 = v11;
      unint64_t v15 = *(void *)(v11 + 16);
      unint64_t v14 = *(void *)(v11 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_1C40128B8(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v21;
      }
      *(void *)(v11 + 16) = v15 + 1;
      sub_1C4233AA8((uint64_t)v9, v11+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v15, type metadata accessor for Proto_Timestamp);
      v13 += v18;
      if (!--v10) {
        return v11;
      }
    }
    swift_release();
  }
  return v11;
}

uint64_t sub_1C423161C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v5 = sub_1C3F74514(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = &v5[3 * a1];
    long long v9 = *((_OWORD *)v7 + 2);
    uint64_t v8 = v7 + 4;
    uint64_t v10 = v8[2];
    unint64_t v11 = v6 - 1;
    *(_OWORD *)a2 = v9;
    *(void *)(a2 + 16) = v10;
    uint64_t v12 = v6 - 1 - a1;
    if (v12 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v8, v8 + 3, 24 * v12);
      void v5[2] = v11;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1C4497FE8();
  __break(1u);
  return result;
}

void sub_1C423170C(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v72 = v1 + 4;
  while (1)
  {
    while (1)
    {
      int64_t v7 = v2[6];
      unint64_t v8 = v2[7];
      uint64_t v9 = v2[3];
      uint64_t v10 = v2[4];
      if ((~v9 & 0xF000000000000007) == 0) {
        goto LABEL_8;
      }
      if (v8)
      {
        uint64_t v38 = (v8 - 1) & v8;
        unint64_t v39 = __clz(__rbit64(v8)) | (v7 << 6);
        goto LABEL_40;
      }
      int64_t v24 = v7 + 1;
      if (__OFADD__(v7, 1)) {
        goto LABEL_68;
      }
      int64_t v25 = (unint64_t)(v2[5] + 64) >> 6;
      int64_t v26 = v2[6];
      if (v24 >= v25) {
        goto LABEL_33;
      }
      unint64_t v27 = *(void *)(v10 + 8 * v24);
      if (v27) {
        break;
      }
      int64_t v26 = v7 + 1;
      if (v7 + 2 >= v25) {
        goto LABEL_33;
      }
      unint64_t v27 = *(void *)(v10 + 8 * (v7 + 2));
      if (v27)
      {
        int64_t v24 = v7 + 2;
        break;
      }
      int64_t v26 = v7 + 2;
      if (v7 + 3 >= v25) {
        goto LABEL_33;
      }
      unint64_t v27 = *(void *)(v10 + 8 * (v7 + 3));
      if (v27)
      {
        int64_t v24 = v7 + 3;
        break;
      }
      int64_t v24 = v7 + 4;
      int64_t v26 = v7 + 3;
      if (v7 + 4 < v25)
      {
        unint64_t v27 = *(void *)(v10 + 8 * v24);
        if (!v27)
        {
          int64_t v26 = v25 - 1;
          int64_t v28 = v7 + 5;
          while (v25 != v28)
          {
            unint64_t v27 = *(void *)(v10 + 8 * v28++);
            if (v27)
            {
              int64_t v24 = v28 - 1;
              goto LABEL_51;
            }
          }
          goto LABEL_33;
        }
        break;
      }
LABEL_33:
      v2[6] = v26;
      v2[7] = 0;
LABEL_8:
      sub_1C407D5A0(v9);
      v2[3] = 0xF000000000000007;
      *uint64_t v72 = 0u;
      v72[1] = 0u;
      uint64_t v12 = v2[1];
      unint64_t v11 = v2[2];
      unint64_t v13 = *(void *)(v12 + 16);
      if (v11 == v13) {
        goto LABEL_59;
      }
      if (v11 >= v13)
      {
        __break(1u);
LABEL_66:
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
        goto LABEL_69;
      }
      unint64_t v14 = (void *)(v12 + 24 * v11);
      uint64_t v16 = v14[4];
      uint64_t v15 = v14[5];
      uint64_t v17 = v14[6];
      v2[2] = v11 + 1;
      if (v16)
      {
        uint64_t v18 = v2[11];
        BOOL v19 = __OFADD__(v18, 1);
        uint64_t v20 = v18 + 1;
        if (v19) {
          goto LABEL_67;
        }
        v2[11] = v20;
        int v21 = *((unsigned __int8 *)v2 + 80);
        uint64_t v22 = v2[8];
        uint64_t v23 = v2[9];
        sub_1C3FE3ADC(v16);
        swift_bridgeObjectRetain();
        sub_1C3FE3ADC(v16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v21 == 1)
        {
          if (sub_1C4112134(v15, v23))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C3F870F4(v16);
          }
          else
          {
            char v34 = sub_1C4112134(v16, v22);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C3F870F4(v16);
            if ((v34 & 1) == 0) {
              goto LABEL_58;
            }
          }
          uint64_t v35 = -1 << *(unsigned char *)(v17 + 32);
          uint64_t v36 = *(void *)(v17 + 56);
          swift_bridgeObjectRetain();
          sub_1C3F870F4(v16);
          swift_bridgeObjectRelease();
          if (-v35 < 64) {
            uint64_t v37 = ~(-1 << -(char)v35);
          }
          else {
            uint64_t v37 = -1;
          }
          v2[3] = v17;
          v2[4] = v17 + 56;
          v2[5] = ~v35;
          v2[6] = 0;
          v2[7] = v37 & v36;
        }
        else
        {
          int v55 = sub_1C4112ECC(v15, v23);
          if ((~v55 & 0x101) == 0)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_1C3F870F4(v16);
            LOBYTE(v3) = 1;
            goto LABEL_3;
          }
          unsigned int v56 = v55 | sub_1C4112ECC(v16, v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1C3F870F4(v16);
          if ((v56 & 1) == 0)
          {
LABEL_58:
            sub_1C3F870F4(v16);
            swift_bridgeObjectRelease();
LABEL_59:
            if (v2[11] >= 101)
            {
              if (qword_1EA39B490 == -1) {
                goto LABEL_61;
              }
              goto LABEL_70;
            }
            goto LABEL_64;
          }
          int v3 = (v56 >> 8) & 1;
LABEL_3:
          uint64_t v4 = -1 << *(unsigned char *)(v17 + 32);
          uint64_t v5 = *(void *)(v17 + 56);
          swift_bridgeObjectRetain();
          sub_1C3F870F4(v16);
          swift_bridgeObjectRelease();
          v2[3] = v17;
          v2[4] = v17 + 56;
          if (-v4 < 64) {
            uint64_t v6 = ~(-1 << -(char)v4);
          }
          else {
            uint64_t v6 = -1;
          }
          v2[5] = ~v4;
          v2[6] = 0;
          v2[7] = v6 & v5;
          *((unsigned char *)v2 + 80) = v3 ^ 1;
        }
      }
      else
      {
        uint64_t v29 = -1 << *(unsigned char *)(v17 + 32);
        uint64_t v30 = ~v29;
        uint64_t v31 = *(void *)(v17 + 56);
        uint64_t v32 = -v29;
        if (v32 < 64) {
          uint64_t v33 = ~(-1 << v32);
        }
        else {
          uint64_t v33 = -1;
        }
        v2[3] = v17;
        v2[4] = v17 + 56;
        v2[5] = v30;
        v2[6] = 0;
        v2[7] = v33 & v31;
        swift_bridgeObjectRetain();
      }
    }
LABEL_51:
    uint64_t v38 = (v27 - 1) & v27;
    unint64_t v39 = __clz(__rbit64(v27)) + (v24 << 6);
    int64_t v7 = v24;
LABEL_40:
    uint64_t v40 = (uint64_t *)(*(void *)(v9 + 48) + 16 * v39);
    uint64_t v42 = *v40;
    unint64_t v41 = v40[1];
    v2[6] = v7;
    v2[7] = v38;
    if (v2[10])
    {
      sub_1C3F7E324(v42, v41);
      goto LABEL_55;
    }
    uint64_t v43 = v2[11];
    BOOL v19 = __OFADD__(v43, 1);
    uint64_t v44 = v43 + 1;
    if (v19) {
      goto LABEL_66;
    }
    v2[11] = v44;
    uint64_t v45 = v2[8];
    uint64_t v46 = v2[9];
    uint64_t v47 = *v2;
    uint64_t v48 = *(void *)(*v2 + 16);
    sub_1C3F7E324(v42, v41);
    if (!v48) {
      break;
    }
    sub_1C3F7E324(v42, v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_1C3F850CC(v42, v41);
    if ((v50 & 1) == 0) {
      goto LABEL_72;
    }
    uint64_t v51 = *(void *)(v47 + 56) + 48 * v49;
    uint64_t v52 = *(void *)(v51 + 16);
    uint64_t v53 = *(void *)(v51 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C3F7E2CC(v42, v41);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (sub_1C4112134(v53, v46))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_55:
      uint64_t v57 = *v2;
      if (*(void *)(*v2 + 16))
      {
        sub_1C3F7E324(v42, v41);
        uint64_t v58 = sub_1C3F850CC(v42, v41);
        if (v59)
        {
          uint64_t v60 = (uint64_t *)(*(void *)(v57 + 56) + 48 * v58);
          uint64_t v61 = *v60;
          uint64_t v62 = v60[1];
          uint64_t v63 = v60[2];
          uint64_t v64 = v60[3];
          uint64_t v65 = v60[4];
          uint64_t v66 = v60[5];
          swift_retain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_1C3F7E2CC(v42, v41);
          *a1 = v42;
          a1[1] = v41;
          a1[2] = v61;
          a1[3] = v62;
          a1[4] = v63;
          a1[5] = v64;
          a1[6] = v65;
          a1[7] = v66;
          return;
        }
        goto LABEL_73;
      }
LABEL_69:
      __break(1u);
LABEL_70:
      swift_once();
LABEL_61:
      uint64_t v67 = sub_1C4496C58();
      __swift_project_value_buffer(v67, (uint64_t)qword_1EA3B89F8);
      unint64_t v68 = sub_1C4496C38();
      os_log_type_t v69 = sub_1C44979C8();
      if (os_log_type_enabled(v68, v69))
      {
        uint64_t v70 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v70 = 134217984;
        sub_1C4497B68();
        _os_log_impl(&dword_1C3F4F000, v68, v69, "Excessive since comparisons: %ld", v70, 0xCu);
        MEMORY[0x1C8782060](v70, -1, -1);
      }

LABEL_64:
      *((_OWORD *)a1 + 2) = 0u;
      *((_OWORD *)a1 + 3) = 0u;
      *(_OWORD *)a1 = 0u;
      *((_OWORD *)a1 + 1) = 0u;
      return;
    }
    char v54 = sub_1C4112134(v52, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v54) {
      goto LABEL_55;
    }
    sub_1C3F7E2CC(v42, v41);
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __break(1u);
LABEL_72:
  sub_1C3F7E2CC(v42, v41);
  __break(1u);
LABEL_73:
  sub_1C3F7E2CC(v42, v41);
  __break(1u);
}

uint64_t sub_1C4231E00(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t result = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v6 = *(int *)(result + 24);
  int64_t v7 = *(void **)(v1 + v6);
  unint64_t v8 = v7[2];
  if (!v8)
  {
    __break(1u);
LABEL_9:
    uint64_t result = (uint64_t)sub_1C3F74514(v7);
    int64_t v7 = (void *)result;
LABEL_5:
    if (v8 > v7[2])
    {
      __break(1u);
    }
    else
    {
      uint64_t v9 = &v7[3 * v2];
      uint64_t v10 = v9[4];
      uint64_t v9[4] = v3;
      v9[5] = v4;
      uint64_t result = sub_1C3F870F4(v10);
      *(void *)(v1 + v6) = v7;
    }
    return result;
  }
  unint64_t v2 = v8 - 1;
  if (!v7[3 * v8 + 1] && *(void *)(v7[3 * v2 + 6] + 16) >= 0x15uLL)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result) {
      goto LABEL_5;
    }
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_1C4231ED8()
{
  uint64_t v0 = sub_1C4496C58();
  __swift_allocate_value_buffer(v0, qword_1EA3B89F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EA3B89F8);
  return sub_1C4496C48();
}

uint64_t sub_1C4231F58()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PartiallyOrderedReferenceMap() + 24));
  uint64_t v12 = v0;
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C4230FA4((void (*)(void *__return_ptr, void *))sub_1C4233A18, (uint64_t)&v11, v1);
  swift_bridgeObjectRelease();
  uint64_t v13 = 2117456;
  unint64_t v14 = 0xE300000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC07E0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C449B4A0;
  char v4 = sub_1C4496658();
  uint64_t v5 = MEMORY[0x1E4FBC358];
  uint64_t v6 = MEMORY[0x1E4FBC3B0];
  *(void *)(v3 + 56) = MEMORY[0x1E4FBC358];
  *(void *)(v3 + 64) = v6;
  *(unsigned char *)(v3 + 32) = v4;
  uint64_t v7 = sub_1C4496658();
  *(void *)(v3 + 96) = v5;
  *(void *)(v3 + 104) = v6;
  *(unsigned char *)(v3 + 72) = BYTE1(v7);
  sub_1C44971E8();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  uint64_t v9 = v13;
  unint64_t v8 = v14;
  uint64_t v13 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39AD70);
  sub_1C4233A58((unint64_t *)&qword_1EA39AD78, &qword_1EA39AD70);
  sub_1C44970B8();
  swift_bridgeObjectRelease();
  uint64_t v13 = v9;
  unint64_t v14 = v8;
  swift_bridgeObjectRetain();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_1C4232130@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = a1[2];
  uint64_t v27 = *a1;
  uint64_t v33 = a2;
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C42310F8((void (*)(long long *__return_ptr, void *))sub_1C4233A38, (uint64_t)v32, v4);
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_1C411F608(v5);
  swift_bridgeObjectRelease();
  int64_t v7 = *(void *)(v6 + 16);
  unint64_t v8 = &unk_1C449B000;
  if (v7)
  {
    int64_t v26 = a3;
    uint64_t v36 = MEMORY[0x1E4FBC860];
    sub_1C3F67EA0(0, v7, 0);
    uint64_t v9 = v36;
    uint64_t result = sub_1C42337F8(v6);
    int64_t v12 = result;
    uint64_t v29 = v6 + 56;
    char v14 = v13 & 1;
    uint64_t v28 = v6;
    while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(unsigned char *)(v6 + 32))
    {
      if (((*(void *)(v29 + (((unint64_t)v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_17;
      }
      if (*(_DWORD *)(v6 + 36) != v11) {
        goto LABEL_18;
      }
      char v30 = v14;
      int v31 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39AD68);
      uint64_t v15 = swift_allocObject();
      *(_OWORD *)(v15 + 16) = xmmword_1C449B4A0;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      *(void *)(v15 + 32) = sub_1C3F674E0();
      *(void *)(v15 + 40) = sub_1C3F674E0();
      uint64_t v34 = v15;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EA39AD98);
      sub_1C3F69264();
      sub_1C44970B8();
      swift_bridgeObjectRelease();
      uint64_t v34 = 91;
      unint64_t v35 = 0xE100000000000000;
      sub_1C4497268();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C4497268();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v16 = v34;
      unint64_t v17 = v35;
      uint64_t v36 = v9;
      unint64_t v19 = *(void *)(v9 + 16);
      unint64_t v18 = *(void *)(v9 + 24);
      if (v19 >= v18 >> 1)
      {
        sub_1C3F67EA0(v18 > 1, v19 + 1, 1);
        uint64_t v9 = v36;
      }
      *(void *)(v9 + 16) = v19 + 1;
      unint64_t v20 = v9 + 16 * v19;
      *(void *)(v20 + 32) = v16;
      *(void *)(v20 + 40) = v17;
      uint64_t v6 = v28;
      uint64_t result = sub_1C423389C(v12, v31, v30 & 1, v28);
      int64_t v12 = result;
      char v14 = v21 & 1;
      --v7;
      unint64_t v8 = (_OWORD *)&unk_1C449B000;
      if (!v7)
      {
        sub_1C3F882B0(result, v11, v14);
        swift_bridgeObjectRelease();
        a3 = v26;
        goto LABEL_12;
      }
    }
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x1E4FBC860];
LABEL_12:
    uint64_t v34 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39AD70);
    sub_1C4233A58((unint64_t *)&qword_1EA39AD78, &qword_1EA39AD70);
    unint64_t v22 = 0xE200000000000000;
    sub_1C44970B8();
    swift_bridgeObjectRelease();
    if (v27)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39AD68);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = v8[74];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      *(void *)(v23 + 32) = sub_1C3F674E0();
      *(void *)(v23 + 40) = sub_1C3F674E0();
      uint64_t v34 = v23;
      __swift_instantiateConcreteTypeFromMangledName(qword_1EA39AD98);
      sub_1C3F69264();
      sub_1C44970B8();
      swift_bridgeObjectRelease();
      uint64_t v34 = 91;
      unint64_t v35 = 0xE100000000000000;
      sub_1C4497268();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      sub_1C4497268();
      swift_bridgeObjectRelease();
      sub_1C3F870F4(v27);
      uint64_t v24 = v34;
      unint64_t v22 = v35;
    }
    else
    {
      uint64_t v24 = 23899;
    }
    uint64_t v34 = 8069178;
    unint64_t v35 = 0xE300000000000000;
    sub_1C4497268();
    swift_bridgeObjectRelease();
    sub_1C4497268();
    uint64_t v34 = v24;
    unint64_t v35 = v22;
    swift_bridgeObjectRetain();
    sub_1C4497268();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v25 = v35;
    *a3 = v34;
    a3[1] = v25;
  }
  return result;
}

uint64_t sub_1C42325E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v6 = *(void *)(a2 + *(int *)(type metadata accessor for PartiallyOrderedReferenceMap() + 20));
  if (*(void *)(v6 + 16))
  {
    sub_1C3F7E324(v5, v4);
    uint64_t v7 = sub_1C3F850CC(v5, v4);
    if (v8)
    {
      uint64_t v9 = *(void *)(v6 + 56) + 48 * v7;
      uint64_t v10 = *(void *)(v9 + 16);
      uint64_t v11 = *(void *)(v9 + 24);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1C3F7E2CC(v5, v4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t result = swift_release();
      *a3 = v10;
      a3[1] = v11;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = sub_1C3F7E2CC(v5, v4);
  __break(1u);
  return result;
}

unint64_t sub_1C42326F8()
{
  unint64_t result = qword_1EA39ED40;
  if (!qword_1EA39ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39ED40);
  }
  return result;
}

double sub_1C4232750@<D0>(uint64_t a1@<X8>)
{
  sub_1C4233980(&v5);
  v8[0] = v5;
  v8[1] = v6;
  uint64_t v9 = v7;
  sub_1C3F961BC((uint64_t)v8, (uint64_t)v10, &qword_1EA39ED50);
  sub_1C42339E4((uint64_t)v10);
  sub_1C41402F0(v1);
  double result = *(double *)&v5;
  long long v4 = v6;
  *(_OWORD *)a1 = v5;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v7;
  return result;
}

uint64_t sub_1C42327CC()
{
  uint64_t v1 = sub_1C423341C(v0);
  sub_1C41402F0(v0);
  return v1;
}

uint64_t sub_1C4232804(unint64_t a1)
{
  return sub_1C3FB46B8(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1C4232818(unint64_t a1)
{
  return sub_1C3FF1600(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_1C423282C(void *a1)
{
  return sub_1C3FF1BF8(0, a1[2], 0, a1);
}

void *sub_1C4232840(void *a1)
{
  return sub_1C3FF12A8(0, a1[2], 0, a1);
}

void *sub_1C4232854(void *a1)
{
  return sub_1C3FF1E80(0, a1[2], 0, a1);
}

uint64_t sub_1C4232868(unint64_t a1)
{
  return sub_1C3FB4F20(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_1C423287C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(v3 + *(int *)(type metadata accessor for PartiallyOrderedReferenceMap() + 20));
  uint64_t v9 = v8 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  uint64_t v11 = ~v10;
  uint64_t v12 = -v10;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  else {
    uint64_t v13 = -1;
  }
  uint64_t v14 = v13 & *(void *)(v8 + 64);
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C41402F0(v4);
  uint64_t v26 = v8;
  uint64_t v27 = v8 + 64;
  long long v28 = (unint64_t)v11;
  uint64_t v29 = v14;
  long long v16 = (unint64_t)v11;
  if (!a2)
  {
    a3 = 0;
    goto LABEL_17;
  }
  if (!a3)
  {
LABEL_17:
    *(void *)a1 = v8;
    *(void *)(a1 + 8) = v9;
    *(_OWORD *)(a1 + 16) = v16;
    *(void *)(a1 + 32) = v14;
    return a3;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    sub_1C3FB0038((uint64_t)v22);
    uint64_t v17 = v23;
    if (v23)
    {
      uint64_t v18 = 0;
      while (1)
      {
        uint64_t v19 = v25;
        long long v20 = v22[1];
        long long v21 = v24;
        *(_OWORD *)a2 = v22[0];
        *(_OWORD *)(a2 + 16) = v20;
        *(void *)(a2 + 32) = v17;
        *(_OWORD *)(a2 + 40) = v21;
        *(void *)(a2 + 56) = v19;
        if (a3 - 1 == v18) {
          break;
        }
        sub_1C3FB0038((uint64_t)v22);
        uint64_t v17 = v23;
        a2 += 64;
        ++v18;
        if (!v23) {
          goto LABEL_14;
        }
      }
      uint64_t v8 = v26;
      uint64_t v9 = v27;
      long long v16 = v28;
    }
    else
    {
      uint64_t v18 = 0;
LABEL_14:
      uint64_t v8 = v26;
      uint64_t v9 = v27;
      long long v16 = v28;
      a3 = v18;
    }
    uint64_t v14 = v29;
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C42329D0(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  long long v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *long long v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    long long v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v22;
    if (v13 == v10)
    {
      sub_1C3F7E324(v21, v22);
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = sub_1C3F7E324(v21, v22);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1C4232BD0(void *result, _WORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(_WORD *)(*(void *)(a4 + 48) + 2 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_1C4232D64(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1C4232EF8(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    void v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    long long v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    *unint64_t v11 = *v20;
    v11[1] = v22;
    if (v13 == v10)
    {
      sub_1C3F7E324(v21, v22);
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = sub_1C3F7E324(v21, v22);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C42330F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for Replica();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8 - 8);
  int64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x1F4188790](v10);
  unint64_t v15 = (char *)&v29 - v14;
  uint64_t v34 = a4;
  uint64_t v17 = a4 + 64;
  uint64_t v16 = *(void *)(a4 + 64);
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  if (-v31 < 64) {
    uint64_t v18 = ~(-1 << -(char)v31);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v28 = ~v31;
    *a1 = v34;
    a1[1] = v17;
    a1[2] = v28;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  char v30 = a1;
  int64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v32 = v17;
  int64_t v33 = (unint64_t)(63 - v31) >> 6;
  int64_t v29 = v33 - 1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    ++v21;
    uint64_t v27 = *(void *)(v9 + 72);
    sub_1C3F8F4B8(*(void *)(v34 + 48) + v27 * v23, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for Replica);
    sub_1C4233AA8((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for Replica);
    uint64_t result = sub_1C4233AA8((uint64_t)v15, a2, (uint64_t (*)(void))type metadata accessor for Replica);
    if (v21 == a3) {
      goto LABEL_33;
    }
    a2 += v27;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      a3 = v21;
LABEL_33:
      a1 = v30;
      uint64_t v17 = v32;
      goto LABEL_34;
    }
    uint64_t v17 = v32;
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    if (!v25) {
      break;
    }
LABEL_18:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  v20 += 2;
  if (v24 + 1 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24;
LABEL_39:
    a3 = v21;
    a1 = v30;
    goto LABEL_34;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25) {
    goto LABEL_14;
  }
  int64_t v26 = v24 + 2;
  if (v24 + 2 >= v33) {
    goto LABEL_36;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25) {
    goto LABEL_17;
  }
  int64_t v20 = v24 + 3;
  if (v24 + 3 >= v33)
  {
    unint64_t v19 = 0;
    int64_t v20 = v24 + 2;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v20);
  if (v25)
  {
LABEL_14:
    int64_t v24 = v20;
    goto LABEL_18;
  }
  int64_t v26 = v24 + 4;
  if (v24 + 4 >= v33)
  {
LABEL_36:
    unint64_t v19 = 0;
    goto LABEL_39;
  }
  unint64_t v25 = *(void *)(v32 + 8 * v26);
  if (v25)
  {
LABEL_17:
    int64_t v24 = v26;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v24 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v24 >= v33)
    {
      unint64_t v19 = 0;
      int64_t v20 = v29;
      goto LABEL_39;
    }
    unint64_t v25 = *(void *)(v32 + 8 * v24);
    ++v26;
    if (v25) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1C423341C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v3 = v2 - 8;
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C3F8F4B8(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for PartiallyOrderedReferenceMap);
  uint64_t v6 = *(void *)&v5[*(int *)(v3 + 28)];
  uint64_t v7 = -1 << *(unsigned char *)(v6 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = -v7;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  uint64_t v11 = v10 & *(void *)(v6 + 64);
  swift_bridgeObjectRetain();
  sub_1C41402F0((uint64_t)v5);
  uint64_t v44 = v6;
  uint64_t v45 = v6 + 64;
  uint64_t v46 = v8;
  uint64_t v47 = 0;
  uint64_t v48 = v11;
  uint64_t result = sub_1C3FB0038((uint64_t)&v38);
  uint64_t v13 = v41;
  uint64_t v14 = (void *)MEMORY[0x1E4FBC860];
  uint64_t v15 = 0;
  if (v41)
  {
    uint64_t v16 = v43;
    long long v17 = v42;
    uint64_t v18 = MEMORY[0x1E4FBC860] + 32;
    uint64_t v19 = v40;
    long long v20 = v39;
    while (1)
    {
      uint64_t v21 = v38;
      if (!v15)
      {
        unint64_t v22 = v14[3];
        if ((uint64_t)((v22 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_29;
        }
        long long v36 = v20;
        long long v37 = v17;
        int64_t v23 = v22 & 0xFFFFFFFFFFFFFFFELL;
        if (v23 <= 1) {
          uint64_t v24 = 1;
        }
        else {
          uint64_t v24 = v23;
        }
        __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39ED48);
        unint64_t v25 = (void *)swift_allocObject();
        int64_t v26 = _swift_stdlib_malloc_size(v25);
        uint64_t v27 = v26 - 32;
        if (v26 < 32) {
          uint64_t v27 = v26 + 31;
        }
        uint64_t v28 = v27 >> 6;
        void v25[2] = v24;
        v25[3] = 2 * (v27 >> 6);
        unint64_t v29 = (unint64_t)(v25 + 4);
        uint64_t v30 = v14[3] >> 1;
        if (v14[2])
        {
          if (v25 != v14 || v29 >= (unint64_t)&v14[8 * v30 + 4]) {
            memmove(v25 + 4, v14 + 4, v30 << 6);
          }
          void v14[2] = 0;
        }
        uint64_t v18 = v29 + (v30 << 6);
        uint64_t v15 = (v28 & 0x7FFFFFFFFFFFFFFFLL) - v30;
        uint64_t result = swift_release();
        uint64_t v14 = v25;
        long long v20 = v36;
        long long v17 = v37;
      }
      BOOL v32 = __OFSUB__(v15--, 1);
      if (v32) {
        break;
      }
      *(void *)uint64_t v18 = v21;
      *(void *)(v18 + 24) = v19;
      *(void *)(v18 + 32) = v13;
      *(void *)(v18 + 56) = v16;
      *(_OWORD *)(v18 + 8) = v20;
      *(_OWORD *)(v18 + 40) = v17;
      uint64_t result = sub_1C3FB0038((uint64_t)&v38);
      long long v20 = v39;
      uint64_t v19 = v40;
      uint64_t v13 = v41;
      long long v17 = v42;
      v18 += 64;
      uint64_t v16 = v43;
      if (!v41) {
        goto LABEL_24;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
LABEL_24:
  uint64_t result = sub_1C3F7FCE8();
  unint64_t v33 = v14[3];
  if (v33 < 2) {
    return (uint64_t)v14;
  }
  unint64_t v34 = v33 >> 1;
  BOOL v32 = __OFSUB__(v34, v15);
  uint64_t v35 = v34 - v15;
  if (!v32)
  {
    void v14[2] = v35;
    return (uint64_t)v14;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C4233684(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  if (v2 != a2)
  {
    if (v2 > a2)
    {
      uint64_t v5 = a2;
      if (a2 < 0)
      {
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (!v2)
      {
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v6 = result;
      uint64_t result = swift_bridgeObjectRetain();
      size_t v4 = 0;
      uint64_t v7 = v3 + 4;
      while (1)
      {
        char v8 = *(unsigned char *)(v6 + v5 + 32);
        if (!v4)
        {
          unint64_t v9 = v3[3];
          if ((uint64_t)((v9 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_29;
          }
          int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
          if (v10 <= 1) {
            uint64_t v11 = 1;
          }
          else {
            uint64_t v11 = v10;
          }
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0818);
          int64_t v12 = (void *)swift_allocObject();
          size_t v13 = 2 * _swift_stdlib_malloc_size(v12) - 64;
          id v12[2] = v11;
          v12[3] = v13;
          unint64_t v14 = (unint64_t)(v12 + 4);
          size_t v15 = v3[3] >> 1;
          if (v3[2])
          {
            if (v12 != v3 || v14 >= (unint64_t)v3 + v15 + 32) {
              memmove(v12 + 4, v3 + 4, v15);
            }
            v3[2] = 0;
          }
          uint64_t v7 = (unsigned char *)(v14 + v15);
          size_t v4 = (v13 >> 1) - v15;
          uint64_t result = swift_release();
          uint64_t v3 = v12;
        }
        BOOL v17 = __OFSUB__(v4--, 1);
        if (v17) {
          break;
        }
        ++v5;
        *v7++ = v8;
        if (v2 == v5)
        {
          uint64_t result = swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
      __break(1u);
LABEL_29:
      __break(1u);
    }
    __break(1u);
    goto LABEL_31;
  }
  size_t v4 = 0;
LABEL_24:
  unint64_t v18 = v3[3];
  if (v18 < 2) {
    return (uint64_t)v3;
  }
  unint64_t v19 = v18 >> 1;
  BOOL v17 = __OFSUB__(v19, v4);
  unint64_t v20 = v19 - v4;
  if (!v17)
  {
    v3[2] = v20;
    return (uint64_t)v3;
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1C42337F8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1C423389C(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C4233980@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for PartiallyOrderedReferenceMap();
  uint64_t v4 = *(void *)(v1 + *(int *)(result + 20));
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  *a1 = v4;
  uint64_t v9 = *(void *)(v4 + 64);
  uint64_t v7 = v4 + 64;
  uint64_t v8 = v9;
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  a1[1] = v7;
  a1[2] = ~v6;
  a1[3] = 0;
  a1[4] = v5 & v8;
  return result;
}

uint64_t sub_1C42339E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C4233A18@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C4232130(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C4233A38@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C42325E0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C4233A58(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C4233AA8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

ValueMetadata *type metadata accessor for PartiallyOrderedReferenceMap.Iterator()
{
  return &type metadata for PartiallyOrderedReferenceMap.Iterator;
}

uint64_t *assignWithCopy for PartiallyOrderedReferenceMap.Before(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *a2;
  if (!v4)
  {
    if (v5)
    {
      *a1 = v5;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v5)
  {
    sub_1C4162AF0((uint64_t)a1);
    goto LABEL_7;
  }
  *a1 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for PartiallyOrderedReferenceMap.Before(void *a1, uint64_t a2)
{
  if (!*a1) {
    goto LABEL_5;
  }
  if (!*(void *)a2)
  {
    sub_1C4162AF0((uint64_t)a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  a1[1] = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
LABEL_6:
  a1[2] = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for PartiallyOrderedReferenceMap.Before()
{
  return &type metadata for PartiallyOrderedReferenceMap.Before;
}

uint64_t CRVoid.Partial.merge(delta:)()
{
  return 1;
}

uint64_t CRVoid.Partial.canMerge(delta:)()
{
  return 1;
}

uint64_t sub_1C4233C70()
{
  return swift_release();
}

uint64_t CRVoid.isDefaultState.getter()
{
  return 1;
}

uint64_t CRVoid.hasEncodedData.getter()
{
  return 0;
}

void CRVoid.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t CRVoid.init(from:)()
{
  return swift_release();
}

Swift::Bool __swiftcall CRVoid.needToFinalizeTimestamps()()
{
  return 0;
}

uint64_t CRVoid.observableDifference(from:with:)()
{
  return 1;
}

uint64_t CRVoid.actionUndoingDifference(from:)()
{
  return 1;
}

uint64_t CRVoid.hasDelta(from:)()
{
  return 0;
}

void CRVoid.delta(_:from:)(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t CRVoid.canMerge(delta:)()
{
  return 1;
}

uint64_t CRVoid.merge(delta:)()
{
  return 1;
}

uint64_t static CRVoid.== infix(_:_:)()
{
  return 1;
}

uint64_t CRVoid.serializedData(_:version:)()
{
  return 0;
}

uint64_t CRVoid.init(_:serializedData:)(void *a1, uint64_t a2, unint64_t a3)
{
  return sub_1C3F7E2CC(a2, a3);
}

uint64_t CRVoid.init(serializedData:)(uint64_t a1, unint64_t a2)
{
  return sub_1C3F7E2CC(a1, a2);
}

uint64_t CRVoid.hashValue.getter()
{
  return sub_1C4498628();
}

uint64_t sub_1C4233DF8()
{
  return sub_1C4498628();
}

uint64_t sub_1C4233E30()
{
  return sub_1C4498628();
}

char **sub_1C4233E64()
{
  return &protocol witness table for CRVoid.Partial;
}

unint64_t sub_1C4233E74()
{
  unint64_t result = qword_1EA39ED58[0];
  if (!qword_1EA39ED58[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA39ED58);
  }
  return result;
}

uint64_t sub_1C4233EC8()
{
  return 0;
}

uint64_t sub_1C4233ED4(uint64_t a1, unint64_t a2)
{
  return sub_1C3F7E2CC(a1, a2);
}

ValueMetadata *type metadata accessor for CRVoid()
{
  return &type metadata for CRVoid;
}

ValueMetadata *type metadata accessor for CRVoid.Partial()
{
  return &type metadata for CRVoid.Partial;
}

uint64_t CRVoid.Partial.init(from:)()
{
  return CRVoid.init(from:)();
}

uint64_t dispatch thunk of ReferenceDifferencer.observableDifference<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ReferenceVisitor.visit<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

{
  return (*(uint64_t (**)(void))(a5 + 16))();
}

uint64_t dispatch thunk of ReferenceVisitor.visit(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1C4233F98(uint64_t a1)
{
  uint64_t v3 = (void **)v1;
  uint64_t v5 = *(void *)(a1 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  sub_1C3F7E324(v5, v6);
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = (void *)*v1;
  unint64_t v22 = v8;
  *uint64_t v3 = (void *)0x8000000000000000;
  unint64_t v10 = sub_1C4061A50(v5, v6);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_13;
  }
  char v2 = v9;
  if (v8[3] >= v13)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_14;
    }
  }
  else
  {
    sub_1C40654D4(v13, isUniquelyReferenced_nonNull_native);
    uint64_t v14 = sub_1C4061A50(v5, v6);
    if ((v2 & 1) != (v15 & 1))
    {
      swift_release();
      uint64_t result = sub_1C4498558();
      __break(1u);
      return result;
    }
    unint64_t v10 = v14;
  }
  while (1)
  {
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    uint64_t v16 = (uint64_t)*v3;
    if ((v2 & 1) == 0)
    {
      sub_1C4421E14(v10, v5, v6, a1, 0, *v3);
      sub_1C3F7E324(v5, v6);
      swift_retain();
    }
    uint64_t v17 = *(void *)(v16 + 56) + 16 * v10;
    uint64_t v19 = *(void *)(v17 + 8);
    unint64_t v18 = (void *)(v17 + 8);
    uint64_t v20 = v19 + 1;
    if (!__OFADD__(v19, 1)) {
      break;
    }
LABEL_13:
    __break(1u);
LABEL_14:
    sub_1C4069B28();
    uint64_t v8 = v22;
  }
  *unint64_t v18 = v20;
  sub_1C3F7E2CC(v5, v6);
  return swift_release();
}

uint64_t sub_1C4234128(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = MEMORY[0x1E4FBC870];
  *(void *)(result + 24) = a1;
  return result;
}

uint64_t sub_1C4234164()
{
  type metadata accessor for TypedReference();
  uint64_t v0 = type metadata accessor for Ref();
  uint64_t WitnessTable = swift_getWitnessTable();
  Reference.identity.getter(v0, WitnessTable);
  __n128 v6 = v5;
  sub_1C4139FD0(&v6);
  uint64_t v3 = v2;
  swift_beginAccess();
  sub_1C406CA38((uint64_t *)&v6, v3);
  swift_endAccess();
  return swift_release();
}

uint64_t type metadata accessor for TypedRefVisitor()
{
  return self;
}

uint64_t sub_1C4234270()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1C42342C0()
{
  return sub_1C4234164();
}

uint64_t sub_1C42342E4(uint64_t *a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  uint64_t v9 = v1[3];
  v8.n128_u64[0] = v3;
  v8.n128_u64[1] = v4;
  uint64_t result = (*(uint64_t (**)(__n128 *, void))(*(void *)(*(void *)(v2 + 88) + 16) + 64))(&v8, *(void *)(v2 + 80));
  if ((result & 1) == 0)
  {
    type metadata accessor for TypedReference();
    v8.n128_u64[0] = v3;
    v8.n128_u64[1] = v4;
    sub_1C4139FD0(&v8);
    uint64_t v7 = v6;
    swift_beginAccess();
    sub_1C3F7E324(v3, v4);
    sub_1C406CA38(&v9, v7);
    swift_endAccess();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C42343EC()
{
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MissingTypedRefVisitor()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C4234444(uint64_t *a1)
{
  return sub_1C42342E4(a1);
}

uint64_t sub_1C4234468()
{
  uint64_t v0 = type metadata accessor for Ref();
  uint64_t WitnessTable = swift_getWitnessTable();
  Reference.identity.getter(v0, WitnessTable);
  uint64_t v2 = v6;
  unint64_t v3 = v7;
  v5[0] = v6;
  v5[1] = v7;
  swift_beginAccess();
  sub_1C413A528(v5);
  swift_endAccess();
  return sub_1C3F7E2CC(v2, v3);
}

uint64_t sub_1C4234518()
{
  return sub_1C4234468();
}

uint64_t sub_1C423453C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  sub_1C4233F98(v1);
  return swift_endAccess();
}

uint64_t sub_1C42345D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_retain();
  sub_1C3F555DC(a3, a4);
  return swift_release();
}

uint64_t sub_1C4234624()
{
  return swift_deallocClassInstance();
}

void sub_1C423465C()
{
  sub_1C3F52EBC(v0, 1, &qword_1EBBC07C8, &qword_1EBBC5A20);
}

uint64_t sub_1C42346A4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v85 = a4;
  uint64_t v95 = a2;
  uint64_t v80 = a5;
  uint64_t v7 = type metadata accessor for Proto_CRDT(0);
  uint64_t v92 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v83 = (uint64_t)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v82 = (uint64_t)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v86 = (uint64_t)&v76 - v12;
  uint64_t v94 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v13 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  unint64_t v90 = (unint64_t *)((char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v16 = MEMORY[0x1F4188790](v15 - 8);
  uint64_t v88 = (uint64_t)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v76 - v18;
  uint64_t v20 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v21 = MEMORY[0x1F4188790](v20 - 8);
  uint64_t v79 = (uint64_t)&v76 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v89 = (char *)&v76 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v27 = (char *)&v76 - v26;
  uint64_t v84 = a3;
  uint64_t v77 = *(void *)(a3 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  uint64_t v78 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v81 = (char *)&v76 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v76 = (char *)&v76 - v32;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v33 - 8);
  uint64_t v35 = (char *)&v76 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Proto_Register(0);
  MEMORY[0x1F4188790](v36);
  uint64_t v38 = (char *)&v76 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = v7;
  uint64_t v39 = *(int *)(v7 + 20);
  uint64_t v96 = a1;
  uint64_t v40 = *(void *)(a1 + v39)
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v40, (uint64_t)v35, &qword_1EBBC0648);
  uint64_t v41 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v35, 1, v41);
  uint64_t v93 = v27;
  if (v42 == 1)
  {
    sub_1C3F962E0((uint64_t)v35, &qword_1EBBC0648);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_1C3FB4FBC((uint64_t)v35, (uint64_t)v38, type metadata accessor for Proto_Register);
      uint64_t v43 = v94;
      goto LABEL_8;
    }
    sub_1C3FB7638((uint64_t)v35, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  uint64_t v43 = v94;
  sub_1C4496888();
  uint64_t v44 = *(int *)(v36 + 20);
  if (qword_1EBBBF248 != -1) {
    swift_once();
  }
  *(void *)&v38[v44] = qword_1EBBBF238;
  swift_retain();
LABEL_8:
  uint64_t v45 = *(int *)(v36 + 20);
  uint64_t v46 = *(void *)&v38[v45]
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  sub_1C3F970C4(v46, (uint64_t)v19, &qword_1EBBC0620);
  uint64_t v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(v46) = v47(v19, 1, v43);
  sub_1C3F962E0((uint64_t)v19, &qword_1EBBC0620);
  if (v46 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v48 = 0xD000000000000021;
    *(void *)(v48 + 8) = 0x80000001C44B3720;
    *(unsigned char *)(v48 + 16) = 0;
    swift_willThrow();
LABEL_14:
    swift_release();
    uint64_t v57 = type metadata accessor for Proto_CRDT;
    uint64_t v58 = v96;
LABEL_15:
    sub_1C3FB7638(v58, v57);
    return sub_1C3FB7638((uint64_t)v38, type metadata accessor for Proto_Register);
  }
  uint64_t v49 = *(void *)&v38[v45]
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  uint64_t v50 = v88;
  sub_1C3F970C4(v49, v88, &qword_1EBBC0620);
  if (v47((char *)v50, 1, v43) == 1)
  {
    uint64_t v51 = v90;
    *unint64_t v90 = 0;
    v51[1] = 0;
    sub_1C4496888();
    sub_1C3F962E0(v50, &qword_1EBBC0620);
  }
  else
  {
    uint64_t v51 = v90;
    sub_1C3FB4FBC(v50, (uint64_t)v90, type metadata accessor for Proto_Timestamp);
  }
  uint64_t v52 = (uint64_t)v95;
  uint64_t v54 = v92;
  uint64_t v53 = (uint64_t)v93;
  uint64_t v55 = (uint64_t)v89;
  swift_retain();
  uint64_t v56 = v91;
  sub_1C43A3E60(v51, v52, v55);
  if (v56) {
    goto LABEL_14;
  }
  sub_1C3FB4FBC(v55, v53, type metadata accessor for FinalizedTimestamp);
  uint64_t v60 = *(void *)&v38[v45]
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  uint64_t v61 = v86;
  sub_1C3F970C4(v60, v86, &qword_1EBBC04F8);
  uint64_t v62 = v87;
  uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 48);
  LODWORD(v60) = v95(v61, 1, v87);
  sub_1C3F962E0(v61, &qword_1EBBC04F8);
  if (v60 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v63 = 0xD000000000000016;
    *(void *)(v63 + 8) = 0x80000001C44B3750;
    *(unsigned char *)(v63 + 16) = 0;
    swift_willThrow();
    swift_release();
    sub_1C3FB7638(v96, type metadata accessor for Proto_CRDT);
    uint64_t v57 = type metadata accessor for FinalizedTimestamp;
    uint64_t v58 = (uint64_t)v93;
    goto LABEL_15;
  }
  uint64_t v64 = *(void *)&v38[v45]
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
  swift_beginAccess();
  uint64_t v65 = v82;
  sub_1C3F970C4(v64, v82, &qword_1EBBC04F8);
  if (v95(v65, 1, v62) == 1)
  {
    uint64_t v66 = v83;
    sub_1C4496888();
    uint64_t v67 = *(int *)(v62 + 20);
    uint64_t v68 = v85;
    uint64_t v69 = v84;
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    *(void *)(v66 + v67) = qword_1EBBC0660;
    swift_retain();
    sub_1C3F962E0(v65, &qword_1EBBC04F8);
  }
  else
  {
    uint64_t v66 = v83;
    sub_1C3FB4FBC(v65, v83, type metadata accessor for Proto_CRDT);
    uint64_t v68 = v85;
    uint64_t v69 = v84;
  }
  uint64_t v70 = v81;
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  uint64_t v71 = sub_1C3FB9A38(v66, v52);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v68 + 16) + 8) + 8))(v71, v69);
  swift_release();
  sub_1C3FB7638(v96, type metadata accessor for Proto_CRDT);
  sub_1C3FB7638((uint64_t)v38, type metadata accessor for Proto_Register);
  uint64_t v72 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
  unint64_t v73 = v76;
  v72(v76, v70, v69);
  uint64_t v74 = (uint64_t)v78;
  v72(v78, v73, v69);
  uint64_t v75 = v79;
  sub_1C3FB4FBC((uint64_t)v93, v79, type metadata accessor for FinalizedTimestamp);
  return sub_1C4236044(v74, v75, v69, v80);
}

uint64_t sub_1C42351A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v57 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v6 = MEMORY[0x1F4188790](v5 - 8);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v54 = (uint64_t)&v48 - v9;
  uint64_t v10 = type metadata accessor for Proto_CRDT(0);
  uint64_t v53 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v60 = (uint64_t)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v13 = MEMORY[0x1F4188790](v12 - 8);
  uint64_t v56 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v48 - v15;
  uint64_t v17 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v55 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (uint64_t *)((char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for Proto_Register(0);
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v48 - v23;
  uint64_t v61 = a1;
  if (*(unsigned __int8 *)(a1 + 72) >= 2u)
  {
    uint64_t v49 = v22;
    uint64_t v51 = v8;
    sub_1C4496888();
    uint64_t v50 = v10;
    uint64_t v27 = *(int *)(v10 + 20);
    if (qword_1EBBC0668 != -1) {
      swift_once();
    }
    uint64_t v52 = a3;
    *(void *)(a3 + v27) = qword_1EBBC0660;
    swift_retain();
    sub_1C4496888();
    uint64_t v28 = *(int *)(v20 + 20);
    uint64_t v29 = v58;
    if (qword_1EBBBF248 != -1) {
      swift_once();
    }
    *(void *)&v24[v28] = qword_1EBBBF238;
    swift_retain();
    sub_1C4496888();
    *uint64_t v19 = sub_1C3FA10C4(v29);
    v19[1] = *(void *)(v29 + *(int *)(type metadata accessor for FinalizedTimestamp(0) + 20));
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = (uint64_t)v51;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      type metadata accessor for Proto_Register._StorageClass(0);
      swift_allocObject();
      uint64_t v32 = swift_retain();
      *(void *)&v24[v28] = sub_1C3FB87F8(v32);
      swift_release();
    }
    uint64_t v33 = *(void *)&v24[v28];
    sub_1C3FB4FBC((uint64_t)v19, (uint64_t)v16, type metadata accessor for Proto_Timestamp);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(v16, 0, 1, v17);
    uint64_t v34 = v56;
    sub_1C3F961BC((uint64_t)v16, v56, &qword_1EBBC0620);
    uint64_t v35 = v33
        + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    swift_retain();
    sub_1C3F98338(v34, v35, &qword_1EBBC0620);
    swift_endAccess();
    uint64_t v36 = swift_release();
    MEMORY[0x1F4188790](v36);
    *((_OWORD *)&v48 - 2) = *(_OWORD *)(v57 + 16);
    uint64_t v37 = v61;
    *(&v48 - 2) = v29;
    *(&v48 - 1) = v37;
    uint64_t v38 = v59;
    uint64_t v39 = v60;
    sub_1C3F5585C((void (*)(uint64_t))sub_1C4241E2C, v60);
    if (v38)
    {
      sub_1C3FB7638((uint64_t)v24, type metadata accessor for Proto_Register);
      uint64_t v40 = type metadata accessor for Proto_CRDT;
      uint64_t v41 = v52;
    }
    else
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Register._StorageClass(0);
        swift_allocObject();
        uint64_t v42 = swift_retain();
        *(void *)&v24[v28] = sub_1C3FB87F8(v42);
        swift_release();
      }
      uint64_t v43 = *(void *)&v24[v28];
      uint64_t v44 = v39;
      uint64_t v45 = v54;
      sub_1C3FB4FBC(v44, v54, type metadata accessor for Proto_CRDT);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v53 + 56))(v45, 0, 1, v50);
      sub_1C3F961BC(v45, v31, &qword_1EBBC04F8);
      uint64_t v46 = v43 + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__crdt;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v31, v46, &qword_1EBBC04F8);
      swift_endAccess();
      swift_release();
      uint64_t v47 = v49;
      sub_1C3FB7758((uint64_t)v24, v49, type metadata accessor for Proto_Register);
      sub_1C43F10C0(v47);
      uint64_t v40 = type metadata accessor for Proto_Register;
      uint64_t v41 = (uint64_t)v24;
    }
    return sub_1C3FB7638(v41, v40);
  }
  else
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v25 = 0xD00000000000003ALL;
    *(void *)(v25 + 8) = 0x80000001C44B2840;
    *(unsigned char *)(v25 + 16) = 3;
    return swift_willThrow();
  }
}

uint64_t CRDTRegister.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C3FB7758(v1, a1, type metadata accessor for FinalizedTimestamp);
}

uint64_t (*CRDTRegister._value.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CRDTRegister.value.setter(uint64_t a1, uint64_t a2)
{
  sub_1C423D4E0(a1, a2);
  unint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
  return v4(a1);
}

void (*CRDTRegister.value.modify(void *a1))(uint64_t *a1, char a2)
{
  *a1 = v1;
  uint64_t v3 = type metadata accessor for FinalizedTimestamp(0);
  a1[1] = v3;
  a1[2] = malloc(*(void *)(*(void *)(v3 - 8) + 64));
  return sub_1C4235990;
}

void sub_1C4235990(uint64_t *a1, char a2)
{
  uint64_t v2 = (char *)a1[2];
  if ((a2 & 1) == 0)
  {
    uint64_t v3 = *a1;
    uint64_t v4 = a1[1];
    sub_1C4496668();
    uint64_t v5 = *(int *)(v4 + 20);
    uint64_t v6 = *(void *)(v3 + v5);
    BOOL v7 = __OFADD__(v6, 1);
    uint64_t v8 = v6 + 1;
    if (v7)
    {
      __break(1u);
      return;
    }
    *(void *)&v2[v5] = v8;
    sub_1C4158E4C((uint64_t)v2, v3);
  }
  free(v2);
}

uint64_t _s9Coherence12CRDTRegisterV6_valuexvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t sub_1C4235A3C(uint64_t a1)
{
  MEMORY[0x1F4188790](a1);
  uint64_t v2 = (char *)&v6 - v1;
  (*(void (**)(char *))(v3 + 16))((char *)&v6 - v1);
  uint64_t v4 = type metadata accessor for CRDTRegister();
  return CRDTRegister.crdt.setter(v2, v4);
}

uint64_t _s9Coherence12CRDTRegisterV6_valuexvs_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t (*CRDTRegister.crdt.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CRDTRegister.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t sub_1C4235BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + a3 - 16);
  type metadata accessor for CRDTRegister();
  uint64_t v6 = CRDTRegister.wrappedValue.modify(v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(v7, a1, v5);
  return ((uint64_t (*)(void *, void))v6)(v9, 0);
}

void (*CRDTRegister.wrappedValue.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = CRDTRegister.crdt.modify();
  return sub_1C4235CB0;
}

void sub_1C4235CB0(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

uint64_t CRDTRegister.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t CRDTRegister.projectedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(a2, v2, a1);
}

uint64_t sub_1C4235D6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRDTRegister();
  uint64_t v3 = (uint64_t (*)(uint64_t *, void))CRDTRegister.projectedValue.modify();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 24))(v4, a1, v2);
  return v3(&v6, 0);
}

uint64_t (*CRDTRegister.projectedValue.modify())(void, void)
{
  return nullsub_1;
}

uint64_t CRDTRegister.projectedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 40))(v2, a1, a2);
}

uint64_t CRDTRegister.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  CRDTRegister.init(_:)((uint64_t)v8, a2, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
}

uint64_t CRDTRegister.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (qword_1EBBBBF18 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_1EBBC58A8);
  sub_1C3FB7758(v7, a3, type metadata accessor for FinalizedTimestamp);
  uint64_t v8 = a3 + *(int *)(type metadata accessor for CRDTRegister() + 36);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32);
  return v9(v8, a1, a2);
}

uint64_t sub_1C4236044@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1C3FB4FBC(a2, a4, type metadata accessor for FinalizedTimestamp);
  uint64_t v7 = a4 + *(int *)(type metadata accessor for CRDTRegister() + 36);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  return v8(v7, a1, a3);
}

uint64_t CRDTRegister.merge(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = *(void *)(a2 + 16);
  uint64_t v36 = a2;
  uint64_t v34 = *(void *)(v35 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v33 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v33 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = v2;
  sub_1C3FB7758(v2, (uint64_t)&v33 - v15, type metadata accessor for FinalizedTimestamp);
  uint64_t v18 = *(int *)(v5 + 20);
  uint64_t v19 = *(void *)&v16[v18];
  uint64_t v20 = *(void *)(a1 + v18);
  if (v19 == v20)
  {
    char v21 = sub_1C410BE0C();
    sub_1C3FB7638((uint64_t)v16, type metadata accessor for FinalizedTimestamp);
    if ((v21 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_7:
    uint64_t v31 = v36;
    uint64_t v32 = *(void *)(v36 - 8);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v17, v36);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(v17, a1, v31);
  }
  sub_1C3FB7638((uint64_t)v16, type metadata accessor for FinalizedTimestamp);
  if (v19 < v20) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1C3FB7758(v17, (uint64_t)v14, type metadata accessor for FinalizedTimestamp);
  uint64_t v22 = *(void *)&v14[*(int *)(v5 + 20)];
  uint64_t v23 = *(void *)(a1 + v18);
  sub_1C3FB7758((uint64_t)v14, (uint64_t)v11, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7758(a1, (uint64_t)v8, type metadata accessor for FinalizedTimestamp);
  if (v22 == v23)
  {
    char v24 = sub_1C4496618();
    sub_1C3FB7638((uint64_t)v8, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v11, type metadata accessor for FinalizedTimestamp);
    uint64_t result = sub_1C3FB7638((uint64_t)v14, type metadata accessor for FinalizedTimestamp);
    if (v24)
    {
      uint64_t v27 = v35;
      uint64_t v26 = v36;
      uint64_t v28 = a1 + *(int *)(v36 + 36);
      uint64_t v30 = v33;
      uint64_t v29 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v33, v28, v35);
      (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v26 + 24) + 8) + 8))(v30, v27);
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v30, v27);
    }
  }
  else
  {
    sub_1C3FB7638((uint64_t)v8, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v11, type metadata accessor for FinalizedTimestamp);
    return sub_1C3FB7638((uint64_t)v14, type metadata accessor for FinalizedTimestamp);
  }
  return result;
}

uint64_t CRDTRegister.visitReferences(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2 + *(int *)(v9 + 36), v5);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) + 16) + 48))(a1, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Bool __swiftcall CRDTRegister.needToFinalizeTimestamps()()
{
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = ((uint64_t (*)())MEMORY[0x1F4188790])();
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v1 + *(int *)(v5 + 36), v3);
  LOBYTE(v2) = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v2 + 24) + 16) + 56))(v3);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v2 & 1;
}

uint64_t CRDTRegister.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, void))(*(void *)(*(void *)(a2 + 24) + 16) + 64))(a1, *(void *)(a2 + 16));
}

uint64_t CRDTRegister.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v3 + *(int *)(v14 + 36), v7);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) + 16) + 24))(a1, v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return CRDTRegister.init(_:)((uint64_t)v13, v7, a3);
}

uint64_t CRDTRegister.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v6 = a1;
  swift_bridgeObjectRetain();
  CRDTRegister.copy(renamingReferences:)((uint64_t)&v6, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t CRDTRegister.description.getter(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8[0] = 0;
  v8[1] = 0xE000000000000000;
  sub_1C4497D28();
  swift_bridgeObjectRelease();
  strcpy((char *)v8, "CRDTRegister[");
  HIWORD(v8[1]) = -4864;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v1 + *(int *)(a1 + 36), v3);
  sub_1C4497218();
  sub_1C4497268();
  swift_bridgeObjectRelease();
  sub_1C4497268();
  return v8[0];
}

uint64_t CRDTRegister.actionUndoingDifference(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v78 = (char *)a3;
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v75 = (char *)&v66 - v11;
  uint64_t v79 = *(void *)(v12 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_1C4497B38();
  uint64_t v69 = *(void *)(v14 - 8);
  uint64_t v70 = v14;
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v72 = (char *)&v66 - v16;
  uint64_t v74 = AssociatedTypeWitness;
  uint64_t v73 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v68 = (char *)&v66 - v17;
  uint64_t v18 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  char v21 = (char *)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v25 = (char *)&v66 - v24;
  uint64_t v26 = *(int *)(v22 + 20);
  uint64_t v27 = *(void *)(v4 + v26);
  uint64_t v28 = *(void *)(v23 + v26);
  uint64_t v76 = v10;
  uint64_t v77 = a2;
  uint64_t v29 = v6;
  if (v27 == v28)
  {
    uint64_t v30 = v7;
    uint64_t v31 = v4;
    uint64_t v32 = v23;
    char v33 = sub_1C410BE0C();
    uint64_t v23 = v32;
    if ((v33 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_9:
    uint64_t v52 = type metadata accessor for CRDTRegister.MutatingAction();
    uint64_t v53 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56);
    uint64_t v54 = v52;
    uint64_t v55 = (uint64_t)v78;
    return v53(v55, 1, 1, v54);
  }
  uint64_t v31 = v4;
  uint64_t v30 = v7;
  if (v27 < v28) {
    goto LABEL_9;
  }
LABEL_3:
  uint64_t v71 = v23;
  sub_1C3FB7758(v23, (uint64_t)v25, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7758(v31, (uint64_t)v21, type metadata accessor for FinalizedTimestamp);
  if (v27 != v28)
  {
    sub_1C3FB7638((uint64_t)v21, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v25, type metadata accessor for FinalizedTimestamp);
    uint64_t v35 = v30;
    goto LABEL_13;
  }
  char v34 = sub_1C4496618();
  sub_1C3FB7638((uint64_t)v21, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638((uint64_t)v25, type metadata accessor for FinalizedTimestamp);
  uint64_t v35 = v30;
  if ((v34 & 1) == 0)
  {
LABEL_13:
    uint64_t v51 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v78, v71 + *(int *)(v77 + 36), v29);
    goto LABEL_14;
  }
  uint64_t v36 = v77;
  uint64_t v37 = *(int *)(v77 + 36);
  uint64_t v67 = v31;
  uint64_t v38 = v31 + v37;
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
  uint64_t v40 = v75;
  uint64_t v41 = v29;
  v39(v75, v38, v29);
  uint64_t v42 = v71 + *(int *)(v36 + 36);
  uint64_t v43 = v76;
  uint64_t v66 = v39;
  v39(v76, v42, v41);
  uint64_t v44 = v72;
  (*(void (**)(char *, uint64_t))(v79 + 56))(v43, v41);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v35 + 8);
  v45(v43, v41);
  v45(v40, v41);
  uint64_t v47 = v73;
  uint64_t v46 = v74;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v73 + 48))(v44, 1, v74) != 1)
  {
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
    uint64_t v61 = v68;
    v60(v68, v44, v46);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v63 = (uint64_t)v78;
    uint64_t v64 = &v78[*(int *)(TupleTypeMetadata2 + 48)];
    sub_1C3FB7758(v67, (uint64_t)v78, type metadata accessor for FinalizedTimestamp);
    v60(v64, v61, v46);
    uint64_t v57 = type metadata accessor for CRDTRegister.MutatingAction();
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
    uint64_t v59 = v63;
    return v58(v59, 0, 1, v57);
  }
  (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v70);
  uint64_t v48 = v77;
  uint64_t v49 = v66;
  v66(v40, v67 + *(int *)(v77 + 36), v41);
  v49(v43, v71 + *(int *)(v48 + 36), v41);
  char v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v79 + 72))(v43, v41, v79);
  v45(v43, v41);
  v45(v40, v41);
  if (v50)
  {
    uint64_t v51 = (uint64_t)v78;
    v49(v78, v71 + *(int *)(v48 + 36), v41);
LABEL_14:
    uint64_t v57 = type metadata accessor for CRDTRegister.MutatingAction();
    swift_storeEnumTagMultiPayload();
    uint64_t v58 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
    uint64_t v59 = v51;
    return v58(v59, 0, 1, v57);
  }
  uint64_t v65 = type metadata accessor for CRDTRegister.MutatingAction();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v78, 1, 1, v65);
}

uint64_t CRDTRegister.apply(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v66 = a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v2 = *(void *)(a2 + 24);
  uint64_t v60 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v55 = sub_1C4497B38();
  uint64_t v53 = *(void *)(v55 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v55);
  uint64_t v52 = (char *)&v51 - v6;
  uint64_t v65 = AssociatedTypeWitness;
  uint64_t v56 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v61 = (char *)&v51 - v7;
  uint64_t v64 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v8 = MEMORY[0x1F4188790](v64);
  uint64_t v58 = (uint64_t)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v59 = (uint64_t)&v51 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v57 = (uint64_t)&v51 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v63 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = v2;
  uint64_t v19 = type metadata accessor for CRDTRegister.MutatingAction();
  uint64_t v20 = sub_1C4497B38();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v51 - v23;
  uint64_t v25 = *(void *)(v19 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v22);
  uint64_t v28 = (char *)&v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v51 - v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v24, v66, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v24, 1, v19) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  }
  uint64_t v32 = v63;
  uint64_t v33 = v64;
  uint64_t v66 = v3;
  uint64_t v34 = v65;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v30, v24, v19);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v28, v30, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v63 = v19;
    uint64_t v51 = v30;
    uint64_t v35 = &v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v36 = (uint64_t)v16;
    sub_1C3FB4FBC((uint64_t)v28, (uint64_t)v16, type metadata accessor for FinalizedTimestamp);
    uint64_t v37 = v56;
    (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v61, v35, v34);
    uint64_t v38 = v57;
    sub_1C3FB7758(v62, v57, type metadata accessor for FinalizedTimestamp);
    uint64_t v39 = *(int *)(v33 + 20);
    uint64_t v40 = *(void *)(v38 + v39);
    uint64_t v41 = *(void *)&v16[v39];
    uint64_t v42 = v59;
    sub_1C3FB7758(v38, v59, type metadata accessor for FinalizedTimestamp);
    uint64_t v64 = v36;
    uint64_t v43 = v58;
    sub_1C3FB7758(v36, v58, type metadata accessor for FinalizedTimestamp);
    if (v40 == v41)
    {
      char v44 = sub_1C4496618();
      sub_1C3FB7638(v43, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v42, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v38, type metadata accessor for FinalizedTimestamp);
      uint64_t v45 = v61;
      uint64_t v46 = v51;
      uint64_t v48 = v64;
      uint64_t v47 = v65;
      if (v44)
      {
        uint64_t v49 = v52;
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v52, v61, v65);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v49, 0, 1, v47);
        (*(void (**)(char *, uint64_t))(v54 + 64))(v49, v66);
        (*(void (**)(char *, uint64_t))(v53 + 8))(v49, v55);
      }
    }
    else
    {
      sub_1C3FB7638(v43, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v42, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v38, type metadata accessor for FinalizedTimestamp);
      uint64_t v45 = v61;
      uint64_t v46 = v51;
      uint64_t v48 = v64;
      uint64_t v47 = v65;
    }
    (*(void (**)(char *, uint64_t))(v37 + 8))(v45, v47);
    sub_1C3FB7638(v48, type metadata accessor for FinalizedTimestamp);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v46, v63);
  }
  else
  {
    uint64_t v50 = v66;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v18, v28, v66);
    sub_1C423D4E0((uint64_t)v18, v60);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v50);
    return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v30, v19);
  }
}

uint64_t CRDTRegister.hasDelta(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v53 = (char *)&v53 - v10;
  uint64_t v11 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v58 = (uint64_t)&v53 - v16;
  uint64_t v17 = *(void *)(a2 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  uint64_t v57 = (char *)&v53 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v59 = (char *)&v53 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v53 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v53 - v26;
  uint64_t v28 = *(int *)(v25 + 20);
  uint64_t v29 = *(void *)(a1 + v28);
  uint64_t v30 = *(void *)(v2 + v28);
  uint64_t v55 = v6;
  uint64_t v56 = v5;
  uint64_t v54 = v9;
  if (v29 == v30)
  {
    uint64_t v31 = (char *)&v53 - v26;
    char v32 = sub_1C410BE0C();
    uint64_t v27 = v31;
  }
  else
  {
    char v32 = v29 < v30;
  }
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v17 + 16);
  uint64_t v60 = v27;
  v33(v27, v2, a2);
  v33(v24, a1, a2);
  if ((v32 & 1) == 0)
  {
    uint64_t v36 = *(int *)(v11 + 20);
    uint64_t v37 = *(void *)&v60[v36];
    uint64_t v38 = *(void *)&v24[v36];
    uint64_t v39 = v58;
    sub_1C3FB7758((uint64_t)v60, v58, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7758((uint64_t)v24, (uint64_t)v14, type metadata accessor for FinalizedTimestamp);
    if (v37 == v38)
    {
      char v40 = sub_1C4496618();
      sub_1C3FB7638((uint64_t)v14, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v39, type metadata accessor for FinalizedTimestamp);
      uint64_t v41 = v59;
      v33(v59, (uint64_t)v60, a2);
      uint64_t v42 = v57;
      v33(v57, (uint64_t)v24, a2);
      if (v40)
      {
        uint64_t v43 = &v41[*(int *)(a2 + 36)];
        uint64_t v45 = v55;
        uint64_t v44 = v56;
        uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
        uint64_t v47 = v53;
        v46(v53, v43, v56);
        uint64_t v48 = v54;
        v46(v54, &v42[*(int *)(a2 + 36)], v44);
        char v35 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(a2 + 24) + 72))(v48, v44);
        uint64_t v49 = *(void (**)(char *, uint64_t))(v45 + 8);
        v49(v48, v44);
        v49(v47, v44);
        uint64_t v50 = *(void (**)(char *, uint64_t))(v17 + 8);
        v50(v42, a2);
        v50(v59, a2);
        v50(v24, a2);
        v50(v60, a2);
        return v35 & 1;
      }
    }
    else
    {
      sub_1C3FB7638((uint64_t)v14, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v39, type metadata accessor for FinalizedTimestamp);
      uint64_t v41 = v59;
      v33(v59, (uint64_t)v60, a2);
      uint64_t v42 = v57;
      v33(v57, (uint64_t)v24, a2);
    }
    uint64_t v51 = *(void (**)(char *, uint64_t))(v17 + 8);
    v51(v42, a2);
    v51(v41, a2);
    v51(v24, a2);
    v51(v60, a2);
    char v35 = 0;
    return v35 & 1;
  }
  uint64_t v34 = *(void (**)(char *, uint64_t))(v17 + 8);
  v34(v24, a2);
  v34(v60, a2);
  char v35 = 1;
  return v35 & 1;
}

uint64_t CRDTRegister.delta(_:from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v77 = a4;
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v71 = a1;
  uint64_t v72 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v69 = (char *)v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v68 = (char *)v63 - v11;
  uint64_t v13 = *(void *)(v12 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = sub_1C4497B38();
  uint64_t v15 = *(void *)(v66 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v66);
  uint64_t v67 = (char *)v63 - v17;
  uint64_t v73 = AssociatedTypeWitness;
  uint64_t v70 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v64 = (char *)v63 - v18;
  uint64_t v19 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)v63 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)v63 - v23;
  uint64_t v76 = v13;
  uint64_t v25 = type metadata accessor for CRDTRegister.Partial.PartialCases();
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)v63 - v28;
  v63[1] = v19;
  uint64_t v30 = *(int *)(v19 + 20);
  uint64_t v31 = *(void *)(a2 + v30);
  uint64_t v32 = *(void *)(v4 + v30);
  uint64_t v74 = v33;
  uint64_t v75 = v26;
  uint64_t v65 = v15;
  uint64_t v34 = v7;
  if (v31 == v32)
  {
    uint64_t v35 = v27;
    char v36 = sub_1C410BE0C();
    uint64_t v27 = v35;
    if ((v36 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_8:
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v29, v4, a3);
    uint64_t v52 = v75;
    swift_storeEnumTagMultiPayload();
    uint64_t v53 = v77;
    (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v77, v29, v52);
    uint64_t v54 = type metadata accessor for CRDTRegister.Partial();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 0, 1, v54);
  }
  if (v31 < v32) {
    goto LABEL_8;
  }
LABEL_3:
  uint64_t v37 = v27;
  sub_1C3FB7758(v27, (uint64_t)v24, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7758(v4, (uint64_t)v22, type metadata accessor for FinalizedTimestamp);
  if (v31 != v32)
  {
    sub_1C3FB7638((uint64_t)v22, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v24, type metadata accessor for FinalizedTimestamp);
    goto LABEL_10;
  }
  v63[0] = v37;
  char v38 = sub_1C4496618();
  sub_1C3FB7638((uint64_t)v22, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638((uint64_t)v24, type metadata accessor for FinalizedTimestamp);
  uint64_t v39 = v76;
  uint64_t v40 = v34;
  if ((v38 & 1) == 0)
  {
LABEL_10:
    uint64_t v56 = type metadata accessor for CRDTRegister.Partial();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v77, 1, 1, v56);
  }
  uint64_t v41 = v4;
  uint64_t v42 = v4 + *(int *)(a3 + 36);
  uint64_t v43 = v72;
  uint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v72 + 16);
  uint64_t v45 = v68;
  v44(v68, v42, v34);
  uint64_t v46 = v63[0] + *(int *)(a3 + 36);
  uint64_t v47 = v69;
  v44(v69, v46, v34);
  uint64_t v48 = v67;
  (*(void (**)(uint64_t, char *, uint64_t, uint64_t))(v39 + 80))(v71, v47, v40, v39);
  uint64_t v49 = *(void (**)(char *, uint64_t))(v43 + 8);
  v49(v47, v40);
  v49(v45, v40);
  uint64_t v50 = v70;
  uint64_t v51 = v73;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v70 + 48))(v48, 1, v73) == 1)
  {
    (*(void (**)(char *, uint64_t))(v65 + 8))(v48, v66);
    goto LABEL_10;
  }
  uint64_t v57 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  uint64_t v58 = v64;
  v57(v64, v48, v51);
  uint64_t v59 = &v29[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  sub_1C3FB7758(v41, (uint64_t)v29, type metadata accessor for FinalizedTimestamp);
  v57(v59, v58, v51);
  uint64_t v60 = v75;
  swift_storeEnumTagMultiPayload();
  uint64_t v61 = v77;
  (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v77, v29, v60);
  uint64_t v62 = type metadata accessor for CRDTRegister.Partial();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
}

uint64_t CRDTRegister.canMerge(delta:)(char *a1, uint64_t a2)
{
  uint64_t v51 = a1;
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v46 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v45 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v48 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v42 - v8;
  uint64_t v10 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v50 = (uint64_t)&v42 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v42 - v16;
  uint64_t v18 = type metadata accessor for CRDTRegister.Partial.PartialCases();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v42 - v20;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))((char *)&v42 - v20, v51, v18);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v43 = v6;
    uint64_t v44 = v3;
    uint64_t v22 = v48;
    uint64_t v23 = &v21[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    sub_1C3FB4FBC((uint64_t)v21, (uint64_t)v17, type metadata accessor for FinalizedTimestamp);
    uint64_t v24 = v47;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
    uint64_t v51 = v9;
    v25(v9, v23, v22);
    uint64_t v26 = *(int *)(v10 + 20);
    uint64_t v27 = v49;
    uint64_t v28 = *(void *)(v49 + v26);
    uint64_t v29 = *(void *)&v17[v26];
    sub_1C3FB7758(v49, v50, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7758((uint64_t)v17, (uint64_t)v13, type metadata accessor for FinalizedTimestamp);
    BOOL v30 = v28 == v29;
    uint64_t v31 = v27;
    if (v30)
    {
      uint64_t v32 = v50;
      char v33 = sub_1C4496618();
      sub_1C3FB7638((uint64_t)v13, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v32, type metadata accessor for FinalizedTimestamp);
      if (v33)
      {
        uint64_t v35 = v45;
        uint64_t v34 = v46;
        uint64_t v36 = v44;
        (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v31 + *(int *)(a2 + 36), v44);
        uint64_t v37 = v51;
        char v38 = (*(uint64_t (**)(char *, uint64_t))(v43 + 88))(v51, v36);
        (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v36);
        (*(void (**)(char *, uint64_t))(v24 + 8))(v37, v22);
LABEL_11:
        sub_1C3FB7638((uint64_t)v17, type metadata accessor for FinalizedTimestamp);
        return v38 & 1;
      }
    }
    else
    {
      sub_1C3FB7638((uint64_t)v13, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v50, type metadata accessor for FinalizedTimestamp);
    }
    uint64_t v39 = *(void *)&v17[v26];
    uint64_t v40 = *(void *)(v31 + v26);
    if (v39 == v40) {
      char v38 = sub_1C410BE0C();
    }
    else {
      char v38 = v39 < v40;
    }
    (*(void (**)(char *, uint64_t))(v24 + 8))(v51, v22);
    goto LABEL_11;
  }
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  char v38 = 1;
  return v38 & 1;
}

uint64_t CRDTRegister.merge(delta:)(uint64_t a1, uint64_t a2)
{
  uint64_t v57 = (char *)a1;
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v55 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v53 = (char *)&v48 - v6;
  uint64_t v50 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v7 = MEMORY[0x1F4188790](v50);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v51 = (uint64_t)&v48 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v52 = (uint64_t)&v48 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v48 - v15;
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  uint64_t v19 = (char *)&v48 - v18;
  uint64_t v20 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for CRDTRegister.Partial.PartialCases();
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v48 - v24;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))((char *)&v48 - v24, v57, v23);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v57 = v9;
    uint64_t v48 = v3;
    uint64_t v49 = v4;
    uint64_t v27 = v50;
    uint64_t v28 = v55;
    uint64_t v29 = &v25[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    sub_1C3FB4FBC((uint64_t)v25, (uint64_t)v19, type metadata accessor for FinalizedTimestamp);
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v53, v29, v28);
    uint64_t v30 = v56;
    sub_1C3FB7758(v56, (uint64_t)v16, type metadata accessor for FinalizedTimestamp);
    uint64_t v31 = *(int *)(v27 + 20);
    uint64_t v32 = *(void *)&v16[v31];
    uint64_t v33 = *(void *)&v19[v31];
    sub_1C3FB7758((uint64_t)v16, v52, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7758((uint64_t)v19, v51, type metadata accessor for FinalizedTimestamp);
    BOOL v34 = v32 == v33;
    uint64_t v35 = v19;
    if (v34)
    {
      uint64_t v37 = v51;
      uint64_t v36 = v52;
      char v38 = sub_1C4496618();
      sub_1C3FB7638(v37, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v36, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638((uint64_t)v16, type metadata accessor for FinalizedTimestamp);
      uint64_t v41 = v55;
      uint64_t v42 = v53;
      if (v38)
      {
        char v39 = (*(uint64_t (**)(char *, uint64_t))(v48 + 96))(v53, v49);
        (*(void (**)(char *, uint64_t))(v54 + 8))(v42, v41);
        uint64_t v40 = (uint64_t)v35;
LABEL_11:
        sub_1C3FB7638(v40, type metadata accessor for FinalizedTimestamp);
        return v39 & 1;
      }
    }
    else
    {
      sub_1C3FB7638(v51, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v52, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638((uint64_t)v16, type metadata accessor for FinalizedTimestamp);
      uint64_t v41 = v55;
      uint64_t v42 = v53;
    }
    uint64_t v43 = (uint64_t)v57;
    sub_1C3FB7758(v30, (uint64_t)v57, type metadata accessor for FinalizedTimestamp);
    uint64_t v44 = *(void *)&v35[v31];
    uint64_t v45 = *(void *)(v43 + *(int *)(v27 + 20));
    if (v44 == v45) {
      char v39 = sub_1C410BE0C();
    }
    else {
      char v39 = v44 < v45;
    }
    uint64_t v46 = v54;
    sub_1C3FB7638(v43, type metadata accessor for FinalizedTimestamp);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v42, v41);
    uint64_t v40 = (uint64_t)v35;
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v25, a2);
  CRDTRegister.merge(_:)((uint64_t)v22, a2);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, a2);
  char v39 = 1;
  return v39 & 1;
}

uint64_t CRDTRegister.observableDifference(from:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v58 = a2;
  uint64_t v59 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](a1);
  uint64_t v57 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v56 = (char *)&v49 - v12;
  uint64_t v54 = *(void *)(*(void *)(v13 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_1C4497B38();
  uint64_t v52 = *(void *)(v15 - 8);
  uint64_t v53 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v55 = (char *)&v49 - v17;
  uint64_t v60 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v51 = (char *)&v49 - v18;
  uint64_t v19 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v20 = MEMORY[0x1F4188790](v19 - 8);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x1F4188790](v20);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = *(int *)(v23 + 28);
  uint64_t v27 = *(void *)(v4 + v26);
  uint64_t v28 = *(void *)(a1 + v26);
  if (v27 == v28)
  {
    if ((sub_1C410BE0C() & 1) == 0) {
      goto LABEL_3;
    }
  }
  else if (v27 >= v28)
  {
LABEL_3:
    uint64_t v50 = a4;
    sub_1C3FB7758(a1, (uint64_t)v25, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7758(v4, (uint64_t)v22, type metadata accessor for FinalizedTimestamp);
    if (v27 == v28)
    {
      char v29 = sub_1C4496618();
      sub_1C3FB7638((uint64_t)v22, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638((uint64_t)v25, type metadata accessor for FinalizedTimestamp);
      if (v29)
      {
        uint64_t v30 = v4 + *(int *)(a3 + 36);
        uint64_t v31 = v59;
        uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 16);
        uint64_t v33 = v56;
        v32(v56, v30, v8);
        BOOL v34 = v57;
        v32(v57, a1 + *(int *)(a3 + 36), v8);
        uint64_t v35 = v55;
        (*(void (**)(char *, uint64_t, uint64_t))(v54 + 40))(v34, v58, v8);
        uint64_t v36 = *(void (**)(char *, uint64_t))(v31 + 8);
        v36(v34, v8);
        v36(v33, v8);
        uint64_t v37 = v60;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v35, 1, AssociatedTypeWitness) == 1)
        {
          (*(void (**)(char *, uint64_t))(v52 + 8))(v35, v53);
          uint64_t v38 = type metadata accessor for WrappedObservableDifference();
          return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v50, 1, 1, v38);
        }
        uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
        uint64_t v47 = v51;
        v46(v51, v35, AssociatedTypeWitness);
        uint64_t v48 = v50;
        v46(v50, v47, AssociatedTypeWitness);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v48, 0, 1, AssociatedTypeWitness);
        uint64_t v43 = type metadata accessor for WrappedObservableDifference();
        uint64_t v44 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
        uint64_t v45 = v48;
        return v44((uint64_t)v45, 0, 1, v43);
      }
    }
    else
    {
      sub_1C3FB7638((uint64_t)v22, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638((uint64_t)v25, type metadata accessor for FinalizedTimestamp);
    }
    uint64_t v42 = v50;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v50, 1, 1, AssociatedTypeWitness);
    uint64_t v43 = type metadata accessor for WrappedObservableDifference();
    uint64_t v44 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56);
    uint64_t v45 = v42;
    return v44((uint64_t)v45, 0, 1, v43);
  }
  uint64_t v40 = type metadata accessor for WrappedObservableDifference();
  uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56);
  return v41((uint64_t)a4, 1, 1, v40);
}

uint64_t sub_1C4239478@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CRDTRegister.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t CRDTRegister.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v11, (uint64_t)v10, &qword_1EBBC04F8);
  uint64_t v12 = type metadata accessor for Proto_CRDT(0);
  LODWORD(v11) = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v10, 1, v12);
  sub_1C3F962E0((uint64_t)v10, &qword_1EBBC04F8);
  if (v11 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v13 = 0xD000000000000014;
    *(void *)(v13 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v13 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = a1;
    *(void *)(inited + 24) = 0;
    *(unsigned char *)(inited + 32) = 1;
    sub_1C4000040(a2, a3, a4);
  }
  return swift_release();
}

uint64_t sub_1C4239658()
{
  return CRDTRegister.encode(to:)();
}

uint64_t CRDTRegister.encode(to:)()
{
  uint64_t result = sub_1C3F62C10();
  if (!v0)
  {
    swift_retain();
    sub_1C400C474();
    return swift_release();
  }
  return result;
}

uint64_t CRDTRegister.hasEncodedData.getter(uint64_t a1)
{
  uint64_t v32 = *(void *)(a1 + 16);
  uint64_t v31 = *(void *)(v32 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](a1);
  uint64_t v30 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v30 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v19 = (char *)&v30 - v18;
  uint64_t v33 = v1;
  sub_1C3FB7758(v1, (uint64_t)&v30 - v18, type metadata accessor for FinalizedTimestamp);
  if (qword_1EBBBBF18 != -1) {
    swift_once();
  }
  uint64_t v20 = __swift_project_value_buffer(v8, (uint64_t)qword_1EBBC58A8);
  sub_1C3FB7758(v20, (uint64_t)v17, type metadata accessor for FinalizedTimestamp);
  uint64_t v21 = *(int *)(v8 + 20);
  uint64_t v22 = *(void *)&v19[v21];
  uint64_t v23 = *(void *)&v17[v21];
  sub_1C3FB7758((uint64_t)v19, (uint64_t)v14, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7758((uint64_t)v17, (uint64_t)v11, type metadata accessor for FinalizedTimestamp);
  if (v22 != v23)
  {
    sub_1C3FB7638((uint64_t)v11, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v14, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v17, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638((uint64_t)v19, type metadata accessor for FinalizedTimestamp);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v33, a1);
    goto LABEL_7;
  }
  char v24 = sub_1C4496618();
  sub_1C3FB7638((uint64_t)v11, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638((uint64_t)v14, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638((uint64_t)v17, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638((uint64_t)v19, type metadata accessor for FinalizedTimestamp);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v33, a1);
  if ((v24 & 1) == 0)
  {
LABEL_7:
    char v28 = 1;
    goto LABEL_8;
  }
  uint64_t v26 = v30;
  uint64_t v25 = v31;
  uint64_t v27 = v32;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v30, &v7[*(int *)(a1 + 36)], v32);
  char v28 = (*(uint64_t (**)(uint64_t))(*(void *)(*(void *)(*(void *)(a1 + 24) + 16) + 8) + 24))(v27);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
LABEL_8:
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
  return v28 & 1;
}

void sub_1C4239ADC(unsigned char *a1@<X8>)
{
}

void CRDTRegister.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t static CRDTRegister<>.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v47 = a5;
  uint64_t v44 = a1;
  uint64_t v42 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v8 = MEMORY[0x1F4188790](v42);
  uint64_t v43 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v41 = (uint64_t)&v40 - v10;
  uint64_t v11 = type metadata accessor for CRDTRegister();
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v45 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = *(void *)(a3 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v14);
  uint64_t v20 = (char *)&v40 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = a1 + *(int *)(v21 + 36);
  uint64_t v25 = *(void *)(v21 + 16);
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16);
  v26((char *)&v40 - v22, v24, v25);
  v26(v20, a2 + *(int *)(v11 + 36), v25);
  LOBYTE(v25) = sub_1C4497178();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  char v28 = v20;
  uint64_t v29 = v46;
  v27(v28, a3);
  v27(v23, a3);
  uint64_t v30 = (uint64_t)v45;
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 16);
  v31(v16, v44, v11);
  v31((char *)v30, a2, v11);
  if (v25)
  {
    uint64_t v32 = v41;
    uint64_t v33 = *(int *)(v42 + 20);
    uint64_t v34 = *(void *)&v16[v33];
    uint64_t v35 = *(void *)(v30 + v33);
    sub_1C3FB7758((uint64_t)v16, v41, type metadata accessor for FinalizedTimestamp);
    uint64_t v36 = v43;
    sub_1C3FB7758(v30, v43, type metadata accessor for FinalizedTimestamp);
    if (v34 == v35) {
      char v37 = sub_1C4496618();
    }
    else {
      char v37 = 0;
    }
    sub_1C3FB7638(v36, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638(v32, type metadata accessor for FinalizedTimestamp);
  }
  else
  {
    char v37 = 0;
  }
  uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v29 + 8);
  v38(v30, v11);
  v38((uint64_t)v16, v11);
  return v37 & 1;
}

uint64_t sub_1C4239EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static CRDTRegister<>.== infix(_:_:)(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(void *)(a4 - 8));
}

uint64_t sub_1C4239EBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for CRDTRegister();
  (*(void (**)(char *, uint64_t))(*(void *)(*(void *)(v11 + 16) - 8) + 16))(v10, a1 + *(int *)(v11 + 36));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a4 + 16) + 8) + 16))(a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, a3);
}

uint64_t CRDTRegister<>.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = (void *)MEMORY[0x1F4188790](a1);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1C4498698();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, v2 + *(int *)(a2 + 36), v4);
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v11, v12);
  sub_1C4498348();
  (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
}

uint64_t sub_1C423A168(uint64_t a1, uint64_t a2)
{
  return CRDTRegister<>.encode(to:)(a1, a2);
}

uint64_t CRDTRegister.Partial.merge(delta:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v136 = a1;
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v118 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v134 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  unint64_t v129 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v122 = (char *)&v115 - v9;
  MEMORY[0x1F4188790](v8);
  unint64_t v128 = (char *)&v115 - v10;
  uint64_t v138 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v11 = MEMORY[0x1F4188790](v138);
  uint64_t v123 = (uint64_t)&v115 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v124 = (uint64_t)&v115 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  unint64_t v133 = (void (*)(uint64_t, char *, uint64_t))((char *)&v115 - v16);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v127 = (uint64_t)&v115 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  unint64_t v132 = (char *)&v115 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v119 = (uint64_t)&v115 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v120 = (uint64_t)&v115 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v121 = (uint64_t)&v115 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v131 = (char *)&v115 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v130 = (char *)&v115 - v29;
  uint64_t v135 = type metadata accessor for CRDTRegister();
  uint64_t v137 = *(void *)(v135 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v135);
  uint64_t v32 = (char *)&v115 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x1F4188790](v30);
  uint64_t v35 = (char *)&v115 - v34;
  uint64_t v36 = MEMORY[0x1F4188790](v33);
  uint64_t v38 = (char *)&v115 - v37;
  MEMORY[0x1F4188790](v36);
  uint64_t v40 = (char *)&v115 - v39;
  uint64_t v116 = v5;
  uint64_t v117 = v4;
  uint64_t v41 = type metadata accessor for CRDTRegister.Partial.PartialCases();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v43 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v45 = (char *)&v115 - v44;
  uint64_t v46 = (char *)&v115 + *(int *)(v43 + 56) - v44;
  uint64_t v125 = *(void *)(v41 - 8);
  uint64_t v126 = v3;
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v125 + 16);
  v47((char *)&v115 - v44, v3, v41);
  v47(v46, v136, v41);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v77 = (uint64_t)v130;
    uint64_t v76 = (uint64_t)v131;
    uint64_t v78 = (uint64_t)v35;
    uint64_t v79 = AssociatedTypeWitness;
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v106 = v137;
      uint64_t v107 = *(void (**)(char *, char *, uint64_t))(v137 + 32);
      uint64_t v108 = v135;
      v107(v40, v45, v135);
      v107(v38, v46, v108);
      CRDTRegister.merge(_:)((uint64_t)v38, v108);
      (*(void (**)(char *, uint64_t))(v106 + 8))(v38, v108);
      uint64_t v109 = v126;
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v126, v41);
      v107((char *)v109, v40, v108);
      goto LABEL_18;
    }
    uint64_t v80 = v138;
    uint64_t v81 = &v46[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    uint64_t v82 = *(void (**)(uint64_t, char *, uint64_t))(v137 + 32);
    uint64_t v51 = v135;
    uint64_t v136 = v137 + 32;
    unint64_t v133 = v82;
    v82(v78, v45, v135);
    uint64_t v83 = v77;
    sub_1C3FB4FBC((uint64_t)v46, v77, type metadata accessor for FinalizedTimestamp);
    uint64_t v84 = v134;
    (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v128, v81, v79);
    sub_1C3FB7758(v78, v76, type metadata accessor for FinalizedTimestamp);
    uint64_t v85 = *(int *)(v80 + 20);
    uint64_t v86 = v83;
    uint64_t v87 = *(void *)(v83 + v85);
    uint64_t v88 = *(void *)(v76 + v85);
    if (v87 == v88)
    {
      char v89 = sub_1C410BE0C();
      sub_1C3FB7638(v76, type metadata accessor for FinalizedTimestamp);
      if ((v89 & 1) == 0) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1C3FB7638(v76, type metadata accessor for FinalizedTimestamp);
      if (v87 >= v88)
      {
LABEL_10:
        unint64_t v132 = (char *)v78;
        uint64_t v90 = v121;
        sub_1C3FB7758(v78, v121, type metadata accessor for FinalizedTimestamp);
        uint64_t v91 = *(void *)(v90 + *(int *)(v138 + 20));
        uint64_t v92 = *(void *)(v86 + v85);
        uint64_t v93 = v120;
        sub_1C3FB7758(v90, v120, type metadata accessor for FinalizedTimestamp);
        uint64_t v94 = v119;
        sub_1C3FB7758(v86, v119, type metadata accessor for FinalizedTimestamp);
        uint64_t v95 = v128;
        if (v91 == v92)
        {
          char v96 = sub_1C4496618();
          sub_1C3FB7638(v94, type metadata accessor for FinalizedTimestamp);
          sub_1C3FB7638(v93, type metadata accessor for FinalizedTimestamp);
          sub_1C3FB7638(v90, type metadata accessor for FinalizedTimestamp);
          if (v96)
          {
            uint64_t v97 = v135;
            uint64_t v98 = v132;
            char v99 = (*(uint64_t (**)(char *, uint64_t))(v117 + 96))(v95, v116);
            (*(void (**)(char *, uint64_t))(v84 + 8))(v95, AssociatedTypeWitness);
            sub_1C3FB7638(v86, type metadata accessor for FinalizedTimestamp);
            if ((v99 & 1) == 0)
            {
              (*(void (**)(char *, uint64_t))(v137 + 8))(v98, v97);
              goto LABEL_30;
            }
            uint64_t v100 = v126;
            (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v126, v41);
            v133(v100, v98, v97);
LABEL_18:
            swift_storeEnumTagMultiPayload();
            char v75 = 1;
            return v75 & 1;
          }
        }
        else
        {
          sub_1C3FB7638(v94, type metadata accessor for FinalizedTimestamp);
          sub_1C3FB7638(v93, type metadata accessor for FinalizedTimestamp);
          sub_1C3FB7638(v90, type metadata accessor for FinalizedTimestamp);
        }
        (*(void (**)(char *, uint64_t))(v84 + 8))(v95, AssociatedTypeWitness);
        sub_1C3FB7638(v86, type metadata accessor for FinalizedTimestamp);
        (*(void (**)(char *, uint64_t))(v137 + 8))(v132, v135);
        goto LABEL_30;
      }
    }
    (*(void (**)(char *, uint64_t))(v84 + 8))(v128, AssociatedTypeWitness);
    sub_1C3FB7638(v86, type metadata accessor for FinalizedTimestamp);
    uint64_t v112 = v137;
    goto LABEL_27;
  }
  uint64_t v48 = v32;
  uint64_t v49 = (uint64_t)v132;
  uint64_t v50 = (uint64_t)v133;
  uint64_t v51 = AssociatedTypeWitness;
  uint64_t v52 = swift_getTupleTypeMetadata2();
  uint64_t v53 = *(int *)(v52 + 48);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v78 = (uint64_t)&v45[v53];
    uint64_t v101 = v49;
    sub_1C3FB4FBC((uint64_t)v45, v49, type metadata accessor for FinalizedTimestamp);
    uint64_t v102 = v135;
    (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v48, v46, v135);
    uint64_t v103 = *(int *)(v138 + 20);
    uint64_t v104 = *(void *)(v101 + v103);
    uint64_t v105 = *(void *)&v48[v103];
    if (v104 == v105)
    {
      if ((sub_1C410BE0C() & 1) == 0)
      {
        char v75 = sub_1C410BE0C();
LABEL_31:
        uint64_t v113 = v134;
        (*(void (**)(char *, uint64_t))(v137 + 8))(v48, v102);
        sub_1C3FB7638(v101, type metadata accessor for FinalizedTimestamp);
        (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v78, v51);
        return v75 & 1;
      }
    }
    else if (v104 >= v105)
    {
      char v75 = v105 < v104;
      goto LABEL_31;
    }
    (*(void (**)(char *, uint64_t))(v137 + 8))(v48, v102);
    sub_1C3FB7638(v101, type metadata accessor for FinalizedTimestamp);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v118 - 8) + 24))(v126, v136);
    uint64_t v112 = v134;
LABEL_27:
    (*(void (**)(uint64_t, uint64_t))(v112 + 8))(v78, v51);
    char v75 = 1;
    return v75 & 1;
  }
  uint64_t v136 = v52;
  uint64_t v137 = v41;
  uint64_t v54 = v127;
  sub_1C3FB4FBC((uint64_t)v45, v127, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB4FBC((uint64_t)v46, v50, type metadata accessor for FinalizedTimestamp);
  uint64_t v55 = v51;
  uint64_t v56 = v134;
  uint64_t v57 = *(void (**)(void))(v134 + 32);
  uint64_t v58 = v122;
  v57();
  ((void (*)(char *, char *, uint64_t))v57)(v129, &v46[v53], v55);
  uint64_t v59 = *(int *)(v138 + 20);
  uint64_t v60 = *(void *)(v54 + v59);
  uint64_t v61 = *(void *)(v50 + v59);
  uint64_t v62 = v54;
  uint64_t v63 = v50;
  uint64_t v64 = v124;
  sub_1C3FB7758(v62, v124, type metadata accessor for FinalizedTimestamp);
  uint64_t v65 = v50;
  uint64_t v66 = v123;
  sub_1C3FB7758(v65, v123, type metadata accessor for FinalizedTimestamp);
  if (v60 != v61)
  {
    sub_1C3FB7638(v66, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638(v64, type metadata accessor for FinalizedTimestamp);
    goto LABEL_20;
  }
  char v67 = sub_1C4496618();
  sub_1C3FB7638(v66, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638(v64, type metadata accessor for FinalizedTimestamp);
  if ((v67 & 1) == 0)
  {
LABEL_20:
    uint64_t v110 = *(void (**)(char *, uint64_t))(v56 + 8);
    uint64_t v111 = AssociatedTypeWitness;
    v110(v129, AssociatedTypeWitness);
    v110(v58, v111);
    sub_1C3FB7638(v63, type metadata accessor for FinalizedTimestamp);
LABEL_21:
    sub_1C3FB7638(v127, type metadata accessor for FinalizedTimestamp);
LABEL_30:
    char v75 = 0;
    return v75 & 1;
  }
  uint64_t v68 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v70 = v129;
  char v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 16))(v129, v68, AssociatedConformanceWitness);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v56 + 8);
  v72(v70, v68);
  sub_1C3FB7638(v63, type metadata accessor for FinalizedTimestamp);
  if ((v71 & 1) == 0)
  {
    v72(v58, v68);
    goto LABEL_21;
  }
  uint64_t v73 = v126;
  (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v126, v137);
  uint64_t v74 = v73 + *(int *)(v136 + 48);
  sub_1C3FB4FBC(v127, v73, type metadata accessor for FinalizedTimestamp);
  ((void (*)(uint64_t, char *, uint64_t))v57)(v74, v58, v68);
  char v75 = 1;
  swift_storeEnumTagMultiPayload();
  return v75 & 1;
}

uint64_t CRDTRegister.Partial.canMerge(delta:)(char *a1, uint64_t a2)
{
  unint64_t v129 = a1;
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v110 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v109 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v4 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v123 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v118 = (char *)&v108 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v124 = (char *)&v108 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v122 = (char *)&v108 - v10;
  uint64_t v127 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v11 = MEMORY[0x1F4188790](v127);
  uint64_t v116 = (uint64_t)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v117 = (uint64_t)&v108 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v121 = (char *)&v108 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v120 = (char *)&v108 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v115 = (uint64_t)&v108 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v114 = (uint64_t)&v108 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v119 = (char *)&v108 - v24;
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v113 = (uint64_t)&v108 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v108 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v108 - v30;
  uint64_t v32 = type metadata accessor for CRDTRegister();
  uint64_t v125 = *(void *)(v32 - 8);
  uint64_t v126 = v32;
  uint64_t v33 = MEMORY[0x1F4188790](v32);
  uint64_t v35 = (char *)&v108 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v37 = (char *)&v108 - v36;
  uint64_t v111 = v5;
  uint64_t v112 = v2;
  uint64_t v38 = type metadata accessor for CRDTRegister.Partial.PartialCases();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v40 = MEMORY[0x1F4188790](TupleTypeMetadata2 - 8);
  uint64_t v42 = (char *)&v108 - v41;
  uint64_t v43 = (char *)&v108 + *(int *)(v40 + 56) - v41;
  uint64_t v44 = *(void *)(v38 - 8);
  uint64_t v45 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
  v45((char *)&v108 - v41, v128, v38);
  v45(v43, (uint64_t)v129, v38);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v71 = (uint64_t)v29;
    unint64_t v129 = v37;
    uint64_t v72 = v127;
    uint64_t v73 = v122;
    uint64_t v74 = AssociatedTypeWitness;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v75 = v72;
      uint64_t v76 = &v43[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v77 = (uint64_t)v129;
      (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v129, v42, v126);
      uint64_t v78 = (uint64_t)v43;
      uint64_t v79 = v31;
      sub_1C3FB4FBC(v78, (uint64_t)v31, type metadata accessor for FinalizedTimestamp);
      uint64_t v80 = v123;
      uint64_t v81 = v73;
      uint64_t v82 = v74;
      (*(void (**)(char *, char *, uint64_t))(v123 + 32))(v73, v76, v74);
      uint64_t v83 = *(int *)(v75 + 20);
      uint64_t v84 = (uint64_t)v79;
      uint64_t v85 = *(void *)&v79[v83];
      uint64_t v86 = *(void *)(v77 + v83);
      if (v85 == v86)
      {
        if ((sub_1C410BE0C() & 1) == 0)
        {
LABEL_9:
          uint64_t v87 = v77;
          uint64_t v88 = v71;
          sub_1C3FB7758(v87, v71, type metadata accessor for FinalizedTimestamp);
          uint64_t v89 = v113;
          sub_1C3FB7758(v84, v113, type metadata accessor for FinalizedTimestamp);
          if (v85 == v86)
          {
            char v90 = sub_1C4496618();
            sub_1C3FB7638(v89, type metadata accessor for FinalizedTimestamp);
            sub_1C3FB7638(v88, type metadata accessor for FinalizedTimestamp);
            uint64_t v91 = v125;
            if (v90)
            {
              uint64_t v92 = v126;
              uint64_t v93 = v109;
              (*(void (**)(char *, char *))(*(void *)(*(void *)(v126 + 16) - 8) + 16))(v109, &v129[*(int *)(v126 + 36)]);
              uint64_t v94 = v112;
              char v69 = (*(uint64_t (**)(char *, uint64_t))(v111 + 88))(v81, v112);
              (*(void (**)(char *, uint64_t))(v110 + 8))(v93, v94);
              (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v82);
              sub_1C3FB7638(v84, type metadata accessor for FinalizedTimestamp);
              (*(void (**)(char *, uint64_t))(v91 + 8))(v129, v92);
              return v69 & 1;
            }
          }
          else
          {
            sub_1C3FB7638(v89, type metadata accessor for FinalizedTimestamp);
            sub_1C3FB7638(v88, type metadata accessor for FinalizedTimestamp);
            uint64_t v91 = v125;
          }
          (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v74);
          sub_1C3FB7638(v84, type metadata accessor for FinalizedTimestamp);
          (*(void (**)(char *, uint64_t))(v91 + 8))(v129, v126);
          goto LABEL_24;
        }
      }
      else if (v85 >= v86)
      {
        goto LABEL_9;
      }
      (*(void (**)(char *, uint64_t))(v80 + 8))(v81, v74);
      sub_1C3FB7638(v84, type metadata accessor for FinalizedTimestamp);
      (*(void (**)(uint64_t, uint64_t))(v125 + 8))(v77, v126);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v38);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v42, v126);
    }
    char v69 = 1;
    return v69 & 1;
  }
  unint64_t v129 = v35;
  uint64_t v46 = (uint64_t)v119;
  uint64_t v47 = (uint64_t)v120;
  uint64_t v48 = (uint64_t)v121;
  uint64_t v49 = v124;
  uint64_t v50 = v127;
  uint64_t v51 = *(int *)(swift_getTupleTypeMetadata2() + 48);
  uint64_t v52 = &v42[v51];
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v53 = &v43[v51];
    sub_1C3FB4FBC((uint64_t)v42, v47, type metadata accessor for FinalizedTimestamp);
    uint64_t v54 = v48;
    sub_1C3FB4FBC((uint64_t)v43, v48, type metadata accessor for FinalizedTimestamp);
    uint64_t v55 = v123;
    uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v123 + 32);
    uint64_t v57 = v49;
    uint64_t v58 = AssociatedTypeWitness;
    v56(v57, v52, AssociatedTypeWitness);
    v56(v118, v53, v58);
    uint64_t v59 = *(int *)(v50 + 20);
    uint64_t v60 = v47;
    uint64_t v61 = *(void *)(v47 + v59);
    uint64_t v62 = *(void *)(v54 + v59);
    uint64_t v63 = v117;
    sub_1C3FB7758(v60, v117, type metadata accessor for FinalizedTimestamp);
    uint64_t v64 = v116;
    sub_1C3FB7758(v54, v116, type metadata accessor for FinalizedTimestamp);
    if (v61 == v62)
    {
      char v65 = sub_1C4496618();
      sub_1C3FB7638(v64, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v63, type metadata accessor for FinalizedTimestamp);
      if (v65)
      {
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        char v67 = v118;
        uint64_t v68 = v124;
        char v69 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(v118, v58, AssociatedConformanceWitness);
        uint64_t v70 = *(void (**)(char *, uint64_t))(v55 + 8);
        v70(v67, v58);
        v70(v68, v58);
        sub_1C3FB7638(v54, type metadata accessor for FinalizedTimestamp);
        sub_1C3FB7638(v60, type metadata accessor for FinalizedTimestamp);
        return v69 & 1;
      }
    }
    else
    {
      sub_1C3FB7638(v64, type metadata accessor for FinalizedTimestamp);
      sub_1C3FB7638(v63, type metadata accessor for FinalizedTimestamp);
    }
    uint64_t v104 = *(void (**)(char *, uint64_t))(v55 + 8);
    v104(v118, v58);
    v104(v124, v58);
    sub_1C3FB7638(v54, type metadata accessor for FinalizedTimestamp);
    sub_1C3FB7638(v60, type metadata accessor for FinalizedTimestamp);
LABEL_24:
    char v69 = 0;
    return v69 & 1;
  }
  uint64_t v95 = v46;
  sub_1C3FB4FBC((uint64_t)v42, v46, type metadata accessor for FinalizedTimestamp);
  uint64_t v97 = v125;
  uint64_t v96 = v126;
  uint64_t v98 = (uint64_t)v129;
  (*(void (**)(char *, char *, uint64_t))(v125 + 32))(v129, v43, v126);
  uint64_t v99 = *(int *)(v50 + 20);
  uint64_t v100 = *(void *)(v98 + v99);
  uint64_t v101 = *(void *)(v95 + v99);
  uint64_t v102 = v114;
  sub_1C3FB7758(v98, v114, type metadata accessor for FinalizedTimestamp);
  uint64_t v103 = v115;
  sub_1C3FB7758(v95, v115, type metadata accessor for FinalizedTimestamp);
  if (v100 == v101) {
    char v69 = sub_1C4496618() ^ 1;
  }
  else {
    char v69 = 1;
  }
  uint64_t v105 = v123;
  uint64_t v106 = AssociatedTypeWitness;
  sub_1C3FB7638(v103, type metadata accessor for FinalizedTimestamp);
  sub_1C3FB7638(v102, type metadata accessor for FinalizedTimestamp);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v129, v96);
  sub_1C3FB7638(v95, type metadata accessor for FinalizedTimestamp);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v52, v106);
  return v69 & 1;
}

uint64_t CRDTRegister.Partial.visitReferences(_:)(uint64_t a1)
{
  uint64_t v17 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v4 = (char *)&v16 - v3;
  uint64_t v5 = type metadata accessor for CRDTRegister();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = type metadata accessor for CRDTRegister.Partial.PartialCases();
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v16 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v16 - v10, v16, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for FinalizedTimestamp(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, &v11[*(int *)(TupleTypeMetadata2 + 48)], AssociatedTypeWitness);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 32))(v17, AssociatedTypeWitness, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, AssociatedTypeWitness);
    return sub_1C3FB7638((uint64_t)v11, type metadata accessor for FinalizedTimestamp);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    CRDTRegister.visitReferences(_:)(v17, v5);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

uint64_t CRDTRegister.Partial.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v80 = a4;
  uint64_t v88 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v85 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v76 = (unint64_t *)((char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = type metadata accessor for FinalizedTimestamp(0);
  MEMORY[0x1F4188790](v73);
  uint64_t v77 = (uint64_t)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v86 = (char *)&v72 - v9;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v75 = (uint64_t)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v84 = (uint64_t)&v72 - v13;
  uint64_t v89 = a2;
  uint64_t v90 = a3;
  uint64_t v79 = type metadata accessor for CRDTRegister.Partial.PartialCases();
  uint64_t v78 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v83 = (uint64_t)&v72 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Proto_CRDT(0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v82 = (uint64_t)&v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v72 - v22;
  uint64_t v92 = type metadata accessor for Proto_Register(0);
  MEMORY[0x1F4188790](v92);
  uint64_t v94 = (uint64_t)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v26 = MEMORY[0x1F4188790](v25 - 8);
  uint64_t v81 = (uint64_t *)((char *)&v72 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v72 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v72 - v31;
  uint64_t v33 = a1;
  uint64_t v34 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v34, (uint64_t)v32, &qword_1EBBC04F8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  uint64_t v35 = v19 + 48;
  uint64_t v93 = v36;
  LODWORD(v34) = v36(v32, 1, v18);
  sub_1C3F962E0((uint64_t)v32, &qword_1EBBC04F8);
  if (v34 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v37 = 0xD000000000000014;
    *(void *)(v37 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v37 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  type metadata accessor for CRDecoder.CRDTContainer();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = v33;
  *(void *)(inited + 24) = 0;
  *(unsigned char *)(inited + 32) = 1;
  swift_retain();
  uint64_t v72 = inited;
  sub_1C3FBA924((uint64_t)v23);
  uint64_t v40 = *(void *)&v23[*(int *)(v18 + 20)]
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v40, (uint64_t)v17, &qword_1EBBC0648);
  uint64_t v41 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v17, 1, v41) == 1)
  {
    sub_1C3F962E0((uint64_t)v17, &qword_1EBBC0648);
    uint64_t v42 = v92;
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v42 = v92;
    if (!EnumCaseMultiPayload)
    {
      uint64_t v63 = (uint64_t)v17;
      uint64_t v44 = v94;
      sub_1C3FB4FBC(v63, v94, type metadata accessor for Proto_Register);
      goto LABEL_10;
    }
    sub_1C3FB7638((uint64_t)v17, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
  }
  uint64_t v44 = v94;
  sub_1C4496888();
  uint64_t v45 = *(int *)(v42 + 20);
  if (qword_1EBBBF248 != -1) {
    swift_once();
  }
  *(void *)(v44 + v45) = qword_1EBBBF238;
  swift_retain();
LABEL_10:
  sub_1C3FB7638((uint64_t)v23, type metadata accessor for Proto_CRDT);
  uint64_t v46 = *(int *)(v42 + 20);
  uint64_t v47 = *(void *)(v44 + v46)
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt;
  swift_beginAccess();
  sub_1C3F970C4(v47, (uint64_t)v30, &qword_1EBBC04F8);
  LODWORD(v47) = v93(v30, 1, v18);
  sub_1C3F962E0((uint64_t)v30, &qword_1EBBC04F8);
  if (v47 == 1)
  {
    uint64_t v48 = v83;
    uint64_t v49 = v91;
    CRDTRegister.init(from:)(v33, v89, v90, v83);
    sub_1C3FB7638(v44, type metadata accessor for Proto_Register);
    if (v49)
    {
      swift_setDeallocating();
      return swift_release();
    }
    else
    {
      swift_release();
      uint64_t v64 = v79;
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v80, v48, v64);
    }
  }
  uint64_t v83 = v33;
  uint64_t v92 = v18;
  uint64_t v50 = *(void *)(v44 + v46)
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
  swift_beginAccess();
  uint64_t v51 = &qword_1EBBC0620;
  uint64_t v52 = v84;
  sub_1C3F970C4(v50, v84, &qword_1EBBC0620);
  uint64_t v53 = v44;
  uint64_t v54 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v85 + 48);
  uint64_t v55 = v54(v52, 1, v88);
  sub_1C3F962E0(v52, &qword_1EBBC0620);
  if (v55 == 1)
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v56 = *(void *)(v53 + v46)
      + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt;
  swift_beginAccess();
  uint64_t v51 = v81;
  sub_1C3F970C4(v56, (uint64_t)v81, &qword_1EBBC04F8);
  uint64_t v57 = v92;
  if (v93((char *)v51, 1, v92) == 1)
  {
    uint64_t v53 = v82;
    sub_1C4496888();
    uint64_t v55 = *(int *)(v57 + 20);
    uint64_t v35 = v83;
    if (qword_1EBBC0668 == -1)
    {
LABEL_16:
      *(void *)(v53 + v55) = qword_1EBBC0660;
      swift_retain();
      sub_1C3F962E0((uint64_t)v51, &qword_1EBBC04F8);
      goto LABEL_18;
    }
LABEL_27:
    swift_once();
    goto LABEL_16;
  }
  uint64_t v53 = v82;
  sub_1C3FB4FBC((uint64_t)v51, v82, type metadata accessor for Proto_CRDT);
  uint64_t v35 = v83;
LABEL_18:
  type metadata accessor for CRDecoder(0);
  swift_allocObject();
  swift_retain();
  sub_1C3FB9A38(v53, v35);
  swift_release();
  uint64_t v58 = AssociatedTypeWitness;
  uint64_t v59 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v60 = *(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 8);
  uint64_t v61 = swift_retain();
  uint64_t v62 = v91;
  v60(v61, v58, v59);
  if (v62)
  {
    swift_release();
    swift_release();
    swift_release();
    return sub_1C3FB7638(v94, type metadata accessor for Proto_Register);
  }
  else
  {
    uint64_t v65 = *(void *)(v94 + v46)
        + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
    swift_beginAccess();
    uint64_t v66 = v75;
    sub_1C3F970C4(v65, v75, &qword_1EBBC0620);
    if (v54(v66, 1, v88) == 1)
    {
      char v67 = v76;
      *uint64_t v76 = 0;
      v67[1] = 0;
      sub_1C4496888();
      sub_1C3F962E0(v66, &qword_1EBBC0620);
    }
    else
    {
      char v67 = v76;
      sub_1C3FB4FBC(v66, (uint64_t)v76, type metadata accessor for Proto_Timestamp);
    }
    uint64_t v68 = AssociatedTypeWitness;
    uint64_t v69 = v77;
    uint64_t v70 = v86;
    sub_1C43A3E60(v67, v35, v77);
    sub_1C3FB7638(v94, type metadata accessor for Proto_Register);
    swift_release();
    swift_release();
    uint64_t v71 = v80 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    sub_1C3FB4FBC(v69, v80, type metadata accessor for FinalizedTimestamp);
    (*(void (**)(uint64_t, char *, uint64_t))(v74 + 32))(v71, v70, v68);
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t CRDTRegister.Partial.encode(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v82 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v68 = (uint64_t)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v67 = (uint64_t)v63 - v6;
  uint64_t v7 = type metadata accessor for Proto_CRDT(0);
  uint64_t v65 = *(void *)(v7 - 8);
  uint64_t v66 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v76 = (uint64_t)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0620);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v75 = (uint64_t)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v74 = (uint64_t)v63 - v12;
  uint64_t v78 = type metadata accessor for Proto_Timestamp(0);
  uint64_t v71 = *(void *)(v78 - 8);
  MEMORY[0x1F4188790](v78);
  uint64_t v70 = (void *)((char *)v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v69 = type metadata accessor for Proto_Register(0);
  uint64_t v14 = MEMORY[0x1F4188790](v69);
  uint64_t v64 = (uint64_t)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v77 = (char *)v63 - v16;
  uint64_t v18 = *(void *)(a2 + 16);
  uint64_t v17 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v21 = (char *)v63 - v20;
  uint64_t v22 = type metadata accessor for FinalizedTimestamp(0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)v63 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = type metadata accessor for CRDTRegister();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)v63 - v27;
  uint64_t v72 = v18;
  uint64_t v73 = v17;
  uint64_t v29 = type metadata accessor for CRDTRegister.Partial.PartialCases();
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)v63 - v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))((char *)v63 - v30, v80, v29);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v33 = &v31[*(int *)(swift_getTupleTypeMetadata2() + 48)];
    sub_1C3FB4FBC((uint64_t)v31, (uint64_t)v24, type metadata accessor for FinalizedTimestamp);
    uint64_t v34 = v79;
    (*(void (**)(char *, char *, uint64_t))(v79 + 32))(v21, v33, AssociatedTypeWitness);
    uint64_t v35 = (uint64_t)v81;
    uint64_t v36 = sub_1C3F62C10();
    uint64_t v37 = v21;
    if (v35)
    {
      sub_1C3FB7638((uint64_t)v24, type metadata accessor for FinalizedTimestamp);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v21, AssociatedTypeWitness);
    }
    else
    {
      uint64_t v80 = AssociatedTypeWitness;
      v63[1] = v36;
      swift_retain();
      uint64_t v39 = v77;
      sub_1C4496888();
      uint64_t v40 = *(int *)(v69 + 20);
      if (qword_1EBBBF248 != -1) {
        swift_once();
      }
      *(void *)&v39[v40] = qword_1EBBBF238;
      uint64_t v41 = v70;
      swift_retain();
      sub_1C4496888();
      uint64_t v42 = sub_1C3FA10C4((uint64_t)v24);
      uint64_t v43 = *(int *)(v22 + 20);
      uint64_t v81 = v24;
      uint64_t v44 = *(void *)&v24[v43];
      *uint64_t v41 = v42;
      v41[1] = v44;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Register._StorageClass(0);
        swift_allocObject();
        uint64_t v45 = swift_retain();
        *(void *)&v39[v40] = sub_1C3FB87F8(v45);
        swift_release();
      }
      uint64_t v46 = *(void *)&v39[v40];
      uint64_t v47 = (uint64_t)v41;
      uint64_t v48 = v74;
      sub_1C3FB4FBC(v47, v74, type metadata accessor for Proto_Timestamp);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v48, 0, 1, v78);
      uint64_t v49 = v75;
      sub_1C3F961BC(v48, v75, &qword_1EBBC0620);
      uint64_t v50 = v46
          + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__timestamp;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v49, v50, &qword_1EBBC0620);
      swift_endAccess();
      uint64_t v51 = swift_release();
      MEMORY[0x1F4188790](v51);
      uint64_t v52 = v73;
      v63[-4] = v72;
      v63[-3] = v52;
      uint64_t v53 = v82;
      v63[-2] = v37;
      v63[-1] = v53;
      uint64_t v54 = v76;
      sub_1C3F5585C((void (*)(uint64_t))sub_1C423D624, v76);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        type metadata accessor for Proto_Register._StorageClass(0);
        swift_allocObject();
        uint64_t v55 = swift_retain();
        *(void *)&v39[v40] = sub_1C3FB87F8(v55);
        swift_release();
      }
      uint64_t v56 = *(void *)&v39[v40];
      uint64_t v57 = v54;
      uint64_t v58 = v67;
      sub_1C3FB4FBC(v57, v67, type metadata accessor for Proto_CRDT);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v65 + 56))(v58, 0, 1, v66);
      uint64_t v59 = (uint64_t)v39;
      uint64_t v60 = v68;
      sub_1C3F961BC(v58, v68, &qword_1EBBC04F8);
      uint64_t v61 = v56
          + OBJC_IVAR____TtCV9Coherence14Proto_RegisterP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__partialCrdt;
      swift_beginAccess();
      swift_retain();
      sub_1C3F98338(v60, v61, &qword_1EBBC04F8);
      swift_endAccess();
      swift_release();
      uint64_t v62 = v64;
      sub_1C3FB7758(v59, v64, type metadata accessor for Proto_Register);
      swift_beginAccess();
      sub_1C43F10C0(v62);
      swift_release();
      sub_1C3FB7638(v59, type metadata accessor for Proto_Register);
      sub_1C3FB7638((uint64_t)v81, type metadata accessor for FinalizedTimestamp);
      return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v37, v80);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v31, v25);
    CRDTRegister.encode(to:)();
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
  }
}

uint64_t sub_1C423D3DC(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(swift_getAssociatedConformanceWitness() + 8);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  uint64_t v5 = swift_checkMetadataState();
  return v4(a2, v5, v3);
}

uint64_t sub_1C423D4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return CRDTRegister.Partial.init(from:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1C423D4C8(uint64_t a1, uint64_t a2)
{
  return CRDTRegister.Partial.encode(to:)(a1, a2);
}

uint64_t sub_1C423D4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for FinalizedTimestamp(0);
  uint64_t v6 = v5 - 8;
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 24))(v2 + *(int *)(a2 + 36), a1);
  uint64_t result = sub_1C4496668();
  uint64_t v10 = *(int *)(v6 + 28);
  uint64_t v11 = *(void *)(v2 + v10);
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12)
  {
    __break(1u);
  }
  else
  {
    *(void *)&v8[v10] = v13;
    return sub_1C4158E4C((uint64_t)v8, v2);
  }
  return result;
}

uint64_t type metadata accessor for CRDTRegister()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CRDTRegister.MutatingAction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CRDTRegister.Partial.PartialCases()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for CRDTRegister.Partial()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C423D624()
{
  return sub_1C423D3DC(*(void *)(v0 + 32), *(void *)(v0 + 40));
}

_UNKNOWN **sub_1C423D644()
{
  return &protocol witness table for CRDTRegister<A>.Partial;
}

uint64_t sub_1C423D650(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C423D68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_getTm_1(a1, a2, a3, (uint64_t (*)(uint64_t))CRDTRegister.value.getter);
}

uint64_t sub_1C423D6A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CRDTRegister();
  return sub_1C423D4E0(a1, v2);
}

uint64_t sub_1C423D6E4()
{
  return 16;
}

__n128 sub_1C423D6F0(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C423D6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_getTm_1(a1, a2, a3, (uint64_t (*)(uint64_t))CRDTRegister.crdt.getter);
}

uint64_t keypath_getTm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5 = type metadata accessor for CRDTRegister();
  return a4(v5);
}

uint64_t sub_1C423D764()
{
  return 16;
}

__n128 sub_1C423D770(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C423D77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_getTm_1(a1, a2, a3, (uint64_t (*)(uint64_t))CRDTRegister.wrappedValue.getter);
}

uint64_t sub_1C423D798()
{
  return 16;
}

__n128 sub_1C423D7A4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C423D7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return keypath_getTm_1(a1, a2, a3, (uint64_t (*)(uint64_t))CRDTRegister.projectedValue.getter);
}

uint64_t sub_1C423D7CC()
{
  return 16;
}

__n128 sub_1C423D7D8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C423D7E4()
{
  uint64_t result = type metadata accessor for FinalizedTimestamp(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C423D8B0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496678();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unint64_t v12 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 8;
  unsigned int v13 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v13 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || (v12 & ~v11) + *(void *)(*(void *)(v9 - 8) + 64) > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(((unint64_t)a1 + v12) & v17, ((unint64_t)a2 + v12) & v17, v9);
  }
  return a1;
}

uint64_t sub_1C423DA50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C4496678();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = (a1 + ((*(void *)(v5 + 56) + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v7(v8);
}

uint64_t sub_1C423DB0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496678();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48) + 7;
  *(void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 16))(((v8 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v9 + 80) + 8 + a1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((v8 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v9 + 80) + 8 + a2) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1C423DBE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496678();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40) + 7;
  *(void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 24))(((v8 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v9 + 80) + 8 + a1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((v8 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v9 + 80) + 8 + a2) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1C423DCC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496678();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32) + 7;
  *(void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 32))(((v8 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v9 + 80) + 8 + a1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((v8 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v9 + 80) + 8 + a2) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1C423DDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496678();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24) + 7;
  *(void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v9 + 40))(((v8 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v9 + 80) + 8 + a1) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80), ((v8 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v9 + 80) + 8 + a2) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
  return a1;
}

uint64_t sub_1C423DE7C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1C4496678();
  uint64_t v7 = *(void *)(v6 - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v8) {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (!a2) {
    return 0;
  }
  unint64_t v13 = ((*(void *)(*(void *)(v6 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 8;
  if (a2 <= v12) {
    goto LABEL_24;
  }
  unint64_t v14 = (v13 & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v12 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v12)
      {
        if (v8 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *))(v7 + 48);
          return v23(a1);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v11, v10);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = (v13 & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v12 + (v20 | v18) + 1;
}

void sub_1C423E0E8(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C4496678();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(void *)(*(void *)(a4 + 16) - 8);
  uint64_t v12 = *(unsigned int *)(v11 + 84);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v12 <= v10) {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  size_t v15 = ((*(void *)(*(void *)(v8 - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  size_t v16 = ((v15 + v13) & ~v13) + *(void *)(v11 + 64);
  if (a3 <= v14)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v14 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v18 = ~v14 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1C423E3F8);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v10 >= v12)
        {
          if (v10 >= a2)
          {
            uint64_t v24 = *(void (**)(unsigned char *, uint64_t))(v9 + 56);
            v24(a1, a2);
          }
          else if (v15)
          {
            int v23 = ~v10 + a2;
            bzero(a1, v15);
            *(_DWORD *)a1 = v23;
          }
        }
        else
        {
          uint64_t v22 = *(void (**)(unint64_t, uint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15 + v13] & ~v13, a2, v12);
        }
      }
      return;
  }
}

uint64_t sub_1C423E420()
{
  uint64_t v0 = swift_checkMetadataState();
  uint64_t AssociatedTypeWitness = v0;
  if (v2 <= 0x3F)
  {
    void v7[4] = *(void *)(v0 - 8) + 64;
    uint64_t v3 = type metadata accessor for FinalizedTimestamp(319);
    if (v4 > 0x3F)
    {
      return v3;
    }
    else
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      if (v5 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v7[5] = v7;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return AssociatedTypeWitness;
}

void *sub_1C423E56C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = *(void *)(v6 + 64);
  uint64_t v27 = sub_1C4496678();
  uint64_t v8 = *(void *)(v27 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  unint64_t v13 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  unint64_t v14 = v13 & ~v12;
  if (v14 + *(void *)(v11 + 64) > v7) {
    unint64_t v7 = v14 + *(void *)(v11 + 64);
  }
  int v15 = *(_DWORD *)(v8 + 80) | *(_DWORD *)(v6 + 80);
  unsigned int v16 = v15 & 0xF8 | v12;
  if (v16 > 7 || ((v15 | *(_DWORD *)(v11 + 80)) & 0x100000) != 0 || v7 + 1 > 0x18)
  {
    uint64_t v19 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v19 + (((v16 | 7) + 16) & ~(unint64_t)(v16 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v20 = AssociatedTypeWitness;
    unsigned int v21 = a2[v7];
    unsigned int v22 = v21 - 2;
    if (v21 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v23 = v7;
      }
      else {
        uint64_t v23 = 4;
      }
      switch(v23)
      {
        case 1:
          int v24 = *a2;
          if (v7 >= 4) {
            goto LABEL_26;
          }
          goto LABEL_22;
        case 2:
          int v24 = *(unsigned __int16 *)a2;
          if (v7 >= 4) {
            goto LABEL_26;
          }
          goto LABEL_22;
        case 3:
          int v24 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v7 < 4) {
            goto LABEL_22;
          }
          goto LABEL_26;
        case 4:
          int v24 = *(_DWORD *)a2;
          if (v7 < 4)
          {
LABEL_22:
            unsigned int v21 = (v24 | (v22 << (8 * v7))) + 2;
            break;
          }
LABEL_26:
          if (v24 != -1) {
            goto LABEL_27;
          }
          goto LABEL_24;
        default:
          break;
      }
    }
    if (v21 == 1)
    {
LABEL_24:
      uint64_t v25 = ~v12;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v27);
      *(void *)(((unint64_t)a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))(((unint64_t)a1 + v13) & v25, (unint64_t)&a2[v13] & v25, v20);
      *((unsigned char *)a1 + v7) = 1;
    }
    else
    {
LABEL_27:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((unsigned char *)a1 + v7) = 0;
    }
  }
  return a1;
}

uint64_t sub_1C423E878(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v22 = *(void *)(v3 - 8);
  unint64_t v4 = *(void *)(v22 + 64);
  uint64_t v5 = sub_1C4496678();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80);
  uint64_t v10 = v7 + v9 + 8;
  unint64_t v11 = (v10 & ~v9) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (v11 <= v4) {
    unint64_t v11 = v4;
  }
  unsigned int v12 = a1[v11];
  unsigned int v13 = v12 - 2;
  if (v12 >= 2)
  {
    if (v11 <= 3) {
      uint64_t v14 = v11;
    }
    else {
      uint64_t v14 = 4;
    }
    switch(v14)
    {
      case 1:
        int v15 = *a1;
        goto LABEL_12;
      case 2:
        int v15 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v15 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v15 = *(_DWORD *)a1;
LABEL_12:
        int v16 = (v15 | (v13 << (8 * v11))) + 2;
        unsigned int v12 = v15 + 2;
        if (v11 < 4) {
          unsigned int v12 = v16;
        }
        break;
      default:
        break;
    }
  }
  if (v12 == 1)
  {
    uint64_t v17 = ~v9;
    uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
    (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    unsigned int v18 = (unsigned __int8 *)((unint64_t)&a1[v10] & v17);
    uint64_t v19 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v23 + 8);
    uint64_t v20 = AssociatedTypeWitness;
  }
  else
  {
    uint64_t v19 = *(uint64_t (**)(unsigned __int8 *, uint64_t))(v22 + 8);
    unsigned int v18 = a1;
    uint64_t v20 = v3;
  }
  return v19(v18, v20);
}

uint64_t sub_1C423EAD4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v23 = *(void *)(v5 - 8);
  unint64_t v6 = *(void *)(v23 + 64);
  uint64_t v7 = sub_1C4496678();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  unint64_t v14 = v13 & ~v12;
  if (v14 + *(void *)(v11 + 64) > v6) {
    unint64_t v6 = v14 + *(void *)(v11 + 64);
  }
  unsigned int v15 = a2[v6];
  unsigned int v16 = v15 - 2;
  if (v15 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v17 = v6;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a2;
        goto LABEL_12;
      case 2:
        int v18 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v18 = *(_DWORD *)a2;
LABEL_12:
        int v19 = (v18 | (v16 << (8 * v6))) + 2;
        unsigned int v15 = v18 + 2;
        if (v6 < 4) {
          unsigned int v15 = v19;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
    uint64_t v20 = ~v12;
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v7);
    *(void *)((a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v13 + a1) & v20, (unint64_t)&a2[v13] & v20, AssociatedTypeWitness);
    char v21 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v5);
    char v21 = 0;
  }
  *(unsigned char *)(a1 + v6) = v21;
  return a1;
}

unsigned __int8 *sub_1C423ED74(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v26 = *(void *)(v5 - 8);
    unint64_t v6 = *(void *)(v26 + 64);
    uint64_t v7 = sub_1C4496678();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v25 = *(void *)(v8 + 64);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    unint64_t v12 = ((v25 + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 8;
    unint64_t v13 = v12 & ~v11;
    if (v13 + *(void *)(v10 + 64) > v6) {
      unint64_t v6 = v13 + *(void *)(v10 + 64);
    }
    unsigned int v14 = a1[v6];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v16 = v6;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a1;
          if (v6 < 4) {
            goto LABEL_14;
          }
          goto LABEL_16;
        case 2:
          int v17 = *(unsigned __int16 *)a1;
          if (v6 >= 4) {
            goto LABEL_16;
          }
          goto LABEL_14;
        case 3:
          int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v6 < 4) {
            goto LABEL_14;
          }
          goto LABEL_16;
        case 4:
          int v17 = *(_DWORD *)a1;
          if (v6 < 4) {
LABEL_14:
          }
            unsigned int v14 = (v17 | (v15 << (8 * v6))) + 2;
          else {
LABEL_16:
          }
            unsigned int v14 = v17 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v18 = ~v11;
    if (v14 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(a1, v7);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v12] & v18, AssociatedTypeWitness);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v26 + 8))(a1, v5);
    }
    unsigned int v19 = a2[v6];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v21 = v6;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *a2;
          if (v6 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_30;
        case 2:
          int v22 = *(unsigned __int16 *)a2;
          if (v6 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_30;
        case 3:
          int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v6 < 4) {
            goto LABEL_30;
          }
          goto LABEL_34;
        case 4:
          int v22 = *(_DWORD *)a2;
          if (v6 < 4)
          {
LABEL_30:
            unsigned int v19 = (v22 | (v20 << (8 * v6))) + 2;
            break;
          }
LABEL_34:
          if (v22 != -1) {
            goto LABEL_35;
          }
          goto LABEL_32;
        default:
          break;
      }
    }
    if (v19 == 1)
    {
LABEL_32:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, v7);
      *(void *)((unint64_t)&a1[v25 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v25 + 7] & 0xFFFFFFFFFFFFFFF8);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((unint64_t)&a1[v12] & v18, (unint64_t)&a2[v12] & v18, AssociatedTypeWitness);
      char v23 = 1;
    }
    else
    {
LABEL_35:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v26 + 16))(a1, a2, v5);
      char v23 = 0;
    }
    a1[v6] = v23;
  }
  return a1;
}

uint64_t sub_1C423F13C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v23 = *(void *)(v5 - 8);
  unint64_t v6 = *(void *)(v23 + 64);
  uint64_t v7 = sub_1C4496678();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + v12 + 8;
  unint64_t v14 = v13 & ~v12;
  if (v14 + *(void *)(v11 + 64) > v6) {
    unint64_t v6 = v14 + *(void *)(v11 + 64);
  }
  unsigned int v15 = a2[v6];
  unsigned int v16 = v15 - 2;
  if (v15 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v17 = v6;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a2;
        goto LABEL_12;
      case 2:
        int v18 = *(unsigned __int16 *)a2;
        goto LABEL_12;
      case 3:
        int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_12;
      case 4:
        int v18 = *(_DWORD *)a2;
LABEL_12:
        int v19 = (v18 | (v16 << (8 * v6))) + 2;
        unsigned int v15 = v18 + 2;
        if (v6 < 4) {
          unsigned int v15 = v19;
        }
        break;
      default:
        break;
    }
  }
  if (v15 == 1)
  {
    uint64_t v20 = ~v12;
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v8 + 32))(a1, a2, v7);
    *(void *)((a1 + v9 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))((v13 + a1) & v20, (unint64_t)&a2[v13] & v20, AssociatedTypeWitness);
    char v21 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v5);
    char v21 = 0;
  }
  *(unsigned char *)(a1 + v6) = v21;
  return a1;
}

unsigned __int8 *sub_1C423F3DC(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v26 = *(void *)(v5 - 8);
    unint64_t v6 = *(void *)(v26 + 64);
    uint64_t v7 = sub_1C4496678();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v25 = *(void *)(v8 + 64);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    unint64_t v12 = ((v25 + 7) & 0xFFFFFFFFFFFFFFF8) + v11 + 8;
    unint64_t v13 = v12 & ~v11;
    if (v13 + *(void *)(v10 + 64) > v6) {
      unint64_t v6 = v13 + *(void *)(v10 + 64);
    }
    unsigned int v14 = a1[v6];
    unsigned int v15 = v14 - 2;
    if (v14 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v16 = v6;
      }
      else {
        uint64_t v16 = 4;
      }
      switch(v16)
      {
        case 1:
          int v17 = *a1;
          if (v6 < 4) {
            goto LABEL_14;
          }
          goto LABEL_16;
        case 2:
          int v17 = *(unsigned __int16 *)a1;
          if (v6 >= 4) {
            goto LABEL_16;
          }
          goto LABEL_14;
        case 3:
          int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v6 < 4) {
            goto LABEL_14;
          }
          goto LABEL_16;
        case 4:
          int v17 = *(_DWORD *)a1;
          if (v6 < 4) {
LABEL_14:
          }
            unsigned int v14 = (v17 | (v15 << (8 * v6))) + 2;
          else {
LABEL_16:
          }
            unsigned int v14 = v17 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v18 = ~v11;
    if (v14 == 1)
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v8 + 8))(a1, v7);
      (*(void (**)(unint64_t, uint64_t))(v10 + 8))((unint64_t)&a1[v12] & v18, AssociatedTypeWitness);
    }
    else
    {
      (*(void (**)(unsigned __int8 *, uint64_t))(v26 + 8))(a1, v5);
    }
    unsigned int v19 = a2[v6];
    unsigned int v20 = v19 - 2;
    if (v19 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v21 = v6;
      }
      else {
        uint64_t v21 = 4;
      }
      switch(v21)
      {
        case 1:
          int v22 = *a2;
          if (v6 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_30;
        case 2:
          int v22 = *(unsigned __int16 *)a2;
          if (v6 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_30;
        case 3:
          int v22 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v6 < 4) {
            goto LABEL_30;
          }
          goto LABEL_34;
        case 4:
          int v22 = *(_DWORD *)a2;
          if (v6 < 4)
          {
LABEL_30:
            unsigned int v19 = (v22 | (v20 << (8 * v6))) + 2;
            break;
          }
LABEL_34:
          if (v22 != -1) {
            goto LABEL_35;
          }
          goto LABEL_32;
        default:
          break;
      }
    }
    if (v19 == 1)
    {
LABEL_32:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v8 + 32))(a1, a2, v7);
      *(void *)((unint64_t)&a1[v25 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v25 + 7] & 0xFFFFFFFFFFFFFFF8);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 32))((unint64_t)&a1[v12] & v18, (unint64_t)&a2[v12] & v18, AssociatedTypeWitness);
      char v23 = 1;
    }
    else
    {
LABEL_35:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v26 + 32))(a1, a2, v5);
      char v23 = 0;
    }
    a1[v6] = v23;
  }
  return a1;
}

uint64_t sub_1C423F7A4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  unint64_t v6 = (*(void *)(*(void *)(sub_1C4496678() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = ((v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
     + *(void *)(v7 + 64);
  if (v8 <= v5) {
    unint64_t v9 = v5;
  }
  else {
    unint64_t v9 = v8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  unint64_t v10 = v9 + 1;
  char v11 = 8 * (v9 + 1);
  if ((v9 + 1) <= 3)
  {
    unsigned int v14 = ((a2 + ~(-1 << v11) - 254) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      unsigned int v16 = *((unsigned __int8 *)a1 + v9);
      if (v16 >= 2) {
        return (v16 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v10 | v15) + 255;
}

void sub_1C423F9A4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v7 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v8 = (*(void *)(*(void *)(sub_1C4496678() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v10 = ((v8 + *(unsigned __int8 *)(v9 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
      + *(void *)(v9 + 64);
  if (v10 <= v7) {
    unint64_t v10 = v7;
  }
  size_t v11 = v10 + 1;
  if (a3 < 0xFF)
  {
    int v12 = 0;
  }
  else if (v11 <= 3)
  {
    unsigned int v15 = ((a3 + ~(-1 << (8 * v11)) - 254) >> (8 * v11)) + 1;
    if (HIWORD(v15))
    {
      int v12 = 4;
    }
    else if (v15 >= 0x100)
    {
      int v12 = 2;
    }
    else
    {
      int v12 = v15 > 1;
    }
  }
  else
  {
    int v12 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v13 = a2 - 255;
    if (v11 < 4)
    {
      int v14 = (v13 >> (8 * v11)) + 1;
      if (v10 != -1)
      {
        int v16 = v13 & ~(-1 << (8 * v11));
        bzero(a1, v11);
        if (v11 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v11 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10 + 1);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v11] = v14;
        break;
      case 2:
        *(_WORD *)&a1[v11] = v14;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C423FC18);
      case 4:
        *(_DWORD *)&a1[v11] = v14;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v12)
    {
      case 1:
        a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v11] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v11] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v10] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C423FC40(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  unint64_t v4 = (*(void *)(*(void *)(sub_1C4496678() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = ((v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(void *)(v5 + 64);
  if (v6 <= v3) {
    unint64_t v6 = v3;
  }
  uint64_t result = a1[v6];
  if (result >= 2)
  {
    if (v6 <= 3) {
      uint64_t v8 = v6;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_12;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v10 = (v9 | ((result - 2) << (8 * v6))) + 2;
        unsigned int v11 = v9 + 2;
        if (v6 >= 4) {
          uint64_t result = v11;
        }
        else {
          uint64_t result = v10;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C423FDBC(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (a2 > 1)
  {
    size_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    unint64_t v10 = (*(void *)(*(void *)(sub_1C4496678() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    unint64_t v12 = ((v10 + *(unsigned __int8 *)(v11 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))
        + *(void *)(v11 + 64);
    if (v12 <= v9) {
      size_t v13 = v9;
    }
    else {
      size_t v13 = v12;
    }
    unsigned int v14 = a2 - 2;
    if (v13 < 4)
    {
      unsigned int v15 = v14 >> (8 * v13);
      int v16 = v14 & ~(-1 << (8 * v13));
      a1[v13] = v15 + 2;
      bzero(a1, v13);
      if (v13 == 3)
      {
        *(_WORD *)a1 = v16;
        a1[2] = BYTE2(v16);
      }
      else if (v13 == 2)
      {
        *(_WORD *)a1 = v16;
      }
      else
      {
        *a1 = v16;
      }
    }
    else
    {
      a1[v13] = 2;
      bzero(a1, v13);
      *(_DWORD *)a1 = v14;
    }
  }
  else
  {
    uint64_t v6 = *(void *)(sub_1C4496678() - 8);
    uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    unint64_t v8 = ((((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
       + *(void *)(v7 + 64);
    if (v8 <= *(void *)(v5 + 64)) {
      unint64_t v8 = *(void *)(v5 + 64);
    }
    a1[v8] = a2;
  }
}

uint64_t sub_1C4240008()
{
  uint64_t result = type metadata accessor for CRDTRegister.Partial.PartialCases();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C42400B8()
{
  uint64_t result = type metadata accessor for CRDTRegister();
  if (v1 <= 0x3F)
  {
    v4[4] = *(void *)(result - 8) + 64;
    uint64_t result = type metadata accessor for FinalizedTimestamp(319);
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v4[5] = v4;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

void *sub_1C42401F0(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v32 = sub_1C4496678();
  uint64_t v6 = *(void *)(v32 - 8);
  uint64_t v31 = *(void *)(v6 + 64);
  unint64_t v7 = ((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  int v8 = *(_DWORD *)(*(void *)(*(void *)(a3 + 16) - 8) + 80);
  uint64_t v9 = v8;
  unint64_t v28 = v7 + v8;
  uint64_t v29 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v10 = ((v7 + v9) & ~v9) + *(void *)(v29 + 64);
  uint64_t v30 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v12 = *(_DWORD *)(*(void *)(AssociatedTypeWitness - 8) + 80);
  uint64_t v13 = v12;
  unint64_t v14 = v7 + v12;
  uint64_t v15 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (((v7 + v13) & ~v13) + v15 <= v10) {
    unint64_t v16 = v10;
  }
  else {
    unint64_t v16 = ((v7 + v12) & ~(unint64_t)v12) + v15;
  }
  unsigned int v17 = v12 | *(_DWORD *)(v6 + 80) & 0xF8 | v8;
  int v18 = (v12 | v8 | *(_DWORD *)(v6 + 80)) & 0x100000;
  if (v17 > 7 || v18 != 0 || v16 + 1 > 0x18)
  {
    uint64_t v21 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v21 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v22 = a2[v16];
    if (v22 < 2)
    {
      uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
    }
    else
    {
      if (v16 <= 3) {
        uint64_t v23 = v16;
      }
      else {
        uint64_t v23 = 4;
      }
      uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
      switch(v23)
      {
        case 1:
          int v25 = *a2;
          if (v16 < 4) {
            goto LABEL_24;
          }
          goto LABEL_26;
        case 2:
          int v25 = *(unsigned __int16 *)a2;
          if (v16 >= 4) {
            goto LABEL_26;
          }
          goto LABEL_24;
        case 3:
          int v25 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v16 < 4) {
            goto LABEL_24;
          }
          goto LABEL_26;
        case 4:
          int v25 = *(_DWORD *)a2;
          if (v16 < 4) {
LABEL_24:
          }
            unsigned int v22 = (v25 | ((v22 - 2) << (8 * v16))) + 2;
          else {
LABEL_26:
          }
            unsigned int v22 = v25 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v26 = AssociatedTypeWitness;
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v32);
    *(void *)(((unint64_t)a1 + v31 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v31 + 7] & 0xFFFFFFFFFFFFFFF8);
    if (v22 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v24 + 16))(((unint64_t)a1 + v14) & ~v13, (unint64_t)&a2[v14] & ~v13, v26);
      *((unsigned char *)a1 + v16) = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v29 + 16))(((unint64_t)a1 + v28) & ~v9, (unint64_t)&a2[v28] & ~v9, v30);
      *((unsigned char *)a1 + v16) = 0;
    }
  }
  return a1;
}

uint64_t sub_1C424052C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C4496678();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = ((*(void *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v25 = *(void *)(v7 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v9 = v6 + v8;
  unint64_t v10 = ((v6 + v8) & ~v8) + *(void *)(v25 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v13 = v6 + v12;
  unint64_t v14 = (v13 & ~v12) + *(void *)(v24 + 64);
  if (v14 <= v10) {
    unint64_t v14 = v10;
  }
  unsigned int v15 = a1[v14];
  if (v15 >= 2)
  {
    if (v14 <= 3) {
      uint64_t v16 = v14;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a1;
        goto LABEL_12;
      case 2:
        int v17 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v17 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v17 = *(_DWORD *)a1;
LABEL_12:
        int v18 = (v17 | ((v15 - 2) << (8 * v14))) + 2;
        unsigned int v19 = v17 + 2;
        if (v14 >= 4) {
          unsigned int v15 = v19;
        }
        else {
          unsigned int v15 = v18;
        }
        break;
      default:
        break;
    }
  }
  (*(void (**)(unsigned __int8 *, uint64_t))(v5 + 8))(a1, v4);
  if (v15 == 1)
  {
    unint64_t v20 = (unint64_t)&a1[v13] & ~v12;
    uint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t))(v24 + 8);
    uint64_t v22 = AssociatedTypeWitness;
  }
  else
  {
    unint64_t v20 = (unint64_t)&a1[v9] & ~v8;
    uint64_t v21 = *(uint64_t (**)(unint64_t, uint64_t))(v25 + 8);
    uint64_t v22 = v7;
  }
  return v21(v20, v22);
}

uint64_t sub_1C42407A4(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v25 = sub_1C4496678();
  uint64_t v6 = *(void *)(v25 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80);
  uint64_t v22 = v8 + v9;
  uint64_t v23 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v10 = ((v8 + v9) & ~v9) + *(void *)(v23 + 64);
  uint64_t v24 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = *(void *)(v11 + 64);
  if ((v13 & (unint64_t)~v12) + v14 <= v10) {
    unint64_t v15 = v10;
  }
  else {
    unint64_t v15 = (v13 & ~v12) + v14;
  }
  unsigned int v16 = a2[v15];
  if (v16 >= 2)
  {
    if (v15 <= 3) {
      uint64_t v17 = v15;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a2;
        if (v15 < 4) {
          goto LABEL_14;
        }
        goto LABEL_16;
      case 2:
        int v18 = *(unsigned __int16 *)a2;
        if (v15 >= 4) {
          goto LABEL_16;
        }
        goto LABEL_14;
      case 3:
        int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v15 < 4) {
          goto LABEL_14;
        }
        goto LABEL_16;
      case 4:
        int v18 = *(_DWORD *)a2;
        if (v15 < 4) {
LABEL_14:
        }
          unsigned int v16 = (v18 | ((v16 - 2) << (8 * v15))) + 2;
        else {
LABEL_16:
        }
          unsigned int v16 = v18 + 2;
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v25);
  *(void *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
  if (v16 == 1)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 16))((v13 + a1) & ~v12, (unint64_t)&a2[v13] & ~v12, AssociatedTypeWitness);
    char v19 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 16))((v22 + a1) & ~v9, (unint64_t)&a2[v22] & ~v9, v24);
    char v19 = 0;
  }
  *(unsigned char *)(a1 + v15) = v19;
  return a1;
}

unsigned __int8 *sub_1C4240A74(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_1C4496678();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v10 = *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80);
    uint64_t v31 = v9 + v10;
    uint64_t v32 = *(void *)(*(void *)(a3 + 16) - 8);
    unint64_t v11 = ((v9 + v10) & ~v10) + *(void *)(v32 + 64);
    uint64_t v33 = *(void *)(a3 + 16);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v29 = v9 + v14;
    uint64_t v30 = AssociatedTypeWitness;
    unint64_t v15 = (v9 + v14) & ~v14;
    if (v15 + *(void *)(v13 + 64) > v11) {
      unint64_t v11 = v15 + *(void *)(v13 + 64);
    }
    unsigned int v16 = a1[v11];
    if (v16 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v17 = v11;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a1;
          if (v11 < 4) {
            goto LABEL_12;
          }
          goto LABEL_16;
        case 2:
          int v18 = *(unsigned __int16 *)a1;
          if (v11 < 4) {
            goto LABEL_12;
          }
          goto LABEL_16;
        case 3:
          int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v11 < 4) {
            goto LABEL_12;
          }
          goto LABEL_16;
        case 4:
          int v18 = *(_DWORD *)a1;
          if (v11 < 4) {
LABEL_12:
          }
            unsigned int v16 = (v18 | ((v16 - 2) << (8 * v11))) + 2;
          else {
LABEL_16:
          }
            unsigned int v16 = v18 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v19 = ~v10;
    uint64_t v20 = ~v14;
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    if (v16 == 1)
    {
      uint64_t v21 = v30;
      unint64_t v22 = (unint64_t)&a1[v29] & v20;
      uint64_t v23 = v13;
    }
    else
    {
      unint64_t v22 = (unint64_t)&a1[v31] & v19;
      uint64_t v23 = v32;
      uint64_t v21 = v33;
    }
    (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v22, v21);
    unsigned int v24 = a2[v11];
    if (v24 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v25 = v11;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *a2;
          if (v11 < 4) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          if (v11 < 4) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v11 < 4) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 4:
          int v26 = *(_DWORD *)a2;
          if (v11 < 4) {
LABEL_28:
          }
            unsigned int v24 = (v26 | ((v24 - 2) << (8 * v11))) + 2;
          else {
LABEL_32:
          }
            unsigned int v24 = v26 + 2;
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
    *(void *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
    if (v24 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16))((unint64_t)&a1[v29] & v20, (unint64_t)&a2[v29] & v20, v30);
      char v27 = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v32 + 16))((unint64_t)&a1[v31] & v19, (unint64_t)&a2[v31] & v19, v33);
      char v27 = 0;
    }
    a1[v11] = v27;
  }
  return a1;
}

uint64_t sub_1C4240E48(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v25 = sub_1C4496678();
  uint64_t v6 = *(void *)(v25 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  unint64_t v8 = ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v9 = *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80);
  uint64_t v22 = v8 + v9;
  uint64_t v23 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v10 = ((v8 + v9) & ~v9) + *(void *)(v23 + 64);
  uint64_t v24 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v8 + v12;
  uint64_t v14 = *(void *)(v11 + 64);
  if ((v13 & (unint64_t)~v12) + v14 <= v10) {
    unint64_t v15 = v10;
  }
  else {
    unint64_t v15 = (v13 & ~v12) + v14;
  }
  unsigned int v16 = a2[v15];
  if (v16 >= 2)
  {
    if (v15 <= 3) {
      uint64_t v17 = v15;
    }
    else {
      uint64_t v17 = 4;
    }
    switch(v17)
    {
      case 1:
        int v18 = *a2;
        if (v15 < 4) {
          goto LABEL_14;
        }
        goto LABEL_16;
      case 2:
        int v18 = *(unsigned __int16 *)a2;
        if (v15 >= 4) {
          goto LABEL_16;
        }
        goto LABEL_14;
      case 3:
        int v18 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v15 < 4) {
          goto LABEL_14;
        }
        goto LABEL_16;
      case 4:
        int v18 = *(_DWORD *)a2;
        if (v15 < 4) {
LABEL_14:
        }
          unsigned int v16 = (v18 | ((v16 - 2) << (8 * v15))) + 2;
        else {
LABEL_16:
        }
          unsigned int v16 = v18 + 2;
        break;
      default:
        break;
    }
  }
  (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v25);
  *(void *)((a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v7 + 7] & 0xFFFFFFFFFFFFFFF8);
  if (v16 == 1)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v11 + 32))((v13 + a1) & ~v12, (unint64_t)&a2[v13] & ~v12, AssociatedTypeWitness);
    char v19 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v23 + 32))((v22 + a1) & ~v9, (unint64_t)&a2[v22] & ~v9, v24);
    char v19 = 0;
  }
  *(unsigned char *)(a1 + v15) = v19;
  return a1;
}

unsigned __int8 *sub_1C4241118(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_1C4496678();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(void *)(v7 + 64);
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v10 = *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80);
    uint64_t v31 = v9 + v10;
    uint64_t v32 = *(void *)(*(void *)(a3 + 16) - 8);
    unint64_t v11 = ((v9 + v10) & ~v10) + *(void *)(v32 + 64);
    uint64_t v33 = *(void *)(a3 + 16);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v29 = v9 + v14;
    uint64_t v30 = AssociatedTypeWitness;
    unint64_t v15 = (v9 + v14) & ~v14;
    if (v15 + *(void *)(v13 + 64) > v11) {
      unint64_t v11 = v15 + *(void *)(v13 + 64);
    }
    unsigned int v16 = a1[v11];
    if (v16 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v17 = v11;
      }
      else {
        uint64_t v17 = 4;
      }
      switch(v17)
      {
        case 1:
          int v18 = *a1;
          if (v11 < 4) {
            goto LABEL_12;
          }
          goto LABEL_16;
        case 2:
          int v18 = *(unsigned __int16 *)a1;
          if (v11 < 4) {
            goto LABEL_12;
          }
          goto LABEL_16;
        case 3:
          int v18 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v11 < 4) {
            goto LABEL_12;
          }
          goto LABEL_16;
        case 4:
          int v18 = *(_DWORD *)a1;
          if (v11 < 4) {
LABEL_12:
          }
            unsigned int v16 = (v18 | ((v16 - 2) << (8 * v11))) + 2;
          else {
LABEL_16:
          }
            unsigned int v16 = v18 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v19 = ~v10;
    uint64_t v20 = ~v14;
    (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    if (v16 == 1)
    {
      uint64_t v21 = v30;
      unint64_t v22 = (unint64_t)&a1[v29] & v20;
      uint64_t v23 = v13;
    }
    else
    {
      unint64_t v22 = (unint64_t)&a1[v31] & v19;
      uint64_t v23 = v32;
      uint64_t v21 = v33;
    }
    (*(void (**)(unint64_t, uint64_t))(v23 + 8))(v22, v21);
    unsigned int v24 = a2[v11];
    if (v24 >= 2)
    {
      if (v11 <= 3) {
        uint64_t v25 = v11;
      }
      else {
        uint64_t v25 = 4;
      }
      switch(v25)
      {
        case 1:
          int v26 = *a2;
          if (v11 < 4) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 2:
          int v26 = *(unsigned __int16 *)a2;
          if (v11 < 4) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 3:
          int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v11 < 4) {
            goto LABEL_28;
          }
          goto LABEL_32;
        case 4:
          int v26 = *(_DWORD *)a2;
          if (v11 < 4) {
LABEL_28:
          }
            unsigned int v24 = (v26 | ((v24 - 2) << (8 * v11))) + 2;
          else {
LABEL_32:
          }
            unsigned int v24 = v26 + 2;
          break;
        default:
          break;
      }
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
    *(void *)((unint64_t)&a1[v8 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v8 + 7] & 0xFFFFFFFFFFFFFFF8);
    if (v24 == 1)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 32))((unint64_t)&a1[v29] & v20, (unint64_t)&a2[v29] & v20, v30);
      char v27 = 1;
    }
    else
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v32 + 32))((unint64_t)&a1[v31] & v19, (unint64_t)&a2[v31] & v19, v33);
      char v27 = 0;
    }
    a1[v11] = v27;
  }
  return a1;
}

uint64_t sub_1C42414EC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = ((*(void *)(*(void *)(sub_1C4496678() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v7 = ((v6 + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v9 = ((v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + *(void *)(v8 + 64);
  if (v9 <= v7) {
    unint64_t v10 = v7;
  }
  else {
    unint64_t v10 = v9;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_23;
  }
  unint64_t v11 = v10 + 1;
  char v12 = 8 * (v10 + 1);
  if ((v10 + 1) <= 3)
  {
    unsigned int v15 = ((a2 + ~(-1 << v12) - 254) >> v12) + 1;
    if (HIWORD(v15))
    {
      int v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v15 > 0xFF)
    {
      int v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(unsigned __int16 *)((char *)a1 + v11)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v15 < 2)
    {
LABEL_23:
      unsigned int v17 = *((unsigned __int8 *)a1 + v10);
      if (v17 >= 2) {
        return (v17 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((unsigned char *)a1 + v11)) {
    goto LABEL_23;
  }
LABEL_15:
  int v16 = (v13 - 1) << v12;
  if (v11 > 3) {
    int v16 = 0;
  }
  if (v11)
  {
    if (v11 > 3) {
      LODWORD(v11) = 4;
    }
    switch((int)v11)
    {
      case 2:
        LODWORD(v11) = *a1;
        break;
      case 3:
        LODWORD(v11) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v11) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v11) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v11 | v16) + 255;
}

void sub_1C424171C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = ((*(void *)(*(void *)(sub_1C4496678() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v9 = ((v8 + *(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a4 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v11 = ((v8 + *(unsigned __int8 *)(v10 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
      + *(void *)(v10 + 64);
  if (v11 <= v9) {
    unint64_t v11 = v9;
  }
  size_t v12 = v11 + 1;
  if (a3 < 0xFF)
  {
    int v13 = 0;
  }
  else if (v12 <= 3)
  {
    unsigned int v16 = ((a3 + ~(-1 << (8 * v12)) - 254) >> (8 * v12)) + 1;
    if (HIWORD(v16))
    {
      int v13 = 4;
    }
    else if (v16 >= 0x100)
    {
      int v13 = 2;
    }
    else
    {
      int v13 = v16 > 1;
    }
  }
  else
  {
    int v13 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v14 = a2 - 255;
    if (v12 < 4)
    {
      int v15 = (v14 >> (8 * v12)) + 1;
      if (v11 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v11 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v12] = v15;
        break;
      case 2:
        *(_WORD *)&a1[v12] = v15;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C42419B8);
      case 4:
        *(_DWORD *)&a1[v12] = v15;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v13)
    {
      case 1:
        a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v12] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v12] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v11] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C42419E0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v4 = ((*(void *)(*(void *)(sub_1C4496678() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v5 = ((v4 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80))
     + *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = ((v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)) + *(void *)(v6 + 64);
  if (v7 <= v5) {
    unint64_t v7 = v5;
  }
  uint64_t result = a1[v7];
  if (result >= 2)
  {
    if (v7 <= 3) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a1;
        goto LABEL_12;
      case 2:
        int v10 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v10 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v10 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v11 = (v10 | ((result - 2) << (8 * v7))) + 2;
        unsigned int v12 = v10 + 2;
        if (v7 >= 4) {
          uint64_t result = v12;
        }
        else {
          uint64_t result = v11;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C4241B84(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(sub_1C4496678() - 8);
  uint64_t v7 = v6;
  if (a2 > 1)
  {
    unint64_t v13 = ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unint64_t v14 = ((v13 + *(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a3 + 16) - 8) + 80))
        + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    uint64_t v15 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    unint64_t v16 = ((v13 + *(unsigned __int8 *)(v15 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))
        + *(void *)(v15 + 64);
    if (v16 <= v14) {
      size_t v17 = v14;
    }
    else {
      size_t v17 = v16;
    }
    unsigned int v18 = a2 - 2;
    if (v17 < 4)
    {
      unsigned int v19 = v18 >> (8 * v17);
      int v20 = v18 & ~(-1 << (8 * v17));
      a1[v17] = v19 + 2;
      bzero(a1, v17);
      if (v17 == 3)
      {
        *(_WORD *)a1 = v20;
        a1[2] = BYTE2(v20);
      }
      else if (v17 == 2)
      {
        *(_WORD *)a1 = v20;
      }
      else
      {
        *a1 = v20;
      }
    }
    else
    {
      a1[v17] = 2;
      bzero(a1, v17);
      *(_DWORD *)a1 = v18;
    }
  }
  else
  {
    uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
    uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    unint64_t v10 = ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unint64_t v11 = ((v10 + *(unsigned __int8 *)(v9 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
        + *(void *)(v9 + 64);
    unint64_t v12 = ((v10 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
        + *(void *)(v8 + 64);
    if (v11 > v12) {
      unint64_t v12 = v11;
    }
    a1[v12] = a2;
  }
}

uint64_t sub_1C4241E2C()
{
  return sub_1C4239EBC(v0[4], v0[5], v0[2], v0[3]);
}

uint64_t sub_1C4241E4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v88 = a7;
  uint64_t v90 = a6;
  uint64_t v87 = a5;
  uint64_t v100 = a2;
  uint64_t v10 = sub_1C4497B38();
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v83 = (char *)v72 - v12;
  uint64_t v92 = a4;
  uint64_t v94 = *(void *)(a4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = *(void *)(a3 - 8);
  uint64_t v101 = v93;
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v82 = (char *)v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v85 = (char *)v72 - v18;
  uint64_t v19 = type metadata accessor for Proto_Value(0);
  uint64_t v20 = v19 - 8;
  v72[0] = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v99 = (uint64_t)v72 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = a3;
  uint64_t v91 = sub_1C4497B38();
  uint64_t v74 = *(void *)(v91 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v91);
  uint64_t v84 = (char *)v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v89 = (char *)v72 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v103 = (char *)v72 - v26;
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  uint64_t v28 = MEMORY[0x1F4188790](v27 - 8);
  uint64_t v96 = (void (**)(char *, char *, uint64_t))((char *)v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v28);
  uint64_t v31 = (char *)v72 - v30;
  uint64_t v32 = type metadata accessor for Proto_RepeatedValue(0);
  uint64_t v33 = MEMORY[0x1F4188790](v32);
  uint64_t v97 = (void *)((char *)v72 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v33);
  uint64_t v36 = (void *)((char *)v72 - v35);
  uint64_t v37 = *(int *)(v20 + 28);
  uint64_t v73 = a1;
  uint64_t v38 = *(void *)(a1 + v37);
  uint64_t v39 = v38 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v39, (uint64_t)v31, &qword_1EBBBF8A0);
  uint64_t v40 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48);
  int v42 = v41(v31, 1, v40);
  uint64_t v86 = v15;
  if (v42 == 1)
  {
    sub_1C3F962E0((uint64_t)v31, &qword_1EBBBF8A0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 10)
    {
      sub_1C41295F8((uint64_t)v31, (uint64_t)v36);
      goto LABEL_7;
    }
    sub_1C3F8B1C8((uint64_t)v31, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
  }
  *uint64_t v36 = MEMORY[0x1E4FBC860];
  sub_1C4496888();
LABEL_7:
  swift_bridgeObjectRetain();
  sub_1C3F8B1C8((uint64_t)v36, type metadata accessor for Proto_RepeatedValue);
  swift_bridgeObjectRelease();
  uint64_t v43 = v102;
  uint64_t v104 = sub_1C4496F08();
  uint64_t v44 = *(void (**)(char *, void, uint64_t, uint64_t))(v101 + 56);
  v101 += 56;
  uint64_t v98 = v44;
  v44(v103, 1, 1, v43);
  uint64_t v45 = v38 + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v46 = v96;
  sub_1C3F970C4(v45, (uint64_t)v96, &qword_1EBBBF8A0);
  if (v41((char *)v46, 1, v40) == 1)
  {
    sub_1C3F962E0((uint64_t)v46, &qword_1EBBBF8A0);
    uint64_t v47 = v91;
    uint64_t v48 = v89;
    uint64_t v49 = v97;
LABEL_12:
    *uint64_t v49 = MEMORY[0x1E4FBC860];
    sub_1C4496888();
    goto LABEL_13;
  }
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v47 = v91;
  uint64_t v48 = v89;
  uint64_t v49 = v97;
  if (EnumCaseMultiPayload != 10)
  {
    sub_1C3F8B1C8((uint64_t)v46, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_12;
  }
  sub_1C41295F8((uint64_t)v46, (uint64_t)v97);
LABEL_13:
  uint64_t v51 = v95;
  uint64_t v52 = v102;
  uint64_t v53 = *v49;
  swift_bridgeObjectRetain();
  sub_1C3F8B1C8((uint64_t)v49, type metadata accessor for Proto_RepeatedValue);
  uint64_t v54 = *(void *)(v53 + 16);
  v72[1] = v53;
  if (!v54)
  {
LABEL_21:
    swift_release();
    sub_1C3F8B1C8(v73, type metadata accessor for Proto_Value);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v103, v47);
    return v104;
  }
  uint64_t v55 = v53 + ((*(unsigned __int8 *)(v72[0] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72[0] + 80));
  uint64_t v96 = (void (**)(char *, char *, uint64_t))(v74 + 16);
  uint64_t v95 = (unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48);
  uint64_t v80 = (void (**)(char *, char *, uint64_t))(v93 + 32);
  uint64_t v79 = (void (**)(char *, char *, uint64_t))(v93 + 16);
  uint64_t v78 = (void (**)(char *, char *, uint64_t))(v94 + 16);
  uint64_t v77 = (void (**)(char *, void, uint64_t, uint64_t))(v94 + 56);
  uint64_t v76 = (void (**)(char *, uint64_t))(v94 + 8);
  uint64_t v81 = (void (**)(char *, uint64_t))(v93 + 8);
  uint64_t v75 = (void (**)(char *, char *, uint64_t))(v74 + 32);
  uint64_t v94 = *(void *)(v72[0] + 72);
  uint64_t v97 = (uint64_t *)(v74 + 8);
  while (1)
  {
    uint64_t v102 = v54;
    uint64_t v56 = v99;
    sub_1C3F8A1D0(v55, v99);
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    uint64_t v57 = v100;
    swift_retain();
    uint64_t v58 = sub_1C3F974B0(v56, v57);
    swift_release();
    (*v96)(v48, v103, v47);
    if ((*v95)(v48, 1, v52) != 1) {
      break;
    }
    uint64_t v59 = (void (*)(char *, uint64_t))*v97;
    ((void (*)(char *, uint64_t))*v97)(v48, v47);
    uint64_t v60 = v84;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v87 + 8) + 8) + 8))(v58, v52);
    if (v51)
    {
      swift_release();
      sub_1C3F8B1C8(v73, type metadata accessor for Proto_Value);
      swift_bridgeObjectRelease();
      v59(v103, v47);
      return swift_bridgeObjectRelease();
    }
    uint64_t v61 = v103;
    v59(v103, v47);
    v98(v60, 0, 1, v52);
    (*v75)(v61, v60, v47);
LABEL_15:
    v55 += v94;
    uint64_t v54 = v102 - 1;
    if (v102 == 1) {
      goto LABEL_21;
    }
  }
  uint64_t v62 = v85;
  (*v80)(v85, v48, v52);
  uint64_t v63 = v52;
  uint64_t v64 = *(void *)(*(void *)(v88 + 8) + 8);
  uint64_t v65 = *(void (**)(uint64_t, uint64_t, uint64_t))(v64 + 8);
  uint64_t v66 = swift_retain();
  uint64_t v67 = v86;
  uint64_t v93 = v58;
  uint64_t v68 = v92;
  v65(v66, v92, v64);
  if (!v51)
  {
    (*v79)(v82, v62, v63);
    uint64_t v69 = v83;
    (*v78)(v83, v67, v68);
    (*v77)(v69, 0, 1, v68);
    sub_1C4497008();
    sub_1C4497048();
    swift_release();
    (*v76)(v67, v68);
    (*v81)(v62, v63);
    uint64_t v70 = v103;
    uint64_t v47 = v91;
    ((void (*)(char *, uint64_t))*v97)(v103, v91);
    v98(v70, 1, 1, v63);
    uint64_t v52 = v63;
    uint64_t v48 = v89;
    goto LABEL_15;
  }
  swift_release();
  swift_release();
  sub_1C3F8B1C8(v73, type metadata accessor for Proto_Value);
  (*v81)(v62, v63);
  swift_bridgeObjectRelease();
  ((void (*)(char *, uint64_t))*v97)(v103, v91);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C42429E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v34 = a7;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBF8A0);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v32 = (uint64_t)&v30 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Proto_RepeatedValue(0);
  MEMORY[0x1F4188790](v30);
  uint64_t v31 = (uint64_t *)((char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C4496888();
  uint64_t v18 = type metadata accessor for Proto_Value(0);
  uint64_t v19 = *(int *)(v18 + 20);
  if (qword_1EBBBF8C8 != -1) {
    uint64_t v18 = swift_once();
  }
  uint64_t v33 = &v30;
  *(void *)(a8 + v19) = qword_1EBBBF8B8;
  uint64_t v35 = a2;
  MEMORY[0x1F4188790](v18);
  *(&v30 - 6) = a3;
  *(&v30 - 5) = a4;
  *(&v30 - 4) = a5;
  *(&v30 - 3) = a6;
  *(&v30 - 2) = v34;
  *(&v30 - 1) = a1;
  sub_1C4497008();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF60);
  swift_getWitnessTable();
  sub_1C4245E10();
  uint64_t v20 = v36;
  uint64_t v21 = sub_1C4497358();
  if (v20) {
    return sub_1C3F8B1C8(a8, type metadata accessor for Proto_Value);
  }
  uint64_t v23 = v21;
  uint64_t v24 = *(void *)(a8 + v19)
      + OBJC_IVAR____TtCV9Coherence11Proto_ValueP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v25 = v24;
  uint64_t v26 = v32;
  sub_1C3F970C4(v25, v32, &qword_1EBBBF8A0);
  uint64_t v27 = type metadata accessor for Proto_Value.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27) == 1)
  {
    sub_1C3F962E0(v26, &qword_1EBBBF8A0);
LABEL_10:
    uint64_t v29 = v31;
    *uint64_t v31 = MEMORY[0x1E4FBC860];
    sub_1C4496888();
    goto LABEL_11;
  }
  if (swift_getEnumCaseMultiPayload() != 10)
  {
    sub_1C3F8B1C8(v26, type metadata accessor for Proto_Value.OneOf_TaggedOneOf);
    goto LABEL_10;
  }
  uint64_t v28 = v26;
  uint64_t v29 = v31;
  sub_1C41295F8(v28, (uint64_t)v31);
LABEL_11:
  swift_bridgeObjectRelease();
  *uint64_t v29 = v23;
  return sub_1C43EF8B0((uint64_t)v29);
}

uint64_t Dictionary<>.observableDifference(from:with:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v111 = a2;
  uint64_t v116 = *(void *)(a8 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v94 = sub_1C4497B38();
  uint64_t v125 = *(char **)(v94 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v94);
  uint64_t v93 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v110 = (char *)&v81 - v17;
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v92 = (char *)&v81 - v19;
  uint64_t v83 = sub_1C4497B38();
  uint64_t v82 = *(void *)(v83 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v83);
  uint64_t v113 = (char *)&v81 - v21;
  uint64_t v96 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v109 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v24 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v91 = (char *)&v81 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v112 = (char *)&v81 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v126 = (char *)&v81 - v29;
  uint64_t v31 = v30;
  uint64_t v32 = sub_1C4497B38();
  MEMORY[0x1F4188790](v32 - 8);
  uint64_t v115 = (char *)&v81 - v33;
  uint64_t v34 = sub_1C4496F68();
  uint64_t v114 = a1;
  uint64_t v35 = 0;
  if (v34 != sub_1C4496F68()) {
    return v35;
  }
  uint64_t v120 = a7;
  uint64_t v127 = sub_1C4496EA8();
  uint64_t v36 = AssociatedTypeWitness;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v37 = sub_1C4497F08();
    unint64_t v84 = 0;
    uint64_t v38 = 0;
    unint64_t v39 = 0;
    unint64_t v40 = v37 | 0x8000000000000000;
  }
  else
  {
    uint64_t v41 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v38 = ~v41;
    uint64_t v42 = *(void *)(a3 + 64);
    unint64_t v84 = a3 + 64;
    uint64_t v43 = -v41;
    if (v43 < 64) {
      uint64_t v44 = ~(-1 << v43);
    }
    else {
      uint64_t v44 = -1;
    }
    unint64_t v39 = v44 & v42;
    unint64_t v40 = a3;
  }
  uint64_t v45 = v31;
  uint64_t v85 = v40 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v108 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  uint64_t v81 = v38;
  int64_t v95 = (unint64_t)(v38 + 64) >> 6;
  uint64_t v106 = a4 - 8;
  uint64_t v124 = (void (**)(char *, char *, uint64_t))(v96 + 16);
  uint64_t v105 = (void (**)(char *, char *, uint64_t))(v96 + 32);
  uint64_t v104 = (unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48);
  uint64_t v119 = (void (**)(char *, uint64_t))(v96 + 8);
  uint64_t v98 = v116 + 40;
  uint64_t v97 = (unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48);
  uint64_t v90 = (void (**)(char *, char *, uint64_t))(v18 + 32);
  uint64_t v89 = (void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v88 = (void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v87 = (void (**)(char *, uint64_t))(v18 + 8);
  uint64_t v100 = (void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v86 = (uint64_t (**)(char *, uint64_t))(v125 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v47 = 0;
  uint64_t v48 = v36;
  uint64_t v99 = v36;
  uint64_t v49 = v115;
  unint64_t v101 = v40;
  uint64_t v102 = v45;
  uint64_t v123 = a4;
  while (1)
  {
    unint64_t v103 = v39;
    uint64_t v107 = v47;
    if ((v40 & 0x8000000000000000) == 0) {
      break;
    }
    if (!sub_1C4497F28()) {
      goto LABEL_35;
    }
    sub_1C44982C8();
    swift_unknownObjectRelease();
    sub_1C44982C8();
    swift_unknownObjectRelease();
    (*v108)(v49, 0, 1, v45);
    uint64_t v51 = *(void *)(a4 - 8);
    uint64_t v121 = v39;
    int64_t v122 = (int64_t)v47;
LABEL_29:
    uint64_t v56 = v49;
    uint64_t v57 = a5;
    uint64_t v58 = a4;
    uint64_t v59 = *(int *)(v45 + 48);
    uint64_t v60 = v126;
    uint64_t v61 = &v126[v59];
    uint64_t v62 = &v56[v59];
    (*(void (**)(char *))(v51 + 32))(v126);
    uint64_t v63 = *v105;
    (*v105)(v61, v62, v57);
    uint64_t v64 = v112;
    uint64_t v65 = &v112[*(int *)(v45 + 48)];
    uint64_t v118 = *(void (**)(char *, char *, uint64_t))(v51 + 16);
    v118(v112, v60, v58);
    uint64_t v66 = *v124;
    uint64_t v67 = v65;
    uint64_t v125 = v61;
    uint64_t v117 = v66;
    v66(v65, v61, v57);
    uint64_t v68 = v113;
    MEMORY[0x1C877FC90](v64, v114, v58, v57, v120);
    if ((*v104)(v68, 1, v57) == 1)
    {
      (*v100)(v126, v102);
      sub_1C3F7FCE8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v68, v83);
      (*v119)(v67, v57);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v64, v123);
      return 0;
    }
    uint64_t v69 = v109;
    v63(v109, v68, v57);
    uint64_t v70 = *v119;
    (*v119)(v67, v57);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v64, v123);
    uint64_t v71 = v110;
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 40))(v69, v111, v57);
    uint64_t v48 = v99;
    if ((*v97)(v71, 1, v99) == 1)
    {
      v70(v69, v57);
      uint64_t v45 = v102;
      (*v100)(v126, v102);
      uint64_t result = (*v86)(v71, v94);
      unint64_t v39 = v121;
      uint64_t v47 = (char *)v122;
      a4 = v123;
    }
    else
    {
      uint64_t v72 = v92;
      (*v90)(v92, v71, v48);
      uint64_t v73 = v102;
      uint64_t v107 = &v91[*(int *)(v102 + 48)];
      uint64_t v74 = v107;
      a4 = v123;
      v118(v91, v126, v123);
      v117(v74, v125, v57);
      uint64_t v75 = v73;
      uint64_t v76 = v93;
      (*v89)(v93, v72, v48);
      (*v88)(v76, 0, 1, v48);
      sub_1C4497008();
      sub_1C4497048();
      uint64_t v77 = v72;
      uint64_t v45 = v75;
      (*v87)(v77, v48);
      v70(v69, v57);
      (*v100)(v126, v75);
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v70)(v107, v57);
      unint64_t v39 = v121;
      uint64_t v47 = (char *)v122;
    }
    a5 = v57;
    uint64_t v49 = v115;
    unint64_t v40 = v101;
  }
  if (v39)
  {
    uint64_t v121 = (v39 - 1) & v39;
    int64_t v122 = (int64_t)v47;
    unint64_t v50 = __clz(__rbit64(v39)) | ((void)v47 << 6);
LABEL_28:
    uint64_t v51 = *(void *)(a4 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v51 + 16))(v49, *(void *)(v40 + 48) + *(void *)(v51 + 72) * v50, a4);
    (*(void (**)(char *, unint64_t, uint64_t))(v96 + 16))(&v49[*(int *)(v45 + 48)], *(void *)(v40 + 56) + *(void *)(v96 + 72) * v50, a5);
    (*v108)(v49, 0, 1, v45);
    goto LABEL_29;
  }
  int64_t v52 = (int64_t)(v47 + 1);
  if (__OFADD__(v47, 1))
  {
    __break(1u);
LABEL_40:
    __break(1u);
    return result;
  }
  if (v52 < v95)
  {
    unint64_t v53 = *(void *)(v84 + 8 * v52);
    int64_t v54 = (int64_t)(v47 + 1);
    if (!v53)
    {
      int64_t v54 = (int64_t)(v47 + 2);
      if ((uint64_t)(v47 + 2) >= v95) {
        goto LABEL_34;
      }
      unint64_t v53 = *(void *)(v84 + 8 * v54);
      if (!v53)
      {
        uint64_t v55 = v47 + 3;
        if ((uint64_t)(v47 + 3) >= v95)
        {
LABEL_34:
          uint64_t v78 = v120;
          goto LABEL_36;
        }
        unint64_t v53 = *(void *)(v84 + 8 * (void)v55);
        if (!v53)
        {
          while (1)
          {
            int64_t v54 = (int64_t)(v55 + 1);
            if (__OFADD__(v55, 1)) {
              goto LABEL_40;
            }
            if (v54 >= v95) {
              goto LABEL_34;
            }
            unint64_t v53 = *(void *)(v84 + 8 * v54);
            ++v55;
            if (v53) {
              goto LABEL_27;
            }
          }
        }
        int64_t v54 = (int64_t)(v47 + 3);
      }
    }
LABEL_27:
    uint64_t v121 = (v53 - 1) & v53;
    int64_t v122 = v54;
    unint64_t v50 = __clz(__rbit64(v53)) + (v54 << 6);
    goto LABEL_28;
  }
LABEL_35:
  uint64_t v78 = v120;
LABEL_36:
  (*v108)(v49, 1, 1, v45);
  sub_1C3F7FCE8();
  uint64_t v35 = v127;
  uint64_t v79 = swift_bridgeObjectRetain();
  char v80 = MEMORY[0x1C877FC10](v79, a4, v48, v78);
  swift_bridgeObjectRelease();
  if (v80)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  return v35;
}

uint64_t Dictionary<>.visitReferences(_:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v65 = a5;
  uint64_t v66 = a7;
  uint64_t v64 = a1;
  uint64_t v57 = *(void *)(a4 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v63 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v62 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = v12;
  uint64_t v72 = v13;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v69 = sub_1C4497B38();
  uint64_t v15 = *(void *)(v69 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v69);
  uint64_t v18 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v70 = (char *)v50 - v19;
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v20 = sub_1C4497F08();
    unint64_t v51 = 0;
    uint64_t v21 = 0;
    unint64_t v22 = 0;
    unint64_t v23 = v20 | 0x8000000000000000;
  }
  else
  {
    uint64_t v24 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v21 = ~v24;
    uint64_t v25 = *(void *)(a2 + 64);
    unint64_t v51 = a2 + 64;
    uint64_t v26 = -v24;
    if (v26 < 64) {
      uint64_t v27 = ~(-1 << v26);
    }
    else {
      uint64_t v27 = -1;
    }
    unint64_t v22 = v27 & v25;
    unint64_t v23 = a2;
  }
  uint64_t v53 = v23 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v68 = TupleTypeMetadata2 - 8;
  v50[1] = v21;
  uint64_t v55 = v56 + 16;
  uint64_t v54 = v57 + 16;
  uint64_t v67 = (void (**)(char *, char *, uint64_t))(v15 + 32);
  uint64_t v61 = (void (**)(char *, char *, uint64_t))(v56 + 32);
  uint64_t v59 = (void (**)(char *, uint64_t))(v57 + 8);
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v58 = (uint64_t (**)(char *, uint64_t))(v56 + 8);
  int64_t v52 = (unint64_t)(v21 + 64) >> 6;
  v50[0] = v52 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v29 = 0;
  uint64_t v30 = v62;
  if ((v23 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
LABEL_8:
  uint64_t v31 = v70;
  if (v22)
  {
    uint64_t v32 = (v22 - 1) & v22;
    unint64_t v33 = __clz(__rbit64(v22)) | (v29 << 6);
    int64_t v34 = v29;
LABEL_10:
    (*(void (**)(char *, unint64_t, uint64_t))(v56 + 16))(v18, *(void *)(v23 + 48) + *(void *)(v56 + 72) * v33, v71);
    (*(void (**)(char *, unint64_t, uint64_t))(v57 + 16))(&v18[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v23 + 56) + *(void *)(v57 + 72) * v33, v72);
    uint64_t v35 = 0;
    goto LABEL_20;
  }
  int64_t v34 = v29 + 1;
  if (__OFADD__(v29, 1))
  {
    __break(1u);
  }
  else
  {
    if (v34 >= v52)
    {
      uint64_t v32 = 0;
      uint64_t v35 = 1;
      int64_t v34 = v29;
      goto LABEL_20;
    }
    unint64_t v37 = *(void *)(v51 + 8 * v34);
    if (v37) {
      goto LABEL_16;
    }
    if (v29 + 2 >= v52)
    {
      uint64_t v32 = 0;
      uint64_t v35 = 1;
      goto LABEL_20;
    }
    unint64_t v37 = *(void *)(v51 + 8 * (v29 + 2));
    if (v37)
    {
      int64_t v34 = v29 + 2;
LABEL_16:
      uint64_t v32 = (v37 - 1) & v37;
      unint64_t v33 = __clz(__rbit64(v37)) + (v34 << 6);
      goto LABEL_10;
    }
    int64_t v49 = v29 + 3;
    if (v29 + 3 >= v52)
    {
      uint64_t v32 = 0;
      uint64_t v35 = 1;
      int64_t v34 = v29 + 2;
      goto LABEL_20;
    }
    unint64_t v37 = *(void *)(v51 + 8 * v49);
    if (v37)
    {
      int64_t v34 = v29 + 3;
      goto LABEL_16;
    }
    while (1)
    {
      int64_t v34 = v49 + 1;
      if (__OFADD__(v49, 1)) {
        break;
      }
      if (v34 >= v52)
      {
        uint64_t v32 = 0;
        uint64_t v35 = 1;
        int64_t v34 = v50[0];
LABEL_20:
        while (1)
        {
          uint64_t v38 = *(void *)(TupleTypeMetadata2 - 8);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v18, v35, 1, TupleTypeMetadata2);
          (*v67)(v31, v18, v69);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v31, 1, TupleTypeMetadata2) == 1) {
            return sub_1C3F7FCE8();
          }
          unint64_t v39 = &v31[*(int *)(TupleTypeMetadata2 + 48)];
          unint64_t v40 = *v61;
          unint64_t v73 = v32;
          int64_t v41 = v34;
          uint64_t v42 = TupleTypeMetadata2;
          unint64_t v43 = v23;
          uint64_t v44 = v71;
          v40(v30, v31, v71);
          uint64_t v45 = v63;
          uint64_t v46 = v72;
          (*v60)(v63, v39, v72);
          uint64_t v47 = v64;
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 + 8) + 48))(v64, v44);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 + 8) + 48))(v47, v46);
          (*v59)(v45, v46);
          uint64_t v48 = v44;
          unint64_t v23 = v43;
          TupleTypeMetadata2 = v42;
          uint64_t result = (*v58)(v30, v48);
          int64_t v29 = v41;
          unint64_t v22 = v73;
          if ((v23 & 0x8000000000000000) == 0) {
            goto LABEL_8;
          }
LABEL_11:
          uint64_t v36 = sub_1C4497F28();
          uint64_t v31 = v70;
          if (v36)
          {
            sub_1C44982C8();
            swift_unknownObjectRelease();
            sub_1C44982C8();
            swift_unknownObjectRelease();
            uint64_t v35 = 0;
          }
          else
          {
            uint64_t v35 = 1;
          }
          int64_t v34 = v29;
          uint64_t v32 = v22;
        }
      }
      unint64_t v37 = *(void *)(v51 + 8 * v34);
      ++v49;
      if (v37) {
        goto LABEL_16;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t Dictionary<>.copy(renamingReferences:)(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v83 = a5;
  uint64_t v84 = a7;
  uint64_t v82 = a1;
  uint64_t v10 = sub_1C4497B38();
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v81 = (char *)v62 - v12;
  uint64_t v67 = *(void *)(a4 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  char v80 = (char *)v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v79 = (char *)v62 - v16;
  uint64_t v66 = *(void *)(a3 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v78 = (char *)v62 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v77 = (char *)v62 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v76 = (char *)v62 - v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v87 = sub_1C4497B38();
  uint64_t v23 = *(void *)(v87 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v87);
  uint64_t v93 = (char *)v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v88 = (char *)v62 - v26;
  uint64_t v95 = sub_1C4496EA8();
  sub_1C4496F68();
  uint64_t v91 = a4;
  uint64_t v92 = a3;
  uint64_t v75 = sub_1C4497008();
  sub_1C4496F18();
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v27 = sub_1C4497F08();
    unint64_t v63 = 0;
    uint64_t v28 = 0;
    unint64_t v29 = 0;
    unint64_t v30 = v27 | 0x8000000000000000;
  }
  else
  {
    uint64_t v31 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v28 = ~v31;
    uint64_t v32 = *(void *)(a2 + 64);
    unint64_t v63 = a2 + 64;
    uint64_t v33 = -v31;
    if (v33 < 64) {
      uint64_t v34 = ~(-1 << v33);
    }
    else {
      uint64_t v34 = -1;
    }
    unint64_t v29 = v34 & v32;
    unint64_t v30 = a2;
  }
  uint64_t v65 = v30 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v86 = TupleTypeMetadata2 - 8;
  v62[1] = v28;
  uint64_t v90 = (void (**)(char *, char *, uint64_t))(v66 + 16);
  uint64_t v89 = (void (**)(char *, char *, uint64_t))(v67 + 16);
  uint64_t v85 = (void (**)(char *, char *, uint64_t))(v23 + 32);
  unint64_t v73 = (void (**)(char *, char *, uint64_t))(v66 + 32);
  uint64_t v72 = (void (**)(char *, char *, uint64_t))(v67 + 32);
  uint64_t v71 = (void (**)(char *, void, uint64_t, uint64_t))(v67 + 56);
  uint64_t v70 = (void (**)(char *, uint64_t))(v67 + 8);
  uint64_t v69 = (uint64_t (**)(char *, uint64_t))(v66 + 8);
  int64_t v64 = (unint64_t)(v28 + 64) >> 6;
  v62[0] = v64 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v36 = 0;
  unint64_t v74 = v30;
  uint64_t v68 = TupleTypeMetadata2;
  if ((v30 & 0x8000000000000000) != 0) {
    goto LABEL_11;
  }
LABEL_8:
  unint64_t v37 = v88;
  if (v29)
  {
    uint64_t v38 = (v29 - 1) & v29;
    unint64_t v39 = __clz(__rbit64(v29)) | (v36 << 6);
    int64_t v40 = v36;
LABEL_10:
    int64_t v41 = v93;
    (*(void (**)(char *, unint64_t, uint64_t))(v66 + 16))(v93, *(void *)(v30 + 48) + *(void *)(v66 + 72) * v39, v92);
    (*(void (**)(char *, unint64_t, uint64_t))(v67 + 16))(&v41[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v30 + 56) + *(void *)(v67 + 72) * v39, v91);
    uint64_t v42 = 0;
    goto LABEL_20;
  }
  int64_t v40 = v36 + 1;
  if (__OFADD__(v36, 1))
  {
    __break(1u);
  }
  else
  {
    if (v40 >= v64)
    {
      uint64_t v38 = 0;
      uint64_t v42 = 1;
      int64_t v40 = v36;
      goto LABEL_20;
    }
    unint64_t v44 = *(void *)(v63 + 8 * v40);
    if (v44) {
      goto LABEL_16;
    }
    if (v36 + 2 >= v64)
    {
      uint64_t v38 = 0;
      uint64_t v42 = 1;
      goto LABEL_20;
    }
    unint64_t v44 = *(void *)(v63 + 8 * (v36 + 2));
    if (v44)
    {
      int64_t v40 = v36 + 2;
LABEL_16:
      uint64_t v38 = (v44 - 1) & v44;
      unint64_t v39 = __clz(__rbit64(v44)) + (v40 << 6);
      goto LABEL_10;
    }
    int64_t v61 = v36 + 3;
    if (v36 + 3 >= v64)
    {
      uint64_t v38 = 0;
      uint64_t v42 = 1;
      int64_t v40 = v36 + 2;
      goto LABEL_20;
    }
    unint64_t v44 = *(void *)(v63 + 8 * v61);
    if (v44)
    {
      int64_t v40 = v36 + 3;
      goto LABEL_16;
    }
    while (1)
    {
      int64_t v40 = v61 + 1;
      if (__OFADD__(v61, 1)) {
        break;
      }
      if (v40 >= v64)
      {
        uint64_t v38 = 0;
        uint64_t v42 = 1;
        int64_t v40 = v62[0];
LABEL_20:
        while (1)
        {
          uint64_t v45 = *(void *)(TupleTypeMetadata2 - 8);
          uint64_t v46 = v93;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v93, v42, 1, TupleTypeMetadata2);
          (*v85)(v37, v46, v87);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v37, 1, TupleTypeMetadata2) == 1) {
            break;
          }
          uint64_t v47 = &v37[*(int *)(TupleTypeMetadata2 + 48)];
          uint64_t v48 = *v73;
          int64_t v94 = v40;
          int64_t v49 = v76;
          uint64_t v50 = v92;
          v48(v76, v37, v92);
          unint64_t v51 = v79;
          uint64_t v52 = v91;
          (*v72)(v79, v47, v91);
          uint64_t v53 = v82;
          uint64_t v54 = v77;
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v83 + 8) + 24))(v82, v50);
          uint64_t v55 = v80;
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v84 + 8) + 24))(v53, v52);
          (*v90)(v78, v54, v50);
          uint64_t v56 = v81;
          (*v89)(v81, v55, v52);
          (*v71)(v56, 0, 1, v52);
          sub_1C4497048();
          uint64_t v57 = *v70;
          (*v70)(v55, v52);
          uint64_t v58 = *v69;
          uint64_t v59 = v54;
          TupleTypeMetadata2 = v68;
          (*v69)(v59, v50);
          v57(v51, v52);
          uint64_t v60 = v50;
          unint64_t v30 = v74;
          uint64_t result = v58(v49, v60);
          int64_t v36 = v94;
          unint64_t v29 = v38;
          if ((v30 & 0x8000000000000000) == 0) {
            goto LABEL_8;
          }
LABEL_11:
          uint64_t v43 = sub_1C4497F28();
          unint64_t v37 = v88;
          if (v43)
          {
            sub_1C44982C8();
            swift_unknownObjectRelease();
            sub_1C44982C8();
            swift_unknownObjectRelease();
            uint64_t v42 = 0;
          }
          else
          {
            uint64_t v42 = 1;
          }
          int64_t v40 = v36;
          uint64_t v38 = v29;
        }
        sub_1C3F7FCE8();
        return v95;
      }
      unint64_t v44 = *(void *)(v63 + 8 * v40);
      ++v61;
      if (v44) {
        goto LABEL_16;
      }
    }
  }
  __break(1u);
  return result;
}

uint64_t Dictionary<>.copy(renamingReferences:)(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v15 = a1;
  swift_bridgeObjectRetain();
  uint64_t v13 = Dictionary<>.copy(renamingReferences:)((uint64_t)&v15, a2, a3, a4, a5, a6, a7);
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t Dictionary<>.needToFinalizeTimestamps()()
{
  return sub_1C4497368() & 1;
}

uint64_t sub_1C4244AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v21 = a6;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v11 = *(void *)(TupleTypeMetadata2 - 8);
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v13 = (char *)&v20 - v12;
  char v14 = (*(uint64_t (**)(uint64_t))(*(void *)(a4 + 8) + 56))(a2);
  uint64_t v15 = *(int *)(TupleTypeMetadata2 + 48);
  uint64_t v16 = &v13[v15];
  uint64_t v17 = a1 + v15;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(v13, a1, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v16, v17, a3);
  if (v14) {
    char v18 = 1;
  }
  else {
    char v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 8) + 56))(a3);
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, TupleTypeMetadata2);
  return v18 & 1;
}

uint64_t Dictionary<>.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v74 = a4;
  uint64_t v71 = a1;
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = sub_1C4497B38();
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v70 = (char *)v49 - v10;
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v69 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v68 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v67 = (char *)v49 - v16;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v73 = sub_1C4497B38();
  int64_t v64 = *(void (***)(char *, char *, uint64_t))(v73 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v73);
  uint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  unint64_t v22 = (char *)v49 - v21;
  unint64_t v23 = *v4;
  uint64_t v72 = a3;
  uint64_t result = Dictionary<>.needToFinalizeTimestamps()();
  if (result)
  {
    uint64_t v50 = (uint64_t *)v4;
    uint64_t v78 = sub_1C4496EA8();
    sub_1C4496F68();
    uint64_t result = sub_1C4496F18();
    uint64_t v66 = v22;
    uint64_t v77 = v7;
    uint64_t v63 = a2;
    if ((v23 & 0xC000000000000001) != 0)
    {
      uint64_t result = sub_1C4497F08();
      unint64_t v51 = 0;
      uint64_t v25 = 0;
      unint64_t v26 = 0;
      unint64_t v27 = result | 0x8000000000000000;
    }
    else
    {
      uint64_t v28 = -1 << *(unsigned char *)(v23 + 32);
      uint64_t v29 = *(void *)(v23 + 64);
      unint64_t v51 = v23 + 64;
      uint64_t v25 = ~v28;
      uint64_t v30 = -v28;
      if (v30 < 64) {
        uint64_t v31 = ~(-1 << v30);
      }
      else {
        uint64_t v31 = -1;
      }
      unint64_t v26 = v31 & v29;
      unint64_t v27 = v23;
    }
    int64_t v32 = 0;
    uint64_t v53 = v27 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v65 = TupleTypeMetadata2 - 8;
    v49[1] = v25;
    uint64_t v76 = (void (**)(char *, char *, uint64_t))(v54 + 16);
    uint64_t v75 = (void (**)(char *, char *, uint64_t))(v55 + 16);
    v64 += 4;
    uint64_t v62 = (void (**)(char *, char *, uint64_t))(v54 + 32);
    int64_t v61 = (void (**)(char *, char *, uint64_t))(v55 + 32);
    uint64_t v59 = (void (**)(char *, uint64_t))(v55 + 8);
    uint64_t v60 = (void (**)(char *, void, uint64_t, uint64_t))(v55 + 56);
    uint64_t v58 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    int64_t v52 = (unint64_t)(v25 + 64) >> 6;
    v49[0] = v52 - 1;
    unint64_t v57 = v27;
    uint64_t v56 = v20;
    if ((v27 & 0x8000000000000000) != 0) {
      goto LABEL_12;
    }
LABEL_9:
    uint64_t v33 = v66;
    if (v26)
    {
      uint64_t v34 = (v26 - 1) & v26;
      unint64_t v35 = __clz(__rbit64(v26)) | (v32 << 6);
      int64_t v36 = v32;
LABEL_11:
      (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v20, *(void *)(v27 + 48) + *(void *)(v54 + 72) * v35, v13);
      (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(&v20[*(int *)(TupleTypeMetadata2 + 48)], *(void *)(v27 + 56) + *(void *)(v55 + 72) * v35, v77);
      uint64_t v37 = 0;
      goto LABEL_21;
    }
    int64_t v36 = v32 + 1;
    if (__OFADD__(v32, 1))
    {
      __break(1u);
    }
    else
    {
      if (v36 >= v52)
      {
        uint64_t v34 = 0;
        uint64_t v37 = 1;
        int64_t v36 = v32;
        goto LABEL_21;
      }
      unint64_t v39 = *(void *)(v51 + 8 * v36);
      if (v39) {
        goto LABEL_17;
      }
      if (v32 + 2 >= v52)
      {
        uint64_t v34 = 0;
        uint64_t v37 = 1;
        goto LABEL_21;
      }
      unint64_t v39 = *(void *)(v51 + 8 * (v32 + 2));
      if (v39)
      {
        int64_t v36 = v32 + 2;
LABEL_17:
        uint64_t v34 = (v39 - 1) & v39;
        unint64_t v35 = __clz(__rbit64(v39)) + (v36 << 6);
        goto LABEL_11;
      }
      int64_t v48 = v32 + 3;
      if (v32 + 3 >= v52)
      {
        uint64_t v34 = 0;
        uint64_t v37 = 1;
        int64_t v36 = v32 + 2;
        goto LABEL_21;
      }
      unint64_t v39 = *(void *)(v51 + 8 * v48);
      if (v39)
      {
        int64_t v36 = v32 + 3;
        goto LABEL_17;
      }
      while (1)
      {
        int64_t v36 = v48 + 1;
        if (__OFADD__(v48, 1)) {
          break;
        }
        if (v36 >= v52)
        {
          uint64_t v34 = 0;
          uint64_t v37 = 1;
          int64_t v36 = v49[0];
LABEL_21:
          while (1)
          {
            uint64_t v40 = *(void *)(TupleTypeMetadata2 - 8);
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v40 + 56))(v20, v37, 1, TupleTypeMetadata2);
            (*v64)(v33, v20, v73);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v33, 1, TupleTypeMetadata2) == 1) {
              break;
            }
            int64_t v41 = &v33[*(int *)(TupleTypeMetadata2 + 48)];
            uint64_t v42 = v67;
            (*v62)(v67, v33, v13);
            uint64_t v43 = v69;
            uint64_t v44 = v77;
            (*v61)(v69, v41, v77);
            uint64_t v45 = v71;
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v72 + 8) + 64))(v71, v13);
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v74 + 8) + 64))(v45, v44);
            (*v76)(v68, v42, v13);
            uint64_t v46 = v70;
            (*v75)(v70, v43, v44);
            (*v60)(v46, 0, 1, v44);
            sub_1C4497048();
            (*v59)(v43, v44);
            uint64_t v47 = v42;
            uint64_t v20 = v56;
            unint64_t v27 = v57;
            uint64_t result = (*v58)(v47, v13);
            int64_t v32 = v36;
            unint64_t v26 = v34;
            if ((v27 & 0x8000000000000000) == 0) {
              goto LABEL_9;
            }
LABEL_12:
            int64_t v36 = v32;
            uint64_t v38 = sub_1C4497F28();
            uint64_t v33 = v66;
            if (v38)
            {
              sub_1C44982C8();
              swift_unknownObjectRelease();
              sub_1C44982C8();
              swift_unknownObjectRelease();
              uint64_t v37 = 0;
            }
            else
            {
              uint64_t v37 = 1;
            }
            uint64_t v34 = v26;
          }
          uint64_t result = sub_1C3F7FCE8();
          *uint64_t v50 = v78;
          return result;
        }
        unint64_t v39 = *(void *)(v51 + 8 * v36);
        ++v48;
        if (v39) {
          goto LABEL_17;
        }
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t static Dictionary<>.canContainAssets.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if ((*(uint64_t (**)(void))(*(void *)(a3 + 8) + 72))()) {
    return 1;
  }
  else {
    return (*(uint64_t (**)(uint64_t))(*(void *)(a5 + 8) + 72))(a2) & 1;
  }
}

uint64_t sub_1C4245550@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = Dictionary<>.copy(renamingReferences:)(a1, *v4, a2[2], a2[3], *(void *)(a3 - 8), a2[4], *(void *)(a3 - 16));
  *a4 = result;
  return result;
}

uint64_t sub_1C424558C@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = Dictionary<>.copy(renamingReferences:)(a1, *v4, a2[2], a2[3], *(void *)(a3 - 8), a2[4], *(void *)(a3 - 16));
  *a4 = result;
  return result;
}

uint64_t sub_1C42455C8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t *a6@<X8>)
{
  uint64_t result = Dictionary<>.observableDifference(from:with:)(*a1, a2, *v6, a3[2], a3[3], a5, a3[4], *(void *)(a4 - 16));
  *a6 = result;
  return result;
}

uint64_t sub_1C4245608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return Dictionary<>.visitReferences(_:)(a1, *v6, *(void *)(a2 + 16), *(void *)(a2 + 24), *(void *)(a3 - 8), a6, *(void *)(a3 - 16));
}

uint64_t sub_1C424561C()
{
  return Dictionary<>.needToFinalizeTimestamps()();
}

uint64_t sub_1C4245634(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return Dictionary<>.finalizeTimestamps(_:)(a1, a2, *(void *)(a3 - 8), *(void *)(a3 - 16));
}

uint64_t sub_1C4245640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static Dictionary<>.canContainAssets.getter(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 - 8), a4, *(void *)(a2 - 16));
}

uint64_t sub_1C4245650@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = Dictionary<>.init(from:)(a1, a2[2], a2[3], *(void *)(a3 - 8), a2[4], *(void *)(a3 - 16));
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t Dictionary<>.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0540);
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v14 = &v20[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_value;
  swift_beginAccess();
  sub_1C3F970C4(v15, (uint64_t)v14, &qword_1EBBC0540);
  uint64_t v16 = type metadata accessor for Proto_Value(0);
  uint64_t v17 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v14, 1, v16);
  sub_1C3F962E0((uint64_t)v14, &qword_1EBBC0540);
  if (v17 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v18 = 0xD000000000000017;
    *(void *)(v18 + 8) = 0x80000001C44B0F00;
    *(unsigned char *)(v18 + 16) = 0;
    swift_willThrow();
  }
  else
  {
    type metadata accessor for CRDecoder.CRValueContainer();
    *(void *)(swift_initStackObject() + 16) = a1;
    uint64_t v17 = sub_1C4003F68(a2, a3, a4, a5, a6);
  }
  swift_release();
  return v17;
}

uint64_t sub_1C4245868(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return Dictionary<>.encode(to:)(a1, *v3, a2[2], a2[3], *(void *)(a3 - 8), a2[4], *(void *)(a3 - 16));
}

uint64_t Dictionary<>.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = sub_1C3F6DD10();
  if (!v7)
  {
    swift_retain();
    sub_1C401058C(a2, a3, a4, a5, a6, a7);
    return swift_release();
  }
  return result;
}

void Dictionary<>.minEncodingVersion.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1C4245934@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v48 = a5;
  uint64_t v49 = a6;
  uint64_t v50 = a7;
  uint64_t v37 = a8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v59 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v45 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v36 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBBC680);
  uint64_t v17 = *(void *)(type metadata accessor for Proto_Value(0) - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v41 = *(void *)(v17 + 72);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C449B4A0;
  uint64_t v46 = v19;
  uint64_t v20 = v19 + v18;
  uint64_t v51 = TupleTypeMetadata2;
  uint64_t v21 = *(int *)(TupleTypeMetadata2 + 48);
  unint64_t v22 = &v16[v21];
  uint64_t v23 = a1 + v21;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v24 + 16);
  uint64_t v42 = a1;
  unint64_t v39 = v25;
  uint64_t v38 = v24 + 16;
  v25(v16, a1, a3);
  unint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16);
  uint64_t v40 = v23;
  v26(v22, v23, a4);
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v27 = v47;
  uint64_t v54 = v48;
  uint64_t v55 = v49;
  uint64_t v56 = v50;
  unint64_t v57 = v16;
  uint64_t v58 = a2;
  uint64_t v43 = a2;
  uint64_t v44 = v20;
  sub_1C3F6DC00((void (*)(uint64_t))sub_1C4245E6C, v20);
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v16, v51);
    *(void *)(v46 + 16) = 0;
    return swift_release();
  }
  else
  {
    uint64_t v28 = *(void (**)(char *, uint64_t))(v59 + 8);
    uint64_t v29 = v16;
    uint64_t v30 = v51;
    v59 += 8;
    v28(v29, v51);
    uint64_t v31 = v45;
    uint64_t v47 = v44 + v41;
    int64_t v32 = &v45[*(int *)(v30 + 48)];
    v39(v45, v42, a3);
    uint64_t v33 = ((uint64_t (*)(char *, uint64_t, uint64_t))v26)(v32, v40, a4);
    MEMORY[0x1F4188790](v33);
    *(&v36 - 8) = a3;
    *(&v36 - 7) = a4;
    uint64_t v34 = v49;
    *(&v36 - 6) = v48;
    *(&v36 - 5) = v34;
    *(&v36 - 4) = v50;
    *(&v36 - 3) = (uint64_t)v31;
    *(&v36 - 2) = v43;
    sub_1C3F6DC00((void (*)(uint64_t))sub_1C4245EB4, v47);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v28)(v45, v51);
    *uint64_t v37 = v46;
  }
  return result;
}

uint64_t sub_1C4245D24(uint64_t a1)
{
  return sub_1C4244AD0(a1, v1[2], v1[3], v1[4], v1[5], v1[6]) & 1;
}

uint64_t sub_1C4245D4C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C4245D9C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C4245DEC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C4245934(a1, v2[7], v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

unint64_t sub_1C4245E10()
{
  unint64_t result = qword_1EA39EF68;
  if (!qword_1EA39EF68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EA39EF60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39EF68);
  }
  return result;
}

uint64_t sub_1C4245E6C()
{
  return (*(uint64_t (**)(void, void))(*(void *)(*(void *)(v0[4] + 8) + 8) + 16))(v0[8], v0[2]);
}

uint64_t sub_1C4245EB4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[8];
  swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v2 + 8) + 8) + 16))(v3, v1);
}

uint64_t sub_1C4245F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = v3;
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_CRDT(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)&v38 - v17;
  uint64_t v46 = a1;
  uint64_t v44 = &v46;
  uint64_t v45 = v5;
  uint64_t result = sub_1C3F5585C((void (*)(uint64_t))sub_1C436C1AC, (uint64_t)&v38 - v17);
  if (v4) {
    return result;
  }
  uint64_t v38 = v11;
  unint64_t v39 = v16;
  uint64_t v40 = v13;
  uint64_t v20 = *(void *)(v5 + 16);
  uint64_t v21 = sub_1C4004870(v41, v42);
  uint64_t v22 = v20 + OBJC_IVAR____TtCC9Coherence9CREncoder13CRDTContainer_crdt;
  swift_beginAccess();
  uint64_t v23 = *(void *)(v22 + *(int *)(v12 + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  uint64_t v24 = v43;
  sub_1C3F970C4(v23, v43, &qword_1EBBC0648);
  uint64_t v25 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25) == 1)
  {
    sub_1C3F962E0(v24, &qword_1EBBC0648);
    uint64_t v26 = (uint64_t)v18;
LABEL_7:
    uint64_t v28 = MEMORY[0x1E4FBC860];
    uint64_t v29 = v38;
    *uint64_t v38 = MEMORY[0x1E4FBC860];
    v29[1] = v28;
    v29[2] = v28;
    uint64_t v27 = v29;
    sub_1C4496888();
    goto LABEL_8;
  }
  uint64_t v26 = (uint64_t)v18;
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_1C3F923BC(v24, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_7;
  }
  uint64_t v27 = v38;
  sub_1C3FBAF7C(v24, (uint64_t)v38, type metadata accessor for Proto_Struct);
LABEL_8:
  uint64_t v30 = (uint64_t)v39;
  uint64_t v31 = (void *)*v27;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v31 = sub_1C3FA1854(0, v31[2] + 1, 1, v31);
  }
  unint64_t v33 = v31[2];
  unint64_t v32 = v31[3];
  if (v33 >= v32 >> 1) {
    uint64_t v31 = sub_1C3FA1854((void *)(v32 > 1), v33 + 1, 1, v31);
  }
  uint64_t v31[2] = v33 + 1;
  v31[v33 + 4] = v21;
  *uint64_t v27 = v31;
  sub_1C3FB9FB4(v26, v30);
  unint64_t v34 = v27[1];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v34 = sub_1C3FF1600(0, *(void *)(v34 + 16) + 1, 1, v34);
  }
  uint64_t v35 = v40;
  unint64_t v37 = *(void *)(v34 + 16);
  unint64_t v36 = *(void *)(v34 + 24);
  if (v37 >= v36 >> 1) {
    unint64_t v34 = sub_1C3FF1600(v36 > 1, v37 + 1, 1, v34);
  }
  *(void *)(v34 + 16) = v37 + 1;
  sub_1C3FBAF7C(v30, v34+ ((*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80))+ *(void *)(v35 + 72) * v37, type metadata accessor for Proto_CRDT);
  v27[1] = v34;
  sub_1C3F62D84((uint64_t)v27);
  swift_endAccess();
  return sub_1C3F923BC(v26, type metadata accessor for Proto_CRDT);
}

uint64_t static CRStruct_0.fieldKeys.getter()
{
  return MEMORY[0x1E4FBC860];
}

void sub_1C42463B0(void *a1@<X8>)
{
  *a1 = MEMORY[0x1E4FBC868];
}

uint64_t sub_1C42463C4(void *a1)
{
  return sub_1C42463E0(a1, *v1);
}

uint64_t sub_1C42463E0(void *a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF70);
  uint64_t v24 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C42469F0();
  sub_1C44986A8();
  uint64_t v8 = *(void *)(a2 + 64);
  uint64_t v25 = a2 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v26 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v14 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v14 | (v13 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v13 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t v29 = *(void *)(*(void *)(a2 + 56) + 8 * i);
    uint64_t v27 = v20;
    uint64_t v28 = v21;
    sub_1C4246A44();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C4498048();
    if (v2)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v13++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v13 >= v26) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v13);
    if (!v17) {
      break;
    }
LABEL_17:
    unint64_t v11 = (v17 - 1) & v17;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v26) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v26) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v26) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v26)
  {
LABEL_26:
    uint64_t v22 = v24;
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v7, v5);
  }
  unint64_t v17 = *(void *)(v25 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v13 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v25 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t CRStruct_0.encode(to:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF70);
  uint64_t v26 = *(void *)(v28 - 8);
  MEMORY[0x1F4188790](v28);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C42469F0();
  sub_1C44986A8();
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 24))(a2);
  uint64_t v10 = result;
  int64_t v11 = 0;
  uint64_t v12 = result + 64;
  uint64_t v13 = 1 << *(unsigned char *)(result + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(result + 64);
  int64_t v27 = (unint64_t)(v13 + 63) >> 6;
  if (!v15) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v16 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (unint64_t i = v16 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v19)) + (v11 << 6))
  {
    uint64_t v21 = (uint64_t *)(*(void *)(v10 + 48) + 16 * i);
    uint64_t v22 = *v21;
    uint64_t v23 = v21[1];
    uint64_t v31 = *(void *)(*(void *)(v10 + 56) + 8 * i);
    uint64_t v29 = v22;
    uint64_t v30 = v23;
    sub_1C4246A44();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C4498048();
    if (v3)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v26 + 8))(v8, v28);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v11 >= v27) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v12 + 8 * v11);
    if (!v19) {
      break;
    }
LABEL_15:
    unint64_t v15 = (v19 - 1) & v19;
  }
  int64_t v20 = v11 + 1;
  if (v11 + 1 >= v27) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v12 + 8 * v20);
  if (v19) {
    goto LABEL_14;
  }
  int64_t v20 = v11 + 2;
  if (v11 + 2 >= v27) {
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v12 + 8 * v20);
  if (v19) {
    goto LABEL_14;
  }
  int64_t v20 = v11 + 3;
  if (v11 + 3 >= v27)
  {
LABEL_24:
    uint64_t v24 = v26;
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v8, v28);
  }
  unint64_t v19 = *(void *)(v12 + 8 * v20);
  if (v19)
  {
LABEL_14:
    int64_t v11 = v20;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v27) {
      goto LABEL_24;
    }
    unint64_t v19 = *(void *)(v12 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t sub_1C42469F0()
{
  unint64_t result = qword_1EA39EF78;
  if (!qword_1EA39EF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA39EF78);
  }
  return result;
}

unint64_t sub_1C4246A44()
{
  unint64_t result = qword_1EA39EF80[0];
  if (!qword_1EA39EF80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EA39EF80);
  }
  return result;
}

uint64_t CRStruct_0.actionUndoingDifference(from:)()
{
  return 1;
}

uint64_t sub_1C4246AA4()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  char v3 = sub_1C4478090(v2, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t CRStruct_0.hasDelta(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 24);
  uint64_t v6 = v5(a2, v4);
  uint64_t v7 = v5(a2, v4);
  char v8 = sub_1C4478090(v7, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C4246BA0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C4341774(v4, a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t CRStruct_0.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v4, a2);
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(a2, v8);
  uint64_t v10 = sub_1C4341774(v9, a1);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, a2, v8);
}

uint64_t sub_1C4246CD4@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = *v2;
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v7 = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1C4341774(v4, (uint64_t)&v7);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t CRStruct_0.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v13 = a1;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v4, a2);
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 24);
  swift_bridgeObjectRetain();
  uint64_t v10 = v9(a2, v8);
  uint64_t v11 = sub_1C4341774(v10, (uint64_t)&v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, a2, v8);
}

uint64_t CRStruct_0.observableDifference(from:with:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);
  return v3(a1, 1, 1, AssociatedTypeWitness);
}

uint64_t sub_1C4246EF8(uint64_t a1)
{
  uint64_t v3 = *v1;
  swift_bridgeObjectRetain();
  sub_1C3F7E98C(a1, v3);
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_0.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(*(void *)(a3 + 8) + 24))(a2);
  sub_1C3F7E98C(a1, v4);
  return swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall CRStruct_0.needToFinalizeTimestamps()()
{
  return 0;
}

uint64_t sub_1C4246FB4()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1C4477B90(v0);
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_0.merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(a2, v4);
  uint64_t v6 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v4 + 40))(v8, a2, v4);
  sub_1C4477B90(v5);
  swift_bridgeObjectRelease();
  v6(v8, 0);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 64))(a2, v4);
}

uint64_t sub_1C42470D4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C4341D38(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_1C4247100(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v21);
  uint64_t v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = type metadata accessor for Proto_CRDT(0);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v11 - 8);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v14, (uint64_t)v13, &qword_1EBBC04F8);
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  sub_1C3F962E0((uint64_t)v13, &qword_1EBBC04F8);
  if (v14 != 1)
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = a1;
    *(void *)(inited + 24) = 0;
    *(unsigned char *)(inited + 32) = 1;
    swift_retain();
    sub_1C3FBA924((uint64_t)v10);
    uint64_t v17 = *(void *)&v10[*(int *)(v7 + 20)]
        + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
    swift_beginAccess();
    sub_1C3F970C4(v17, (uint64_t)v4, &qword_1EBBC0648);
    uint64_t v18 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v4, 1, v18) == 1)
    {
      sub_1C3F962E0((uint64_t)v4, &qword_1EBBC0648);
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        sub_1C3FBAF7C((uint64_t)v4, (uint64_t)v6, type metadata accessor for Proto_Struct);
LABEL_9:
        a1 = sub_1C446A490((uint64_t)v6, a1);
        sub_1C3F923BC((uint64_t)v10, type metadata accessor for Proto_CRDT);
        swift_setDeallocating();
        swift_release();
        return a1;
      }
      sub_1C3F923BC((uint64_t)v4, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    }
    uint64_t v19 = MEMORY[0x1E4FBC860];
    *uint64_t v6 = MEMORY[0x1E4FBC860];
    v6[1] = v19;
    v6[2] = v19;
    sub_1C4496888();
    goto LABEL_9;
  }
  sub_1C3FE3FF0();
  swift_allocError();
  *(void *)uint64_t v15 = 0xD000000000000014;
  *(void *)(v15 + 8) = 0x80000001C44B0EE0;
  *(unsigned char *)(v15 + 16) = 0;
  swift_willThrow();
  swift_release();
  return a1;
}

uint64_t CRStruct_0.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v23 = a3;
  uint64_t v22 = a4;
  uint64_t v6 = type metadata accessor for Proto_CRDT(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC04F8);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = a1 + OBJC_IVAR____TtC9Coherence9CRDecoder_crdt;
  swift_beginAccess();
  sub_1C3F970C4(v16, (uint64_t)v15, &qword_1EBBC04F8);
  LODWORD(v6) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v15, 1, v6);
  sub_1C3F962E0((uint64_t)v15, &qword_1EBBC04F8);
  if (v6 == 1)
  {
    sub_1C3FE3FF0();
    swift_allocError();
    *(void *)uint64_t v17 = 0xD000000000000014;
    *(void *)(v17 + 8) = 0x80000001C44B0EE0;
    *(unsigned char *)(v17 + 16) = 0;
    swift_willThrow();
    return swift_release();
  }
  else
  {
    type metadata accessor for CRDecoder.CRDTContainer();
    uint64_t inited = swift_initStackObject();
    *(void *)(inited + 16) = a1;
    *(void *)(inited + 24) = 0;
    *(unsigned char *)(inited + 32) = 1;
    swift_retain();
    sub_1C3FBA924((uint64_t)v10);
    uint64_t v20 = v24;
    sub_1C4247D38((uint64_t)v10, a1, a2, v23, (uint64_t)v12);
    uint64_t result = swift_release();
    if (!v20) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(v22, v12, a2);
    }
  }
  return result;
}

uint64_t sub_1C42477AC(uint64_t a1)
{
  return sub_1C42477C8(a1, *v1);
}

uint64_t sub_1C42477C8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v5);
  uint64_t v7 = (uint64_t *)((char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = sub_1C3F62C10();
  if (!v2)
  {
    uint64_t v9 = result;
    type metadata accessor for CREncoder.CRDTKeyedContainer();
    uint64_t inited = swift_initStackObject();
    uint64_t v11 = MEMORY[0x1E4FBC860];
    *(void *)(inited + 16) = v9;
    *(void *)(inited + 24) = a1;
    *uint64_t v7 = v11;
    v7[1] = v11;
    id v7[2] = v11;
    swift_retain();
    swift_retain();
    sub_1C4496888();
    swift_beginAccess();
    sub_1C3F62D84((uint64_t)v7);
    sub_1C4248678(inited, a2);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t CRStruct_0.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3F62AA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))CRStruct_0.encode(to:));
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t i;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int64_t v23;

  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 8);
  (*(void (**)(uint64_t, uint64_t))(v6 + 56))(a2, v6);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 24))(a2, v6);
  uint64_t v8 = result;
  uint64_t v9 = 0;
  uint64_t v10 = result + 64;
  uint64_t v11 = 1 << *(unsigned char *)(result + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  uint64_t v13 = v12 & *(void *)(result + 64);
  uint64_t v23 = (unint64_t)(v11 + 63) >> 6;
  if (!v13) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v14 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (unint64_t i = v14 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v17)) + (v9 << 6))
  {
    uint64_t v19 = (uint64_t *)(*(void *)(v8 + 48) + 16 * i);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    swift_bridgeObjectRetain();
    uint64_t v22 = swift_retain();
    sub_1C4245F38(v22, v20, v21);
    swift_release();
    if (v4)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v9 >= v23) {
      return swift_release();
    }
    uint64_t v17 = *(void *)(v10 + 8 * v9);
    if (!v17) {
      break;
    }
LABEL_15:
    uint64_t v13 = (v17 - 1) & v17;
  }
  uint64_t v18 = v9 + 1;
  if (v9 + 1 >= v23) {
    return swift_release();
  }
  uint64_t v17 = *(void *)(v10 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  uint64_t v18 = v9 + 2;
  if (v9 + 2 >= v23) {
    return swift_release();
  }
  uint64_t v17 = *(void *)(v10 + 8 * v18);
  if (v17) {
    goto LABEL_14;
  }
  uint64_t v18 = v9 + 3;
  if (v9 + 3 >= v23) {
    return swift_release();
  }
  uint64_t v17 = *(void *)(v10 + 8 * v18);
  if (v17)
  {
LABEL_14:
    uint64_t v9 = v18;
    goto LABEL_15;
  }
  while (1)
  {
    uint64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v23) {
      return swift_release();
    }
    uint64_t v17 = *(void *)(v10 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C424793C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_1C447829C(v2, a1);
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_0.minEncodingVersion.getter@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)(a1 + 8) + 24))();
  sub_1C447829C(v3, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C42479DC()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C4247A0C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t sub_1C4247A14()
{
  return 0;
}

uint64_t sub_1C4247A20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C4498088();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C4247A68(uint64_t a1)
{
  unint64_t v2 = sub_1C42469F0();
  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C4247AA4(uint64_t a1)
{
  unint64_t v2 = sub_1C42469F0();
  return MEMORY[0x1F41862B0](a1, v2);
}

void CRStruct_Base.init(_:)(void *a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, uint64_t))(a3 + 48))(a2, a3);
}

Swift::Void __swiftcall CRStruct_Base.merge(additionalFields:)(Swift::OpaquePointer additionalFields)
{
  uint64_t v3 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))(v1 + 40))(v4);
  sub_1C4477B90((uint64_t)additionalFields._rawValue);
  v3(v4, 0);
}

Swift::Bool __swiftcall CRStruct_Base.additionalFieldsHasDelta(from:)(Swift::OpaquePointer from)
{
  uint64_t v3 = (*(uint64_t (**)())(v1 + 24))();
  LOBYTE(from._rawValue) = sub_1C4478090((uint64_t)from._rawValue, v3);
  swift_bridgeObjectRelease();
  return (uint64_t)from._rawValue & 1;
}

uint64_t CRStruct_Base.copyAdditionalFields(renamingReferences:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  uint64_t v5 = sub_1C4341774(v4, a1);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t CRStruct_Base.copyAdditionalFields(renamingReferences:)(unint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a1) {
    a1 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v7 = a1;
  swift_bridgeObjectRetain();
  uint64_t v5 = CRStruct_Base.copyAdditionalFields(renamingReferences:)((uint64_t)&v7, a2, a3);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t CRStruct_Base.additionalFieldsMinEncodingVersion.getter@<X0>(uint64_t a1@<X1>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (*(uint64_t (**)(void))(a1 + 24))();
  sub_1C447829C(v3, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C4247D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v20 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0648);
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Proto_Struct(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void *)(a1 + *(int *)(type metadata accessor for Proto_CRDT(0) + 20))
      + OBJC_IVAR____TtCV9Coherence10Proto_CRDTP33_8F93C82C9C5F20EAB9E21F7119431FBB13_StorageClass__taggedOneOf;
  swift_beginAccess();
  sub_1C3F970C4(v15, (uint64_t)v11, &qword_1EBBC0648);
  uint64_t v16 = type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v11, 1, v16) == 1)
  {
    sub_1C3F962E0((uint64_t)v11, &qword_1EBBC0648);
LABEL_6:
    uint64_t v17 = MEMORY[0x1E4FBC860];
    *uint64_t v14 = MEMORY[0x1E4FBC860];
    v14[1] = v17;
    void v14[2] = v17;
    sub_1C4496888();
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 3)
  {
    sub_1C3F923BC((uint64_t)v11, type metadata accessor for Proto_CRDT.OneOf_TaggedOneOf);
    goto LABEL_6;
  }
  sub_1C3FBAF7C((uint64_t)v11, (uint64_t)v14, type metadata accessor for Proto_Struct);
LABEL_7:
  sub_1C4247F78((uint64_t)v14, a2, a3, v20, a5);
  return sub_1C3F923BC(a1, type metadata accessor for Proto_CRDT);
}

uint64_t sub_1C4247F78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v77 = a2;
  uint64_t v9 = type metadata accessor for Proto_CRDT(0);
  uint64_t v76 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v75 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a4 + 8);
  (*(void (**)(uint64_t, uint64_t))(v15 + 48))(a3, v15);
  uint64_t v65 = v12;
  uint64_t v16 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  uint64_t v68 = a5;
  v16(a5, v14, a3);
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 16);
  uint64_t v69 = a3;
  uint64_t v18 = (void *)v17(a3, v15);
  uint64_t v78 = a1;
  uint64_t v19 = *(void *)a1;
  uint64_t v73 = *(void *)(*(void *)a1 + 16);
  if (!v73)
  {
    swift_bridgeObjectRetain();
LABEL_46:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v74)
    {
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v68, v69);
      swift_bridgeObjectRelease();
      return sub_1C3F923BC(v78, type metadata accessor for Proto_Struct);
    }
    else
    {
      sub_1C3F923BC(v78, type metadata accessor for Proto_Struct);
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v72 = v19 + 32;
  uint64_t v66 = v15 + 40;
  uint64_t v67 = v15;
  swift_bridgeObjectRetain();
  unint64_t v20 = 0;
  int64_t v64 = v18 + 9;
  uint64_t v21 = (void *)MEMORY[0x1E4FBC868];
  uint64_t v70 = v18;
  uint64_t v71 = v19;
  while (1)
  {
    if (v20 >= *(void *)(v19 + 16))
    {
      __break(1u);
LABEL_53:
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
      goto LABEL_56;
    }
    uint64_t v23 = *(void *)(v78 + 8);
    if (v20 >= *(void *)(v23 + 16)) {
      goto LABEL_53;
    }
    unint64_t v24 = *(void *)(v72 + 8 * v20);
    uint64_t v25 = v75;
    sub_1C3FB9FB4(v23+ ((*(unsigned __int8 *)(v76 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v76 + 80))+ *(void *)(v76 + 72) * v20, v75);
    type metadata accessor for CRDecoder(0);
    swift_allocObject();
    uint64_t v26 = v77;
    swift_retain();
    uint64_t v27 = sub_1C3FB9A38(v25, v26);
    swift_release();
    uint64_t v28 = *(void *)(v27 + 32);
    unint64_t v29 = *(void *)(v28 + 16);
    if (v29) {
      BOOL v30 = v24 >= v29;
    }
    else {
      BOOL v30 = 1;
    }
    if (v30)
    {
      sub_1C3FE3FF0();
      swift_allocError();
      *(_OWORD *)uint64_t v61 = xmmword_1C449B6C0;
      *(unsigned char *)(v61 + 16) = 0;
      swift_willThrow();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v68, v69);
      return sub_1C3F923BC(v78, type metadata accessor for Proto_Struct);
    }
    uint64_t v31 = v28 + 16 * v24;
    uint64_t v32 = *(void *)(v31 + 32);
    uint64_t v33 = *(void *)(v31 + 40);
    uint64_t v34 = v18[2];
    if (!v34) {
      goto LABEL_28;
    }
    BOOL v35 = v18[4] == v32 && v18[5] == v33;
    if (!v35 && (sub_1C44982E8() & 1) == 0)
    {
      if (v34 == 1) {
        goto LABEL_28;
      }
      BOOL v56 = v18[6] == v32 && v18[7] == v33;
      if (!v56 && (sub_1C44982E8() & 1) == 0) {
        break;
      }
    }
LABEL_18:
    swift_bridgeObjectRetain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v80[0] = v21;
    unint64_t v38 = sub_1C3FB9894(v32, v33);
    uint64_t v39 = v21[2];
    BOOL v40 = (v37 & 1) == 0;
    uint64_t v41 = v39 + v40;
    if (__OFADD__(v39, v40)) {
      goto LABEL_54;
    }
    char v42 = v37;
    if (v21[3] >= v41)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1C4068D50();
      }
    }
    else
    {
      sub_1C3FB9C9C(v41, isUniquelyReferenced_nonNull_native);
      uint64_t v43 = sub_1C3FB9894(v32, v33);
      if ((v42 & 1) != (v44 & 1)) {
        goto LABEL_57;
      }
      unint64_t v38 = v43;
    }
    uint64_t v19 = v71;
    uint64_t v21 = (void *)v80[0];
    if (v42)
    {
      uint64_t v22 = *(void *)(v80[0] + 56);
      swift_release();
      *(void *)(v22 + 8 * v38) = v27;
    }
    else
    {
      *(void *)(v80[0] + 8 * (v38 >> 6) + 64) |= 1 << v38;
      uint64_t v45 = (uint64_t *)(v21[6] + 16 * v38);
      *uint64_t v45 = v32;
      v45[1] = v33;
      *(void *)(v21[7] + 8 * v38) = v27;
      uint64_t v46 = v21[2];
      BOOL v47 = __OFADD__(v46, 1);
      uint64_t v48 = v46 + 1;
      if (v47) {
        goto LABEL_55;
      }
      void v21[2] = v48;
      swift_bridgeObjectRetain();
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = v70;
LABEL_5:
    if (++v20 == v73) {
      goto LABEL_46;
    }
  }
  if (v34 == 2)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v49 = swift_retain();
    uint64_t v50 = v74;
    AnyCRDT.init(from:)(v49, &v81);
    uint64_t v74 = v50;
    if (v50)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v68, v69);
      return sub_1C3F923BC(v78, type metadata accessor for Proto_Struct);
    }
    uint64_t v51 = v81;
    uint64_t v52 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t))(v67 + 40))(v80, v69);
    uint64_t v54 = v53;
    char v55 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v79 = *v54;
    *uint64_t v54 = 0x8000000000000000;
    sub_1C4420DEC(v51, v32, v33, v55);
    *uint64_t v54 = v79;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v52(v80, 0);
    swift_release();
    uint64_t v18 = v70;
    uint64_t v19 = v71;
    goto LABEL_5;
  }
  unint64_t v57 = v64;
  uint64_t v58 = 2;
  while (1)
  {
    uint64_t v59 = v58 + 1;
    if (__OFADD__(v58, 1)) {
      break;
    }
    BOOL v60 = *(v57 - 1) == v32 && *v57 == v33;
    if (v60 || (sub_1C44982E8() & 1) != 0) {
      goto LABEL_18;
    }
    v57 += 2;
    ++v58;
    if (v59 == v34) {
      goto LABEL_28;
    }
  }
LABEL_56:
  __break(1u);
LABEL_57:
  uint64_t result = sub_1C4498558();
  __break(1u);
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CRStruct_0.decode(fields:)(Swift::OpaquePointer fields)
{
}

uint64_t sub_1C4248678(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  if (!v8) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (unint64_t i = v12 | (v11 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    uint64_t v17 = (uint64_t *)(*(void *)(a2 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    swift_bridgeObjectRetain();
    uint64_t v20 = swift_retain();
    sub_1C4245F38(v20, v18, v19);
    swift_release();
    if (v3)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v9) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v5 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_17:
    unint64_t v8 = (v15 - 1) & v15;
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v9) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v9) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v9) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15) {
    goto LABEL_16;
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v9) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
LABEL_16:
    int64_t v11 = v16;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v9) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v5 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t CRStruct_2.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3F62AA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))CRStruct_2.encode(to:));
}

{
  return sub_1C3F63020(a1, a2, a3, CRStruct_2.encodeFields(to:));
}

uint64_t CRStruct_2.encodeFields(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v26[7] = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v22 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v20 = (char *)&v19 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - v9;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v26, a2, v4);
  uint64_t v11 = v26[0];
  uint64_t v12 = v26[1];
  uint64_t v19 = v26[3];
  uint64_t v25 = v26[4];
  uint64_t v23 = v26[5];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = v24;
  sub_1C3F633DC((uint64_t)v10, v11, v12, v7, *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8));
  if (v14)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  else
  {
    uint64_t v24 = v12;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_retain();
    uint64_t v16 = (uint64_t)v20;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v17 = v22;
    uint64_t v18 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v16, v19, v25, v17, *(void *)(*(void *)(v18 + 16) + 8));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v16, v17);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CRStruct_3.decode(fields:)(Swift::OpaquePointer fields)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v33 - v6;
  uint64_t v42 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v42);
  uint64_t v43 = (char *)&v33 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v8);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 64))(v48, v3, v5);
  uint64_t v9 = v48[1];
  uint64_t v10 = v48[4];
  uint64_t v47 = v48[8];
  if (!*((void *)fields._rawValue + 2)) {
    goto LABEL_18;
  }
  uint64_t v44 = v48[5];
  uint64_t v45 = v48[2];
  uint64_t v46 = v48[7];
  uint64_t v11 = v48[0];
  unint64_t v38 = (void (*)(uint64_t, uint64_t, uint64_t))v48[3];
  uint64_t v12 = v48[6];
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C3FB9894(v11, v9);
  uint64_t v37 = v12;
  if (v14)
  {
    uint64_t v39 = v10;
    unint64_t v15 = *(void **)(*((void *)fields._rawValue + 7) + 8 * v13);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v34 = *(void (**)(void *, uint64_t, uint64_t))(v16 + 8);
    swift_retain();
    uint64_t v35 = v9;
    swift_retain();
    rawValue = v15;
    uint64_t v17 = v49;
    v34(v15, v8, v16);
    uint64_t v49 = v17;
    if (v17)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
LABEL_15:
      swift_release();
      swift_release();
      swift_release();
      return;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
    uint64_t v10 = v39;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  if (!*((void *)fields._rawValue + 2)) {
    goto LABEL_18;
  }
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_1C3FB9894((uint64_t)v38, v10);
  if (v19)
  {
    uint64_t v20 = *((void *)fields._rawValue + 7);
    rawValue = fields._rawValue;
    uint64_t v21 = *(void *)(v20 + 8 * v18);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v22 = v42;
    uint64_t v23 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    unint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 8);
    uint64_t v39 = v10;
    swift_retain();
    swift_retain();
    uint64_t v24 = v49;
    v38(v21, v22, v23);
    uint64_t v49 = v24;
    if (v24)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_15;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
    uint64_t v10 = v39;
    uint64_t v25 = v46;
    fields._rawValue = rawValue;
    if (!rawValue[2]) {
      goto LABEL_18;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v25 = v46;
    if (!*((void *)fields._rawValue + 2))
    {
LABEL_18:
      swift_release();
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1C3FB9894(v37, v25);
  if (v27)
  {
    uint64_t v39 = v10;
    uint64_t v28 = *(void *)(*((void *)fields._rawValue + 7) + 8 * v26);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v29 = AssociatedTypeWitness;
    uint64_t v30 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 8);
    swift_retain();
    swift_retain();
    uint64_t v32 = v49;
    v31(v28, v29, v30);
    uint64_t v49 = v32;
    if (v32)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release_n();
    uint64_t v47 = v44;
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t CRStruct_3.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3FBA03C(a1, a2, a3, (void (*)(void *, uint64_t, uint64_t))CRStruct_3.decode(fields:), a4);
}

uint64_t CRStruct_3.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3F62AA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))CRStruct_3.encode(to:));
}

{
  return sub_1C3F63020(a1, a2, a3, CRStruct_3.encodeFields(to:));
}

uint64_t CRStruct_3.encodeFields(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  v41[11] = a1;
  uint64_t v6 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  char v27 = (char *)&v25 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v31 = (char *)&v25 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v25 - v11;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 64))(v41, a2, v6);
  uint64_t v13 = v41[0];
  uint64_t v14 = v41[1];
  uint64_t v15 = v41[2];
  uint64_t v30 = v41[3];
  uint64_t v35 = v41[4];
  uint64_t v40 = v41[5];
  uint64_t v26 = v41[6];
  uint64_t v37 = v41[7];
  swift_retain();
  uint64_t v34 = v4;
  swift_getAtKeyPath();
  uint64_t v38 = v15;
  swift_release();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = v39;
  sub_1C3F633DC((uint64_t)v12, v13, v14, v10, *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8));
  if (v17)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v12, v10);
  }
  else
  {
    uint64_t v39 = v14;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v10);
    swift_retain();
    uint64_t v19 = (uint64_t)v31;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v20 = v33;
    uint64_t v21 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v19, v30, v35, v20, *(void *)(*(void *)(v21 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v19, v20);
    swift_retain();
    uint64_t v22 = (uint64_t)v27;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v23 = AssociatedTypeWitness;
    uint64_t v24 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v22, v26, v37, v23, *(void *)(*(void *)(v24 + 16) + 8));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v28 + 8))(v22, v23);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CRStruct_4.decode(fields:)(Swift::OpaquePointer fields)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v48 = (char *)&v45 - v6;
  uint64_t v49 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v49);
  uint64_t v50 = (char *)&v45 - v7;
  uint64_t v51 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v51);
  uint64_t v52 = (char *)&v45 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v9);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 80))(v63, v3, v5);
  uint64_t v10 = v63[0];
  uint64_t v11 = v63[1];
  uint64_t v13 = v63[2];
  uint64_t v12 = v63[3];
  uint64_t v14 = v63[4];
  uint64_t v62 = v63[5];
  uint64_t v54 = v63[6];
  uint64_t v59 = v63[7];
  uint64_t v60 = v63[8];
  uint64_t v53 = v63[9];
  uint64_t v57 = v63[11];
  uint64_t v58 = v63[10];
  swift_bridgeObjectRetain();
  uint64_t v15 = *((void *)fields._rawValue + 2);
  uint64_t v61 = v11;
  uint64_t v56 = v14;
  if (v15)
  {
    uint64_t v46 = v12;
    sub_1C3FB9894(v10, v11);
    if (v16)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRelease_n();
      uint64_t v45 = v3;
      uint64_t v17 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
      uint64_t v55 = v13;
      uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 8);
      uint64_t v19 = swift_retain();
      uint64_t v20 = v64;
      v18(v19, v9, v17);
      uint64_t v64 = v20;
      if (v20)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_27:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release_n();
        return;
      }
      uint64_t v13 = v55;
      swift_setAtWritableKeyPath();
      swift_release();
      swift_release();
      uint64_t v14 = v56;
      uint64_t v21 = v59;
      uint64_t v3 = v45;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = v59;
    }
    uint64_t v12 = v46;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = v59;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  if (*((void *)fields._rawValue + 2) && (sub_1C3FB9894(v12, v14), (v22 & 1) != 0))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v23 = v51;
    uint64_t v24 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
    uint64_t v45 = v3;
    uint64_t v25 = *(void *)(v24 + 8);
    uint64_t v55 = v13;
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 8);
    uint64_t v27 = swift_retain();
    uint64_t v28 = v64;
    v26(v27, v23, v25);
    uint64_t v64 = v28;
    if (v28)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_27;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
    uint64_t v13 = v55;
    uint64_t v29 = v58;
    uint64_t v21 = v59;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = v58;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*((void *)fields._rawValue + 2) && (uint64_t v30 = sub_1C3FB9894(v54, v21), (v31 & 1) != 0))
  {
    uint64_t v54 = *(void *)(*((void *)fields._rawValue + 7) + 8 * v30);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v32 = v49;
    uint64_t v33 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v55 = v13;
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 8);
    uint64_t v35 = swift_retain();
    uint64_t v36 = v64;
    v34(v35, v32, v33);
    uint64_t v64 = v36;
    if (v36)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_27;
    }
    rawValue = fields._rawValue;
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
    uint64_t v29 = v58;
  }
  else
  {
    rawValue = fields._rawValue;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  if (rawValue[2] && (uint64_t v38 = sub_1C3FB9894(v53, v29), (v39 & 1) != 0))
  {
    uint64_t v40 = *(void *)(rawValue[7] + 8 * v38);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v41 = AssociatedTypeWitness;
    uint64_t v42 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 8);
    swift_retain();
    swift_retain();
    uint64_t v44 = v64;
    v43(v40, v41, v42);
    uint64_t v64 = v44;
    if (v44)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_27;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

uint64_t CRStruct_4.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3FBA03C(a1, a2, a3, (void (*)(void *, uint64_t, uint64_t))CRStruct_4.decode(fields:), a4);
}

uint64_t CRStruct_4.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3F62AA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))CRStruct_4.encode(to:));
}

{
  return sub_1C3F63020(a1, a2, a3, CRStruct_4.encodeFields(to:));
}

uint64_t CRStruct_4.encodeFields(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v54 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v36 = (char *)&v33 - v5;
  uint64_t v40 = swift_getAssociatedTypeWitness();
  uint64_t v41 = *(void *)(v40 - 8);
  MEMORY[0x1F4188790](v40);
  char v39 = (char *)&v33 - v6;
  uint64_t v44 = swift_getAssociatedTypeWitness();
  uint64_t v42 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v47 = (char *)&v33 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v49 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v33 - v9;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 80))(v55, a2, v4);
  uint64_t v11 = v55[0];
  uint64_t v12 = v55[1];
  uint64_t v13 = v55[2];
  uint64_t v43 = v55[3];
  uint64_t v52 = v55[4];
  uint64_t v53 = v55[5];
  uint64_t v38 = v55[6];
  uint64_t v50 = v55[8];
  uint64_t v51 = v55[7];
  uint64_t v35 = v55[9];
  uint64_t v14 = v55[11];
  uint64_t v48 = v55[10];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v46 = v4;
  uint64_t v45 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = v56;
  sub_1C3F633DC((uint64_t)v10, v11, v12, v8, *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8));
  uint64_t v56 = v16;
  if (v16)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v10, v8);
  }
  else
  {
    uint64_t v33 = v14;
    (*(void (**)(char *, uint64_t))(v49 + 8))(v10, v8);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v18 = v52;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v19 = (uint64_t)v47;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v20 = v44;
    uint64_t v21 = swift_getAssociatedConformanceWitness();
    uint64_t v22 = v56;
    sub_1C3F633DC(v19, v43, v18, v20, *(void *)(*(void *)(v21 + 16) + 8));
    uint64_t v56 = v22;
    if (v22)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v47, v20);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v47, v20);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v23 = v51;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v49 = v13;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v24 = (uint64_t)v39;
      swift_getAtKeyPath();
      swift_release();
      uint64_t v25 = (char *)v12;
      uint64_t v26 = v40;
      uint64_t v27 = swift_getAssociatedConformanceWitness();
      uint64_t v28 = v56;
      sub_1C3F633DC(v24, v38, v23, v26, *(void *)(*(void *)(v27 + 16) + 8));
      uint64_t v56 = v28;
      if (v28)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v41 + 8))(v24, v26);
      }
      else
      {
        uint64_t v47 = v25;
        (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v24, v26);
        swift_retain();
        uint64_t v29 = (uint64_t)v36;
        swift_getAtKeyPath();
        swift_release();
        uint64_t v30 = AssociatedTypeWitness;
        uint64_t v31 = swift_getAssociatedConformanceWitness();
        uint64_t v32 = v56;
        sub_1C3F633DC(v29, v35, v48, v30, *(void *)(*(void *)(v31 + 16) + 8));
        uint64_t v56 = v32;
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8))(v29, v30);
      }
    }
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CRStruct_5.decode(fields:)(Swift::OpaquePointer fields)
{
  uint64_t v3 = v1;
  uint64_t v5 = *(void *)(v2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v56 = (char *)&v53 - v6;
  uint64_t v57 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v57);
  uint64_t v58 = (char *)&v53 - v7;
  uint64_t v59 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v59);
  uint64_t v60 = (char *)&v53 - v8;
  uint64_t v61 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v61);
  rawValue = (char *)&v53 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v10);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 96))(v76, v3, v5);
  uint64_t v11 = v76[0];
  uint64_t v12 = v76[1];
  uint64_t v13 = v76[2];
  uint64_t v14 = v76[3];
  uint64_t v15 = v76[4];
  uint64_t v75 = v76[5];
  uint64_t v65 = v76[6];
  uint64_t v72 = v76[7];
  uint64_t v74 = v76[8];
  uint64_t v64 = v76[9];
  uint64_t v73 = v76[10];
  uint64_t v70 = v76[11];
  uint64_t v63 = v76[12];
  uint64_t v67 = v76[13];
  uint64_t v66 = v76[14];
  swift_bridgeObjectRetain();
  uint64_t v16 = *((void *)fields._rawValue + 2);
  uint64_t v71 = v12;
  uint64_t v69 = v13;
  uint64_t v68 = v15;
  if (v16)
  {
    uint64_t v54 = v14;
    sub_1C3FB9894(v11, v12);
    if (v17)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRelease_n();
      uint64_t v53 = v3;
      uint64_t v18 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
      uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 8);
      uint64_t v20 = swift_retain();
      uint64_t v21 = v77;
      v19(v20, v10, v18);
      uint64_t v77 = v21;
      if (v21)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
LABEL_31:
        swift_bridgeObjectRelease();
        swift_release();
        swift_release_n();
        return;
      }
      swift_setAtWritableKeyPath();
      swift_release();
      swift_release();
      uint64_t v15 = v68;
      uint64_t v3 = v53;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v14 = v54;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  if (*((void *)fields._rawValue + 2) && (sub_1C3FB9894(v14, v15), (v22 & 1) != 0))
  {
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v23 = v61;
    uint64_t v24 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v53 = v3;
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 8);
    uint64_t v26 = swift_retain();
    uint64_t v27 = v77;
    v25(v26, v23, v24);
    uint64_t v77 = v27;
    if (v27)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
    uint64_t v28 = v72;
    uint64_t v29 = v73;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v28 = v72;
    uint64_t v29 = v73;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*((void *)fields._rawValue + 2) && (uint64_t v30 = sub_1C3FB9894(v65, v28), (v31 & 1) != 0))
  {
    rawValue = (char *)fields._rawValue;
    uint64_t v65 = *(void *)(*((void *)fields._rawValue + 7) + 8 * v30);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v32 = v59;
    uint64_t v33 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 8);
    uint64_t v35 = swift_retain();
    uint64_t v36 = v77;
    v34(v35, v32, v33);
    uint64_t v77 = v36;
    if (v36)
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
    uint64_t v29 = v73;
    fields._rawValue = rawValue;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (!*((void *)fields._rawValue + 2))
  {
    uint64_t v37 = fields._rawValue;
    goto LABEL_26;
  }
  uint64_t v37 = fields._rawValue;
  uint64_t v38 = sub_1C3FB9894(v64, v29);
  if ((v39 & 1) == 0)
  {
LABEL_26:
    swift_bridgeObjectRelease();
    goto LABEL_27;
  }
  rawValue = (char *)fields._rawValue;
  uint64_t v65 = *(void *)(*((void *)fields._rawValue + 7) + 8 * v38);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease_n();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v40 = v57;
  uint64_t v41 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
  uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 8);
  uint64_t v43 = swift_retain();
  uint64_t v44 = v77;
  v42(v43, v40, v41);
  uint64_t v77 = v44;
  if (v44)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_31;
  }
  uint64_t v37 = rawValue;
  swift_setAtWritableKeyPath();
  swift_release();
  swift_release();
LABEL_27:
  uint64_t v45 = v67;
  swift_bridgeObjectRetain();
  if (v37[2] && (uint64_t v46 = sub_1C3FB9894(v63, v45), (v47 & 1) != 0))
  {
    uint64_t v48 = *(void *)(v37[7] + 8 * v46);
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v49 = AssociatedTypeWitness;
    uint64_t v50 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 8);
    swift_retain();
    swift_retain();
    uint64_t v52 = v77;
    v51(v48, v49, v50);
    uint64_t v77 = v52;
    if (v52)
    {
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_31;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release_n();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

uint64_t CRStruct_5.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3FBA03C(a1, a2, a3, (void (*)(void *, uint64_t, uint64_t))CRStruct_5.decode(fields:), a4);
}

uint64_t CRStruct_5.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3F62AA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))CRStruct_5.encode(to:));
}

{
  return sub_1C3F63020(a1, a2, a3, CRStruct_5.encodeFields(to:));
}

uint64_t CRStruct_5.encodeFields(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v62 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v36 = (char *)v34 - v5;
  uint64_t v41 = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v42 = (char *)v34 - v6;
  uint64_t v46 = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)v34 - v7;
  uint64_t v49 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v52 = (char *)v34 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)v34 - v10;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 96))(v63, a2, v4);
  uint64_t v12 = v63[1];
  uint64_t v53 = v63[0];
  uint64_t v13 = v63[2];
  uint64_t v48 = v63[3];
  uint64_t v56 = v63[4];
  uint64_t v55 = v63[5];
  uint64_t v44 = v63[6];
  uint64_t v60 = v63[7];
  uint64_t v58 = v63[8];
  uint64_t v40 = v63[9];
  uint64_t v61 = v63[10];
  uint64_t v59 = v63[11];
  uint64_t v14 = v63[13];
  uint64_t v35 = v63[12];
  uint64_t v15 = v63[14];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v51 = v4;
  uint64_t v50 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = v57;
  sub_1C3F633DC((uint64_t)v11, v53, v12, v9, *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8));
  if (v17)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v11, v9);
  }
  else
  {
    uint64_t v19 = v47;
    uint64_t v53 = v15;
    uint64_t v57 = v14;
    (*(void (**)(char *, uint64_t))(v54 + 8))(v11, v9);
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v20 = v56;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t)v52;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v22 = v49;
    uint64_t v23 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    sub_1C3F633DC(v21, v48, v20, v22, v23);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v52, v22);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v24 = v60;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v34[1] = v13;
    swift_release();
    v34[0] = v12;
    swift_bridgeObjectRelease();
    uint64_t v25 = (uint64_t)v45;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v26 = v46;
    uint64_t v27 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v25, v44, v24, v26, *(void *)(*(void *)(v27 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v25, v26);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v28 = (uint64_t)v42;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v29 = v41;
    uint64_t v30 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v28, v40, v61, v29, *(void *)(*(void *)(v30 + 16) + 8));
    (*(void (**)(char *, uint64_t))(v39 + 8))(v42, v29);
    swift_retain();
    uint64_t v31 = (uint64_t)v36;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v32 = AssociatedTypeWitness;
    uint64_t v33 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v31, v35, v57, v32, *(void *)(*(void *)(v33 + 16) + 8));
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v31, v32);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CRStruct_6.decode(fields:)(Swift::OpaquePointer fields)
{
  void (*v11)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t AssociatedConformanceWitness;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t AssociatedTypeWitness;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void v120[19];
  void *rawValue;

  uint64_t v3 = v1;
  rawValue = fields._rawValue;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v70 = (char *)&v68 - v5;
  uint64_t v71 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v71);
  uint64_t v72 = (char *)&v68 - v6;
  uint64_t v73 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v73);
  uint64_t v74 = (char *)&v68 - v7;
  uint64_t v75 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v75);
  uint64_t v76 = (char *)&v68 - v8;
  uint64_t v78 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v78);
  uint64_t v79 = (char *)&v68 - v9;
  uint64_t v81 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v81);
  uint64_t v82 = (char *)&v68 - v10;
  uint64_t v11 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 112);
  uint64_t v87 = v3;
  uint64_t v88 = v4;
  v11(&v102, v3, v4);
  uint64_t v12 = v104;
  uint64_t v92 = v106;
  unint64_t v101 = v107;
  uint64_t v95 = v109;
  uint64_t v13 = v110;
  uint64_t v15 = v112;
  uint64_t v14 = v113;
  uint64_t v16 = v115;
  uint64_t v17 = v116;
  uint64_t v18 = v118;
  uint64_t v19 = v119;
  uint64_t v85 = v105;
  uint64_t v86 = v102;
  v120[0] = v102;
  v120[1] = v103;
  uint64_t v97 = v103;
  v120[2] = v104;
  v120[3] = v105;
  v120[4] = v106;
  v120[5] = v107;
  uint64_t v83 = v111;
  uint64_t v84 = v108;
  v120[6] = v108;
  v120[7] = v109;
  v120[8] = v110;
  v120[9] = v111;
  v120[10] = v112;
  v120[11] = v113;
  char v80 = v114;
  v120[12] = v114;
  v120[13] = v115;
  v120[14] = v116;
  v120[15] = v117;
  uint64_t v77 = v117;
  v120[16] = v118;
  v120[17] = v119;
  sub_1C4342124((uint64_t)v120);
  uint64_t v99 = v12;
  swift_release();
  uint64_t v93 = v19;
  swift_release();
  uint64_t v100 = v18;
  swift_bridgeObjectRelease();
  uint64_t v91 = v17;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v96 = v14;
  swift_release();
  swift_bridgeObjectRelease();
  int64_t v94 = v13;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v20 = rawValue[2];
  uint64_t v89 = v16;
  uint64_t v90 = v15;
  if (v20 && (sub_1C3FB9894(v86, v97), (v21 & 1) != 0))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342124((uint64_t)v120);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v22 = v81;
    uint64_t v23 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 8);
    uint64_t v25 = swift_retain();
    uint64_t v26 = v98;
    v24(v25, v22, v23);
    uint64_t v98 = v26;
    if (v26) {
      goto LABEL_38;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342124((uint64_t)v120);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v27 = sub_1C3FB9894(v85, v92), (v28 & 1) != 0))
  {
    uint64_t v86 = *(void *)(rawValue[7] + 8 * v27);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342124((uint64_t)v120);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v29 = v78;
    uint64_t v30 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 8);
    uint64_t v32 = swift_retain();
    uint64_t v33 = v98;
    v31(v32, v29, v30);
    uint64_t v98 = v33;
    if (v33) {
      goto LABEL_38;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
    uint64_t v35 = v89;
    uint64_t v34 = v90;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v34 = v90;
    uint64_t v35 = v89;
  }
  sub_1C4342124((uint64_t)v120);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2])
  {
    uint64_t v37 = sub_1C3FB9894(v84, v95);
    if (v38)
    {
      uint64_t v39 = *(void *)(rawValue[7] + 8 * v37);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1C4342124((uint64_t)v120);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v40 = v39;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v41 = v75;
      uint64_t v42 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
      uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v42 + 8);
      swift_retain();
      uint64_t v44 = v98;
      v43(v40, v41, v42);
      uint64_t v98 = v44;
      if (v44) {
        goto LABEL_38;
      }
      swift_setAtWritableKeyPath();
      swift_release();
      swift_release();
      uint64_t v36 = v89;
      uint64_t v45 = v90;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v45 = v90;
    }
  }
  else
  {
    uint64_t v45 = v34;
    swift_bridgeObjectRelease();
  }
  sub_1C4342124((uint64_t)v120);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v46 = sub_1C3FB9894(v83, v45), (v47 & 1) != 0))
  {
    uint64_t v86 = *(void *)(rawValue[7] + 8 * v46);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342124((uint64_t)v120);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v48 = v73;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v50 = v86;
    uint64_t v51 = *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8);
    uint64_t v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 8);
    swift_retain();
    uint64_t v53 = v98;
    v52(v50, v48, v51);
    uint64_t v98 = v53;
    if (v53) {
      goto LABEL_38;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
    uint64_t v36 = v89;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342124((uint64_t)v120);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v54 = sub_1C3FB9894(v80, v36), (v55 & 1) != 0))
  {
    uint64_t v56 = *(void *)(rawValue[7] + 8 * v54);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342124((uint64_t)v120);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v57 = v71;
    uint64_t v58 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 8);
    swift_retain();
    uint64_t v60 = v98;
    v59(v56, v57, v58);
    uint64_t v98 = v60;
    if (v60) {
      goto LABEL_38;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342124((uint64_t)v120);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (!rawValue[2] || (uint64_t v61 = sub_1C3FB9894(v77, v100), (v62 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_40;
  }
  uint64_t v63 = *(void *)(rawValue[7] + 8 * v61);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v120);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v64 = AssociatedTypeWitness;
  uint64_t v65 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
  uint64_t v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 8);
  swift_retain();
  uint64_t v67 = v98;
  v66(v63, v64, v65);
  uint64_t v98 = v67;
  if (v67)
  {
LABEL_38:
    swift_release();
    swift_release();
LABEL_40:
    sub_1C43421F0((uint64_t)v120);
    return;
  }
  swift_setAtWritableKeyPath();
  sub_1C43421F0((uint64_t)v120);
  swift_release();
  swift_release();
}

uint64_t CRStruct_6.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3FBA03C(a1, a2, a3, (void (*)(void *, uint64_t, uint64_t))CRStruct_6.decode(fields:), a4);
}

uint64_t CRStruct_6.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3F62AA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))CRStruct_6.encode(to:));
}

{
  return sub_1C3F63020(a1, a2, a3, CRStruct_6.encodeFields(to:));
}

uint64_t CRStruct_6.encodeFields(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v14)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t AssociatedConformanceWitness;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  void v106[19];

  char v80 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v51 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v52 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v50 = (char *)&v49 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v54 = (char *)&v49 - v8;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v59 = (char *)&v49 - v9;
  uint64_t v64 = swift_getAssociatedTypeWitness();
  uint64_t v61 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (char *)&v49 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(v11 - 8);
  uint64_t v67 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v75 = (char *)&v49 - v12;
  uint64_t v79 = swift_getAssociatedTypeWitness();
  uint64_t v76 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v77 = (char *)&v49 - v13;
  uint64_t v82 = v4;
  uint64_t v14 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 112);
  uint64_t v87 = a2;
  v14(&v88, a2, v4);
  uint64_t v15 = v89;
  uint64_t v78 = v88;
  uint64_t v85 = v93;
  uint64_t v86 = v92;
  uint64_t v83 = v90;
  uint64_t v84 = v95;
  uint64_t v16 = v96;
  uint64_t v18 = v98;
  uint64_t v17 = v99;
  uint64_t v19 = v101;
  uint64_t v20 = v102;
  uint64_t v21 = v104;
  uint64_t v22 = v105;
  v106[0] = v88;
  v106[1] = v89;
  v106[2] = v90;
  v106[3] = v91;
  uint64_t v65 = v91;
  v106[4] = v92;
  v106[5] = v93;
  uint64_t v62 = v94;
  v106[6] = v94;
  v106[7] = v95;
  v106[8] = v96;
  v106[9] = v97;
  uint64_t v58 = v97;
  v106[10] = v98;
  v106[11] = v99;
  uint64_t v53 = v100;
  v106[12] = v100;
  v106[13] = v101;
  v106[14] = v102;
  v106[15] = v103;
  uint64_t v49 = v103;
  v106[16] = v104;
  v106[17] = v105;
  sub_1C4342124((uint64_t)v106);
  swift_bridgeObjectRelease();
  uint64_t v74 = v22;
  swift_release();
  uint64_t v68 = v21;
  swift_bridgeObjectRelease();
  uint64_t v69 = v20;
  swift_release();
  uint64_t v70 = v19;
  swift_bridgeObjectRelease();
  uint64_t v71 = v17;
  swift_release();
  uint64_t v72 = v18;
  uint64_t v23 = v79;
  swift_bridgeObjectRelease();
  uint64_t v73 = v16;
  uint64_t v24 = (uint64_t)v77;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v25 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
  uint64_t v26 = v78;
  uint64_t v78 = v15;
  uint64_t v27 = v81;
  sub_1C3F633DC(v24, v26, v15, v23, v25);
  if (v27)
  {
    sub_1C43421F0((uint64_t)v106);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8))(v24, v23);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v24, v23);
    sub_1C4342124((uint64_t)v106);
    uint64_t v29 = v86;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v75;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v31 = v67;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v30, v65, v29, v31, *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8));
    (*(void (**)(char *, uint64_t))(v66 + 8))(v75, v31);
    sub_1C4342124((uint64_t)v106);
    uint64_t v33 = v84;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v34 = (uint64_t)v63;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v35 = v64;
    uint64_t v36 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v34, v62, v33, v35, *(void *)(*(void *)(v36 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v61 + 8))(v34, v35);
    sub_1C4342124((uint64_t)v106);
    uint64_t v37 = v72;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v38 = (uint64_t)v59;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v39 = v60;
    uint64_t v40 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v38, v58, v37, v39, *(void *)(*(void *)(v40 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v38, v39);
    sub_1C4342124((uint64_t)v106);
    uint64_t v41 = v70;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v42 = (uint64_t)v54;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v43 = v56;
    uint64_t v44 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v42, v53, v41, v43, *(void *)(*(void *)(v44 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v42, v43);
    sub_1C4342124((uint64_t)v106);
    uint64_t v45 = v68;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v46 = (uint64_t)v50;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v47 = v52;
    uint64_t v48 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v46, v49, v45, v47, *(void *)(*(void *)(v48 + 16) + 8));
    sub_1C43421F0((uint64_t)v106);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v51 + 8))(v46, v47);
  }
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CRStruct_7.decode(fields:)(Swift::OpaquePointer fields)
{
  void (*v12)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  void (*v63)(uint64_t, uint64_t, uint64_t);
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(uint64_t, uint64_t, uint64_t);
  uint64_t v71;
  void v72[2];
  uint64_t AssociatedTypeWitness;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void v130[22];
  void *rawValue;

  uint64_t v3 = v1;
  rawValue = fields._rawValue;
  uint64_t v4 = *(void *)(v2 + 8);
  v72[0] = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v72[0]);
  v72[1] = (char *)v72 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v74 = (char *)v72 - v6;
  uint64_t v75 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v75);
  uint64_t v76 = (char *)v72 - v7;
  uint64_t v77 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v77);
  uint64_t v78 = (char *)v72 - v8;
  char v80 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v80);
  uint64_t v81 = (char *)v72 - v9;
  uint64_t v83 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v83);
  uint64_t v84 = (char *)v72 - v10;
  uint64_t v86 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v86);
  uint64_t v87 = (char *)v72 - v11;
  uint64_t v12 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 128);
  uint64_t v92 = v3;
  uint64_t v93 = v4;
  v12(&v109, v3, v4);
  uint64_t v13 = v111;
  uint64_t v14 = v113;
  uint64_t v95 = v116;
  uint64_t v96 = v117;
  uint64_t v98 = v119;
  uint64_t v99 = v114;
  uint64_t v100 = v120;
  uint64_t v15 = v122;
  uint64_t v16 = v123;
  uint64_t v18 = v125;
  uint64_t v17 = v126;
  uint64_t v19 = v128;
  uint64_t v20 = v129;
  uint64_t v90 = v112;
  uint64_t v91 = v109;
  v130[0] = v109;
  v130[1] = v110;
  uint64_t v104 = v110;
  v130[2] = v111;
  v130[3] = v112;
  v130[4] = v113;
  v130[5] = v114;
  uint64_t v88 = v118;
  uint64_t v89 = v115;
  v130[6] = v115;
  v130[7] = v116;
  v130[8] = v117;
  v130[9] = v118;
  v130[10] = v119;
  v130[11] = v120;
  uint64_t v85 = v121;
  v130[12] = v121;
  v130[13] = v122;
  v130[14] = v123;
  v130[15] = v124;
  uint64_t v82 = v124;
  v130[16] = v125;
  v130[17] = v126;
  uint64_t v79 = v127;
  v130[18] = v127;
  v130[19] = v128;
  v130[20] = v129;
  sub_1C43422B8((uint64_t)v130);
  int64_t v94 = v13;
  swift_release();
  uint64_t v106 = v20;
  swift_release();
  uint64_t v105 = v19;
  swift_bridgeObjectRelease();
  uint64_t v107 = v17;
  swift_release();
  unint64_t v103 = v18;
  swift_bridgeObjectRelease();
  uint64_t v97 = v16;
  swift_release();
  uint64_t v102 = v15;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v21 = v95;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v108 = v14;
  swift_bridgeObjectRelease();
  if (rawValue[2] && (sub_1C3FB9894(v91, v104), (v22 & 1) != 0))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43422B8((uint64_t)v130);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v23 = v86;
    uint64_t v24 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 8);
    uint64_t v26 = swift_retain();
    uint64_t v27 = v101;
    v25(v26, v23, v24);
    unint64_t v101 = v27;
    if (v27) {
      goto LABEL_44;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43422B8((uint64_t)v130);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v28 = v98;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (sub_1C3FB9894(v90, v108), (v29 & 1) != 0))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43422B8((uint64_t)v130);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v30 = v83;
    uint64_t v31 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 8);
    uint64_t v33 = swift_retain();
    uint64_t v34 = v101;
    v32(v33, v30, v31);
    unint64_t v101 = v34;
    if (v34) {
      goto LABEL_44;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
    uint64_t v35 = v95;
    uint64_t v36 = v98;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = v21;
    uint64_t v36 = v28;
  }
  sub_1C43422B8((uint64_t)v130);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v37 = sub_1C3FB9894(v89, v35), (v38 & 1) != 0))
  {
    uint64_t v39 = *(void *)(rawValue[7] + 8 * v37);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43422B8((uint64_t)v130);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v40 = v80;
    uint64_t v41 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v41 + 8);
    swift_retain();
    uint64_t v43 = v101;
    v42(v39, v40, v41);
    unint64_t v101 = v43;
    if (v43) {
      goto LABEL_44;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43422B8((uint64_t)v130);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v44 = sub_1C3FB9894(v88, v36), (v45 & 1) != 0))
  {
    uint64_t v46 = *(void *)(rawValue[7] + 8 * v44);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43422B8((uint64_t)v130);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v47 = v77;
    uint64_t v48 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 8);
    swift_retain();
    uint64_t v50 = v101;
    v49(v46, v47, v48);
    unint64_t v101 = v50;
    if (v50) {
      goto LABEL_44;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43422B8((uint64_t)v130);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v51 = sub_1C3FB9894(v85, v102), (v52 & 1) != 0))
  {
    uint64_t v53 = *(void *)(rawValue[7] + 8 * v51);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43422B8((uint64_t)v130);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v54 = v75;
    uint64_t v55 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(v55 + 8);
    swift_retain();
    uint64_t v57 = v101;
    v56(v53, v54, v55);
    unint64_t v101 = v57;
    if (v57) {
      goto LABEL_44;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43422B8((uint64_t)v130);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v58 = sub_1C3FB9894(v82, v103), (v59 & 1) != 0))
  {
    uint64_t v91 = *(void *)(rawValue[7] + 8 * v58);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43422B8((uint64_t)v130);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v60 = AssociatedTypeWitness;
    uint64_t v61 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v62 = v91;
    uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 8);
    swift_retain();
    uint64_t v64 = v101;
    v63(v62, v60, v61);
    unint64_t v101 = v64;
    if (v64) {
      goto LABEL_44;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43422B8((uint64_t)v130);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (!rawValue[2] || (uint64_t v65 = sub_1C3FB9894(v79, v105), (v66 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_45;
  }
  uint64_t v67 = *(void *)(rawValue[7] + 8 * v65);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v130);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v68 = v72[0];
  uint64_t v69 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
  uint64_t v70 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 8);
  swift_retain();
  uint64_t v71 = v101;
  v70(v67, v68, v69);
  unint64_t v101 = v71;
  if (v71)
  {
LABEL_44:
    swift_release();
    swift_release();
LABEL_45:
    sub_1C43423A0((uint64_t)v130);
    return;
  }
  swift_setAtWritableKeyPath();
  sub_1C43423A0((uint64_t)v130);
  swift_release();
  swift_release();
}

uint64_t CRStruct_7.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3FBA03C(a1, a2, a3, (void (*)(void *, uint64_t, uint64_t))CRStruct_7.decode(fields:), a4);
}

uint64_t CRStruct_7.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3F62AA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))CRStruct_7.encode(to:));
}

{
  return sub_1C3F63020(a1, a2, a3, CRStruct_7.encodeFields(to:));
}

uint64_t CRStruct_7.encodeFields(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v13)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t AssociatedConformanceWitness;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t AssociatedTypeWitness;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  void v118[22];

  uint64_t v87 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v54 = (char *)&v52 - v5;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(v6 - 8);
  uint64_t v59 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v57 = (char *)&v52 - v7;
  uint64_t v63 = swift_getAssociatedTypeWitness();
  uint64_t v60 = *(void *)(v63 - 8);
  MEMORY[0x1F4188790](v63);
  uint64_t v62 = (char *)&v52 - v8;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v64 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v66 = (char *)&v52 - v9;
  uint64_t v71 = swift_getAssociatedTypeWitness();
  uint64_t v68 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v70 = (char *)&v52 - v10;
  uint64_t v74 = swift_getAssociatedTypeWitness();
  uint64_t v72 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v82 = (char *)&v52 - v11;
  uint64_t v86 = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(v86 - 8);
  MEMORY[0x1F4188790](v86);
  uint64_t v84 = (char *)&v52 - v12;
  uint64_t v89 = v4;
  uint64_t v13 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 128);
  uint64_t v96 = a2;
  v13(&v97, a2, v4);
  uint64_t v14 = v98;
  uint64_t v85 = v97;
  uint64_t v90 = v99;
  uint64_t v91 = v101;
  int64_t v94 = v104;
  uint64_t v95 = v102;
  uint64_t v15 = v108;
  uint64_t v92 = v107;
  uint64_t v93 = v105;
  uint64_t v16 = v110;
  uint64_t v17 = v111;
  uint64_t v18 = v113;
  uint64_t v19 = v114;
  uint64_t v20 = v116;
  uint64_t v21 = v117;
  v118[0] = v97;
  v118[1] = v98;
  v118[2] = v99;
  v118[3] = v100;
  uint64_t v73 = v100;
  v118[4] = v101;
  v118[5] = v102;
  uint64_t v69 = v103;
  v118[6] = v103;
  v118[7] = v104;
  v118[8] = v105;
  v118[9] = v106;
  uint64_t v65 = v106;
  v118[10] = v107;
  v118[11] = v108;
  uint64_t v61 = v109;
  v118[12] = v109;
  v118[13] = v110;
  v118[14] = v111;
  v118[15] = v112;
  uint64_t v56 = v112;
  v118[16] = v113;
  v118[17] = v114;
  uint64_t v53 = v115;
  v118[18] = v115;
  v118[19] = v116;
  v118[20] = v117;
  sub_1C43422B8((uint64_t)v118);
  swift_bridgeObjectRelease();
  uint64_t v81 = v21;
  swift_release();
  uint64_t v76 = v20;
  swift_bridgeObjectRelease();
  uint64_t v75 = v19;
  uint64_t v22 = (uint64_t)v84;
  swift_release();
  uint64_t v77 = v18;
  swift_bridgeObjectRelease();
  uint64_t v78 = v17;
  swift_release();
  uint64_t v79 = v16;
  swift_bridgeObjectRelease();
  char v80 = v15;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v23 = v86;
  uint64_t v24 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
  uint64_t v25 = v85;
  uint64_t v85 = v14;
  uint64_t v26 = v88;
  sub_1C3F633DC(v22, v25, v14, v23, v24);
  if (v26)
  {
    sub_1C43423A0((uint64_t)v118);
    uint64_t v27 = v83;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v22, v23);
    sub_1C43422B8((uint64_t)v118);
    uint64_t v29 = v91;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v30 = (uint64_t)v82;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v31 = v74;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v30, v73, v29, v31, *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8));
    (*(void (**)(char *, uint64_t))(v72 + 8))(v82, v31);
    sub_1C43422B8((uint64_t)v118);
    uint64_t v33 = v94;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v34 = v70;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v35 = (uint64_t)v34;
    uint64_t v36 = v71;
    uint64_t v37 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v35, v69, v33, v36, *(void *)(*(void *)(v37 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v35, v36);
    sub_1C43422B8((uint64_t)v118);
    uint64_t v38 = v92;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v39 = (uint64_t)v66;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v40 = v67;
    uint64_t v41 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v39, v65, v38, v40, *(void *)(*(void *)(v41 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v39, v40);
    sub_1C43422B8((uint64_t)v118);
    uint64_t v42 = v79;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)v62;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v44 = v63;
    uint64_t v45 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v43, v61, v42, v44, *(void *)(*(void *)(v45 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v43, v44);
    sub_1C43422B8((uint64_t)v118);
    uint64_t v46 = v77;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v47 = (uint64_t)v57;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v48 = v59;
    uint64_t v49 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v47, v56, v46, v48, *(void *)(*(void *)(v49 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v47, v48);
    sub_1C43422B8((uint64_t)v118);
    uint64_t v50 = v76;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v22 = (uint64_t)v54;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v23 = AssociatedTypeWitness;
    uint64_t v51 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v22, v53, v50, v23, *(void *)(*(void *)(v51 + 16) + 8));
    sub_1C43423A0((uint64_t)v118);
    uint64_t v27 = v52;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v22, v23);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CRStruct_8.decode(fields:)(Swift::OpaquePointer fields)
{
  void (*v13)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(uint64_t, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t AssociatedConformanceWitness;
  uint64_t v43;
  uint64_t v44;
  void (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(uint64_t, uint64_t, uint64_t);
  uint64_t v84;
  uint64_t v85;
  uint64_t AssociatedTypeWitness;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  void v153[25];
  void *rawValue;

  uint64_t v3 = v1;
  rawValue = fields._rawValue;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v87 = (char *)&v85 - v5;
  uint64_t v88 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v88);
  uint64_t v89 = (char *)&v85 - v6;
  uint64_t v90 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v90);
  uint64_t v91 = (char *)&v85 - v7;
  uint64_t v92 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v92);
  uint64_t v93 = (char *)&v85 - v8;
  uint64_t v95 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v95);
  uint64_t v96 = (char *)&v85 - v9;
  uint64_t v98 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v98);
  uint64_t v99 = (char *)&v85 - v10;
  unint64_t v101 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v101);
  uint64_t v102 = (char *)&v85 - v11;
  uint64_t v104 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v104);
  uint64_t v105 = (char *)&v85 - v12;
  uint64_t v13 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 144);
  uint64_t v110 = v3;
  uint64_t v111 = v4;
  v13(&v129, v3, v4);
  uint64_t v14 = v131;
  uint64_t v118 = v136;
  uint64_t v125 = v137;
  uint64_t v126 = v139;
  uint64_t v127 = v134;
  uint64_t v128 = v140;
  int64_t v122 = v142;
  uint64_t v123 = v133;
  uint64_t v15 = v143;
  uint64_t v16 = v145;
  uint64_t v17 = v146;
  uint64_t v18 = v148;
  uint64_t v19 = v149;
  uint64_t v20 = v151;
  uint64_t v21 = v152;
  uint64_t v108 = v132;
  uint64_t v109 = v129;
  v153[0] = v129;
  uint64_t v114 = v130;
  v153[1] = v130;
  v153[2] = v131;
  v153[3] = v132;
  v153[4] = v133;
  v153[5] = v134;
  uint64_t v106 = v138;
  uint64_t v107 = v135;
  v153[6] = v135;
  v153[7] = v136;
  v153[8] = v137;
  v153[9] = v138;
  v153[10] = v139;
  v153[11] = v140;
  unint64_t v103 = v141;
  v153[12] = v141;
  v153[13] = v142;
  v153[14] = v143;
  uint64_t v100 = v144;
  v153[15] = v144;
  v153[16] = v145;
  v153[17] = v146;
  uint64_t v97 = v147;
  v153[18] = v147;
  v153[19] = v148;
  v153[20] = v149;
  int64_t v94 = v150;
  v153[21] = v150;
  v153[22] = v151;
  v153[23] = v152;
  sub_1C4342484((uint64_t)v153);
  uint64_t v115 = v14;
  swift_release();
  uint64_t v116 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v124 = v19;
  swift_release();
  uint64_t v121 = v18;
  swift_bridgeObjectRelease();
  uint64_t v119 = v17;
  swift_release();
  uint64_t v120 = v16;
  swift_bridgeObjectRelease();
  uint64_t v113 = v15;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = rawValue[2];
  uint64_t v112 = v20;
  if (v22 && (uint64_t v23 = sub_1C3FB9894(v109, v114), (v24 & 1) != 0))
  {
    uint64_t v25 = *(void *)(rawValue[7] + 8 * v23);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342484((uint64_t)v153);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v26 = v104;
    uint64_t v27 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 8);
    swift_retain();
    uint64_t v29 = v117;
    v28(v25, v26, v27);
    uint64_t v117 = v29;
    if (v29) {
      goto LABEL_30;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342484((uint64_t)v153);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v30 = sub_1C3FB9894(v108, v123), (v31 & 1) != 0))
  {
    uint64_t v109 = *(void *)(rawValue[7] + 8 * v30);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342484((uint64_t)v153);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v32 = v101;
    uint64_t v33 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v34 = v109;
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 8);
    swift_retain();
    uint64_t v36 = v117;
    v35(v34, v32, v33);
    uint64_t v117 = v36;
    if (v36) {
      goto LABEL_30;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
    uint64_t v37 = v122;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v37 = v122;
  }
  sub_1C4342484((uint64_t)v153);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2])
  {
    uint64_t v38 = sub_1C3FB9894(v107, v118);
    if (v39)
    {
      uint64_t v109 = *(void *)(rawValue[7] + 8 * v38);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1C4342484((uint64_t)v153);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v40 = v122;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v41 = v98;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v43 = v109;
      uint64_t v44 = *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8);
      uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v44 + 8);
      swift_retain();
      uint64_t v46 = v117;
      v45(v43, v41, v44);
      uint64_t v117 = v46;
      if (v46) {
        goto LABEL_30;
      }
      swift_setAtWritableKeyPath();
      swift_release();
      swift_release();
      uint64_t v47 = v40;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v47 = v122;
    }
  }
  else
  {
    uint64_t v47 = v37;
    swift_bridgeObjectRelease();
  }
  sub_1C4342484((uint64_t)v153);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2])
  {
    uint64_t v48 = sub_1C3FB9894(v106, v126);
    if (v49)
    {
      uint64_t v109 = *(void *)(rawValue[7] + 8 * v48);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1C4342484((uint64_t)v153);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v50 = v122;
      swift_bridgeObjectRelease();
      uint64_t v51 = v95;
      uint64_t v52 = swift_getAssociatedConformanceWitness();
      uint64_t v53 = v109;
      uint64_t v54 = *(void *)(*(void *)(v52 + 16) + 8);
      uint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 8);
      swift_retain();
      uint64_t v56 = v117;
      v55(v53, v51, v54);
      uint64_t v117 = v56;
      if (v56) {
        goto LABEL_30;
      }
      swift_setAtWritableKeyPath();
      swift_release();
      swift_release();
      uint64_t v47 = v50;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v47 = v122;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342484((uint64_t)v153);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v57 = sub_1C3FB9894(v103, v47), (v58 & 1) != 0))
  {
    uint64_t v109 = *(void *)(rawValue[7] + 8 * v57);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342484((uint64_t)v153);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v59 = v92;
    uint64_t v60 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v61 = v109;
    uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 8);
    swift_retain();
    uint64_t v63 = v117;
    v62(v61, v59, v60);
    uint64_t v117 = v63;
    if (v63) {
      goto LABEL_30;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342484((uint64_t)v153);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v64 = sub_1C3FB9894(v100, v120), (v65 & 1) != 0))
  {
    uint64_t v66 = *(void *)(rawValue[7] + 8 * v64);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342484((uint64_t)v153);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v67 = v90;
    uint64_t v68 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 8);
    swift_retain();
    uint64_t v70 = v117;
    v69(v66, v67, v68);
    uint64_t v117 = v70;
    if (v70) {
      goto LABEL_30;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342484((uint64_t)v153);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v71 = sub_1C3FB9894(v97, v121), (v72 & 1) != 0))
  {
    uint64_t v73 = *(void *)(rawValue[7] + 8 * v71);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342484((uint64_t)v153);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v74 = v88;
    uint64_t v75 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v75 + 8);
    swift_retain();
    uint64_t v77 = v117;
    v76(v73, v74, v75);
    uint64_t v117 = v77;
    if (v77) {
      goto LABEL_30;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342484((uint64_t)v153);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (!rawValue[2] || (uint64_t v78 = sub_1C3FB9894(v94, v112), (v79 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  char v80 = *(void *)(rawValue[7] + 8 * v78);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v153);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v81 = AssociatedTypeWitness;
  uint64_t v82 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
  uint64_t v83 = *(void (**)(uint64_t, uint64_t, uint64_t))(v82 + 8);
  swift_retain();
  uint64_t v84 = v117;
  v83(v80, v81, v82);
  uint64_t v117 = v84;
  if (v84)
  {
LABEL_30:
    swift_release();
    swift_release();
LABEL_31:
    sub_1C4342588((uint64_t)v153);
    return;
  }
  swift_setAtWritableKeyPath();
  sub_1C4342588((uint64_t)v153);
  swift_release();
  swift_release();
}

uint64_t CRStruct_8.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3FBA03C(a1, a2, a3, (void (*)(void *, uint64_t, uint64_t))CRStruct_8.decode(fields:), a4);
}

uint64_t CRStruct_8.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3F62AA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))CRStruct_8.encode(to:));
}

{
  return sub_1C3F63020(a1, a2, a3, CRStruct_8.encodeFields(to:));
}

uint64_t CRStruct_8.encodeFields(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v16)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t AssociatedConformanceWitness;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t AssociatedTypeWitness;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void v134[25];

  uint64_t v100 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v61 = (char *)&v59 - v5;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(v6 - 8);
  uint64_t v66 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v64 = (char *)&v59 - v7;
  uint64_t v70 = swift_getAssociatedTypeWitness();
  uint64_t v67 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v69 = (char *)&v59 - v8;
  uint64_t v74 = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v73 = (char *)&v59 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(void *)(v10 - 8);
  uint64_t v78 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v76 = (char *)&v59 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(v12 - 8);
  char v80 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v83 = (char *)&v59 - v13;
  uint64_t v85 = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(v85 - 8);
  MEMORY[0x1F4188790](v85);
  uint64_t v93 = (char *)&v59 - v14;
  uint64_t v95 = swift_getAssociatedTypeWitness();
  uint64_t v97 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  int64_t v94 = (char *)&v59 - v15;
  uint64_t v99 = v4;
  uint64_t v16 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 144);
  uint64_t v109 = a2;
  v16(&v110, a2, v4);
  uint64_t v17 = v111;
  uint64_t v96 = v110;
  uint64_t v107 = v114;
  uint64_t v108 = v112;
  uint64_t v105 = v117;
  uint64_t v106 = v115;
  unint64_t v103 = v120;
  uint64_t v104 = v118;
  unint64_t v101 = v123;
  uint64_t v102 = v121;
  uint64_t v18 = v124;
  uint64_t v19 = v126;
  uint64_t v20 = v127;
  uint64_t v21 = v129;
  uint64_t v22 = v130;
  uint64_t v23 = v132;
  uint64_t v24 = v133;
  v134[0] = v110;
  v134[1] = v111;
  v134[2] = v112;
  uint64_t v84 = v113;
  v134[3] = v113;
  v134[4] = v114;
  v134[5] = v115;
  uint64_t v81 = v116;
  v134[6] = v116;
  v134[7] = v117;
  v134[8] = v118;
  uint64_t v75 = v119;
  v134[9] = v119;
  v134[10] = v120;
  v134[11] = v121;
  uint64_t v72 = v122;
  v134[12] = v122;
  v134[13] = v123;
  v134[14] = v124;
  uint64_t v68 = v125;
  v134[15] = v125;
  v134[16] = v126;
  v134[17] = v127;
  uint64_t v63 = v128;
  v134[18] = v128;
  v134[19] = v129;
  v134[20] = v130;
  uint64_t v60 = v131;
  v134[21] = v131;
  v134[22] = v132;
  v134[23] = v133;
  sub_1C4342484((uint64_t)v134);
  swift_bridgeObjectRelease();
  uint64_t v91 = v24;
  swift_release();
  uint64_t v92 = v23;
  swift_bridgeObjectRelease();
  uint64_t v86 = v22;
  uint64_t v25 = (uint64_t)v94;
  swift_release();
  uint64_t v87 = v21;
  swift_bridgeObjectRelease();
  uint64_t v88 = v20;
  swift_release();
  uint64_t v89 = v19;
  uint64_t v26 = v95;
  swift_bridgeObjectRelease();
  uint64_t v90 = v18;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v27 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
  uint64_t v28 = v96;
  uint64_t v96 = v17;
  uint64_t v29 = v98;
  sub_1C3F633DC(v25, v28, v17, v26, v27);
  if (v29)
  {
    sub_1C4342588((uint64_t)v134);
    uint64_t v30 = v97;
  }
  else
  {
    uint64_t v33 = v82;
    uint64_t v32 = (uint64_t)v83;
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v25, v26);
    sub_1C4342484((uint64_t)v134);
    uint64_t v34 = v107;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v35 = (uint64_t)v93;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v36 = v85;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v35, v84, v34, v36, *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8));
    (*(void (**)(char *, uint64_t))(v33 + 8))(v93, v36);
    sub_1C4342484((uint64_t)v134);
    uint64_t v38 = v105;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_getAtKeyPath();
    swift_release();
    uint64_t v39 = v80;
    uint64_t v40 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v32, v81, v38, v39, *(void *)(*(void *)(v40 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v32, v39);
    sub_1C4342484((uint64_t)v134);
    uint64_t v41 = v103;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v42 = (uint64_t)v76;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v43 = v78;
    uint64_t v44 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v42, v75, v41, v43, *(void *)(*(void *)(v44 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v42, v43);
    sub_1C4342484((uint64_t)v134);
    uint64_t v45 = v101;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v46 = (uint64_t)v73;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v47 = v74;
    uint64_t v48 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v46, v72, v45, v47, *(void *)(*(void *)(v48 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v46, v47);
    sub_1C4342484((uint64_t)v134);
    uint64_t v49 = v89;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v50 = (uint64_t)v69;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v51 = v70;
    uint64_t v52 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v50, v68, v49, v51, *(void *)(*(void *)(v52 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v50, v51);
    sub_1C4342484((uint64_t)v134);
    uint64_t v53 = v87;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v54 = (uint64_t)v64;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v55 = v66;
    uint64_t v56 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v54, v63, v53, v55, *(void *)(*(void *)(v56 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v54, v55);
    sub_1C4342484((uint64_t)v134);
    uint64_t v57 = v92;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v25 = (uint64_t)v61;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v26 = AssociatedTypeWitness;
    uint64_t v58 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v25, v60, v57, v26, *(void *)(*(void *)(v58 + 16) + 8));
    sub_1C4342588((uint64_t)v134);
    uint64_t v30 = v59;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v25, v26);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CRStruct_9.decode(fields:)(Swift::OpaquePointer fields)
{
  void (*v14)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void (*v42)(uint64_t, uint64_t, uint64_t);
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(uint64_t, uint64_t, uint64_t);
  uint64_t v65;
  uint64_t v66;
  char v67;
  uint64_t v68;
  uint64_t AssociatedConformanceWitness;
  uint64_t v70;
  uint64_t v71;
  void (*v72)(uint64_t, uint64_t, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  void (*v79)(uint64_t, uint64_t, uint64_t);
  uint64_t v80;
  uint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t, uint64_t);
  uint64_t v87;
  void v88[2];
  uint64_t AssociatedTypeWitness;
  char *v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  void v162[28];
  void *rawValue;

  uint64_t v3 = v1;
  rawValue = fields._rawValue;
  uint64_t v4 = *(void *)(v2 + 8);
  v88[0] = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v88[0]);
  v88[1] = (char *)v88 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v90 = (char *)v88 - v6;
  uint64_t v91 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v91);
  uint64_t v92 = (char *)v88 - v7;
  uint64_t v93 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v93);
  int64_t v94 = (char *)v88 - v8;
  uint64_t v96 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v96);
  uint64_t v97 = (char *)v88 - v9;
  uint64_t v99 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v99);
  uint64_t v100 = (char *)v88 - v10;
  uint64_t v102 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v102);
  unint64_t v103 = (char *)v88 - v11;
  uint64_t v105 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v105);
  uint64_t v106 = (char *)v88 - v12;
  uint64_t v108 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v108);
  uint64_t v109 = (char *)v88 - v13;
  uint64_t v14 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 160);
  uint64_t v114 = v3;
  uint64_t v115 = v4;
  v14(&v135, v3, v4);
  uint64_t v15 = v137;
  uint64_t v116 = v139;
  uint64_t v119 = v143;
  uint64_t v120 = v142;
  unint64_t v133 = v145;
  uint64_t v134 = v146;
  unint64_t v132 = v148;
  uint64_t v124 = v149;
  int64_t v122 = v140;
  uint64_t v123 = v151;
  uint64_t v16 = v152;
  uint64_t v17 = v154;
  uint64_t v18 = v155;
  uint64_t v19 = v157;
  uint64_t v20 = v158;
  uint64_t v21 = v160;
  uint64_t v22 = v161;
  uint64_t v113 = v135;
  v162[0] = v135;
  unint64_t v129 = v136;
  v162[1] = v136;
  v162[2] = v137;
  uint64_t v111 = v141;
  uint64_t v112 = v138;
  v162[3] = v138;
  v162[4] = v139;
  v162[5] = v140;
  v162[6] = v141;
  v162[7] = v142;
  v162[8] = v143;
  uint64_t v110 = v144;
  v162[9] = v144;
  v162[10] = v145;
  v162[11] = v146;
  uint64_t v107 = v147;
  v162[12] = v147;
  v162[13] = v148;
  v162[14] = v149;
  uint64_t v104 = v150;
  v162[15] = v150;
  v162[16] = v151;
  v162[17] = v152;
  unint64_t v101 = v153;
  v162[18] = v153;
  v162[19] = v154;
  v162[20] = v155;
  uint64_t v98 = v156;
  v162[21] = v156;
  v162[22] = v157;
  v162[23] = v158;
  uint64_t v95 = v159;
  v162[24] = v159;
  v162[25] = v160;
  v162[26] = v161;
  sub_1C4342688((uint64_t)v162);
  uint64_t v117 = v15;
  swift_release();
  uint64_t v128 = v22;
  swift_release();
  uint64_t v125 = v21;
  swift_bridgeObjectRelease();
  uint64_t v126 = v20;
  swift_release();
  uint64_t v131 = v19;
  swift_bridgeObjectRelease();
  uint64_t v130 = v18;
  swift_release();
  uint64_t v118 = v17;
  swift_bridgeObjectRelease();
  uint64_t v127 = v16;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (sub_1C3FB9894(v113, v129), (v23 & 1) != 0))
  {
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342688((uint64_t)v162);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v24 = v108;
    uint64_t v25 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 8);
    uint64_t v27 = swift_retain();
    uint64_t v28 = v121;
    v26(v27, v24, v25);
    uint64_t v121 = v28;
    if (v28) {
      goto LABEL_40;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342688((uint64_t)v162);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2])
  {
    sub_1C3FB9894(v112, v116);
    if (v29)
    {
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1C4342688((uint64_t)v162);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v30 = v105;
      uint64_t v31 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
      uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 8);
      uint64_t v33 = swift_retain();
      uint64_t v34 = v121;
      v32(v33, v30, v31);
      uint64_t v121 = v34;
      if (v34) {
        goto LABEL_40;
      }
      swift_setAtWritableKeyPath();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v35 = v118;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = v118;
  }
  sub_1C4342688((uint64_t)v162);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2])
  {
    uint64_t v36 = sub_1C3FB9894(v111, v120);
    if (v37)
    {
      uint64_t v113 = *(void *)(rawValue[7] + 8 * v36);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1C4342688((uint64_t)v162);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      uint64_t v38 = v132;
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v39 = v102;
      uint64_t v40 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
      uint64_t v41 = v113;
      uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v40 + 8);
      swift_retain();
      uint64_t v43 = v121;
      v42(v41, v39, v40);
      uint64_t v121 = v43;
      if (v43) {
        goto LABEL_40;
      }
      swift_setAtWritableKeyPath();
      swift_release();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = v132;
    }
    uint64_t v35 = v118;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v38 = v132;
  }
  sub_1C4342688((uint64_t)v162);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2])
  {
    uint64_t v44 = sub_1C3FB9894(v110, v133);
    if (v45)
    {
      uint64_t v113 = *(void *)(rawValue[7] + 8 * v44);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1C4342688((uint64_t)v162);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v46 = v99;
      uint64_t v47 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
      uint64_t v48 = v113;
      uint64_t v49 = *(void (**)(uint64_t, uint64_t, uint64_t))(v47 + 8);
      swift_retain();
      uint64_t v50 = v121;
      v49(v48, v46, v47);
      uint64_t v121 = v50;
      if (v50) {
        goto LABEL_40;
      }
      swift_setAtWritableKeyPath();
      swift_release();
      swift_release();
      uint64_t v38 = v132;
      uint64_t v35 = v118;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v38 = v132;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342688((uint64_t)v162);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2])
  {
    uint64_t v51 = sub_1C3FB9894(v107, v38);
    if (v52)
    {
      uint64_t v53 = *(void *)(rawValue[7] + 8 * v51);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1C4342688((uint64_t)v162);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v54 = v53;
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v55 = v96;
      uint64_t v56 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
      uint64_t v57 = *(void (**)(uint64_t, uint64_t, uint64_t))(v56 + 8);
      swift_retain();
      uint64_t v58 = v121;
      v57(v54, v55, v56);
      uint64_t v121 = v58;
      if (v58) {
        goto LABEL_40;
      }
      swift_setAtWritableKeyPath();
      swift_release();
      swift_release();
      uint64_t v35 = v118;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = v118;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342688((uint64_t)v162);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2])
  {
    uint64_t v59 = sub_1C3FB9894(v104, v123);
    if (v60)
    {
      uint64_t v113 = *(void *)(rawValue[7] + 8 * v59);
      swift_retain();
      swift_bridgeObjectRelease();
      sub_1C4342688((uint64_t)v162);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v61 = v93;
      uint64_t v62 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
      uint64_t v63 = v113;
      uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 8);
      swift_retain();
      uint64_t v65 = v121;
      v64(v63, v61, v62);
      uint64_t v121 = v65;
      if (v65) {
        goto LABEL_40;
      }
      swift_setAtWritableKeyPath();
      swift_release();
      swift_release();
      uint64_t v35 = v118;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v35 = v118;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342688((uint64_t)v162);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v66 = sub_1C3FB9894(v101, v35), (v67 & 1) != 0))
  {
    uint64_t v113 = *(void *)(rawValue[7] + 8 * v66);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342688((uint64_t)v162);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v68 = v91;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v70 = v113;
    uint64_t v71 = *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8);
    uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 8);
    swift_retain();
    uint64_t v73 = v121;
    v72(v70, v68, v71);
    uint64_t v121 = v73;
    if (v73) {
      goto LABEL_40;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342688((uint64_t)v162);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v74 = sub_1C3FB9894(v98, v131), (v75 & 1) != 0))
  {
    uint64_t v76 = *(void *)(rawValue[7] + 8 * v74);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C4342688((uint64_t)v162);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v77 = AssociatedTypeWitness;
    uint64_t v78 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v79 = *(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 8);
    swift_retain();
    char v80 = v121;
    v79(v76, v77, v78);
    uint64_t v121 = v80;
    if (v80) {
      goto LABEL_40;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C4342688((uint64_t)v162);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (!rawValue[2] || (uint64_t v81 = sub_1C3FB9894(v95, v125), (v82 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_41;
  }
  uint64_t v83 = *(void *)(rawValue[7] + 8 * v81);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v162);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v84 = v88[0];
  uint64_t v85 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
  uint64_t v86 = *(void (**)(uint64_t, uint64_t, uint64_t))(v85 + 8);
  swift_retain();
  uint64_t v87 = v121;
  v86(v83, v84, v85);
  uint64_t v121 = v87;
  if (v87)
  {
LABEL_40:
    swift_release();
    swift_release();
LABEL_41:
    sub_1C43427A8((uint64_t)v162);
    return;
  }
  swift_setAtWritableKeyPath();
  sub_1C43427A8((uint64_t)v162);
  swift_release();
  swift_release();
}

uint64_t CRStruct_9.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3FBA03C(a1, a2, a3, (void (*)(void *, uint64_t, uint64_t))CRStruct_9.decode(fields:), a4);
}

uint64_t CRStruct_9.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3F62AA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))CRStruct_9.encode(to:));
}

{
  return sub_1C3F63020(a1, a2, a3, CRStruct_9.encodeFields(to:));
}

uint64_t CRStruct_9.encodeFields(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v17)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t AssociatedConformanceWitness;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void v148[28];

  uint64_t v109 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v67 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v65 = (char *)&v64 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(v7 - 8);
  uint64_t v71 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v69 = (char *)&v64 - v8;
  uint64_t v75 = swift_getAssociatedTypeWitness();
  uint64_t v72 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  uint64_t v74 = (char *)&v64 - v9;
  uint64_t v79 = swift_getAssociatedTypeWitness();
  uint64_t v76 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)&v64 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(v11 - 8);
  uint64_t v83 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v81 = (char *)&v64 - v12;
  uint64_t v87 = swift_getAssociatedTypeWitness();
  uint64_t v84 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v86 = (char *)&v64 - v13;
  uint64_t v90 = swift_getAssociatedTypeWitness();
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  uint64_t v89 = (char *)&v64 - v14;
  int64_t v94 = swift_getAssociatedTypeWitness();
  uint64_t v92 = *(void *)(v94 - 8);
  MEMORY[0x1F4188790](v94);
  uint64_t v102 = (char *)&v64 - v15;
  uint64_t v106 = swift_getAssociatedTypeWitness();
  unint64_t v103 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v104 = (char *)&v64 - v16;
  uint64_t v108 = v4;
  uint64_t v17 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 160);
  uint64_t v120 = a2;
  v17(&v121, a2, v4);
  uint64_t v18 = v122;
  uint64_t v105 = v121;
  uint64_t v110 = v123;
  uint64_t v111 = v126;
  uint64_t v118 = v128;
  uint64_t v119 = v125;
  uint64_t v116 = v131;
  uint64_t v117 = v129;
  uint64_t v114 = v134;
  uint64_t v115 = v132;
  uint64_t v112 = v137;
  uint64_t v113 = v135;
  uint64_t v19 = v138;
  uint64_t v20 = v140;
  uint64_t v21 = v141;
  uint64_t v22 = v143;
  uint64_t v23 = v144;
  uint64_t v24 = v146;
  uint64_t v25 = v147;
  v148[0] = v121;
  v148[1] = v122;
  v148[2] = v123;
  uint64_t v93 = v124;
  v148[3] = v124;
  v148[4] = v125;
  v148[5] = v126;
  uint64_t v91 = v127;
  v148[6] = v127;
  v148[7] = v128;
  v148[8] = v129;
  uint64_t v85 = v130;
  v148[9] = v130;
  v148[10] = v131;
  v148[11] = v132;
  char v80 = v133;
  v148[12] = v133;
  v148[13] = v134;
  v148[14] = v135;
  uint64_t v77 = v136;
  v148[15] = v136;
  v148[16] = v137;
  v148[17] = v138;
  uint64_t v73 = v139;
  v148[18] = v139;
  v148[19] = v140;
  v148[20] = v141;
  uint64_t v68 = v142;
  v148[21] = v142;
  v148[22] = v143;
  v148[23] = v144;
  uint64_t v64 = v145;
  v148[24] = v145;
  v148[25] = v146;
  v148[26] = v147;
  sub_1C4342688((uint64_t)v148);
  swift_bridgeObjectRelease();
  uint64_t v100 = v25;
  swift_release();
  unint64_t v101 = v24;
  swift_bridgeObjectRelease();
  uint64_t v95 = v23;
  swift_release();
  uint64_t v96 = v22;
  uint64_t v26 = (uint64_t)v104;
  swift_bridgeObjectRelease();
  uint64_t v97 = v21;
  swift_release();
  uint64_t v98 = v20;
  swift_bridgeObjectRelease();
  uint64_t v99 = v19;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v27 = v106;
  uint64_t v28 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
  uint64_t v29 = v105;
  uint64_t v105 = v18;
  uint64_t v30 = v107;
  sub_1C3F633DC(v26, v29, v18, v27, v28);
  if (v30)
  {
    sub_1C43427A8((uint64_t)v148);
    uint64_t v31 = v103;
  }
  else
  {
    uint64_t v33 = v92;
    (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v26, v27);
    sub_1C4342688((uint64_t)v148);
    uint64_t v34 = v119;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v35 = (uint64_t)v102;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v36 = v94;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v35, v93, v34, v36, *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8));
    (*(void (**)(char *, uint64_t))(v33 + 8))(v102, v36);
    sub_1C4342688((uint64_t)v148);
    uint64_t v38 = v118;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v39 = (uint64_t)v89;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v40 = v90;
    uint64_t v41 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v39, v91, v38, v40, *(void *)(*(void *)(v41 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v39, v40);
    sub_1C4342688((uint64_t)v148);
    uint64_t v42 = v116;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v43 = (uint64_t)v86;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v44 = v87;
    uint64_t v45 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v43, v85, v42, v44, *(void *)(*(void *)(v45 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v43, v44);
    sub_1C4342688((uint64_t)v148);
    uint64_t v46 = v114;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v47 = (uint64_t)v81;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v48 = v83;
    uint64_t v49 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v47, v80, v46, v48, *(void *)(*(void *)(v49 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v82 + 8))(v47, v48);
    sub_1C4342688((uint64_t)v148);
    uint64_t v50 = v112;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v51 = (uint64_t)v78;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v52 = v79;
    uint64_t v53 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v51, v77, v50, v52, *(void *)(*(void *)(v53 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v51, v52);
    sub_1C4342688((uint64_t)v148);
    uint64_t v54 = v98;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v55 = (uint64_t)v74;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v56 = v75;
    uint64_t v57 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v55, v73, v54, v56, *(void *)(*(void *)(v57 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v55, v56);
    sub_1C4342688((uint64_t)v148);
    uint64_t v58 = v96;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v59 = (uint64_t)v69;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v60 = v71;
    uint64_t v61 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v59, v68, v58, v60, *(void *)(*(void *)(v61 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v59, v60);
    sub_1C4342688((uint64_t)v148);
    uint64_t v62 = v101;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v26 = (uint64_t)v65;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v27 = v67;
    uint64_t v63 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v26, v64, v62, v27, *(void *)(*(void *)(v63 + 16) + 8));
    sub_1C43427A8((uint64_t)v148);
    uint64_t v31 = v66;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v26, v27);
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CRStruct_10_Final.decode(fields:)(Swift::OpaquePointer fields)
{
  void (*v15)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(uint64_t, uint64_t, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t, uint64_t, uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  void (*v61)(uint64_t, uint64_t, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(uint64_t, uint64_t, uint64_t);
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t v80;
  uint64_t v81;
  void (*v82)(uint64_t, uint64_t, uint64_t);
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  void (*v90)(uint64_t, uint64_t, uint64_t);
  uint64_t v91;
  uint64_t v92;
  uint64_t AssociatedTypeWitness;
  char *v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  void v176[31];
  void *rawValue;

  uint64_t v3 = v1;
  rawValue = fields._rawValue;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  int64_t v94 = (char *)&v92 - v5;
  uint64_t v95 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v95);
  uint64_t v96 = (char *)&v92 - v6;
  uint64_t v97 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v97);
  uint64_t v98 = (char *)&v92 - v7;
  uint64_t v99 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v99);
  uint64_t v100 = (char *)&v92 - v8;
  uint64_t v102 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v102);
  unint64_t v103 = (char *)&v92 - v9;
  uint64_t v105 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v105);
  uint64_t v106 = (char *)&v92 - v10;
  uint64_t v108 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v108);
  uint64_t v109 = (char *)&v92 - v11;
  uint64_t v111 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v111);
  uint64_t v112 = (char *)&v92 - v12;
  uint64_t v114 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v114);
  uint64_t v115 = (char *)&v92 - v13;
  uint64_t v117 = swift_getAssociatedTypeWitness();
  MEMORY[0x1F4188790](v117);
  uint64_t v118 = (char *)&v92 - v14;
  uint64_t v15 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 176);
  uint64_t v123 = v4;
  uint64_t v124 = v3;
  v15(&v146, v3, v4);
  unint64_t v145 = v151;
  uint64_t v143 = v148;
  unint64_t v144 = v153;
  uint64_t v138 = v154;
  uint64_t v139 = v156;
  uint64_t v130 = v150;
  uint64_t v131 = v157;
  unint64_t v132 = v159;
  uint64_t v127 = v162;
  unint64_t v140 = v163;
  uint64_t v141 = v165;
  uint64_t v142 = v160;
  uint64_t v134 = v166;
  uint64_t v135 = v147;
  uint64_t v16 = v168;
  uint64_t v17 = v169;
  uint64_t v18 = v171;
  uint64_t v19 = v172;
  uint64_t v20 = v174;
  uint64_t v21 = v175;
  int64_t v122 = v146;
  v176[0] = v146;
  v176[1] = v147;
  v176[2] = v148;
  uint64_t v120 = v152;
  uint64_t v121 = v149;
  v176[3] = v149;
  v176[4] = v150;
  v176[5] = v151;
  v176[6] = v152;
  v176[7] = v153;
  v176[8] = v154;
  uint64_t v119 = v155;
  v176[9] = v155;
  v176[10] = v156;
  v176[11] = v157;
  uint64_t v116 = v158;
  v176[12] = v158;
  v176[13] = v159;
  v176[14] = v160;
  uint64_t v113 = v161;
  v176[15] = v161;
  v176[16] = v162;
  v176[17] = v163;
  uint64_t v110 = v164;
  v176[18] = v164;
  v176[19] = v165;
  v176[20] = v166;
  uint64_t v107 = v167;
  v176[21] = v167;
  v176[22] = v168;
  v176[23] = v169;
  uint64_t v104 = v170;
  v176[24] = v170;
  v176[25] = v171;
  v176[26] = v172;
  unint64_t v101 = v173;
  v176[27] = v173;
  v176[28] = v174;
  v176[29] = v175;
  sub_1C43428C4((uint64_t)v176);
  swift_release();
  uint64_t v136 = v21;
  swift_release();
  uint64_t v137 = v20;
  swift_bridgeObjectRelease();
  unint64_t v133 = v19;
  swift_release();
  uint64_t v126 = v18;
  swift_bridgeObjectRelease();
  unint64_t v129 = v17;
  swift_release();
  uint64_t v128 = v16;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v22 = sub_1C3FB9894(v122, v135), (v23 & 1) != 0))
  {
    uint64_t v24 = *(void *)(rawValue[7] + 8 * v22);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43428C4((uint64_t)v176);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v25 = v117;
    uint64_t v26 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 8);
    swift_retain();
    uint64_t v28 = v125;
    v27(v24, v25, v26);
    uint64_t v125 = v28;
    if (v28) {
      goto LABEL_43;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43428C4((uint64_t)v176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v29 = sub_1C3FB9894(v121, v130), (v30 & 1) != 0))
  {
    int64_t v122 = *(void *)(rawValue[7] + 8 * v29);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43428C4((uint64_t)v176);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v31 = v114;
    uint64_t v32 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v33 = v122;
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 8);
    swift_retain();
    uint64_t v35 = v125;
    v34(v33, v31, v32);
    uint64_t v125 = v35;
    if (v35) {
      goto LABEL_43;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43428C4((uint64_t)v176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v36 = sub_1C3FB9894(v120, v144), (v37 & 1) != 0))
  {
    int64_t v122 = *(void *)(rawValue[7] + 8 * v36);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43428C4((uint64_t)v176);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v38 = v111;
    uint64_t v39 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v40 = *(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 8);
    uint64_t v41 = swift_retain();
    uint64_t v42 = v125;
    v40(v41, v38, v39);
    uint64_t v125 = v42;
    if (v42) {
      goto LABEL_43;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43428C4((uint64_t)v176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v43 = sub_1C3FB9894(v119, v139), (v44 & 1) != 0))
  {
    int64_t v122 = *(void *)(rawValue[7] + 8 * v43);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43428C4((uint64_t)v176);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v45 = v108;
    uint64_t v46 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 8);
    uint64_t v48 = swift_retain();
    uint64_t v49 = v125;
    v47(v48, v45, v46);
    uint64_t v125 = v49;
    if (v49) {
      goto LABEL_43;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43428C4((uint64_t)v176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v50 = sub_1C3FB9894(v116, v132), (v51 & 1) != 0))
  {
    int64_t v122 = *(void *)(rawValue[7] + 8 * v50);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43428C4((uint64_t)v176);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v52 = v105;
    uint64_t v53 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v53 + 8);
    uint64_t v55 = swift_retain();
    uint64_t v56 = v125;
    v54(v55, v52, v53);
    uint64_t v125 = v56;
    if (v56) {
      goto LABEL_43;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43428C4((uint64_t)v176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v57 = sub_1C3FB9894(v113, v127), (v58 & 1) != 0))
  {
    int64_t v122 = *(void *)(rawValue[7] + 8 * v57);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43428C4((uint64_t)v176);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v59 = v102;
    uint64_t v60 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 8);
    uint64_t v62 = swift_retain();
    uint64_t v63 = v125;
    v61(v62, v59, v60);
    uint64_t v125 = v63;
    if (v63) {
      goto LABEL_43;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43428C4((uint64_t)v176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v64 = sub_1C3FB9894(v110, v141), (v65 & 1) != 0))
  {
    int64_t v122 = *(void *)(rawValue[7] + 8 * v64);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43428C4((uint64_t)v176);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v66 = v99;
    uint64_t v67 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v68 = v122;
    uint64_t v69 = *(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 8);
    swift_retain();
    uint64_t v70 = v125;
    v69(v68, v66, v67);
    uint64_t v125 = v70;
    if (v70) {
      goto LABEL_43;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43428C4((uint64_t)v176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v71 = sub_1C3FB9894(v107, v128), (v72 & 1) != 0))
  {
    int64_t v122 = *(void *)(rawValue[7] + 8 * v71);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43428C4((uint64_t)v176);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v73 = v97;
    uint64_t v74 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v75 = v122;
    uint64_t v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 8);
    swift_retain();
    uint64_t v77 = v125;
    v76(v75, v73, v74);
    uint64_t v125 = v77;
    if (v77) {
      goto LABEL_43;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43428C4((uint64_t)v176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (rawValue[2] && (uint64_t v78 = sub_1C3FB9894(v104, v126), (v79 & 1) != 0))
  {
    int64_t v122 = *(void *)(rawValue[7] + 8 * v78);
    swift_retain();
    swift_bridgeObjectRelease();
    sub_1C43428C4((uint64_t)v176);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    char v80 = v95;
    uint64_t v81 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
    uint64_t v82 = *(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 8);
    uint64_t v83 = v122;
    swift_retain();
    uint64_t v84 = v125;
    v82(v83, v80, v81);
    uint64_t v125 = v84;
    if (v84) {
      goto LABEL_43;
    }
    swift_setAtWritableKeyPath();
    swift_release();
    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_1C43428C4((uint64_t)v176);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (!rawValue[2] || (uint64_t v85 = sub_1C3FB9894(v101, v137), (v86 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  uint64_t v87 = *(void *)(rawValue[7] + 8 * v85);
  swift_retain();
  swift_bridgeObjectRelease();
  sub_1C43428C4((uint64_t)v176);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v88 = AssociatedTypeWitness;
  uint64_t v89 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 16) + 8);
  uint64_t v90 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 8);
  swift_retain();
  uint64_t v91 = v125;
  v90(v87, v88, v89);
  uint64_t v125 = v91;
  if (v91)
  {
LABEL_43:
    swift_release();
    swift_release();
LABEL_44:
    sub_1C4342A00((uint64_t)v176);
    return;
  }
  swift_setAtWritableKeyPath();
  sub_1C4342A00((uint64_t)v176);
  swift_release();
  swift_release();
}

uint64_t CRStruct_10_Final.init(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C3FBA03C(a1, a2, a3, (void (*)(void *, uint64_t, uint64_t))CRStruct_10_Final.decode(fields:), a4);
}

uint64_t CRStruct_10_Final.encode(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C3F62AA0(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))CRStruct_10_Final.encode(to:));
}

{
  return sub_1C3F63020(a1, a2, a3, CRStruct_10_Final.encodeFields(to:));
}

uint64_t CRStruct_10_Final.encodeFields(to:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v19)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t AssociatedConformanceWitness;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  void v161[33];

  uint64_t v114 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v71 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v69 = (char *)&v67 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(v7 - 8);
  uint64_t v75 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v73 = (char *)&v67 - v8;
  uint64_t v79 = swift_getAssociatedTypeWitness();
  uint64_t v76 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)&v67 - v9;
  uint64_t v83 = swift_getAssociatedTypeWitness();
  char v80 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v82 = (char *)&v67 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(v11 - 8);
  uint64_t v87 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v85 = (char *)&v67 - v12;
  uint64_t v91 = swift_getAssociatedTypeWitness();
  uint64_t v88 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  uint64_t v90 = (char *)&v67 - v13;
  uint64_t v95 = swift_getAssociatedTypeWitness();
  uint64_t v92 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v93 = (char *)&v67 - v14;
  uint64_t v97 = swift_getAssociatedTypeWitness();
  uint64_t v99 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  uint64_t v96 = (char *)&v67 - v15;
  uint64_t v102 = swift_getAssociatedTypeWitness();
  uint64_t v100 = *(void *)(v102 - 8);
  MEMORY[0x1F4188790](v102);
  uint64_t v108 = (char *)&v67 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v109 = *(void *)(v17 - 8);
  uint64_t v110 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v112 = (char *)&v67 - v18;
  uint64_t v113 = v4;
  uint64_t v19 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 176);
  uint64_t v130 = a2;
  v19(&v131, a2, v4);
  uint64_t v111 = v131;
  uint64_t v127 = v135;
  uint64_t v128 = v133;
  uint64_t v116 = v138;
  uint64_t v125 = v139;
  uint64_t v126 = v136;
  uint64_t v123 = v142;
  uint64_t v124 = v141;
  uint64_t v121 = v145;
  int64_t v122 = v144;
  uint64_t v120 = v147;
  v161[32] = v148;
  uint64_t v118 = v151;
  uint64_t v119 = v150;
  uint64_t v117 = v153;
  uint64_t v20 = v154;
  uint64_t v21 = v156;
  uint64_t v22 = v157;
  uint64_t v23 = v159;
  uint64_t v24 = v160;
  v161[0] = v131;
  v161[1] = v132;
  unint64_t v129 = v132;
  v161[2] = v133;
  unint64_t v101 = v134;
  v161[3] = v134;
  v161[4] = v135;
  v161[5] = v136;
  uint64_t v98 = v137;
  v161[6] = v137;
  v161[7] = v138;
  v161[8] = v139;
  int64_t v94 = v140;
  v161[9] = v140;
  v161[10] = v141;
  v161[11] = v142;
  uint64_t v89 = v143;
  v161[12] = v143;
  v161[13] = v144;
  v161[14] = v145;
  uint64_t v84 = v146;
  v161[15] = v146;
  v161[16] = v147;
  v161[17] = v148;
  uint64_t v81 = v149;
  v161[18] = v149;
  v161[19] = v150;
  v161[20] = v151;
  uint64_t v77 = v152;
  v161[21] = v152;
  v161[22] = v153;
  v161[23] = v154;
  uint64_t v72 = v155;
  v161[24] = v155;
  v161[25] = v156;
  v161[26] = v157;
  uint64_t v68 = v158;
  v161[27] = v158;
  v161[28] = v159;
  v161[29] = v160;
  sub_1C43428C4((uint64_t)v161);
  swift_bridgeObjectRelease();
  uint64_t v107 = v24;
  swift_release();
  unint64_t v103 = v23;
  swift_bridgeObjectRelease();
  uint64_t v104 = v22;
  swift_release();
  uint64_t v105 = v21;
  swift_bridgeObjectRelease();
  uint64_t v106 = v20;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v25 = v110;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t)v112;
  swift_getAtKeyPath();
  swift_release();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v28 = v115;
  sub_1C3F633DC(v26, v111, v129, v25, *(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8));
  if (v28)
  {
    sub_1C4342A00((uint64_t)v161);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v109 + 8))(v26, v25);
  }
  else
  {
    uint64_t v30 = v100;
    (*(void (**)(uint64_t, uint64_t))(v109 + 8))(v26, v25);
    sub_1C43428C4((uint64_t)v161);
    uint64_t v31 = v127;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v32 = (uint64_t)v108;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v33 = v102;
    uint64_t v34 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v32, v101, v31, v33, *(void *)(*(void *)(v34 + 16) + 8));
    (*(void (**)(char *, uint64_t))(v30 + 8))(v108, v33);
    sub_1C43428C4((uint64_t)v161);
    uint64_t v35 = v116;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t)v96;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v37 = v97;
    uint64_t v38 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v36, v98, v35, v37, *(void *)(*(void *)(v38 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v36, v37);
    sub_1C43428C4((uint64_t)v161);
    uint64_t v39 = v124;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v40 = (uint64_t)v93;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v41 = v95;
    uint64_t v42 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v40, v94, v39, v41, *(void *)(*(void *)(v42 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v92 + 8))(v40, v41);
    sub_1C43428C4((uint64_t)v161);
    uint64_t v43 = v122;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v44 = (uint64_t)v90;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v45 = v91;
    uint64_t v46 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v44, v89, v43, v45, *(void *)(*(void *)(v46 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v88 + 8))(v44, v45);
    sub_1C43428C4((uint64_t)v161);
    uint64_t v47 = v120;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v48 = (uint64_t)v85;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v49 = v87;
    uint64_t v50 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v48, v84, v47, v49, *(void *)(*(void *)(v50 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v48, v49);
    sub_1C43428C4((uint64_t)v161);
    uint64_t v51 = v119;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v52 = (uint64_t)v82;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v53 = v83;
    uint64_t v54 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v52, v81, v51, v53, *(void *)(*(void *)(v54 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v52, v53);
    sub_1C43428C4((uint64_t)v161);
    uint64_t v55 = v117;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v56 = (uint64_t)v78;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v57 = v79;
    uint64_t v58 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v56, v77, v55, v57, *(void *)(*(void *)(v58 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v56, v57);
    sub_1C43428C4((uint64_t)v161);
    uint64_t v59 = v105;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v60 = (uint64_t)v73;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v61 = v75;
    uint64_t v62 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v60, v72, v59, v61, *(void *)(*(void *)(v62 + 16) + 8));
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v60, v61);
    sub_1C43428C4((uint64_t)v161);
    uint64_t v63 = v103;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v64 = (uint64_t)v69;
    swift_getAtKeyPath();
    swift_release();
    uint64_t v65 = v71;
    uint64_t v66 = swift_getAssociatedConformanceWitness();
    sub_1C3F633DC(v64, v68, v63, v65, *(void *)(*(void *)(v66 + 16) + 8));
    sub_1C4342A00((uint64_t)v161);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 8))(v64, v65);
  }
}

uint64_t CRStruct_1.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v21 = a4;
  uint64_t v22 = a1;
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(a2, v8);
  uint64_t v23 = v14;
  swift_retain();
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = v22;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(v22, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, AssociatedTypeWitness);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v17 = *(void *)(v8 + 8);
  uint64_t v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 24))(a2, v17);
  uint64_t v19 = sub_1C4341774(v18, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 32))(v19, a2, v17);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_1.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v14 = (char *)v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  if (a1) {
    unint64_t v15 = a1;
  }
  else {
    unint64_t v15 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  unint64_t v24 = v15;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  v23[0] = a4;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v9 + 32);
  swift_bridgeObjectRetain();
  v16(a2, v9);
  v23[1] = v17;
  swift_retain();
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(&v24, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, AssociatedTypeWitness);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v19 = *(void *)(v9 + 8);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(a2, v19);
  uint64_t v21 = sub_1C4341774(v20, (uint64_t)&v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v21, a2, v19);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_1.merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v16[0] = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)v16 - v7;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(a2, v4);
  v16[1] = v9;
  swift_retain();
  swift_getAtKeyPath();
  uint64_t v10 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v8, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  v10(v17, 0);
  swift_release();
  uint64_t v12 = *(void *)(v4 + 8);
  uint64_t v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 24))(a2, v12);
  uint64_t v14 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v12 + 40))(v17, a2, v12);
  sub_1C4477B90(v13);
  swift_bridgeObjectRelease();
  v14(v17, 0);
  (*(void (**)(uint64_t, uint64_t))(v12 + 64))(a2, v12);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_1.observableDifference(from:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v45 = a1;
  uint64_t v46 = a2;
  uint64_t v49 = a5;
  uint64_t v6 = *(void *)(a4 + 8);
  swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v39 = (char *)&v37 - v9;
  uint64_t v43 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v38 = (char *)&v37 - v10;
  uint64_t v11 = swift_checkMetadataState();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = sub_1C4497B38();
  uint64_t v41 = *(void *)(v18 - 8);
  uint64_t v42 = v18;
  uint64_t v19 = MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v37 - v22;
  unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v6 + 32);
  uint64_t v47 = v6;
  uint64_t v48 = a3;
  v24(a3, v6);
  swift_retain();
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 40))(v15, v46, v11);
  swift_release();
  uint64_t v25 = v43;
  swift_bridgeObjectRelease();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v27 = v15;
  uint64_t v28 = AssociatedTypeWitness;
  v26(v27, v11);
  v26(v17, v11);
  uint64_t v29 = v41;
  uint64_t v30 = v42;
  (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v21, v23, v42);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v21, 1, v28) == 1)
  {
    (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v30);
    uint64_t v31 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v49, 1, 1, v31);
  }
  else
  {
    uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v34 = v38;
    v33(v38, v21, v28);
    v33(v39, v34, v28);
    uint64_t v35 = swift_getAssociatedTypeWitness();
    uint64_t v36 = v49;
    swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v36, 0, 1, v35);
  }
}

uint64_t CRStruct_1.hasDelta(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v38 = *(void *)(a2 - 8);
  uint64_t v3 = MEMORY[0x1F4188790](a1);
  uint64_t v36 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v35 = (char *)&v33 - v5;
  uint64_t v7 = *(void *)(v6 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v33 - v13;
  (*(void (**)(uint64_t, uint64_t))(v7 + 32))(a2, v7);
  uint64_t v37 = v15;
  swift_retain();
  swift_getAtKeyPath();
  uint64_t v16 = v34;
  swift_getAtKeyPath();
  swift_release();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v12, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v20 = v12;
  uint64_t v21 = v35;
  v19(v20, AssociatedTypeWitness);
  uint64_t v22 = AssociatedTypeWitness;
  uint64_t v23 = v36;
  v19(v14, v22);
  unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
  v24(v21, v33, a2);
  v24(v23, v16, a2);
  if (v18)
  {
    swift_release();
    char v25 = 1;
  }
  else
  {
    uint64_t v26 = *(void *)(v7 + 8);
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 24);
    uint64_t v28 = v21;
    uint64_t v29 = v27(a2, v26);
    uint64_t v30 = v27(a2, v26);
    char v25 = sub_1C4478090(v30, v29);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v21 = v28;
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v38 + 8);
  v31(v23, a2);
  v31(v21, a2);
  return v25 & 1;
}

uint64_t CRStruct_1.actionUndoingDifference(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v16[0] = a1;
  v16[1] = a4;
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v16 - v11;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(a2, v5);
  swift_retain();
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  swift_release();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v10, AssociatedTypeWitness, AssociatedConformanceWitness);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, AssociatedTypeWitness);
}

uint64_t CRStruct_1.apply(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, void))(*(void *)(a3 + 8) + 32))(a2, *(void *)(a3 + 8));
  swift_retain();
  uint64_t v4 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v7 = swift_checkMetadataState();
  v6(a1, v7, AssociatedConformanceWitness);
  v4(&v9, 0);
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t CRStruct_1.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t, void))(*(void *)(a3 + 8) + 32))(a2, *(void *)(a3 + 8));
  swift_retain();
  uint64_t v4 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64);
  uint64_t v7 = swift_checkMetadataState();
  v6(a1, v7, v5);
  v4(&v9, 0);
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t CRStruct_1.minEncodingVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v16 = a3;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)v15 - v7;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(a1, v4);
  v15[1] = v9;
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 24))(a1);
  sub_1C447829C(v10, (unsigned char *)&v17 + 1);
  swift_bridgeObjectRelease();
  unsigned int v11 = BYTE1(v17);
  if (BYTE1(v17) > 1u)
  {
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    swift_getAtKeyPath();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 16)
                                                                       + 8)
                                                           + 32))(&v17, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
    unsigned int v13 = v17;
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v13 > v11) {
      LOBYTE(v11) = v13;
    }
  }
  *uint64_t v16 = v11;
  return result;
}

uint64_t CRStruct_1<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v44 = a4;
  uint64_t v6 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int64_t v46 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v8 = (char *)&v38 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF70);
  uint64_t v41 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  unsigned int v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 32);
  uint64_t v39 = v6;
  uint64_t v40 = a2;
  uint64_t v42 = v12(a2, v6);
  uint64_t v14 = v13;
  uint64_t v16 = v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C42469F0();
  uint64_t v17 = v16;
  uint64_t v18 = v9;
  uint64_t v19 = v14;
  uint64_t v20 = AssociatedTypeWitness;
  sub_1C44986A8();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v47 = v42;
  uint64_t v48 = v19;
  uint64_t v21 = v45;
  sub_1C4498048();
  if (v21)
  {
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v20);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v9);
    return swift_bridgeObjectRelease();
  }
  uint64_t v42 = v17;
  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v20);
  uint64_t v44 = v19;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v39 + 8) + 24))(v40);
  uint64_t v22 = result;
  int64_t v23 = 0;
  uint64_t v24 = *(void *)(result + 64);
  uint64_t v45 = result + 64;
  uint64_t v25 = 1 << *(unsigned char *)(result + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & v24;
  int64_t v46 = (unint64_t)(v25 + 63) >> 6;
  if ((v26 & v24) == 0) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v28 = __clz(__rbit64(v27));
  v27 &= v27 - 1;
  for (unint64_t i = v28 | (v23 << 6); ; unint64_t i = __clz(__rbit64(v31)) + (v23 << 6))
  {
    uint64_t v33 = (uint64_t *)(*(void *)(v22 + 48) + 16 * i);
    uint64_t v34 = *v33;
    uint64_t v35 = v33[1];
    uint64_t v49 = *(void *)(*(void *)(v22 + 56) + 8 * i);
    uint64_t v47 = v34;
    uint64_t v48 = v35;
    sub_1C4246A44();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C4498048();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v27) {
      goto LABEL_6;
    }
LABEL_7:
    if (__OFADD__(v23++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v23 >= v46) {
      goto LABEL_24;
    }
    unint64_t v31 = *(void *)(v45 + 8 * v23);
    if (!v31) {
      break;
    }
LABEL_17:
    unint64_t v27 = (v31 - 1) & v31;
  }
  int64_t v32 = v23 + 1;
  if (v23 + 1 >= v46) {
    goto LABEL_24;
  }
  unint64_t v31 = *(void *)(v45 + 8 * v32);
  if (v31) {
    goto LABEL_16;
  }
  int64_t v32 = v23 + 2;
  if (v23 + 2 >= v46) {
    goto LABEL_24;
  }
  unint64_t v31 = *(void *)(v45 + 8 * v32);
  if (v31) {
    goto LABEL_16;
  }
  int64_t v32 = v23 + 3;
  if (v23 + 3 >= v46)
  {
LABEL_24:
    uint64_t v37 = v41;
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v11, v18);
  }
  unint64_t v31 = *(void *)(v45 + 8 * v32);
  if (v31)
  {
LABEL_16:
    int64_t v23 = v32;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v23 = v32 + 1;
    if (__OFADD__(v32, 1)) {
      break;
    }
    if (v23 >= v46) {
      goto LABEL_24;
    }
    unint64_t v31 = *(void *)(v45 + 8 * v23);
    ++v32;
    if (v31) {
      goto LABEL_17;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t CRStruct_2.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v30 = a1;
  v26[1] = a4;
  uint64_t v7 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v29 = (char *)v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v31 = (char *)v26 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v4, a2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 48))(v36, a2, v7);
  uint64_t v15 = v36[2];
  uint64_t v34 = v36[1];
  uint64_t v32 = v36[4];
  swift_retain();
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = v30;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(v30, v11);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v14, v11);
  uint64_t v28 = v15;
  swift_setAtWritableKeyPath();
  swift_release();
  swift_retain();
  uint64_t v18 = v29;
  swift_getAtKeyPath();
  uint64_t v19 = v7;
  uint64_t v20 = AssociatedTypeWitness;
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 + 16) + 24))(v17, v20);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v18, v20);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v22 = *(void *)(v19 + 8);
  uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(a2, v22);
  uint64_t v24 = sub_1C4341774(v23, v17);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 32))(v24, a2, v22);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_2.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v19)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t AssociatedConformanceWitness;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  void v36[5];
  unint64_t v37;

  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v35 = AssociatedTypeWitness;
  uint64_t v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v33 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v32 = (char *)&v28 - v13;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  if (a1) {
    unint64_t v18 = a1;
  }
  else {
    unint64_t v18 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  uint64_t v37 = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v28 = a4;
  uint64_t v19 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  v19(v36, a2, v9);
  uint64_t v30 = v36[4];
  unint64_t v31 = v36[1];
  swift_retain();
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(&v37, v14);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v17, v14);
  swift_setAtWritableKeyPath();
  swift_release();
  swift_retain();
  uint64_t v21 = v33;
  swift_getAtKeyPath();
  uint64_t v22 = v35;
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v23 + 16) + 24))(&v37, v22);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v22);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v24 = *(void *)(v9 + 8);
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(a2, v24);
  uint64_t v26 = sub_1C4341774(v25, (uint64_t)&v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v26, a2, v24);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_2.merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v26 = AssociatedTypeWitness;
  uint64_t v27 = v6;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v24 = (char *)&v23 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v23 - v10;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v30, a2, v4);
  uint64_t v12 = v30[2];
  uint64_t v28 = v30[4];
  uint64_t v29 = v30[1];
  swift_retain();
  swift_getAtKeyPath();
  uint64_t v25 = v12;
  uint64_t v13 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  v13(v30, 0);
  swift_release();
  swift_retain();
  uint64_t v15 = v24;
  swift_getAtKeyPath();
  uint64_t v16 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v17 = v26;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v18 + 8) + 8))(v15, v17);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v17);
  v16(v30, 0);
  swift_release();
  uint64_t v19 = *(void *)(v4 + 8);
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 24))(a2, v19);
  uint64_t v21 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 40))(v30, a2, v19);
  sub_1C4477B90(v20);
  swift_bridgeObjectRelease();
  v21(v30, 0);
  (*(void (**)(uint64_t, uint64_t))(v19 + 64))(a2, v19);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_2.observableDifference(from:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v28)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t TupleTypeMetadata2;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t AssociatedTypeWitness;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  void v72[5];

  uint64_t v65 = a1;
  uint64_t v66 = a2;
  uint64_t v71 = a5;
  uint64_t v6 = *(void *)(a4 + 8);
  swift_getAssociatedTypeWitness();
  uint64_t v63 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  uint64_t v64 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v48 = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C4497B38();
  uint64_t v59 = v8;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x1F4188790](TupleTypeMetadata2);
  uint64_t v49 = (char *)&v48 - v9;
  uint64_t v10 = swift_checkMetadataState();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v60 = v10;
  uint64_t v61 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v57 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v56 = (char *)&v48 - v15;
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v58 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v54 = (char *)&v48 - v18;
  uint64_t v19 = swift_checkMetadataState();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v48 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v48 - v25;
  uint64_t v68 = v7;
  uint64_t v62 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v51 = (char *)&v48 - v27;
  uint64_t v28 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 48);
  uint64_t v69 = v6;
  uint64_t v70 = a3;
  v28(v72, a3, v6);
  uint64_t v53 = v72[1];
  uint64_t v52 = v72[4];
  swift_retain();
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v29 = v66;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 40))(v23, v66, v19);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v20 + 8);
  v30(v23, v19);
  v30(v26, v19);
  swift_retain();
  unint64_t v31 = v56;
  uint64_t v32 = v55;
  swift_getAtKeyPath();
  uint64_t v33 = v57;
  uint64_t v34 = v54;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v35 = v29;
  uint64_t v36 = v31;
  uint64_t v37 = v60;
  (*(void (**)(char *, uint64_t, uint64_t))(v64 + 40))(v33, v35, v60);
  uint64_t v38 = v59;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = v58;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v61 + 8);
  v40(v33, v37);
  v40(v36, v37);
  uint64_t v41 = v51;
  LODWORD(v40) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v51, 1);
  (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v39, v34, v38);
  if (v40 == 1
    && (*(unsigned int (**)(char *, uint64_t))(*(void *)(v48 - 8) + 48))(v39, 1) == 1)
  {
    uint64_t v42 = *(void (**)(char *, uint64_t))(v32 + 8);
    v42(v39, v38);
    v42(v34, v38);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v41, v68);
    uint64_t v43 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v71, 1, 1, v43);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v39, v38);
    uint64_t v45 = &v49[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v49, v41, v68);
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v45, v34, v38);
    int64_t v46 = swift_getAssociatedTypeWitness();
    uint64_t v47 = v71;
    swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v47, 0, 1, v46);
  }
}

uint64_t CRStruct_2.hasDelta(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v37 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v34 = AssociatedTypeWitness;
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v32 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  unint64_t v31 = (char *)&v31 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v31 - v14;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v38, a2, v4);
  uint64_t v35 = v38[1];
  uint64_t v36 = v38[4];
  swift_retain();
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  swift_release();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v13, v9, AssociatedConformanceWitness);
  uint64_t v18 = *(void (**)(char *, uint64_t))(v10 + 8);
  v18(v13, v9);
  v18(v15, v9);
  if (v17) {
    goto LABEL_3;
  }
  swift_retain();
  uint64_t v19 = v31;
  swift_getAtKeyPath();
  uint64_t v20 = v32;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v21 = v34;
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  char v23 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 72))(v20, v21, v22);
  uint64_t v24 = *(void (**)(char *, uint64_t))(v33 + 8);
  v24(v20, v21);
  v24(v19, v21);
  if (v23)
  {
LABEL_3:
    swift_release();
    char v25 = 1;
  }
  else
  {
    uint64_t v26 = *(void *)(v4 + 8);
    uint64_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 24);
    uint64_t v28 = v27(a2, v26);
    uint64_t v29 = v27(a2, v26);
    char v25 = sub_1C4478090(v29, v28);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v25 & 1;
}

uint64_t CRStruct_2.actionUndoingDifference(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v50 = a1;
  uint64_t v58 = a4;
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v53 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v49 = (char *)&v40 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v40 = swift_getAssociatedTypeWitness();
  uint64_t v46 = sub_1C4497B38();
  uint64_t v54 = *(void *)(v46 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v46);
  uint64_t v52 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v47 = (char *)&v40 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v17 = (char *)&v40 - v16;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v45 = swift_getAssociatedTypeWitness();
  uint64_t v19 = sub_1C4497B38();
  uint64_t v55 = *(void *)(v19 - 8);
  uint64_t v56 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v41 = (char *)&v40 - v20;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 48))(v59, a2, v5);
  uint64_t v43 = v59[1];
  uint64_t v42 = v59[4];
  swift_retain();
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 56))(v15, v12, v18);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v44 + 8);
  v21(v15, v12);
  uint64_t v22 = v12;
  uint64_t v23 = v46;
  v21(v17, v22);
  swift_retain();
  uint64_t v24 = v49;
  swift_getAtKeyPath();
  char v25 = v53;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v26 = v47;
  uint64_t v27 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t))(AssociatedConformanceWitness + 56))(v25, AssociatedTypeWitness);
  uint64_t v28 = v41;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v29 = v26;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v57 + 8);
  v30(v25, v27);
  uint64_t v31 = v54;
  v30(v24, v27);
  uint64_t v32 = v52;
  LODWORD(v30) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v45 - 8) + 48))(v28, 1);
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v32, v29, v23);
  if (v30 == 1
    && (*(unsigned int (**)(char *, uint64_t))(*(void *)(v40 - 8) + 48))(v32, 1) == 1)
  {
    uint64_t v33 = *(void (**)(char *, uint64_t))(v31 + 8);
    v33(v32, v23);
    v33(v29, v23);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v56);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v58, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v23);
    uint64_t v36 = v56;
    uint64_t v37 = swift_getTupleTypeMetadata2();
    uint64_t v38 = v58;
    uint64_t v39 = v58 + *(int *)(v37 + 48);
    (*(void (**)(uint64_t, char *, uint64_t))(v55 + 32))(v58, v28, v36);
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v39, v29, v23);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v38, 0, 1, v37);
  }
}

uint64_t CRStruct_2.apply(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v67 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v64 = AssociatedTypeWitness;
  uint64_t v49 = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v60 = (char *)&v46 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v53 = swift_getAssociatedConformanceWitness();
  uint64_t v54 = v9;
  uint64_t v47 = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C4497B38();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_1C4497B38();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v55 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v46 - v17;
  uint64_t v66 = v10;
  uint64_t v65 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v46 - v19;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v68, a2, v4);
  uint64_t v21 = v68[2];
  uint64_t v59 = v68[1];
  uint64_t v56 = v68[5];
  uint64_t v57 = v68[4];
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v52(v18, v67, v12);
  uint64_t v22 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v50 = v22 + 48;
  int v23 = v51(v18, 1, TupleTypeMetadata2);
  uint64_t v61 = v7;
  uint64_t v62 = v6;
  uint64_t v48 = v13;
  if (v23 == 1)
  {
    uint64_t v24 = *(void (**)(char *, uint64_t))(v13 + 8);
    swift_retain();
    v24(v18, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v20, 1, 1);
  }
  else
  {
    char v25 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v20, v18, v66);
    uint64_t v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    swift_retain();
    v26(v25, v6);
  }
  uint64_t v27 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v28 = v53;
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 64);
  uint64_t v30 = swift_checkMetadataState();
  v29(v20, v30, v28);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v65 + 8);
  uint64_t v32 = v20;
  uint64_t v33 = v66;
  v31(v32, v66);
  v27(v68, 0);
  swift_release();
  uint64_t v34 = v55;
  v52(v55, v67, v12);
  int v35 = v51(v34, 1, TupleTypeMetadata2);
  uint64_t v58 = v21;
  if (v35 == 1)
  {
    uint64_t v36 = *(void (**)(char *, uint64_t))(v48 + 8);
    swift_retain();
    v36(v34, v12);
    uint64_t v37 = v60;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v60, 1, 1);
    uint64_t v39 = v61;
    uint64_t v38 = v62;
  }
  else
  {
    uint64_t v40 = &v34[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v37 = v60;
    uint64_t v39 = v61;
    uint64_t v38 = v62;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v60, v40, v62);
    swift_retain();
    v31(v34, v33);
  }
  uint64_t v41 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v42 = AssociatedConformanceWitness;
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v44 = swift_checkMetadataState();
  v43(v37, v44, v42);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v38);
  v41(v68, 0);
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_2.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v18 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v17 = (char *)&v17 - v5;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - v8;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 48))(v23, a2, v4);
  uint64_t v21 = v23[1];
  uint64_t v19 = v23[4];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = v18;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 48))(v18, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_retain();
  uint64_t v12 = v17;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v13 = AssociatedTypeWitness;
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 + 16) + 48))(v11, v13);
  (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v13);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 24))(a2);
  sub_1C3F7E98C(v11, v15);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall CRStruct_2.needToFinalizeTimestamps()()
{
  uint64_t v3 = v2;
  uint64_t v4 = v0;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v26 = AssociatedTypeWitness;
  uint64_t v7 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v24 = (char *)&v23 - v8;
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v23 - v13;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 48))(v31, v4, v5);
  uint64_t v29 = v31[4];
  uint64_t v30 = v31[1];
  uint64_t v28 = v31[5];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v15 = v27;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  char v17 = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 56))(v11);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, v3, v4);
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v4);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    char v18 = 1;
  }
  else
  {
    uint64_t v19 = v24;
    swift_getAtKeyPath();
    uint64_t v20 = v26;
    uint64_t v21 = swift_getAssociatedConformanceWitness();
    char v18 = (*(uint64_t (**)(uint64_t))(*(void *)(v21 + 16) + 56))(v20);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v19, v20);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v4);
  }
  return v18 & 1;
}

uint64_t CRStruct_2.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, void))(*(void *)(a3 + 8) + 48))(&v14, a2, *(void *)(a3 + 8));
  swift_retain();
  uint64_t v12 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 64);
  uint64_t v6 = swift_checkMetadataState();
  v5(a1, v6, v4);
  v12(&v14, 0);
  swift_release();
  swift_retain();
  uint64_t v7 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 64);
  uint64_t v10 = swift_checkMetadataState();
  v9(a1, v10, v8);
  v7(&v14, 0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t CRStruct_2.minEncodingVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v21 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v19 = (char *)&v19 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - v9;
  (*(void (**)(unsigned char *__return_ptr, uint64_t, uint64_t))(v4 + 48))(&v26[1], a1, v4);
  uint64_t v25 = *(void *)&v26[17];
  uint64_t v22 = *(void *)&v26[33];
  uint64_t v23 = *(void *)&v26[9];
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 24))(a1);
  sub_1C447829C(v11, &v26[1]);
  swift_bridgeObjectRelease();
  unsigned int v12 = v26[1];
  if (v26[1] > 1u) {
    goto LABEL_8;
  }
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unsigned char *__return_ptr, uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8)
                                                       + 32))(v26, v7);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  if (v26[0] > v12) {
    unsigned int v12 = v26[0];
  }
  v26[1] = v12;
  if (v12 > 1)
  {
LABEL_8:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = v19;
    swift_getAtKeyPath();
    uint64_t v15 = v21;
    uint64_t v16 = swift_getAssociatedConformanceWitness();
    (*(void (**)(unsigned char *__return_ptr, uint64_t))(*(void *)(*(void *)(v16 + 16) + 8) + 32))(v26, v15);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v15);
    unsigned int v17 = v26[0];
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v17 > v12) {
      LOBYTE(v12) = v17;
    }
  }
  *uint64_t v24 = v12;
  return result;
}

uint64_t CRStruct_2<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, int64_t a4, uint64_t a5)
{
  void (*v15)(uint64_t *__return_ptr, uint64_t, int64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t i;
  unint64_t v32;
  int64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  uint64_t v50 = a4;
  uint64_t v42 = a5;
  int64_t v7 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v44 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v45 = (char *)&v39 - v9;
  uint64_t v49 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v11 = (char *)&v39 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF70);
  uint64_t v46 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void (**)(uint64_t *__return_ptr, uint64_t, int64_t))(v7 + 48);
  uint64_t v40 = a2;
  v15(&v55, a2, v7);
  uint64_t v48 = v55;
  uint64_t v16 = v57;
  uint64_t v41 = v58;
  uint64_t v53 = v59;
  uint64_t v51 = v56;
  uint64_t v52 = v60;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C42469F0();
  sub_1C44986A8();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  unsigned int v17 = v14;
  char v18 = v49;
  uint64_t v55 = v48;
  uint64_t v56 = v51;
  uint64_t v19 = v54;
  sub_1C4498048();
  if (v19)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v17, v12);
  }
  uint64_t v50 = v7;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v11, v18);
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v55 = v41;
  uint64_t v56 = v53;
  swift_bridgeObjectRetain();
  uint64_t v20 = v44;
  sub_1C4498048();
  uint64_t v49 = v16;
  uint64_t v54 = v17;
  uint64_t v22 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v20);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v50 + 8) + 24))(v40);
  uint64_t v23 = result;
  uint64_t v24 = 0;
  uint64_t v25 = result + 64;
  uint64_t v26 = 1 << *(unsigned char *)(result + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  uint64_t v28 = v27 & *(void *)(result + 64);
  uint64_t v50 = (unint64_t)(v26 + 63) >> 6;
  if (!v28) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v29 = __clz(__rbit64(v28));
  v28 &= v28 - 1;
  for (unint64_t i = v29 | (v24 << 6); ; unint64_t i = __clz(__rbit64(v32)) + (v24 << 6))
  {
    uint64_t v34 = (uint64_t *)(*(void *)(v23 + 48) + 16 * i);
    int v35 = *v34;
    uint64_t v36 = v34[1];
    uint64_t v61 = *(void *)(*(void *)(v23 + 56) + 8 * i);
    uint64_t v55 = v35;
    uint64_t v56 = v36;
    sub_1C4246A44();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C4498048();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v28) {
      goto LABEL_6;
    }
LABEL_7:
    if (__OFADD__(v24++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v24 >= v50) {
      goto LABEL_24;
    }
    uint64_t v32 = *(void *)(v25 + 8 * v24);
    if (!v32) {
      break;
    }
LABEL_17:
    uint64_t v28 = (v32 - 1) & v32;
  }
  uint64_t v33 = v24 + 1;
  if (v24 + 1 >= v50) {
    goto LABEL_24;
  }
  uint64_t v32 = *(void *)(v25 + 8 * v33);
  if (v32) {
    goto LABEL_16;
  }
  uint64_t v33 = v24 + 2;
  if (v24 + 2 >= v50) {
    goto LABEL_24;
  }
  uint64_t v32 = *(void *)(v25 + 8 * v33);
  if (v32) {
    goto LABEL_16;
  }
  uint64_t v33 = v24 + 3;
  if (v24 + 3 >= v50)
  {
LABEL_24:
    uint64_t v37 = v46;
    uint64_t v38 = v54;
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v38, v22);
  }
  uint64_t v32 = *(void *)(v25 + 8 * v33);
  if (v32)
  {
LABEL_16:
    uint64_t v24 = v33;
    goto LABEL_17;
  }
  while (1)
  {
    uint64_t v24 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v24 >= v50) {
      goto LABEL_24;
    }
    uint64_t v32 = *(void *)(v25 + 8 * v24);
    ++v33;
    if (v32) {
      goto LABEL_17;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t CRStruct_3.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v42 = a1;
  uint64_t v51 = a4;
  uint64_t v7 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v49 = AssociatedTypeWitness;
  uint64_t v50 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v47 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v48 = (char *)&v35 - v12;
  uint64_t v40 = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(v40 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v40);
  uint64_t v38 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v39 = (char *)&v35 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v35 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);
  uint64_t v36 = v4;
  v21(a4, v4, a2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 64))(v52, a2, v7);
  uint64_t v22 = v52[2];
  uint64_t v45 = v52[4];
  uint64_t v46 = v52[1];
  uint64_t v44 = v52[7];
  uint64_t v37 = v52[8];
  swift_retain();
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v24 = v42;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(v42, v16);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  uint64_t v41 = v22;
  swift_setAtWritableKeyPath();
  swift_release();
  swift_retain();
  uint64_t v25 = v38;
  swift_getAtKeyPath();
  uint64_t v26 = v40;
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 + 16) + 24))(v24, v26);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v25, v26);
  swift_setAtWritableKeyPath();
  swift_release();
  swift_retain();
  uint64_t v28 = v47;
  swift_getAtKeyPath();
  uint64_t v29 = v49;
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 + 16) + 24))(v24, v29);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v28, v29);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v31 = *(void *)(v7 + 8);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 24))(a2, v31);
  uint64_t v33 = sub_1C4341774(v32, v24);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32))(v33, a2, v31);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_3.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v23)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t AssociatedConformanceWitness;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void v36[4];
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  void v47[9];
  void v48[2];

  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v46 = AssociatedTypeWitness;
  uint64_t v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v44 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v43 = (char *)v36 - v13;
  uint64_t v41 = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(v41 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v41);
  uint64_t v37 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  v36[3] = (char *)v36 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  if (a1) {
    unint64_t v22 = a1;
  }
  else {
    unint64_t v22 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  v48[0] = v22;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  v36[0] = a4;
  uint64_t v23 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 64);
  swift_bridgeObjectRetain();
  v23(v47, a2, v9);
  uint64_t v24 = v47[2];
  uint64_t v42 = v47[1];
  uint64_t v40 = v47[4];
  uint64_t v38 = v47[7];
  v36[1] = v47[8];
  swift_retain();
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(void *, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(v48, v17);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  v36[2] = v24;
  swift_setAtWritableKeyPath();
  swift_release();
  swift_retain();
  uint64_t v26 = v37;
  swift_getAtKeyPath();
  uint64_t v27 = v41;
  uint64_t v28 = swift_getAssociatedConformanceWitness();
  (*(void (**)(void *, uint64_t))(*(void *)(v28 + 16) + 24))(v48, v27);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v27);
  swift_setAtWritableKeyPath();
  swift_release();
  swift_retain();
  uint64_t v29 = v44;
  swift_getAtKeyPath();
  uint64_t v30 = v46;
  uint64_t v31 = swift_getAssociatedConformanceWitness();
  (*(void (**)(void *, uint64_t))(*(void *)(v31 + 16) + 24))(v48, v30);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v30);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v32 = *(void *)(v9 + 8);
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v32 + 24))(a2, v32);
  uint64_t v34 = sub_1C4341774(v33, (uint64_t)v48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32))(v34, a2, v32);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t static CRStruct_3.fieldKeys.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(*(void *)(a2 + 8) + 64))(v8);
  long long v6 = *(_OWORD *)&v8[3];
  long long v7 = *(_OWORD *)v8;
  uint64_t v2 = v8[6];
  uint64_t v3 = v8[7];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0250);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1C449BDF0;
  *(_OWORD *)(v4 + 32) = v7;
  *(_OWORD *)(v4 + 48) = v6;
  *(void *)(v4 + 64) = v2;
  *(void *)(v4 + 72) = v3;
  swift_release();
  swift_release();
  swift_release();
  return v4;
}

uint64_t CRStruct_3.merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v28[1] = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v32 = (char *)v28 - v5;
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  uint64_t v30 = v7;
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)v28 - v8;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v28 - v12;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 64))(v39, a2, v4);
  uint64_t v14 = v39[2];
  uint64_t v35 = v39[4];
  uint64_t v37 = v39[1];
  uint64_t v38 = v39[5];
  uint64_t v33 = v39[7];
  v28[3] = v39[8];
  swift_retain();
  swift_getAtKeyPath();
  uint64_t v31 = v14;
  uint64_t v15 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v15(v39, 0);
  swift_release();
  swift_retain();
  swift_getAtKeyPath();
  uint64_t v17 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v18 = v29;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v19 + 8) + 8))(v9, v18);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v18);
  v17(v39, 0);
  swift_release();
  swift_retain();
  uint64_t v20 = v32;
  swift_getAtKeyPath();
  uint64_t v21 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v22 = AssociatedTypeWitness;
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v23 + 8) + 8))(v20, v22);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v20, v22);
  v21(v39, 0);
  swift_release();
  uint64_t v24 = *(void *)(v4 + 8);
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 24))(a2, v24);
  uint64_t v26 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v24 + 40))(v39, a2, v24);
  sub_1C4477B90(v25);
  swift_bridgeObjectRelease();
  v26(v39, 0);
  (*(void (**)(uint64_t, uint64_t))(v24 + 64))(a2, v24);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_3.observableDifference(from:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v34)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  uint64_t v53;
  char *v54;
  BOOL v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t TupleTypeMetadata3;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t AssociatedTypeWitness;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  void v105[8];

  uint64_t v93 = a1;
  int64_t v94 = a2;
  uint64_t v102 = a5;
  uint64_t v6 = *(void *)(a4 + 8);
  swift_getAssociatedTypeWitness();
  uint64_t v88 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  uint64_t v90 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v68 = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  uint64_t v91 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v69 = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C4497B38();
  uint64_t v75 = v8;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  MEMORY[0x1F4188790](TupleTypeMetadata3);
  uint64_t v70 = (char *)&v68 - v10;
  uint64_t v87 = swift_checkMetadataState();
  uint64_t v89 = *(void *)(v87 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v87);
  uint64_t v86 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v85 = (char *)&v68 - v14;
  uint64_t v98 = v9;
  uint64_t v97 = *(void *)(v9 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v95 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v84 = (char *)&v68 - v17;
  char v80 = swift_checkMetadataState();
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v80);
  uint64_t v79 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v77 = (char *)&v68 - v21;
  uint64_t v82 = *(void *)(v8 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v83 = (char *)&v68 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v74 = (char *)&v68 - v24;
  uint64_t v25 = swift_checkMetadataState();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v27);
  uint64_t v32 = (char *)&v68 - v31;
  uint64_t v99 = v7;
  uint64_t v92 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v30);
  uint64_t v104 = (char *)&v68 - v33;
  uint64_t v34 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 64);
  uint64_t v100 = v6;
  unint64_t v101 = a3;
  v34(v105, a3, v6);
  uint64_t v78 = v105[1];
  uint64_t v72 = v105[2];
  uint64_t v76 = v105[4];
  unint64_t v103 = v105[5];
  uint64_t v73 = v105[7];
  swift_retain();
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v35 = v94;
  (*(void (**)(char *, uint64_t, uint64_t))(v88 + 40))(v29, v94, v25);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v26 + 8);
  v36(v29, v25);
  v36(v32, v25);
  swift_retain();
  uint64_t v37 = v77;
  swift_getAtKeyPath();
  uint64_t v38 = v79;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v39 = v74;
  uint64_t v40 = v38;
  uint64_t v41 = v38;
  uint64_t v42 = v37;
  uint64_t v43 = v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v90 + 40))(v40, v35, v80);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v81 + 8);
  v44(v41, v43);
  v44(v42, v43);
  swift_retain();
  uint64_t v45 = v85;
  swift_getAtKeyPath();
  uint64_t v46 = v86;
  uint64_t v47 = v84;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v48 = v35;
  uint64_t v49 = v45;
  uint64_t v50 = v87;
  (*(void (**)(char *, uint64_t, uint64_t))(v91 + 40))(v46, v48, v87);
  uint64_t v51 = v82;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v89 + 8);
  uint64_t v53 = v50;
  uint64_t v54 = v83;
  v52(v46, v53);
  v52(v49, v53);
  uint64_t v55 = 1;
  LODWORD(v52) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v104, 1);
  uint64_t v56 = v75;
  (*(void (**)(char *, char *))(v51 + 16))(v54, v39);
  if (v52 == 1) {
    uint64_t v55 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v68 - 8) + 48))(v54, 1) != 1;
  }
  uint64_t v57 = *(void (**)(char *, uint64_t))(v51 + 8);
  v57(v54, v56);
  uint64_t v59 = v97;
  uint64_t v58 = v98;
  uint64_t v60 = v95;
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v95, v47, v98);
  if (v55 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v69 - 8) + 48))(v60, 1) != 1)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v58);
    uint64_t v64 = &v70[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v65 = &v70[*(int *)(TupleTypeMetadata3 + 64)];
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v70, v104, v99);
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v64, v39, v56);
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v65, v47, v58);
    uint64_t v66 = swift_getAssociatedTypeWitness();
    uint64_t v67 = v102;
    swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v67, 0, 1, v66);
  }
  else
  {
    uint64_t v61 = *(void (**)(char *, uint64_t))(v59 + 8);
    v61(v60, v58);
    v61(v47, v58);
    v57(v39, v56);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v104, v99);
    uint64_t v62 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v102, 1, 1, v62);
  }
}

uint64_t CRStruct_3.hasDelta(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v57 = a1;
  uint64_t v6 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v44 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v43 = (char *)&v42 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v49 = *(void *)(v10 - 8);
  uint64_t v50 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v48 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v47 = (char *)&v42 - v13;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)&v42 - v19;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 64))(v58, a2, v6);
  uint64_t v53 = v58[1];
  uint64_t v54 = v58[7];
  uint64_t v55 = v58[4];
  uint64_t v56 = v58[8];
  swift_retain();
  uint64_t v52 = v4;
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v51 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v18, v14, AssociatedConformanceWitness);
  uint64_t v22 = *(void (**)(char *, uint64_t))(v15 + 8);
  v22(v18, v14);
  v22(v20, v14);
  if (a2) {
    goto LABEL_2;
  }
  swift_retain();
  uint64_t v24 = v47;
  swift_getAtKeyPath();
  uint64_t v25 = v48;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v26 = v50;
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  char v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 72))(v25, v26, v27);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v49 + 8);
  v29(v25, v26);
  v29(v24, v26);
  if (v28) {
    goto LABEL_2;
  }
  swift_retain();
  uint64_t v30 = v43;
  swift_getAtKeyPath();
  uint64_t v31 = v44;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v32 = AssociatedTypeWitness;
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  char v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 72))(v31, v32, v33);
  uint64_t v35 = *(void (**)(char *, uint64_t))(v45 + 8);
  v35(v31, v32);
  v35(v30, v32);
  if (v34)
  {
LABEL_2:
    swift_release();
    char v23 = 1;
  }
  else
  {
    uint64_t v36 = *(void *)(v6 + 8);
    uint64_t v37 = *(uint64_t (**)(uint64_t, uint64_t))(v36 + 24);
    uint64_t v38 = v51;
    uint64_t v39 = v37(v51, v36);
    uint64_t v40 = v37(v38, v36);
    char v23 = sub_1C4478090(v40, v39);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v23 & 1;
}

uint64_t CRStruct_3.actionUndoingDifference(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v80 = a4;
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v76 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v75 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v72 = (char *)&v53 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v54 = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C4497B38();
  uint64_t v78 = *(void *)(v9 - 8);
  uint64_t v79 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v77 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v83 = (char *)&v53 - v12;
  uint64_t v66 = swift_getAssociatedTypeWitness();
  uint64_t v69 = *(void *)(v66 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v66);
  uint64_t v67 = (char *)&v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v64 = (char *)&v53 - v15;
  uint64_t v65 = swift_getAssociatedConformanceWitness();
  uint64_t v53 = swift_getAssociatedTypeWitness();
  uint64_t v61 = sub_1C4497B38();
  uint64_t v59 = *(void *)(v61 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v61);
  uint64_t v68 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v81 = (char *)&v53 - v18;
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v53 - v23;
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v63 = swift_getAssociatedTypeWitness();
  uint64_t v74 = sub_1C4497B38();
  uint64_t v71 = *(void *)(v74 - 8);
  MEMORY[0x1F4188790](v74);
  uint64_t v82 = (char *)&v53 - v26;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 64))(v84, a2, v5);
  uint64_t v60 = v84[1];
  uint64_t v56 = v84[2];
  uint64_t v58 = v84[4];
  uint64_t v57 = v84[7];
  swift_retain();
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 56))(v22, v19, v25);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v55 + 8);
  v27(v22, v19);
  v27(v24, v19);
  swift_retain();
  char v28 = v64;
  swift_getAtKeyPath();
  uint64_t v29 = v67;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v30 = v66;
  (*(void (**)(char *, uint64_t))(v65 + 56))(v29, v66);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v69 + 8);
  v31(v29, v30);
  v31(v28, v30);
  swift_retain();
  uint64_t v32 = v72;
  swift_getAtKeyPath();
  uint64_t v33 = v75;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v34 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t))(AssociatedConformanceWitness + 56))(v33, AssociatedTypeWitness);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = v68;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v76 + 8);
  v36(v33, v34);
  v36(v32, v34);
  BOOL v37 = 1;
  LODWORD(v36) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v63 - 8) + 48))(v82, 1);
  uint64_t v38 = v59;
  uint64_t v39 = v81;
  uint64_t v40 = v61;
  (*(void (**)(char *))(v59 + 16))(v35);
  if (v36 == 1) {
    BOOL v37 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v53 - 8) + 48))(v35, 1) != 1;
  }
  uint64_t v41 = *(void (**)(char *, uint64_t))(v38 + 8);
  v41(v35, v40);
  uint64_t v42 = v77;
  uint64_t v43 = v78;
  uint64_t v44 = v79;
  (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v77, v83, v79);
  if (v37 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v54 - 8) + 48))(v42, 1) != 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v42, v44);
    uint64_t v48 = v74;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v50 = v80;
    uint64_t v51 = v80 + *(int *)(TupleTypeMetadata3 + 48);
    uint64_t v52 = v80 + *(int *)(TupleTypeMetadata3 + 64);
    (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v80, v82, v48);
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v51, v39, v40);
    (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v52, v83, v44);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata3 - 8) + 56))(v50, 0, 1, TupleTypeMetadata3);
  }
  else
  {
    uint64_t v45 = *(void (**)(char *, uint64_t))(v43 + 8);
    v45(v42, v44);
    v45(v83, v44);
    v41(v39, v40);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v82, v74);
    uint64_t v46 = swift_getTupleTypeMetadata3();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v80, 1, 1, v46);
  }
}

uint64_t CRStruct_3.apply(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v28)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  void (*v42)(char *, char *, uint64_t);
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  void (*v46)(void *, void);
  uint64_t v47;
  void (*v48)(char *, uint64_t, uint64_t);
  uint64_t v49;
  char *v50;
  void (*v51)(char *, uint64_t);
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  void (*v62)(char *, char *, uint64_t);
  char *v63;
  void (*v64)(char *, uint64_t);
  char *v65;
  void (*v66)(void *, void);
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  uint64_t v72;
  void (*v73)(char *, uint64_t);
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  void (*v79)(void *, void);
  uint64_t v80;
  void (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t AssociatedConformanceWitness;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t (*v107)(char *, uint64_t, uint64_t);
  void (*v108)(char *, uint64_t, uint64_t);
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void v115[9];

  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v102 = AssociatedTypeWitness;
  uint64_t v87 = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_1C4497B38();
  uint64_t v112 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v100 = (char *)&v84 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v97 = swift_getAssociatedConformanceWitness();
  uint64_t v98 = v9;
  uint64_t v85 = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_1C4497B38();
  unint64_t v103 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v92 = (char *)&v84 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v88 = swift_getAssociatedConformanceWitness();
  uint64_t v96 = v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_1C4497B38();
  uint64_t v104 = v10;
  uint64_t v113 = v7;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v16 = sub_1C4497B38();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v91 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v89 = (char *)&v84 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v84 - v23;
  uint64_t v25 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v84 - v26;
  char v28 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 64);
  uint64_t v29 = v5;
  uint64_t v31 = v30;
  v28(v115, a2, v29);
  uint64_t v32 = v17;
  uint64_t v33 = v115[2];
  uint64_t v99 = v115[1];
  uint64_t v95 = v115[4];
  uint64_t v110 = v115[5];
  int64_t v94 = v115[7];
  uint64_t v93 = v115[8];
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v32 + 16);
  uint64_t v111 = a1;
  uint64_t v108 = v34;
  uint64_t v109 = v32 + 16;
  v34(v24, a1, v31);
  uint64_t v35 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  uint64_t v106 = v35 + 48;
  uint64_t v107 = v36;
  BOOL v37 = v36(v24, 1, TupleTypeMetadata3);
  uint64_t v90 = v32;
  uint64_t v105 = TupleTypeMetadata3;
  uint64_t v114 = v25;
  if (v37 == 1)
  {
    uint64_t v38 = *(void (**)(char *, uint64_t))(v32 + 8);
    swift_retain();
    v38(v24, v31);
    uint64_t v39 = v27;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v27, 1, 1, v13);
  }
  else
  {
    uint64_t v40 = &v24[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v41 = &v24[*(int *)(TupleTypeMetadata3 + 64)];
    uint64_t v42 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    uint64_t v39 = v27;
    v42(v27, v24, v14);
    uint64_t v43 = *(void (**)(char *, uint64_t))(v112 + 8);
    swift_retain();
    v43(v41, v113);
    (*(void (**)(char *, uint64_t))(v103 + 8))(v40, v104);
  }
  uint64_t v44 = v31;
  uint64_t v45 = v14;
  uint64_t v46 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v47 = v88;
  uint64_t v48 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 64);
  uint64_t v49 = swift_checkMetadataState();
  uint64_t v50 = v39;
  v48(v39, v49, v47);
  uint64_t v52 = v114 + 8;
  uint64_t v51 = *(void (**)(char *, uint64_t))(v114 + 8);
  v51(v50, v45);
  v46(v115, 0);
  uint64_t v96 = v33;
  swift_release();
  uint64_t v53 = v89;
  v108(v89, v111, v44);
  uint64_t v54 = v105;
  uint64_t v55 = v107(v53, 1, v105);
  uint64_t v86 = v45;
  uint64_t v114 = v52;
  uint64_t v88 = (uint64_t)v51;
  if (v55 == 1)
  {
    uint64_t v56 = *(void (**)(char *, uint64_t))(v90 + 8);
    swift_retain();
    v56(v53, v44);
    uint64_t v57 = v92;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v92, 1, 1);
    uint64_t v58 = v104;
    uint64_t v59 = v103;
  }
  else
  {
    uint64_t v60 = v45;
    uint64_t v61 = &v53[*(int *)(v54 + 48)];
    uint64_t v84 = &v53[*(int *)(v54 + 64)];
    uint64_t v59 = v103;
    uint64_t v62 = *(void (**)(char *, char *, uint64_t))(v103 + 32);
    uint64_t v85 = v44;
    uint64_t v57 = v92;
    uint64_t v58 = v104;
    v62(v92, v61, v104);
    uint64_t v63 = v53;
    uint64_t v64 = *(void (**)(char *, uint64_t))(v112 + 8);
    swift_retain();
    v64(v84, v113);
    uint64_t v65 = v63;
    uint64_t v44 = v85;
    v51(v65, v60);
  }
  uint64_t v66 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v67 = v97;
  uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v97 + 64);
  uint64_t v69 = swift_checkMetadataState();
  v68(v57, v69, v67);
  uint64_t v70 = *(void (**)(char *, uint64_t))(v59 + 8);
  v70(v57, v58);
  v66(v115, 0);
  swift_release();
  uint64_t v71 = v91;
  v108(v91, v111, v44);
  uint64_t v72 = v105;
  if (v107(v71, 1, v105) == 1)
  {
    uint64_t v73 = *(void (**)(char *, uint64_t))(v90 + 8);
    swift_retain();
    v73(v71, v44);
    uint64_t v74 = v100;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v100, 1, 1);
    uint64_t v76 = v112;
    uint64_t v75 = v113;
  }
  else
  {
    uint64_t v77 = &v71[*(int *)(v72 + 48)];
    uint64_t v78 = &v71[*(int *)(v72 + 64)];
    uint64_t v76 = v112;
    uint64_t v75 = v113;
    uint64_t v74 = v100;
    (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v100, v78, v113);
    swift_retain();
    v70(v77, v58);
    ((void (*)(char *, uint64_t))v88)(v71, v86);
  }
  uint64_t v79 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v80 = AssociatedConformanceWitness;
  uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v82 = swift_checkMetadataState();
  v81(v74, v82, v80);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v74, v75);
  v79(v115, 0);
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_3.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = AssociatedTypeWitness;
  uint64_t v32 = v6;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v29 = (char *)v23 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)v23 - v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v23 - v13;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 64))(v34, a2, v4);
  uint64_t v30 = v34[1];
  uint64_t v28 = v34[4];
  uint64_t v33 = v34[5];
  uint64_t v26 = v34[2];
  uint64_t v27 = v34[7];
  v23[1] = v34[8];
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = v24;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 48))(v24, v11);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 + 16) + 48))(v16, v8);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v8);
  swift_retain();
  uint64_t v18 = v29;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v19 = v31;
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 + 16) + 48))(v16, v19);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v19);
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 24))(a2);
  sub_1C3F7E98C(v16, v21);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall CRStruct_3.needToFinalizeTimestamps()()
{
  uint64_t v3 = v2;
  uint64_t v4 = v0;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v38 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v36 = (char *)&v35 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v39 = (char *)&v35 - v10;
  uint64_t v11 = *(void *)(v4 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v44 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v35 - v14;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v35 - v18;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 64))(v49, v4, v5);
  uint64_t v20 = v49[2];
  uint64_t v46 = v49[4];
  uint64_t v47 = v49[1];
  uint64_t v48 = v49[5];
  uint64_t v45 = v49[7];
  uint64_t v42 = v49[8];
  swift_retain();
  swift_getAtKeyPath();
  uint64_t v43 = v20;
  swift_release();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(v20) = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 56))(v16);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v23 = v3;
  v22(v15, v3, v4);
  if (v20)
  {
    uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
    v24(v15, v4);
    uint64_t v25 = v44;
    v22(v44, v3, v4);
  }
  else
  {
    uint64_t v26 = v39;
    swift_getAtKeyPath();
    uint64_t v27 = v41;
    uint64_t v28 = swift_getAssociatedConformanceWitness();
    char v29 = (*(uint64_t (**)(uint64_t))(*(void *)(v28 + 16) + 56))(v27);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v26, v27);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v11 + 8);
    v24(v15, v4);
    uint64_t v25 = v44;
    v22(v44, v23, v4);
    if ((v29 & 1) == 0)
    {
      uint64_t v31 = v36;
      swift_getAtKeyPath();
      uint64_t v32 = v38;
      uint64_t v33 = swift_getAssociatedConformanceWitness();
      char v30 = (*(uint64_t (**)(uint64_t))(*(void *)(v33 + 16) + 56))(v32);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v32);
      v24(v25, v4);
      return v30 & 1;
    }
  }
  v24(v25, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v30 = 1;
  return v30 & 1;
}

uint64_t CRStruct_3.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, void))(*(void *)(a3 + 8) + 64))(&v17, a2, *(void *)(a3 + 8));
  swift_retain();
  uint64_t v15 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 64);
  uint64_t v6 = swift_checkMetadataState();
  v5(a1, v6, v4);
  v15(&v17, 0);
  swift_release();
  swift_retain();
  uint64_t v16 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 64);
  uint64_t v9 = swift_checkMetadataState();
  v8(a1, v9, v7);
  v16(&v17, 0);
  swift_release();
  swift_retain();
  uint64_t v10 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 64);
  uint64_t v13 = swift_checkMetadataState();
  v12(a1, v13, v11);
  v10(&v17, 0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t CRStruct_3.minEncodingVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v35 = a3;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v28 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v26 = (char *)&v25 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v25 - v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v25 - v13;
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v5 + 64))((char *)v38 + 1, a1, v5);
  uint64_t v33 = *(void *)((char *)&v38[4] + 1);
  uint64_t v34 = *(void *)((char *)&v38[1] + 1);
  uint64_t v36 = *(void *)((char *)&v38[5] + 1);
  uint64_t v37 = *(void *)((char *)&v38[2] + 1);
  uint64_t v31 = *(void *)((char *)&v38[8] + 1);
  uint64_t v32 = *(void *)((char *)&v38[7] + 1);
  uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 24);
  uint64_t v30 = v3;
  uint64_t v16 = v15(a1);
  sub_1C447829C(v16, (unsigned char *)v38 + 1);
  swift_bridgeObjectRelease();
  unsigned int v17 = BYTE1(v38[0]);
  if (BYTE1(v38[0]) > 1u) {
    goto LABEL_11;
  }
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 16)
                                                                    + 8)
                                                        + 32))(v38, v11);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (LOBYTE(v38[0]) > v17) {
    unsigned int v17 = LOBYTE(v38[0]);
  }
  BYTE1(v38[0]) = v17;
  if (v17 > 1) {
    goto LABEL_11;
  }
  swift_getAtKeyPath();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(v19 + 16) + 8) + 32))(v38, v8);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v10, v8);
  if (LOBYTE(v38[0]) > v17) {
    unsigned int v17 = LOBYTE(v38[0]);
  }
  BYTE1(v38[0]) = v17;
  if (v17 > 1)
  {
LABEL_11:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = v26;
    swift_getAtKeyPath();
    uint64_t v21 = v28;
    uint64_t v22 = swift_getAssociatedConformanceWitness();
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(v22 + 16) + 8) + 32))(v38, v21);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v21);
    unsigned int v23 = LOBYTE(v38[0]);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v23 > v17) {
      LOBYTE(v17) = v23;
    }
  }
  *uint64_t v35 = v17;
  return result;
}

uint64_t CRStruct_3<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t result;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t i;
  unint64_t v36;
  int64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t AssociatedTypeWitness;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  uint64_t v44 = a6;
  uint64_t v50 = a5;
  uint64_t v55 = a4;
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v45 = (char *)&v42 - v9;
  uint64_t v51 = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v52 = (char *)&v42 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v53 = v11;
  uint64_t v54 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v42 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF70);
  uint64_t v59 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unsigned int v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v8 + 64);
  uint64_t v42 = a2;
  v18(&v64, a2, v8);
  uint64_t v19 = v65;
  uint64_t v63 = v64;
  uint64_t v20 = v66;
  uint64_t v49 = v67;
  uint64_t v60 = v68;
  uint64_t v62 = v69;
  uint64_t v43 = v70;
  uint64_t v57 = v72;
  uint64_t v58 = v71;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C42469F0();
  sub_1C44986A8();
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v64 = v63;
  uint64_t v65 = v19;
  uint64_t v63 = v15;
  uint64_t v21 = v53;
  uint64_t v22 = v56;
  unsigned int v23 = v17;
  sub_1C4498048();
  if (v22)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v17, v63);
  }
  uint64_t v55 = v8;
  uint64_t v56 = v19;
  (*(void (**)(char *, uint64_t))(v54 + 8))(v14, v21);
  swift_retain();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v64 = v49;
  uint64_t v65 = v60;
  swift_bridgeObjectRetain();
  uint64_t v25 = v51;
  sub_1C4498048();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v52, v25);
  swift_retain();
  uint64_t v26 = v45;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v64 = v43;
  uint64_t v65 = v58;
  swift_bridgeObjectRetain();
  sub_1C4498048();
  uint64_t v54 = v20;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v26, AssociatedTypeWitness);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v55 + 8) + 24))(v42);
  uint64_t v27 = result;
  uint64_t v28 = 0;
  uint64_t v29 = result + 64;
  uint64_t v30 = 1 << *(unsigned char *)(result + 32);
  uint64_t v31 = -1;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  uint64_t v32 = v31 & *(void *)(result + 64);
  uint64_t v61 = (unint64_t)(v30 + 63) >> 6;
  if (!v32) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v33 = __clz(__rbit64(v32));
  v32 &= v32 - 1;
  for (unint64_t i = v33 | (v28 << 6); ; unint64_t i = __clz(__rbit64(v36)) + (v28 << 6))
  {
    uint64_t v38 = (uint64_t *)(*(void *)(v27 + 48) + 16 * i);
    uint64_t v39 = *v38;
    uint64_t v40 = v38[1];
    uint64_t v73 = *(void *)(*(void *)(v27 + 56) + 8 * i);
    uint64_t v64 = v39;
    uint64_t v65 = v40;
    sub_1C4246A44();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C4498048();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_6;
    }
LABEL_7:
    if (__OFADD__(v28++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v28 >= v61) {
      goto LABEL_24;
    }
    uint64_t v36 = *(void *)(v29 + 8 * v28);
    if (!v36) {
      break;
    }
LABEL_17:
    uint64_t v32 = (v36 - 1) & v36;
  }
  uint64_t v37 = v28 + 1;
  if (v28 + 1 >= v61) {
    goto LABEL_24;
  }
  uint64_t v36 = *(void *)(v29 + 8 * v37);
  if (v36) {
    goto LABEL_16;
  }
  uint64_t v37 = v28 + 2;
  if (v28 + 2 >= v61) {
    goto LABEL_24;
  }
  uint64_t v36 = *(void *)(v29 + 8 * v37);
  if (v36) {
    goto LABEL_16;
  }
  uint64_t v37 = v28 + 3;
  if (v28 + 3 >= v61)
  {
LABEL_24:
    uint64_t v41 = v59;
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v23, v63);
  }
  uint64_t v36 = *(void *)(v29 + 8 * v37);
  if (v36)
  {
LABEL_16:
    uint64_t v28 = v37;
    goto LABEL_17;
  }
  while (1)
  {
    uint64_t v28 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v28 >= v61) {
      goto LABEL_24;
    }
    uint64_t v36 = *(void *)(v29 + 8 * v28);
    ++v37;
    if (v36) {
      goto LABEL_17;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t CRStruct_4.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v59 = a4;
  uint64_t v7 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v55 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v56 = (char *)&v42 - v10;
  uint64_t v52 = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(v52 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v52);
  uint64_t v50 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v51 = (char *)&v42 - v13;
  uint64_t v47 = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(v47 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v47);
  uint64_t v45 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v46 = (char *)&v42 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);
  uint64_t v42 = v4;
  v22(a4, v4, a2);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 80))(v66, a2, v7);
  uint64_t v24 = v66[1];
  uint64_t v23 = v66[2];
  uint64_t v65 = v66[4];
  uint64_t v61 = v66[5];
  uint64_t v62 = v66[7];
  uint64_t v63 = v66[8];
  uint64_t v53 = v66[10];
  uint64_t v49 = v66[11];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v43 = v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v26 = v64;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(v64, v17);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  swift_setAtWritableKeyPath();
  swift_bridgeObjectRetain_n();
  uint64_t v60 = v23;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v27 = v45;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v28 = v47;
  uint64_t v29 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 + 16) + 24))(v26, v28);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v28);
  swift_setAtWritableKeyPath();
  uint64_t v44 = v24;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v30 = v50;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v31 = v43;
  uint64_t v32 = v52;
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  uint64_t v34 = v64;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 + 16) + 24))(v64, v32);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v30, v32);
  swift_setAtWritableKeyPath();
  swift_release();
  swift_retain_n();
  uint64_t v35 = v55;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v36 = AssociatedTypeWitness;
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 + 16) + 24))(v34, v36);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v36);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v38 = *(void *)(v31 + 8);
  uint64_t v39 = (*(uint64_t (**)(uint64_t, uint64_t))(v38 + 24))(a2, v38);
  uint64_t v40 = sub_1C4341774(v39, v34);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v38 + 32))(v40, a2, v38);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_4.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v26)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t AssociatedConformanceWitness;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void v66[12];
  unint64_t v67;

  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v60 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v61 = AssociatedTypeWitness;
  uint64_t v11 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v59 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v58 = (char *)&v43 - v13;
  uint64_t v57 = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(v57 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v57);
  uint64_t v55 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v54 = (char *)&v43 - v16;
  uint64_t v52 = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(v52 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v52);
  uint64_t v49 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v48 = (char *)&v43 - v19;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  if (a1) {
    unint64_t v25 = a1;
  }
  else {
    unint64_t v25 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  uint64_t v67 = v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v62 = a4;
  uint64_t v26 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 80);
  swift_bridgeObjectRetain();
  v26(v66, a2, v9);
  uint64_t v27 = v66[1];
  uint64_t v64 = v66[4];
  uint64_t v44 = v9;
  uint64_t v45 = v66[5];
  uint64_t v65 = v66[7];
  uint64_t v63 = v66[8];
  uint64_t v53 = v66[10];
  uint64_t v51 = v66[11];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  uint64_t v46 = v5;
  swift_getAtKeyPath();
  swift_release();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(&v67, v20);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  swift_setAtWritableKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v29 = v49;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v30 = v44;
  uint64_t v31 = v52;
  uint64_t v32 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v32 + 16) + 24))(&v67, v31);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v29, v31);
  swift_setAtWritableKeyPath();
  uint64_t v47 = v27;
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v33 = v55;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v34 = v57;
  uint64_t v35 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v35 + 16) + 24))(&v67, v34);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v33, v34);
  swift_setAtWritableKeyPath();
  swift_release();
  swift_retain_n();
  uint64_t v36 = v59;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v37 = v61;
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v38 + 16) + 24))(&v67, v37);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v36, v37);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v39 = *(void *)(v30 + 8);
  uint64_t v40 = (*(uint64_t (**)(uint64_t, uint64_t))(v39 + 24))(a2, v39);
  uint64_t v41 = sub_1C4341774(v40, (uint64_t)&v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v39 + 32))(v41, a2, v39);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t static CRStruct_4.fieldKeys.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(*(void *)(a2 + 8) + 80))(v12);
  uint64_t v3 = v12[0];
  uint64_t v2 = v12[1];
  uint64_t v4 = v12[3];
  uint64_t v5 = v12[4];
  uint64_t v7 = v12[6];
  uint64_t v6 = v12[7];
  uint64_t v8 = v12[10];
  uint64_t v11 = v12[9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0250);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C449BBD0;
  swift_bridgeObjectRetain();
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 48) = v4;
  *(void *)(v9 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 64) = v7;
  *(void *)(v9 + 72) = v6;
  swift_bridgeObjectRetain();
  *(void *)(v9 + 80) = v11;
  *(void *)(v9 + 88) = v8;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t CRStruct_4.merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v14)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v15;
  void (*v16)(void *, void);
  uint64_t AssociatedConformanceWitness;
  char *v18;
  void (*v19)(void *, void);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(void *, void);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(void *, void);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(void *, void);
  void v35[2];
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void v53[13];

  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v46 = AssociatedTypeWitness;
  uint64_t v47 = v6;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v44 = (char *)v35 - v7;
  uint64_t v42 = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)v35 - v8;
  uint64_t v38 = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v36 = (char *)v35 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)v35 - v12;
  uint64_t v14 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 80);
  v35[0] = v4;
  v14(v53, a2, v4);
  uint64_t v15 = v53[2];
  uint64_t v48 = v53[1];
  uint64_t v50 = v53[5];
  uint64_t v51 = v53[7];
  uint64_t v52 = v53[4];
  uint64_t v37 = v53[8];
  uint64_t v45 = v53[10];
  uint64_t v40 = v53[11];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v16 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  v16(v53, 0);
  swift_bridgeObjectRetain_n();
  uint64_t v49 = v15;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v18 = v36;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v19 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v20 = v35[0];
  uint64_t v21 = v38;
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v22 + 8) + 8))(v18, v21);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v18, v21);
  v19(v53, 0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v23 = v41;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v24 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  unint64_t v25 = v42;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v26 + 8) + 8))(v23, v25);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v23, v25);
  v24(v53, 0);
  swift_release();
  swift_retain_n();
  uint64_t v27 = v44;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v28 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v29 = v46;
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v30 + 8) + 8))(v27, v29);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v29);
  v28(v53, 0);
  swift_release();
  uint64_t v31 = *(void *)(v20 + 8);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(v31 + 24))(a2, v31);
  uint64_t v33 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v31 + 40))(v53, a2, v31);
  sub_1C4477B90(v32);
  swift_bridgeObjectRelease();
  v33(v53, 0);
  (*(void (**)(uint64_t, uint64_t))(v31 + 64))(a2, v31);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_4.observableDifference(from:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v35)(void *__return_ptr, uint64_t, uint64_t);
  void (*v36)(char *, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  char *v50;
  char *v51;
  BOOL v52;
  uint64_t v53;
  void (*v54)(char *, void *);
  char *v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  void (*v62)(char *, uint64_t);
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  int *TupleTypeMetadata;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t AssociatedTypeWitness;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  const char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  void *v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void v117[12];

  uint64_t v111 = a1;
  uint64_t v116 = a2;
  uint64_t v106 = a5;
  uint64_t v6 = *(void *)(a4 + 8);
  uint64_t v108 = "\a";
  swift_getAssociatedTypeWitness();
  uint64_t v109 = (char *)&associated conformance descriptor for CRStruct_Base_4.CRStruct_Base_4.Type_1: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v117[0] = sub_1C4497B38();
  uint64_t v112 = &associated type descriptor for CRStruct_Base_4.Type_2;
  swift_getAssociatedTypeWitness();
  uint64_t v113 = (char *)&associated conformance descriptor for CRStruct_Base_4.CRStruct_Base_4.Type_2: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v117[1] = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v117[2] = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v117[3] = sub_1C4497B38();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v74 = (char *)&v71 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v99 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v97 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  int64_t v94 = (char *)&v71 - v10;
  uint64_t v95 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v73 = swift_getAssociatedTypeWitness();
  unint64_t v103 = sub_1C4497B38();
  uint64_t v102 = *(void *)(v103 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v103);
  unint64_t v101 = (char *)&v71 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v114 = (char *)&v71 - v13;
  uint64_t v88 = swift_getAssociatedTypeWitness();
  uint64_t v91 = *(void *)(v88 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v88);
  uint64_t v89 = (char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v85 = (char *)&v71 - v16;
  uint64_t v87 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v72 = swift_getAssociatedTypeWitness();
  uint64_t v100 = sub_1C4497B38();
  uint64_t v110 = *(void *)(v100 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v100);
  uint64_t v98 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v115 = (char *)&v71 - v19;
  uint64_t v79 = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(v79 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v79);
  uint64_t v80 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v77 = (char *)&v71 - v22;
  uint64_t v78 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v71 = swift_getAssociatedTypeWitness();
  uint64_t v112 = (void *)sub_1C4497B38();
  uint64_t v90 = *(v112 - 1);
  uint64_t v23 = MEMORY[0x1F4188790](v112);
  uint64_t v86 = (char *)&v71 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v113 = (char *)&v71 - v25;
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v71 - v31;
  uint64_t v33 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v84 = swift_getAssociatedTypeWitness();
  uint64_t v93 = sub_1C4497B38();
  uint64_t v92 = *(void *)(v93 - 8);
  MEMORY[0x1F4188790](v93);
  uint64_t v109 = (char *)&v71 - v34;
  uint64_t v35 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 80);
  uint64_t v105 = a3;
  uint64_t v104 = v6;
  v35(v117, a3, v6);
  uint64_t v107 = v117[4];
  uint64_t v108 = (const char *)v117[7];
  uint64_t v76 = v117[8];
  uint64_t v83 = v117[10];
  uint64_t v81 = v117[11];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v33 + 40))(v30, v116, v26, v33);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v27 + 8);
  v36(v30, v26);
  v36(v32, v26);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = v77;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = v80;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v39 = v79;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 40))(v38, v116, v79);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v82 + 8);
  v40(v38, v39);
  v40(v37, v39);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = v85;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v42 = v89;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v43 = v88;
  (*(void (**)(char *, uint64_t, uint64_t))(v87 + 40))(v42, v116, v88);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v91 + 8);
  v44(v42, v43);
  v44(v41, v43);
  swift_retain();
  uint64_t v45 = v94;
  swift_getAtKeyPath();
  swift_release();
  swift_retain();
  uint64_t v46 = v97;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v47 = v46;
  uint64_t v48 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v95 + 40))(v46, v116, AssociatedTypeWitness);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v99 + 8);
  uint64_t v50 = v47;
  uint64_t v51 = v86;
  v49(v50, v48);
  v49(v45, v48);
  uint64_t v52 = 1;
  LODWORD(v49) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v84 - 8) + 48))(v109, 1);
  uint64_t v53 = v90;
  (*(void (**)(char *, char *, void *))(v90 + 16))(v51, v113, v112);
  if (v49 == 1) {
    uint64_t v52 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v71 - 8) + 48))(v51, 1) != 1;
  }
  uint64_t v54 = *(void (**)(char *, void *))(v53 + 8);
  v54(v51, v112);
  uint64_t v55 = v98;
  uint64_t v56 = v100;
  (*(void (**)(char *, char *, uint64_t))(v110 + 16))(v98, v115, v100);
  uint64_t v57 = v52 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v72 - 8) + 48))(v55, 1) != 1;
  uint64_t v58 = v103;
  uint64_t v59 = v102;
  uint64_t v60 = v101;
  uint64_t v61 = v55;
  uint64_t v62 = *(void (**)(char *, uint64_t))(v110 + 8);
  v62(v61, v56);
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v60, v114, v58);
  if (v57 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v73 - 8) + 48))(v60, 1) != 1)
  {
    (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v58);
    uint64_t v66 = &v74[TupleTypeMetadata[12]];
    uint64_t v67 = &v74[TupleTypeMetadata[16]];
    uint64_t v68 = &v74[TupleTypeMetadata[20]];
    (*(void (**)(char *, char *, uint64_t))(v92 + 32))(v74, v109, v93);
    (*(void (**)(char *, char *, void *))(v53 + 32))(v66, v113, v112);
    (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v67, v115, v56);
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v68, v114, v58);
    uint64_t v69 = swift_getAssociatedTypeWitness();
    uint64_t v70 = v106;
    swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v70, 0, 1, v69);
  }
  else
  {
    uint64_t v63 = *(void (**)(char *, uint64_t))(v59 + 8);
    v63(v60, v58);
    v63(v114, v58);
    v62(v115, v56);
    v54(v113, v112);
    (*(void (**)(char *, uint64_t))(v92 + 8))(v109, v93);
    uint64_t v64 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v106, 1, 1, v64);
  }
}

uint64_t CRStruct_4.hasDelta(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v69 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v51 = (char *)v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v50 = (char *)v49 - v7;
  uint64_t v57 = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(v57 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v57);
  uint64_t v55 = (char *)v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v54 = (char *)v49 - v10;
  uint64_t v61 = swift_getAssociatedTypeWitness();
  uint64_t v60 = *(void *)(v61 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v61);
  uint64_t v59 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v58 = (char *)v49 - v13;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v49 - v19;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 80))(v70, a2, v4);
  uint64_t v66 = v70[5];
  uint64_t v67 = v70[4];
  uint64_t v68 = v70[7];
  uint64_t v21 = v70[11];
  uint64_t v64 = v70[10];
  uint64_t v65 = v70[8];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v62 = v4;
  uint64_t v63 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v18, v14, AssociatedConformanceWitness);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v15 + 8);
  v23(v18, v14);
  v23(v20, v14);
  if (a2) {
    goto LABEL_4;
  }
  v49[1] = v21;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = v58;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v25 = v59;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v26 = v61;
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  char v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 72))(v25, v26, v27);
  uint64_t v29 = *(void (**)(char *, uint64_t))(v60 + 8);
  v29(v25, v26);
  v29(v24, v26);
  if (v28) {
    goto LABEL_4;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v32 = v54;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = v55;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v34 = v57;
  uint64_t v35 = swift_getAssociatedConformanceWitness();
  char v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 72))(v33, v34, v35);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v56 + 8);
  v37(v33, v34);
  v37(v32, v34);
  if (v36) {
    goto LABEL_4;
  }
  swift_retain();
  uint64_t v38 = v50;
  swift_getAtKeyPath();
  swift_release();
  swift_retain();
  uint64_t v39 = v51;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v40 = AssociatedTypeWitness;
  uint64_t v41 = swift_getAssociatedConformanceWitness();
  char v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 72))(v39, v40, v41);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v52 + 8);
  v43(v39, v40);
  v43(v38, v40);
  if (v42)
  {
LABEL_4:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    char v30 = 1;
  }
  else
  {
    uint64_t v44 = v63;
    uint64_t v45 = *(void *)(v62 + 8);
    uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t))(v45 + 24);
    uint64_t v47 = v46(v63, v45);
    uint64_t v48 = v46(v44, v45);
    char v30 = sub_1C4478090(v48, v47);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v30 & 1;
}

uint64_t CRStruct_4.actionUndoingDifference(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v106 = a1;
  uint64_t v100 = a4;
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v95 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v93 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v89 = (char *)&v68 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v71 = swift_getAssociatedTypeWitness();
  uint64_t v99 = sub_1C4497B38();
  uint64_t v98 = *(void *)(v99 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v99);
  uint64_t v96 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v108 = (char *)&v68 - v11;
  uint64_t v84 = swift_getAssociatedTypeWitness();
  uint64_t v87 = *(void *)(v84 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v84);
  uint64_t v85 = (char *)&v68 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v81 = (char *)&v68 - v14;
  uint64_t v83 = swift_getAssociatedConformanceWitness();
  uint64_t v70 = swift_getAssociatedTypeWitness();
  uint64_t v97 = sub_1C4497B38();
  uint64_t v105 = *(void *)(v97 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v97);
  int64_t v94 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v109 = (char *)&v68 - v17;
  uint64_t v75 = swift_getAssociatedTypeWitness();
  uint64_t v78 = *(void *)(v75 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v75);
  uint64_t v76 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v73 = (char *)&v68 - v20;
  uint64_t v74 = swift_getAssociatedConformanceWitness();
  uint64_t v69 = swift_getAssociatedTypeWitness();
  uint64_t v86 = sub_1C4497B38();
  uint64_t v104 = *(void *)(v86 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v86);
  uint64_t v82 = (char *)&v68 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v107 = (char *)&v68 - v23;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  char v28 = (char *)&v68 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  char v30 = (char *)&v68 - v29;
  uint64_t v31 = swift_getAssociatedConformanceWitness();
  uint64_t v80 = swift_getAssociatedTypeWitness();
  uint64_t v90 = sub_1C4497B38();
  uint64_t v88 = *(void *)(v90 - 8);
  MEMORY[0x1F4188790](v90);
  unint64_t v103 = (char *)&v68 - v32;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 80))(&v110, a2, v5);
  uint64_t v101 = v114;
  uint64_t v102 = v115;
  uint64_t v72 = v116;
  uint64_t v79 = v117;
  uint64_t v77 = v118;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v31 + 56))(v28, v24, v31);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v25 + 8);
  v33(v28, v24);
  v33(v30, v24);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v34 = v73;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = v76;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v36 = v75;
  (*(void (**)(char *, uint64_t))(v74 + 56))(v35, v75);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v78 + 8);
  v37(v35, v36);
  v37(v34, v36);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = v81;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = v85;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v40 = v84;
  (*(void (**)(char *, uint64_t))(v83 + 56))(v39, v84);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v87 + 8);
  v41(v39, v40);
  v41(v38, v40);
  swift_retain();
  char v42 = v89;
  swift_getAtKeyPath();
  swift_release();
  swift_retain();
  uint64_t v43 = v93;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v44 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t))(AssociatedConformanceWitness + 56))(v43, AssociatedTypeWitness);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = *(void (**)(char *, uint64_t))(v95 + 8);
  uint64_t v46 = v82;
  v45(v43, v44);
  v45(v42, v44);
  BOOL v47 = 1;
  LODWORD(v45) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v80 - 8) + 48))(v103, 1);
  uint64_t v48 = v86;
  (*(void (**)(char *, char *))(v104 + 16))(v46, v107);
  if (v45 == 1) {
    BOOL v47 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v69 - 8) + 48))(v46, 1) != 1;
  }
  uint64_t v49 = *(void (**)(char *, uint64_t))(v104 + 8);
  v49(v46, v48);
  uint64_t v50 = v94;
  uint64_t v51 = v97;
  (*(void (**)(char *, char *, uint64_t))(v105 + 16))(v94, v109, v97);
  BOOL v52 = v47 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v70 - 8) + 48))(v50, 1) != 1;
  uint64_t v53 = v99;
  uint64_t v54 = v98;
  uint64_t v55 = v96;
  uint64_t v56 = v50;
  uint64_t v57 = *(void (**)(char *, uint64_t))(v105 + 8);
  v57(v56, v51);
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v55, v108, v53);
  if (v52 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v71 - 8) + 48))(v55, 1) != 1)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v53);
    uint64_t v62 = v90;
    uint64_t v110 = v90;
    uint64_t v111 = v48;
    uint64_t v112 = v51;
    uint64_t v113 = v53;
    TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
    uint64_t v64 = v100;
    uint64_t v65 = v100 + TupleTypeMetadata[12];
    uint64_t v66 = v100 + TupleTypeMetadata[16];
    uint64_t v67 = v100 + TupleTypeMetadata[20];
    (*(void (**)(uint64_t, char *, uint64_t))(v88 + 32))(v100, v103, v62);
    (*(void (**)(uint64_t, char *, uint64_t))(v104 + 32))(v65, v107, v48);
    (*(void (**)(uint64_t, char *, uint64_t))(v105 + 32))(v66, v109, v51);
    (*(void (**)(uint64_t, char *, uint64_t))(v54 + 32))(v67, v108, v53);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)TupleTypeMetadata - 1) + 56))(v64, 0, 1, TupleTypeMetadata);
  }
  else
  {
    uint64_t v58 = *(void (**)(char *, uint64_t))(v54 + 8);
    v58(v55, v53);
    v58(v108, v53);
    v57(v109, v51);
    v49(v107, v48);
    uint64_t v59 = v90;
    (*(void (**)(char *, uint64_t))(v88 + 8))(v103, v90);
    uint64_t v110 = v59;
    uint64_t v111 = v48;
    uint64_t v112 = v51;
    uint64_t v113 = v53;
    uint64_t v60 = swift_getTupleTypeMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v60 - 8) + 56))(v100, 1, 1, v60);
  }
}

uint64_t CRStruct_4.apply(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v123 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v103 = AssociatedTypeWitness;
  uint64_t v87 = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  uint64_t v122 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v101 = (char *)&v84 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v99 = swift_getAssociatedConformanceWitness();
  uint64_t v100 = v8;
  uint64_t v86 = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C4497B38();
  uint64_t v108 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v98 = (char *)&v84 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v92 = swift_getAssociatedConformanceWitness();
  uint64_t v93 = (void (*)(char *, uint64_t))v11;
  uint64_t v85 = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C4497B38();
  uint64_t v121 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v90 = (char *)&v84 - v13;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v89 = swift_getAssociatedConformanceWitness();
  uint64_t v94 = v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v124 = sub_1C4497B38();
  uint64_t v125 = v12;
  uint64_t v109 = v9;
  uint64_t v126 = v9;
  uint64_t v127 = v6;
  uint64_t v111 = v6;
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v17 = sub_1C4497B38();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v97 = (char *)&v84 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v91 = (char *)&v84 - v22;
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v88 = (char *)&v84 - v24;
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)&v84 - v25;
  uint64_t v84 = (char *)v15;
  uint64_t v27 = sub_1C4497B38();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x1F4188790](v27);
  char v30 = (char *)&v84 - v29;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 80))(&v124, a2, v4);
  uint64_t v32 = v125;
  uint64_t v31 = v126;
  uint64_t v117 = v129;
  uint64_t v118 = v128;
  uint64_t v107 = v130;
  uint64_t v116 = v131;
  uint64_t v96 = v132;
  uint64_t v106 = v133;
  swift_bridgeObjectRetain();
  uint64_t v119 = v31;
  swift_retain();
  uint64_t v120 = v32;
  swift_bridgeObjectRelease();
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  uint64_t v115 = v18 + 16;
  uint64_t v114 = v33;
  v33(v26, v123, v17);
  uint64_t v34 = *((void *)TupleTypeMetadata - 1);
  uint64_t v113 = *(uint64_t (**)(char *, uint64_t, int *))(v34 + 48);
  uint64_t v112 = v34 + 48;
  int v35 = v113(v26, 1, TupleTypeMetadata);
  uint64_t v36 = v122;
  uint64_t v110 = v12;
  uint64_t v104 = v18;
  uint64_t v105 = v17;
  if (v35 == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v26, v17);
    (*(void (**)(char *, uint64_t, uint64_t))(*((void *)v84 - 1) + 56))(v30, 1, 1);
  }
  else
  {
    uint64_t v84 = &v26[TupleTypeMetadata[12]];
    uint64_t v37 = &v26[TupleTypeMetadata[16]];
    uint64_t v38 = &v26[TupleTypeMetadata[20]];
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v30, v26, v27);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v111);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v37, v109);
    (*(void (**)(char *, uint64_t))(v121 + 8))(v84, v12);
  }
  uint64_t v39 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  uint64_t v40 = v89;
  uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v89 + 64);
  uint64_t v42 = swift_checkMetadataState();
  v41(v30, v42, v40);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v28 + 8);
  v43(v30, v27);
  v39(&v124, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  uint64_t v44 = v88;
  uint64_t v45 = v105;
  v114(v88, v123, v105);
  int v46 = v113(v44, 1, TupleTypeMetadata);
  uint64_t v47 = v27;
  uint64_t v48 = TupleTypeMetadata;
  uint64_t v95 = v27;
  uint64_t v94 = v28 + 8;
  uint64_t v89 = (uint64_t)v43;
  if (v46 == 1)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v44, v45);
    uint64_t v49 = v90;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v90, 1, 1);
    uint64_t v50 = v121;
  }
  else
  {
    uint64_t v51 = &v44[TupleTypeMetadata[12]];
    BOOL v52 = v44;
    uint64_t v53 = &v44[v48[16]];
    uint64_t v54 = &v52[v48[20]];
    uint64_t v50 = v121;
    uint64_t v49 = v90;
    (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v90, v51, v110);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v54, v111);
    (*(void (**)(char *, uint64_t))(v108 + 8))(v53, v109);
    v43(v52, v47);
  }
  uint64_t v55 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  uint64_t v56 = v92;
  uint64_t v57 = *(void (**)(char *, uint64_t, uint64_t))(v92 + 64);
  uint64_t v58 = swift_checkMetadataState();
  v57(v49, v58, v56);
  uint64_t v93 = *(void (**)(char *, uint64_t))(v50 + 8);
  v93(v49, v110);
  v55(&v124, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v59 = v91;
  v114(v91, v123, v45);
  int v60 = v113(v59, 1, v48);
  uint64_t v121 = v50 + 8;
  if (v60 == 1)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v59, v45);
    uint64_t v61 = v98;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v98, 1, 1);
    uint64_t v62 = v109;
    uint64_t v63 = v108;
  }
  else
  {
    uint64_t v64 = &v59[v48[12]];
    uint64_t v65 = &v59[v48[20]];
    uint64_t v63 = v108;
    uint64_t v61 = v98;
    uint64_t v62 = v109;
    (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v98, &v59[v48[16]], v109);
    (*(void (**)(char *, uint64_t))(v122 + 8))(v65, v111);
    v93(v64, v110);
    ((void (*)(char *, uint64_t))v89)(v59, v95);
  }
  uint64_t v66 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  uint64_t v67 = v99;
  uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v99 + 64);
  uint64_t v69 = swift_checkMetadataState();
  v68(v61, v69, v67);
  uint64_t v70 = *(void (**)(char *, uint64_t))(v63 + 8);
  v70(v61, v62);
  v66(&v124, 0);
  swift_release();
  swift_retain();
  uint64_t v71 = v97;
  uint64_t v72 = v105;
  v114(v97, v123, v105);
  if (v113(v71, 1, v48) == 1)
  {
    (*(void (**)(char *, uint64_t))(v104 + 8))(v71, v72);
    uint64_t v73 = v101;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56))(v101, 1, 1);
    uint64_t v74 = v111;
    uint64_t v75 = v122;
  }
  else
  {
    uint64_t v76 = &v71[v48[12]];
    uint64_t v77 = &v71[v48[16]];
    uint64_t v75 = v122;
    uint64_t v78 = v101;
    uint64_t v74 = v111;
    (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v101, &v71[v48[20]], v111);
    v70(v77, v62);
    uint64_t v73 = v78;
    v93(v76, v110);
    ((void (*)(char *, uint64_t))v89)(v71, v95);
  }
  uint64_t v79 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  uint64_t v80 = AssociatedConformanceWitness;
  uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v82 = swift_checkMetadataState();
  v81(v73, v82, v80);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v73, v74);
  v79(&v124, 0);
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_4.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v34 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v42 = AssociatedTypeWitness;
  uint64_t v43 = v6;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v41 = (char *)&v29 - v7;
  uint64_t v38 = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v37 = (char *)&v29 - v8;
  uint64_t v33 = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(v33 - 8);
  MEMORY[0x1F4188790](v33);
  uint64_t v31 = (char *)&v29 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v29 - v12;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 80))(v48, a2, v4);
  uint64_t v14 = v48[1];
  uint64_t v44 = v48[4];
  uint64_t v45 = v48[5];
  uint64_t v46 = v48[7];
  uint64_t v47 = v48[8];
  uint64_t v39 = v48[10];
  uint64_t v36 = v48[11];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v30 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = v34;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 48))(v34, v10);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = v31;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v18 = v33;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 + 16) + 48))(v16, v18);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v18);
  uint64_t v32 = v14;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v20 = v37;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v21 = v30;
  uint64_t v22 = v38;
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 + 16) + 48))(v16, v22);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v20, v22);
  swift_retain();
  uint64_t v24 = v41;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v25 = v42;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 + 16) + 48))(v16, v25);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v24, v25);
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 24))(v21);
  sub_1C3F7E98C(v16, v27);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall CRStruct_4.needToFinalizeTimestamps()()
{
  uint64_t v3 = v2;
  uint64_t v4 = v0;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v43 = (char *)&v43 - v6;
  uint64_t v48 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v48 - 8);
  MEMORY[0x1F4188790](v48);
  uint64_t v46 = (char *)&v43 - v7;
  uint64_t v51 = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(v51 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v51);
  uint64_t v49 = (char *)&v43 - v9;
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  int v60 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v62 = (char *)&v43 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v43 - v14;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v43 - v18;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 80))(v64, v4, v5);
  uint64_t v20 = v64[1];
  uint64_t v21 = v64[2];
  uint64_t v63 = v64[5];
  uint64_t v56 = v64[7];
  uint64_t v57 = v64[4];
  uint64_t v61 = v64[8];
  uint64_t v55 = v64[10];
  uint64_t v54 = v64[11];
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v59 = v20;
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  uint64_t v58 = v21;
  swift_release();
  uint64_t v52 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(v20) = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 56))(v16);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  uint64_t v23 = v53;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v53 + 16);
  v24(v15, v3, v4);
  if (v20)
  {
    uint64_t v25 = *(void (**)(char *, uint64_t))(v23 + 8);
    v25(v15, v4);
    uint64_t v26 = v62;
    v24(v62, v3, v4);
    uint64_t v27 = v26;
LABEL_5:
    v25(v27, v4);
    uint64_t v32 = v60;
    v24(v60, v3, v4);
    goto LABEL_6;
  }
  uint64_t v28 = v49;
  swift_getAtKeyPath();
  uint64_t v29 = v51;
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  char v31 = (*(uint64_t (**)(uint64_t))(*(void *)(v30 + 16) + 56))(v29);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v28, v29);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v23 + 8);
  v25(v15, v4);
  v24(v62, v3, v4);
  if (v31)
  {
    uint64_t v27 = v62;
    goto LABEL_5;
  }
  uint64_t v35 = v46;
  uint64_t v36 = v62;
  swift_getAtKeyPath();
  uint64_t v37 = v48;
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  LODWORD(v53) = (*(uint64_t (**)(uint64_t))(*(void *)(v38 + 16) + 56))(v37);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v35, v37);
  v25(v36, v4);
  uint64_t v32 = v60;
  v24(v60, v3, v4);
  if ((v53 & 1) == 0)
  {
    uint64_t v39 = v43;
    swift_getAtKeyPath();
    uint64_t v40 = AssociatedTypeWitness;
    uint64_t v41 = swift_getAssociatedConformanceWitness();
    uint64_t v42 = v32;
    char v33 = (*(uint64_t (**)(uint64_t))(*(void *)(v41 + 16) + 56))(v40);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v39, v40);
    v25(v42, v4);
    return v33 & 1;
  }
LABEL_6:
  v25(v32, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v33 = 1;
  return v33 & 1;
}

uint64_t CRStruct_4.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, void))(*(void *)(a3 + 8) + 80))(&v21, a2, *(void *)(a3 + 8));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64);
  uint64_t v7 = swift_checkMetadataState();
  v6(a1, v7, v5);
  v4(&v21, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 64);
  uint64_t v11 = swift_checkMetadataState();
  v10(a1, v11, v9);
  v8(&v21, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 64);
  uint64_t v14 = swift_checkMetadataState();
  v13(a1, v14, v12);
  v20(&v21, 0);
  swift_release();
  swift_retain();
  uint64_t v15 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 64);
  uint64_t v18 = swift_checkMetadataState();
  v17(a1, v18, v16);
  v15(&v21, 0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t CRStruct_4.minEncodingVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v29 = (char *)&v28 - v6;
  uint64_t v34 = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(v34 - 8);
  MEMORY[0x1F4188790](v34);
  uint64_t v32 = (char *)&v28 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v35 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v10 = (char *)&v28 - v9;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v28 - v13;
  (*(void (**)(char *__return_ptr, uint64_t, uint64_t))(v5 + 80))((char *)v46 + 1, a1, v5);
  uint64_t v40 = *(void *)((char *)&v46[4] + 1);
  uint64_t v41 = *(void *)((char *)&v46[1] + 1);
  uint64_t v44 = *(void *)((char *)&v46[5] + 1);
  uint64_t v45 = *(void *)((char *)&v46[2] + 1);
  uint64_t v43 = *(void *)((char *)&v46[8] + 1);
  uint64_t v38 = *(void *)((char *)&v46[10] + 1);
  uint64_t v39 = *(void *)((char *)&v46[7] + 1);
  uint64_t v37 = *(void *)((char *)&v46[11] + 1);
  uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 24);
  uint64_t v36 = v3;
  uint64_t v16 = v15(a1);
  sub_1C447829C(v16, (unsigned char *)v46 + 1);
  swift_bridgeObjectRelease();
  unsigned int v17 = BYTE1(v46[0]);
  if (BYTE1(v46[0]) > 1u) {
    goto LABEL_14;
  }
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 16)
                                                                    + 8)
                                                        + 32))(v46, v11);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (LOBYTE(v46[0]) > v17) {
    unsigned int v17 = LOBYTE(v46[0]);
  }
  BYTE1(v46[0]) = v17;
  if (v17 > 1) {
    goto LABEL_14;
  }
  swift_getAtKeyPath();
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(v19 + 16) + 8) + 32))(v46, v8);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v8);
  if (LOBYTE(v46[0]) > v17) {
    unsigned int v17 = LOBYTE(v46[0]);
  }
  BYTE1(v46[0]) = v17;
  if (v17 > 1) {
    goto LABEL_14;
  }
  uint64_t v20 = v32;
  swift_getAtKeyPath();
  uint64_t v21 = v34;
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(v22 + 16) + 8) + 32))(v46, v21);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v20, v21);
  if (LOBYTE(v46[0]) > v17) {
    unsigned int v17 = LOBYTE(v46[0]);
  }
  BYTE1(v46[0]) = v17;
  if (v17 > 1)
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v23 = v29;
    swift_getAtKeyPath();
    uint64_t v24 = AssociatedTypeWitness;
    uint64_t v25 = swift_getAssociatedConformanceWitness();
    (*(void (**)(void *__return_ptr, uint64_t))(*(void *)(*(void *)(v25 + 16) + 8) + 32))(v46, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v24);
    unsigned int v26 = LOBYTE(v46[0]);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v26 > v17) {
      LOBYTE(v17) = v26;
    }
  }
  *uint64_t v42 = v17;
  return result;
}

uint64_t CRStruct_4<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  void (*v18)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  int64_t v25;
  char *v26;
  int64_t v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t i;
  unint64_t v48;
  int64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t AssociatedTypeWitness;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  uint64_t v56 = a7;
  uint64_t v62 = a6;
  uint64_t v68 = a5;
  uint64_t v74 = a4;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v57 = (char *)&v54 - v10;
  uint64_t v64 = swift_getAssociatedTypeWitness();
  int v60 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (char *)&v54 - v11;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v69 = (char *)&v54 - v12;
  uint64_t v72 = swift_getAssociatedTypeWitness();
  uint64_t v73 = *(void *)(v72 - 8);
  MEMORY[0x1F4188790](v72);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF70);
  uint64_t v70 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  unsigned int v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v9 + 80);
  uint64_t v54 = a2;
  v18(&v83, a2, v9);
  uint64_t v19 = v84;
  uint64_t v71 = v83;
  uint64_t v20 = v85;
  uint64_t v65 = v86;
  uint64_t v79 = v88;
  uint64_t v80 = v87;
  uint64_t v61 = v89;
  uint64_t v81 = v90;
  uint64_t v77 = v91;
  uint64_t v55 = v92;
  uint64_t v78 = v93;
  uint64_t v76 = v94;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C42469F0();
  uint64_t v21 = v19;
  uint64_t v22 = v72;
  sub_1C44986A8();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v83 = v71;
  uint64_t v84 = v19;
  uint64_t v23 = v14;
  uint64_t v24 = v15;
  uint64_t v25 = v75;
  unsigned int v26 = v17;
  sub_1C4498048();
  uint64_t v27 = v25;
  if (v25)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v23, v22);
    return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v26, v24);
  }
  uint64_t v74 = v9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v23, v22);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v29 = v80;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v83 = v65;
  uint64_t v84 = v29;
  uint64_t v75 = v24;
  uint64_t v30 = v67;
  char v31 = v26;
  sub_1C4498048();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v69, v30);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v32 = v81;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = v63;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v83 = v61;
  uint64_t v84 = v32;
  uint64_t v34 = v33;
  uint64_t v35 = v64;
  sub_1C4498048();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v34, v35);
  swift_retain();
  uint64_t v36 = v57;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v37 = swift_bridgeObjectRetain();
  uint64_t v83 = v55;
  uint64_t v84 = v37;
  uint64_t v38 = AssociatedTypeWitness;
  sub_1C4498048();
  uint64_t v72 = v20;
  uint64_t v73 = v21;
  uint64_t v39 = v31;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v36, v38);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v74 + 8) + 24))(v54);
  uint64_t v40 = result;
  uint64_t v41 = result + 64;
  uint64_t v42 = 1 << *(unsigned char *)(result + 32);
  uint64_t v43 = -1;
  if (v42 < 64) {
    uint64_t v43 = ~(-1 << v42);
  }
  uint64_t v44 = v43 & *(void *)(result + 64);
  uint64_t v82 = (unint64_t)(v42 + 63) >> 6;
  if (!v44) {
    goto LABEL_7;
  }
LABEL_6:
  uint64_t v45 = __clz(__rbit64(v44));
  v44 &= v44 - 1;
  for (unint64_t i = v45 | (v27 << 6); ; unint64_t i = __clz(__rbit64(v48)) + (v27 << 6))
  {
    uint64_t v50 = (uint64_t *)(*(void *)(v40 + 48) + 16 * i);
    uint64_t v51 = *v50;
    uint64_t v52 = v50[1];
    uint64_t v95 = *(void *)(*(void *)(v40 + 56) + 8 * i);
    uint64_t v83 = v51;
    uint64_t v84 = v52;
    sub_1C4246A44();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C4498048();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v44) {
      goto LABEL_6;
    }
LABEL_7:
    if (__OFADD__(v27++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v27 >= v82) {
      goto LABEL_24;
    }
    uint64_t v48 = *(void *)(v41 + 8 * v27);
    if (!v48) {
      break;
    }
LABEL_17:
    uint64_t v44 = (v48 - 1) & v48;
  }
  uint64_t v49 = v27 + 1;
  if (v27 + 1 >= v82) {
    goto LABEL_24;
  }
  uint64_t v48 = *(void *)(v41 + 8 * v49);
  if (v48) {
    goto LABEL_16;
  }
  uint64_t v49 = v27 + 2;
  if (v27 + 2 >= v82) {
    goto LABEL_24;
  }
  uint64_t v48 = *(void *)(v41 + 8 * v49);
  if (v48) {
    goto LABEL_16;
  }
  uint64_t v49 = v27 + 3;
  if (v27 + 3 >= v82)
  {
LABEL_24:
    uint64_t v53 = v70;
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v39, v75);
  }
  uint64_t v48 = *(void *)(v41 + 8 * v49);
  if (v48)
  {
LABEL_16:
    uint64_t v27 = v49;
    goto LABEL_17;
  }
  while (1)
  {
    uint64_t v27 = v49 + 1;
    if (__OFADD__(v49, 1)) {
      break;
    }
    if (v27 >= v82) {
      goto LABEL_24;
    }
    uint64_t v48 = *(void *)(v41 + 8 * v27);
    ++v49;
    if (v48) {
      goto LABEL_17;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t CRStruct_5.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v26)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t AssociatedConformanceWitness;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void v50[4];
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t AssociatedTypeWitness;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void v78[15];

  uint64_t v71 = a1;
  uint64_t v77 = a4;
  uint64_t v7 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v63 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v64 = (char *)v50 - v10;
  uint64_t v61 = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(v61 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v61);
  uint64_t v59 = (char *)v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  int v60 = (char *)v50 - v13;
  uint64_t v55 = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v55);
  uint64_t v53 = (char *)v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v54 = (char *)v50 - v16;
  uint64_t v51 = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(v51 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v51);
  v50[0] = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  v50[3] = (char *)v50 - v19;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16);
  uint64_t v69 = v4;
  v25(a4, v4, a2);
  unsigned int v26 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v7 + 96);
  uint64_t v67 = a2;
  v26(v78, a2, v7);
  uint64_t v28 = v78[1];
  uint64_t v27 = v78[2];
  uint64_t v74 = v78[4];
  uint64_t v75 = v78[5];
  uint64_t v76 = v78[7];
  uint64_t v68 = v78[8];
  uint64_t v72 = v78[10];
  uint64_t v73 = v78[11];
  uint64_t v58 = v78[13];
  uint64_t v57 = v78[14];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v70 = v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v30 = v71;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(v71, v20);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v20);
  swift_setAtWritableKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  char v31 = v50[0];
  swift_getAtKeyPath();
  swift_release();
  uint64_t v32 = v51;
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 + 16) + 24))(v30, v32);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v31, v32);
  swift_setAtWritableKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v34 = v53;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v35 = v55;
  uint64_t v36 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 + 16) + 24))(v30, v35);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v35);
  swift_setAtWritableKeyPath();
  v50[1] = v28;
  swift_bridgeObjectRetain_n();
  void v50[2] = v27;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v37 = v59;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v38 = v70;
  uint64_t v39 = v67;
  uint64_t v40 = v61;
  uint64_t v41 = swift_getAssociatedConformanceWitness();
  uint64_t v42 = v71;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 + 16) + 24))(v71, v40);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v37, v40);
  swift_setAtWritableKeyPath();
  swift_release();
  swift_retain_n();
  uint64_t v43 = v63;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v44 = AssociatedTypeWitness;
  uint64_t v45 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 + 16) + 24))(v42, v44);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v43, v44);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v46 = *(void *)(v38 + 8);
  uint64_t v47 = (*(uint64_t (**)(uint64_t, uint64_t))(v46 + 24))(v39, v46);
  uint64_t v48 = sub_1C4341774(v47, v42);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v46 + 32))(v48, v39, v46);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_5.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v28)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t AssociatedConformanceWitness;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void v49[4];
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t AssociatedTypeWitness;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void v76[15];
  unint64_t v77;

  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v64 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v63 = (char *)v49 - v12;
  uint64_t v62 = swift_getAssociatedTypeWitness();
  uint64_t v61 = *(void *)(v62 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v62);
  int v60 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v59 = (char *)v49 - v15;
  uint64_t v57 = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(v57 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v57);
  uint64_t v55 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v54 = (char *)v49 - v18;
  uint64_t v52 = swift_getAssociatedTypeWitness();
  uint64_t v51 = *(void *)(v52 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v52);
  uint64_t v50 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  v49[3] = (char *)v49 - v21;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  unsigned int v26 = (char *)v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  if (a1) {
    unint64_t v27 = a1;
  }
  else {
    unint64_t v27 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  uint64_t v77 = v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v67 = a4;
  uint64_t v68 = v5;
  uint64_t v28 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 96);
  swift_bridgeObjectRetain();
  v28(v76, a2, v9);
  uint64_t v30 = v76[1];
  uint64_t v29 = v76[2];
  uint64_t v69 = v76[4];
  uint64_t v70 = v76[5];
  uint64_t v75 = v76[7];
  uint64_t v71 = v76[8];
  uint64_t v73 = v76[10];
  uint64_t v74 = v76[11];
  uint64_t v58 = v76[13];
  uint64_t v53 = v76[14];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v72 = v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(&v77, v22);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
  swift_setAtWritableKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v32 = v50;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v33 = v52;
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v34 + 16) + 24))(&v77, v33);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v32, v33);
  swift_setAtWritableKeyPath();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v35 = v55;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v36 = v57;
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v37 + 16) + 24))(&v77, v36);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v36);
  swift_setAtWritableKeyPath();
  v49[1] = v30;
  swift_bridgeObjectRetain_n();
  void v49[2] = v29;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v38 = v60;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v39 = v72;
  uint64_t v40 = v62;
  uint64_t v41 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v41 + 16) + 24))(&v77, v40);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v38, v40);
  swift_setAtWritableKeyPath();
  swift_release();
  swift_retain_n();
  uint64_t v42 = v64;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v43 = AssociatedTypeWitness;
  uint64_t v44 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v44 + 16) + 24))(&v77, v43);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v42, v43);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v45 = *(void *)(v39 + 8);
  uint64_t v46 = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 24))(a2, v45);
  uint64_t v47 = sub_1C4341774(v46, (uint64_t)&v77);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v45 + 32))(v47, a2, v45);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t static CRStruct_5.fieldKeys.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(*(void *)(a2 + 8) + 96))(v14);
  uint64_t v3 = v14[0];
  uint64_t v2 = v14[1];
  uint64_t v4 = v14[3];
  uint64_t v5 = v14[4];
  uint64_t v6 = v14[7];
  uint64_t v11 = v14[6];
  uint64_t v7 = v14[10];
  uint64_t v8 = v14[13];
  uint64_t v12 = v14[9];
  uint64_t v13 = v14[12];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0250);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C449BE00;
  swift_bridgeObjectRetain();
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 48) = v4;
  *(void *)(v9 + 56) = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 64) = v11;
  *(void *)(v9 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v9 + 80) = v12;
  *(void *)(v9 + 88) = v7;
  swift_bridgeObjectRetain();
  *(void *)(v9 + 96) = v13;
  *(void *)(v9 + 104) = v8;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t CRStruct_5.merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v52 = (char *)&v39 - v5;
  uint64_t v49 = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v48 = (char *)&v39 - v6;
  uint64_t v45 = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v44 = (char *)&v39 - v7;
  uint64_t v42 = swift_getAssociatedTypeWitness();
  uint64_t v43 = *(void *)(v42 - 8);
  MEMORY[0x1F4188790](v42);
  uint64_t v41 = (char *)&v39 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v39 - v11;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 96))(v64, a2, v4);
  uint64_t v13 = v64[2];
  uint64_t v56 = v64[1];
  uint64_t v60 = v64[5];
  uint64_t v61 = v64[7];
  uint64_t v62 = v64[8];
  uint64_t v63 = v64[4];
  uint64_t v58 = v64[10];
  uint64_t v59 = v64[11];
  uint64_t v51 = v64[13];
  uint64_t v47 = v64[14];
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v14 = v13;
  uint64_t v15 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v39 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v15(v64, 0);
  swift_bridgeObjectRetain_n();
  uint64_t v57 = v14;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v17 = v41;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v18 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v40 = a2;
  uint64_t v19 = v42;
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v20 + 8) + 8))(v17, v19);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v19);
  v18(v64, 0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v21 = v44;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v22 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v23 = v39;
  uint64_t v24 = v45;
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v25 + 8) + 8))(v21, v24);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v24);
  v22(v64, 0);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  unsigned int v26 = v48;
  swift_getAtKeyPath();
  swift_release();
  unint64_t v27 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v28 = v40;
  uint64_t v29 = v49;
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v30 + 8) + 8))(v26, v29);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v26, v29);
  v27(v64, 0);
  swift_release();
  swift_retain_n();
  char v31 = v52;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v32 = (void (*)(void *, void))swift_modifyAtWritableKeyPath();
  uint64_t v33 = AssociatedTypeWitness;
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v34 + 8) + 8))(v31, v33);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v31, v33);
  v32(v64, 0);
  swift_release();
  uint64_t v35 = *(void *)(v23 + 8);
  uint64_t v36 = (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 24))(v28, v35);
  uint64_t v37 = (void (*)(void *, void))(*(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 40))(v64, v28, v35);
  sub_1C4477B90(v36);
  swift_bridgeObjectRelease();
  v37(v64, 0);
  (*(void (**)(uint64_t, uint64_t))(v35 + 64))(v28, v35);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_5.observableDifference(from:with:)@<X0>(uint64_t a1@<X0>, void (*a2)(void, void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v41)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, uint64_t);
  char *v53;
  char *v54;
  void (*v55)(void, void);
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  BOOL v64;
  char *v65;
  BOOL v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  void (*v71)(char *, void *);
  BOOL v72;
  void (*v73)(char *, uint64_t);
  char *v74;
  void (*v75)(char *, uint64_t);
  uint64_t v76;
  char *v78;
  char *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  int *TupleTypeMetadata;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t AssociatedTypeWitness;
  char *v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  void *v133;
  void *v134;
  char *v135;
  void *v136;
  char *v137;
  void *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  void (*v142)(void, void);
  void v143[4];
  uint64_t v144;
  uint64_t v145;
  void *v146;
  uint64_t v147;
  void *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;

  uint64_t v141 = a1;
  uint64_t v142 = a2;
  uint64_t v126 = a5;
  uint64_t v6 = *(void *)(a4 + 8);
  uint64_t v133 = &associated type descriptor for CRStruct_Base_5.Type_1;
  swift_getAssociatedTypeWitness();
  uint64_t v134 = &associated conformance descriptor for CRStruct_Base_5.CRStruct_Base_5.Type_1: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v143[0] = sub_1C4497B38();
  uint64_t v135 = (char *)&associated type descriptor for CRStruct_Base_5.Type_2;
  swift_getAssociatedTypeWitness();
  uint64_t v136 = &associated conformance descriptor for CRStruct_Base_5.CRStruct_Base_5.Type_2: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v143[1] = sub_1C4497B38();
  uint64_t v137 = (char *)&associated type descriptor for CRStruct_Base_5.Type_3;
  swift_getAssociatedTypeWitness();
  uint64_t v138 = &associated conformance descriptor for CRStruct_Base_5.CRStruct_Base_5.Type_3: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v143[2] = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v143[3] = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  unint64_t v144 = sub_1C4497B38();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v88 = (char *)&v84 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v119 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v118 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v115 = (char *)&v84 - v10;
  uint64_t v116 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v87 = swift_getAssociatedTypeWitness();
  uint64_t v123 = sub_1C4497B38();
  uint64_t v122 = *(void *)(v123 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v123);
  uint64_t v121 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v113 = (char *)&v84 - v13;
  uint64_t v108 = swift_getAssociatedTypeWitness();
  uint64_t v110 = *(void *)(v108 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v108);
  uint64_t v109 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v106 = (char *)&v84 - v16;
  uint64_t v107 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v86 = swift_getAssociatedTypeWitness();
  unint64_t v140 = sub_1C4497B38();
  uint64_t v132 = *(void *)(v140 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v140);
  uint64_t v120 = (char *)&v84 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v139 = (char *)&v84 - v19;
  uint64_t v100 = swift_getAssociatedTypeWitness();
  uint64_t v103 = *(void *)(v100 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v100);
  uint64_t v101 = (char *)&v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v97 = (char *)&v84 - v22;
  uint64_t v99 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v85 = swift_getAssociatedTypeWitness();
  uint64_t v138 = (void *)sub_1C4497B38();
  uint64_t v131 = *(v138 - 1);
  uint64_t v23 = MEMORY[0x1F4188790](v138);
  uint64_t v114 = (char *)&v84 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v137 = (char *)&v84 - v25;
  uint64_t v93 = swift_getAssociatedTypeWitness();
  uint64_t v95 = *(void *)(v93 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v93);
  uint64_t v94 = (char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v91 = (char *)&v84 - v28;
  uint64_t v92 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v84 = swift_getAssociatedTypeWitness();
  uint64_t v136 = (void *)sub_1C4497B38();
  uint64_t v130 = *(v136 - 1);
  uint64_t v29 = MEMORY[0x1F4188790](v136);
  uint64_t v105 = (char *)&v84 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v135 = (char *)&v84 - v31;
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  uint64_t v36 = (char *)&v84 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v38 = (char *)&v84 - v37;
  uint64_t v39 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v104 = swift_getAssociatedTypeWitness();
  uint64_t v112 = sub_1C4497B38();
  uint64_t v111 = *(void *)(v112 - 8);
  MEMORY[0x1F4188790](v112);
  uint64_t v129 = (char *)&v84 - v40;
  uint64_t v41 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 96);
  uint64_t v125 = a3;
  uint64_t v124 = v6;
  v41(v143, a3, v6);
  uint64_t v42 = v145;
  uint64_t v127 = v144;
  uint64_t v133 = v146;
  uint64_t v128 = v147;
  uint64_t v134 = v148;
  uint64_t v96 = v149;
  uint64_t v102 = v150;
  uint64_t v98 = v151;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  (*(void (**)(char *, void (*)(void, void), uint64_t, uint64_t))(v39 + 40))(v36, v142, v32, v39);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v33 + 8);
  v43(v36, v32);
  v43(v38, v32);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v91;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v94;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v46 = v93;
  (*(void (**)(char *, void (*)(void, void), uint64_t))(v92 + 40))(v45, v142, v93);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v95 + 8);
  v47(v45, v46);
  v47(v44, v46);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v48 = v97;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = v101;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v50 = v48;
  uint64_t v51 = v100;
  (*(void (**)(char *, void (*)(void, void), uint64_t))(v99 + 40))(v49, v142, v100);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v103 + 8);
  v52(v49, v51);
  v52(v50, v51);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v53 = v106;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v90 = v42;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v54 = v109;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v55 = v142;
  uint64_t v56 = v108;
  (*(void (**)(char *, void (*)(void, void), uint64_t))(v107 + 40))(v54, v142, v108);
  uint64_t v57 = *(void (**)(char *, uint64_t))(v110 + 8);
  v57(v54, v56);
  v57(v53, v56);
  swift_retain();
  uint64_t v58 = v115;
  swift_getAtKeyPath();
  swift_release();
  swift_retain();
  uint64_t v59 = v118;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v60 = v113;
  uint64_t v61 = AssociatedTypeWitness;
  (*(void (**)(char *, void (*)(void, void), uint64_t))(v116 + 40))(v59, v55, AssociatedTypeWitness);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v62 = *(void (**)(char *, uint64_t))(v119 + 8);
  v62(v59, v61);
  uint64_t v63 = v105;
  v62(v58, v61);
  uint64_t v64 = 1;
  LODWORD(v62) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v104 - 8) + 48))(v129, 1);
  (*(void (**)(char *, char *, void *))(v130 + 16))(v63, v135, v136);
  if (v62 == 1) {
    uint64_t v64 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v84 - 8) + 48))(v63, 1) != 1;
  }
  uint64_t v142 = *(void (**)(void, void))(v130 + 8);
  v142(v63, v136);
  uint64_t v65 = v114;
  (*(void (**)(char *, char *, void *))(v131 + 16))(v114, v137, v138);
  uint64_t v66 = v64 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v85 - 8) + 48))(v65, 1) != 1;
  uint64_t v67 = v123;
  uint64_t v68 = v122;
  uint64_t v69 = v60;
  uint64_t v70 = v120;
  uint64_t v71 = *(void (**)(char *, void *))(v131 + 8);
  v71(v65, v138);
  (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v70, v139, v140);
  uint64_t v72 = v66 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v86 - 8) + 48))(v70, 1) != 1;
  uint64_t v73 = *(void (**)(char *, uint64_t))(v132 + 8);
  v73(v70, v140);
  uint64_t v74 = v121;
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v121, v69, v67);
  if (v72 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v87 - 8) + 48))(v74, 1) != 1)
  {
    (*(void (**)(char *, uint64_t))(v68 + 8))(v74, v67);
    uint64_t v78 = &v88[TupleTypeMetadata[12]];
    uint64_t v79 = &v88[TupleTypeMetadata[16]];
    uint64_t v80 = &v88[TupleTypeMetadata[20]];
    uint64_t v81 = &v88[TupleTypeMetadata[24]];
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(v88, v129, v112);
    (*(void (**)(char *, char *, void *))(v130 + 32))(v78, v135, v136);
    (*(void (**)(char *, char *, void *))(v131 + 32))(v79, v137, v138);
    (*(void (**)(char *, char *, uint64_t))(v132 + 32))(v80, v139, v140);
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v81, v69, v67);
    uint64_t v82 = swift_getAssociatedTypeWitness();
    uint64_t v83 = v126;
    swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v82 - 8) + 56))(v83, 0, 1, v82);
  }
  else
  {
    uint64_t v75 = *(void (**)(char *, uint64_t))(v68 + 8);
    v75(v74, v67);
    v75(v69, v67);
    v73(v139, v140);
    v71(v137, v138);
    v142(v135, v136);
    (*(void (**)(char *, uint64_t))(v111 + 8))(v129, v112);
    uint64_t v76 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v126, 1, 1, v76);
  }
}

uint64_t CRStruct_5.hasDelta(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v85 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v61 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v60 = (char *)&v59 - v7;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(v67 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v67);
  uint64_t v65 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v64 = (char *)&v59 - v10;
  uint64_t v71 = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(v71 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v71);
  uint64_t v69 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v68 = (char *)&v59 - v13;
  uint64_t v75 = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v75);
  uint64_t v73 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v72 = (char *)&v59 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v59 - v22;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 96))(v86, a2, v4);
  uint64_t v24 = v86[2];
  uint64_t v81 = v86[5];
  uint64_t v83 = v86[4];
  uint64_t v84 = v86[7];
  uint64_t v80 = v86[8];
  uint64_t v82 = v86[10];
  uint64_t v79 = v86[11];
  uint64_t v25 = v86[14];
  uint64_t v78 = v86[13];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v76 = v4;
  uint64_t v77 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v21, v17, AssociatedConformanceWitness);
  uint64_t v27 = *(void (**)(char *, uint64_t))(v18 + 8);
  v27(v21, v17);
  v27(v23, v17);
  if (a2) {
    goto LABEL_5;
  }
  uint64_t v59 = v25;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = v72;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v29 = v73;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v30 = v75;
  uint64_t v31 = swift_getAssociatedConformanceWitness();
  char v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 72))(v29, v30, v31);
  uint64_t v33 = *(void (**)(char *, uint64_t))(v74 + 8);
  v33(v29, v30);
  v33(v28, v30);
  if (v32) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v34 = v68;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = v69;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v36 = v71;
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  char v38 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 72))(v35, v36, v37);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v70 + 8);
  v39(v35, v36);
  v39(v34, v36);
  if (v38) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v42 = v64;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v75 = v24;
  uint64_t v43 = v65;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v44 = v67;
  uint64_t v45 = swift_getAssociatedConformanceWitness();
  char v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 72))(v43, v44, v45);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v66 + 8);
  v47(v43, v44);
  v47(v42, v44);
  if (v46) {
    goto LABEL_5;
  }
  swift_retain();
  uint64_t v48 = v60;
  swift_getAtKeyPath();
  swift_release();
  swift_retain();
  uint64_t v49 = v61;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v50 = AssociatedTypeWitness;
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  char v52 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 72))(v49, v50, v51);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v62 + 8);
  v53(v49, v50);
  v53(v48, v50);
  if (v52)
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    char v40 = 1;
  }
  else
  {
    uint64_t v54 = *(void *)(v76 + 8);
    uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t))(v54 + 24);
    uint64_t v56 = v77;
    uint64_t v57 = v55(v77, v54);
    uint64_t v58 = v55(v56, v54);
    char v40 = sub_1C4478090(v58, v57);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return v40 & 1;
}

uint64_t CRStruct_5.actionUndoingDifference(from:)@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v135 = a1;
  uint64_t v119 = a4;
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v114 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v113 = (char *)&v82 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v110 = (char *)&v82 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v85 = swift_getAssociatedTypeWitness();
  uint64_t v118 = sub_1C4497B38();
  uint64_t v117 = *(void *)(v118 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v118);
  uint64_t v116 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v132 = (char *)&v82 - v11;
  uint64_t v104 = swift_getAssociatedTypeWitness();
  uint64_t v106 = *(void *)(v104 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v104);
  uint64_t v105 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v101 = (char *)&v82 - v14;
  uint64_t v103 = swift_getAssociatedConformanceWitness();
  uint64_t v84 = swift_getAssociatedTypeWitness();
  uint64_t v133 = sub_1C4497B38();
  uint64_t v126 = *(void *)(v133 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v133);
  uint64_t v115 = (char *)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v131 = (char *)&v82 - v17;
  uint64_t v95 = swift_getAssociatedTypeWitness();
  uint64_t v98 = *(void *)(v95 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v95);
  uint64_t v96 = (char *)&v82 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v92 = (char *)&v82 - v20;
  uint64_t v94 = swift_getAssociatedConformanceWitness();
  uint64_t v83 = swift_getAssociatedTypeWitness();
  uint64_t v130 = sub_1C4497B38();
  uint64_t v125 = *(void *)(v130 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v130);
  uint64_t v108 = (char *)&v82 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v129 = (char *)&v82 - v23;
  uint64_t v88 = swift_getAssociatedTypeWitness();
  uint64_t v90 = *(void *)(v88 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v88);
  uint64_t v89 = (char *)&v82 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v86 = (char *)&v82 - v26;
  uint64_t v87 = swift_getAssociatedConformanceWitness();
  uint64_t v82 = swift_getAssociatedTypeWitness();
  uint64_t v102 = sub_1C4497B38();
  uint64_t v124 = *(void *)(v102 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v102);
  uint64_t v100 = (char *)&v82 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v128 = (char *)&v82 - v29;
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  uint64_t v34 = (char *)&v82 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v36 = (char *)&v82 - v35;
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  uint64_t v99 = swift_getAssociatedTypeWitness();
  uint64_t v109 = sub_1C4497B38();
  uint64_t v107 = *(void *)(v109 - 8);
  MEMORY[0x1F4188790](v109);
  uint64_t v123 = (char *)&v82 - v38;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v5 + 96))(&v136, a2, v5);
  uint64_t v120 = v140;
  uint64_t v127 = v141;
  uint64_t v121 = v142;
  uint64_t v122 = v143;
  uint64_t v91 = v144;
  uint64_t v97 = v145;
  uint64_t v93 = v146;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 56))(v34, v30, v37);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v31 + 8);
  v39(v34, v30);
  v39(v36, v30);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v40 = v86;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = v89;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v42 = v88;
  (*(void (**)(char *, uint64_t))(v87 + 56))(v41, v88);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v90 + 8);
  v43(v41, v42);
  v43(v40, v42);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v92;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v96;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v46 = v95;
  (*(void (**)(char *, uint64_t))(v94 + 56))(v45, v95);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v98 + 8);
  v47(v45, v46);
  v47(v44, v46);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v48 = v101;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = v105;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v50 = v104;
  (*(void (**)(char *, uint64_t))(v103 + 56))(v49, v104);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v106 + 8);
  v51(v49, v50);
  v51(v48, v50);
  swift_retain();
  char v52 = v110;
  swift_getAtKeyPath();
  swift_release();
  swift_retain();
  uint64_t v53 = v113;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v54 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t))(AssociatedConformanceWitness + 56))(v53, AssociatedTypeWitness);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v114 + 8);
  uint64_t v56 = v100;
  v55(v53, v54);
  v55(v52, v54);
  BOOL v57 = 1;
  LODWORD(v55) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v99 - 8) + 48))(v123, 1);
  uint64_t v58 = v102;
  (*(void (**)(char *, char *))(v124 + 16))(v56, v128);
  if (v55 == 1) {
    BOOL v57 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v82 - 8) + 48))(v56, 1) != 1;
  }
  uint64_t v135 = *(void (**)(char *, uint64_t))(v124 + 8);
  v135(v56, v58);
  uint64_t v59 = v108;
  (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v108, v129, v130);
  BOOL v60 = v57 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v83 - 8) + 48))(v59, 1) != 1;
  uint64_t v61 = v118;
  uint64_t v62 = v117;
  uint64_t v63 = v115;
  uint64_t v64 = *(void (**)(char *, uint64_t))(v125 + 8);
  v64(v59, v130);
  (*(void (**)(char *, char *, uint64_t))(v126 + 16))(v63, v131, v133);
  BOOL v65 = v60 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v84 - 8) + 48))(v63, 1) != 1;
  uint64_t v66 = *(void (**)(char *, uint64_t))(v126 + 8);
  v66(v63, v133);
  uint64_t v67 = v116;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v116, v132, v61);
  if (v65 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v85 - 8) + 48))(v67, 1) != 1)
  {
    uint64_t v74 = v61;
    (*(void (**)(char *, uint64_t))(v62 + 8))(v67, v61);
    uint64_t v75 = v109;
    uint64_t v136 = v109;
    uint64_t v137 = v58;
    uint64_t v76 = v130;
    uint64_t v77 = v133;
    uint64_t v138 = v130;
    uint64_t v139 = v133;
    uint64_t v140 = v61;
    TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
    uint64_t v79 = v119;
    uint64_t v80 = v119 + TupleTypeMetadata[12];
    uint64_t v81 = v119 + TupleTypeMetadata[16];
    uint64_t v134 = v119 + TupleTypeMetadata[20];
    uint64_t v135 = (void (*)(char *, uint64_t))(v119 + TupleTypeMetadata[24]);
    (*(void (**)(uint64_t, char *, uint64_t))(v107 + 32))(v119, v123, v75);
    (*(void (**)(uint64_t, char *, uint64_t))(v124 + 32))(v80, v128, v58);
    (*(void (**)(uint64_t, char *, uint64_t))(v125 + 32))(v81, v129, v76);
    (*(void (**)(uint64_t, char *, uint64_t))(v126 + 32))(v134, v131, v77);
    (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v62 + 32))(v135, v132, v74);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)TupleTypeMetadata - 1) + 56))(v79, 0, 1, TupleTypeMetadata);
  }
  else
  {
    uint64_t v68 = *(void (**)(char *, uint64_t))(v62 + 8);
    v68(v67, v61);
    v68(v132, v61);
    uint64_t v69 = v133;
    v66(v131, v133);
    uint64_t v70 = v130;
    v64(v129, v130);
    v135(v128, v58);
    uint64_t v71 = v109;
    (*(void (**)(char *, uint64_t))(v107 + 8))(v123, v109);
    uint64_t v136 = v71;
    uint64_t v137 = v58;
    uint64_t v138 = v70;
    uint64_t v139 = v69;
    uint64_t v140 = v61;
    uint64_t v72 = swift_getTupleTypeMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v72 - 8) + 56))(v119, 1, 1, v72);
  }
}

uint64_t CRStruct_5.apply(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v172 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v144 = AssociatedTypeWitness;
  uint64_t v127 = swift_getAssociatedTypeWitness();
  uint64_t v162 = sub_1C4497B38();
  uint64_t v158 = *(void *)(v162 - 8);
  MEMORY[0x1F4188790](v162);
  uint64_t v142 = (char *)&v122 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v140 = swift_getAssociatedConformanceWitness();
  uint64_t v141 = v7;
  uint64_t v126 = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C4497B38();
  uint64_t v151 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v139 = (char *)&v122 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v135 = swift_getAssociatedConformanceWitness();
  uint64_t v136 = (void (*)(char *, uint64_t))v10;
  uint64_t v125 = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1C4497B38();
  uint64_t v161 = v11;
  uint64_t v160 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v134 = (char *)&v122 - v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v131 = swift_getAssociatedConformanceWitness();
  uint64_t v132 = (void (*)(char *, uint64_t))v13;
  uint64_t v124 = swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_1C4497B38();
  uint64_t v157 = v14;
  uint64_t v159 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v145 = (char *)&v122 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v128 = swift_getAssociatedConformanceWitness();
  uint64_t v129 = v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v173 = sub_1C4497B38();
  uint64_t v174 = v14;
  uint64_t v175 = v11;
  uint64_t v176 = v8;
  uint64_t v152 = v8;
  uint64_t v18 = v162;
  uint64_t v177 = v162;
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v20 = sub_1C4497B38();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v138 = (char *)&v122 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v133 = (char *)&v122 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v130 = (char *)&v122 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v122 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v122 - v31;
  uint64_t v123 = (char *)v17;
  uint64_t v153 = sub_1C4497B38();
  uint64_t v167 = *(void *)(v153 - 8);
  MEMORY[0x1F4188790](v153);
  uint64_t v34 = (char *)&v122 - v33;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 96))(&v173, a2, v4);
  uint64_t v35 = v174;
  uint64_t v36 = v175;
  uint64_t v168 = v178;
  uint64_t v169 = v177;
  uint64_t v156 = v179;
  uint64_t v155 = v180;
  uint64_t v149 = v181;
  uint64_t v154 = v182;
  uint64_t v137 = v183;
  uint64_t v148 = v184;
  swift_bridgeObjectRetain();
  uint64_t v170 = v36;
  uint64_t v37 = v20;
  uint64_t v38 = v161;
  swift_retain();
  uint64_t v171 = v35;
  swift_bridgeObjectRelease();
  uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v166 = v21 + 16;
  uint64_t v165 = v39;
  v39(v32, v172, v37);
  uint64_t v40 = *((void *)TupleTypeMetadata - 1);
  uint64_t v164 = *(uint64_t (**)(char *, uint64_t, int *))(v40 + 48);
  uint64_t v163 = v40 + 48;
  int v41 = v164(v32, 1, TupleTypeMetadata);
  uint64_t v42 = v157;
  uint64_t v147 = v21;
  uint64_t v150 = v37;
  if (v41 == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v32, v37);
    (*(void (**)(char *, uint64_t, uint64_t))(*((void *)v123 - 1) + 56))(v34, 1, 1);
    uint64_t v43 = v37;
  }
  else
  {
    uint64_t v123 = &v32[TupleTypeMetadata[12]];
    uint64_t v44 = &v32[TupleTypeMetadata[16]];
    uint64_t v45 = &v32[TupleTypeMetadata[20]];
    uint64_t v46 = &v32[TupleTypeMetadata[24]];
    (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v34, v32, v153);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v46, v18);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v45, v152);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v44, v38);
    uint64_t v47 = v42;
    uint64_t v43 = v150;
    (*(void (**)(char *, uint64_t))(v159 + 8))(v123, v47);
  }
  uint64_t v48 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  uint64_t v49 = v128;
  uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v128 + 64);
  uint64_t v51 = swift_checkMetadataState();
  v50(v34, v51, v49);
  uint64_t v53 = v167 + 8;
  char v52 = *(void (**)(char *, uint64_t))(v167 + 8);
  uint64_t v54 = v153;
  v52(v34, v153);
  v48(&v173, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  v165(v30, v172, v43);
  int v55 = v164(v30, 1, TupleTypeMetadata);
  uint64_t v167 = v53;
  uint64_t v146 = TupleTypeMetadata;
  if (v55 == 1)
  {
    (*(void (**)(char *, uint64_t))(v147 + 8))(v30, v43);
    uint64_t v56 = v145;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v124 - 8) + 56))(v145, 1, 1);
    uint64_t v57 = v157;
    uint64_t v58 = v159;
  }
  else
  {
    uint64_t v59 = &v30[TupleTypeMetadata[12]];
    BOOL v60 = &v30[TupleTypeMetadata[16]];
    uint64_t v61 = &v30[TupleTypeMetadata[20]];
    uint64_t v62 = &v30[TupleTypeMetadata[24]];
    uint64_t v58 = v159;
    uint64_t v56 = v145;
    uint64_t v57 = v157;
    (*(void (**)(char *, char *, uint64_t))(v159 + 32))(v145, v59, v157);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v62, v162);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v61, v152);
    (*(void (**)(char *, uint64_t))(v160 + 8))(v60, v161);
    v52(v30, v54);
  }
  uint64_t v145 = (char *)v52;
  uint64_t v63 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  uint64_t v64 = v131;
  BOOL v65 = *(void (**)(char *, uint64_t, uint64_t))(v131 + 64);
  uint64_t v66 = swift_checkMetadataState();
  v65(v56, v66, v64);
  uint64_t v67 = v56;
  uint64_t v68 = *(void (**)(char *, uint64_t))(v58 + 8);
  v68(v67, v57);
  v63(&v173, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v69 = v130;
  uint64_t v70 = v150;
  v165(v130, v172, v150);
  uint64_t v71 = v146;
  int v72 = v164(v69, 1, v146);
  uint64_t v159 = v58 + 8;
  uint64_t v132 = v68;
  if (v72 == 1)
  {
    (*(void (**)(char *, uint64_t))(v147 + 8))(v69, v70);
    uint64_t v73 = v134;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v125 - 8) + 56))(v134, 1, 1);
    uint64_t v74 = v70;
    uint64_t v75 = v160;
  }
  else
  {
    uint64_t v76 = v71;
    uint64_t v77 = &v69[v71[12]];
    uint64_t v78 = v70;
    uint64_t v79 = &v69[v76[20]];
    uint64_t v80 = &v69[v76[24]];
    uint64_t v75 = v160;
    uint64_t v73 = v134;
    (*(void (**)(char *, char *, uint64_t))(v160 + 32))(v134, &v69[v76[16]], v161);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v80, v162);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v79, v152);
    v68(v77, v57);
    uint64_t v74 = v78;
    ((void (*)(char *, uint64_t))v145)(v69, v153);
  }
  uint64_t v81 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  uint64_t v82 = v135;
  uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t))(v135 + 64);
  uint64_t v84 = swift_checkMetadataState();
  v83(v73, v84, v82);
  uint64_t v85 = v73;
  uint64_t v86 = v161;
  uint64_t v136 = *(void (**)(char *, uint64_t))(v75 + 8);
  v136(v85, v161);
  v81(&v173, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v87 = v133;
  v165(v133, v172, v74);
  uint64_t v88 = v146;
  int v89 = v164(v87, 1, v146);
  uint64_t v90 = v88;
  uint64_t v160 = v75 + 8;
  if (v89 == 1)
  {
    (*(void (**)(char *, uint64_t))(v147 + 8))(v87, v74);
    uint64_t v91 = v139;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v126 - 8) + 56))(v139, 1, 1);
    uint64_t v92 = v152;
    uint64_t v93 = v151;
    uint64_t v94 = v88;
  }
  else
  {
    uint64_t v95 = &v87[v88[12]];
    uint64_t v96 = &v87[v90[16]];
    uint64_t v97 = &v87[v90[20]];
    uint64_t v94 = v90;
    uint64_t v98 = &v87[v90[24]];
    uint64_t v99 = v86;
    uint64_t v93 = v151;
    uint64_t v91 = v139;
    uint64_t v92 = v152;
    (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v139, v97, v152);
    (*(void (**)(char *, uint64_t))(v158 + 8))(v98, v162);
    v136(v96, v99);
    v132(v95, v157);
    ((void (*)(char *, uint64_t))v145)(v87, v153);
  }
  uint64_t v100 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  uint64_t v101 = v140;
  uint64_t v102 = *(void (**)(char *, uint64_t, uint64_t))(v140 + 64);
  uint64_t v103 = swift_checkMetadataState();
  v102(v91, v103, v101);
  uint64_t v104 = *(void (**)(char *, uint64_t))(v93 + 8);
  v104(v91, v92);
  v100(&v173, 0);
  swift_release();
  swift_retain();
  uint64_t v105 = v138;
  uint64_t v106 = v150;
  v165(v138, v172, v150);
  if (v164(v105, 1, v94) == 1)
  {
    (*(void (**)(char *, uint64_t))(v147 + 8))(v105, v106);
    uint64_t v107 = v142;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v127 - 8) + 56))(v142, 1, 1);
    uint64_t v108 = v162;
    uint64_t v109 = v158;
  }
  else
  {
    uint64_t v110 = v92;
    uint64_t v111 = v105;
    uint64_t v112 = &v105[v94[12]];
    uint64_t v113 = &v111[v94[16]];
    uint64_t v114 = &v111[v94[20]];
    uint64_t v115 = &v111[v94[24]];
    uint64_t v109 = v158;
    uint64_t v116 = v142;
    uint64_t v108 = v162;
    (*(void (**)(char *, char *, uint64_t))(v158 + 32))(v142, v115, v162);
    v104(v114, v110);
    uint64_t v107 = v116;
    v136(v113, v161);
    v132(v112, v157);
    ((void (*)(char *, uint64_t))v145)(v111, v153);
  }
  uint64_t v117 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  uint64_t v118 = AssociatedConformanceWitness;
  uint64_t v119 = *(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v120 = swift_checkMetadataState();
  v119(v107, v120, v118);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v107, v108);
  v117(&v173, 0);
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t CRStruct_5.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v52 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v46 = (char *)&v33 - v5;
  uint64_t v44 = swift_getAssociatedTypeWitness();
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v42 = (char *)&v33 - v6;
  uint64_t v39 = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(v39 - 8);
  MEMORY[0x1F4188790](v39);
  uint64_t v38 = (char *)&v33 - v7;
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  uint64_t v35 = (char *)&v33 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v33 - v11;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 96))(v57, a2, v4);
  uint64_t v50 = v57[4];
  uint64_t v55 = v57[5];
  uint64_t v56 = v57[7];
  uint64_t v51 = v57[8];
  uint64_t v53 = v57[10];
  uint64_t v54 = v57[11];
  uint64_t v43 = v57[13];
  uint64_t v41 = v57[14];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  uint64_t v34 = v4;
  uint64_t v49 = a2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = v52;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 48))(v52, v9);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v15 = v35;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v16 = v36;
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v18 = v14;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 + 16) + 48))(v14, v16);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v15, v16);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = v38;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v20 = v34;
  uint64_t v21 = v39;
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 + 16) + 48))(v18, v21);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v21);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = v42;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v24 = v49;
  uint64_t v25 = v44;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  uint64_t v27 = v52;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 + 16) + 48))(v52, v25);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v25);
  swift_retain();
  uint64_t v28 = v46;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v29 = AssociatedTypeWitness;
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 + 16) + 48))(v27, v29);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v28, v29);
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(*(void *)(v20 + 8) + 24))(v24);
  sub_1C3F7E98C(v27, v31);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

Swift::Bool __swiftcall CRStruct_5.needToFinalizeTimestamps()()
{
  uint64_t v3 = v2;
  uint64_t v4 = v0;
  uint64_t v5 = *(void *)(v1 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v54 = (char *)&v53 - v6;
  uint64_t v59 = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v57 = (char *)&v53 - v7;
  uint64_t v62 = swift_getAssociatedTypeWitness();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  BOOL v60 = (char *)&v53 - v8;
  uint64_t v65 = swift_getAssociatedTypeWitness();
  uint64_t v64 = *(void *)(v65 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v65);
  uint64_t v63 = (char *)&v53 - v10;
  uint64_t v77 = *(void *)(v4 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v75 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v76 = (char *)&v53 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v79 = (char *)&v53 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v53 - v21;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 96))(v81, v4, v5);
  uint64_t v23 = v81[1];
  uint64_t v24 = v81[2];
  uint64_t v72 = v81[4];
  uint64_t v80 = v81[5];
  uint64_t v71 = v81[7];
  uint64_t v78 = v81[8];
  uint64_t v70 = v81[10];
  uint64_t v69 = v81[11];
  uint64_t v68 = v81[13];
  uint64_t v67 = v81[14];
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v74 = v23;
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  uint64_t v73 = v24;
  uint64_t v25 = v77;
  swift_release();
  uint64_t v66 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(v23) = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 56))(v19);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
  v27(v18, v3, v4);
  if (v23)
  {
    uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
    v28(v18, v4);
    uint64_t v29 = v79;
    v27(v79, v3, v4);
    uint64_t v30 = v3;
    uint64_t v31 = v29;
LABEL_5:
    v28(v31, v4);
    uint64_t v38 = v76;
    v27(v76, v30, v4);
LABEL_6:
    uint64_t v39 = v75;
    v28(v38, v4);
    v27(v39, v30, v4);
    goto LABEL_7;
  }
  uint64_t v32 = v63;
  swift_getAtKeyPath();
  uint64_t v33 = v65;
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  char v35 = (*(uint64_t (**)(uint64_t))(*(void *)(v34 + 16) + 56))(v33);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v32, v33);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v36 = v25 + 8;
  uint64_t v28 = v37;
  v37(v18, v4);
  v27(v79, v3, v4);
  uint64_t v30 = v3;
  if (v35)
  {
    uint64_t v31 = v79;
    goto LABEL_5;
  }
  uint64_t v42 = v60;
  uint64_t v43 = v79;
  swift_getAtKeyPath();
  uint64_t v44 = v62;
  uint64_t v45 = swift_getAssociatedConformanceWitness();
  LODWORD(v77) = (*(uint64_t (**)(uint64_t))(*(void *)(v45 + 16) + 56))(v44);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v42, v44);
  v28(v43, v4);
  uint64_t v38 = v76;
  v27(v76, v30, v4);
  if (v77) {
    goto LABEL_6;
  }
  uint64_t v46 = v57;
  swift_getAtKeyPath();
  uint64_t v47 = v59;
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  LODWORD(v79) = (*(uint64_t (**)(uint64_t))(*(void *)(v48 + 16) + 56))(v47);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v46, v47);
  uint64_t v77 = v36;
  v28(v76, v4);
  uint64_t v39 = v75;
  v27(v75, v30, v4);
  if ((v79 & 1) == 0)
  {
    uint64_t v49 = v54;
    swift_getAtKeyPath();
    uint64_t v50 = v39;
    uint64_t v51 = AssociatedTypeWitness;
    uint64_t v52 = swift_getAssociatedConformanceWitness();
    char v40 = (*(uint64_t (**)(uint64_t))(*(void *)(v52 + 16) + 56))(v51);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v55 + 8))(v49, v51);
    v28(v50, v4);
    return v40 & 1;
  }
LABEL_7:
  v28(v39, v4);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v40 = 1;
  return v40 & 1;
}

uint64_t CRStruct_5.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t, void))(*(void *)(a3 + 8) + 96))(&v26, a2, *(void *)(a3 + 8));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 64);
  uint64_t v7 = swift_checkMetadataState();
  v6(a1, v7, v5);
  v4(&v26, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  uint64_t v8 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 64);
  uint64_t v11 = swift_checkMetadataState();
  v10(a1, v11, v9);
  v8(&v26, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v12 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 64);
  uint64_t v15 = swift_checkMetadataState();
  v14(a1, v15, v13);
  v12(&v26, 0);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 64);
  uint64_t v18 = swift_checkMetadataState();
  v17(a1, v18, v16);
  v24(&v26, 0);
  swift_release();
  swift_retain();
  uint64_t v19 = (void (*)(uint64_t *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 64);
  uint64_t v22 = swift_checkMetadataState();
  v21(a1, v22, v20);
  v19(&v26, 0);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_release_n();
}

uint64_t CRStruct_5.minEncodingVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v33 = (char *)&v32 - v6;
  uint64_t v38 = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(v38 - 8);
  MEMORY[0x1F4188790](v38);
  uint64_t v36 = (char *)&v32 - v7;
  uint64_t v41 = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v39 = (char *)&v32 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v42 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v32 - v10;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v32 - v14;
  (*(void (**)(unsigned char *__return_ptr, uint64_t, uint64_t))(v5 + 96))(&v55[1], a1, v5);
  uint64_t v49 = *(void *)&v55[9];
  uint64_t v54 = *(void *)&v55[17];
  uint64_t v48 = *(void *)&v55[33];
  uint64_t v53 = *(void *)&v55[41];
  uint64_t v47 = *(void *)&v55[57];
  uint64_t v52 = *(void *)&v55[65];
  uint64_t v46 = *(void *)&v55[81];
  uint64_t v51 = *(void *)&v55[89];
  uint64_t v45 = *(void *)&v55[105];
  uint64_t v44 = *(void *)&v55[113];
  uint64_t v16 = *(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 24);
  uint64_t v43 = v3;
  uint64_t v17 = v16(a1);
  sub_1C447829C(v17, &v55[1]);
  swift_bridgeObjectRelease();
  unsigned int v18 = v55[1];
  if (v55[1] > 1u) {
    goto LABEL_17;
  }
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unsigned char *__return_ptr, uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8)
                                                       + 32))(v55, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  if (v55[0] > v18) {
    unsigned int v18 = v55[0];
  }
  v55[1] = v18;
  if (v18 > 1) {
    goto LABEL_17;
  }
  swift_getAtKeyPath();
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unsigned char *__return_ptr, uint64_t))(*(void *)(*(void *)(v20 + 16) + 8) + 32))(v55, v9);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v11, v9);
  if (v55[0] > v18) {
    unsigned int v18 = v55[0];
  }
  v55[1] = v18;
  if (v18 > 1) {
    goto LABEL_17;
  }
  uint64_t v21 = v39;
  swift_getAtKeyPath();
  uint64_t v22 = v41;
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unsigned char *__return_ptr, uint64_t))(*(void *)(*(void *)(v23 + 16) + 8) + 32))(v55, v22);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v21, v22);
  if (v55[0] > v18) {
    unsigned int v18 = v55[0];
  }
  v55[1] = v18;
  if (v18 > 1) {
    goto LABEL_17;
  }
  uint64_t v24 = v36;
  swift_getAtKeyPath();
  uint64_t v25 = v38;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unsigned char *__return_ptr, uint64_t))(*(void *)(*(void *)(v26 + 16) + 8) + 32))(v55, v25);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v25);
  if (v55[0] > v18) {
    unsigned int v18 = v55[0];
  }
  v55[1] = v18;
  if (v18 > 1)
  {
LABEL_17:
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v27 = v33;
    swift_getAtKeyPath();
    uint64_t v28 = AssociatedTypeWitness;
    uint64_t v29 = swift_getAssociatedConformanceWitness();
    (*(void (**)(unsigned char *__return_ptr, uint64_t))(*(void *)(*(void *)(v29 + 16) + 8) + 32))(v55, v28);
    (*(void (**)(char *, uint64_t))(v34 + 8))(v27, v28);
    unsigned int v30 = v55[0];
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v30 > v18) {
      LOBYTE(v18) = v30;
    }
  }
  *uint64_t v50 = v18;
  return result;
}

uint64_t CRStruct_5<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void (*v20)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t result;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t i;
  unint64_t v54;
  int64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t AssociatedTypeWitness;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;

  uint64_t v63 = a8;
  uint64_t v69 = a7;
  uint64_t v75 = a6;
  uint64_t v81 = a5;
  uint64_t v85 = a4;
  uint64_t v10 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v64 = (char *)&v59 - v11;
  uint64_t v70 = swift_getAssociatedTypeWitness();
  uint64_t v67 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v71 = (char *)&v59 - v12;
  uint64_t v76 = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v73 = (char *)&v59 - v13;
  uint64_t v80 = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v78 = (char *)&v59 - v14;
  uint64_t v83 = swift_getAssociatedTypeWitness();
  uint64_t v84 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF70);
  int v89 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v10 + 96);
  uint64_t v61 = a2;
  v20(&v97, a2, v10);
  uint64_t v21 = v98;
  uint64_t v82 = v97;
  uint64_t v22 = v99;
  uint64_t v77 = v100;
  uint64_t v91 = v101;
  uint64_t v92 = v102;
  uint64_t v72 = v103;
  uint64_t v94 = v104;
  uint64_t v95 = v105;
  uint64_t v68 = v106;
  uint64_t v90 = v107;
  uint64_t v93 = v108;
  uint64_t v62 = v109;
  uint64_t v88 = v110;
  uint64_t v87 = v111;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C42469F0();
  uint64_t v23 = v83;
  uint64_t v24 = v17;
  sub_1C44986A8();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  uint64_t v97 = v82;
  uint64_t v98 = v21;
  uint64_t v25 = v21;
  uint64_t v26 = v86;
  sub_1C4498048();
  if (v26)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v16, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v19, v24);
  }
  uint64_t v82 = v10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v16, v23);
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v28 = v91;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v29 = v78;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v97 = v77;
  uint64_t v98 = v28;
  BOOL v60 = v24;
  unsigned int v30 = v80;
  uint64_t v86 = v19;
  sub_1C4498048();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v79 + 8))(v29, v30);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v31 = v94;
  swift_bridgeObjectRetain();
  uint64_t v85 = 0;
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v32 = v73;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v97 = v72;
  uint64_t v98 = v31;
  uint64_t v33 = v32;
  uint64_t v34 = v60;
  char v35 = v76;
  uint64_t v36 = v85;
  sub_1C4498048();
  uint64_t v37 = v89;
  if (v36)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v33, v35);
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v86, v34);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v74 + 8))(v33, v35);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v38 = v90;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v85 = 0;
  swift_getAtKeyPath();
  swift_release();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v97 = v68;
  uint64_t v98 = v38;
  uint64_t v39 = v60;
  uint64_t v40 = v70;
  uint64_t v41 = v85;
  sub_1C4498048();
  if (v41)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v67 + 8))(v71, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v86, v39);
  }
  uint64_t v84 = v25;
  uint64_t v85 = v22;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v71, v40);
  swift_retain();
  uint64_t v42 = v64;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v43 = v88;
  swift_bridgeObjectRetain();
  uint64_t v97 = v62;
  uint64_t v98 = v43;
  uint64_t v44 = AssociatedTypeWitness;
  sub_1C4498048();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v65 + 8))(v42, v44);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v82 + 8) + 24))(v61);
  uint64_t v45 = result;
  uint64_t v46 = 0;
  uint64_t v47 = result + 64;
  uint64_t v48 = 1 << *(unsigned char *)(result + 32);
  uint64_t v49 = -1;
  if (v48 < 64) {
    uint64_t v49 = ~(-1 << v48);
  }
  uint64_t v50 = v49 & *(void *)(result + 64);
  uint64_t v96 = (unint64_t)(v48 + 63) >> 6;
  if (!v50) {
    goto LABEL_11;
  }
LABEL_10:
  uint64_t v51 = __clz(__rbit64(v50));
  v50 &= v50 - 1;
  for (unint64_t i = v51 | (v46 << 6); ; unint64_t i = __clz(__rbit64(v54)) + (v46 << 6))
  {
    uint64_t v56 = (uint64_t *)(*(void *)(v45 + 48) + 16 * i);
    uint64_t v57 = *v56;
    uint64_t v58 = v56[1];
    uint64_t v112 = *(void *)(*(void *)(v45 + 56) + 8 * i);
    uint64_t v97 = v57;
    uint64_t v98 = v58;
    sub_1C4246A44();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C4498048();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v50) {
      goto LABEL_10;
    }
LABEL_11:
    if (__OFADD__(v46++, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v46 >= v96) {
      goto LABEL_28;
    }
    uint64_t v54 = *(void *)(v47 + 8 * v46);
    if (!v54) {
      break;
    }
LABEL_21:
    uint64_t v50 = (v54 - 1) & v54;
  }
  uint64_t v55 = v46 + 1;
  if (v46 + 1 >= v96) {
    goto LABEL_28;
  }
  uint64_t v54 = *(void *)(v47 + 8 * v55);
  if (v54) {
    goto LABEL_20;
  }
  uint64_t v55 = v46 + 2;
  if (v46 + 2 >= v96) {
    goto LABEL_28;
  }
  uint64_t v54 = *(void *)(v47 + 8 * v55);
  if (v54) {
    goto LABEL_20;
  }
  uint64_t v55 = v46 + 3;
  if (v46 + 3 >= v96)
  {
LABEL_28:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v89 + 8))(v86, v60);
  }
  uint64_t v54 = *(void *)(v47 + 8 * v55);
  if (v54)
  {
LABEL_20:
    uint64_t v46 = v55;
    goto LABEL_21;
  }
  while (1)
  {
    uint64_t v46 = v55 + 1;
    if (__OFADD__(v55, 1)) {
      break;
    }
    if (v46 >= v96) {
      goto LABEL_28;
    }
    uint64_t v54 = *(void *)(v47 + 8 * v46);
    ++v55;
    if (v54) {
      goto LABEL_21;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t CRStruct_6.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v27)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t AssociatedConformanceWitness;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t AssociatedTypeWitness;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void v104[18];

  uint64_t v5 = v4;
  uint64_t v103 = a1;
  uint64_t v102 = a4;
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v87 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v84 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v85 = (char *)&v63 - v11;
  uint64_t v82 = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(v82 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v82);
  uint64_t v80 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v81 = (char *)&v63 - v14;
  uint64_t v78 = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v78);
  uint64_t v76 = (char *)&v63 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v77 = (char *)&v63 - v17;
  uint64_t v74 = swift_getAssociatedTypeWitness();
  uint64_t v75 = *(void *)(v74 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v74);
  uint64_t v72 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v73 = (char *)&v63 - v20;
  uint64_t v70 = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(v70 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v70);
  uint64_t v68 = (char *)&v63 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v69 = (char *)&v63 - v23;
  uint64_t v66 = swift_getAssociatedTypeWitness();
  uint64_t v67 = *(void *)(v66 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v66);
  uint64_t v64 = (char *)&v63 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v65 = (char *)&v63 - v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v99 = v8;
  uint64_t v27 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 112);
  uint64_t v100 = a2;
  v27(v104, a2, v8);
  uint64_t v93 = v104[2];
  uint64_t v97 = v104[4];
  uint64_t v28 = v104[5];
  uint64_t v29 = v104[7];
  unsigned int v30 = v104[10];
  uint64_t v31 = v104[11];
  uint64_t v33 = v104[13];
  uint64_t v32 = v104[14];
  uint64_t v34 = v104[16];
  char v35 = v104[17];
  uint64_t v101 = v104[1];
  uint64_t v36 = v104[8];
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  uint64_t v98 = v35;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v96 = v32;
  swift_release();
  int v89 = v33;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v92 = v30;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v94 = v29;
  swift_bridgeObjectRelease();
  uint64_t v90 = v28;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = v64;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v38 = v66;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(v103, v38);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v37, v38);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v91 = v31;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v95 = v36;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v40 = v34;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = v68;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v42 = v70;
  uint64_t v43 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 + 16) + 24))(v103, v42);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v41, v42);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v72;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v45 = v74;
  uint64_t v46 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 + 16) + 24))(v103, v45);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v44, v45);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v88 = v40;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = v76;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v48 = v78;
  uint64_t v49 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 + 16) + 24))(v103, v48);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v47, v48);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v50 = v80;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v51 = v82;
  uint64_t v52 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 + 16) + 24))(v103, v51);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v50, v51);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v104);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v53 = v84;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v54 = v99;
  uint64_t v55 = v100;
  uint64_t v56 = AssociatedTypeWitness;
  uint64_t v57 = swift_getAssociatedConformanceWitness();
  uint64_t v58 = v103;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 + 16) + 24))(v103, v56);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v53, v56);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v59 = *(void *)(v54 + 8);
  BOOL v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 24))(v55, v59);
  uint64_t v61 = sub_1C4341774(v60, v58);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 32))(v61, v55, v59);
  return sub_1C43421F0((uint64_t)v104);
}

uint64_t CRStruct_6.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v29)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t AssociatedConformanceWitness;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t AssociatedTypeWitness;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void v102[18];
  unint64_t v103;

  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v84 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v83 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v82 = (char *)&v61 - v12;
  uint64_t v81 = swift_getAssociatedTypeWitness();
  uint64_t v80 = *(void *)(v81 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v81);
  uint64_t v79 = (char *)&v61 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v78 = (char *)&v61 - v15;
  uint64_t v77 = swift_getAssociatedTypeWitness();
  uint64_t v76 = *(void *)(v77 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v77);
  uint64_t v75 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v74 = (char *)&v61 - v18;
  uint64_t v73 = swift_getAssociatedTypeWitness();
  uint64_t v72 = *(void *)(v73 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v73);
  uint64_t v71 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v70 = (char *)&v61 - v21;
  uint64_t v69 = swift_getAssociatedTypeWitness();
  uint64_t v68 = *(void *)(v69 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v69);
  uint64_t v66 = (char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v67 = (char *)&v61 - v24;
  uint64_t v65 = swift_getAssociatedTypeWitness();
  uint64_t v64 = *(void *)(v65 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v65);
  uint64_t v62 = (char *)&v61 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v63 = (char *)&v61 - v27;
  if (a1) {
    unint64_t v28 = a1;
  }
  else {
    unint64_t v28 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  uint64_t v103 = v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v99 = a4;
  uint64_t v100 = v5;
  uint64_t v29 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 112);
  swift_bridgeObjectRetain();
  uint64_t v101 = a2;
  v29(v102, a2, v9);
  unsigned int v30 = v102[1];
  uint64_t v87 = v102[2];
  uint64_t v97 = v102[4];
  uint64_t v92 = v102[5];
  uint64_t v31 = v102[7];
  uint64_t v32 = v102[8];
  uint64_t v34 = v102[10];
  uint64_t v33 = v102[11];
  char v35 = v102[14];
  uint64_t v98 = v9;
  uint64_t v95 = v102[13];
  uint64_t v36 = v102[16];
  uint64_t v91 = v102[17];
  sub_1C4342124((uint64_t)v102);
  uint64_t v90 = v30;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v93 = v36;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v88 = v33;
  swift_release();
  int v89 = v34;
  swift_bridgeObjectRelease();
  uint64_t v96 = v32;
  swift_release();
  uint64_t v94 = v31;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = v62;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v38 = v65;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(&v103, v38);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v37, v38);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v40 = v66;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v41 = v69;
  uint64_t v42 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v42 + 16) + 24))(&v103, v41);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v41);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v86 = v35;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v71;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v44 = v73;
  uint64_t v45 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v45 + 16) + 24))(&v103, v44);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v44);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v46 = v75;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v47 = v77;
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v48 + 16) + 24))(&v103, v47);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v47);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = v79;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v50 = v81;
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v51 + 16) + 24))(&v103, v50);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v50);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v102);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v52 = v83;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v53 = v98;
  uint64_t v54 = v101;
  uint64_t v55 = AssociatedTypeWitness;
  uint64_t v56 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v56 + 16) + 24))(&v103, v55);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v55);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v57 = *(void *)(v53 + 8);
  uint64_t v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 24))(v54, v57);
  uint64_t v59 = sub_1C4341774(v58, (uint64_t)&v103);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v57 + 32))(v59, v54, v57);
  return sub_1C43421F0((uint64_t)v102);
}

uint64_t static CRStruct_6.fieldKeys.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(*(void *)(a2 + 8) + 112))(v16);
  uint64_t v7 = v16[0];
  uint64_t v8 = v16[3];
  uint64_t v14 = v16[1];
  uint64_t v15 = v16[4];
  uint64_t v2 = v16[7];
  uint64_t v9 = v16[6];
  uint64_t v10 = v16[9];
  uint64_t v13 = v16[10];
  uint64_t v3 = v16[13];
  uint64_t v11 = v16[12];
  uint64_t v12 = v16[15];
  uint64_t v4 = v16[16];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0250);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C44A50D0;
  sub_1C4342124((uint64_t)v16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v14;
  sub_1C4342124((uint64_t)v16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 48) = v8;
  *(void *)(v5 + 56) = v15;
  sub_1C4342124((uint64_t)v16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 64) = v9;
  *(void *)(v5 + 72) = v2;
  sub_1C4342124((uint64_t)v16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 80) = v10;
  *(void *)(v5 + 88) = v13;
  sub_1C4342124((uint64_t)v16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 96) = v11;
  *(void *)(v5 + 104) = v3;
  sub_1C4342124((uint64_t)v16);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v5 + 112) = v12;
  *(void *)(v5 + 120) = v4;
  sub_1C43421F0((uint64_t)v16);
  return v5;
}

uint64_t CRStruct_6.merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v11)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void (*v24)(char *, void);
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  char *v27;
  void (*v28)(char *, void);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, void);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, void);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, void);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, void);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t AssociatedTypeWitness;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87[8];
  void v88[18];

  uint64_t v86 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v69 = (char *)&v53 - v5;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v68 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v66 = (char *)&v53 - v6;
  uint64_t v64 = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (char *)&v53 - v7;
  uint64_t v61 = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  BOOL v60 = (char *)&v53 - v8;
  uint64_t v58 = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (char *)&v53 - v9;
  uint64_t v55 = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v54 = (char *)&v53 - v10;
  uint64_t v85 = v4;
  uint64_t v11 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 112);
  uint64_t v83 = a2;
  v11(v88, a2, v4);
  uint64_t v80 = v88[2];
  uint64_t v77 = v88[4];
  uint64_t v12 = v88[5];
  uint64_t v14 = v88[7];
  uint64_t v13 = v88[8];
  uint64_t v15 = v88[10];
  uint64_t v16 = v88[11];
  uint64_t v18 = v88[13];
  uint64_t v17 = v88[14];
  uint64_t v19 = v88[16];
  uint64_t v20 = v88[17];
  uint64_t v84 = v88[1];
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  uint64_t v82 = v20;
  swift_release();
  uint64_t v73 = v19;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v78 = v16;
  swift_release();
  uint64_t v81 = v15;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v74 = v14;
  swift_bridgeObjectRelease();
  uint64_t v79 = v12;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v21 = v18;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = v13;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = v54;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v24 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v25 = v55;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v23, v25);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v23, v25);
  v24(v87, 0);
  swift_release();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v72 = v17;
  swift_release();
  uint64_t v76 = v21;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v75 = v22;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = v57;
  swift_getAtKeyPath();
  swift_release();
  unint64_t v28 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v29 = v58;
  unsigned int v30 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v30 + 8) + 8))(v27, v29);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v27, v29);
  v28(v87, 0);
  swift_release();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v31 = v60;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v32 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v33 = v61;
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v34 + 8) + 8))(v31, v33);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v31, v33);
  v32(v87, 0);
  swift_release();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  char v35 = v63;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v36 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v37 = v64;
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v38 + 8) + 8))(v35, v37);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v35, v37);
  v36(v87, 0);
  swift_release();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = v66;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v40 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v41 = v67;
  uint64_t v42 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v42 + 8) + 8))(v39, v41);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v41);
  v40(v87, 0);
  swift_release();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342124((uint64_t)v88);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v69;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v44 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v45 = v85;
  uint64_t v46 = v83;
  uint64_t v47 = AssociatedTypeWitness;
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v48 + 8) + 8))(v43, v47);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v43, v47);
  v44(v87, 0);
  swift_release();
  uint64_t v49 = *(void *)(v45 + 8);
  uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 24))(v46, v49);
  uint64_t v51 = (void (*)(char *, void))(*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 40))(v87, v46, v49);
  sub_1C4477B90(v50);
  swift_bridgeObjectRelease();
  v51(v87, 0);
  (*(void (**)(uint64_t, uint64_t))(v49 + 64))(v46, v49);
  return sub_1C43421F0((uint64_t)v88);
}

uint64_t CRStruct_6.observableDifference(from:with:)@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v42)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v43;
  void *v44;
  void *v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, uint64_t);
  char *v54;
  char *v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, uint64_t);
  char *v62;
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  void (*v71)(char *, uint64_t);
  char *v72;
  char *v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  BOOL v77;
  char *v78;
  BOOL v79;
  uint64_t v80;
  char *v81;
  char *v82;
  char *v83;
  void (*v84)(char *, uint64_t);
  BOOL v85;
  void (*v86)(char *, uint64_t);
  BOOL v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  int *TupleTypeMetadata;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t AssociatedTypeWitness;
  char *v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  char *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void *v169;
  void *v170;
  void *v171;
  void *v172;
  void *v173;
  void *v174;
  void *v175;
  void *v176;
  uint64_t v177;
  void (*v178)(char *, uint64_t);
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  void *v185;
  void *v186;
  void *v187;
  uint64_t v188;
  void *v189;
  void *v190;
  uint64_t v191;
  void *v192;

  uint64_t v177 = a2;
  uint64_t v178 = a1;
  uint64_t v147 = a5;
  uint64_t v6 = *(void *)(a4 + 8);
  uint64_t v175 = &associated type descriptor for CRStruct_Base_6.Type_1;
  swift_getAssociatedTypeWitness();
  uint64_t v176 = &associated conformance descriptor for CRStruct_Base_6.CRStruct_Base_6.Type_1: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v179 = sub_1C4497B38();
  uint64_t v173 = &associated type descriptor for CRStruct_Base_6.Type_2;
  swift_getAssociatedTypeWitness();
  uint64_t v174 = &associated conformance descriptor for CRStruct_Base_6.CRStruct_Base_6.Type_2: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v180 = sub_1C4497B38();
  uint64_t v171 = &associated type descriptor for CRStruct_Base_6.Type_3;
  swift_getAssociatedTypeWitness();
  uint64_t v172 = &associated conformance descriptor for CRStruct_Base_6.CRStruct_Base_6.Type_3: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v181 = sub_1C4497B38();
  uint64_t v169 = &associated type descriptor for CRStruct_Base_6.Type_4;
  swift_getAssociatedTypeWitness();
  uint64_t v170 = &associated conformance descriptor for CRStruct_Base_6.CRStruct_Base_6.Type_4: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v182 = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v183 = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v184 = sub_1C4497B38();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v106 = (char *)&v101 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v141 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v140 = (char *)&v101 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v136 = (char *)&v101 - v10;
  uint64_t v138 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v105 = swift_getAssociatedTypeWitness();
  uint64_t v144 = sub_1C4497B38();
  uint64_t v150 = *(void *)(v144 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v144);
  uint64_t v143 = (char *)&v101 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v164 = (char *)&v101 - v13;
  uint64_t v130 = swift_getAssociatedTypeWitness();
  uint64_t v132 = *(void *)(v130 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v130);
  uint64_t v131 = (char *)&v101 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v128 = (char *)&v101 - v16;
  uint64_t v129 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v104 = swift_getAssociatedTypeWitness();
  uint64_t v163 = sub_1C4497B38();
  uint64_t v154 = *(void *)(v163 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v163);
  uint64_t v142 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v162 = (char *)&v101 - v19;
  uint64_t v123 = swift_getAssociatedTypeWitness();
  uint64_t v125 = *(void *)(v123 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v123);
  uint64_t v124 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v121 = (char *)&v101 - v22;
  uint64_t v122 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v103 = swift_getAssociatedTypeWitness();
  uint64_t v161 = sub_1C4497B38();
  uint64_t v153 = *(void *)(v161 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v161);
  uint64_t v137 = (char *)&v101 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v160 = (char *)&v101 - v25;
  uint64_t v118 = swift_getAssociatedTypeWitness();
  uint64_t v120 = *(void *)(v118 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v118);
  uint64_t v119 = (char *)&v101 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v149 = (char *)&v101 - v28;
  uint64_t v117 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v102 = swift_getAssociatedTypeWitness();
  uint64_t v159 = sub_1C4497B38();
  uint64_t v152 = *(void *)(v159 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v159);
  uint64_t v133 = (char *)&v101 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v158 = (char *)&v101 - v31;
  uint64_t v114 = swift_getAssociatedTypeWitness();
  uint64_t v116 = *(void *)(v114 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v114);
  uint64_t v115 = (char *)&v101 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v112 = (char *)&v101 - v34;
  uint64_t v113 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v101 = swift_getAssociatedTypeWitness();
  uint64_t v157 = sub_1C4497B38();
  uint64_t v151 = *(void *)(v157 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v157);
  uint64_t v127 = (char *)&v101 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  uint64_t v156 = (char *)&v101 - v37;
  uint64_t v109 = swift_getAssociatedTypeWitness();
  uint64_t v111 = *(void *)(v109 - 8);
  uint64_t v38 = MEMORY[0x1F4188790](v109);
  uint64_t v110 = (char *)&v101 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v148 = (char *)&v101 - v40;
  uint64_t v108 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v126 = swift_getAssociatedTypeWitness();
  uint64_t v135 = sub_1C4497B38();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  uint64_t v155 = (char *)&v101 - v41;
  uint64_t v42 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 112);
  uint64_t v146 = a3;
  uint64_t v145 = v6;
  v42(&v179, a3, v6);
  uint64_t v43 = v180;
  uint64_t v169 = (void *)v181;
  uint64_t v175 = (void *)v183;
  uint64_t v168 = v184;
  uint64_t v44 = v185;
  uint64_t v45 = v186;
  uint64_t v46 = v187;
  uint64_t v47 = v188;
  uint64_t v48 = v189;
  uint64_t v49 = v190;
  uint64_t v167 = v191;
  uint64_t v174 = v192;
  sub_1C4342124((uint64_t)&v179);
  uint64_t v165 = v43;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v171 = v49;
  swift_release();
  uint64_t v170 = v48;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v176 = v46;
  swift_bridgeObjectRelease();
  uint64_t v173 = v45;
  swift_release();
  uint64_t v172 = v44;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v50 = v110;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v51 = v148;
  uint64_t v52 = v109;
  (*(void (**)(char *, uint64_t, uint64_t))(v108 + 40))(v50, v177, v109);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v111 + 8);
  v53(v50, v52);
  v53(v51, v52);
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v166 = v47;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v54 = v112;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v55 = v115;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v56 = v114;
  (*(void (**)(char *, uint64_t, uint64_t))(v113 + 40))(v55, v177, v114);
  uint64_t v57 = *(void (**)(char *, uint64_t))(v116 + 8);
  v57(v55, v56);
  v57(v54, v56);
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v58 = v119;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v59 = v149;
  BOOL v60 = v118;
  (*(void (**)(char *, uint64_t, uint64_t))(v117 + 40))(v58, v177, v118);
  uint64_t v61 = *(void (**)(char *, uint64_t))(v120 + 8);
  v61(v58, v60);
  v61(v59, v60);
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v62 = v121;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v63 = v124;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v64 = v62;
  uint64_t v65 = v123;
  (*(void (**)(char *, uint64_t, uint64_t))(v122 + 40))(v63, v177, v123);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v125 + 8);
  v66(v63, v65);
  v66(v64, v65);
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v67 = v128;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v68 = v131;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v69 = v67;
  uint64_t v70 = v130;
  (*(void (**)(char *, uint64_t, uint64_t))(v129 + 40))(v68, v177, v130);
  uint64_t v71 = *(void (**)(char *, uint64_t))(v132 + 8);
  v71(v68, v70);
  v71(v69, v70);
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v72 = v136;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)&v179);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v73 = v140;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v74 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v138 + 40))(v73, v177, AssociatedTypeWitness);
  sub_1C43421F0((uint64_t)&v179);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v141 + 8);
  v75(v73, v74);
  v75(v72, v74);
  uint64_t v76 = v127;
  uint64_t v77 = 1;
  LODWORD(v75) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v126 - 8) + 48))(v155, 1);
  (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v76, v156, v157);
  if (v75 == 1) {
    uint64_t v77 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v101 - 8) + 48))(v76, 1) != 1;
  }
  uint64_t v178 = *(void (**)(char *, uint64_t))(v151 + 8);
  v178(v76, v157);
  uint64_t v78 = v133;
  (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v133, v158, v159);
  uint64_t v79 = v77 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v102 - 8) + 48))(v78, 1) != 1;
  uint64_t v80 = v144;
  uint64_t v81 = v143;
  uint64_t v82 = v142;
  uint64_t v83 = v137;
  uint64_t v84 = *(void (**)(char *, uint64_t))(v152 + 8);
  v84(v78, v159);
  (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v83, v160, v161);
  uint64_t v85 = v79 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v103 - 8) + 48))(v83, 1) != 1;
  uint64_t v86 = *(void (**)(char *, uint64_t))(v153 + 8);
  v86(v83, v161);
  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v82, v162, v163);
  uint64_t v87 = v85 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v104 - 8) + 48))(v82, 1) != 1;
  uint64_t v88 = v82;
  int v89 = *(void (**)(char *, uint64_t))(v154 + 8);
  v89(v88, v163);
  (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v81, v164, v80);
  if (v87 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v105 - 8) + 48))(v81, 1) != 1)
  {
    uint64_t v93 = v150;
    (*(void (**)(char *, uint64_t))(v150 + 8))(v81, v80);
    uint64_t v94 = &v106[TupleTypeMetadata[12]];
    uint64_t v95 = &v106[TupleTypeMetadata[16]];
    uint64_t v96 = &v106[TupleTypeMetadata[20]];
    uint64_t v97 = &v106[TupleTypeMetadata[24]];
    uint64_t v98 = &v106[TupleTypeMetadata[28]];
    (*(void (**)(char *, char *, uint64_t))(v134 + 32))(v106, v155, v135);
    (*(void (**)(char *, char *, uint64_t))(v151 + 32))(v94, v156, v157);
    (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v95, v158, v159);
    (*(void (**)(char *, char *, uint64_t))(v153 + 32))(v96, v160, v161);
    (*(void (**)(char *, char *, uint64_t))(v154 + 32))(v97, v162, v163);
    (*(void (**)(char *, char *, uint64_t))(v93 + 32))(v98, v164, v80);
    uint64_t v99 = swift_getAssociatedTypeWitness();
    uint64_t v100 = v147;
    swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v99 - 8) + 56))(v100, 0, 1, v99);
  }
  else
  {
    uint64_t v90 = *(void (**)(char *, uint64_t))(v150 + 8);
    v90(v81, v80);
    v90(v164, v80);
    v89(v162, v163);
    v86(v160, v161);
    v84(v158, v159);
    v178(v156, v157);
    (*(void (**)(char *, uint64_t))(v134 + 8))(v155, v135);
    uint64_t v91 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56))(v147, 1, 1, v91);
  }
}

uint64_t CRStruct_6.hasDelta(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v23)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t AssociatedConformanceWitness;
  char *v37;
  void (*v38)(char *, uint64_t);
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char v61;
  void (*v62)(char *, uint64_t);
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char v68;
  void (*v69)(char *, uint64_t);
  char v70;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t AssociatedTypeWitness;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  void v116[18];

  uint64_t v111 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v78 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v77 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v83 = (char *)&v76 - v7;
  uint64_t v82 = swift_getAssociatedTypeWitness();
  uint64_t v81 = *(void *)(v82 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v82);
  uint64_t v80 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v88 = (char *)&v76 - v10;
  uint64_t v87 = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(v87 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v87);
  uint64_t v85 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v84 = (char *)&v76 - v13;
  uint64_t v91 = swift_getAssociatedTypeWitness();
  uint64_t v90 = *(void *)(v91 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v91);
  int v89 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v95 = (char *)&v76 - v16;
  uint64_t v94 = swift_getAssociatedTypeWitness();
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v94);
  uint64_t v92 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v103 = (char *)&v76 - v19;
  uint64_t v101 = swift_getAssociatedTypeWitness();
  uint64_t v102 = *(void *)(v101 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v101);
  uint64_t v100 = (char *)&v76 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v113 = (char *)&v76 - v22;
  uint64_t v112 = v4;
  uint64_t v23 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 112);
  uint64_t v110 = a2;
  v23(v116, a2, v4);
  uint64_t v24 = v116[1];
  uint64_t v25 = v116[2];
  uint64_t v114 = v116[5];
  uint64_t v115 = v116[4];
  uint64_t v26 = v116[7];
  uint64_t v27 = v116[8];
  uint64_t v29 = v116[10];
  uint64_t v28 = v116[11];
  uint64_t v30 = v116[13];
  uint64_t v31 = v116[14];
  uint64_t v33 = v116[16];
  uint64_t v32 = v116[17];
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v116);
  uint64_t v106 = v24;
  swift_bridgeObjectRelease();
  uint64_t v108 = v32;
  swift_release();
  uint64_t v104 = v33;
  swift_bridgeObjectRelease();
  uint64_t v105 = v31;
  swift_release();
  uint64_t v109 = v30;
  swift_bridgeObjectRelease();
  uint64_t v96 = v28;
  swift_release();
  uint64_t v97 = v29;
  swift_bridgeObjectRelease();
  uint64_t v107 = v27;
  swift_release();
  uint64_t v98 = v26;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v34 = v100;
  swift_getAtKeyPath();
  uint64_t v99 = v25;
  swift_release();
  uint64_t v35 = v101;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v37 = v113;
  LOBYTE(v24) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v34, v35, AssociatedConformanceWitness);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v102 + 8);
  v38(v34, v35);
  v38(v37, v35);
  if (v24) {
    goto LABEL_7;
  }
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = v92;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v40 = v94;
  uint64_t v41 = swift_getAssociatedConformanceWitness();
  uint64_t v42 = v103;
  uint64_t v43 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 72))(v39, v40, v41);
  uint64_t v44 = *(void (**)(char *, uint64_t))(v93 + 8);
  v44(v39, v40);
  v44(v42, v40);
  if (v43) {
    goto LABEL_7;
  }
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v89;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v46 = v91;
  uint64_t v47 = swift_getAssociatedConformanceWitness();
  uint64_t v48 = v95;
  uint64_t v49 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 72))(v45, v46, v47);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v90 + 8);
  v50(v45, v46);
  v50(v48, v46);
  if (v49) {
    goto LABEL_7;
  }
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = v84;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v52 = v85;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v53 = v87;
  uint64_t v54 = swift_getAssociatedConformanceWitness();
  uint64_t v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 72))(v52, v53, v54);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v86 + 8);
  v56(v52, v53);
  v56(v51, v53);
  if (v55) {
    goto LABEL_7;
  }
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v57 = v80;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v58 = v82;
  uint64_t v59 = swift_getAssociatedConformanceWitness();
  BOOL v60 = v88;
  uint64_t v61 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 72))(v57, v58, v59);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v81 + 8);
  v62(v57, v58);
  v62(v60, v58);
  if (v61) {
    goto LABEL_7;
  }
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v63 = v110;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v64 = v77;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v65 = AssociatedTypeWitness;
  uint64_t v66 = swift_getAssociatedConformanceWitness();
  uint64_t v67 = v83;
  uint64_t v68 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 72))(v64, v65, v66);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v78 + 8);
  v69(v64, v65);
  v69(v67, v65);
  if (v68)
  {
LABEL_7:
    uint64_t v70 = 1;
  }
  else
  {
    uint64_t v72 = *(void *)(v112 + 8);
    uint64_t v73 = *(uint64_t (**)(uint64_t, uint64_t))(v72 + 24);
    uint64_t v74 = v73(v63, v72);
    uint64_t v75 = v73(v63, v72);
    uint64_t v70 = sub_1C4478090(v75, v74);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C43421F0((uint64_t)v116);
  return v70 & 1;
}

uint64_t CRStruct_6.actionUndoingDifference(from:)@<X0>(void (*a1)(char *, uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v176 = a1;
  uint64_t v145 = a4;
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v141 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v140 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v136 = (char *)&v103 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v108 = swift_getAssociatedTypeWitness();
  uint64_t v151 = sub_1C4497B38();
  uint64_t v150 = *(void *)(v151 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v151);
  uint64_t v144 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v163 = (char *)&v103 - v11;
  uint64_t v130 = swift_getAssociatedTypeWitness();
  uint64_t v132 = *(void *)(v130 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v130);
  uint64_t v131 = (char *)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v148 = (char *)&v103 - v14;
  uint64_t v129 = swift_getAssociatedConformanceWitness();
  uint64_t v107 = swift_getAssociatedTypeWitness();
  uint64_t v149 = sub_1C4497B38();
  uint64_t v154 = *(void *)(v149 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v149);
  uint64_t v142 = (char *)&v103 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v162 = (char *)&v103 - v17;
  uint64_t v124 = swift_getAssociatedTypeWitness();
  uint64_t v127 = *(void *)(v124 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v124);
  uint64_t v125 = (char *)&v103 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v122 = (char *)&v103 - v20;
  uint64_t v123 = swift_getAssociatedConformanceWitness();
  uint64_t v106 = swift_getAssociatedTypeWitness();
  uint64_t v164 = sub_1C4497B38();
  uint64_t v143 = *(void *)(v164 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v164);
  uint64_t v137 = (char *)&v103 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v161 = (char *)&v103 - v23;
  uint64_t v119 = swift_getAssociatedTypeWitness();
  uint64_t v121 = *(void *)(v119 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v119);
  uint64_t v120 = (char *)&v103 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v147 = (char *)&v103 - v26;
  uint64_t v118 = swift_getAssociatedConformanceWitness();
  uint64_t v105 = swift_getAssociatedTypeWitness();
  uint64_t v160 = sub_1C4497B38();
  uint64_t v153 = *(void *)(v160 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v160);
  uint64_t v133 = (char *)&v103 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v159 = (char *)&v103 - v29;
  uint64_t v115 = swift_getAssociatedTypeWitness();
  uint64_t v117 = *(void *)(v115 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v115);
  uint64_t v116 = (char *)&v103 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v146 = (char *)&v103 - v32;
  uint64_t v114 = swift_getAssociatedConformanceWitness();
  uint64_t v104 = swift_getAssociatedTypeWitness();
  uint64_t v158 = sub_1C4497B38();
  uint64_t v152 = *(void *)(v158 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v158);
  uint64_t v128 = (char *)&v103 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v157 = (char *)&v103 - v35;
  uint64_t v110 = swift_getAssociatedTypeWitness();
  uint64_t v113 = *(void *)(v110 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v110);
  uint64_t v112 = (char *)&v103 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v109 = (char *)&v103 - v38;
  uint64_t v111 = swift_getAssociatedConformanceWitness();
  uint64_t v126 = swift_getAssociatedTypeWitness();
  uint64_t v135 = sub_1C4497B38();
  uint64_t v134 = *(void *)(v135 - 8);
  MEMORY[0x1F4188790](v135);
  uint64_t v156 = (char *)&v103 - v39;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 112))(v184, a2, v5);
  uint64_t v173 = v184[2];
  uint64_t v174 = v184[5];
  uint64_t v177 = (void (*)(char *, uint64_t))v184[7];
  uint64_t v40 = v184[8];
  uint64_t v41 = v184[10];
  uint64_t v42 = v184[13];
  uint64_t v43 = v184[14];
  uint64_t v45 = v184[16];
  uint64_t v44 = v184[17];
  uint64_t v166 = v184[1];
  uint64_t v170 = v184[4];
  uint64_t v169 = v184[11];
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  uint64_t v167 = v44;
  swift_release();
  uint64_t v165 = v45;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v172 = v42;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v168 = v41;
  swift_bridgeObjectRelease();
  uint64_t v171 = v40;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v46 = v109;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = v112;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v48 = v46;
  uint64_t v49 = v110;
  (*(void (**)(char *, uint64_t))(v111 + 56))(v47, v110);
  uint64_t v50 = *(void (**)(char *, uint64_t))(v113 + 8);
  v50(v47, v49);
  v50(v48, v49);
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v155 = v43;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = v116;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v52 = v146;
  uint64_t v53 = v115;
  (*(void (**)(char *, uint64_t))(v114 + 56))(v51, v115);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v117 + 8);
  v54(v51, v53);
  v54(v52, v53);
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v55 = v120;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v56 = v147;
  uint64_t v57 = v119;
  (*(void (**)(char *, uint64_t))(v118 + 56))(v55, v119);
  uint64_t v58 = *(void (**)(char *, uint64_t))(v121 + 8);
  v58(v55, v57);
  v58(v56, v57);
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v59 = v122;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  BOOL v60 = v125;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v61 = v59;
  uint64_t v62 = v124;
  (*(void (**)(char *, uint64_t))(v123 + 56))(v60, v124);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v127 + 8);
  v63(v60, v62);
  v63(v61, v62);
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v64 = v131;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v65 = v148;
  uint64_t v66 = v130;
  (*(void (**)(char *, uint64_t))(v129 + 56))(v64, v130);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v132 + 8);
  v67(v64, v66);
  v67(v65, v66);
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v68 = v136;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v184);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v69 = v140;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v70 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t))(AssociatedConformanceWitness + 56))(v69, AssociatedTypeWitness);
  sub_1C43421F0((uint64_t)v184);
  uint64_t v71 = *(void (**)(char *, uint64_t))(v141 + 8);
  v71(v69, v70);
  v71(v68, v70);
  uint64_t v72 = v128;
  BOOL v73 = 1;
  LODWORD(v71) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v126 - 8) + 48))(v156, 1);
  (*(void (**)(char *, char *, uint64_t))(v152 + 16))(v72, v157, v158);
  if (v71 == 1) {
    BOOL v73 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v104 - 8) + 48))(v72, 1) != 1;
  }
  uint64_t v177 = *(void (**)(char *, uint64_t))(v152 + 8);
  v177(v72, v158);
  uint64_t v74 = v133;
  (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v133, v159, v160);
  BOOL v75 = v73 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v105 - 8) + 48))(v74, 1) != 1;
  uint64_t v76 = v149;
  uint64_t v77 = v143;
  uint64_t v78 = v142;
  uint64_t v79 = v137;
  uint64_t v176 = *(void (**)(char *, uint64_t))(v153 + 8);
  v176(v74, v160);
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v79, v161, v164);
  BOOL v80 = v75 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v106 - 8) + 48))(v79, 1) != 1;
  uint64_t v81 = *(void (**)(char *, uint64_t))(v77 + 8);
  v81(v79, v164);
  (*(void (**)(char *, char *, uint64_t))(v154 + 16))(v78, v162, v76);
  BOOL v82 = v80 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v107 - 8) + 48))(v78, 1) != 1;
  uint64_t v83 = *(void (**)(char *, uint64_t))(v154 + 8);
  v83(v78, v76);
  uint64_t v84 = v144;
  (*(void (**)(char *, char *, uint64_t))(v150 + 16))(v144, v163, v151);
  if (v82 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v108 - 8) + 48))(v84, 1) != 1)
  {
    uint64_t v94 = v150;
    uint64_t v95 = v151;
    (*(void (**)(char *, uint64_t))(v150 + 8))(v84, v151);
    uint64_t v96 = v135;
    uint64_t v178 = v135;
    uint64_t v97 = v158;
    uint64_t v179 = v158;
    uint64_t v98 = v160;
    uint64_t v180 = v160;
    uint64_t v181 = v164;
    uint64_t v182 = v76;
    uint64_t v183 = v95;
    TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
    uint64_t v100 = v145;
    uint64_t v101 = v145 + TupleTypeMetadata[12];
    uint64_t v102 = v145 + TupleTypeMetadata[16];
    uint64_t v175 = v145 + TupleTypeMetadata[20];
    uint64_t v176 = (void (*)(char *, uint64_t))(v145 + TupleTypeMetadata[24]);
    uint64_t v177 = (void (*)(char *, uint64_t))(v145 + TupleTypeMetadata[28]);
    (*(void (**)(uint64_t, char *, uint64_t))(v134 + 32))(v145, v156, v96);
    (*(void (**)(uint64_t, char *, uint64_t))(v152 + 32))(v101, v157, v97);
    (*(void (**)(uint64_t, char *, uint64_t))(v153 + 32))(v102, v159, v98);
    (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v175, v161, v164);
    (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v154 + 32))(v176, v162, v149);
    (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v94 + 32))(v177, v163, v95);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)TupleTypeMetadata - 1) + 56))(v100, 0, 1, TupleTypeMetadata);
  }
  else
  {
    uint64_t v85 = *(void (**)(char *, uint64_t))(v150 + 8);
    uint64_t v86 = v151;
    v85(v84, v151);
    v85(v163, v86);
    uint64_t v87 = v149;
    v83(v162, v149);
    uint64_t v88 = v164;
    v81(v161, v164);
    uint64_t v89 = v160;
    v176(v159, v160);
    uint64_t v90 = v158;
    v177(v157, v158);
    uint64_t v91 = v135;
    (*(void (**)(char *, uint64_t))(v134 + 8))(v156, v135);
    uint64_t v178 = v91;
    uint64_t v179 = v90;
    uint64_t v180 = v89;
    uint64_t v181 = v88;
    uint64_t v182 = v87;
    uint64_t v183 = v86;
    uint64_t v92 = swift_getTupleTypeMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v145, 1, 1, v92);
  }
}

uint64_t CRStruct_6.apply(_:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v196 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v164 = AssociatedTypeWitness;
  uint64_t v141 = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_1C4497B38();
  uint64_t v174 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v162 = (char *)&v136 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v160 = swift_getAssociatedConformanceWitness();
  uint64_t v161 = v8;
  uint64_t v140 = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_1C4497B38();
  uint64_t v169 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v159 = (char *)&v136 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v156 = swift_getAssociatedConformanceWitness();
  uint64_t v157 = (void (*)(char *, uint64_t))v11;
  uint64_t v139 = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C4497B38();
  uint64_t v173 = *(char **)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v155 = (char *)&v136 - v13;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v152 = swift_getAssociatedConformanceWitness();
  uint64_t v153 = (void (*)(char *, uint64_t))v14;
  uint64_t v138 = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_1C4497B38();
  uint64_t v183 = v15;
  uint64_t v182 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v151 = (char *)&v136 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v148 = swift_getAssociatedConformanceWitness();
  uint64_t v165 = (void (*)(char *, uint64_t))v17;
  uint64_t v137 = swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_1C4497B38();
  uint64_t v181 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v147 = (char *)&v136 - v19;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v144 = swift_getAssociatedConformanceWitness();
  uint64_t v145 = v20;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v199 = sub_1C4497B38();
  uint64_t v200 = v18;
  uint64_t v172 = v18;
  uint64_t v201 = v15;
  uint64_t v202 = v12;
  uint64_t v168 = v12;
  uint64_t v167 = v9;
  uint64_t v203 = v9;
  uint64_t v204 = v6;
  uint64_t v175 = v6;
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v142 = sub_1C4497B38();
  uint64_t v171 = *(void *)(v142 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v142 - 8);
  uint64_t v158 = (char *)&v136 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v154 = (char *)&v136 - v25;
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v150 = (char *)&v136 - v27;
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v149 = (char *)&v136 - v29;
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  uint64_t v146 = (char *)&v136 - v31;
  MEMORY[0x1F4188790](v30);
  uint64_t v143 = (char *)&v136 - v32;
  uint64_t v136 = v21;
  uint64_t v170 = sub_1C4497B38();
  uint64_t v180 = *(void *)(v170 - 8);
  MEMORY[0x1F4188790](v170);
  uint64_t v166 = (char *)&v136 - v33;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 112))(&v199, a2, v4);
  uint64_t v34 = v200;
  uint64_t v35 = v204;
  uint64_t v195 = (char *)v203;
  uint64_t v36 = v205;
  uint64_t v37 = v206;
  uint64_t v39 = v207;
  uint64_t v38 = v208;
  uint64_t v40 = v209;
  uint64_t v41 = v210;
  uint64_t v42 = v211;
  uint64_t v43 = v212;
  uint64_t v192 = v201;
  sub_1C4342124((uint64_t)&v199);
  uint64_t v193 = v34;
  swift_bridgeObjectRelease();
  uint64_t v194 = v43;
  uint64_t v44 = v171;
  swift_release();
  uint64_t v188 = v42;
  uint64_t v45 = v183;
  swift_bridgeObjectRelease();
  uint64_t v176 = v41;
  swift_release();
  uint64_t v189 = v40;
  swift_bridgeObjectRelease();
  uint64_t v177 = v38;
  swift_release();
  uint64_t v190 = v39;
  uint64_t v46 = v142;
  uint64_t v47 = TupleTypeMetadata;
  swift_bridgeObjectRelease();
  uint64_t v178 = v37;
  uint64_t v48 = v143;
  swift_release();
  uint64_t v191 = v36;
  swift_bridgeObjectRelease();
  uint64_t v179 = v35;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  uint64_t v187 = v44 + 16;
  uint64_t v186 = v49;
  v49(v48, v196, v46);
  uint64_t v50 = *((void *)v47 - 1);
  unint64_t v185 = *(unsigned int (**)(char *, uint64_t, int *))(v50 + 48);
  uint64_t v184 = v50 + 48;
  if (v185(v48, 1, v47) == 1)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v48, v46);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v136 - 8) + 56))(v166, 1, 1);
    uint64_t v51 = v180;
  }
  else
  {
    uint64_t v52 = &v48[TupleTypeMetadata[12]];
    uint64_t v53 = &v48[TupleTypeMetadata[16]];
    uint64_t v54 = &v48[TupleTypeMetadata[20]];
    uint64_t v55 = &v48[TupleTypeMetadata[24]];
    uint64_t v56 = &v48[TupleTypeMetadata[28]];
    uint64_t v51 = v180;
    (*(void (**)(char *, char *, uint64_t))(v180 + 32))(v166, v48, v170);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v56, v175);
    (*(void (**)(char *, uint64_t))(v169 + 8))(v55, v167);
    (*((void (**)(char *, uint64_t))v173 + 1))(v54, v168);
    (*(void (**)(char *, uint64_t))(v182 + 8))(v53, v45);
    (*(void (**)(char *, uint64_t))(v181 + 8))(v52, v172);
  }
  uint64_t v57 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v58 = v144;
  uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(v144 + 64);
  uint64_t v60 = swift_checkMetadataState();
  uint64_t v61 = v166;
  v59(v166, v60, v58);
  uint64_t v62 = v51 + 8;
  uint64_t v63 = *(void (**)(char *, uint64_t))(v51 + 8);
  uint64_t v64 = v170;
  v63(v61, v170);
  v57(v198, 0);
  swift_release();
  sub_1C4342124((uint64_t)&v199);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v65 = v146;
  v186(v146, v196, v46);
  unsigned int v66 = v185(v65, 1, TupleTypeMetadata);
  uint64_t v180 = v62;
  if (v66 == 1)
  {
    (*(void (**)(char *, uint64_t))(v171 + 8))(v65, v46);
    uint64_t v67 = v147;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v147, 1, 1);
    uint64_t v68 = v181;
    uint64_t v69 = v46;
    uint64_t v70 = v172;
  }
  else
  {
    uint64_t v71 = &v65[TupleTypeMetadata[12]];
    uint64_t v166 = &v65[TupleTypeMetadata[16]];
    uint64_t v72 = v46;
    uint64_t v145 = (uint64_t)&v65[TupleTypeMetadata[20]];
    BOOL v73 = &v65[TupleTypeMetadata[24]];
    uint64_t v74 = &v65[TupleTypeMetadata[28]];
    uint64_t v68 = v181;
    uint64_t v67 = v147;
    uint64_t v70 = v172;
    (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v147, v71, v172);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v74, v175);
    BOOL v75 = v73;
    uint64_t v69 = v72;
    (*(void (**)(char *, uint64_t))(v169 + 8))(v75, v167);
    (*((void (**)(uint64_t, uint64_t))v173 + 1))(v145, v168);
    (*(void (**)(char *, uint64_t))(v182 + 8))(v166, v183);
    v63(v65, v64);
  }
  uint64_t v166 = (char *)v63;
  uint64_t v76 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v77 = v148;
  uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t))(v148 + 64);
  uint64_t v79 = swift_checkMetadataState();
  v78(v67, v79, v77);
  BOOL v80 = *(void (**)(char *, uint64_t))(v68 + 8);
  v80(v67, v70);
  v76(v198, 0);
  swift_release();
  sub_1C4342124((uint64_t)&v199);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v81 = v149;
  v186(v149, v196, v69);
  unsigned int v82 = v185(v81, 1, TupleTypeMetadata);
  uint64_t v181 = v68 + 8;
  uint64_t v165 = v80;
  if (v82 == 1)
  {
    (*(void (**)(char *, uint64_t))(v171 + 8))(v81, v69);
    uint64_t v83 = v151;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))(v151, 1, 1);
    uint64_t v84 = v173;
    uint64_t v85 = v182;
    uint64_t v86 = v69;
  }
  else
  {
    uint64_t v148 = (uint64_t)&v81[TupleTypeMetadata[12]];
    uint64_t v87 = v69;
    uint64_t v88 = (void (*)(uint64_t, uint64_t))v80;
    uint64_t v89 = &v81[TupleTypeMetadata[20]];
    uint64_t v86 = v87;
    uint64_t v90 = &v81[TupleTypeMetadata[24]];
    uint64_t v91 = &v81[TupleTypeMetadata[28]];
    uint64_t v85 = v182;
    uint64_t v83 = v151;
    (*(void (**)(char *, char *, uint64_t))(v182 + 32))(v151, &v81[TupleTypeMetadata[16]], v183);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v91, v175);
    (*(void (**)(char *, uint64_t))(v169 + 8))(v90, v167);
    uint64_t v84 = v173;
    (*((void (**)(char *, uint64_t))v173 + 1))(v89, v168);
    v88(v148, v172);
    ((void (*)(char *, uint64_t))v166)(v81, v170);
  }
  uint64_t v92 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v93 = v152;
  uint64_t v94 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 64);
  uint64_t v95 = swift_checkMetadataState();
  v94(v83, v95, v93);
  uint64_t v96 = *(void (**)(char *, uint64_t))(v85 + 8);
  v96(v83, v183);
  v92(v198, 0);
  swift_release();
  sub_1C4342124((uint64_t)&v199);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v97 = v150;
  v186(v150, v196, v86);
  unsigned int v98 = v185(v97, 1, TupleTypeMetadata);
  uint64_t v182 = v85 + 8;
  uint64_t v153 = v96;
  if (v98 == 1)
  {
    (*(void (**)(char *, uint64_t))(v171 + 8))(v97, v86);
    uint64_t v99 = v155;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v139 - 8) + 56))(v155, 1, 1);
    uint64_t v100 = v168;
  }
  else
  {
    uint64_t v173 = &v97[TupleTypeMetadata[12]];
    uint64_t v101 = &v97[TupleTypeMetadata[16]];
    uint64_t v102 = &v97[TupleTypeMetadata[24]];
    uint64_t v103 = &v97[TupleTypeMetadata[28]];
    uint64_t v104 = v155;
    uint64_t v100 = v168;
    (*((void (**)(char *, char *, uint64_t))v84 + 4))(v155, &v97[TupleTypeMetadata[20]], v168);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v103, v175);
    (*(void (**)(char *, uint64_t))(v169 + 8))(v102, v167);
    v96(v101, v183);
    uint64_t v99 = v104;
    v165(v173, v172);
    ((void (*)(char *, uint64_t))v166)(v97, v170);
  }
  uint64_t v105 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v106 = v156;
  uint64_t v107 = *(void (**)(char *, uint64_t, uint64_t))(v156 + 64);
  uint64_t v108 = swift_checkMetadataState();
  v107(v99, v108, v106);
  uint64_t v157 = (void (*)(char *, uint64_t))*((void *)v84 + 1);
  v157(v99, v100);
  v105(v198, 0);
  swift_release();
  sub_1C4342124((uint64_t)&v199);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v109 = v154;
  v186(v154, v196, v86);
  unsigned int v110 = v185(v109, 1, TupleTypeMetadata);
  uint64_t v111 = v86;
  uint64_t v173 = v84 + 8;
  if (v110 == 1)
  {
    (*(void (**)(char *, uint64_t))(v171 + 8))(v109, v86);
    uint64_t v112 = v159;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v159, 1, 1);
    uint64_t v113 = v167;
    uint64_t v114 = v169;
  }
  else
  {
    uint64_t v156 = (uint64_t)&v109[TupleTypeMetadata[12]];
    uint64_t v115 = &v109[TupleTypeMetadata[16]];
    uint64_t v116 = &v109[TupleTypeMetadata[20]];
    uint64_t v117 = v100;
    uint64_t v118 = &v109[TupleTypeMetadata[28]];
    uint64_t v114 = v169;
    uint64_t v112 = v159;
    uint64_t v113 = v167;
    (*(void (**)(char *, char *))(v169 + 32))(v159, &v109[TupleTypeMetadata[24]]);
    (*(void (**)(char *, uint64_t))(v174 + 8))(v118, v175);
    v157(v116, v117);
    v153(v115, v183);
    v165((char *)v156, v172);
    ((void (*)(char *, uint64_t))v166)(v109, v170);
  }
  uint64_t v119 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v120 = v160;
  uint64_t v121 = *(void (**)(char *, uint64_t, uint64_t))(v160 + 64);
  uint64_t v122 = swift_checkMetadataState();
  v121(v112, v122, v120);
  uint64_t v123 = *(void (**)(char *, uint64_t))(v114 + 8);
  v123(v112, v113);
  v119(v198, 0);
  swift_release();
  sub_1C4342124((uint64_t)&v199);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v124 = v158;
  v186(v158, v196, v111);
  if (v185(v124, 1, TupleTypeMetadata) == 1)
  {
    (*(void (**)(char *, uint64_t))(v171 + 8))(v124, v111);
    uint64_t v125 = v162;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v141 - 8) + 56))(v162, 1, 1);
    uint64_t v126 = v175;
    uint64_t v127 = v174;
  }
  else
  {
    uint64_t v196 = &v124[TupleTypeMetadata[12]];
    uint64_t v195 = &v124[TupleTypeMetadata[16]];
    uint64_t v128 = &v124[TupleTypeMetadata[20]];
    uint64_t v129 = &v124[TupleTypeMetadata[24]];
    uint64_t v127 = v174;
    uint64_t v130 = v113;
    uint64_t v125 = v162;
    uint64_t v126 = v175;
    (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v162, &v124[TupleTypeMetadata[28]], v175);
    v123(v129, v130);
    v157(v128, v168);
    v153(v195, v183);
    v165(v196, v172);
    ((void (*)(char *, uint64_t))v166)(v124, v170);
  }
  uint64_t v131 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v132 = AssociatedConformanceWitness;
  uint64_t v133 = *(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v134 = swift_checkMetadataState();
  v133(v125, v134, v132);
  (*(void (**)(char *, uint64_t))(v127 + 8))(v125, v126);
  v131(v198, 0);
  sub_1C43421F0((uint64_t)&v199);
  return swift_release();
}

uint64_t CRStruct_6.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v11)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t AssociatedTypeWitness;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void v73[18];

  uint64_t v71 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v55 = (char *)&v39 - v5;
  uint64_t v53 = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (char *)&v39 - v6;
  uint64_t v50 = swift_getAssociatedTypeWitness();
  uint64_t v51 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v49 = (char *)&v39 - v7;
  uint64_t v47 = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v46 = (char *)&v39 - v8;
  uint64_t v44 = swift_getAssociatedTypeWitness();
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x1F4188790](v44);
  uint64_t v43 = (char *)&v39 - v9;
  uint64_t v41 = swift_getAssociatedTypeWitness();
  uint64_t v42 = *(void *)(v41 - 8);
  MEMORY[0x1F4188790](v41);
  uint64_t v40 = (char *)&v39 - v10;
  uint64_t v63 = v4;
  uint64_t v11 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 112);
  uint64_t v58 = a2;
  v11(v73, a2, v4);
  uint64_t v60 = v73[2];
  uint64_t v72 = v73[4];
  uint64_t v12 = v73[8];
  uint64_t v13 = v73[13];
  uint64_t v69 = v73[17];
  uint64_t v68 = v73[1];
  uint64_t v64 = v73[5];
  uint64_t v59 = v73[7];
  uint64_t v70 = v73[10];
  uint64_t v62 = v73[11];
  uint64_t v65 = v73[14];
  unsigned int v66 = v73[16];
  sub_1C4342124((uint64_t)v73);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v61 = v13;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v67 = v12;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = v40;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v15 = v41;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 48))(v71, v15);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v14, v15);
  sub_1C4342124((uint64_t)v73);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = v43;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v18 = v44;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v20 = v71;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 + 16) + 48))(v71, v18);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v18);
  sub_1C4342124((uint64_t)v73);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v21 = v46;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v22 = v47;
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 + 16) + 48))(v20, v22);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v21, v22);
  sub_1C4342124((uint64_t)v73);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = v49;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v25 = v50;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  uint64_t v27 = v71;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 + 16) + 48))(v71, v25);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v24, v25);
  sub_1C4342124((uint64_t)v73);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = v52;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v29 = v58;
  uint64_t v30 = v53;
  uint64_t v31 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 + 16) + 48))(v27, v30);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v28, v30);
  sub_1C4342124((uint64_t)v73);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v32 = v55;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v33 = v63;
  uint64_t v34 = AssociatedTypeWitness;
  uint64_t v35 = swift_getAssociatedConformanceWitness();
  uint64_t v36 = v71;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 + 16) + 48))(v71, v34);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v32, v34);
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(*(void *)(v33 + 8) + 24))(v29);
  sub_1C3F7E98C(v36, v37);
  swift_bridgeObjectRelease();
  return sub_1C43421F0((uint64_t)v73);
}

Swift::Bool __swiftcall CRStruct_6.needToFinalizeTimestamps()()
{
  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v61 = (char *)&v60 - v4;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v65 = (char *)&v60 - v5;
  uint64_t v71 = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(v71 - 8);
  MEMORY[0x1F4188790](v71);
  uint64_t v69 = (char *)&v60 - v6;
  uint64_t v75 = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(v75 - 8);
  MEMORY[0x1F4188790](v75);
  BOOL v73 = (char *)&v60 - v7;
  uint64_t v78 = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(void *)(v78 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v78);
  uint64_t v76 = (char *)&v60 - v9;
  uint64_t v91 = *(void *)(v2 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v90 = (char *)&v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v89 = (char *)&v60 - v13;
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v88 = (char *)&v60 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v86 = (char *)&v60 - v17;
  MEMORY[0x1F4188790](v16);
  unsigned int v82 = (char *)&v60 - v18;
  uint64_t v84 = swift_getAssociatedTypeWitness();
  uint64_t v85 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v83 = (char *)&v60 - v19;
  uint64_t v92 = v3;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 112))(v93, v2, v3);
  uint64_t v81 = v93[4];
  uint64_t v79 = v93[5];
  uint64_t v80 = v93[7];
  uint64_t v20 = v93[8];
  uint64_t v21 = v93[11];
  uint64_t v22 = v93[14];
  uint64_t v23 = v93[17];
  sub_1C4342124((uint64_t)v93);
  swift_bridgeObjectRelease();
  uint64_t v60 = v23;
  swift_release();
  uint64_t v24 = v82;
  swift_bridgeObjectRelease();
  uint64_t v64 = v22;
  uint64_t v25 = v2;
  swift_release();
  uint64_t v26 = v87;
  swift_bridgeObjectRelease();
  uint64_t v68 = v21;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v72 = v20;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = v83;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v28 = v84;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v30 = v27;
  LOBYTE(v27) = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 56))(v28);
  uint64_t v31 = v91;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v30, v28);
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v32(v24, v26, v25);
  if (v27)
  {
    uint64_t v33 = *(void (**)(char *, uint64_t))(v31 + 8);
    v33(v24, v25);
    uint64_t v34 = v86;
    v32(v86, v26, v25);
LABEL_4:
    uint64_t v41 = v90;
    uint64_t v42 = v88;
    v33(v34, v25);
    v32(v42, v26, v25);
LABEL_5:
    uint64_t v43 = v89;
    v33(v42, v25);
    v32(v43, v26, v25);
LABEL_6:
    v33(v43, v25);
    v32(v41, v26, v25);
    goto LABEL_7;
  }
  uint64_t v35 = v76;
  swift_getAtKeyPath();
  uint64_t v36 = v78;
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  char v38 = (*(uint64_t (**)(uint64_t))(*(void *)(v37 + 16) + 56))(v36);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v35, v36);
  uint64_t v40 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v39 = v31 + 8;
  uint64_t v33 = v40;
  v40(v24, v25);
  uint64_t v34 = v86;
  v32(v86, v26, v25);
  if (v38) {
    goto LABEL_4;
  }
  uint64_t v46 = v73;
  swift_getAtKeyPath();
  uint64_t v47 = v75;
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  LODWORD(v85) = (*(uint64_t (**)(uint64_t))(*(void *)(v48 + 16) + 56))(v47);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v46, v47);
  uint64_t v91 = v39;
  v33(v34, v25);
  uint64_t v42 = v88;
  v32(v88, v26, v25);
  uint64_t v41 = v90;
  if (v85) {
    goto LABEL_5;
  }
  uint64_t v49 = v69;
  swift_getAtKeyPath();
  uint64_t v50 = v42;
  uint64_t v51 = v71;
  uint64_t v52 = swift_getAssociatedConformanceWitness();
  LODWORD(v86) = (*(uint64_t (**)(uint64_t))(*(void *)(v52 + 16) + 56))(v51);
  (*(void (**)(char *, uint64_t))(v70 + 8))(v49, v51);
  v33(v50, v25);
  uint64_t v53 = v89;
  v32(v89, v26, v25);
  if (v86)
  {
    uint64_t v43 = v53;
    goto LABEL_6;
  }
  uint64_t v54 = v65;
  swift_getAtKeyPath();
  uint64_t v55 = v67;
  uint64_t v56 = swift_getAssociatedConformanceWitness();
  LODWORD(v88) = (*(uint64_t (**)(uint64_t))(*(void *)(v56 + 16) + 56))(v55);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v54, v55);
  v33(v53, v25);
  v32(v41, v26, v25);
  if ((v88 & 1) == 0)
  {
    uint64_t v57 = v61;
    swift_getAtKeyPath();
    uint64_t v58 = AssociatedTypeWitness;
    uint64_t v59 = swift_getAssociatedConformanceWitness();
    char v44 = (*(uint64_t (**)(uint64_t))(*(void *)(v59 + 16) + 56))(v58);
    sub_1C43421F0((uint64_t)v93);
    (*(void (**)(char *, uint64_t))(v62 + 8))(v57, v58);
    v33(v41, v25);
    return v44 & 1;
  }
LABEL_7:
  v33(v41, v25);
  sub_1C43421F0((uint64_t)v93);
  char v44 = 1;
  return v44 & 1;
}

uint64_t CRStruct_6.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(a3 + 8) + 112))(&v30, a2);
  sub_1C4342124((uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v25 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 64);
  uint64_t v5 = swift_checkMetadataState();
  v4(a1, v5, v3);
  v25(v29, 0);
  swift_release();
  sub_1C4342124((uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v6 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 64);
  uint64_t v9 = swift_checkMetadataState();
  v8(a1, v9, v7);
  v6(v29, 0);
  swift_release();
  sub_1C4342124((uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 64);
  uint64_t v13 = swift_checkMetadataState();
  v12(a1, v13, v11);
  v10(v29, 0);
  swift_release();
  sub_1C4342124((uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v26 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 64);
  uint64_t v16 = swift_checkMetadataState();
  v15(a1, v16, v14);
  v26(v29, 0);
  swift_release();
  sub_1C4342124((uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v17 + 64);
  uint64_t v19 = swift_checkMetadataState();
  v18(a1, v19, v17);
  v27(v29, 0);
  swift_release();
  sub_1C4342124((uint64_t)&v30);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v20 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 64);
  uint64_t v23 = swift_checkMetadataState();
  v22(a1, v23, v21);
  v20(v29, 0);
  swift_release();
  return sub_1C43421F0((uint64_t)&v30);
}

uint64_t CRStruct_6.minEncodingVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v56 = a3;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v37 = (char *)v36 - v6;
  uint64_t v43 = swift_getAssociatedTypeWitness();
  uint64_t v42 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v41 = (char *)v36 - v7;
  uint64_t v47 = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v45 = (char *)v36 - v8;
  uint64_t v51 = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  uint64_t v49 = (char *)v36 - v9;
  uint64_t v54 = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v52 = (char *)v36 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)v36 - v13;
  (*(void (**)(_WORD *__return_ptr, uint64_t, uint64_t))(v5 + 112))(&v57[1], a1, v5);
  uint64_t v48 = *(void *)&v57[33];
  uint64_t v44 = *(void *)&v57[45];
  uint64_t v40 = *(void *)&v57[57];
  v36[1] = *(void *)&v57[69];
  uint64_t v15 = *(uint64_t (**)(uint64_t))(*(void *)(v5 + 8) + 24);
  uint64_t v55 = v3;
  uint64_t v16 = v15(a1);
  sub_1C447829C(v16, (unsigned char *)v57 + 1);
  swift_bridgeObjectRelease();
  unsigned int v17 = HIBYTE(v57[0]);
  if (HIBYTE(v57[0]) > 1u) {
    goto LABEL_20;
  }
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8)
                                                       + 32))(v57, v11);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (LOBYTE(v57[0]) > v17) {
    unsigned int v17 = LOBYTE(v57[0]);
  }
  HIBYTE(v57[0]) = v17;
  if (v17 > 1) {
    goto LABEL_20;
  }
  uint64_t v19 = v52;
  swift_getAtKeyPath();
  uint64_t v20 = v54;
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v21 + 16) + 8) + 32))(v57, v20);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v19, v20);
  if (LOBYTE(v57[0]) > v17) {
    unsigned int v17 = LOBYTE(v57[0]);
  }
  HIBYTE(v57[0]) = v17;
  if (v17 > 1) {
    goto LABEL_20;
  }
  uint64_t v22 = v49;
  swift_getAtKeyPath();
  uint64_t v23 = v51;
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v24 + 16) + 8) + 32))(v57, v23);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v23);
  if (LOBYTE(v57[0]) > v17) {
    unsigned int v17 = LOBYTE(v57[0]);
  }
  HIBYTE(v57[0]) = v17;
  if (v17 > 1) {
    goto LABEL_20;
  }
  uint64_t v25 = v45;
  swift_getAtKeyPath();
  uint64_t v26 = v47;
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v27 + 16) + 8) + 32))(v57, v26);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v25, v26);
  if (LOBYTE(v57[0]) > v17) {
    unsigned int v17 = LOBYTE(v57[0]);
  }
  HIBYTE(v57[0]) = v17;
  if (v17 > 1) {
    goto LABEL_20;
  }
  uint64_t v28 = v41;
  swift_getAtKeyPath();
  uint64_t v29 = v43;
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v30 + 16) + 8) + 32))(v57, v29);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v28, v29);
  if (LOBYTE(v57[0]) > v17) {
    unsigned int v17 = LOBYTE(v57[0]);
  }
  HIBYTE(v57[0]) = v17;
  if (v17 > 1)
  {
LABEL_20:
    uint64_t result = sub_1C43421F0((uint64_t)&v57[1]);
  }
  else
  {
    uint64_t v31 = v37;
    swift_getAtKeyPath();
    uint64_t v32 = AssociatedTypeWitness;
    uint64_t v33 = swift_getAssociatedConformanceWitness();
    (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v33 + 16) + 8) + 32))(v57, v32);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v31, v32);
    unsigned int v34 = LOBYTE(v57[0]);
    uint64_t result = sub_1C43421F0((uint64_t)&v57[1]);
    if (v34 > v17) {
      LOBYTE(v17) = v34;
    }
  }
  *uint64_t v56 = v17;
  return result;
}

uint64_t CRStruct_6<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9)
{
  void (*v23)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  int64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t i;
  unint64_t v64;
  int64_t v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void v135[21];

  uint64_t v101 = a4;
  uint64_t v80 = a8;
  uint64_t v85 = a7;
  uint64_t v90 = a6;
  uint64_t v94 = a5;
  uint64_t v11 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  BOOL v73 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v74 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v75 = (char *)&v69 - v13;
  uint64_t v79 = swift_getAssociatedTypeWitness();
  uint64_t v76 = *(void *)(v79 - 8);
  MEMORY[0x1F4188790](v79);
  uint64_t v78 = (char *)&v69 - v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(v15 - 8);
  uint64_t v84 = v15;
  MEMORY[0x1F4188790](v15);
  unsigned int v82 = (char *)&v69 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v88 = *(void *)(v17 - 8);
  uint64_t v89 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v87 = (char *)&v69 - v18;
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v92 = *(void *)(v19 - 8);
  uint64_t v93 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v104 = (char *)&v69 - v20;
  uint64_t v100 = swift_getAssociatedTypeWitness();
  uint64_t v97 = *(void *)(v100 - 8);
  MEMORY[0x1F4188790](v100);
  unsigned int v98 = (char *)&v69 - v21;
  uint64_t v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF70);
  uint64_t v103 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v112 = (char *)&v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 112);
  uint64_t v70 = v11;
  uint64_t v71 = a2;
  v23(&v117, a2, v11);
  uint64_t v99 = v117;
  uint64_t v24 = v119;
  uint64_t v109 = v122;
  unsigned int v110 = v124;
  uint64_t v111 = v121;
  uint64_t v115 = v127;
  uint64_t v116 = v128;
  uint64_t v113 = v125;
  uint64_t v114 = v130;
  uint64_t v25 = v131;
  uint64_t v26 = v133;
  uint64_t v27 = v134;
  v135[0] = v117;
  v135[1] = v118;
  uint64_t v107 = v118;
  v135[2] = v119;
  v135[3] = v120;
  uint64_t v91 = v120;
  v135[4] = v121;
  v135[5] = v122;
  uint64_t v86 = v123;
  v135[6] = v123;
  v135[7] = v124;
  v135[8] = v125;
  v135[9] = v126;
  uint64_t v81 = v126;
  v135[10] = v127;
  v135[11] = v128;
  uint64_t v77 = v129;
  v135[12] = v129;
  v135[13] = v130;
  v135[14] = v131;
  v135[15] = v132;
  uint64_t v72 = v132;
  v135[16] = v133;
  v135[17] = v134;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C42469F0();
  sub_1C44986A8();
  sub_1C4342124((uint64_t)v135);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = v98;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v135);
  uint64_t v95 = v24;
  swift_release();
  uint64_t v106 = v27;
  swift_release();
  uint64_t v96 = v26;
  uint64_t v29 = v107;
  swift_bridgeObjectRelease();
  uint64_t v105 = v25;
  uint64_t v30 = v28;
  swift_release();
  uint64_t v31 = v100;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v117 = v99;
  uint64_t v118 = v29;
  uint64_t v32 = v112;
  uint64_t v33 = v108;
  unsigned int v34 = v102;
  sub_1C4498048();
  if (v34)
  {
    sub_1C43421F0((uint64_t)v135);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v97 + 8))(v30, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v32, v33);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v30, v31);
  sub_1C4342124((uint64_t)v135);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v102 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v135);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v36 = v111;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v37 = v112;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v38 = v108;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v117 = v91;
  uint64_t v118 = v36;
  uint64_t v39 = v93;
  uint64_t v40 = v102;
  sub_1C4498048();
  if (v40)
  {
    sub_1C43421F0((uint64_t)v135);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v92 + 8))(v104, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v37, v38);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v104, v39);
  sub_1C4342124((uint64_t)v135);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = v87;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v135);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v117 = v86;
  uint64_t v118 = v110;
  uint64_t v42 = v89;
  sub_1C4498048();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v41, v42);
  sub_1C4342124((uint64_t)v135);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v82;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v135);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v117 = v81;
  uint64_t v118 = v115;
  uint64_t v44 = v84;
  sub_1C4498048();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v43, v44);
  sub_1C4342124((uint64_t)v135);
  swift_bridgeObjectRelease();
  uint64_t v102 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v78;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v135);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v46 = v108;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v47 = v112;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v117 = v77;
  uint64_t v118 = v114;
  uint64_t v48 = v79;
  uint64_t v49 = v102;
  sub_1C4498048();
  if (v49)
  {
    sub_1C43421F0((uint64_t)v135);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v45, v48);
    return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v47, v46);
  }
  uint64_t v104 = a9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v76 + 8))(v45, v48);
  sub_1C4342124((uint64_t)v135);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v102 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342124((uint64_t)v135);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v50 = v75;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v51 = v112;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v52 = v108;
  swift_bridgeObjectRelease();
  uint64_t v117 = v72;
  uint64_t v118 = v96;
  uint64_t v53 = v74;
  uint64_t v54 = v102;
  sub_1C4498048();
  if (v54)
  {
    sub_1C43421F0((uint64_t)v135);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v50, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v51, v52);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v50, v53);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v70 + 8) + 24))(v71);
  uint64_t v55 = result;
  uint64_t v56 = 0;
  uint64_t v57 = *(void *)(result + 64);
  uint64_t v115 = result + 64;
  uint64_t v58 = 1 << *(unsigned char *)(result + 32);
  uint64_t v59 = -1;
  if (v58 < 64) {
    uint64_t v59 = ~(-1 << v58);
  }
  uint64_t v60 = v59 & v57;
  uint64_t v116 = (unint64_t)(v58 + 63) >> 6;
  if ((v59 & v57) == 0) {
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v61 = __clz(__rbit64(v60));
  v60 &= v60 - 1;
  for (unint64_t i = v61 | (v56 << 6); ; unint64_t i = __clz(__rbit64(v64)) + (v56 << 6))
  {
    uint64_t v66 = (uint64_t *)(*(void *)(v55 + 48) + 16 * i);
    uint64_t v67 = *v66;
    uint64_t v68 = v66[1];
    v135[20] = *(void *)(*(void *)(v55 + 56) + 8 * i);
    uint64_t v117 = v67;
    uint64_t v118 = v68;
    sub_1C4246A44();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C4498048();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v60) {
      goto LABEL_12;
    }
LABEL_13:
    if (__OFADD__(v56++, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v56 >= v116) {
      goto LABEL_30;
    }
    uint64_t v64 = *(void *)(v115 + 8 * v56);
    if (!v64) {
      break;
    }
LABEL_23:
    uint64_t v60 = (v64 - 1) & v64;
  }
  uint64_t v65 = v56 + 1;
  if (v56 + 1 >= v116) {
    goto LABEL_30;
  }
  uint64_t v64 = *(void *)(v115 + 8 * v65);
  if (v64) {
    goto LABEL_22;
  }
  uint64_t v65 = v56 + 2;
  if (v56 + 2 >= v116) {
    goto LABEL_30;
  }
  uint64_t v64 = *(void *)(v115 + 8 * v65);
  if (v64) {
    goto LABEL_22;
  }
  uint64_t v65 = v56 + 3;
  if (v56 + 3 >= v116)
  {
LABEL_30:
    sub_1C43421F0((uint64_t)v135);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v51, v108);
  }
  uint64_t v64 = *(void *)(v115 + 8 * v65);
  if (v64)
  {
LABEL_22:
    uint64_t v56 = v65;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v56 = v65 + 1;
    if (__OFADD__(v65, 1)) {
      break;
    }
    if (v56 >= v116) {
      goto LABEL_30;
    }
    uint64_t v64 = *(void *)(v115 + 8 * v56);
    ++v65;
    if (v64) {
      goto LABEL_23;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t CRStruct_7.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v30)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t AssociatedConformanceWitness;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void v67[2];
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t AssociatedTypeWitness;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  void v112[21];

  uint64_t v5 = v4;
  uint64_t v109 = a1;
  uint64_t v107 = a4;
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v93 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v90 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v91 = (char *)v67 - v11;
  uint64_t v88 = swift_getAssociatedTypeWitness();
  uint64_t v89 = *(void *)(v88 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v88);
  uint64_t v86 = (char *)v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v87 = (char *)v67 - v14;
  uint64_t v84 = swift_getAssociatedTypeWitness();
  uint64_t v85 = *(void *)(v84 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v84);
  unsigned int v82 = (char *)v67 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v83 = (char *)v67 - v17;
  uint64_t v80 = swift_getAssociatedTypeWitness();
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v80);
  uint64_t v78 = (char *)v67 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v79 = (char *)v67 - v20;
  uint64_t v76 = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(void *)(v76 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v76);
  uint64_t v74 = (char *)v67 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v75 = (char *)v67 - v23;
  uint64_t v72 = swift_getAssociatedTypeWitness();
  BOOL v73 = *(void *)(v72 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v72);
  uint64_t v70 = (char *)v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v71 = (char *)v67 - v26;
  uint64_t v68 = swift_getAssociatedTypeWitness();
  uint64_t v69 = *(void *)(v68 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v68);
  v67[0] = (char *)v67 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  v67[1] = (char *)v67 - v29;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v108 = v8;
  uint64_t v30 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 128);
  uint64_t v106 = a2;
  v30(v112, a2, v8);
  uint64_t v94 = v112[2];
  uint64_t v104 = v112[4];
  unsigned int v110 = v112[7];
  uint64_t v103 = v112[8];
  uint64_t v31 = v112[11];
  uint64_t v32 = v112[13];
  uint64_t v33 = v112[17];
  uint64_t v35 = v112[19];
  unsigned int v34 = v112[20];
  uint64_t v111 = v112[1];
  uint64_t v36 = v112[5];
  uint64_t v99 = v112[10];
  uint64_t v37 = v112[14];
  uint64_t v105 = v112[16];
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  uint64_t v102 = v34;
  swift_release();
  uint64_t v100 = v35;
  swift_bridgeObjectRelease();
  unsigned int v98 = v33;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v101 = v37;
  swift_release();
  uint64_t v95 = v32;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v96 = v36;
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = v67[0];
  swift_getAtKeyPath();
  swift_release();
  uint64_t v39 = v68;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(v109, v39);
  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v38, v39);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v97 = v31;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = v70;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v42 = v72;
  uint64_t v43 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v43 + 16) + 24))(v109, v42);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v42);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v74;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v45 = v76;
  uint64_t v46 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 + 16) + 24))(v109, v45);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v44, v45);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = v78;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v48 = v80;
  uint64_t v49 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 + 16) + 24))(v109, v48);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v47, v48);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v50 = v82;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v51 = v84;
  uint64_t v52 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 + 16) + 24))(v109, v51);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v51);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v53 = v86;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v54 = v88;
  uint64_t v55 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 + 16) + 24))(v109, v54);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v53, v54);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v112);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v56 = v90;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v57 = v108;
  uint64_t v58 = v106;
  uint64_t v59 = AssociatedTypeWitness;
  uint64_t v60 = swift_getAssociatedConformanceWitness();
  uint64_t v61 = v109;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 + 16) + 24))(v109, v59);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v56, v59);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v62 = *(void *)(v57 + 8);
  uint64_t v63 = v58;
  uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 24))(v58, v62);
  uint64_t v65 = sub_1C4341774(v64, v61);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v62 + 32))(v65, v63, v62);
  return sub_1C43423A0((uint64_t)v112);
}

uint64_t CRStruct_7.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v32)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t AssociatedConformanceWitness;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t AssociatedTypeWitness;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  void v116[21];
  unint64_t v117;

  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v96 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v95 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v94 = (char *)&v70 - v12;
  uint64_t v93 = swift_getAssociatedTypeWitness();
  uint64_t v92 = *(void *)(v93 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v93);
  uint64_t v91 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v90 = (char *)&v70 - v15;
  uint64_t v89 = swift_getAssociatedTypeWitness();
  uint64_t v88 = *(void *)(v89 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v89);
  uint64_t v87 = (char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v86 = (char *)&v70 - v18;
  uint64_t v85 = swift_getAssociatedTypeWitness();
  uint64_t v84 = *(void *)(v85 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v85);
  uint64_t v83 = (char *)&v70 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  unsigned int v82 = (char *)&v70 - v21;
  uint64_t v81 = swift_getAssociatedTypeWitness();
  uint64_t v80 = *(void *)(v81 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v81);
  uint64_t v79 = (char *)&v70 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v78 = (char *)&v70 - v24;
  uint64_t v77 = swift_getAssociatedTypeWitness();
  uint64_t v76 = *(void *)(v77 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v77);
  uint64_t v75 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v74 = (char *)&v70 - v27;
  BOOL v73 = swift_getAssociatedTypeWitness();
  uint64_t v72 = *(void *)(v73 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v73);
  uint64_t v71 = (char *)&v70 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v70 = (char *)&v70 - v30;
  if (a1) {
    unint64_t v31 = a1;
  }
  else {
    unint64_t v31 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  uint64_t v117 = v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v111 = a4;
  uint64_t v112 = v5;
  uint64_t v32 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 128);
  swift_bridgeObjectRetain();
  uint64_t v113 = a2;
  v32(v116, a2, v9);
  unsigned int v110 = v116[2];
  uint64_t v114 = v116[4];
  uint64_t v101 = v116[5];
  uint64_t v115 = v116[7];
  uint64_t v33 = v116[8];
  unsigned int v34 = v116[10];
  uint64_t v35 = v116[13];
  uint64_t v36 = v116[17];
  uint64_t v37 = v116[19];
  uint64_t v108 = v9;
  uint64_t v38 = v116[20];
  uint64_t v103 = v116[1];
  uint64_t v39 = v116[11];
  uint64_t v40 = v116[14];
  uint64_t v99 = v116[16];
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  uint64_t v106 = v38;
  swift_release();
  uint64_t v109 = v37;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v107 = v40;
  swift_release();
  uint64_t v102 = v35;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v100 = v34;
  swift_bridgeObjectRelease();
  uint64_t v105 = v33;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = v39;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v42 = v71;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v43 = v73;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(&v117, v43);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v42, v43);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v104 = v41;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v36;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v46 = v75;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v47 = v77;
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v48 + 16) + 24))(&v117, v47);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v46, v47);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unsigned int v98 = v45;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = v79;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v50 = v81;
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v51 + 16) + 24))(&v117, v50);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v50);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v52 = v83;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v53 = v85;
  uint64_t v54 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v54 + 16) + 24))(&v117, v53);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v52, v53);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v55 = v87;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v56 = v89;
  uint64_t v57 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v57 + 16) + 24))(&v117, v56);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v55, v56);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v58 = v91;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v59 = v93;
  uint64_t v60 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v60 + 16) + 24))(&v117, v59);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v58, v59);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v116);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v61 = v95;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v62 = v108;
  uint64_t v63 = v113;
  uint64_t v64 = AssociatedTypeWitness;
  uint64_t v65 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v65 + 16) + 24))(&v117, v64);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v61, v64);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v66 = *(void *)(v62 + 8);
  uint64_t v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 24))(v63, v66);
  uint64_t v68 = sub_1C4341774(v67, (uint64_t)&v117);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 32))(v68, v63, v66);
  return sub_1C43423A0((uint64_t)v116);
}

uint64_t static CRStruct_7.fieldKeys.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(*(void *)(a2 + 8) + 128))(v18);
  uint64_t v5 = v18[0];
  uint64_t v6 = v18[3];
  uint64_t v13 = v18[4];
  uint64_t v15 = v18[7];
  uint64_t v16 = v18[1];
  uint64_t v7 = v18[6];
  uint64_t v8 = v18[9];
  uint64_t v14 = v18[10];
  uint64_t v9 = v18[12];
  uint64_t v10 = v18[15];
  uint64_t v2 = v18[19];
  uint64_t v11 = v18[18];
  uint64_t v12 = v18[13];
  uint64_t v17 = v18[16];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0250);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1C44A50E0;
  sub_1C43422B8((uint64_t)v18);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 32) = v5;
  *(void *)(v3 + 40) = v16;
  sub_1C43422B8((uint64_t)v18);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 48) = v6;
  *(void *)(v3 + 56) = v13;
  sub_1C43422B8((uint64_t)v18);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 64) = v7;
  *(void *)(v3 + 72) = v15;
  sub_1C43422B8((uint64_t)v18);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 80) = v8;
  *(void *)(v3 + 88) = v14;
  sub_1C43422B8((uint64_t)v18);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 96) = v9;
  *(void *)(v3 + 104) = v12;
  sub_1C43422B8((uint64_t)v18);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 112) = v10;
  *(void *)(v3 + 120) = v17;
  sub_1C43422B8((uint64_t)v18);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 128) = v11;
  *(void *)(v3 + 136) = v2;
  sub_1C43423A0((uint64_t)v18);
  return v3;
}

uint64_t CRStruct_7.merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v12)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, void);
  uint64_t v21;
  uint64_t AssociatedConformanceWitness;
  char *v23;
  void (*v24)(char *, void);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  void (*v28)(char *, void);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  void (*v32)(char *, void);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, void);
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void (*v40)(char *, void);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  void (*v44)(char *, void);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(char *, void);
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t AssociatedTypeWitness;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92[8];
  void v93[21];

  uint64_t v91 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v72 = (char *)&v53 - v5;
  uint64_t v70 = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v69 = (char *)&v53 - v6;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v68 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v66 = (char *)&v53 - v7;
  uint64_t v64 = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (char *)&v53 - v8;
  uint64_t v61 = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v60 = (char *)&v53 - v9;
  uint64_t v58 = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (char *)&v53 - v10;
  uint64_t v55 = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v54 = (char *)&v53 - v11;
  uint64_t v89 = v4;
  uint64_t v12 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 128);
  uint64_t v90 = a2;
  v12(v93, a2, v4);
  uint64_t v78 = v93[2];
  uint64_t v76 = v93[4];
  uint64_t v86 = v93[5];
  uint64_t v83 = v93[7];
  uint64_t v87 = v93[8];
  uint64_t v13 = v93[10];
  uint64_t v14 = v93[11];
  uint64_t v15 = v93[13];
  uint64_t v16 = v93[14];
  uint64_t v17 = v93[20];
  unsigned int v82 = v93[1];
  uint64_t v18 = v93[16];
  uint64_t v77 = v93[17];
  uint64_t v85 = v93[19];
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  uint64_t v81 = v17;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v84 = v18;
  swift_bridgeObjectRelease();
  uint64_t v80 = v16;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v88 = v14;
  swift_release();
  uint64_t v79 = v13;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = v54;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v20 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v21 = v55;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v19, v21);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v19, v21);
  v20(v92, 0);
  swift_release();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = v57;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v24 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v25 = v58;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v26 + 8) + 8))(v23, v25);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v23, v25);
  v24(v92, 0);
  swift_release();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v75 = v15;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = v60;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v28 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v29 = v61;
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v30 + 8) + 8))(v27, v29);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v27, v29);
  v28(v92, 0);
  swift_release();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v31 = v63;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v32 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v33 = v64;
  unsigned int v34 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v34 + 8) + 8))(v31, v33);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v31, v33);
  v32(v92, 0);
  swift_release();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = v66;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v36 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v37 = v67;
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v38 + 8) + 8))(v35, v37);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v35, v37);
  v36(v92, 0);
  swift_release();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = v69;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v40 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v41 = v70;
  uint64_t v42 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v42 + 8) + 8))(v39, v41);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v39, v41);
  v40(v92, 0);
  swift_release();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C43422B8((uint64_t)v93);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v72;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v44 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v45 = v89;
  uint64_t v46 = v90;
  uint64_t v47 = AssociatedTypeWitness;
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v48 + 8) + 8))(v43, v47);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v43, v47);
  v44(v92, 0);
  swift_release();
  uint64_t v49 = *(void *)(v45 + 8);
  uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v49 + 24))(v46, v49);
  uint64_t v51 = (void (*)(char *, void))(*(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 40))(v92, v46, v49);
  sub_1C4477B90(v50);
  swift_bridgeObjectRelease();
  v51(v92, 0);
  (*(void (**)(uint64_t, uint64_t))(v49 + 64))(v46, v49);
  return sub_1C43423A0((uint64_t)v93);
}

uint64_t CRStruct_7.observableDifference(from:with:)@<X0>(uint64_t a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v48)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(char *, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  char *v65;
  char *v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t);
  char *v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  char *v73;
  char *v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t);
  char *v77;
  char *v78;
  uint64_t v79;
  void (*v80)(char *, uint64_t);
  char *v81;
  char *v82;
  uint64_t v83;
  void (*v84)(char *, uint64_t);
  char *v85;
  BOOL v86;
  char *v87;
  BOOL v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  char *v93;
  BOOL v94;
  BOOL v95;
  void (*v96)(char *, uint64_t);
  BOOL v97;
  void (*v98)(char *, uint64_t);
  void (*v99)(char *, uint64_t);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  int *TupleTypeMetadata;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  char *v153;
  uint64_t v154;
  uint64_t AssociatedTypeWitness;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  char *v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  void *v196;
  void *v197;
  void *v198;
  void *v199;
  uint64_t v200;
  void (*v201)(char *, uint64_t);
  void (*v202)(char *, uint64_t);
  char *v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  void *v212;
  void *v213;
  void *v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  void *v218;
  void *v219;
  void *v220;

  uint64_t v201 = a2;
  uint64_t v200 = a1;
  uint64_t v164 = a5;
  uint64_t v6 = *(void *)(a4 + 8);
  uint64_t v202 = (void (*)(char *, uint64_t))&associated type descriptor for CRStruct_Base_7.Type_1;
  swift_getAssociatedTypeWitness();
  uint64_t v203 = (char *)&associated conformance descriptor for CRStruct_Base_7.CRStruct_Base_7.Type_1: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v204 = sub_1C4497B38();
  uint64_t v198 = &associated type descriptor for CRStruct_Base_7.Type_2;
  swift_getAssociatedTypeWitness();
  uint64_t v199 = &associated conformance descriptor for CRStruct_Base_7.CRStruct_Base_7.Type_2: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v205 = sub_1C4497B38();
  uint64_t v196 = &associated type descriptor for CRStruct_Base_7.Type_3;
  swift_getAssociatedTypeWitness();
  uint64_t v197 = &associated conformance descriptor for CRStruct_Base_7.CRStruct_Base_7.Type_3: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v206 = sub_1C4497B38();
  uint64_t v194 = &associated type descriptor for CRStruct_Base_7.Type_4;
  swift_getAssociatedTypeWitness();
  uint64_t v195 = &associated conformance descriptor for CRStruct_Base_7.CRStruct_Base_7.Type_4: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v207 = sub_1C4497B38();
  uint64_t v192 = &associated type descriptor for CRStruct_Base_7.Type_5;
  swift_getAssociatedTypeWitness();
  uint64_t v193 = &associated conformance descriptor for CRStruct_Base_7.CRStruct_Base_7.Type_5: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v208 = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v209 = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v210 = sub_1C4497B38();
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  MEMORY[0x1F4188790](TupleTypeMetadata);
  uint64_t v120 = (char *)&v113 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v158 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v156 = (char *)&v113 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v153 = (char *)&v113 - v10;
  uint64_t v154 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v119 = swift_getAssociatedTypeWitness();
  uint64_t v171 = sub_1C4497B38();
  uint64_t v170 = *(void *)(v171 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v171);
  uint64_t v161 = (char *)&v113 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v187 = (char *)&v113 - v13;
  uint64_t v146 = swift_getAssociatedTypeWitness();
  uint64_t v149 = *(void *)(v146 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v146);
  uint64_t v147 = (char *)&v113 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v169 = (char *)&v113 - v16;
  uint64_t v145 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v118 = swift_getAssociatedTypeWitness();
  uint64_t v186 = sub_1C4497B38();
  uint64_t v160 = *(void *)(v186 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v186);
  uint64_t v159 = (char *)&v113 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  unint64_t v185 = (char *)&v113 - v19;
  uint64_t v141 = swift_getAssociatedTypeWitness();
  uint64_t v143 = *(void *)(v141 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v141);
  uint64_t v142 = (char *)&v113 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v168 = (char *)&v113 - v22;
  uint64_t v139 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v117 = swift_getAssociatedTypeWitness();
  uint64_t v184 = sub_1C4497B38();
  uint64_t v175 = *(void *)(v184 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v184);
  uint64_t v157 = (char *)&v113 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v183 = (char *)&v113 - v25;
  uint64_t v136 = swift_getAssociatedTypeWitness();
  uint64_t v138 = *(void *)(v136 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v136);
  uint64_t v137 = (char *)&v113 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v167 = (char *)&v113 - v28;
  uint64_t v135 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v116 = swift_getAssociatedTypeWitness();
  uint64_t v182 = sub_1C4497B38();
  uint64_t v174 = *(void *)(v182 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v182);
  uint64_t v152 = (char *)&v113 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v181 = (char *)&v113 - v31;
  uint64_t v132 = swift_getAssociatedTypeWitness();
  uint64_t v134 = *(void *)(v132 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v132);
  uint64_t v133 = (char *)&v113 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v166 = (char *)&v113 - v34;
  uint64_t v131 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v115 = swift_getAssociatedTypeWitness();
  uint64_t v180 = sub_1C4497B38();
  uint64_t v173 = *(void *)(v180 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v180);
  uint64_t v148 = (char *)&v113 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  uint64_t v179 = (char *)&v113 - v37;
  uint64_t v128 = swift_getAssociatedTypeWitness();
  uint64_t v130 = *(void *)(v128 - 8);
  uint64_t v38 = MEMORY[0x1F4188790](v128);
  uint64_t v129 = (char *)&v113 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v126 = (char *)&v113 - v40;
  uint64_t v127 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v114 = swift_getAssociatedTypeWitness();
  uint64_t v178 = sub_1C4497B38();
  uint64_t v172 = *(void *)(v178 - 8);
  uint64_t v41 = MEMORY[0x1F4188790](v178);
  uint64_t v144 = (char *)&v113 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v41);
  uint64_t v177 = (char *)&v113 - v43;
  uint64_t v123 = swift_getAssociatedTypeWitness();
  uint64_t v125 = *(void *)(v123 - 8);
  uint64_t v44 = MEMORY[0x1F4188790](v123);
  uint64_t v124 = (char *)&v113 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v44);
  uint64_t v165 = (char *)&v113 - v46;
  uint64_t v122 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v140 = swift_getAssociatedTypeWitness();
  uint64_t v151 = sub_1C4497B38();
  uint64_t v150 = *(void *)(v151 - 8);
  MEMORY[0x1F4188790](v151);
  uint64_t v176 = (char *)&v113 - v47;
  uint64_t v48 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 128);
  uint64_t v163 = a3;
  uint64_t v162 = v6;
  v48(&v204, a3, v6);
  uint64_t v193 = (void *)v206;
  uint64_t v199 = (void *)v208;
  uint64_t v202 = (void (*)(char *, uint64_t))v209;
  uint64_t v203 = v211;
  uint64_t v49 = v212;
  uint64_t v50 = v216;
  uint64_t v51 = v217;
  uint64_t v191 = v205;
  uint64_t v52 = v213;
  uint64_t v53 = v214;
  uint64_t v54 = v215;
  uint64_t v192 = v218;
  uint64_t v197 = v219;
  uint64_t v198 = v220;
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v55 = v51;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v190 = v54;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v195 = v52;
  swift_bridgeObjectRelease();
  uint64_t v196 = v49;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v56 = v124;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v57 = v165;
  uint64_t v58 = v123;
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v122 + 40))(v56, v201, v123);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v125 + 8);
  v59(v56, v58);
  v59(v57, v58);
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v189 = v55;
  swift_bridgeObjectRelease();
  uint64_t v188 = v50;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v194 = v53;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v60 = v126;
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v61 = v129;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v62 = v128;
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v127 + 40))(v61, v201, v128);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v130 + 8);
  v63(v61, v62);
  v63(v60, v62);
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v64 = v133;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v65 = v64;
  uint64_t v66 = v166;
  uint64_t v67 = v132;
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v131 + 40))(v64, v201, v132);
  uint64_t v68 = *(void (**)(char *, uint64_t))(v134 + 8);
  v68(v65, v67);
  v68(v66, v67);
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v69 = v137;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v70 = v167;
  uint64_t v71 = v136;
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v135 + 40))(v69, v201, v136);
  uint64_t v72 = *(void (**)(char *, uint64_t))(v138 + 8);
  v72(v69, v71);
  v72(v70, v71);
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  BOOL v73 = v142;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v74 = v168;
  uint64_t v75 = v141;
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v139 + 40))(v73, v201, v141);
  uint64_t v76 = *(void (**)(char *, uint64_t))(v143 + 8);
  v76(v73, v75);
  v76(v74, v75);
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v77 = v147;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v78 = v169;
  uint64_t v79 = v146;
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v145 + 40))(v77, v201, v146);
  uint64_t v80 = *(void (**)(char *, uint64_t))(v149 + 8);
  v80(v77, v79);
  v80(v78, v79);
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v81 = v153;
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)&v204);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unsigned int v82 = v156;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v83 = AssociatedTypeWitness;
  (*(void (**)(char *, void (*)(char *, uint64_t), uint64_t))(v154 + 40))(v82, v201, AssociatedTypeWitness);
  sub_1C43423A0((uint64_t)&v204);
  uint64_t v84 = *(void (**)(char *, uint64_t))(v158 + 8);
  v84(v82, v83);
  v84(v81, v83);
  uint64_t v85 = v144;
  uint64_t v86 = 1;
  LODWORD(v84) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v140 - 8) + 48))(v176, 1);
  (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v85, v177, v178);
  if (v84 == 1) {
    uint64_t v86 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v114 - 8) + 48))(v85, 1) != 1;
  }
  uint64_t v203 = *(char **)(v172 + 8);
  ((void (*)(char *, uint64_t))v203)(v85, v178);
  uint64_t v87 = v148;
  (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v148, v179, v180);
  uint64_t v88 = v86 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v115 - 8) + 48))(v87, 1) != 1;
  uint64_t v89 = v161;
  uint64_t v90 = v160;
  uint64_t v91 = v159;
  uint64_t v92 = v157;
  uint64_t v93 = v152;
  uint64_t v202 = *(void (**)(char *, uint64_t))(v173 + 8);
  v202(v87, v180);
  (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v93, v181, v182);
  uint64_t v94 = v88 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v116 - 8) + 48))(v93, 1) != 1;
  uint64_t v201 = *(void (**)(char *, uint64_t))(v174 + 8);
  v201(v93, v182);
  (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v92, v183, v184);
  uint64_t v95 = v94 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v117 - 8) + 48))(v92, 1) != 1;
  uint64_t v96 = *(void (**)(char *, uint64_t))(v175 + 8);
  v96(v92, v184);
  (*(void (**)(char *, char *, uint64_t))(v90 + 16))(v91, v185, v186);
  uint64_t v97 = v95 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v118 - 8) + 48))(v91, 1) != 1;
  unsigned int v98 = *(void (**)(char *, uint64_t))(v90 + 8);
  v98(v91, v186);
  (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v89, v187, v171);
  if (v97 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v119 - 8) + 48))(v89, 1) != 1)
  {
    uint64_t v104 = v170;
    uint64_t v105 = v171;
    (*(void (**)(char *, uint64_t))(v170 + 8))(v89, v171);
    uint64_t v106 = &v120[TupleTypeMetadata[12]];
    uint64_t v107 = &v120[TupleTypeMetadata[16]];
    uint64_t v108 = &v120[TupleTypeMetadata[20]];
    uint64_t v109 = &v120[TupleTypeMetadata[24]];
    unsigned int v110 = &v120[TupleTypeMetadata[28]];
    uint64_t v203 = &v120[TupleTypeMetadata[32]];
    (*(void (**)(char *, char *, uint64_t))(v150 + 32))(v120, v176, v151);
    (*(void (**)(char *, char *, uint64_t))(v172 + 32))(v106, v177, v178);
    (*(void (**)(char *, char *, uint64_t))(v173 + 32))(v107, v179, v180);
    (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v108, v181, v182);
    (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v109, v183, v184);
    (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v110, v185, v186);
    (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v203, v187, v105);
    uint64_t v111 = swift_getAssociatedTypeWitness();
    uint64_t v112 = v164;
    swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v111 - 8) + 56))(v112, 0, 1, v111);
  }
  else
  {
    uint64_t v99 = *(void (**)(char *, uint64_t))(v170 + 8);
    uint64_t v100 = v89;
    uint64_t v101 = v171;
    v99(v100, v171);
    v99(v187, v101);
    v98(v185, v186);
    v96(v183, v184);
    v201(v181, v182);
    v202(v179, v180);
    ((void (*)(char *, uint64_t))v203)(v177, v178);
    (*(void (**)(char *, uint64_t))(v150 + 8))(v176, v151);
    uint64_t v102 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v164, 1, 1, v102);
  }
}

uint64_t CRStruct_7.hasDelta(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v26)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t AssociatedConformanceWitness;
  char *v38;
  void (*v39)(char *, uint64_t);
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char v50;
  void (*v51)(char *, uint64_t);
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char v56;
  void (*v57)(char *, uint64_t);
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char v62;
  void (*v63)(char *, uint64_t);
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char v68;
  void (*v69)(char *, uint64_t);
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char v75;
  void (*v76)(char *, uint64_t);
  char v77;
  uint64_t v79;
  uint64_t (*v80)(uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t AssociatedTypeWitness;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void v128[21];

  uint64_t v120 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v84 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v83 = (char *)&v83 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v89 = (char *)&v83 - v7;
  uint64_t v88 = swift_getAssociatedTypeWitness();
  uint64_t v87 = *(void *)(v88 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v88);
  uint64_t v86 = (char *)&v83 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v93 = (char *)&v83 - v10;
  uint64_t v92 = swift_getAssociatedTypeWitness();
  uint64_t v91 = *(void *)(v92 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v92);
  uint64_t v90 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v97 = (char *)&v83 - v13;
  uint64_t v96 = swift_getAssociatedTypeWitness();
  uint64_t v95 = *(void *)(v96 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v96);
  uint64_t v94 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v101 = (char *)&v83 - v16;
  uint64_t v100 = swift_getAssociatedTypeWitness();
  uint64_t v99 = *(void *)(v100 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v100);
  unsigned int v98 = (char *)&v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v105 = (char *)&v83 - v19;
  uint64_t v104 = swift_getAssociatedTypeWitness();
  uint64_t v103 = *(void *)(v104 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v104);
  uint64_t v102 = (char *)&v83 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v112 = (char *)&v83 - v22;
  unsigned int v110 = swift_getAssociatedTypeWitness();
  uint64_t v111 = *(void *)(v110 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v110);
  uint64_t v109 = (char *)&v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v122 = (char *)&v83 - v25;
  uint64_t v121 = v4;
  uint64_t v26 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 128);
  uint64_t v119 = a2;
  v26(v128, a2, v4);
  uint64_t v27 = v128[1];
  uint64_t v124 = v128[2];
  uint64_t v125 = v128[4];
  uint64_t v127 = v128[5];
  uint64_t v126 = v128[7];
  uint64_t v28 = v128[8];
  uint64_t v29 = v128[10];
  uint64_t v30 = v128[11];
  uint64_t v32 = v128[16];
  uint64_t v31 = v128[17];
  uint64_t v33 = v128[19];
  uint64_t v34 = v128[20];
  uint64_t v118 = v128[13];
  uint64_t v123 = v128[14];
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v128);
  uint64_t v114 = v27;
  swift_bridgeObjectRelease();
  uint64_t v116 = v34;
  swift_release();
  uint64_t v117 = v33;
  swift_bridgeObjectRelease();
  uint64_t v115 = v31;
  swift_release();
  uint64_t v113 = v32;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v106 = v30;
  swift_release();
  uint64_t v107 = v29;
  swift_bridgeObjectRelease();
  uint64_t v108 = v28;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = v109;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v36 = v110;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v38 = v122;
  LOBYTE(v27) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v35, v36, AssociatedConformanceWitness);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v111 + 8);
  v39(v35, v36);
  v39(v38, v36);
  if (v27) {
    goto LABEL_8;
  }
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v40 = v102;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v41 = v104;
  uint64_t v42 = swift_getAssociatedConformanceWitness();
  uint64_t v43 = v112;
  uint64_t v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 72))(v40, v41, v42);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v103 + 8);
  v45(v40, v41);
  v45(v43, v41);
  if (v44) {
    goto LABEL_8;
  }
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v46 = v98;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v47 = v100;
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  uint64_t v49 = v105;
  uint64_t v50 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 72))(v46, v47, v48);
  uint64_t v51 = *(void (**)(char *, uint64_t))(v99 + 8);
  v51(v46, v47);
  v51(v49, v47);
  if (v50) {
    goto LABEL_8;
  }
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v52 = v94;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v53 = v96;
  uint64_t v54 = swift_getAssociatedConformanceWitness();
  uint64_t v55 = v101;
  uint64_t v56 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 72))(v52, v53, v54);
  uint64_t v57 = *(void (**)(char *, uint64_t))(v95 + 8);
  v57(v52, v53);
  v57(v55, v53);
  if (v56) {
    goto LABEL_8;
  }
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v58 = v90;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v59 = v92;
  uint64_t v60 = swift_getAssociatedConformanceWitness();
  uint64_t v61 = v97;
  uint64_t v62 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v60 + 72))(v58, v59, v60);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v91 + 8);
  v63(v58, v59);
  v63(v61, v59);
  if (v62) {
    goto LABEL_8;
  }
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v64 = v86;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v65 = v88;
  uint64_t v66 = swift_getAssociatedConformanceWitness();
  uint64_t v67 = v93;
  uint64_t v68 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v66 + 72))(v64, v65, v66);
  uint64_t v69 = *(void (**)(char *, uint64_t))(v87 + 8);
  v69(v64, v65);
  v69(v67, v65);
  if (v68) {
    goto LABEL_8;
  }
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v128);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v70 = v119;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v71 = v83;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v72 = AssociatedTypeWitness;
  BOOL v73 = swift_getAssociatedConformanceWitness();
  uint64_t v74 = v89;
  uint64_t v75 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 72))(v71, v72, v73);
  uint64_t v76 = *(void (**)(char *, uint64_t))(v84 + 8);
  v76(v71, v72);
  v76(v74, v72);
  if (v75)
  {
LABEL_8:
    uint64_t v77 = 1;
  }
  else
  {
    uint64_t v79 = *(void *)(v121 + 8);
    uint64_t v80 = *(uint64_t (**)(uint64_t, uint64_t))(v79 + 24);
    uint64_t v81 = v80(v70, v79);
    unsigned int v82 = v80(v70, v79);
    uint64_t v77 = sub_1C4478090(v82, v81);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C43423A0((uint64_t)v128);
  return v77 & 1;
}

uint64_t CRStruct_7.actionUndoingDifference(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v197 = a1;
  uint64_t v163 = a4;
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v159 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v157 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v154 = (char *)&v117 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v123 = swift_getAssociatedTypeWitness();
  uint64_t v186 = sub_1C4497B38();
  uint64_t v170 = *(void *)(v186 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v186);
  uint64_t v161 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  unint64_t v185 = (char *)&v117 - v11;
  uint64_t v147 = swift_getAssociatedTypeWitness();
  uint64_t v150 = *(void *)(v147 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v147);
  uint64_t v149 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v169 = (char *)&v117 - v14;
  uint64_t v146 = swift_getAssociatedConformanceWitness();
  uint64_t v122 = swift_getAssociatedTypeWitness();
  uint64_t v162 = sub_1C4497B38();
  uint64_t v175 = *(void *)(v162 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v162);
  uint64_t v160 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v184 = (char *)&v117 - v17;
  uint64_t v142 = swift_getAssociatedTypeWitness();
  uint64_t v144 = *(void *)(v142 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v142);
  uint64_t v143 = (char *)&v117 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v168 = (char *)&v117 - v20;
  uint64_t v141 = swift_getAssociatedConformanceWitness();
  uint64_t v121 = swift_getAssociatedTypeWitness();
  uint64_t v187 = sub_1C4497B38();
  uint64_t v174 = *(void *)(v187 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v187);
  uint64_t v158 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v183 = (char *)&v117 - v23;
  uint64_t v137 = swift_getAssociatedTypeWitness();
  uint64_t v139 = *(void *)(v137 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v137);
  uint64_t v138 = (char *)&v117 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v167 = (char *)&v117 - v26;
  uint64_t v136 = swift_getAssociatedConformanceWitness();
  uint64_t v120 = swift_getAssociatedTypeWitness();
  uint64_t v182 = sub_1C4497B38();
  uint64_t v173 = *(void *)(v182 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v182);
  uint64_t v153 = (char *)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v181 = (char *)&v117 - v29;
  uint64_t v133 = swift_getAssociatedTypeWitness();
  uint64_t v135 = *(void *)(v133 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v133);
  uint64_t v134 = (char *)&v117 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v166 = (char *)&v117 - v32;
  uint64_t v132 = swift_getAssociatedConformanceWitness();
  uint64_t v119 = swift_getAssociatedTypeWitness();
  uint64_t v180 = sub_1C4497B38();
  uint64_t v172 = *(void *)(v180 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v180);
  uint64_t v148 = (char *)&v117 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v179 = (char *)&v117 - v35;
  uint64_t v129 = swift_getAssociatedTypeWitness();
  uint64_t v131 = *(void *)(v129 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v129);
  uint64_t v130 = (char *)&v117 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v165 = (char *)&v117 - v38;
  uint64_t v128 = swift_getAssociatedConformanceWitness();
  uint64_t v118 = swift_getAssociatedTypeWitness();
  uint64_t v178 = sub_1C4497B38();
  uint64_t v171 = *(void *)(v178 - 8);
  uint64_t v39 = MEMORY[0x1F4188790](v178);
  uint64_t v145 = (char *)&v117 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  uint64_t v177 = (char *)&v117 - v41;
  uint64_t v125 = swift_getAssociatedTypeWitness();
  uint64_t v127 = *(void *)(v125 - 8);
  uint64_t v42 = MEMORY[0x1F4188790](v125);
  uint64_t v126 = (char *)&v117 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v164 = (char *)&v117 - v44;
  uint64_t v124 = swift_getAssociatedConformanceWitness();
  uint64_t v140 = swift_getAssociatedTypeWitness();
  uint64_t v152 = sub_1C4497B38();
  uint64_t v151 = *(void *)(v152 - 8);
  MEMORY[0x1F4188790](v152);
  uint64_t v176 = (char *)&v117 - v45;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 128))(v210, a2, v5);
  uint64_t v46 = v210[1];
  uint64_t v201 = (void (*)(char *, uint64_t))v210[2];
  uint64_t v202 = (void (*)(char *, uint64_t))v210[4];
  uint64_t v199 = v210[5];
  uint64_t v193 = v210[7];
  uint64_t v47 = v210[11];
  uint64_t v200 = (void (*)(char *, uint64_t))v210[10];
  uint64_t v48 = v210[14];
  uint64_t v49 = v210[16];
  uint64_t v50 = v210[20];
  uint64_t v198 = v210[8];
  uint64_t v51 = v210[13];
  uint64_t v194 = v210[17];
  uint64_t v188 = v210[19];
  sub_1C43422B8((uint64_t)v210);
  uint64_t v189 = v46;
  swift_bridgeObjectRelease();
  uint64_t v190 = v50;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v196 = v49;
  swift_bridgeObjectRelease();
  uint64_t v192 = v48;
  swift_release();
  uint64_t v195 = v51;
  swift_bridgeObjectRelease();
  uint64_t v191 = v47;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v52 = v126;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v53 = v164;
  uint64_t v54 = v125;
  (*(void (**)(char *, uint64_t))(v124 + 56))(v52, v125);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v127 + 8);
  v55(v52, v54);
  v55(v53, v54);
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v56 = v130;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v57 = v165;
  uint64_t v58 = v129;
  (*(void (**)(char *, uint64_t))(v128 + 56))(v56, v129);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v131 + 8);
  v59(v56, v58);
  v59(v57, v58);
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v60 = v134;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v61 = v166;
  uint64_t v62 = v133;
  (*(void (**)(char *, uint64_t))(v132 + 56))(v60, v133);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v135 + 8);
  v63(v60, v62);
  v63(v61, v62);
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v64 = v138;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v65 = v167;
  uint64_t v66 = v137;
  (*(void (**)(char *, uint64_t))(v136 + 56))(v64, v137);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v139 + 8);
  v67(v64, v66);
  v67(v65, v66);
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v68 = v143;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v69 = v168;
  uint64_t v70 = v142;
  (*(void (**)(char *, uint64_t))(v141 + 56))(v68, v142);
  uint64_t v71 = *(void (**)(char *, uint64_t))(v144 + 8);
  v71(v68, v70);
  v71(v69, v70);
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v72 = v149;
  swift_getAtKeyPath();
  swift_release();
  BOOL v73 = v169;
  uint64_t v74 = v147;
  (*(void (**)(char *, uint64_t))(v146 + 56))(v72, v147);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v150 + 8);
  v75(v72, v74);
  v75(v73, v74);
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v76 = v154;
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v210);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v77 = v157;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v78 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t))(AssociatedConformanceWitness + 56))(v77, AssociatedTypeWitness);
  sub_1C43423A0((uint64_t)v210);
  uint64_t v79 = *(void (**)(char *, uint64_t))(v159 + 8);
  v79(v77, v78);
  v79(v76, v78);
  uint64_t v80 = v145;
  BOOL v81 = 1;
  LODWORD(v79) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v140 - 8) + 48))(v176, 1);
  (*(void (**)(char *, char *, uint64_t))(v171 + 16))(v80, v177, v178);
  if (v79 == 1) {
    BOOL v81 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v118 - 8) + 48))(v80, 1) != 1;
  }
  uint64_t v82 = v171 + 8;
  uint64_t v202 = *(void (**)(char *, uint64_t))(v171 + 8);
  v202(v80, v178);
  uint64_t v83 = v148;
  (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v148, v179, v180);
  BOOL v84 = v81 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v119 - 8) + 48))(v83, 1) != 1;
  uint64_t v85 = v162;
  uint64_t v86 = v161;
  uint64_t v87 = v160;
  uint64_t v88 = v158;
  uint64_t v89 = v153;
  uint64_t v201 = *(void (**)(char *, uint64_t))(v172 + 8);
  v201(v83, v180);
  (*(void (**)(char *, char *, uint64_t))(v173 + 16))(v89, v181, v182);
  BOOL v90 = v84 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v120 - 8) + 48))(v89, 1) != 1;
  uint64_t v91 = v85;
  uint64_t v200 = *(void (**)(char *, uint64_t))(v173 + 8);
  v200(v89, v182);
  (*(void (**)(char *, char *, uint64_t))(v174 + 16))(v88, v183, v187);
  BOOL v92 = v90 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v121 - 8) + 48))(v88, 1) != 1;
  uint64_t v93 = *(void (**)(char *, uint64_t))(v174 + 8);
  v93(v88, v187);
  (*(void (**)(char *, char *, uint64_t))(v175 + 16))(v87, v184, v91);
  if (v92)
  {
    uint64_t v94 = v87;
    char v95 = 1;
  }
  else
  {
    BOOL v96 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v122 - 8) + 48))(v87, 1) == 1;
    uint64_t v94 = v87;
    char v95 = !v96;
  }
  uint64_t v97 = *(void (**)(char *, uint64_t))(v175 + 8);
  v97(v94, v91);
  (*(void (**)(char *, char *, uint64_t))(v170 + 16))(v86, v185, v186);
  if ((v95 & 1) != 0 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v123 - 8) + 48))(v86, 1) != 1)
  {
    uint64_t v107 = v170;
    uint64_t v108 = v186;
    (*(void (**)(char *))(v170 + 8))(v86);
    uint64_t v109 = v152;
    uint64_t v203 = v152;
    uint64_t v110 = v178;
    uint64_t v204 = v178;
    uint64_t v111 = v180;
    uint64_t v205 = v180;
    uint64_t v112 = v182;
    uint64_t v206 = v182;
    uint64_t v207 = v187;
    uint64_t v208 = v91;
    uint64_t v209 = v108;
    TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
    uint64_t v114 = v163;
    uint64_t v115 = v163 + TupleTypeMetadata[12];
    uint64_t v116 = v163 + TupleTypeMetadata[16];
    uint64_t v199 = v163 + TupleTypeMetadata[20];
    uint64_t v200 = (void (*)(char *, uint64_t))(v163 + TupleTypeMetadata[24]);
    uint64_t v201 = (void (*)(char *, uint64_t))(v163 + TupleTypeMetadata[28]);
    uint64_t v202 = (void (*)(char *, uint64_t))(v163 + TupleTypeMetadata[32]);
    (*(void (**)(uint64_t, char *, uint64_t))(v151 + 32))(v163, v176, v109);
    (*(void (**)(uint64_t, char *, uint64_t))(v171 + 32))(v115, v177, v110);
    (*(void (**)(uint64_t, char *, uint64_t))(v172 + 32))(v116, v179, v111);
    (*(void (**)(uint64_t, char *, uint64_t))(v173 + 32))(v199, v181, v112);
    (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v174 + 32))(v200, v183, v187);
    (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v175 + 32))(v201, v184, v91);
    (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v107 + 32))(v202, v185, v186);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)TupleTypeMetadata - 1) + 56))(v114, 0, 1, TupleTypeMetadata);
  }
  else
  {
    unsigned int v98 = *(void (**)(char *))(v170 + 8);
    uint64_t v199 = v82;
    uint64_t v99 = v186;
    v98(v86);
    ((void (*)(char *, uint64_t))v98)(v185, v99);
    v97(v184, v91);
    uint64_t v100 = v187;
    v93(v183, v187);
    uint64_t v101 = v182;
    v200(v181, v182);
    uint64_t v102 = v180;
    v201(v179, v180);
    uint64_t v103 = v178;
    v202(v177, v178);
    uint64_t v104 = v152;
    (*(void (**)(char *, uint64_t))(v151 + 8))(v176, v152);
    uint64_t v203 = v104;
    uint64_t v204 = v103;
    uint64_t v205 = v102;
    uint64_t v206 = v101;
    uint64_t v207 = v100;
    uint64_t v208 = v91;
    uint64_t v209 = v186;
    uint64_t v105 = swift_getTupleTypeMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 56))(v163, 1, 1, v105);
  }
}

uint64_t CRStruct_7.apply(_:)(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v232 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v194 = AssociatedTypeWitness;
  uint64_t v168 = swift_getAssociatedTypeWitness();
  uint64_t v216 = sub_1C4497B38();
  uint64_t v204 = *(void *)(v216 - 8);
  MEMORY[0x1F4188790](v216);
  uint64_t v192 = (char *)&v160 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v190 = swift_getAssociatedConformanceWitness();
  uint64_t v191 = v7;
  uint64_t v167 = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_1C4497B38();
  uint64_t v198 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v189 = (char *)&v160 - v9;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v186 = swift_getAssociatedConformanceWitness();
  uint64_t v187 = (void (*)(char *, uint64_t))v10;
  uint64_t v166 = swift_getAssociatedTypeWitness();
  uint64_t v210 = sub_1C4497B38();
  uint64_t v209 = *(void *)(v210 - 8);
  MEMORY[0x1F4188790](v210);
  unint64_t v185 = (char *)&v160 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v182 = swift_getAssociatedConformanceWitness();
  uint64_t v183 = (void (*)(uint64_t, uint64_t))v12;
  uint64_t v165 = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_1C4497B38();
  uint64_t v208 = v13;
  uint64_t v207 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v181 = (char *)&v160 - v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v178 = swift_getAssociatedConformanceWitness();
  uint64_t v179 = v15;
  uint64_t v164 = swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_1C4497B38();
  uint64_t v203 = v16;
  uint64_t v206 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v177 = (char *)&v160 - v17;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v173 = swift_getAssociatedConformanceWitness();
  uint64_t v174 = v18;
  uint64_t v163 = swift_getAssociatedTypeWitness();
  uint64_t v19 = sub_1C4497B38();
  uint64_t v202 = v19;
  uint64_t v205 = *(char **)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v172 = (char *)&v160 - v20;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v171 = swift_getAssociatedConformanceWitness();
  uint64_t v197 = (void (*)(char *, uint64_t))v21;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v234 = sub_1C4497B38();
  uint64_t v235 = v19;
  uint64_t v236 = v16;
  uint64_t v237 = v13;
  uint64_t v238 = v210;
  uint64_t v239 = v8;
  uint64_t v199 = v8;
  uint64_t v240 = v216;
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v229 = sub_1C4497B38();
  uint64_t v201 = *(void *)(v229 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v229 - 8);
  uint64_t v188 = (char *)&v160 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v23);
  uint64_t v184 = (char *)&v160 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v180 = (char *)&v160 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v176 = (char *)&v160 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v175 = (char *)&v160 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v195 = (char *)&v160 - v34;
  MEMORY[0x1F4188790](v33);
  uint64_t v169 = (char *)&v160 - v35;
  uint64_t v162 = v22;
  uint64_t v200 = sub_1C4497B38();
  uint64_t v215 = *(void *)(v200 - 8);
  MEMORY[0x1F4188790](v200);
  uint64_t v196 = (char *)&v160 - v36;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 128))(&v234, a2, v4);
  uint64_t v37 = v235;
  uint64_t v231 = (char *)v238;
  uint64_t v225 = v239;
  uint64_t v230 = v241;
  uint64_t v38 = v242;
  uint64_t v39 = v243;
  uint64_t v40 = v244;
  uint64_t v41 = v245;
  uint64_t v42 = v246;
  uint64_t v43 = v247;
  uint64_t v44 = v248;
  uint64_t v45 = v249;
  uint64_t v46 = v250;
  uint64_t v226 = v236;
  sub_1C43422B8((uint64_t)&v234);
  uint64_t v227 = v37;
  swift_bridgeObjectRelease();
  uint64_t v228 = v46;
  uint64_t v47 = v201;
  swift_release();
  uint64_t v221 = v45;
  uint64_t v48 = v203;
  swift_bridgeObjectRelease();
  uint64_t v211 = v44;
  uint64_t v49 = v202;
  swift_release();
  uint64_t v222 = v43;
  swift_bridgeObjectRelease();
  uint64_t v212 = v42;
  swift_release();
  uint64_t v223 = v41;
  uint64_t v50 = (int *)TupleTypeMetadata;
  swift_bridgeObjectRelease();
  uint64_t v213 = v40;
  uint64_t v51 = v229;
  swift_release();
  uint64_t v224 = v39;
  uint64_t v52 = v169;
  swift_bridgeObjectRelease();
  uint64_t v214 = v38;
  uint64_t v53 = v208;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  uint64_t v220 = v47 + 16;
  char v219 = v54;
  v54(v52, v232, v51);
  uint64_t v55 = *((void *)v50 - 1);
  uint64_t v218 = *(uint64_t (**)(char *, uint64_t, int *))(v55 + 48);
  uint64_t v217 = v55 + 48;
  int v56 = v218(v52, 1, v50);
  uint64_t v57 = v216;
  if (v56 == 1)
  {
    (*(void (**)(char *, uint64_t))(v47 + 8))(v52, v51);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v162 - 8) + 56))(v196, 1, 1);
  }
  else
  {
    uint64_t v162 = (uint64_t)&v52[v50[12]];
    uint64_t v161 = &v52[v50[16]];
    uint64_t v160 = &v52[v50[20]];
    uint64_t v58 = &v52[v50[24]];
    uint64_t v59 = &v52[v50[28]];
    uint64_t v60 = &v52[v50[32]];
    (*(void (**)(char *, char *, uint64_t))(v215 + 32))(v196, v52, v200);
    uint64_t v61 = v207;
    (*(void (**)(char *, uint64_t))(v204 + 8))(v60, v57);
    (*(void (**)(char *, uint64_t))(v198 + 8))(v59, v199);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v58, v210);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v160, v53);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v161, v48);
    (*((void (**)(uint64_t, uint64_t))v205 + 1))(v162, v49);
  }
  uint64_t v62 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v63 = v171;
  uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 64);
  uint64_t v65 = swift_checkMetadataState();
  uint64_t v66 = v196;
  v64(v196, v65, v63);
  uint64_t v67 = v215 + 8;
  uint64_t v68 = *(void (**)(char *, uint64_t))(v215 + 8);
  uint64_t v69 = v200;
  v68(v66, v200);
  v62(v233, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v234);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v70 = v195;
  uint64_t v71 = v229;
  v219(v195, v232, v229);
  int v72 = v218(v70, 1, v50);
  uint64_t v215 = v67;
  uint64_t v197 = v68;
  if (v72 == 1)
  {
    (*(void (**)(char *, uint64_t))(v201 + 8))(v70, v71);
    BOOL v73 = v172;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v163 - 8) + 56))(v172, 1, 1);
    uint64_t v74 = v202;
    uint64_t v75 = v205;
  }
  else
  {
    uint64_t v76 = &v70[v50[12]];
    uint64_t v196 = &v70[v50[16]];
    uint64_t v171 = (uint64_t)&v70[v50[20]];
    uint64_t v77 = &v70[v50[24]];
    uint64_t v78 = &v70[v50[28]];
    uint64_t v79 = &v70[v50[32]];
    uint64_t v75 = v205;
    BOOL v73 = v172;
    uint64_t v74 = v202;
    (*((void (**)(char *, char *, uint64_t))v205 + 4))(v172, v76, v202);
    (*(void (**)(char *, uint64_t))(v204 + 8))(v79, v216);
    (*(void (**)(char *, uint64_t))(v198 + 8))(v78, v199);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v77, v210);
    (*(void (**)(uint64_t, uint64_t))(v207 + 8))(v171, v208);
    (*(void (**)(char *, uint64_t))(v206 + 8))(v196, v203);
    v68(v195, v69);
  }
  uint64_t v80 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v81 = v173;
  uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t))(v173 + 64);
  uint64_t v83 = swift_checkMetadataState();
  v82(v73, v83, v81);
  uint64_t v86 = (void (*)(char *, uint64_t))*((void *)v75 + 1);
  uint64_t v85 = v75 + 8;
  BOOL v84 = v86;
  v86(v73, v74);
  v80(v233, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v234);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v87 = v175;
  uint64_t v88 = v229;
  v219(v175, v232, v229);
  int v89 = v218(v87, 1, v50);
  uint64_t v196 = (char *)v86;
  if (v89 == 1)
  {
    (*(void (**)(char *, uint64_t))(v201 + 8))(v87, v88);
    BOOL v90 = v177;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v164 - 8) + 56))(v177, 1, 1);
    uint64_t v91 = v203;
    uint64_t v92 = v206;
  }
  else
  {
    uint64_t v205 = &v87[v50[12]];
    uint64_t v93 = &v87[v50[16]];
    uint64_t v195 = &v87[v50[20]];
    uint64_t v174 = (uint64_t)&v87[v50[24]];
    uint64_t v94 = &v87[v50[28]];
    char v95 = &v87[v50[32]];
    uint64_t v92 = v206;
    BOOL v90 = v177;
    uint64_t v91 = v203;
    (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v177, v93, v203);
    (*(void (**)(char *, uint64_t))(v204 + 8))(v95, v216);
    (*(void (**)(char *, uint64_t))(v198 + 8))(v94, v199);
    (*(void (**)(uint64_t, uint64_t))(v209 + 8))(v174, v210);
    (*(void (**)(char *, uint64_t))(v207 + 8))(v195, v208);
    v84(v205, v74);
    v197(v87, v200);
  }
  uint64_t v205 = v85;
  BOOL v96 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v97 = v178;
  unsigned int v98 = *(void (**)(char *, uint64_t, uint64_t))(v178 + 64);
  uint64_t v99 = swift_checkMetadataState();
  v98(v90, v99, v97);
  uint64_t v100 = *(void (**)(char *, uint64_t))(v92 + 8);
  v100(v90, v91);
  v96(v233, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v234);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v101 = v176;
  uint64_t v102 = v229;
  v219(v176, v232, v229);
  int v103 = v218(v101, 1, v50);
  uint64_t v206 = v92 + 8;
  uint64_t v195 = (char *)v100;
  if (v103 == 1)
  {
    (*(void (**)(char *, uint64_t))(v201 + 8))(v101, v102);
    uint64_t v104 = v181;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v165 - 8) + 56))(v181, 1, 1);
    uint64_t v105 = v207;
    uint64_t v106 = v208;
  }
  else
  {
    uint64_t v107 = v91;
    uint64_t v179 = (uint64_t)&v101[v50[12]];
    uint64_t v178 = (uint64_t)&v101[v50[16]];
    uint64_t v108 = &v101[v50[20]];
    uint64_t v177 = &v101[v50[24]];
    uint64_t v109 = &v101[v50[28]];
    uint64_t v110 = &v101[v50[32]];
    uint64_t v105 = v207;
    uint64_t v104 = v181;
    uint64_t v106 = v208;
    (*(void (**)(char *, char *, uint64_t))(v207 + 32))(v181, v108, v208);
    (*(void (**)(char *, uint64_t))(v204 + 8))(v110, v216);
    (*(void (**)(char *, uint64_t))(v198 + 8))(v109, v199);
    (*(void (**)(char *, uint64_t))(v209 + 8))(v177, v210);
    v100((char *)v178, v107);
    ((void (*)(uint64_t, uint64_t))v196)(v179, v202);
    v197(v101, v200);
  }
  uint64_t v111 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v112 = v182;
  uint64_t v113 = *(void (**)(char *, uint64_t, uint64_t))(v182 + 64);
  uint64_t v114 = swift_checkMetadataState();
  v113(v104, v114, v112);
  uint64_t v115 = *(void (**)(char *, uint64_t))(v105 + 8);
  v115(v104, v106);
  v111(v233, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v234);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v116 = v180;
  uint64_t v117 = v229;
  v219(v180, v232, v229);
  int v118 = v218(v116, 1, v50);
  uint64_t v207 = v105 + 8;
  uint64_t v183 = (void (*)(uint64_t, uint64_t))v115;
  if (v118 == 1)
  {
    (*(void (**)(char *, uint64_t))(v201 + 8))(v116, v117);
    uint64_t v119 = v185;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v166 - 8) + 56))(v185, 1, 1);
    uint64_t v120 = v210;
    uint64_t v121 = v209;
  }
  else
  {
    uint64_t v182 = (uint64_t)&v116[v50[12]];
    uint64_t v181 = &v116[v50[16]];
    uint64_t v122 = &v116[v50[20]];
    uint64_t v123 = &v116[v50[28]];
    uint64_t v124 = &v116[v50[32]];
    uint64_t v121 = v209;
    uint64_t v119 = v185;
    uint64_t v120 = v210;
    (*(void (**)(char *, char *, uint64_t))(v209 + 32))(v185, &v116[v50[24]], v210);
    (*(void (**)(char *, uint64_t))(v204 + 8))(v124, v216);
    (*(void (**)(char *, uint64_t))(v198 + 8))(v123, v199);
    v115(v122, v208);
    ((void (*)(char *, uint64_t))v195)(v181, v203);
    ((void (*)(uint64_t, uint64_t))v196)(v182, v202);
    v197(v116, v200);
  }
  uint64_t v125 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v126 = v186;
  uint64_t v127 = *(void (**)(char *, uint64_t, uint64_t))(v186 + 64);
  uint64_t v128 = swift_checkMetadataState();
  v127(v119, v128, v126);
  uint64_t v129 = *(void (**)(char *, uint64_t))(v121 + 8);
  v129(v119, v120);
  v125(v233, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v234);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v130 = v184;
  uint64_t v131 = v229;
  v219(v184, v232, v229);
  int v132 = v218(v130, 1, v50);
  uint64_t v187 = v129;
  uint64_t v209 = v121 + 8;
  if (v132 == 1)
  {
    (*(void (**)(char *, uint64_t))(v201 + 8))(v130, v131);
    uint64_t v133 = v189;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v167 - 8) + 56))(v189, 1, 1);
    uint64_t v134 = v198;
    uint64_t v135 = v199;
  }
  else
  {
    uint64_t v186 = (uint64_t)&v130[v50[12]];
    unint64_t v185 = &v130[v50[16]];
    uint64_t v182 = (uint64_t)&v130[v50[20]];
    uint64_t v136 = &v130[v50[24]];
    uint64_t v137 = &v130[v50[32]];
    uint64_t v134 = v198;
    uint64_t v133 = v189;
    uint64_t v135 = v199;
    (*(void (**)(char *, char *, uint64_t))(v198 + 32))(v189, &v130[v50[28]], v199);
    (*(void (**)(char *, uint64_t))(v204 + 8))(v137, v216);
    v129(v136, v120);
    v183(v182, v208);
    ((void (*)(char *, uint64_t))v195)(v185, v203);
    ((void (*)(uint64_t, uint64_t))v196)(v186, v202);
    v197(v130, v200);
  }
  uint64_t v138 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v139 = v190;
  uint64_t v140 = *(void (**)(char *, uint64_t, uint64_t))(v190 + 64);
  uint64_t v141 = swift_checkMetadataState();
  v140(v133, v141, v139);
  uint64_t v142 = *(void (**)(char *, uint64_t))(v134 + 8);
  v142(v133, v135);
  v138(v233, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v234);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v143 = v188;
  uint64_t v144 = v229;
  v219(v188, v232, v229);
  if (v218(v143, 1, v50) == 1)
  {
    (*(void (**)(char *, uint64_t))(v201 + 8))(v143, v144);
    uint64_t v145 = v192;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v168 - 8) + 56))(v192, 1, 1);
    uint64_t v146 = v204;
    uint64_t v147 = v216;
  }
  else
  {
    uint64_t v232 = &v143[v50[12]];
    uint64_t v148 = v135;
    uint64_t v231 = &v143[v50[16]];
    uint64_t v149 = &v143[v50[20]];
    uint64_t v150 = v142;
    uint64_t v151 = &v143[v50[24]];
    uint64_t v152 = &v143[v50[28]];
    uint64_t v153 = &v143[v50[32]];
    uint64_t v146 = v204;
    uint64_t v154 = v192;
    uint64_t v147 = v216;
    (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v192, v153, v216);
    v150(v152, v148);
    uint64_t v145 = v154;
    v187(v151, v210);
    v183((uint64_t)v149, v208);
    ((void (*)(char *, uint64_t))v195)(v231, v203);
    ((void (*)(char *, uint64_t))v196)(v232, v202);
    v197(v143, v200);
  }
  uint64_t v155 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v156 = AssociatedConformanceWitness;
  uint64_t v157 = *(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v158 = swift_checkMetadataState();
  v157(v145, v158, v156);
  (*(void (**)(char *, uint64_t))(v146 + 8))(v145, v147);
  v155(v233, 0);
  sub_1C43423A0((uint64_t)&v234);
  return swift_release();
}

uint64_t CRStruct_7.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v12)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t AssociatedTypeWitness;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void v80[21];

  uint64_t v70 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v60 = (char *)&v41 - v5;
  uint64_t v58 = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (char *)&v41 - v6;
  uint64_t v55 = swift_getAssociatedTypeWitness();
  int v56 = *(void *)(v55 - 8);
  MEMORY[0x1F4188790](v55);
  uint64_t v54 = (char *)&v41 - v7;
  uint64_t v52 = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v51 = (char *)&v41 - v8;
  uint64_t v49 = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v48 = (char *)&v41 - v9;
  uint64_t v46 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v46 - 8);
  MEMORY[0x1F4188790](v46);
  uint64_t v45 = (char *)&v41 - v10;
  uint64_t v43 = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(v43 - 8);
  MEMORY[0x1F4188790](v43);
  uint64_t v42 = (char *)&v41 - v11;
  uint64_t v65 = v4;
  uint64_t v12 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 128);
  uint64_t v63 = a2;
  v12(v80, a2, v4);
  uint64_t v75 = v80[2];
  uint64_t v76 = v80[4];
  uint64_t v74 = v80[5];
  uint64_t v67 = v80[10];
  int v72 = v80[20];
  uint64_t v71 = v80[1];
  uint64_t v68 = v80[7];
  uint64_t v13 = v80[8];
  BOOL v73 = v80[11];
  uint64_t v77 = v80[13];
  uint64_t v79 = v80[14];
  uint64_t v78 = v80[16];
  uint64_t v69 = v80[17];
  uint64_t v64 = v80[19];
  sub_1C43422B8((uint64_t)v80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v66 = v13;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = v42;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v15 = v43;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 48))(v70, v15);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v15);
  sub_1C43422B8((uint64_t)v80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = v45;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v18 = v46;
  uint64_t v19 = swift_getAssociatedConformanceWitness();
  uint64_t v20 = v70;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 + 16) + 48))(v70, v18);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v17, v18);
  sub_1C43422B8((uint64_t)v80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v21 = v48;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v22 = v63;
  uint64_t v23 = v49;
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v24 + 16) + 48))(v20, v23);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v23);
  sub_1C43422B8((uint64_t)v80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v25 = v51;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v26 = v52;
  uint64_t v27 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 + 16) + 48))(v70, v26);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v26);
  sub_1C43422B8((uint64_t)v80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = v54;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v29 = v55;
  uint64_t v30 = swift_getAssociatedConformanceWitness();
  uint64_t v31 = v70;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 + 16) + 48))(v70, v29);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v28, v29);
  sub_1C43422B8((uint64_t)v80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v32 = v57;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v33 = v65;
  uint64_t v34 = v58;
  uint64_t v35 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 + 16) + 48))(v31, v34);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v32, v34);
  sub_1C43422B8((uint64_t)v80);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v36 = v60;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v37 = AssociatedTypeWitness;
  uint64_t v38 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 + 16) + 48))(v31, v37);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v36, v37);
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(*(void *)(v33 + 8) + 24))(v22);
  sub_1C3F7E98C(v31, v39);
  swift_bridgeObjectRelease();
  return sub_1C43423A0((uint64_t)v80);
}

Swift::Bool __swiftcall CRStruct_7.needToFinalizeTimestamps()()
{
  void (*v23)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  uint64_t AssociatedConformanceWitness;
  void (*v37)(char *, uint64_t, uint64_t);
  void (*v38)(char *, uint64_t);
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  void (*v45)(char *, uint64_t);
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char v50;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  void v69[2];
  char *v70;
  uint64_t v71;
  uint64_t AssociatedTypeWitness;
  uint64_t v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  char *v102;
  char *v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  void v108[21];

  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v70 = (char *)v69 - v4;
  uint64_t v76 = swift_getAssociatedTypeWitness();
  uint64_t v75 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v74 = (char *)v69 - v5;
  uint64_t v80 = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(v80 - 8);
  MEMORY[0x1F4188790](v80);
  uint64_t v78 = (char *)v69 - v6;
  BOOL v84 = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x1F4188790](v84);
  uint64_t v82 = (char *)v69 - v7;
  uint64_t v87 = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v85 = (char *)v69 - v8;
  BOOL v90 = swift_getAssociatedTypeWitness();
  int v89 = *(void *)(v90 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v90);
  uint64_t v88 = (char *)v69 - v10;
  uint64_t v106 = *(void *)(v2 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v104 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int v103 = (char *)v69 - v14;
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v102 = (char *)v69 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v101 = (char *)v69 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v105 = (char *)v69 - v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v99 = (char *)v69 - v21;
  uint64_t v97 = swift_getAssociatedTypeWitness();
  unsigned int v98 = *(void *)(v97 - 8);
  MEMORY[0x1F4188790](v97);
  BOOL v96 = (char *)v69 - v22;
  uint64_t v107 = v3;
  uint64_t v23 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 128);
  uint64_t v94 = v2;
  v23(v108, v2, v3);
  char v95 = v108[2];
  uint64_t v93 = v108[4];
  uint64_t v24 = v108[5];
  uint64_t v25 = v108[8];
  uint64_t v92 = v108[7];
  uint64_t v91 = v108[10];
  uint64_t v26 = v108[11];
  uint64_t v27 = v108[14];
  uint64_t v28 = v108[17];
  uint64_t v29 = v108[20];
  sub_1C43422B8((uint64_t)v108);
  uint64_t v30 = v100;
  swift_bridgeObjectRelease();
  v69[1] = v29;
  swift_release();
  swift_bridgeObjectRelease();
  BOOL v73 = v28;
  swift_release();
  uint64_t v31 = v106;
  swift_bridgeObjectRelease();
  uint64_t v77 = v27;
  uint64_t v32 = v94;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v81 = v26;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v91 = v25;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v92 = v24;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v33 = v96;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v34 = v97;
  uint64_t v35 = v99;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(v24) = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 56))(v34);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v33, v34);
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v31 + 16);
  v37(v35, v30, v32);
  if (v24)
  {
    uint64_t v38 = *(void (**)(char *, uint64_t))(v31 + 8);
    v38(v35, v32);
    uint64_t v39 = v105;
    v37(v105, v30, v32);
LABEL_4:
    uint64_t v46 = v104;
    uint64_t v47 = v103;
    v38(v39, v32);
    uint64_t v48 = v101;
    v37(v101, v30, v32);
LABEL_5:
    uint64_t v49 = v102;
    v38(v48, v32);
    v37(v49, v30, v32);
LABEL_6:
    v38(v49, v32);
    v37(v47, v30, v32);
LABEL_7:
    v38(v47, v32);
    v37(v46, v30, v32);
    goto LABEL_8;
  }
  uint64_t v40 = v88;
  swift_getAtKeyPath();
  uint64_t v41 = v90;
  uint64_t v42 = swift_getAssociatedConformanceWitness();
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(*(void *)(v42 + 16) + 56))(v41);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v40, v41);
  uint64_t v45 = *(void (**)(char *, uint64_t))(v31 + 8);
  uint64_t v44 = v31 + 8;
  uint64_t v38 = v45;
  v45(v35, v32);
  uint64_t v39 = v105;
  v37(v105, v30, v32);
  if (v43) {
    goto LABEL_4;
  }
  uint64_t v52 = v85;
  swift_getAtKeyPath();
  uint64_t v53 = v87;
  uint64_t v54 = swift_getAssociatedConformanceWitness();
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(*(void *)(v54 + 16) + 56))(v53);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v52, v53);
  uint64_t v106 = v44;
  v38(v105, v32);
  uint64_t v48 = v101;
  v37(v101, v30, v32);
  uint64_t v46 = v104;
  if (v55)
  {
    uint64_t v47 = v103;
    goto LABEL_5;
  }
  int v56 = v82;
  swift_getAtKeyPath();
  uint64_t v57 = v84;
  uint64_t v58 = swift_getAssociatedConformanceWitness();
  LODWORD(v105) = (*(uint64_t (**)(uint64_t))(*(void *)(v58 + 16) + 56))(v57);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v56, v57);
  v38(v48, v32);
  uint64_t v49 = v102;
  v37(v102, v30, v32);
  if (v105)
  {
    uint64_t v47 = v103;
    goto LABEL_6;
  }
  uint64_t v59 = v78;
  swift_getAtKeyPath();
  uint64_t v60 = v80;
  uint64_t v61 = swift_getAssociatedConformanceWitness();
  LODWORD(v105) = (*(uint64_t (**)(uint64_t))(*(void *)(v61 + 16) + 56))(v60);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v59, v60);
  v38(v49, v32);
  uint64_t v62 = v103;
  v37(v103, v30, v32);
  if (v105)
  {
    uint64_t v47 = v62;
    goto LABEL_7;
  }
  uint64_t v63 = v74;
  swift_getAtKeyPath();
  uint64_t v64 = v76;
  uint64_t v65 = swift_getAssociatedConformanceWitness();
  LODWORD(v105) = (*(uint64_t (**)(uint64_t))(*(void *)(v65 + 16) + 56))(v64);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v63, v64);
  v38(v62, v32);
  v37(v46, v30, v32);
  if ((v105 & 1) == 0)
  {
    uint64_t v66 = v70;
    swift_getAtKeyPath();
    uint64_t v67 = AssociatedTypeWitness;
    uint64_t v68 = swift_getAssociatedConformanceWitness();
    uint64_t v50 = (*(uint64_t (**)(uint64_t))(*(void *)(v68 + 16) + 56))(v67);
    sub_1C43423A0((uint64_t)v108);
    (*(void (**)(char *, uint64_t))(v71 + 8))(v66, v67);
    v38(v46, v32);
    return v50 & 1;
  }
LABEL_8:
  v38(v46, v32);
  sub_1C43423A0((uint64_t)v108);
  uint64_t v50 = 1;
  return v50 & 1;
}

uint64_t CRStruct_7.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(a3 + 8) + 128))(&v34, a2);
  sub_1C43422B8((uint64_t)&v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 64);
  uint64_t v6 = swift_checkMetadataState();
  v5(a1, v6, v4);
  v3(v33, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 64);
  uint64_t v10 = swift_checkMetadataState();
  v9(a1, v10, v8);
  v7(v33, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 64);
  uint64_t v14 = swift_checkMetadataState();
  v13(a1, v14, v12);
  v11(v33, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 64);
  uint64_t v18 = swift_checkMetadataState();
  v17(a1, v18, v16);
  v15(v33, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 64);
  uint64_t v22 = swift_checkMetadataState();
  v21(a1, v22, v20);
  v19(v33, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v31 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t))(v23 + 64);
  uint64_t v25 = swift_checkMetadataState();
  v24(a1, v25, v23);
  v31(v33, 0);
  swift_release();
  sub_1C43422B8((uint64_t)&v34);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v26 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 64);
  uint64_t v29 = swift_checkMetadataState();
  v28(a1, v29, v27);
  v26(v33, 0);
  swift_release();
  return sub_1C43423A0((uint64_t)&v34);
}

uint64_t CRStruct_7.minEncodingVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v40 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v39 = (char *)&v38 - v5;
  uint64_t v45 = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v43 = (char *)&v38 - v6;
  uint64_t v49 = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(v49 - 8);
  MEMORY[0x1F4188790](v49);
  uint64_t v47 = (char *)&v38 - v7;
  uint64_t v53 = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v51 = (char *)&v38 - v8;
  uint64_t v57 = swift_getAssociatedTypeWitness();
  uint64_t v56 = *(void *)(v57 - 8);
  MEMORY[0x1F4188790](v57);
  uint64_t v55 = (char *)&v38 - v9;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(v60 - 8);
  MEMORY[0x1F4188790](v60);
  uint64_t v58 = (char *)&v38 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v38 - v13;
  (*(void (**)(_WORD *__return_ptr, uint64_t, uint64_t))(v4 + 128))(&v62[1], a1, v4);
  uint64_t v54 = *(void *)&v62[33];
  uint64_t v50 = *(void *)&v62[45];
  uint64_t v46 = *(void *)&v62[57];
  uint64_t v42 = *(void *)&v62[69];
  uint64_t v38 = *(void *)&v62[81];
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 24))(a1);
  sub_1C447829C(v15, (unsigned char *)v62 + 1);
  swift_bridgeObjectRelease();
  unsigned int v16 = HIBYTE(v62[0]);
  if (HIBYTE(v62[0]) > 1u) {
    goto LABEL_23;
  }
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8)
                                                       + 32))(v62, v11);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (LOBYTE(v62[0]) > v16) {
    unsigned int v16 = LOBYTE(v62[0]);
  }
  HIBYTE(v62[0]) = v16;
  if (v16 > 1) {
    goto LABEL_23;
  }
  uint64_t v18 = v58;
  swift_getAtKeyPath();
  uint64_t v19 = v60;
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v20 + 16) + 8) + 32))(v62, v19);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v18, v19);
  if (LOBYTE(v62[0]) > v16) {
    unsigned int v16 = LOBYTE(v62[0]);
  }
  HIBYTE(v62[0]) = v16;
  if (v16 > 1) {
    goto LABEL_23;
  }
  uint64_t v21 = v55;
  swift_getAtKeyPath();
  uint64_t v22 = v57;
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v23 + 16) + 8) + 32))(v62, v22);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v21, v22);
  if (LOBYTE(v62[0]) > v16) {
    unsigned int v16 = LOBYTE(v62[0]);
  }
  HIBYTE(v62[0]) = v16;
  if (v16 > 1) {
    goto LABEL_23;
  }
  uint64_t v24 = v51;
  swift_getAtKeyPath();
  uint64_t v25 = v53;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v26 + 16) + 8) + 32))(v62, v25);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v24, v25);
  if (LOBYTE(v62[0]) > v16) {
    unsigned int v16 = LOBYTE(v62[0]);
  }
  HIBYTE(v62[0]) = v16;
  if (v16 > 1) {
    goto LABEL_23;
  }
  uint64_t v27 = v47;
  swift_getAtKeyPath();
  uint64_t v28 = v49;
  uint64_t v29 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v29 + 16) + 8) + 32))(v62, v28);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v27, v28);
  if (LOBYTE(v62[0]) > v16) {
    unsigned int v16 = LOBYTE(v62[0]);
  }
  HIBYTE(v62[0]) = v16;
  if (v16 > 1) {
    goto LABEL_23;
  }
  uint64_t v30 = v43;
  swift_getAtKeyPath();
  uint64_t v31 = v45;
  uint64_t v32 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v32 + 16) + 8) + 32))(v62, v31);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v31);
  if (LOBYTE(v62[0]) > v16) {
    unsigned int v16 = LOBYTE(v62[0]);
  }
  HIBYTE(v62[0]) = v16;
  if (v16 > 1)
  {
LABEL_23:
    uint64_t result = sub_1C43423A0((uint64_t)&v62[1]);
  }
  else
  {
    uint64_t v33 = v39;
    swift_getAtKeyPath();
    uint64_t v34 = AssociatedTypeWitness;
    uint64_t v35 = swift_getAssociatedConformanceWitness();
    (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v35 + 16) + 8) + 32))(v62, v34);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v33, v34);
    unsigned int v36 = LOBYTE(v62[0]);
    uint64_t result = sub_1C43423A0((uint64_t)&v62[1]);
    if (v36 > v16) {
      LOBYTE(v16) = v36;
    }
  }
  unsigned char *v61 = v16;
  return result;
}

uint64_t CRStruct_7<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, char *a10)
{
  void (*v24)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t result;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  int64_t v64;
  unint64_t v65;
  unint64_t i;
  unint64_t v68;
  int64_t v69;
  uint64_t *v70;
  uint64_t v71;
  void *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  void *v119;
  void *v120;
  uint64_t v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  void *v126;
  void *v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  uint64_t v131;
  void *v132;
  uint64_t v133;
  uint64_t v134;
  void *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  void *v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;
  uint64_t v145;
  uint64_t v146;
  void *v147;
  uint64_t v148;
  uint64_t v149;
  void *v150;
  uint64_t v151;
  void v152[24];

  uint64_t v116 = a1;
  uint64_t v92 = a8;
  uint64_t v97 = a7;
  uint64_t v102 = a6;
  uint64_t v106 = a5;
  uint64_t v112 = a4;
  uint64_t v11 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v83 = AssociatedTypeWitness;
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v81 = (char *)&v77 - v13;
  uint64_t v87 = swift_getAssociatedTypeWitness();
  BOOL v84 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v86 = (char *)&v77 - v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  BOOL v90 = *(void *)(v15 - 8);
  uint64_t v91 = v15;
  MEMORY[0x1F4188790](v15);
  int v89 = (char *)&v77 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  char v95 = *(void *)(v17 - 8);
  BOOL v96 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v94 = (char *)&v77 - v18;
  uint64_t v19 = swift_getAssociatedTypeWitness();
  uint64_t v100 = *(void *)(v19 - 8);
  uint64_t v101 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v99 = (char *)&v77 - v20;
  uint64_t v105 = swift_getAssociatedTypeWitness();
  int v103 = *(void *)(v105 - 8);
  MEMORY[0x1F4188790](v105);
  uint64_t v114 = (char *)&v77 - v21;
  uint64_t v111 = swift_getAssociatedTypeWitness();
  uint64_t v108 = *(void *)(v111 - 8);
  MEMORY[0x1F4188790](v111);
  uint64_t v109 = (char *)&v77 - v22;
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF70);
  uint64_t v113 = *(void *)(v117 - 8);
  MEMORY[0x1F4188790](v117);
  uint64_t v125 = (char *)&v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v11 + 128);
  uint64_t v78 = v11;
  uint64_t v79 = a2;
  v24(&v131, a2, v11);
  uint64_t v110 = v131;
  uint64_t v130 = v132;
  uint64_t v25 = v133;
  uint64_t v122 = v135;
  int v118 = v136;
  uint64_t v120 = v138;
  uint64_t v124 = v139;
  uint64_t v126 = v141;
  uint64_t v127 = v144;
  uint64_t v128 = v142;
  uint64_t v129 = v145;
  uint64_t v26 = v147;
  uint64_t v27 = v148;
  v152[0] = v131;
  v152[1] = v132;
  v152[2] = v133;
  v152[3] = v134;
  uint64_t v104 = v134;
  v152[4] = v135;
  v152[5] = v136;
  unsigned int v98 = v137;
  v152[6] = v137;
  v152[7] = v138;
  v152[8] = v139;
  v152[9] = v140;
  uint64_t v93 = v140;
  v152[10] = v141;
  v152[11] = v142;
  uint64_t v88 = v143;
  v152[12] = v143;
  v152[13] = v144;
  v152[14] = v145;
  v152[15] = v146;
  uint64_t v85 = v146;
  v152[16] = v147;
  v152[17] = v148;
  uint64_t v80 = v149;
  v152[18] = v149;
  v152[19] = v150;
  uint64_t v119 = v150;
  v152[20] = v151;
  uint64_t v121 = v151;
  __swift_project_boxed_opaque_existential_1(v116, v116[3]);
  sub_1C42469F0();
  sub_1C44986A8();
  sub_1C43422B8((uint64_t)v152);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v28 = v27;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v29 = v109;
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v152);
  uint64_t v107 = v25;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v115 = v28;
  uint64_t v30 = v111;
  swift_release();
  uint64_t v116 = v26;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v131 = v110;
  uint64_t v31 = v125;
  uint64_t v32 = v117;
  int v132 = v130;
  uint64_t v33 = v123;
  sub_1C4498048();
  uint64_t v123 = v33;
  if (v33)
  {
    sub_1C43423A0((uint64_t)v152);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v29, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v31, v32);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v29, v30);
  sub_1C43422B8((uint64_t)v152);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v152);
  uint64_t v35 = v117;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unsigned int v36 = v125;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = v105;
  uint64_t v38 = v123;
  uint64_t v131 = v104;
  int v132 = v122;
  sub_1C4498048();
  uint64_t v123 = v38;
  if (v38)
  {
    sub_1C43423A0((uint64_t)v152);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v103 + 8))(v114, v37);
    return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v36, v35);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v114, v37);
  sub_1C43422B8((uint64_t)v152);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = v99;
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v152);
  uint64_t v40 = v125;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v131 = v98;
  int v132 = v120;
  uint64_t v41 = v101;
  uint64_t v42 = v123;
  sub_1C4498048();
  uint64_t v43 = v113;
  uint64_t v123 = v42;
  if (v42)
  {
    sub_1C43423A0((uint64_t)v152);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v39, v41);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v40, v117);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v39, v41);
  sub_1C43422B8((uint64_t)v152);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v94;
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v152);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v125;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v131 = v93;
  int v132 = v126;
  uint64_t v46 = v96;
  uint64_t v47 = v123;
  sub_1C4498048();
  uint64_t v123 = v47;
  if (v47)
  {
    sub_1C43423A0((uint64_t)v152);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v95 + 8))(v44, v46);
    return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v45, v117);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v95 + 8))(v44, v46);
  sub_1C43422B8((uint64_t)v152);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v48 = v89;
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v152);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v125;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v131 = v88;
  int v132 = v127;
  uint64_t v49 = v91;
  uint64_t v50 = v123;
  sub_1C4498048();
  uint64_t v123 = v50;
  if (v50)
  {
    sub_1C43423A0((uint64_t)v152);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v48, v49);
    return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v45, v117);
  }
  uint64_t v114 = a9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v48, v49);
  sub_1C43422B8((uint64_t)v152);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = v86;
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v152);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v125;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v131 = v85;
  int v132 = v116;
  uint64_t v52 = v87;
  uint64_t v53 = v123;
  sub_1C4498048();
  uint64_t v123 = v53;
  if (v53)
  {
    sub_1C43423A0((uint64_t)v152);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v84 + 8))(v51, v52);
    return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v45, v117);
  }
  uint64_t v114 = a10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v84 + 8))(v51, v52);
  sub_1C43422B8((uint64_t)v152);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v54 = v81;
  swift_getAtKeyPath();
  swift_release();
  sub_1C43422B8((uint64_t)v152);
  uint64_t v55 = v119;
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v125;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v131 = v80;
  int v132 = v55;
  uint64_t v56 = v83;
  uint64_t v57 = v123;
  sub_1C4498048();
  uint64_t v123 = v57;
  if (v57)
  {
    sub_1C43423A0((uint64_t)v152);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v54, v56);
    return (*(uint64_t (**)(char *, uint64_t))(v113 + 8))(v45, v117);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v54, v56);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v78 + 8) + 24))(v79);
  uint64_t v58 = result;
  uint64_t v59 = 0;
  uint64_t v60 = result + 64;
  uint64_t v61 = 1 << *(unsigned char *)(result + 32);
  uint64_t v62 = -1;
  if (v61 < 64) {
    uint64_t v62 = ~(-1 << v61);
  }
  uint64_t v63 = v62 & *(void *)(result + 64);
  uint64_t v64 = (unint64_t)(v61 + 63) >> 6;
  if (!v63) {
    goto LABEL_20;
  }
LABEL_19:
  uint64_t v65 = __clz(__rbit64(v63));
  v63 &= v63 - 1;
  for (unint64_t i = v65 | (v59 << 6); ; unint64_t i = __clz(__rbit64(v68)) + (v59 << 6))
  {
    uint64_t v70 = (uint64_t *)(*(void *)(v58 + 48) + 16 * i);
    uint64_t v71 = *v70;
    int v72 = (void *)v70[1];
    v152[23] = *(void *)(*(void *)(v58 + 56) + 8 * i);
    uint64_t v131 = v71;
    int v132 = v72;
    sub_1C4246A44();
    swift_bridgeObjectRetain();
    swift_retain();
    BOOL v73 = v123;
    sub_1C4498048();
    uint64_t v123 = v73;
    if (v73)
    {
      sub_1C43423A0((uint64_t)v152);
      swift_release();
      (*(void (**)(char *, uint64_t))(v113 + 8))(v125, v117);
      swift_release();
      return swift_bridgeObjectRelease();
    }
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v63) {
      goto LABEL_19;
    }
LABEL_20:
    if (__OFADD__(v59++, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v59 >= v64) {
      goto LABEL_39;
    }
    uint64_t v68 = *(void *)(v60 + 8 * v59);
    if (!v68) {
      break;
    }
LABEL_30:
    uint64_t v63 = (v68 - 1) & v68;
  }
  uint64_t v69 = v59 + 1;
  if (v59 + 1 >= v64) {
    goto LABEL_39;
  }
  uint64_t v68 = *(void *)(v60 + 8 * v69);
  if (v68) {
    goto LABEL_29;
  }
  uint64_t v69 = v59 + 2;
  if (v59 + 2 >= v64) {
    goto LABEL_39;
  }
  uint64_t v68 = *(void *)(v60 + 8 * v69);
  if (v68) {
    goto LABEL_29;
  }
  uint64_t v69 = v59 + 3;
  if (v59 + 3 >= v64)
  {
LABEL_39:
    uint64_t v74 = v113;
    uint64_t v75 = v117;
    uint64_t v76 = v125;
    sub_1C43423A0((uint64_t)v152);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v74 + 8))(v76, v75);
  }
  uint64_t v68 = *(void *)(v60 + 8 * v69);
  if (v68)
  {
LABEL_29:
    uint64_t v59 = v69;
    goto LABEL_30;
  }
  while (1)
  {
    uint64_t v59 = v69 + 1;
    if (__OFADD__(v69, 1)) {
      break;
    }
    if (v59 >= v64) {
      goto LABEL_39;
    }
    uint64_t v68 = *(void *)(v60 + 8 * v59);
    ++v69;
    if (v68) {
      goto LABEL_30;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t CRStruct_8.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v33)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t AssociatedConformanceWitness;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t AssociatedTypeWitness;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void v124[24];

  uint64_t v5 = v4;
  uint64_t v117 = a1;
  uint64_t v110 = a4;
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v103 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v100 = (char *)&v71 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v101 = (char *)&v71 - v11;
  unsigned int v98 = swift_getAssociatedTypeWitness();
  uint64_t v99 = *(void *)(v98 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v98);
  BOOL v96 = (char *)&v71 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v97 = (char *)&v71 - v14;
  uint64_t v94 = swift_getAssociatedTypeWitness();
  char v95 = *(void *)(v94 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v94);
  uint64_t v92 = (char *)&v71 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v93 = (char *)&v71 - v17;
  BOOL v90 = swift_getAssociatedTypeWitness();
  uint64_t v91 = *(void *)(v90 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v90);
  uint64_t v88 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  int v89 = (char *)&v71 - v20;
  uint64_t v86 = swift_getAssociatedTypeWitness();
  uint64_t v87 = *(void *)(v86 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v86);
  BOOL v84 = (char *)&v71 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v85 = (char *)&v71 - v23;
  uint64_t v82 = swift_getAssociatedTypeWitness();
  uint64_t v83 = *(void *)(v82 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v82);
  uint64_t v80 = (char *)&v71 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v81 = (char *)&v71 - v26;
  uint64_t v78 = swift_getAssociatedTypeWitness();
  uint64_t v79 = *(void *)(v78 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v78);
  uint64_t v76 = (char *)&v71 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v77 = (char *)&v71 - v29;
  uint64_t v74 = swift_getAssociatedTypeWitness();
  uint64_t v75 = *(void *)(v74 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v74);
  int v72 = (char *)&v71 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  BOOL v73 = (char *)&v71 - v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v115 = v8;
  uint64_t v33 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 144);
  uint64_t v116 = a2;
  v33(v124, a2, v8);
  uint64_t v113 = v124[2];
  int v118 = v124[4];
  uint64_t v123 = v124[5];
  uint64_t v119 = v124[7];
  uint64_t v121 = v124[8];
  uint64_t v122 = v124[10];
  uint64_t v34 = v124[11];
  uint64_t v35 = v124[13];
  unsigned int v36 = v124[17];
  uint64_t v109 = v124[23];
  uint64_t v108 = v124[1];
  uint64_t v111 = v124[14];
  uint64_t v37 = v124[16];
  uint64_t v120 = v124[19];
  uint64_t v38 = v124[20];
  uint64_t v39 = v124[22];
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v114 = v39;
  swift_bridgeObjectRelease();
  uint64_t v106 = v38;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v105 = v36;
  swift_release();
  uint64_t v104 = v37;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v107 = v35;
  swift_bridgeObjectRelease();
  uint64_t v112 = v34;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v40 = v72;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v41 = v74;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(v117, v41);
  (*(void (**)(char *, uint64_t))(v75 + 8))(v40, v41);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v76;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v44 = v78;
  uint64_t v45 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 + 16) + 24))(v117, v44);
  (*(void (**)(char *, uint64_t))(v79 + 8))(v43, v44);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v46 = v80;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v47 = v82;
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v48 + 16) + 24))(v117, v47);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v46, v47);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = v84;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v50 = v86;
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 + 16) + 24))(v117, v50);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v49, v50);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v52 = v88;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v53 = v90;
  uint64_t v54 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v54 + 16) + 24))(v117, v53);
  (*(void (**)(char *, uint64_t))(v91 + 8))(v52, v53);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v55 = v92;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v56 = v94;
  uint64_t v57 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 + 16) + 24))(v117, v56);
  (*(void (**)(char *, uint64_t))(v95 + 8))(v55, v56);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v58 = v96;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v59 = v98;
  uint64_t v60 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v60 + 16) + 24))(v117, v59);
  (*(void (**)(char *, uint64_t))(v99 + 8))(v58, v59);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v124);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v61 = v100;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v62 = v115;
  uint64_t v63 = v116;
  uint64_t v64 = AssociatedTypeWitness;
  uint64_t v65 = swift_getAssociatedConformanceWitness();
  uint64_t v66 = v117;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 + 16) + 24))(v117, v64);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v61, v64);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v67 = *(void *)(v62 + 8);
  uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 24))(v63, v67);
  uint64_t v69 = sub_1C4341774(v68, v66);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v69, v63, v67);
  return sub_1C4342588((uint64_t)v124);
}

uint64_t CRStruct_8.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v35)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t AssociatedConformanceWitness;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void v71[2];
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t AssociatedTypeWitness;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  void v123[24];
  unint64_t v124;

  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v101 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v100 = (char *)v71 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v99 = (char *)v71 - v12;
  unsigned int v98 = swift_getAssociatedTypeWitness();
  uint64_t v97 = *(void *)(v98 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v98);
  BOOL v96 = (char *)v71 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  char v95 = (char *)v71 - v15;
  uint64_t v94 = swift_getAssociatedTypeWitness();
  uint64_t v93 = *(void *)(v94 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v94);
  uint64_t v92 = (char *)v71 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  uint64_t v91 = (char *)v71 - v18;
  BOOL v90 = swift_getAssociatedTypeWitness();
  int v89 = *(void *)(v90 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v90);
  uint64_t v88 = (char *)v71 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  uint64_t v87 = (char *)v71 - v21;
  uint64_t v86 = swift_getAssociatedTypeWitness();
  uint64_t v85 = *(void *)(v86 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v86);
  BOOL v84 = (char *)v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v83 = (char *)v71 - v24;
  uint64_t v82 = swift_getAssociatedTypeWitness();
  uint64_t v81 = *(void *)(v82 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v82);
  uint64_t v80 = (char *)v71 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v79 = (char *)v71 - v27;
  uint64_t v78 = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(void *)(v78 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v78);
  uint64_t v76 = (char *)v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  uint64_t v75 = (char *)v71 - v30;
  uint64_t v74 = swift_getAssociatedTypeWitness();
  BOOL v73 = *(void *)(v74 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v74);
  int v72 = (char *)v71 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  v71[1] = (char *)v71 - v33;
  if (a1) {
    unint64_t v34 = a1;
  }
  else {
    unint64_t v34 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  uint64_t v124 = v34;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v114 = a4;
  uint64_t v116 = v5;
  uint64_t v35 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 144);
  swift_bridgeObjectRetain();
  uint64_t v117 = a2;
  v35(v123, a2, v9);
  uint64_t v107 = v123[2];
  uint64_t v119 = v123[4];
  uint64_t v120 = v123[5];
  int v118 = v123[7];
  uint64_t v111 = v123[8];
  uint64_t v121 = v123[10];
  unsigned int v36 = v123[11];
  uint64_t v115 = v9;
  uint64_t v37 = v123[17];
  uint64_t v38 = v123[20];
  uint64_t v110 = v123[23];
  uint64_t v109 = v123[1];
  uint64_t v39 = v123[13];
  uint64_t v122 = v123[14];
  uint64_t v40 = v123[16];
  uint64_t v106 = v123[19];
  uint64_t v104 = v123[22];
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  int v103 = v38;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v112 = v37;
  swift_release();
  uint64_t v108 = v40;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v105 = v36;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v41 = v72;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v42 = v74;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(&v124, v42);
  (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v42);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v113 = v39;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v76;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v45 = v78;
  uint64_t v46 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v46 + 16) + 24))(&v124, v45);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v44, v45);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = v80;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v48 = v82;
  uint64_t v49 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v49 + 16) + 24))(&v124, v48);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v47, v48);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v50 = v84;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v51 = v86;
  uint64_t v52 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v52 + 16) + 24))(&v124, v51);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v50, v51);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v53 = v88;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v54 = v90;
  uint64_t v55 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v55 + 16) + 24))(&v124, v54);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v53, v54);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v56 = v92;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v57 = v94;
  uint64_t v58 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v58 + 16) + 24))(&v124, v57);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v56, v57);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v59 = v96;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v60 = v98;
  uint64_t v61 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v61 + 16) + 24))(&v124, v60);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v59, v60);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v123);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v62 = v100;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v63 = v115;
  uint64_t v64 = v117;
  uint64_t v65 = AssociatedTypeWitness;
  uint64_t v66 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v66 + 16) + 24))(&v124, v65);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v62, v65);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v67 = *(void *)(v63 + 8);
  uint64_t v68 = (*(uint64_t (**)(uint64_t, uint64_t))(v67 + 24))(v64, v67);
  uint64_t v69 = sub_1C4341774(v68, (uint64_t)&v124);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 32))(v69, v64, v67);
  return sub_1C4342588((uint64_t)v123);
}

uint64_t static CRStruct_8.fieldKeys.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(*(void *)(a2 + 8) + 144))(v20);
  uint64_t v17 = v20[1];
  uint64_t v4 = v20[0];
  uint64_t v5 = v20[3];
  uint64_t v13 = v20[4];
  uint64_t v6 = v20[6];
  uint64_t v7 = v20[9];
  uint64_t v19 = v20[7];
  uint64_t v8 = v20[12];
  uint64_t v9 = v20[15];
  uint64_t v15 = v20[16];
  uint64_t v10 = v20[18];
  uint64_t v11 = v20[21];
  uint64_t v12 = v20[10];
  uint64_t v14 = v20[13];
  uint64_t v16 = v20[19];
  uint64_t v18 = v20[22];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0250);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1C449BDC0;
  sub_1C4342484((uint64_t)v20);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v17;
  sub_1C4342484((uint64_t)v20);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = v5;
  *(void *)(v2 + 56) = v13;
  sub_1C4342484((uint64_t)v20);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = v6;
  *(void *)(v2 + 72) = v19;
  sub_1C4342484((uint64_t)v20);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 80) = v7;
  *(void *)(v2 + 88) = v12;
  sub_1C4342484((uint64_t)v20);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 96) = v8;
  *(void *)(v2 + 104) = v14;
  sub_1C4342484((uint64_t)v20);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 112) = v9;
  *(void *)(v2 + 120) = v15;
  sub_1C4342484((uint64_t)v20);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = v10;
  *(void *)(v2 + 136) = v16;
  sub_1C4342484((uint64_t)v20);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 144) = v11;
  *(void *)(v2 + 152) = v18;
  sub_1C4342588((uint64_t)v20);
  return v2;
}

uint64_t CRStruct_8.merge(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v13)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, void);
  uint64_t v20;
  uint64_t AssociatedConformanceWitness;
  char *v22;
  void (*v23)(char *, void);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, void);
  uint64_t v28;
  uint64_t v29;
  char *v30;
  void (*v31)(char *, void);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, void);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void (*v39)(char *, void);
  uint64_t v40;
  uint64_t v41;
  char *v42;
  void (*v43)(char *, void);
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, void);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(char *, void);
  uint64_t v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  uint64_t AssociatedTypeWitness;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char v100[8];
  void v101[24];

  uint64_t v92 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v80 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v78 = (char *)&v56 - v5;
  uint64_t v76 = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(void *)(v76 - 8);
  MEMORY[0x1F4188790](v76);
  uint64_t v75 = (char *)&v56 - v6;
  BOOL v73 = swift_getAssociatedTypeWitness();
  uint64_t v74 = *(void *)(v73 - 8);
  MEMORY[0x1F4188790](v73);
  int v72 = (char *)&v56 - v7;
  uint64_t v70 = swift_getAssociatedTypeWitness();
  uint64_t v71 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v69 = (char *)&v56 - v8;
  uint64_t v67 = swift_getAssociatedTypeWitness();
  uint64_t v68 = *(void *)(v67 - 8);
  MEMORY[0x1F4188790](v67);
  uint64_t v66 = (char *)&v56 - v9;
  uint64_t v64 = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(v64 - 8);
  MEMORY[0x1F4188790](v64);
  uint64_t v63 = (char *)&v56 - v10;
  uint64_t v61 = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v60 = (char *)&v56 - v11;
  uint64_t v58 = swift_getAssociatedTypeWitness();
  uint64_t v59 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v57 = (char *)&v56 - v12;
  BOOL v90 = v4;
  uint64_t v13 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 144);
  uint64_t v91 = a2;
  v13(v101, a2, v4);
  uint64_t v82 = v101[2];
  uint64_t v81 = v101[4];
  uint64_t v94 = v101[5];
  uint64_t v93 = v101[7];
  uint64_t v86 = v101[8];
  uint64_t v87 = v101[10];
  uint64_t v83 = v101[11];
  uint64_t v14 = v101[13];
  uint64_t v15 = v101[16];
  uint64_t v16 = v101[20];
  uint64_t v17 = v101[23];
  unsigned int v98 = v101[1];
  uint64_t v97 = v101[14];
  BOOL v84 = v101[17];
  char v95 = v101[19];
  uint64_t v99 = v101[22];
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  int v89 = v17;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v85 = v16;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  BOOL v96 = v15;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v88 = v14;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v18 = v57;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v19 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v20 = v58;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(AssociatedConformanceWitness + 8) + 8))(v18, v20);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v18, v20);
  v19(v100, 0);
  swift_release();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v22 = v60;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v23 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v24 = v61;
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v25 + 8) + 8))(v22, v24);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v22, v24);
  v23(v100, 0);
  swift_release();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v26 = v63;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v27 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v28 = v64;
  uint64_t v29 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v29 + 8) + 8))(v26, v28);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v26, v28);
  v27(v100, 0);
  swift_release();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = v66;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v31 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v32 = v67;
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v33 + 8) + 8))(v30, v32);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v30, v32);
  v31(v100, 0);
  swift_release();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unint64_t v34 = v69;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v35 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  unsigned int v36 = v70;
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v37 + 8) + 8))(v34, v36);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v34, v36);
  v35(v100, 0);
  swift_release();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = v72;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v39 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v40 = v73;
  uint64_t v41 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v41 + 8) + 8))(v38, v40);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v38, v40);
  v39(v100, 0);
  swift_release();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v42 = v75;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v43 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v44 = v76;
  uint64_t v45 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v45 + 8) + 8))(v42, v44);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v42, v44);
  v43(v100, 0);
  swift_release();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342484((uint64_t)v101);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v46 = v78;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v47 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v48 = v90;
  uint64_t v49 = v91;
  uint64_t v50 = AssociatedTypeWitness;
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  (*(void (**)(char *, uint64_t))(*(void *)(v51 + 8) + 8))(v46, v50);
  (*(void (**)(char *, uint64_t))(v80 + 8))(v46, v50);
  v47(v100, 0);
  swift_release();
  uint64_t v52 = *(void *)(v48 + 8);
  uint64_t v53 = (*(uint64_t (**)(uint64_t, uint64_t))(v52 + 24))(v49, v52);
  uint64_t v54 = (void (*)(char *, void))(*(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 40))(v100, v49, v52);
  sub_1C4477B90(v53);
  swift_bridgeObjectRelease();
  v54(v100, 0);
  (*(void (**)(uint64_t, uint64_t))(v52 + 64))(v49, v52);
  return sub_1C4342588((uint64_t)v101);
}

uint64_t CRStruct_8.observableDifference(from:with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  void (*v54)(uint64_t *__return_ptr, uint64_t, uint64_t);
  void (*v55)(char *, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, uint64_t);
  char *v63;
  char *v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  char *v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t);
  char *v71;
  char *v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t);
  char *v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t);
  char *v79;
  char *v80;
  uint64_t v81;
  void (*v82)(char *, uint64_t);
  char *v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, uint64_t);
  char *v87;
  char *v88;
  uint64_t v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  char *v92;
  BOOL v93;
  char *v94;
  char *v95;
  BOOL v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  char *v101;
  char *v102;
  BOOL v103;
  BOOL v104;
  BOOL v105;
  void (*v106)(char *, uint64_t);
  BOOL v107;
  char *v108;
  void (*v109)(char *, uint64_t);
  void (*v110)(char *, uint64_t);
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  int *TupleTypeMetadata;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t AssociatedTypeWitness;
  char *v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  char *v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  char *v196;
  uint64_t v197;
  char *v198;
  uint64_t v199;
  char *v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  void *v213;
  void *v214;
  uint64_t v215;
  uint64_t v216;
  void *v217;
  void *v218;
  void *v219;
  void *v220;
  void *v221;
  void (*v222)(char *, uint64_t);
  void (*v223)(char *, uint64_t);
  void (*v224)(char *, uint64_t);
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  void *v236;
  void *v237;
  void (*v238)(char *, uint64_t);
  uint64_t v239;
  uint64_t v240;
  void *v241;
  uint64_t v242;
  void *v243;
  void *v244;
  void *v245;

  uint64_t v215 = a2;
  uint64_t v216 = a1;
  uint64_t v180 = a5;
  uint64_t v6 = *(void *)(a4 + 8);
  uint64_t v225 = (char *)&associated type descriptor for CRStruct_Base_8.Type_1;
  swift_getAssociatedTypeWitness();
  uint64_t v226 = (char *)&associated conformance descriptor for CRStruct_Base_8.CRStruct_Base_8.Type_1: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v227 = sub_1C4497B38();
  uint64_t v223 = (void (*)(char *, uint64_t))&associated type descriptor for CRStruct_Base_8.Type_2;
  swift_getAssociatedTypeWitness();
  uint64_t v224 = (void (*)(char *, uint64_t))&associated conformance descriptor for CRStruct_Base_8.CRStruct_Base_8.Type_2: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v228 = sub_1C4497B38();
  uint64_t v221 = &associated type descriptor for CRStruct_Base_8.Type_3;
  swift_getAssociatedTypeWitness();
  uint64_t v222 = (void (*)(char *, uint64_t))&associated conformance descriptor for CRStruct_Base_8.CRStruct_Base_8.Type_3: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v229 = sub_1C4497B38();
  char v219 = &associated type descriptor for CRStruct_Base_8.Type_4;
  swift_getAssociatedTypeWitness();
  uint64_t v220 = &associated conformance descriptor for CRStruct_Base_8.CRStruct_Base_8.Type_4: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v230 = sub_1C4497B38();
  uint64_t v217 = &associated type descriptor for CRStruct_Base_8.Type_5;
  swift_getAssociatedTypeWitness();
  uint64_t v218 = &associated conformance descriptor for CRStruct_Base_8.CRStruct_Base_8.Type_5: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v231 = sub_1C4497B38();
  uint64_t v213 = &associated type descriptor for CRStruct_Base_8.Type_6;
  swift_getAssociatedTypeWitness();
  uint64_t v214 = &associated conformance descriptor for CRStruct_Base_8.CRStruct_Base_8.Type_6: CRDT;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v232 = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v233 = sub_1C4497B38();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v234 = sub_1C4497B38();
  uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  MEMORY[0x1F4188790](TupleTypeMetadata);
  int v132 = (char *)&v125 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v173 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v172 = (char *)&v125 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v168 = (char *)&v125 - v10;
  uint64_t v170 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v131 = swift_getAssociatedTypeWitness();
  uint64_t v189 = sub_1C4497B38();
  uint64_t v188 = *(void *)(v189 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v189);
  uint64_t v177 = (char *)&v125 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v208 = (char *)&v125 - v13;
  uint64_t v162 = swift_getAssociatedTypeWitness();
  uint64_t v164 = *(void *)(v162 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v162);
  uint64_t v163 = (char *)&v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v187 = (char *)&v125 - v16;
  uint64_t v161 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v130 = swift_getAssociatedTypeWitness();
  uint64_t v207 = sub_1C4497B38();
  uint64_t v176 = *(void *)(v207 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v207);
  uint64_t v175 = (char *)&v125 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v206 = (char *)&v125 - v19;
  uint64_t v156 = swift_getAssociatedTypeWitness();
  uint64_t v159 = *(void *)(v156 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v156);
  uint64_t v157 = (char *)&v125 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v186 = (char *)&v125 - v22;
  uint64_t v155 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v129 = swift_getAssociatedTypeWitness();
  uint64_t v205 = sub_1C4497B38();
  uint64_t v194 = *(void *)(v205 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v205);
  uint64_t v174 = (char *)&v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v204 = (char *)&v125 - v25;
  uint64_t v151 = swift_getAssociatedTypeWitness();
  uint64_t v153 = *(void *)(v151 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v151);
  uint64_t v152 = (char *)&v125 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  unint64_t v185 = (char *)&v125 - v28;
  uint64_t v150 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v128 = swift_getAssociatedTypeWitness();
  uint64_t v203 = sub_1C4497B38();
  uint64_t v193 = *(void *)(v203 - 8);
  uint64_t v29 = MEMORY[0x1F4188790](v203);
  uint64_t v169 = (char *)&v125 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v29);
  uint64_t v202 = (char *)&v125 - v31;
  uint64_t v147 = swift_getAssociatedTypeWitness();
  uint64_t v149 = *(void *)(v147 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v147);
  uint64_t v148 = (char *)&v125 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v184 = (char *)&v125 - v34;
  uint64_t v146 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v127 = swift_getAssociatedTypeWitness();
  uint64_t v201 = sub_1C4497B38();
  uint64_t v192 = *(void *)(v201 - 8);
  uint64_t v35 = MEMORY[0x1F4188790](v201);
  uint64_t v165 = (char *)&v125 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v35);
  uint64_t v200 = (char *)&v125 - v37;
  uint64_t v143 = swift_getAssociatedTypeWitness();
  uint64_t v145 = *(void *)(v143 - 8);
  uint64_t v38 = MEMORY[0x1F4188790](v143);
  uint64_t v144 = (char *)&v125 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v38);
  uint64_t v183 = (char *)&v125 - v40;
  uint64_t v142 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v126 = swift_getAssociatedTypeWitness();
  uint64_t v199 = sub_1C4497B38();
  uint64_t v191 = *(void *)(v199 - 8);
  uint64_t v41 = MEMORY[0x1F4188790](v199);
  uint64_t v160 = (char *)&v125 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v41);
  uint64_t v198 = (char *)&v125 - v43;
  uint64_t v139 = swift_getAssociatedTypeWitness();
  uint64_t v141 = *(void *)(v139 - 8);
  uint64_t v44 = MEMORY[0x1F4188790](v139);
  uint64_t v140 = (char *)&v125 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v44);
  uint64_t v182 = (char *)&v125 - v46;
  uint64_t v138 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v125 = swift_getAssociatedTypeWitness();
  uint64_t v197 = sub_1C4497B38();
  uint64_t v190 = *(void *)(v197 - 8);
  uint64_t v47 = MEMORY[0x1F4188790](v197);
  uint64_t v158 = (char *)&v125 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v47);
  uint64_t v196 = (char *)&v125 - v49;
  uint64_t v135 = swift_getAssociatedTypeWitness();
  uint64_t v137 = *(void *)(v135 - 8);
  uint64_t v50 = MEMORY[0x1F4188790](v135);
  uint64_t v136 = (char *)&v125 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v50);
  uint64_t v181 = (char *)&v125 - v52;
  uint64_t v134 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v154 = swift_getAssociatedTypeWitness();
  uint64_t v167 = sub_1C4497B38();
  uint64_t v166 = *(void *)(v167 - 8);
  MEMORY[0x1F4188790](v167);
  uint64_t v195 = (char *)&v125 - v53;
  uint64_t v54 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v6 + 144);
  uint64_t v179 = a3;
  uint64_t v178 = v6;
  v54(&v227, a3, v6);
  uint64_t v222 = (void (*)(char *, uint64_t))v229;
  uint64_t v226 = (char *)v231;
  uint64_t v223 = (void (*)(char *, uint64_t))v232;
  uint64_t v220 = (void *)v234;
  uint64_t v221 = v236;
  uint64_t v217 = v237;
  uint64_t v55 = v238;
  uint64_t v56 = v239;
  uint64_t v211 = v228;
  uint64_t v225 = v235;
  uint64_t v57 = v240;
  uint64_t v58 = v241;
  uint64_t v209 = v242;
  uint64_t v218 = v243;
  uint64_t v213 = v244;
  char v219 = v245;
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v214 = v58;
  swift_release();
  uint64_t v212 = v57;
  swift_bridgeObjectRelease();
  uint64_t v210 = v56;
  swift_release();
  uint64_t v224 = v55;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v59 = v136;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v60 = v181;
  uint64_t v61 = v135;
  (*(void (**)(char *, uint64_t, uint64_t))(v134 + 40))(v59, v215, v135);
  uint64_t v62 = *(void (**)(char *, uint64_t))(v137 + 8);
  v62(v59, v61);
  v62(v60, v61);
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v63 = v140;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v64 = v182;
  uint64_t v65 = v139;
  (*(void (**)(char *, uint64_t, uint64_t))(v138 + 40))(v63, v215, v139);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v141 + 8);
  v66(v63, v65);
  v66(v64, v65);
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v67 = v144;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v68 = v183;
  uint64_t v69 = v143;
  (*(void (**)(char *, uint64_t, uint64_t))(v142 + 40))(v67, v215, v143);
  uint64_t v70 = *(void (**)(char *, uint64_t))(v145 + 8);
  v70(v67, v69);
  v70(v68, v69);
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v71 = v148;
  swift_getAtKeyPath();
  swift_release();
  int v72 = v184;
  BOOL v73 = v147;
  (*(void (**)(char *, uint64_t, uint64_t))(v146 + 40))(v71, v215, v147);
  uint64_t v74 = *(void (**)(char *, uint64_t))(v149 + 8);
  v74(v71, v73);
  v74(v72, v73);
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v75 = v152;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v76 = v185;
  uint64_t v77 = v151;
  (*(void (**)(char *, uint64_t, uint64_t))(v150 + 40))(v75, v215, v151);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v153 + 8);
  v78(v75, v77);
  v78(v76, v77);
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v79 = v157;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v80 = v186;
  uint64_t v81 = v156;
  (*(void (**)(char *, uint64_t, uint64_t))(v155 + 40))(v79, v215, v156);
  uint64_t v82 = *(void (**)(char *, uint64_t))(v159 + 8);
  v82(v79, v81);
  v82(v80, v81);
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v83 = v163;
  swift_getAtKeyPath();
  swift_release();
  BOOL v84 = v187;
  uint64_t v85 = v162;
  (*(void (**)(char *, uint64_t, uint64_t))(v161 + 40))(v83, v215, v162);
  uint64_t v86 = *(void (**)(char *, uint64_t))(v164 + 8);
  v86(v83, v85);
  v86(v84, v85);
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v87 = v168;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)&v227);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v88 = v172;
  swift_getAtKeyPath();
  swift_release();
  int v89 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v170 + 40))(v88, v215, AssociatedTypeWitness);
  sub_1C4342588((uint64_t)&v227);
  BOOL v90 = *(void (**)(char *, uint64_t))(v173 + 8);
  v90(v88, v89);
  uint64_t v91 = v89;
  uint64_t v92 = v158;
  v90(v87, v91);
  uint64_t v93 = 1;
  LODWORD(v90) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v154 - 8) + 48))(v195, 1);
  (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v92, v196, v197);
  if (v90 == 1) {
    uint64_t v93 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v125 - 8) + 48))(v92, 1) != 1;
  }
  uint64_t v94 = *(char **)(v190 + 8);
  uint64_t v226 = (char *)(v190 + 8);
  uint64_t v225 = v94;
  ((void (*)(char *, uint64_t))v94)(v92, v197);
  char v95 = v160;
  (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v160, v198, v199);
  BOOL v96 = v93 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v126 - 8) + 48))(v95, 1) != 1;
  uint64_t v97 = v177;
  unsigned int v98 = v176;
  uint64_t v99 = v175;
  uint64_t v100 = v174;
  uint64_t v101 = v169;
  uint64_t v102 = v165;
  uint64_t v224 = *(void (**)(char *, uint64_t))(v191 + 8);
  v224(v95, v199);
  (*(void (**)(char *, char *, uint64_t))(v192 + 16))(v102, v200, v201);
  int v103 = v96 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v127 - 8) + 48))(v102, 1) != 1;
  uint64_t v223 = *(void (**)(char *, uint64_t))(v192 + 8);
  v223(v102, v201);
  (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v101, v202, v203);
  uint64_t v104 = v103 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v128 - 8) + 48))(v101, 1) != 1;
  uint64_t v222 = *(void (**)(char *, uint64_t))(v193 + 8);
  v222(v101, v203);
  (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v100, v204, v205);
  uint64_t v105 = v104 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v129 - 8) + 48))(v100, 1) != 1;
  uint64_t v106 = *(void (**)(char *, uint64_t))(v194 + 8);
  v106(v100, v205);
  (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v99, v206, v207);
  uint64_t v107 = v105 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v130 - 8) + 48))(v99, 1) != 1;
  uint64_t v108 = v99;
  uint64_t v109 = *(void (**)(char *, uint64_t))(v98 + 8);
  v109(v108, v207);
  (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v97, v208, v189);
  if (v107 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v131 - 8) + 48))(v97, 1) != 1)
  {
    uint64_t v115 = v98;
    uint64_t v116 = v188;
    uint64_t v117 = v189;
    (*(void (**)(char *, uint64_t))(v188 + 8))(v97, v189);
    int v118 = &v132[TupleTypeMetadata[12]];
    uint64_t v119 = &v132[TupleTypeMetadata[16]];
    uint64_t v120 = &v132[TupleTypeMetadata[20]];
    uint64_t v121 = &v132[TupleTypeMetadata[24]];
    uint64_t v122 = &v132[TupleTypeMetadata[28]];
    uint64_t v225 = &v132[TupleTypeMetadata[32]];
    uint64_t v226 = &v132[TupleTypeMetadata[36]];
    (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v132, v195, v167);
    (*(void (**)(char *, char *, uint64_t))(v190 + 32))(v118, v196, v197);
    (*(void (**)(char *, char *, uint64_t))(v191 + 32))(v119, v198, v199);
    (*(void (**)(char *, char *, uint64_t))(v192 + 32))(v120, v200, v201);
    (*(void (**)(char *, char *, uint64_t))(v193 + 32))(v121, v202, v203);
    (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v122, v204, v205);
    (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v225, v206, v207);
    (*(void (**)(char *, char *, uint64_t))(v116 + 32))(v226, v208, v117);
    uint64_t v123 = swift_getAssociatedTypeWitness();
    uint64_t v124 = v180;
    swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v123 - 8) + 56))(v124, 0, 1, v123);
  }
  else
  {
    uint64_t v110 = *(void (**)(char *, uint64_t))(v188 + 8);
    uint64_t v111 = v97;
    uint64_t v112 = v189;
    v110(v111, v189);
    v110(v208, v112);
    v109(v206, v207);
    v106(v204, v205);
    v222(v202, v203);
    v223(v200, v201);
    v224(v198, v199);
    ((void (*)(char *, uint64_t))v225)(v196, v197);
    (*(void (**)(char *, uint64_t))(v166 + 8))(v195, v167);
    uint64_t v113 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v180, 1, 1, v113);
  }
}

uint64_t CRStruct_8.hasDelta(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v29)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t AssociatedConformanceWitness;
  char *v41;
  void (*v42)(char *, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char v53;
  void (*v54)(char *, uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char v59;
  void (*v60)(char *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char v71;
  void (*v72)(char *, uint64_t);
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char v84;
  void (*v85)(char *, uint64_t);
  char v86;
  uint64_t v88;
  uint64_t (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t AssociatedTypeWitness;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void v144[24];

  int v132 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v94 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v93 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v99 = (char *)&v92 - v7;
  unsigned int v98 = swift_getAssociatedTypeWitness();
  uint64_t v97 = *(void *)(v98 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v98);
  BOOL v96 = (char *)&v92 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  int v103 = (char *)&v92 - v10;
  uint64_t v102 = swift_getAssociatedTypeWitness();
  uint64_t v101 = *(void *)(v102 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v102);
  uint64_t v100 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v107 = (char *)&v92 - v13;
  uint64_t v106 = swift_getAssociatedTypeWitness();
  uint64_t v105 = *(void *)(v106 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v106);
  uint64_t v104 = (char *)&v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v111 = (char *)&v92 - v16;
  uint64_t v110 = swift_getAssociatedTypeWitness();
  uint64_t v109 = *(void *)(v110 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v110);
  uint64_t v108 = (char *)&v92 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v115 = (char *)&v92 - v19;
  uint64_t v114 = swift_getAssociatedTypeWitness();
  uint64_t v113 = *(void *)(v114 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v114);
  uint64_t v112 = (char *)&v92 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v20);
  uint64_t v119 = (char *)&v92 - v22;
  int v118 = swift_getAssociatedTypeWitness();
  uint64_t v117 = *(void *)(v118 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v118);
  uint64_t v116 = (char *)&v92 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v125 = (char *)&v92 - v25;
  uint64_t v123 = swift_getAssociatedTypeWitness();
  uint64_t v124 = *(void *)(v123 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v123);
  uint64_t v122 = (char *)&v92 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v26);
  uint64_t v135 = (char *)&v92 - v28;
  uint64_t v134 = v4;
  uint64_t v29 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 144);
  uint64_t v133 = a2;
  v29(v144, a2, v4);
  uint64_t v137 = v144[2];
  uint64_t v143 = v144[4];
  uint64_t v141 = v144[5];
  uint64_t v142 = v144[7];
  uint64_t v140 = v144[8];
  uint64_t v139 = v144[10];
  uint64_t v30 = v144[11];
  uint64_t v32 = v144[13];
  uint64_t v31 = v144[14];
  uint64_t v33 = v144[16];
  uint64_t v34 = v144[17];
  uint64_t v35 = v144[19];
  uint64_t v36 = v144[22];
  uint64_t v37 = v144[23];
  uint64_t v136 = v144[1];
  uint64_t v138 = v144[20];
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  uint64_t v129 = v37;
  swift_release();
  uint64_t v131 = v36;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v130 = v35;
  swift_bridgeObjectRelease();
  uint64_t v126 = v34;
  swift_release();
  uint64_t v127 = v33;
  swift_bridgeObjectRelease();
  uint64_t v128 = v31;
  swift_release();
  uint64_t v120 = v32;
  swift_bridgeObjectRelease();
  uint64_t v121 = v30;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v38 = v122;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v39 = v123;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v41 = v135;
  LOBYTE(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v38, v39, AssociatedConformanceWitness);
  uint64_t v42 = *(void (**)(char *, uint64_t))(v124 + 8);
  v42(v38, v39);
  v42(v41, v39);
  if (a2) {
    goto LABEL_9;
  }
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v116;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v44 = v118;
  uint64_t v45 = swift_getAssociatedConformanceWitness();
  uint64_t v46 = v125;
  uint64_t v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 72))(v43, v44, v45);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v117 + 8);
  v48(v43, v44);
  v48(v46, v44);
  if (v47) {
    goto LABEL_9;
  }
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = v112;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v50 = v114;
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  uint64_t v52 = v119;
  uint64_t v53 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 72))(v49, v50, v51);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v113 + 8);
  v54(v49, v50);
  v54(v52, v50);
  if (v53) {
    goto LABEL_9;
  }
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v55 = v108;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v56 = v110;
  uint64_t v57 = swift_getAssociatedConformanceWitness();
  uint64_t v58 = v115;
  uint64_t v59 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v57 + 72))(v55, v56, v57);
  uint64_t v60 = *(void (**)(char *, uint64_t))(v109 + 8);
  v60(v55, v56);
  v60(v58, v56);
  if (v59) {
    goto LABEL_9;
  }
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v61 = v104;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v62 = v106;
  uint64_t v63 = swift_getAssociatedConformanceWitness();
  uint64_t v64 = v111;
  uint64_t v65 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v63 + 72))(v61, v62, v63);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v105 + 8);
  v66(v61, v62);
  v66(v64, v62);
  if (v65) {
    goto LABEL_9;
  }
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v67 = v100;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v68 = v102;
  uint64_t v69 = swift_getAssociatedConformanceWitness();
  uint64_t v70 = v107;
  uint64_t v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v69 + 72))(v67, v68, v69);
  int v72 = *(void (**)(char *, uint64_t))(v101 + 8);
  v72(v67, v68);
  v72(v70, v68);
  if (v71) {
    goto LABEL_9;
  }
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  BOOL v73 = v96;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v74 = v98;
  uint64_t v75 = swift_getAssociatedConformanceWitness();
  uint64_t v76 = v103;
  uint64_t v77 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v75 + 72))(v73, v74, v75);
  uint64_t v78 = *(void (**)(char *, uint64_t))(v97 + 8);
  v78(v73, v74);
  v78(v76, v74);
  if (v77) {
    goto LABEL_9;
  }
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v144);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v79 = v133;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v80 = v93;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v81 = AssociatedTypeWitness;
  uint64_t v82 = swift_getAssociatedConformanceWitness();
  uint64_t v83 = v99;
  BOOL v84 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v82 + 72))(v80, v81, v82);
  uint64_t v85 = *(void (**)(char *, uint64_t))(v94 + 8);
  v85(v80, v81);
  v85(v83, v81);
  if (v84)
  {
LABEL_9:
    uint64_t v86 = 1;
  }
  else
  {
    uint64_t v88 = *(void *)(v134 + 8);
    int v89 = *(uint64_t (**)(uint64_t, uint64_t))(v88 + 24);
    BOOL v90 = v89(v79, v88);
    uint64_t v91 = v89(v79, v88);
    uint64_t v86 = sub_1C4478090(v91, v90);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_1C4342588((uint64_t)v144);
  return v86 & 1;
}

uint64_t CRStruct_8.actionUndoingDifference(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v214 = a1;
  uint64_t v181 = a4;
  uint64_t v5 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v177 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v176 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v172 = (char *)&v130 - v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v137 = swift_getAssociatedTypeWitness();
  uint64_t v208 = sub_1C4497B38();
  uint64_t v190 = *(void *)(v208 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v208);
  uint64_t v180 = (char *)&v130 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v207 = (char *)&v130 - v11;
  uint64_t v166 = swift_getAssociatedTypeWitness();
  uint64_t v168 = *(void *)(v166 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v166);
  uint64_t v167 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v188 = (char *)&v130 - v14;
  uint64_t v165 = swift_getAssociatedConformanceWitness();
  uint64_t v136 = swift_getAssociatedTypeWitness();
  uint64_t v189 = sub_1C4497B38();
  uint64_t v196 = *(void *)(v189 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v189);
  uint64_t v179 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v206 = (char *)&v130 - v17;
  uint64_t v160 = swift_getAssociatedTypeWitness();
  uint64_t v163 = *(void *)(v160 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v160);
  uint64_t v162 = (char *)&v130 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v187 = (char *)&v130 - v20;
  uint64_t v159 = swift_getAssociatedConformanceWitness();
  uint64_t v135 = swift_getAssociatedTypeWitness();
  uint64_t v210 = sub_1C4497B38();
  uint64_t v195 = *(void *)(v210 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v210);
  uint64_t v178 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v205 = (char *)&v130 - v23;
  uint64_t v155 = swift_getAssociatedTypeWitness();
  uint64_t v157 = *(void *)(v155 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v155);
  uint64_t v156 = (char *)&v130 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v186 = (char *)&v130 - v26;
  uint64_t v154 = swift_getAssociatedConformanceWitness();
  uint64_t v134 = swift_getAssociatedTypeWitness();
  uint64_t v209 = sub_1C4497B38();
  uint64_t v194 = *(void *)(v209 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v209);
  uint64_t v173 = (char *)&v130 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v204 = (char *)&v130 - v29;
  uint64_t v151 = swift_getAssociatedTypeWitness();
  uint64_t v153 = *(void *)(v151 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v151);
  uint64_t v152 = (char *)&v130 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  unint64_t v185 = (char *)&v130 - v32;
  uint64_t v150 = swift_getAssociatedConformanceWitness();
  uint64_t v133 = swift_getAssociatedTypeWitness();
  uint64_t v203 = sub_1C4497B38();
  uint64_t v193 = *(void *)(v203 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v203);
  uint64_t v169 = (char *)&v130 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  uint64_t v202 = (char *)&v130 - v35;
  uint64_t v147 = swift_getAssociatedTypeWitness();
  uint64_t v149 = *(void *)(v147 - 8);
  uint64_t v36 = MEMORY[0x1F4188790](v147);
  uint64_t v148 = (char *)&v130 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v36);
  uint64_t v184 = (char *)&v130 - v38;
  uint64_t v146 = swift_getAssociatedConformanceWitness();
  uint64_t v132 = swift_getAssociatedTypeWitness();
  uint64_t v201 = sub_1C4497B38();
  uint64_t v192 = *(void *)(v201 - 8);
  uint64_t v39 = MEMORY[0x1F4188790](v201);
  uint64_t v164 = (char *)&v130 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v39);
  uint64_t v200 = (char *)&v130 - v41;
  uint64_t v143 = swift_getAssociatedTypeWitness();
  uint64_t v145 = *(void *)(v143 - 8);
  uint64_t v42 = MEMORY[0x1F4188790](v143);
  uint64_t v144 = (char *)&v130 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v42);
  uint64_t v183 = (char *)&v130 - v44;
  uint64_t v142 = swift_getAssociatedConformanceWitness();
  uint64_t v131 = swift_getAssociatedTypeWitness();
  uint64_t v199 = sub_1C4497B38();
  uint64_t v191 = *(void *)(v199 - 8);
  uint64_t v45 = MEMORY[0x1F4188790](v199);
  uint64_t v161 = (char *)&v130 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v45);
  uint64_t v198 = (char *)&v130 - v47;
  uint64_t v139 = swift_getAssociatedTypeWitness();
  uint64_t v141 = *(void *)(v139 - 8);
  uint64_t v48 = MEMORY[0x1F4188790](v139);
  uint64_t v140 = (char *)&v130 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v48);
  uint64_t v182 = (char *)&v130 - v50;
  uint64_t v138 = swift_getAssociatedConformanceWitness();
  uint64_t v158 = swift_getAssociatedTypeWitness();
  uint64_t v51 = sub_1C4497B38();
  uint64_t v170 = *(void *)(v51 - 8);
  uint64_t v171 = v51;
  MEMORY[0x1F4188790](v51);
  uint64_t v197 = (char *)&v130 - v52;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 144))(v236, a2, v5);
  uint64_t v215 = v236[2];
  uint64_t v219 = v236[4];
  uint64_t v221 = v236[5];
  uint64_t v227 = v236[7];
  uint64_t v223 = (void (*)(char *, uint64_t))v236[8];
  uint64_t v225 = v236[10];
  uint64_t v220 = v236[11];
  uint64_t v222 = (void (*)(char *, uint64_t))v236[1];
  uint64_t v53 = v236[13];
  uint64_t v54 = v236[14];
  uint64_t v217 = v236[16];
  uint64_t v226 = (void (*)(char *, uint64_t))v236[17];
  uint64_t v55 = v236[19];
  uint64_t v224 = (void (*)(char *, uint64_t))v236[20];
  uint64_t v211 = v236[22];
  uint64_t v218 = v236[23];
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v213 = v55;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v212 = v54;
  swift_release();
  uint64_t v216 = v53;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v56 = v140;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v57 = v139;
  uint64_t v58 = v182;
  (*(void (**)(char *, uint64_t))(v138 + 56))(v56, v139);
  uint64_t v59 = *(void (**)(char *, uint64_t))(v141 + 8);
  v59(v56, v57);
  v59(v58, v57);
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v60 = v144;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v61 = v143;
  uint64_t v62 = v183;
  (*(void (**)(char *, uint64_t))(v142 + 56))(v60, v143);
  uint64_t v63 = *(void (**)(char *, uint64_t))(v145 + 8);
  v63(v60, v61);
  v63(v62, v61);
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v64 = v148;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v65 = v147;
  uint64_t v66 = v184;
  (*(void (**)(char *, uint64_t))(v146 + 56))(v64, v147);
  uint64_t v67 = *(void (**)(char *, uint64_t))(v149 + 8);
  v67(v64, v65);
  v67(v66, v65);
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v68 = v152;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v69 = v151;
  uint64_t v70 = v185;
  (*(void (**)(char *, uint64_t))(v150 + 56))(v68, v151);
  uint64_t v71 = *(void (**)(char *, uint64_t))(v153 + 8);
  v71(v68, v69);
  v71(v70, v69);
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  int v72 = v156;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v73 = v155;
  uint64_t v74 = v186;
  (*(void (**)(char *, uint64_t))(v154 + 56))(v72, v155);
  uint64_t v75 = *(void (**)(char *, uint64_t))(v157 + 8);
  v75(v72, v73);
  v75(v74, v73);
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v76 = v162;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v77 = v160;
  uint64_t v78 = v187;
  (*(void (**)(char *, uint64_t))(v159 + 56))(v76, v160);
  uint64_t v79 = *(void (**)(char *, uint64_t))(v163 + 8);
  v79(v76, v77);
  v79(v78, v77);
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v80 = v167;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v81 = v166;
  uint64_t v82 = v188;
  (*(void (**)(char *, uint64_t))(v165 + 56))(v80, v166);
  uint64_t v83 = *(void (**)(char *, uint64_t))(v168 + 8);
  v83(v80, v81);
  v83(v82, v81);
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  BOOL v84 = v172;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v236);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v85 = v176;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v86 = AssociatedTypeWitness;
  uint64_t v87 = v85;
  (*(void (**)(char *, uint64_t))(AssociatedConformanceWitness + 56))(v85, AssociatedTypeWitness);
  sub_1C4342588((uint64_t)v236);
  uint64_t v88 = *(void (**)(char *, uint64_t))(v177 + 8);
  v88(v87, v86);
  v88(v84, v86);
  int v89 = v161;
  BOOL v90 = 1;
  LODWORD(v88) = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v158 - 8) + 48))(v197, 1);
  (*(void (**)(char *, char *, uint64_t))(v191 + 16))(v89, v198, v199);
  if (v88 == 1) {
    BOOL v90 = (*(unsigned int (**)(char *, uint64_t))(*(void *)(v131 - 8) + 48))(v89, 1) != 1;
  }
  uint64_t v91 = *(void (**)(char *, uint64_t))(v191 + 8);
  uint64_t v227 = v191 + 8;
  uint64_t v226 = v91;
  v91(v89, v199);
  uint64_t v92 = v164;
  (*(void (**)(char *, char *, uint64_t))(v192 + 16))(v164, v200, v201);
  BOOL v93 = v90 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v132 - 8) + 48))(v92, 1) != 1;
  uint64_t v94 = v189;
  BOOL v96 = v178;
  char v95 = v179;
  uint64_t v97 = v173;
  unsigned int v98 = v169;
  uint64_t v99 = *(void (**)(char *, uint64_t))(v192 + 8);
  uint64_t v225 = v192 + 8;
  uint64_t v224 = v99;
  v99(v92, v201);
  (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v98, v202, v203);
  BOOL v100 = v93 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v133 - 8) + 48))(v98, 1) != 1;
  uint64_t v223 = *(void (**)(char *, uint64_t))(v193 + 8);
  v223(v98, v203);
  (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v97, v204, v209);
  BOOL v101 = v100 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v134 - 8) + 48))(v97, 1) != 1;
  uint64_t v222 = *(void (**)(char *, uint64_t))(v194 + 8);
  v222(v97, v209);
  (*(void (**)(char *, char *, uint64_t))(v195 + 16))(v96, v205, v210);
  BOOL v102 = v101 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v135 - 8) + 48))(v96, 1) != 1;
  int v103 = *(void (**)(char *, uint64_t))(v195 + 8);
  v103(v96, v210);
  (*(void (**)(char *, char *, uint64_t))(v196 + 16))(v95, v206, v94);
  BOOL v104 = v102 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v136 - 8) + 48))(v95, 1) != 1;
  uint64_t v105 = *(void (**)(char *, uint64_t))(v196 + 8);
  v105(v95, v94);
  uint64_t v106 = v180;
  (*(void (**)(char *, char *, uint64_t))(v190 + 16))(v180, v207, v208);
  if (v104 || (*(unsigned int (**)(char *, uint64_t))(*(void *)(v137 - 8) + 48))(v106, 1) != 1)
  {
    uint64_t v119 = v190;
    uint64_t v120 = v106;
    uint64_t v121 = v208;
    (*(void (**)(char *))(v190 + 8))(v120);
    uint64_t v122 = v171;
    uint64_t v228 = v171;
    uint64_t v123 = v199;
    uint64_t v229 = v199;
    uint64_t v124 = v201;
    uint64_t v230 = v201;
    uint64_t v125 = v203;
    uint64_t v231 = v203;
    uint64_t v232 = v209;
    uint64_t v233 = v210;
    uint64_t v234 = v94;
    uint64_t v235 = v121;
    uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
    uint64_t v127 = v181;
    uint64_t v128 = v181 + TupleTypeMetadata[12];
    uint64_t v129 = v181 + TupleTypeMetadata[16];
    uint64_t v223 = (void (*)(char *, uint64_t))(v181 + TupleTypeMetadata[20]);
    uint64_t v224 = (void (*)(char *, uint64_t))(v181 + TupleTypeMetadata[24]);
    uint64_t v225 = v181 + TupleTypeMetadata[28];
    uint64_t v226 = (void (*)(char *, uint64_t))(v181 + TupleTypeMetadata[32]);
    uint64_t v227 = v181 + TupleTypeMetadata[36];
    (*(void (**)(uint64_t, char *, uint64_t))(v170 + 32))(v181, v197, v122);
    (*(void (**)(uint64_t, char *, uint64_t))(v191 + 32))(v128, v198, v123);
    (*(void (**)(uint64_t, char *, uint64_t))(v192 + 32))(v129, v200, v124);
    (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v193 + 32))(v223, v202, v125);
    (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v194 + 32))(v224, v204, v209);
    (*(void (**)(uint64_t, char *, uint64_t))(v195 + 32))(v225, v205, v210);
    (*(void (**)(void (*)(char *, uint64_t), char *, uint64_t))(v196 + 32))(v226, v206, v189);
    (*(void (**)(uint64_t, char *, uint64_t))(v119 + 32))(v227, v207, v208);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, int *))(*((void *)TupleTypeMetadata - 1) + 56))(v127, 0, 1, TupleTypeMetadata);
  }
  else
  {
    uint64_t v107 = *(void (**)(char *, uint64_t))(v190 + 8);
    uint64_t v108 = v106;
    uint64_t v109 = v208;
    v107(v108, v208);
    v107(v207, v109);
    uint64_t v110 = v189;
    v105(v206, v189);
    uint64_t v111 = v210;
    v103(v205, v210);
    uint64_t v112 = v209;
    v222(v204, v209);
    uint64_t v113 = v203;
    v223(v202, v203);
    uint64_t v114 = v201;
    v224(v200, v201);
    uint64_t v115 = v199;
    v226(v198, v199);
    uint64_t v116 = v171;
    (*(void (**)(char *, uint64_t))(v170 + 8))(v197, v171);
    uint64_t v228 = v116;
    uint64_t v229 = v115;
    uint64_t v230 = v114;
    uint64_t v231 = v113;
    uint64_t v232 = v112;
    uint64_t v233 = v111;
    uint64_t v234 = v110;
    uint64_t v235 = v208;
    uint64_t v117 = swift_getTupleTypeMetadata();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v181, 1, 1, v117);
  }
}

uint64_t CRStruct_8.apply(_:)(char *a1, uint64_t a2, uint64_t a3)
{
  v268 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v223 = AssociatedTypeWitness;
  uint64_t v196 = swift_getAssociatedTypeWitness();
  uint64_t v249 = sub_1C4497B38();
  uint64_t v241 = *(void *)(v249 - 8);
  MEMORY[0x1F4188790](v249);
  uint64_t v221 = (char *)&v185 - v6;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v219 = swift_getAssociatedConformanceWitness();
  uint64_t v220 = v7;
  uint64_t v195 = swift_getAssociatedTypeWitness();
  uint64_t v244 = sub_1C4497B38();
  uint64_t v232 = *(void *)(v244 - 8);
  MEMORY[0x1F4188790](v244);
  uint64_t v218 = (char *)&v185 - v8;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t v216 = swift_getAssociatedConformanceWitness();
  uint64_t v217 = v9;
  uint64_t v194 = swift_getAssociatedTypeWitness();
  uint64_t v250 = sub_1C4497B38();
  uint64_t v240 = *(void *)(v250 - 8);
  MEMORY[0x1F4188790](v250);
  uint64_t v215 = (char *)&v185 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v212 = swift_getAssociatedConformanceWitness();
  uint64_t v213 = (void (*)(char *, uint64_t))v11;
  uint64_t v193 = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C4497B38();
  uint64_t v239 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v211 = (char *)&v185 - v13;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v210 = swift_getAssociatedConformanceWitness();
  uint64_t v224 = (void (*)(uint64_t, uint64_t))v14;
  uint64_t v192 = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_1C4497B38();
  uint64_t v243 = v15;
  uint64_t v238 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v209 = (char *)&v185 - v16;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v206 = swift_getAssociatedConformanceWitness();
  uint64_t v207 = v17;
  uint64_t v191 = swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_1C4497B38();
  uint64_t v234 = v18;
  uint64_t v237 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v204 = (char *)&v185 - v19;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v201 = swift_getAssociatedConformanceWitness();
  uint64_t v202 = v20;
  uint64_t v190 = swift_getAssociatedTypeWitness();
  uint64_t v21 = sub_1C4497B38();
  uint64_t v236 = v21;
  uint64_t v235 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  uint64_t v200 = (char *)&v185 - v22;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v199 = swift_getAssociatedConformanceWitness();
  uint64_t v229 = (void (*)(char *, uint64_t))v23;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  uint64_t v270 = sub_1C4497B38();
  uint64_t v271 = v21;
  uint64_t v272 = v18;
  uint64_t v273 = v15;
  uint64_t v274 = v12;
  uint64_t v231 = v12;
  uint64_t v275 = v250;
  uint64_t v276 = v244;
  uint64_t v277 = v249;
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v264 = sub_1C4497B38();
  uint64_t v233 = *(void *)(v264 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v264);
  uint64_t v226 = (char *)&v185 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v214 = (char *)&v185 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v225 = (char *)&v185 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v208 = (char *)&v185 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v205 = (char *)&v185 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v203 = (char *)&v185 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v227 = (char *)&v185 - v38;
  MEMORY[0x1F4188790](v37);
  uint64_t v197 = (char *)&v185 - v39;
  uint64_t v189 = v24;
  uint64_t v230 = sub_1C4497B38();
  uint64_t v242 = *(void *)(v230 - 8);
  MEMORY[0x1F4188790](v230);
  uint64_t v228 = (char *)&v185 - v40;
  (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v4 + 144))(&v270, a2, v4);
  uint64_t v41 = v271;
  uint64_t v267 = (char *)v274;
  uint64_t v260 = v275;
  v266 = (char *)v277;
  uint64_t v259 = v278;
  uint64_t v265 = v279;
  uint64_t v42 = v280;
  uint64_t v44 = v281;
  uint64_t v43 = v282;
  uint64_t v45 = v283;
  uint64_t v46 = v284;
  uint64_t v48 = v285;
  uint64_t v47 = v286;
  uint64_t v49 = v287;
  uint64_t v50 = v288;
  uint64_t v261 = v272;
  sub_1C4342484((uint64_t)&v270);
  uint64_t v262 = v41;
  uint64_t v51 = v264;
  swift_bridgeObjectRelease();
  uint64_t v263 = v50;
  swift_release();
  uint64_t v255 = v49;
  uint64_t v52 = v241;
  swift_bridgeObjectRelease();
  uint64_t v245 = v47;
  uint64_t v53 = v233;
  swift_release();
  uint64_t v256 = v48;
  uint64_t v54 = v197;
  swift_bridgeObjectRelease();
  uint64_t v246 = v46;
  uint64_t v55 = v249;
  swift_release();
  uint64_t v257 = v45;
  swift_bridgeObjectRelease();
  uint64_t v247 = v43;
  swift_release();
  uint64_t v258 = v44;
  uint64_t v56 = (int *)TupleTypeMetadata;
  swift_bridgeObjectRelease();
  uint64_t v248 = v42;
  uint64_t v57 = v250;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v53 + 16);
  uint64_t v254 = v53 + 16;
  v253 = v58;
  v58(v54, v268, v51);
  uint64_t v59 = *((void *)v56 - 1);
  v252 = *(uint64_t (**)(char *, uint64_t, int *))(v59 + 48);
  uint64_t v251 = v59 + 48;
  int v60 = v252(v54, 1, v56);
  uint64_t v61 = v243;
  uint64_t v62 = v234;
  if (v60 == 1)
  {
    (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v51);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v189 - 8) + 56))(v228, 1, 1);
    uint64_t v63 = v230;
  }
  else
  {
    uint64_t v189 = (uint64_t)&v54[v56[12]];
    uint64_t v188 = &v54[v56[16]];
    uint64_t v187 = &v54[v56[20]];
    uint64_t v186 = &v54[v56[24]];
    uint64_t v64 = v54;
    uint64_t v65 = &v54[v56[28]];
    uint64_t v66 = &v64[v56[32]];
    uint64_t v67 = &v64[v56[36]];
    uint64_t v68 = v230;
    (*(void (**)(char *))(v242 + 32))(v228);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v67, v55);
    (*(void (**)(char *, uint64_t))(v232 + 8))(v66, v244);
    (*(void (**)(char *, uint64_t))(v240 + 8))(v65, v57);
    (*(void (**)(char *, uint64_t))(v239 + 8))(v186, v231);
    (*(void (**)(char *, uint64_t))(v238 + 8))(v187, v61);
    (*(void (**)(char *, uint64_t))(v237 + 8))(v188, v62);
    (*(void (**)(uint64_t, uint64_t))(v235 + 8))(v189, v236);
    uint64_t v63 = v68;
  }
  uint64_t v69 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v70 = v199;
  uint64_t v71 = *(void (**)(char *, uint64_t, uint64_t))(v199 + 64);
  uint64_t v72 = swift_checkMetadataState();
  uint64_t v73 = v228;
  v71(v228, v72, v70);
  uint64_t v75 = v242 + 8;
  uint64_t v74 = *(void (**)(char *, uint64_t))(v242 + 8);
  v74(v73, v63);
  v69(v269, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v270);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v76 = v227;
  uint64_t v77 = v264;
  v253(v227, v268, v264);
  int v78 = v252(v76, 1, v56);
  uint64_t v242 = v75;
  uint64_t v229 = v74;
  if (v78 == 1)
  {
    (*(void (**)(char *, uint64_t))(v233 + 8))(v76, v77);
    uint64_t v79 = v200;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v190 - 8) + 56))(v200, 1, 1);
    uint64_t v80 = v235;
  }
  else
  {
    uint64_t v81 = &v76[v56[12]];
    uint64_t v228 = &v76[v56[16]];
    uint64_t v199 = (uint64_t)&v76[v56[20]];
    uint64_t v82 = &v76[v56[24]];
    uint64_t v83 = &v76[v56[28]];
    BOOL v84 = &v76[v56[32]];
    uint64_t v85 = &v76[v56[36]];
    uint64_t v80 = v235;
    uint64_t v86 = v200;
    (*(void (**)(char *, char *, uint64_t))(v235 + 32))(v200, v81, v236);
    (*(void (**)(char *, uint64_t))(v241 + 8))(v85, v249);
    (*(void (**)(char *, uint64_t))(v232 + 8))(v84, v244);
    (*(void (**)(char *, uint64_t))(v240 + 8))(v83, v250);
    (*(void (**)(char *, uint64_t))(v239 + 8))(v82, v231);
    (*(void (**)(uint64_t, uint64_t))(v238 + 8))(v199, v243);
    (*(void (**)(char *, uint64_t))(v237 + 8))(v228, v234);
    v74(v227, v63);
    uint64_t v79 = v86;
  }
  uint64_t v87 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v88 = v201;
  int v89 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 64);
  uint64_t v90 = swift_checkMetadataState();
  v89(v79, v90, v88);
  uint64_t v91 = *(void (**)(char *, uint64_t))(v80 + 8);
  v91(v79, v236);
  v87(v269, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v270);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v92 = v203;
  uint64_t v93 = v264;
  v253(v203, v268, v264);
  int v94 = v252(v92, 1, v56);
  char v95 = v204;
  uint64_t v235 = v80 + 8;
  uint64_t v228 = (char *)v91;
  if (v94 == 1)
  {
    (*(void (**)(char *, uint64_t))(v233 + 8))(v92, v93);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v191 - 8) + 56))(v95, 1, 1);
    BOOL v96 = v95;
    uint64_t v97 = v234;
    uint64_t v98 = v237;
  }
  else
  {
    uint64_t v227 = &v92[v56[12]];
    uint64_t v99 = &v92[v56[16]];
    uint64_t v202 = (uint64_t)&v92[v56[20]];
    uint64_t v201 = (uint64_t)&v92[v56[24]];
    BOOL v100 = &v92[v56[28]];
    BOOL v101 = &v92[v56[32]];
    BOOL v102 = &v92[v56[36]];
    uint64_t v98 = v237;
    BOOL v96 = v204;
    uint64_t v97 = v234;
    (*(void (**)(char *, char *, uint64_t))(v237 + 32))(v204, v99, v234);
    (*(void (**)(char *, uint64_t))(v241 + 8))(v102, v249);
    (*(void (**)(char *, uint64_t))(v232 + 8))(v101, v244);
    (*(void (**)(char *, uint64_t))(v240 + 8))(v100, v250);
    (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v201, v231);
    (*(void (**)(uint64_t, uint64_t))(v238 + 8))(v202, v243);
    v91(v227, v236);
    v229(v92, v230);
  }
  int v103 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v104 = v206;
  uint64_t v105 = *(void (**)(char *, uint64_t, uint64_t))(v206 + 64);
  uint64_t v106 = swift_checkMetadataState();
  v105(v96, v106, v104);
  uint64_t v107 = *(void (**)(char *, uint64_t))(v98 + 8);
  v107(v96, v97);
  v103(v269, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v270);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v108 = v205;
  uint64_t v109 = v264;
  v253(v205, v268, v264);
  int v110 = v252(v108, 1, v56);
  uint64_t v237 = v98 + 8;
  uint64_t v227 = (char *)v107;
  if (v110 == 1)
  {
    (*(void (**)(char *, uint64_t))(v233 + 8))(v108, v109);
    uint64_t v111 = v209;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v192 - 8) + 56))(v209, 1, 1);
    uint64_t v112 = v238;
  }
  else
  {
    uint64_t v113 = v97;
    uint64_t v207 = (uint64_t)&v108[v56[12]];
    uint64_t v206 = (uint64_t)&v108[v56[16]];
    uint64_t v114 = &v108[v56[20]];
    uint64_t v204 = &v108[v56[24]];
    uint64_t v115 = &v108[v56[28]];
    uint64_t v116 = &v108[v56[32]];
    uint64_t v117 = &v108[v56[36]];
    uint64_t v111 = v209;
    uint64_t v112 = v238;
    (*(void (**)(char *, char *, uint64_t))(v238 + 32))(v209, v114, v243);
    (*(void (**)(char *, uint64_t))(v241 + 8))(v117, v249);
    (*(void (**)(char *, uint64_t))(v232 + 8))(v116, v244);
    (*(void (**)(char *, uint64_t))(v240 + 8))(v115, v250);
    (*(void (**)(char *, uint64_t))(v239 + 8))(v204, v231);
    v107((char *)v206, v113);
    ((void (*)(uint64_t, uint64_t))v228)(v207, v236);
    v229(v108, v230);
  }
  int v118 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v119 = v210;
  uint64_t v120 = *(void (**)(char *, uint64_t, uint64_t))(v210 + 64);
  uint64_t v121 = swift_checkMetadataState();
  v120(v111, v121, v119);
  uint64_t v122 = *(void (**)(char *, uint64_t))(v112 + 8);
  v122(v111, v243);
  v118(v269, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v270);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v123 = v208;
  uint64_t v124 = v264;
  v253(v208, v268, v264);
  int v125 = v252(v123, 1, v56);
  uint64_t v238 = v112 + 8;
  uint64_t v224 = (void (*)(uint64_t, uint64_t))v122;
  if (v125 == 1)
  {
    (*(void (**)(char *, uint64_t))(v233 + 8))(v123, v124);
    uint64_t v126 = v211;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v193 - 8) + 56))(v211, 1, 1);
    uint64_t v127 = v231;
    uint64_t v128 = v239;
  }
  else
  {
    uint64_t v210 = (uint64_t)&v123[v56[12]];
    uint64_t v209 = &v123[v56[16]];
    uint64_t v207 = (uint64_t)&v123[v56[20]];
    uint64_t v129 = &v123[v56[28]];
    uint64_t v130 = &v123[v56[32]];
    uint64_t v131 = &v123[v56[36]];
    uint64_t v128 = v239;
    uint64_t v126 = v211;
    uint64_t v127 = v231;
    (*(void (**)(char *, char *, uint64_t))(v239 + 32))(v211, &v123[v56[24]], v231);
    (*(void (**)(char *, uint64_t))(v241 + 8))(v131, v249);
    (*(void (**)(char *, uint64_t))(v232 + 8))(v130, v244);
    (*(void (**)(char *, uint64_t))(v240 + 8))(v129, v250);
    v122((char *)v207, v243);
    ((void (*)(char *, uint64_t))v227)(v209, v234);
    ((void (*)(uint64_t, uint64_t))v228)(v210, v236);
    v229(v123, v230);
  }
  uint64_t v132 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v133 = v212;
  uint64_t v134 = *(void (**)(char *, uint64_t, uint64_t))(v212 + 64);
  uint64_t v135 = swift_checkMetadataState();
  v134(v126, v135, v133);
  uint64_t v136 = *(void (**)(char *, uint64_t))(v128 + 8);
  v136(v126, v127);
  v132(v269, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v270);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v137 = v225;
  uint64_t v138 = v264;
  v253(v225, v268, v264);
  int v139 = v252(v137, 1, v56);
  uint64_t v239 = v128 + 8;
  uint64_t v213 = v136;
  if (v139 == 1)
  {
    (*(void (**)(char *, uint64_t))(v233 + 8))(v137, v138);
    uint64_t v140 = v215;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v194 - 8) + 56))(v215, 1, 1);
    uint64_t v141 = v240;
    uint64_t v142 = v250;
  }
  else
  {
    uint64_t v143 = v127;
    uint64_t v212 = (uint64_t)&v137[v56[12]];
    uint64_t v211 = &v137[v56[16]];
    uint64_t v210 = (uint64_t)&v137[v56[20]];
    uint64_t v144 = &v137[v56[24]];
    uint64_t v145 = &v137[v56[28]];
    uint64_t v146 = &v137[v56[32]];
    uint64_t v147 = &v137[v56[36]];
    uint64_t v141 = v240;
    uint64_t v148 = v215;
    (*(void (**)(char *, char *, uint64_t))(v240 + 32))(v215, v145, v250);
    uint64_t v142 = v250;
    (*(void (**)(char *, uint64_t))(v241 + 8))(v147, v249);
    (*(void (**)(char *, uint64_t))(v232 + 8))(v146, v244);
    v136(v144, v143);
    uint64_t v140 = v148;
    v224(v210, v243);
    ((void (*)(char *, uint64_t))v227)(v211, v234);
    ((void (*)(uint64_t, uint64_t))v228)(v212, v236);
    v229(v225, v230);
  }
  uint64_t v149 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v150 = v216;
  uint64_t v151 = *(void (**)(char *, uint64_t, uint64_t))(v216 + 64);
  uint64_t v152 = swift_checkMetadataState();
  v151(v140, v152, v150);
  uint64_t v153 = *(void (**)(char *, uint64_t))(v141 + 8);
  v153(v140, v142);
  v149(v269, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v270);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v154 = v214;
  uint64_t v155 = v264;
  v253(v214, v268, v264);
  int v156 = v252(v154, 1, v56);
  uint64_t v157 = v218;
  uint64_t v240 = v141 + 8;
  uint64_t v225 = (char *)v153;
  if (v156 == 1)
  {
    (*(void (**)(char *, uint64_t))(v233 + 8))(v154, v155);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v195 - 8) + 56))(v157, 1, 1);
    uint64_t v158 = v232;
  }
  else
  {
    uint64_t v159 = v154;
    uint64_t v217 = (uint64_t)&v154[v56[12]];
    uint64_t v216 = (uint64_t)&v154[v56[16]];
    uint64_t v160 = &v154[v56[20]];
    uint64_t v161 = &v159[v56[24]];
    uint64_t v162 = &v159[v56[28]];
    uint64_t v163 = &v159[v56[36]];
    uint64_t v158 = v232;
    (*(void (**)(char *, char *, uint64_t))(v232 + 32))(v218, &v159[v56[32]], v244);
    (*(void (**)(char *, uint64_t))(v241 + 8))(v163, v249);
    v153(v162, v250);
    v213(v161, v231);
    v224((uint64_t)v160, v243);
    ((void (*)(uint64_t, uint64_t))v227)(v216, v234);
    ((void (*)(uint64_t, uint64_t))v228)(v217, v236);
    v229(v159, v230);
  }
  uint64_t v164 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v165 = v219;
  uint64_t v166 = *(void (**)(char *, uint64_t, uint64_t))(v219 + 64);
  uint64_t v167 = swift_checkMetadataState();
  v166(v157, v167, v165);
  uint64_t v168 = *(void (**)(char *, uint64_t))(v158 + 8);
  uint64_t v169 = v244;
  v168(v157, v244);
  v164(v269, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v270);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v170 = v226;
  uint64_t v171 = v264;
  v253(v226, v268, v264);
  if (v252(v170, 1, v56) == 1)
  {
    (*(void (**)(char *, uint64_t))(v233 + 8))(v170, v171);
    uint64_t v172 = v221;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v196 - 8) + 56))(v221, 1, 1);
    uint64_t v173 = v249;
    uint64_t v174 = v241;
  }
  else
  {
    v268 = &v170[v56[12]];
    uint64_t v267 = &v170[v56[16]];
    v266 = &v170[v56[20]];
    uint64_t v175 = v168;
    uint64_t v176 = &v170[v56[24]];
    uint64_t v177 = &v170[v56[28]];
    uint64_t v178 = &v170[v56[32]];
    uint64_t v179 = &v170[v56[36]];
    uint64_t v174 = v241;
    uint64_t v172 = v221;
    uint64_t v173 = v249;
    (*(void (**)(char *, char *, uint64_t))(v241 + 32))(v221, v179, v249);
    v175(v178, v169);
    ((void (*)(char *, uint64_t))v225)(v177, v250);
    v213(v176, v231);
    v224((uint64_t)v266, v243);
    ((void (*)(char *, uint64_t))v227)(v267, v234);
    ((void (*)(char *, uint64_t))v228)(v268, v236);
    v229(v226, v230);
  }
  uint64_t v180 = (void (*)(char *, void))swift_modifyAtWritableKeyPath();
  uint64_t v181 = AssociatedConformanceWitness;
  uint64_t v182 = *(void (**)(char *, uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v183 = swift_checkMetadataState();
  v182(v172, v183, v181);
  (*(void (**)(char *, uint64_t))(v174 + 8))(v172, v173);
  v180(v269, 0);
  sub_1C4342588((uint64_t)&v270);
  return swift_release();
}

uint64_t CRStruct_8.visitReferences(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void (*v13)(void *__return_ptr, uint64_t, uint64_t);
  char *v14;
  uint64_t v15;
  uint64_t AssociatedConformanceWitness;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t AssociatedTypeWitness;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  void v89[24];

  uint64_t v72 = a1;
  uint64_t v4 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v69 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v67 = (char *)&v45 - v5;
  uint64_t v65 = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(v65 - 8);
  MEMORY[0x1F4188790](v65);
  uint64_t v64 = (char *)&v45 - v6;
  uint64_t v62 = swift_getAssociatedTypeWitness();
  uint64_t v63 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  uint64_t v61 = (char *)&v45 - v7;
  uint64_t v59 = swift_getAssociatedTypeWitness();
  int v60 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v58 = (char *)&v45 - v8;
  uint64_t v56 = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v55 = (char *)&v45 - v9;
  uint64_t v53 = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(v53 - 8);
  MEMORY[0x1F4188790](v53);
  uint64_t v52 = (char *)&v45 - v10;
  uint64_t v50 = swift_getAssociatedTypeWitness();
  uint64_t v51 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v49 = (char *)&v45 - v11;
  uint64_t v47 = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(v47 - 8);
  MEMORY[0x1F4188790](v47);
  uint64_t v46 = (char *)&v45 - v12;
  uint64_t v70 = v4;
  uint64_t v13 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 144);
  uint64_t v85 = a2;
  v13(v89, a2, v4);
  uint64_t v75 = v89[2];
  uint64_t v88 = v89[4];
  uint64_t v83 = v89[5];
  BOOL v84 = v89[7];
  uint64_t v73 = v89[8];
  uint64_t v80 = v89[10];
  int v78 = v89[23];
  uint64_t v76 = v89[1];
  uint64_t v86 = v89[11];
  uint64_t v71 = v89[13];
  uint64_t v82 = v89[14];
  uint64_t v77 = v89[16];
  uint64_t v87 = v89[17];
  uint64_t v74 = v89[19];
  uint64_t v81 = v89[20];
  uint64_t v79 = v89[22];
  sub_1C4342484((uint64_t)v89);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v14 = v46;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v15 = v47;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = v72;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 48))(v72, v15);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v15);
  sub_1C4342484((uint64_t)v89);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v18 = v49;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v19 = v50;
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 + 16) + 48))(v17, v19);
  (*(void (**)(char *, uint64_t))(v51 + 8))(v18, v19);
  sub_1C4342484((uint64_t)v89);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v21 = v52;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v22 = v53;
  uint64_t v23 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 + 16) + 48))(v17, v22);
  (*(void (**)(char *, uint64_t))(v54 + 8))(v21, v22);
  sub_1C4342484((uint64_t)v89);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v24 = v55;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v25 = v56;
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 + 16) + 48))(v72, v25);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v24, v25);
  sub_1C4342484((uint64_t)v89);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = v58;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v28 = v59;
  uint64_t v29 = swift_getAssociatedConformanceWitness();
  uint64_t v30 = v72;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 + 16) + 48))(v72, v28);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v27, v28);
  sub_1C4342484((uint64_t)v89);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v31 = v61;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v32 = v70;
  uint64_t v33 = v62;
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v34 + 16) + 48))(v30, v33);
  (*(void (**)(char *, uint64_t))(v63 + 8))(v31, v33);
  sub_1C4342484((uint64_t)v89);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = v64;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v36 = v65;
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  uint64_t v38 = v72;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 + 16) + 48))(v72, v36);
  (*(void (**)(char *, uint64_t))(v66 + 8))(v35, v36);
  sub_1C4342484((uint64_t)v89);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v39 = v67;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v40 = v85;
  uint64_t v41 = AssociatedTypeWitness;
  uint64_t v42 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v42 + 16) + 48))(v38, v41);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v39, v41);
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(*(void *)(v32 + 8) + 24))(v40);
  sub_1C3F7E98C(v38, v43);
  swift_bridgeObjectRelease();
  return sub_1C4342588((uint64_t)v89);
}

Swift::Bool __swiftcall CRStruct_8.needToFinalizeTimestamps()()
{
  void (*v26)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t AssociatedConformanceWitness;
  void (*v40)(char *, uint64_t, uint64_t);
  void (*v41)(char *, uint64_t);
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  uint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char v54;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t AssociatedTypeWitness;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void v125[24];

  uint64_t v2 = v0;
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v81 = (char *)&v80 - v4;
  uint64_t v87 = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v85 = (char *)&v80 - v5;
  uint64_t v91 = swift_getAssociatedTypeWitness();
  uint64_t v90 = *(void *)(v91 - 8);
  MEMORY[0x1F4188790](v91);
  int v89 = (char *)&v80 - v6;
  char v95 = swift_getAssociatedTypeWitness();
  int v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v93 = (char *)&v80 - v7;
  uint64_t v98 = swift_getAssociatedTypeWitness();
  uint64_t v97 = *(void *)(v98 - 8);
  MEMORY[0x1F4188790](v98);
  BOOL v96 = (char *)&v80 - v8;
  BOOL v101 = swift_getAssociatedTypeWitness();
  BOOL v100 = *(void *)(v101 - 8);
  MEMORY[0x1F4188790](v101);
  uint64_t v99 = (char *)&v80 - v9;
  uint64_t v104 = swift_getAssociatedTypeWitness();
  int v103 = *(void *)(v104 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v104);
  BOOL v102 = (char *)&v80 - v11;
  uint64_t v122 = *(void *)(v2 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v121 = (char *)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v120 = (char *)&v80 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v119 = (char *)&v80 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  int v118 = (char *)&v80 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v117 = (char *)&v80 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v116 = (char *)&v80 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v112 = (char *)&v80 - v24;
  uint64_t v114 = swift_getAssociatedTypeWitness();
  uint64_t v115 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114);
  uint64_t v113 = (char *)&v80 - v25;
  uint64_t v123 = v3;
  uint64_t v26 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v3 + 144);
  int v110 = v2;
  v26(v125, v2, v3);
  uint64_t v111 = v125[2];
  uint64_t v109 = v125[4];
  uint64_t v107 = v125[5];
  uint64_t v108 = v125[7];
  uint64_t v27 = v125[8];
  uint64_t v28 = v125[11];
  uint64_t v106 = v125[10];
  uint64_t v105 = v125[13];
  uint64_t v29 = v125[14];
  uint64_t v30 = v125[17];
  uint64_t v31 = v125[20];
  uint64_t v32 = v125[23];
  sub_1C4342484((uint64_t)v125);
  swift_bridgeObjectRelease();
  uint64_t v80 = v32;
  swift_release();
  swift_bridgeObjectRelease();
  BOOL v84 = v31;
  swift_release();
  uint64_t v33 = v122;
  swift_bridgeObjectRelease();
  uint64_t v88 = v30;
  swift_release();
  uint64_t v34 = v124;
  swift_bridgeObjectRelease();
  uint64_t v92 = v29;
  uint64_t v35 = v110;
  uint64_t v36 = v112;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v105 = v28;
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v106 = v27;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v37 = v113;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v38 = v114;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(v30) = (*(uint64_t (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 56))(v38);
  (*(void (**)(char *, uint64_t))(v115 + 8))(v37, v38);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
  v40(v36, v34, v35);
  if (v30)
  {
    uint64_t v41 = *(void (**)(char *, uint64_t))(v33 + 8);
    v41(v36, v35);
    uint64_t v42 = v116;
    v40(v116, v124, v35);
LABEL_4:
    uint64_t v49 = v119;
    v41(v42, v35);
    uint64_t v50 = v117;
    v40(v117, v124, v35);
    uint64_t v51 = v120;
LABEL_5:
    uint64_t v52 = v118;
    v41(v50, v35);
    v40(v52, v124, v35);
LABEL_6:
    uint64_t v53 = v121;
    v41(v52, v35);
    v40(v49, v124, v35);
LABEL_7:
    v41(v49, v35);
    v40(v51, v124, v35);
LABEL_8:
    v41(v51, v35);
    v40(v53, v124, v35);
    goto LABEL_9;
  }
  uint64_t v43 = v102;
  swift_getAtKeyPath();
  uint64_t v44 = v104;
  uint64_t v45 = swift_getAssociatedConformanceWitness();
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(*(void *)(v45 + 16) + 56))(v44);
  (*(void (**)(char *, uint64_t))(v103 + 8))(v43, v44);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v47 = v33 + 8;
  uint64_t v41 = v48;
  v48(v36, v35);
  uint64_t v42 = v116;
  v40(v116, v124, v35);
  if (v46) {
    goto LABEL_4;
  }
  uint64_t v56 = v99;
  swift_getAtKeyPath();
  uint64_t v57 = v42;
  uint64_t v58 = v101;
  uint64_t v59 = swift_getAssociatedConformanceWitness();
  int v60 = (*(uint64_t (**)(uint64_t))(*(void *)(v59 + 16) + 56))(v58);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v56, v58);
  uint64_t v122 = v47;
  v41(v57, v35);
  uint64_t v61 = v117;
  v40(v117, v124, v35);
  if (v60)
  {
    uint64_t v51 = v120;
    uint64_t v50 = v61;
    uint64_t v49 = v119;
    goto LABEL_5;
  }
  uint64_t v62 = v96;
  swift_getAtKeyPath();
  uint64_t v63 = v98;
  uint64_t v64 = swift_getAssociatedConformanceWitness();
  uint64_t v65 = (*(uint64_t (**)(uint64_t))(*(void *)(v64 + 16) + 56))(v63);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v62, v63);
  v41(v61, v35);
  uint64_t v52 = v118;
  v40(v118, v124, v35);
  if (v65)
  {
    uint64_t v51 = v120;
    uint64_t v49 = v119;
    goto LABEL_6;
  }
  uint64_t v66 = v93;
  swift_getAtKeyPath();
  uint64_t v67 = v95;
  uint64_t v68 = swift_getAssociatedConformanceWitness();
  LODWORD(v117) = (*(uint64_t (**)(uint64_t))(*(void *)(v68 + 16) + 56))(v67);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v66, v67);
  v41(v52, v35);
  uint64_t v49 = v119;
  v40(v119, v124, v35);
  uint64_t v53 = v121;
  if (v117)
  {
    uint64_t v51 = v120;
    goto LABEL_7;
  }
  uint64_t v69 = v89;
  swift_getAtKeyPath();
  uint64_t v70 = v91;
  uint64_t v71 = swift_getAssociatedConformanceWitness();
  uint64_t v72 = (*(uint64_t (**)(uint64_t))(*(void *)(v71 + 16) + 56))(v70);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v69, v70);
  v41(v49, v35);
  uint64_t v51 = v120;
  v40(v120, v124, v35);
  if (v72) {
    goto LABEL_8;
  }
  uint64_t v73 = v85;
  swift_getAtKeyPath();
  uint64_t v74 = v87;
  uint64_t v75 = swift_getAssociatedConformanceWitness();
  uint64_t v76 = (*(uint64_t (**)(uint64_t))(*(void *)(v75 + 16) + 56))(v74);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v73, v74);
  v41(v51, v35);
  v40(v53, v124, v35);
  if ((v76 & 1) == 0)
  {
    uint64_t v77 = v81;
    swift_getAtKeyPath();
    int v78 = AssociatedTypeWitness;
    uint64_t v79 = swift_getAssociatedConformanceWitness();
    uint64_t v54 = (*(uint64_t (**)(uint64_t))(*(void *)(v79 + 16) + 56))(v78);
    sub_1C4342588((uint64_t)v125);
    (*(void (**)(char *, uint64_t))(v82 + 8))(v77, v78);
    v41(v53, v35);
    return v54 & 1;
  }
LABEL_9:
  v41(v53, v35);
  sub_1C4342588((uint64_t)v125);
  uint64_t v54 = 1;
  return v54 & 1;
}

uint64_t CRStruct_8.finalizeTimestamps(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(uint64_t *__return_ptr, uint64_t))(*(void *)(a3 + 8) + 144))(&v38, a2);
  sub_1C4342484((uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 64);
  uint64_t v6 = swift_checkMetadataState();
  v5(a1, v6, v4);
  v3(v37, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v7 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 64);
  uint64_t v10 = swift_checkMetadataState();
  v9(a1, v10, v8);
  v7(v37, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v11 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 64);
  uint64_t v14 = swift_checkMetadataState();
  v13(a1, v14, v12);
  v11(v37, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 64);
  uint64_t v18 = swift_checkMetadataState();
  v17(a1, v18, v16);
  v15(v37, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v19 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 64);
  uint64_t v22 = swift_checkMetadataState();
  v21(a1, v22, v20);
  v19(v37, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v23 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 64);
  uint64_t v26 = swift_checkMetadataState();
  v25(a1, v26, v24);
  v23(v37, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v35 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 64);
  uint64_t v29 = swift_checkMetadataState();
  v28(a1, v29, v27);
  v35(v37, 0);
  swift_release();
  sub_1C4342484((uint64_t)&v38);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v30 = (void (*)(unsigned char *, void))swift_modifyAtWritableKeyPath();
  swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(swift_getAssociatedConformanceWitness() + 16);
  uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 64);
  uint64_t v33 = swift_checkMetadataState();
  v32(a1, v33, v31);
  v30(v37, 0);
  swift_release();
  return sub_1C4342588((uint64_t)&v38);
}

uint64_t CRStruct_8.minEncodingVersion.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v44 = (char *)v43 - v5;
  uint64_t v50 = swift_getAssociatedTypeWitness();
  uint64_t v49 = *(void *)(v50 - 8);
  MEMORY[0x1F4188790](v50);
  uint64_t v48 = (char *)v43 - v6;
  uint64_t v54 = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(v54 - 8);
  MEMORY[0x1F4188790](v54);
  uint64_t v52 = (char *)v43 - v7;
  uint64_t v58 = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x1F4188790](v58);
  uint64_t v56 = (char *)v43 - v8;
  uint64_t v62 = swift_getAssociatedTypeWitness();
  uint64_t v61 = *(void *)(v62 - 8);
  MEMORY[0x1F4188790](v62);
  int v60 = (char *)v43 - v9;
  uint64_t v66 = swift_getAssociatedTypeWitness();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v64 = (char *)v43 - v10;
  uint64_t v70 = swift_getAssociatedTypeWitness();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  uint64_t v68 = (char *)v43 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v74 = v12;
  uint64_t v71 = v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)v43 - v14;
  (*(void (**)(_WORD *__return_ptr, uint64_t, uint64_t))(v4 + 144))(&v73[1], a1, v4);
  uint64_t v16 = v74;
  uint64_t v67 = *(void *)&v73[21];
  uint64_t v63 = *(void *)&v73[33];
  uint64_t v59 = *(void *)&v73[45];
  uint64_t v55 = *(void *)&v73[57];
  uint64_t v51 = *(void *)&v73[69];
  uint64_t v47 = *(void *)&v73[81];
  v43[1] = *(void *)&v73[93];
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 24))(a1);
  sub_1C447829C(v17, (unsigned char *)v73 + 1);
  swift_bridgeObjectRelease();
  unsigned int v18 = HIBYTE(v73[0]);
  if (HIBYTE(v73[0]) > 1u) {
    goto LABEL_26;
  }
  swift_getAtKeyPath();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(AssociatedConformanceWitness + 16) + 8)
                                                       + 32))(v73, v16);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v15, v16);
  if (LOBYTE(v73[0]) > v18) {
    unsigned int v18 = LOBYTE(v73[0]);
  }
  HIBYTE(v73[0]) = v18;
  if (v18 > 1) {
    goto LABEL_26;
  }
  uint64_t v20 = v68;
  swift_getAtKeyPath();
  uint64_t v21 = v70;
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v22 + 16) + 8) + 32))(v73, v21);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v20, v21);
  if (LOBYTE(v73[0]) > v18) {
    unsigned int v18 = LOBYTE(v73[0]);
  }
  HIBYTE(v73[0]) = v18;
  if (v18 > 1) {
    goto LABEL_26;
  }
  uint64_t v23 = v64;
  swift_getAtKeyPath();
  uint64_t v24 = v66;
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v25 + 16) + 8) + 32))(v73, v24);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v23, v24);
  if (LOBYTE(v73[0]) > v18) {
    unsigned int v18 = LOBYTE(v73[0]);
  }
  HIBYTE(v73[0]) = v18;
  if (v18 > 1) {
    goto LABEL_26;
  }
  uint64_t v26 = v60;
  swift_getAtKeyPath();
  uint64_t v27 = v62;
  uint64_t v28 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v28 + 16) + 8) + 32))(v73, v27);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v26, v27);
  if (LOBYTE(v73[0]) > v18) {
    unsigned int v18 = LOBYTE(v73[0]);
  }
  HIBYTE(v73[0]) = v18;
  if (v18 > 1) {
    goto LABEL_26;
  }
  uint64_t v29 = v56;
  swift_getAtKeyPath();
  uint64_t v30 = v58;
  uint64_t v31 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v31 + 16) + 8) + 32))(v73, v30);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v29, v30);
  if (LOBYTE(v73[0]) > v18) {
    unsigned int v18 = LOBYTE(v73[0]);
  }
  HIBYTE(v73[0]) = v18;
  if (v18 > 1) {
    goto LABEL_26;
  }
  uint64_t v32 = v52;
  swift_getAtKeyPath();
  uint64_t v33 = v54;
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v34 + 16) + 8) + 32))(v73, v33);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v33);
  if (LOBYTE(v73[0]) > v18) {
    unsigned int v18 = LOBYTE(v73[0]);
  }
  HIBYTE(v73[0]) = v18;
  if (v18 > 1) {
    goto LABEL_26;
  }
  uint64_t v35 = v48;
  swift_getAtKeyPath();
  uint64_t v36 = v50;
  uint64_t v37 = swift_getAssociatedConformanceWitness();
  (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v37 + 16) + 8) + 32))(v73, v36);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v36);
  if (LOBYTE(v73[0]) > v18) {
    unsigned int v18 = LOBYTE(v73[0]);
  }
  HIBYTE(v73[0]) = v18;
  if (v18 > 1)
  {
LABEL_26:
    uint64_t result = sub_1C4342588((uint64_t)&v73[1]);
  }
  else
  {
    uint64_t v38 = v44;
    swift_getAtKeyPath();
    uint64_t v39 = AssociatedTypeWitness;
    uint64_t v40 = swift_getAssociatedConformanceWitness();
    (*(void (**)(_WORD *__return_ptr, uint64_t))(*(void *)(*(void *)(v40 + 16) + 8) + 32))(v73, v39);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v38, v39);
    unsigned int v41 = LOBYTE(v73[0]);
    uint64_t result = sub_1C4342588((uint64_t)&v73[1]);
    if (v41 > v18) {
      LOBYTE(v18) = v41;
    }
  }
  *uint64_t v72 = v18;
  return result;
}

uint64_t CRStruct_8<>.encode(to:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, char *a10, char *a11)
{
  void (*v28)(uint64_t *__return_ptr, uint64_t, uint64_t);
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t result;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t i;
  unint64_t v65;
  int64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t AssociatedTypeWitness;
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  int64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  int64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  void v154[27];

  uint64_t v109 = a4;
  uint64_t v88 = a8;
  uint64_t v93 = a7;
  uint64_t v98 = a6;
  BOOL v102 = a5;
  uint64_t v107 = a1;
  uint64_t v12 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v72 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v75 = (char *)&v70 - v13;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  int v78 = *(void *)(v14 - 8);
  uint64_t v79 = v14;
  MEMORY[0x1F4188790](v14);
  uint64_t v77 = (char *)&v70 - v15;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(v16 - 8);
  uint64_t v83 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v81 = (char *)&v70 - v17;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(v18 - 8);
  uint64_t v87 = v18;
  MEMORY[0x1F4188790](v18);
  uint64_t v85 = (char *)&v70 - v19;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v91 = *(void *)(v20 - 8);
  uint64_t v92 = v20;
  MEMORY[0x1F4188790](v20);
  uint64_t v90 = (char *)&v70 - v21;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  BOOL v96 = *(void *)(v22 - 8);
  uint64_t v97 = v22;
  MEMORY[0x1F4188790](v22);
  char v95 = (char *)&v70 - v23;
  uint64_t v24 = swift_getAssociatedTypeWitness();
  BOOL v100 = *(void *)(v24 - 8);
  BOOL v101 = v24;
  MEMORY[0x1F4188790](v24);
  uint64_t v111 = (char *)&v70 - v25;
  uint64_t v106 = swift_getAssociatedTypeWitness();
  uint64_t v108 = *(void *)(v106 - 8);
  MEMORY[0x1F4188790](v106);
  uint64_t v104 = (char *)&v70 - v26;
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EA39EF70);
  int v103 = *(void *)(v114 - 8);
  MEMORY[0x1F4188790](v114 - 8);
  uint64_t v124 = (char *)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v12 + 144);
  uint64_t v70 = a2;
  uint64_t v71 = v12;
  v28(&v130, a2, v12);
  uint64_t v105 = v130;
  uint64_t v113 = v132;
  uint64_t v115 = v135;
  uint64_t v122 = v134;
  uint64_t v123 = v138;
  uint64_t v126 = v140;
  uint64_t v127 = v141;
  int v125 = v143;
  uint64_t v117 = v137;
  int v118 = v146;
  uint64_t v128 = v144;
  uint64_t v129 = v147;
  v154[0] = v130;
  v154[1] = v131;
  uint64_t v112 = v131;
  v154[2] = v132;
  uint64_t v99 = v133;
  v154[3] = v133;
  v154[4] = v134;
  v154[5] = v135;
  int v94 = v136;
  v154[6] = v136;
  v154[7] = v137;
  v154[8] = v138;
  int v89 = v139;
  v154[9] = v139;
  v154[10] = v140;
  v154[11] = v141;
  BOOL v84 = v142;
  v154[12] = v142;
  v154[13] = v143;
  v154[14] = v144;
  uint64_t v80 = v145;
  v154[15] = v145;
  v154[16] = v146;
  v154[17] = v147;
  uint64_t v76 = v148;
  v154[18] = v148;
  v154[19] = v149;
  uint64_t v120 = v153;
  uint64_t v121 = v149;
  v154[20] = v150;
  uint64_t v119 = v150;
  uint64_t v73 = v151;
  v154[21] = v151;
  v154[22] = v152;
  uint64_t v116 = v152;
  v154[23] = v153;
  __swift_project_boxed_opaque_existential_1(v107, v107[3]);
  sub_1C42469F0();
  sub_1C44986A8();
  sub_1C4342484((uint64_t)v154);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v29 = v104;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v154);
  swift_release();
  uint64_t v30 = v106;
  swift_release();
  uint64_t v31 = v112;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v32 = v114;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v130 = v105;
  uint64_t v131 = v31;
  uint64_t v33 = v124;
  uint64_t v34 = v110;
  sub_1C4498048();
  if (v34)
  {
    sub_1C4342588((uint64_t)v154);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v29, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v33, v32);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v29, v30);
  sub_1C4342484((uint64_t)v154);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  int v110 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v154);
  uint64_t v36 = v114;
  swift_release();
  swift_release();
  uint64_t v37 = v124;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v130 = v99;
  uint64_t v131 = v122;
  uint64_t v38 = v110;
  uint64_t v39 = v101;
  sub_1C4498048();
  if (v38)
  {
    sub_1C4342588((uint64_t)v154);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v100 + 8))(v111, v39);
    return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v37, v36);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v100 + 8))(v111, v39);
  sub_1C4342484((uint64_t)v154);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v40 = v95;
  int v110 = 0;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v154);
  swift_release();
  uint64_t v36 = v114;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v37 = v124;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v130 = v94;
  uint64_t v131 = v117;
  unsigned int v41 = v97;
  uint64_t v42 = v110;
  sub_1C4498048();
  if (v42)
  {
    sub_1C4342588((uint64_t)v154);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v96 + 8))(v40, v41);
    return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v37, v36);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v40, v41);
  sub_1C4342484((uint64_t)v154);
  swift_bridgeObjectRelease();
  int v110 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v90;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v154);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v114;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v45 = v124;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v130 = v89;
  uint64_t v131 = v126;
  uint64_t v46 = v92;
  uint64_t v47 = v110;
  sub_1C4498048();
  if (v47)
  {
    sub_1C4342588((uint64_t)v154);
    swift_bridgeObjectRelease();
    uint64_t v48 = v91;
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v43, v46);
  sub_1C4342484((uint64_t)v154);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  int v110 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v85;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v154);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v114;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v45 = v124;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v130 = v84;
  uint64_t v131 = v125;
  uint64_t v46 = v87;
  uint64_t v49 = v110;
  sub_1C4498048();
  if (v49)
  {
    sub_1C4342588((uint64_t)v154);
    swift_bridgeObjectRelease();
    uint64_t v48 = v86;
    goto LABEL_18;
  }
  uint64_t v111 = a9;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v43, v46);
  sub_1C4342484((uint64_t)v154);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  int v110 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v81;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v154);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v114;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v45 = v124;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v130 = v80;
  uint64_t v131 = v118;
  uint64_t v46 = v83;
  uint64_t v50 = v110;
  sub_1C4498048();
  if (v50)
  {
    sub_1C4342588((uint64_t)v154);
    swift_bridgeObjectRelease();
    uint64_t v48 = v82;
    goto LABEL_18;
  }
  uint64_t v111 = a10;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v43, v46);
  sub_1C4342484((uint64_t)v154);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  int v110 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v51 = v77;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v154);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v114;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v43 = v51;
  uint64_t v45 = v124;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v130 = v76;
  uint64_t v131 = v121;
  uint64_t v46 = v79;
  uint64_t v52 = v110;
  sub_1C4498048();
  if (v52)
  {
    sub_1C4342588((uint64_t)v154);
    swift_bridgeObjectRelease();
    uint64_t v48 = v78;
    goto LABEL_18;
  }
  uint64_t v111 = a11;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v46);
  sub_1C4342484((uint64_t)v154);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  int v110 = 0;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v53 = v75;
  swift_getAtKeyPath();
  swift_release();
  sub_1C4342484((uint64_t)v154);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v114;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v43 = v53;
  uint64_t v45 = v124;
  swift_bridgeObjectRelease();
  uint64_t v130 = v73;
  uint64_t v131 = v116;
  uint64_t v46 = AssociatedTypeWitness;
  uint64_t v54 = v110;
  sub_1C4498048();
  if (v54)
  {
    sub_1C4342588((uint64_t)v154);
    swift_bridgeObjectRelease();
    uint64_t v48 = v72;
LABEL_18:
    (*(void (**)(char *, uint64_t))(v48 + 8))(v43, v46);
    uint64_t v55 = v103;
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v45, v44);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v46);
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v71 + 8) + 24))(v70);
  uint64_t v56 = result;
  uint64_t v57 = 0;
  uint64_t v58 = result + 64;
  uint64_t v59 = 1 << *(unsigned char *)(result + 32);
  int v60 = -1;
  if (v59 < 64) {
    int v60 = ~(-1 << v59);
  }
  uint64_t v61 = v60 & *(void *)(result + 64);
  uint64_t v129 = (unint64_t)(v59 + 63) >> 6;
  if (!v61) {
    goto LABEL_24;
  }
LABEL_23:
  uint64_t v62 = __clz(__rbit64(v61));
  v61 &= v61 - 1;
  for (unint64_t i = v62 | (v57 << 6); ; unint64_t i = __clz(__rbit64(v65)) + (v57 << 6))
  {
    uint64_t v67 = (uint64_t *)(*(void *)(v56 + 48) + 16 * i);
    uint64_t v68 = *v67;
    uint64_t v69 = v67[1];
    v154[26] = *(void *)(*(void *)(v56 + 56) + 8 * i);
    uint64_t v130 = v68;
    uint64_t v131 = v69;
    sub_1C4246A44();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1C4498048();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
    if (v61) {
      goto LABEL_23;
    }
LABEL_24:
    if (__OFADD__(v57++, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v57 >= v129) {
      goto LABEL_41;
    }
    uint64_t v65 = *(void *)(v58 + 8 * v57);
    if (!v65) {
      break;
    }
LABEL_34:
    uint64_t v61 = (v65 - 1) & v65;
  }
  uint64_t v66 = v57 + 1;
  if (v57 + 1 >= v129) {
    goto LABEL_41;
  }
  uint64_t v65 = *(void *)(v58 + 8 * v66);
  if (v65) {
    goto LABEL_33;
  }
  uint64_t v66 = v57 + 2;
  if (v57 + 2 >= v129) {
    goto LABEL_41;
  }
  uint64_t v65 = *(void *)(v58 + 8 * v66);
  if (v65) {
    goto LABEL_33;
  }
  uint64_t v66 = v57 + 3;
  if (v57 + 3 >= v129)
  {
LABEL_41:
    uint64_t v55 = v103;
    uint64_t v44 = v114;
    uint64_t v45 = v124;
    sub_1C4342588((uint64_t)v154);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v45, v44);
  }
  uint64_t v65 = *(void *)(v58 + 8 * v66);
  if (v65)
  {
LABEL_33:
    uint64_t v57 = v66;
    goto LABEL_34;
  }
  while (1)
  {
    uint64_t v57 = v66 + 1;
    if (__OFADD__(v66, 1)) {
      break;
    }
    if (v57 >= v129) {
      goto LABEL_41;
    }
    uint64_t v65 = *(void *)(v58 + 8 * v57);
    ++v66;
    if (v65) {
      goto LABEL_34;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t CRStruct_9.copy(renamingReferences:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v36)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t AssociatedConformanceWitness;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void v75[2];
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t AssociatedTypeWitness;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void v132[27];

  uint64_t v5 = v4;
  uint64_t v116 = a1;
  uint64_t v112 = a4;
  uint64_t v8 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v109 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v106 = (char *)v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v107 = (char *)v75 - v11;
  uint64_t v104 = swift_getAssociatedTypeWitness();
  uint64_t v105 = *(void *)(v104 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v104);
  BOOL v102 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  int v103 = (char *)v75 - v14;
  BOOL v100 = swift_getAssociatedTypeWitness();
  BOOL v101 = *(void *)(v100 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v100);
  uint64_t v98 = (char *)v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  uint64_t v99 = (char *)v75 - v17;
  BOOL v96 = swift_getAssociatedTypeWitness();
  uint64_t v97 = *(void *)(v96 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v96);
  int v94 = (char *)v75 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  char v95 = (char *)v75 - v20;
  uint64_t v92 = swift_getAssociatedTypeWitness();
  uint64_t v93 = *(void *)(v92 - 8);
  uint64_t v21 = MEMORY[0x1F4188790](v92);
  uint64_t v90 = (char *)v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v21);
  uint64_t v91 = (char *)v75 - v23;
  uint64_t v88 = swift_getAssociatedTypeWitness();
  int v89 = *(void *)(v88 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v88);
  uint64_t v86 = (char *)v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v87 = (char *)v75 - v26;
  BOOL v84 = swift_getAssociatedTypeWitness();
  uint64_t v85 = *(void *)(v84 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v84);
  uint64_t v82 = (char *)v75 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v27);
  uint64_t v83 = (char *)v75 - v29;
  uint64_t v80 = swift_getAssociatedTypeWitness();
  uint64_t v81 = *(void *)(v80 - 8);
  uint64_t v30 = MEMORY[0x1F4188790](v80);
  int v78 = (char *)v75 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v30);
  uint64_t v79 = (char *)v75 - v32;
  uint64_t v76 = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(void *)(v76 - 8);
  uint64_t v33 = MEMORY[0x1F4188790](v76);
  v75[0] = (char *)v75 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v33);
  v75[1] = (char *)v75 - v35;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v115 = v8;
  uint64_t v36 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 160);
  uint64_t v113 = a2;
  v36(v132, a2, v8);
  uint64_t v126 = v132[2];
  uint64_t v130 = v132[4];
  uint64_t v129 = v132[5];
  uint64_t v128 = v132[7];
  uint64_t v114 = v132[8];
  uint64_t v131 = v132[10];
  uint64_t v121 = v132[11];
  uint64_t v117 = v132[13];
  uint64_t v37 = v132[14];
  uint64_t v38 = v132[26];
  int v125 = v132[1];
  uint64_t v39 = v132[16];
  int v118 = v132[17];
  uint64_t v40 = v132[19];
  uint64_t v127 = v132[20];
  uint64_t v119 = v132[22];
  uint64_t v122 = v132[23];
  uint64_t v124 = v132[25];
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v123 = v40;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v120 = v39;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  int v110 = v38;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  unsigned int v41 = v75[0];
  swift_getAtKeyPath();
  swift_release();
  uint64_t v42 = v76;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(v116, v42);
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v41, v42);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v111 = v37;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v44 = v78;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v45 = v80;
  uint64_t v46 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v46 + 16) + 24))(v116, v45);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v44, v45);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = v82;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v48 = v84;
  uint64_t v49 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v49 + 16) + 24))(v116, v48);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v47, v48);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v50 = v86;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v51 = v88;
  uint64_t v52 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 + 16) + 24))(v116, v51);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v50, v51);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v53 = v90;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v54 = v92;
  uint64_t v55 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v55 + 16) + 24))(v116, v54);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v53, v54);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v56 = v94;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v57 = v96;
  uint64_t v58 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 + 16) + 24))(v116, v57);
  (*(void (**)(char *, uint64_t))(v97 + 8))(v56, v57);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v59 = v98;
  swift_getAtKeyPath();
  swift_release();
  int v60 = v100;
  uint64_t v61 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v61 + 16) + 24))(v116, v60);
  (*(void (**)(char *, uint64_t))(v101 + 8))(v59, v60);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v62 = v102;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v63 = v104;
  uint64_t v64 = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 + 16) + 24))(v116, v63);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v62, v63);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v132);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v65 = v106;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v66 = v115;
  uint64_t v67 = v113;
  uint64_t v68 = AssociatedTypeWitness;
  uint64_t v69 = swift_getAssociatedConformanceWitness();
  uint64_t v70 = v116;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 + 16) + 24))(v116, v68);
  (*(void (**)(char *, uint64_t))(v109 + 8))(v65, v68);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v71 = *(void *)(v66 + 8);
  uint64_t v72 = (*(uint64_t (**)(uint64_t, uint64_t))(v71 + 24))(v67, v71);
  uint64_t v73 = sub_1C4341774(v72, v70);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v71 + 32))(v73, v67, v71);
  return sub_1C43427A8((uint64_t)v132);
}

uint64_t CRStruct_9.copy(renamingReferences:)@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  void (*v38)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t AssociatedConformanceWitness;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t AssociatedTypeWitness;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  void v134[27];
  unint64_t v135;

  uint64_t v5 = v4;
  uint64_t v9 = *(void *)(a3 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v110 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v109 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  uint64_t v108 = (char *)&v76 - v12;
  uint64_t v107 = swift_getAssociatedTypeWitness();
  uint64_t v106 = *(void *)(v107 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v107);
  uint64_t v105 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  uint64_t v104 = (char *)&v76 - v15;
  int v103 = swift_getAssociatedTypeWitness();
  BOOL v102 = *(void *)(v103 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v103);
  BOOL v101 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  BOOL v100 = (char *)&v76 - v18;
  uint64_t v99 = swift_getAssociatedTypeWitness();
  uint64_t v98 = *(void *)(v99 - 8);
  uint64_t v19 = MEMORY[0x1F4188790](v99);
  uint64_t v97 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v19);
  BOOL v96 = (char *)&v76 - v21;
  char v95 = swift_getAssociatedTypeWitness();
  int v94 = *(void *)(v95 - 8);
  uint64_t v22 = MEMORY[0x1F4188790](v95);
  uint64_t v93 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v22);
  uint64_t v92 = (char *)&v76 - v24;
  uint64_t v91 = swift_getAssociatedTypeWitness();
  uint64_t v90 = *(void *)(v91 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v91);
  int v89 = (char *)&v76 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v25);
  uint64_t v88 = (char *)&v76 - v27;
  uint64_t v87 = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(v87 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v87);
  uint64_t v85 = (char *)&v76 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v28);
  BOOL v84 = (char *)&v76 - v30;
  uint64_t v83 = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(v83 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v83);
  uint64_t v81 = (char *)&v76 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v80 = (char *)&v76 - v33;
  uint64_t v79 = swift_getAssociatedTypeWitness();
  int v78 = *(void *)(v79 - 8);
  uint64_t v34 = MEMORY[0x1F4188790](v79);
  uint64_t v77 = (char *)&v76 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v34);
  uint64_t v76 = (char *)&v76 - v36;
  if (a1) {
    unint64_t v37 = a1;
  }
  else {
    unint64_t v37 = sub_1C3FE49A0(MEMORY[0x1E4FBC860]);
  }
  uint64_t v135 = v37;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a4, v5, a2);
  uint64_t v116 = a4;
  int v118 = v5;
  uint64_t v38 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 160);
  swift_bridgeObjectRetain();
  uint64_t v119 = a2;
  v38(v134, a2, v9);
  uint64_t v120 = v134[2];
  uint64_t v127 = v134[4];
  uint64_t v121 = v134[5];
  uint64_t v131 = v134[7];
  uint64_t v117 = v9;
  int v125 = v134[8];
  uint64_t v133 = v134[10];
  uint64_t v129 = v134[11];
  uint64_t v130 = v134[13];
  uint64_t v39 = v134[14];
  uint64_t v40 = v134[19];
  uint64_t v112 = v134[26];
  uint64_t v132 = v134[1];
  unsigned int v41 = v134[16];
  uint64_t v42 = v134[17];
  uint64_t v114 = v134[20];
  uint64_t v123 = v134[22];
  uint64_t v115 = v134[23];
  uint64_t v124 = v134[25];
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v128 = v40;
  swift_bridgeObjectRelease();
  uint64_t v126 = v42;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v122 = v41;
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v43 = v77;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v44 = v79;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(AssociatedConformanceWitness + 16) + 24))(&v135, v44);
  (*(void (**)(char *, uint64_t))(v78 + 8))(v43, v44);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v113 = v39;
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v46 = v81;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v47 = v83;
  uint64_t v48 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v48 + 16) + 24))(&v135, v47);
  (*(void (**)(char *, uint64_t))(v82 + 8))(v46, v47);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v49 = v85;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v50 = v87;
  uint64_t v51 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v51 + 16) + 24))(&v135, v50);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v49, v50);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v52 = v89;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v53 = v91;
  uint64_t v54 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v54 + 16) + 24))(&v135, v53);
  (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v53);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v55 = v93;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v56 = v95;
  uint64_t v57 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v57 + 16) + 24))(&v135, v56);
  (*(void (**)(char *, uint64_t))(v94 + 8))(v55, v56);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v58 = v97;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v59 = v99;
  int v60 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v60 + 16) + 24))(&v135, v59);
  (*(void (**)(char *, uint64_t))(v98 + 8))(v58, v59);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v61 = v101;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v62 = v103;
  uint64_t v63 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v63 + 16) + 24))(&v135, v62);
  (*(void (**)(char *, uint64_t))(v102 + 8))(v61, v62);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v64 = v105;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v65 = v107;
  uint64_t v66 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v66 + 16) + 24))(&v135, v65);
  (*(void (**)(char *, uint64_t))(v106 + 8))(v64, v65);
  swift_setAtWritableKeyPath();
  swift_release();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_1C4342688((uint64_t)v134);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v67 = v109;
  swift_getAtKeyPath();
  swift_release();
  uint64_t v68 = v117;
  uint64_t v69 = v119;
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v71 = swift_getAssociatedConformanceWitness();
  (*(void (**)(unint64_t *, uint64_t))(*(void *)(v71 + 16) + 24))(&v135, v70);
  (*(void (**)(char *, uint64_t))(v110 + 8))(v67, v70);
  swift_setAtWritableKeyPath();
  swift_release();
  uint64_t v72 = *(void *)(v68 + 8);
  uint64_t v73 = (*(uint64_t (**)(uint64_t, uint64_t))(v72 + 24))(v69, v72);
  uint64_t v74 = sub_1C4341774(v73, (uint64_t)&v135);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v74, v69, v72);
  return sub_1C43427A8((uint64_t)v134);
}

uint64_t static CRStruct_9.fieldKeys.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(*(void *)(a2 + 8) + 160))(v22);
  uint64_t v15 = v22[1];
  uint64_t v4 = v22[0];
  uint64_t v5 = v22[3];
  uint64_t v18 = v22[7];
  uint64_t v6 = v22[6];
  uint64_t v7 = v22[9];
  uint64_t v19 = v22[10];
  uint64_t v20 = v22[4];
  uint64_t v21 = v22[13];
  uint64_t v8 = v22[12];
  uint64_t v9 = v22[15];
  uint64_t v10 = v22[18];
  uint64_t v11 = v22[21];
  uint64_t v12 = v22[24];
  uint64_t v16 = v22[16];
  uint64_t v17 = v22[22];
  uint64_t v2 = v22[19];
  uint64_t v14 = v22[25];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EBBC0250);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1C449BDE0;
  sub_1C4342688((uint64_t)v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 32) = v4;
  *(void *)(v13 + 40) = v15;
  sub_1C4342688((uint64_t)v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 48) = v5;
  *(void *)(v13 + 56) = v20;
  sub_1C4342688((uint64_t)v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 64) = v6;
  *(void *)(v13 + 72) = v18;
  sub_1C4342688((uint64_t)v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 80) = v7;
  *(void *)(v13 + 88) = v19;
  sub_1C4342688((uint64_t)v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 96) = v8;
  *(void *)(v13 + 104) = v21;
  sub_1C4342688((uint64_t)v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 112) = v9;
  *(void *)(v13 + 120) = v16;
  sub_1C4342688((uint64_t)v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 128) = v10;
  *(void *)(v13 + 136) = v2;
  sub_1C4342688((uint64_t)v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 144) = v11;
  *(void *)(v13 + 152) = v17;
  sub_1C4342688((uint64_t)v22);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(void *)(v13 + 160) = v12;
  *(void *)(v13 + 168) = v14;
  sub_1C43427A8((uint64_t)v22);
  return v13;
}