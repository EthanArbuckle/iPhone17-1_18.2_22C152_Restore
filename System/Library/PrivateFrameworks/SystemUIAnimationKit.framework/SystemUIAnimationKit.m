uint64_t SUIAGetDeviceClass()
{
  return MEMORY[0x270F95FE8](@"DeviceClassNumber", 0xFFFFFFFFLL);
}

double SUIAExpandNormalizedRect(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  double MinX = CGRectGetMinX(*(CGRect *)&a1);
  v13.origin.x = a1;
  v13.origin.y = a2;
  v13.size.width = a3;
  v13.size.height = a4;
  double v11 = a5 * CGRectGetMaxX(v13) + (1.0 - a5) * MinX;
  v14.origin.x = a1;
  v14.origin.y = a2;
  v14.size.width = a3;
  v14.size.height = a4;
  CGRectGetMinY(v14);
  v15.origin.x = a1;
  v15.origin.y = a2;
  v15.size.width = a3;
  v15.size.height = a4;
  CGRectGetMaxY(v15);
  v16.origin.x = a1;
  v16.origin.y = a2;
  v16.size.width = a3;
  v16.size.height = a4;
  CGRectGetWidth(v16);
  v17.origin.x = a1;
  v17.origin.y = a2;
  v17.size.width = a3;
  v17.size.height = a4;
  CGRectGetHeight(v17);
  return v11;
}

double SUIAExpandNormalizedPoint(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5)
{
  double MinX = CGRectGetMinX(*(CGRect *)&a1);
  v13.origin.x = a1;
  v13.origin.y = a2;
  v13.size.width = a3;
  v13.size.height = a4;
  double v11 = a5 * CGRectGetMaxX(v13) + (1.0 - a5) * MinX;
  v14.origin.x = a1;
  v14.origin.y = a2;
  v14.size.width = a3;
  v14.size.height = a4;
  CGRectGetMinY(v14);
  v15.origin.x = a1;
  v15.origin.y = a2;
  v15.size.width = a3;
  v15.size.height = a4;
  CGRectGetMaxY(v15);
  return v11;
}

double SUIAConvertDampingRatioAndResponseToTensionAndFriction(double *a1, double *a2, double result, double a4)
{
  double v4 = 6.28318531 / a4 * (6.28318531 / a4);
  if (a1) {
    *a1 = v4;
  }
  if (a2)
  {
    double v5 = sqrt(v4);
    result = (v5 + v5) * result;
    *a2 = result;
  }
  return result;
}

double SUIAConvertTensionAndFrictionToDampingRatioAndResponse(double *a1, double *a2, double a3, double a4)
{
  double result = sqrt(a3);
  if (a1) {
    *a1 = a4 / (result + result);
  }
  if (a2)
  {
    double result = 6.28318531 / result;
    *a2 = result;
  }
  return result;
}

double SUIAConvertMassStiffnessAndDampingToDampingRatioAndResponse(double *a1, double *a2, double result, double a4, double a5)
{
  double v5 = sqrt(a4 / result);
  if (a1)
  {
    double result = a5 / result / (v5 + v5);
    *a1 = result;
  }
  if (a2)
  {
    double result = 6.28318531 / v5;
    *a2 = 6.28318531 / v5;
  }
  return result;
}

__CFString *SUIAStringFromShockwaveState(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4) {
    return @"Initial Offscreen";
  }
  else {
    return off_26552D438[a1 - 1];
  }
}

__CFString *SUIAStringFromShockwaveConfigurationType(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 3) {
    return @"Root View";
  }
  else {
    return off_26552D460[a1 - 1];
  }
}

double SAUIRectMovedOffscreenByProportionToNormalizedButtonRectInContextOfShockwaveBounds(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, double a5, double a6, double a7, double a8, double a9, double a10, double a11, double a12, CGFloat a13, CGFloat a14, CGFloat a15, CGFloat a16)
{
  uint64_t v25 = SUIAScreenEdgeForNormalizedButtonRect();
  CGFloat v26 = a4;
  UIRectGetCenter();
  SUIAExpandNormalizedPoint(a13, a14, a15, a16, v27);
  BSRectCenteredAboutPoint();
  double v29 = v28;
  switch(v25)
  {
    case 1:
    case 4:
      v35.origin.x = a1;
      v35.origin.y = a2;
      v35.size.width = a3;
      v35.size.height = v26;
      CGRectGetHeight(v35);
      break;
    case 2:
      v34.origin.x = a1;
      v34.origin.y = a2;
      v34.size.width = a3;
      v34.size.height = v26;
      double Width = CGRectGetWidth(v34);
      double v31 = -0.5;
      goto LABEL_6;
    case 8:
      v36.origin.x = a1;
      v36.origin.y = a2;
      v36.size.width = a3;
      v36.size.height = v26;
      double Width = CGRectGetWidth(v36);
      double v31 = 0.5;
LABEL_6:
      double v29 = v29 + Width * v31 * a5;
      break;
    default:
      double v29 = *MEMORY[0x263F001A8];
      break;
  }
  return v29;
}

uint64_t SUIAScreenEdgeForNormalizedButtonRect()
{
  if BSFloatIsZero() && (BSFloatIsZero()) {
    return 2;
  }
  if BSFloatIsOne() && (BSFloatIsZero()) {
    return 8;
  }
  if BSFloatIsZero() && (BSFloatIsZero()) {
    return 1;
  }
  if (!BSFloatIsOne()) {
    return 0;
  }
  if (BSFloatIsZero()) {
    return 4;
  }
  return 0;
}

double SUIACATransform3DFromNominalRightEdgeToEdge@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  v3 = (_OWORD *)MEMORY[0x263F15740];
  long long v4 = *(_OWORD *)(MEMORY[0x263F15740] + 80);
  a2[4] = *(_OWORD *)(MEMORY[0x263F15740] + 64);
  a2[5] = v4;
  long long v5 = v3[7];
  a2[6] = v3[6];
  a2[7] = v5;
  long long v6 = v3[1];
  *a2 = *v3;
  a2[1] = v6;
  long long v7 = v3[2];
  long long v8 = v3[3];
  a2[2] = v7;
  a2[3] = v8;
  switch(a1)
  {
    case 4:
      CGFloat v9 = 1.57079633;
      goto LABEL_7;
    case 2:
      CGFloat v9 = 3.14159265;
      goto LABEL_7;
    case 1:
      CGFloat v9 = -1.57079633;
LABEL_7:
      CATransform3DMakeRotation(&v15, v9, 0.0, 0.0, 1.0);
      long long v10 = *(_OWORD *)&v15.m33;
      a2[4] = *(_OWORD *)&v15.m31;
      a2[5] = v10;
      long long v11 = *(_OWORD *)&v15.m43;
      a2[6] = *(_OWORD *)&v15.m41;
      a2[7] = v11;
      long long v12 = *(_OWORD *)&v15.m13;
      *a2 = *(_OWORD *)&v15.m11;
      a2[1] = v12;
      *(CGFloat *)&long long v7 = v15.m21;
      long long v13 = *(_OWORD *)&v15.m23;
      a2[2] = *(_OWORD *)&v15.m21;
      a2[3] = v13;
      break;
  }
  return *(double *)&v7;
}

double SUIANormalizedRectSpanningRectEdge(uint64_t a1)
{
  double result = *MEMORY[0x263F001A8];
  uint64_t v2 = a1 - 1;
  if (unint64_t)(a1 - 1) <= 7 && ((0x8Bu >> v2)) {
    return dbl_25E75F768[v2];
  }
  return result;
}

__CFString *SUIAStringFromAnimationUpdateMode(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 4) {
    return @"Unspecified";
  }
  else {
    return off_26552D590[a1 - 1];
  }
}

id _SUIAModifyFrameRateForAnimationBlockFromSettings(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  long long v5 = _Block_copy(v3);
  [v4 frameRateRange];
  float v7 = v6;
  float v9 = v8;
  float v11 = v10;
  long long v12 = [v4 preferredFrameRateRange];

  int v13 = [v12 highFrameRateReason];
  v24.minimum = v7;
  v24.maximum = v9;
  v24.preferred = v11;
  if (!CAFrameRateRangeIsEqualToRange(v24, *MEMORY[0x263F15738]))
  {
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 3221225472;
    aBlock[2] = ___SUIAModifyFrameRateForAnimationBlockFromSettings_block_invoke;
    aBlock[3] = &unk_26552D4F8;
    float v19 = v7;
    float v20 = v9;
    float v21 = v11;
    int v22 = v13;
    id v18 = v3;
    CGRect v14 = _Block_copy(aBlock);

    long long v5 = v14;
  }
  CATransform3D v15 = _Block_copy(v5);

  return v15;
}

id SUIACompletionBlockC2ToBS(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 3221225472;
    aBlock[2] = __SUIACompletionBlockC2ToBS_block_invoke;
    aBlock[3] = &unk_26552D488;
    id v6 = v1;
    id v3 = _Block_copy(aBlock);
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

uint64_t __SUIACompletionBlockC2ToBS_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id SUIACompletionBlockBSToC2(void *a1)
{
  id v1 = a1;
  uint64_t v2 = v1;
  if (v1)
  {
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 3221225472;
    aBlock[2] = __SUIACompletionBlockBSToC2_block_invoke;
    aBlock[3] = &unk_26552D4B0;
    id v6 = v1;
    id v3 = _Block_copy(aBlock);
  }
  else
  {
    id v3 = 0;
  }

  return v3;
}

uint64_t __SUIACompletionBlockBSToC2_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void destroy for ComponentScanwavePrototypeSettings(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v2 = *(void **)(a1 + 1160);
}

uint64_t initializeWithCopy for ComponentScanwavePrototypeSettings(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  memcpy((void *)(a1 + 16), (const void *)(a2 + 16), 0x150uLL);
  long long v4 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v4;
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  long long v5 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v5;
  long long v6 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v6;
  *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
  uint64_t v7 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v7;
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  long long v8 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v8;
  long long v9 = *(_OWORD *)(a2 + 576);
  long long v10 = *(_OWORD *)(a2 + 592);
  long long v11 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v11;
  *(_OWORD *)(a1 + 576) = v9;
  *(_OWORD *)(a1 + 592) = v10;
  long long v12 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v12;
  long long v13 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v13;
  long long v14 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 720) = v14;
  long long v15 = *(_OWORD *)(a2 + 736);
  long long v16 = *(_OWORD *)(a2 + 752);
  long long v17 = *(_OWORD *)(a2 + 768);
  long long v18 = *(_OWORD *)(a2 + 784);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  *(_OWORD *)(a1 + 768) = v17;
  *(_OWORD *)(a1 + 784) = v18;
  *(_OWORD *)(a1 + 736) = v15;
  *(_OWORD *)(a1 + 752) = v16;
  *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
  long long v19 = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
  *(_OWORD *)(a1 + 840) = v19;
  long long v20 = *(_OWORD *)(a2 + 856);
  long long v21 = *(_OWORD *)(a2 + 872);
  long long v22 = *(_OWORD *)(a2 + 904);
  *(_OWORD *)(a1 + 888) = *(_OWORD *)(a2 + 888);
  *(_OWORD *)(a1 + 904) = v22;
  *(_OWORD *)(a1 + 856) = v20;
  *(_OWORD *)(a1 + 872) = v21;
  long long v23 = *(_OWORD *)(a2 + 920);
  long long v24 = *(_OWORD *)(a2 + 936);
  long long v25 = *(_OWORD *)(a2 + 984);
  *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
  *(_OWORD *)(a1 + 984) = v25;
  long long v26 = *(_OWORD *)(a2 + 952);
  *(_OWORD *)(a1 + 936) = v24;
  *(_OWORD *)(a1 + 952) = v26;
  *(_OWORD *)(a1 + 920) = v23;
  double v27 = *(void **)(a2 + 1000);
  *(void *)(a1 + 1000) = v27;
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_WORD *)(a1 + 1072) = *(_WORD *)(a2 + 1072);
  long long v28 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v28;
  *(unsigned char *)(a1 + 1074) = *(unsigned char *)(a2 + 1074);
  double v29 = *(void **)(a2 + 1080);
  *(void *)(a1 + 1080) = v29;
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  long long v30 = *(_OWORD *)(a2 + 1104);
  long long v31 = *(_OWORD *)(a2 + 1120);
  long long v32 = *(_OWORD *)(a2 + 1136);
  *(_WORD *)(a1 + 1152) = *(_WORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1136) = v32;
  *(_OWORD *)(a1 + 1120) = v31;
  *(_OWORD *)(a1 + 1104) = v30;
  *(unsigned char *)(a1 + 1154) = *(unsigned char *)(a2 + 1154);
  v33 = *(void **)(a2 + 1160);
  *(void *)(a1 + 1160) = v33;
  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  long long v34 = *(_OWORD *)(a2 + 1184);
  long long v35 = *(_OWORD *)(a2 + 1200);
  long long v36 = *(_OWORD *)(a2 + 1216);
  *(unsigned char *)(a1 + 1232) = *(unsigned char *)(a2 + 1232);
  *(_OWORD *)(a1 + 1216) = v36;
  *(_OWORD *)(a1 + 1200) = v35;
  *(_OWORD *)(a1 + 1184) = v34;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v37 = v27;
  id v38 = v29;
  id v39 = v33;
  return a1;
}

uint64_t assignWithCopy for ComponentScanwavePrototypeSettings(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 56);
  long long v6 = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v6;
  *(_OWORD *)(a1 + 56) = v5;
  *(_OWORD *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  long long v7 = *(_OWORD *)(a2 + 120);
  long long v8 = *(_OWORD *)(a2 + 136);
  long long v9 = *(_OWORD *)(a2 + 152);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = v9;
  *(_OWORD *)(a1 + 136) = v8;
  *(_OWORD *)(a1 + 120) = v7;
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  long long v10 = *(_OWORD *)(a2 + 208);
  long long v11 = *(_OWORD *)(a2 + 224);
  long long v12 = *(_OWORD *)(a2 + 240);
  *(_WORD *)(a1 + 256) = *(_WORD *)(a2 + 256);
  *(_OWORD *)(a1 + 224) = v11;
  *(_OWORD *)(a1 + 240) = v12;
  *(_OWORD *)(a1 + 208) = v10;
  *(unsigned char *)(a1 + 258) = *(unsigned char *)(a2 + 258);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  long long v13 = *(_OWORD *)(a2 + 288);
  long long v14 = *(_OWORD *)(a2 + 304);
  long long v15 = *(_OWORD *)(a2 + 320);
  *(_WORD *)(a1 + 336) = *(_WORD *)(a2 + 336);
  *(_OWORD *)(a1 + 304) = v14;
  *(_OWORD *)(a1 + 320) = v15;
  *(_OWORD *)(a1 + 288) = v13;
  *(unsigned char *)(a1 + 338) = *(unsigned char *)(a2 + 338);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  long long v16 = *(_OWORD *)(a2 + 368);
  long long v17 = *(_OWORD *)(a2 + 384);
  long long v18 = *(_OWORD *)(a2 + 400);
  *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
  *(_OWORD *)(a1 + 384) = v17;
  *(_OWORD *)(a1 + 400) = v18;
  *(_OWORD *)(a1 + 368) = v16;
  *(unsigned char *)(a1 + 418) = *(unsigned char *)(a2 + 418);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
  long long v19 = *(_OWORD *)(a2 + 576);
  long long v20 = *(_OWORD *)(a2 + 592);
  long long v21 = *(_OWORD *)(a2 + 608);
  *(_WORD *)(a1 + 624) = *(_WORD *)(a2 + 624);
  *(_OWORD *)(a1 + 592) = v20;
  *(_OWORD *)(a1 + 608) = v21;
  *(_OWORD *)(a1 + 576) = v19;
  *(unsigned char *)(a1 + 626) = *(unsigned char *)(a2 + 626);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  long long v22 = *(_OWORD *)(a2 + 656);
  long long v23 = *(_OWORD *)(a2 + 672);
  long long v24 = *(_OWORD *)(a2 + 688);
  *(_WORD *)(a1 + 704) = *(_WORD *)(a2 + 704);
  *(_OWORD *)(a1 + 672) = v23;
  *(_OWORD *)(a1 + 688) = v24;
  *(_OWORD *)(a1 + 656) = v22;
  *(unsigned char *)(a1 + 706) = *(unsigned char *)(a2 + 706);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  long long v25 = *(_OWORD *)(a2 + 736);
  long long v26 = *(_OWORD *)(a2 + 752);
  long long v27 = *(_OWORD *)(a2 + 768);
  *(_WORD *)(a1 + 784) = *(_WORD *)(a2 + 784);
  *(_OWORD *)(a1 + 752) = v26;
  *(_OWORD *)(a1 + 768) = v27;
  *(_OWORD *)(a1 + 736) = v25;
  *(unsigned char *)(a1 + 786) = *(unsigned char *)(a2 + 786);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  *(void *)(a1 + 800) = *(void *)(a2 + 800);
  *(void *)(a1 + 808) = *(void *)(a2 + 808);
  *(void *)(a1 + 816) = *(void *)(a2 + 816);
  *(void *)(a1 + 824) = *(void *)(a2 + 824);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  long long v28 = *(_OWORD *)(a2 + 848);
  long long v29 = *(_OWORD *)(a2 + 864);
  long long v30 = *(_OWORD *)(a2 + 880);
  *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
  *(_OWORD *)(a1 + 864) = v29;
  *(_OWORD *)(a1 + 880) = v30;
  *(_OWORD *)(a1 + 848) = v28;
  *(unsigned char *)(a1 + 898) = *(unsigned char *)(a2 + 898);
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
  long long v31 = *(_OWORD *)(a2 + 928);
  long long v32 = *(_OWORD *)(a2 + 944);
  long long v33 = *(_OWORD *)(a2 + 960);
  *(_WORD *)(a1 + 976) = *(_WORD *)(a2 + 976);
  *(_OWORD *)(a1 + 944) = v32;
  *(_OWORD *)(a1 + 960) = v33;
  *(_OWORD *)(a1 + 928) = v31;
  *(unsigned char *)(a1 + 978) = *(unsigned char *)(a2 + 978);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  long long v34 = *(void **)(a2 + 1000);
  long long v35 = *(void **)(a1 + 1000);
  *(void *)(a1 + 1000) = v34;
  id v36 = v34;

  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  long long v37 = *(_OWORD *)(a2 + 1024);
  long long v38 = *(_OWORD *)(a2 + 1040);
  long long v39 = *(_OWORD *)(a2 + 1056);
  *(_WORD *)(a1 + 1072) = *(_WORD *)(a2 + 1072);
  *(_OWORD *)(a1 + 1056) = v39;
  *(_OWORD *)(a1 + 1040) = v38;
  *(_OWORD *)(a1 + 1024) = v37;
  *(unsigned char *)(a1 + 1074) = *(unsigned char *)(a2 + 1074);
  v40 = *(void **)(a2 + 1080);
  v41 = *(void **)(a1 + 1080);
  *(void *)(a1 + 1080) = v40;
  id v42 = v40;

  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  long long v43 = *(_OWORD *)(a2 + 1104);
  long long v44 = *(_OWORD *)(a2 + 1120);
  long long v45 = *(_OWORD *)(a2 + 1136);
  *(_WORD *)(a1 + 1152) = *(_WORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1136) = v45;
  *(_OWORD *)(a1 + 1120) = v44;
  *(_OWORD *)(a1 + 1104) = v43;
  *(unsigned char *)(a1 + 1154) = *(unsigned char *)(a2 + 1154);
  v46 = *(void **)(a2 + 1160);
  v47 = *(void **)(a1 + 1160);
  *(void *)(a1 + 1160) = v46;
  id v48 = v46;

  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  *(void *)(a1 + 1200) = *(void *)(a2 + 1200);
  *(void *)(a1 + 1208) = *(void *)(a2 + 1208);
  *(_DWORD *)(a1 + 1216) = *(_DWORD *)(a2 + 1216);
  *(_DWORD *)(a1 + 1220) = *(_DWORD *)(a2 + 1220);
  *(_DWORD *)(a1 + 1224) = *(_DWORD *)(a2 + 1224);
  int v49 = *(_DWORD *)(a2 + 1228);
  *(unsigned char *)(a1 + 1232) = *(unsigned char *)(a2 + 1232);
  *(_DWORD *)(a1 + 1228) = v49;
  return a1;
}

void *__swift_memcpy1233_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x4D1uLL);
}

uint64_t assignWithTake for ComponentScanwavePrototypeSettings(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_WORD *)(a1 + 168) = *(_WORD *)(a2 + 168);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(unsigned char *)(a1 + 170) = *(unsigned char *)(a2 + 170);
  long long v4 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v4;
  long long v5 = *(_OWORD *)(a2 + 208);
  long long v6 = *(_OWORD *)(a2 + 224);
  long long v7 = *(_OWORD *)(a2 + 240);
  *(_WORD *)(a1 + 256) = *(_WORD *)(a2 + 256);
  *(_OWORD *)(a1 + 224) = v6;
  *(_OWORD *)(a1 + 240) = v7;
  *(_OWORD *)(a1 + 208) = v5;
  *(unsigned char *)(a1 + 258) = *(unsigned char *)(a2 + 258);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_WORD *)(a1 + 336) = *(_WORD *)(a2 + 336);
  long long v8 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v8;
  long long v9 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v9;
  *(unsigned char *)(a1 + 338) = *(unsigned char *)(a2 + 338);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  long long v10 = *(_OWORD *)(a2 + 352);
  long long v11 = *(_OWORD *)(a2 + 368);
  long long v12 = *(_OWORD *)(a2 + 384);
  long long v13 = *(_OWORD *)(a2 + 400);
  *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
  *(_OWORD *)(a1 + 384) = v12;
  *(_OWORD *)(a1 + 400) = v13;
  *(_OWORD *)(a1 + 352) = v10;
  *(_OWORD *)(a1 + 368) = v11;
  *(unsigned char *)(a1 + 418) = *(unsigned char *)(a2 + 418);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  long long v14 = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 448) = v14;
  long long v15 = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 480) = v15;
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRelease();
  long long v16 = *(_OWORD *)(a2 + 592);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 592) = v16;
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_WORD *)(a1 + 624) = *(_WORD *)(a2 + 624);
  long long v17 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v17;
  *(unsigned char *)(a1 + 626) = *(unsigned char *)(a2 + 626);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  long long v18 = *(_OWORD *)(a2 + 640);
  long long v19 = *(_OWORD *)(a2 + 656);
  long long v20 = *(_OWORD *)(a2 + 672);
  long long v21 = *(_OWORD *)(a2 + 688);
  *(_WORD *)(a1 + 704) = *(_WORD *)(a2 + 704);
  *(_OWORD *)(a1 + 672) = v20;
  *(_OWORD *)(a1 + 688) = v21;
  *(_OWORD *)(a1 + 640) = v18;
  *(_OWORD *)(a1 + 656) = v19;
  *(unsigned char *)(a1 + 706) = *(unsigned char *)(a2 + 706);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  long long v22 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v22;
  *(_WORD *)(a1 + 784) = *(_WORD *)(a2 + 784);
  long long v23 = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 736) = v23;
  *(unsigned char *)(a1 + 786) = *(unsigned char *)(a2 + 786);
  *(void *)(a1 + 792) = *(void *)(a2 + 792);
  long long v24 = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = v24;
  *(_WORD *)(a1 + 896) = *(_WORD *)(a2 + 896);
  long long v25 = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 880) = v25;
  long long v26 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v26;
  *(unsigned char *)(a1 + 898) = *(unsigned char *)(a2 + 898);
  *(void *)(a1 + 904) = *(void *)(a2 + 904);
  long long v27 = *(_OWORD *)(a2 + 912);
  long long v28 = *(_OWORD *)(a2 + 928);
  long long v29 = *(_OWORD *)(a2 + 944);
  long long v30 = *(_OWORD *)(a2 + 960);
  *(_WORD *)(a1 + 976) = *(_WORD *)(a2 + 976);
  *(_OWORD *)(a1 + 944) = v29;
  *(_OWORD *)(a1 + 960) = v30;
  *(_OWORD *)(a1 + 912) = v27;
  *(_OWORD *)(a1 + 928) = v28;
  *(unsigned char *)(a1 + 978) = *(unsigned char *)(a2 + 978);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  long long v31 = *(void **)(a1 + 1000);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);

  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_WORD *)(a1 + 1072) = *(_WORD *)(a2 + 1072);
  long long v32 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v32;
  *(unsigned char *)(a1 + 1074) = *(unsigned char *)(a2 + 1074);
  long long v33 = *(void **)(a1 + 1080);
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);

  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(_OWORD *)(a1 + 1136) = *(_OWORD *)(a2 + 1136);
  *(_WORD *)(a1 + 1152) = *(_WORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(unsigned char *)(a1 + 1154) = *(unsigned char *)(a2 + 1154);
  long long v34 = *(void **)(a1 + 1160);
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);

  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(_OWORD *)(a1 + 1184) = *(_OWORD *)(a2 + 1184);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  *(_DWORD *)(a1 + 1224) = *(_DWORD *)(a2 + 1224);
  *(_DWORD *)(a1 + 1228) = *(_DWORD *)(a2 + 1228);
  *(unsigned char *)(a1 + 1232) = *(unsigned char *)(a2 + 1232);
  return a1;
}

uint64_t getEnumTagSinglePayload for ComponentScanwavePrototypeSettings(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 1233)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 496);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentScanwavePrototypeSettings(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 1224) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 1232) = 0;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)double result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1233) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 496) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1233) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentScanwavePrototypeSettings()
{
  return &type metadata for ComponentScanwavePrototypeSettings;
}

void type metadata accessor for ContentMode(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for FluidBehaviorType(uint64_t a1)
{
}

BOOL sub_25E70EAF4(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

BOOL sub_25E70EB24(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_25E70F620((uint64_t)v4, (uint64_t)__dst);
}

BOOL sub_25E70EB7C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  v14[2] = *(_OWORD *)(a1 + 32);
  v14[3] = v2;
  v14[4] = *(_OWORD *)(a1 + 64);
  uint64_t v15 = *(void *)(a1 + 80);
  long long v3 = *(_OWORD *)(a1 + 16);
  v14[0] = *(_OWORD *)a1;
  v14[1] = v3;
  double v5 = *(double *)(a1 + 88);
  double v4 = *(double *)(a1 + 96);
  long long v6 = *(_OWORD *)(a2 + 16);
  v16[0] = *(_OWORD *)a2;
  v16[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 32);
  long long v8 = *(_OWORD *)(a2 + 48);
  long long v9 = *(_OWORD *)(a2 + 64);
  uint64_t v17 = *(void *)(a2 + 80);
  v16[3] = v8;
  v16[4] = v9;
  v16[2] = v7;
  double v11 = *(double *)(a2 + 88);
  double v10 = *(double *)(a2 + 96);
  BOOL v12 = sub_25E70F06C((uint64_t)v14, (uint64_t)v16);
  BOOL result = 0;
  if (v12 && v5 == v11) {
    return v4 == v10;
  }
  return result;
}

BOOL sub_25E70EC18(uint64_t a1, long long *a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v12[4] = *(_OWORD *)(a1 + 64);
  v12[5] = v2;
  v12[6] = *(_OWORD *)(a1 + 96);
  uint64_t v13 = *(void *)(a1 + 112);
  long long v3 = *(_OWORD *)(a1 + 16);
  v12[0] = *(_OWORD *)a1;
  v12[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v12[2] = *(_OWORD *)(a1 + 32);
  v12[3] = v4;
  long long v5 = *a2;
  long long v6 = a2[1];
  long long v7 = a2[3];
  v14[2] = a2[2];
  v14[3] = v7;
  v14[0] = v5;
  v14[1] = v6;
  long long v8 = a2[4];
  long long v9 = a2[5];
  long long v10 = a2[6];
  uint64_t v15 = *((void *)a2 + 14);
  _OWORD v14[5] = v9;
  v14[6] = v10;
  v14[4] = v8;
  return sub_25E70F81C((uint64_t)v12, (uint64_t)v14);
}

BOOL sub_25E70EC9C(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

BOOL sub_25E70ECC8(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[9];
  v13[8] = a1[8];
  v13[9] = v2;
  v13[10] = a1[10];
  long long v3 = a1[5];
  v13[4] = a1[4];
  v13[5] = v3;
  long long v4 = a1[7];
  v13[6] = a1[6];
  v13[7] = v4;
  long long v5 = a1[1];
  v13[0] = *a1;
  v13[1] = v5;
  long long v6 = a1[3];
  v13[2] = a1[2];
  v13[3] = v6;
  long long v7 = a2[9];
  v14[8] = a2[8];
  v14[9] = v7;
  v14[10] = a2[10];
  long long v8 = a2[5];
  v14[4] = a2[4];
  _OWORD v14[5] = v8;
  long long v9 = a2[7];
  v14[6] = a2[6];
  _OWORD v14[7] = v9;
  long long v10 = a2[1];
  v14[0] = *a2;
  v14[1] = v10;
  long long v11 = a2[3];
  v14[2] = a2[2];
  v14[3] = v11;
  return sub_25E70F9CC((uint64_t)v13, (uint64_t)v14);
}

BOOL sub_25E70ED5C(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 8);
  double v4 = *(double *)(a1 + 16);
  double v3 = *(double *)(a1 + 24);
  uint64_t v5 = *(void *)(a2 + 8);
  double v7 = *(double *)(a2 + 16);
  double v6 = *(double *)(a2 + 24);
  if (!sub_25E70F2A4(*(void *)a1, *(void *)a2) || (sub_25E70F318(v2, v5) & 1) == 0) {
    return 0;
  }
  if (v3 == v6) {
    return v4 == v7;
  }
  return 0;
}

uint64_t sub_25E70EDD0(void *__src, const void *a2)
{
  memcpy(v4, __src, sizeof(v4));
  memcpy(__dst, a2, sizeof(__dst));
  return sub_25E70FCB4((uint64_t)v4, (uint64_t)__dst) & 1;
}

uint64_t sub_25E70EE28(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[13];
  v17[12] = a1[12];
  v18[0] = v2;
  *(_OWORD *)((char *)v18 + 9) = *(_OWORD *)((char *)a1 + 217);
  long long v3 = a1[9];
  v17[8] = a1[8];
  v17[9] = v3;
  long long v4 = a1[11];
  v17[10] = a1[10];
  v17[11] = v4;
  long long v5 = a1[5];
  v17[4] = a1[4];
  v17[5] = v5;
  long long v6 = a1[7];
  v17[6] = a1[6];
  v17[7] = v6;
  long long v7 = a1[1];
  v17[0] = *a1;
  v17[1] = v7;
  long long v8 = a1[3];
  v17[2] = a1[2];
  v17[3] = v8;
  long long v9 = a2[13];
  v19[12] = a2[12];
  v20[0] = v9;
  *(_OWORD *)((char *)v20 + 9) = *(_OWORD *)((char *)a2 + 217);
  long long v10 = a2[9];
  v19[8] = a2[8];
  v19[9] = v10;
  long long v11 = a2[11];
  v19[10] = a2[10];
  v19[11] = v11;
  long long v12 = a2[5];
  v19[4] = a2[4];
  v19[5] = v12;
  long long v13 = a2[7];
  v19[6] = a2[6];
  v19[7] = v13;
  long long v14 = a2[1];
  v19[0] = *a2;
  v19[1] = v14;
  long long v15 = a2[3];
  v19[2] = a2[2];
  v19[3] = v15;
  return sub_25E7100C4((uint64_t)v17, (uint64_t)v19) & 1;
}

uint64_t sub_25E70EEE0(void *__src, const void *a2)
{
  memcpy(v4, __src, 0x4D1uLL);
  memcpy(__dst, a2, 0x4D1uLL);
  return sub_25E7102C0((uint64_t)v4, (uint64_t)__dst) & 1;
}

uint64_t sub_25E70EF38(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 65))
  {
    if ((*(unsigned char *)(a2 + 65) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 65)) {
      return 0;
    }
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) == 0)return 0; {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    }
      return 0;
    if (*(double *)(a1 + 40) != *(double *)(a2 + 40)) {
      return 0;
    }
    char v5 = *(unsigned char *)(a1 + 64);
    uint64_t v6 = *(void *)(a2 + 56);
    char v7 = *(unsigned char *)(a2 + 64);
    uint64_t v8 = *(void *)(a1 + 56);
    if ((sub_25E75BFE0() & 1) == 0) {
      return 0;
    }
    if (v5)
    {
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    else if ((v7 & 1) != 0 || HIDWORD(v8) != HIDWORD(v6))
    {
      return 0;
    }
  }
  if (((*(unsigned __int8 *)(a1 + 66) ^ *(unsigned __int8 *)(a2 + 66)) & 1) == 0)
  {
    sub_25E711DB8(0, &qword_26A703FF0);
    return sub_25E75C020() & 1;
  }
  return 0;
}

BOOL sub_25E70F06C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 65))
  {
    if ((*(unsigned char *)(a2 + 65) & 1) == 0) {
      return 0;
    }
    goto LABEL_3;
  }
  BOOL result = 0;
  if ((*(unsigned char *)(a2 + 65) & 1) == 0
    && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 32) == *(double *)(a2 + 32)&& *(double *)(a1 + 40) == *(double *)(a2 + 40))
  {
    char v5 = *(unsigned char *)(a1 + 64);
    uint64_t v6 = *(void *)(a2 + 56);
    char v7 = *(unsigned char *)(a2 + 64);
    uint64_t v8 = *(void *)(a1 + 56);
    if ((sub_25E75BFE0() & 1) == 0) {
      return 0;
    }
    if (v5)
    {
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if ((v7 & 1) != 0 || HIDWORD(v8) != HIDWORD(v6)) {
        return result;
      }
    }
LABEL_3:
    if (((*(unsigned __int8 *)(a1 + 66) ^ *(unsigned __int8 *)(a2 + 66)) & 1) == 0) {
      return *(double *)(a1 + 80) == *(double *)(a2 + 80) && *(double *)(a1 + 72) == *(double *)(a2 + 72);
    }
    return 0;
  }
  return result;
}

BOOL sub_25E70F18C(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 65))
  {
    if (*(unsigned char *)(a2 + 65)) {
      goto LABEL_3;
    }
    return 0;
  }
  BOOL result = 0;
  if ((*(unsigned char *)(a2 + 65) & 1) == 0
    && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 32) == *(double *)(a2 + 32)&& *(double *)(a1 + 40) == *(double *)(a2 + 40))
  {
    char v5 = *(unsigned char *)(a1 + 64);
    uint64_t v6 = *(void *)(a2 + 56);
    char v7 = *(unsigned char *)(a2 + 64);
    uint64_t v8 = *(void *)(a1 + 56);
    if ((sub_25E75BFE0() & 1) == 0) {
      return 0;
    }
    if (v5)
    {
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if ((v7 & 1) != 0 || HIDWORD(v8) != HIDWORD(v6)) {
        return result;
      }
    }
LABEL_3:
    if (((*(unsigned __int8 *)(a1 + 66) ^ *(unsigned __int8 *)(a2 + 66)) & 1) == 0) {
      return *(double *)(a1 + 72) == *(double *)(a2 + 72);
    }
    return 0;
  }
  return result;
}

BOOL sub_25E70F2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  char v5 = (double *)(a1 + 40);
  uint64_t v6 = (double *)(a2 + 40);
  do
  {
    double v7 = *v5++;
    double v8 = v7;
    double v9 = *v6++;
    double v10 = v9;
    BOOL v12 = v4-- != 0;
    BOOL result = v8 == v10;
  }
  while (v8 == v10 && v12);
  return result;
}

id sub_25E70F318(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1;
  unint64_t v4 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_25E75C130();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_25E75C130();
    swift_bridgeObjectRelease();
    if (v5 == v29) {
      goto LABEL_5;
    }
LABEL_49:
    LOBYTE(v5) = 0;
    return (id)(v5 & 1);
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_49;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_38;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  else {
    uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v9;
  }
  if (v6 == v8)
  {
LABEL_38:
    LOBYTE(v5) = 1;
    return (id)(v5 & 1);
  }
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_55;
  }
  unint64_t v30 = v3 & 0xC000000000000001;
  if ((v3 & 0xC000000000000001) != 0) {
    goto LABEL_56;
  }
  for (id result = *(id *)(v3 + 32); ; id result = (id)MEMORY[0x2611E1C70](0, v3))
  {
    long long v11 = result;
    if ((a2 & 0xC000000000000001) == 0) {
      break;
    }
    id v12 = (id)MEMORY[0x2611E1C70](0, a2);
LABEL_22:
    long long v13 = v12;
    sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
    char v14 = sub_25E75C020();

    if ((v14 & 1) == 0) {
      goto LABEL_49;
    }
    unint64_t v15 = v5 - 1;
    if (v5 == 1) {
      return (id)(v5 & 1);
    }
    if (((a2 | v3) & 0xC000000000000001) != 0)
    {
      uint64_t v16 = 0;
      unint64_t v17 = v5 - 2;
      while (v15 != v16)
      {
        unint64_t v5 = v16 + 1;
        if (v30) {
          id v18 = (id)MEMORY[0x2611E1C70](v16 + 1, v3);
        }
        else {
          id v18 = *(id *)(v3 + 40 + 8 * v16);
        }
        long long v19 = v18;
        if ((a2 & 0xC000000000000001) != 0)
        {
          id v20 = (id)MEMORY[0x2611E1C70](v16 + 1, a2);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16)) {
            goto LABEL_54;
          }
          id v20 = *(id *)(a2 + 40 + 8 * v16);
        }
        long long v21 = v20;
        unint64_t v5 = sub_25E75C020();

        if ((v5 & 1) != 0 && v17 != v16++) {
          continue;
        }
        return (id)(v5 & 1);
      }
      __break(1u);
    }
    else
    {
      unint64_t v23 = *(void *)(v7 + 16);
      if (v23 <= 1) {
        unint64_t v23 = 1;
      }
      unint64_t v24 = v23 - 1;
      long long v25 = (void **)(v3 + 40);
      uint64_t v7 = a2 + 40;
      while (v15)
      {
        if (!v24) {
          goto LABEL_53;
        }
        long long v27 = *v25++;
        long long v26 = v27;
        long long v28 = *(void **)v7;
        v7 += 8;
        a2 = v26;
        uint64_t v3 = v28;
        unint64_t v5 = sub_25E75C020();

        if (v5)
        {
          --v24;
          if (--v15) {
            continue;
          }
        }
        return (id)(v5 & 1);
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    ;
  }
  if (*(void *)(v7 + 16))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

void *sub_25E70F604@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_25E70F614(void *a1@<X8>)
{
  *a1 = *v1;
}

BOOL sub_25E70F620(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  double v6 = *(double *)(a1 + 16);
  double v5 = *(double *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  unint64_t v7 = *(void *)(a1 + 40);
  double v10 = *(double *)(a1 + 48);
  double v9 = *(double *)(a1 + 56);
  uint64_t v11 = *(void *)(a2 + 8);
  double v13 = *(double *)(a2 + 16);
  double v12 = *(double *)(a2 + 24);
  uint64_t v15 = *(void *)(a2 + 32);
  uint64_t v14 = *(void *)(a2 + 40);
  double v17 = *(double *)(a2 + 48);
  double v16 = *(double *)(a2 + 56);
  if (!sub_25E70F2A4(*(void *)a1, *(void *)a2)) {
    return 0;
  }
  sub_25E710BA8(a1);
  sub_25E710BA8(a2);
  if ((sub_25E70F318(v4, v11) & 1) == 0 || v6 != v13 || v5 != v12 || !sub_25E70F2A4(v8, v15))
  {
    sub_25E710BFC(a2);
    sub_25E710BFC(a1);
    return 0;
  }
  unsigned __int8 v18 = sub_25E70F318(v7, v14);
  sub_25E710BFC(a2);
  sub_25E710BFC(a1);
  BOOL v19 = 0;
  if ((v18 & 1) != 0 && v10 == v17 && v9 == v16)
  {
    long long v20 = *(_OWORD *)(a1 + 112);
    v40[2] = *(_OWORD *)(a1 + 96);
    v40[3] = v20;
    v40[4] = *(_OWORD *)(a1 + 128);
    long long v21 = *(_OWORD *)(a1 + 80);
    v40[0] = *(_OWORD *)(a1 + 64);
    v40[1] = v21;
    long long v22 = *(_OWORD *)(a2 + 112);
    v39[2] = *(_OWORD *)(a2 + 96);
    v39[3] = v22;
    v39[4] = *(_OWORD *)(a2 + 128);
    long long v23 = *(_OWORD *)(a2 + 80);
    v39[0] = *(_OWORD *)(a2 + 64);
    v39[1] = v23;
    if (sub_25E70F18C((uint64_t)v40, (uint64_t)v39))
    {
      long long v24 = *(_OWORD *)(a1 + 192);
      v38[2] = *(_OWORD *)(a1 + 176);
      v38[3] = v24;
      v38[4] = *(_OWORD *)(a1 + 208);
      long long v25 = *(_OWORD *)(a1 + 160);
      v38[0] = *(_OWORD *)(a1 + 144);
      v38[1] = v25;
      long long v26 = *(_OWORD *)(a2 + 192);
      v37[2] = *(_OWORD *)(a2 + 176);
      v37[3] = v26;
      v37[4] = *(_OWORD *)(a2 + 208);
      long long v27 = *(_OWORD *)(a2 + 160);
      v37[0] = *(_OWORD *)(a2 + 144);
      v37[1] = v27;
      if (sub_25E70F18C((uint64_t)v38, (uint64_t)v37))
      {
        long long v28 = *(_OWORD *)(a1 + 272);
        v35[2] = *(_OWORD *)(a1 + 256);
        v35[3] = v28;
        v35[4] = *(_OWORD *)(a1 + 288);
        uint64_t v36 = *(void *)(a1 + 304);
        long long v29 = *(_OWORD *)(a1 + 240);
        v35[0] = *(_OWORD *)(a1 + 224);
        v35[1] = v29;
        long long v30 = *(_OWORD *)(a2 + 272);
        v33[2] = *(_OWORD *)(a2 + 256);
        v33[3] = v30;
        v33[4] = *(_OWORD *)(a2 + 288);
        uint64_t v34 = *(void *)(a2 + 304);
        long long v31 = *(_OWORD *)(a2 + 240);
        v33[0] = *(_OWORD *)(a2 + 224);
        v33[1] = v31;
        return sub_25E70F06C((uint64_t)v35, (uint64_t)v33);
      }
    }
    return 0;
  }
  return v19;
}

BOOL sub_25E70F81C(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 66);
  char v5 = *(unsigned char *)(a2 + 66);
  float64x2_t v6 = *(float64x2_t *)(a1 + 88);
  float64x2_t v7 = *(float64x2_t *)(a1 + 72);
  float64x2_t v8 = *(float64x2_t *)(a2 + 88);
  float64x2_t v9 = *(float64x2_t *)(a2 + 72);
  if (*(unsigned char *)(a1 + 65))
  {
    if ((*(unsigned char *)(a2 + 65) & 1) == 0) {
      return 0;
    }
    goto LABEL_15;
  }
  BOOL result = 0;
  if ((*(unsigned char *)(a2 + 65) & 1) == 0
    && (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 32) == *(double *)(a2 + 32)&& *(double *)(a1 + 40) == *(double *)(a2 + 40))
  {
    float64x2_t v15 = *(float64x2_t *)(a2 + 72);
    float64x2_t v16 = *(float64x2_t *)(a2 + 88);
    float64x2_t v17 = v7;
    float64x2_t v18 = v6;
    uint64_t v11 = *(void *)(a1 + 56);
    char v12 = *(unsigned char *)(a1 + 64);
    uint64_t v13 = *(void *)(a2 + 56);
    char v14 = *(unsigned char *)(a2 + 64);
    if ((sub_25E75BFE0() & 1) == 0) {
      return 0;
    }
    if (v12)
    {
      float64x2_t v7 = v17;
      float64x2_t v6 = v18;
      float64x2_t v9 = v15;
      float64x2_t v8 = v16;
      if ((v14 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if (v14) {
        return result;
      }
      float64x2_t v7 = v17;
      float64x2_t v6 = v18;
      float64x2_t v9 = v15;
      float64x2_t v8 = v16;
      if (HIDWORD(v11) != HIDWORD(v13)) {
        return result;
      }
    }
LABEL_15:
    BOOL result = 0;
    if ((v4 & 1) != (v5 & 1)
      || (~vaddv_s16((int16x4_t)vand_s8((int8x8_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v7, v9), (int32x4_t)vceqq_f64(v6, v8))), 0xFuLL)), (int8x8_t)0x8000400020001)) & 0xF) != 0)
    {
      return result;
    }
    if (*(double *)(a1 + 104) == *(double *)(a2 + 104)) {
      return *(double *)(a1 + 112) == *(double *)(a2 + 112);
    }
    return 0;
  }
  return result;
}

BOOL sub_25E70F9CC(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(a1 + 74);
  double v5 = *(double *)(a1 + 80);
  double v7 = *(double *)(a1 + 120);
  double v6 = *(double *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 144);
  char v9 = *(unsigned char *)(a1 + 152);
  char v10 = *(unsigned char *)(a1 + 153);
  int v11 = *(unsigned __int8 *)(a1 + 154);
  double v12 = *(double *)(a1 + 160);
  int v13 = *(unsigned __int8 *)(a2 + 74);
  double v14 = *(double *)(a2 + 80);
  float64x2_t v15 = *(float64x2_t *)(a1 + 104);
  float64x2_t v16 = *(float64x2_t *)(a1 + 88);
  float64x2_t v17 = *(float64x2_t *)(a2 + 104);
  float64x2_t v18 = *(float64x2_t *)(a2 + 88);
  double v20 = *(double *)(a2 + 120);
  double v19 = *(double *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 144);
  char v22 = *(unsigned char *)(a2 + 152);
  char v23 = *(unsigned char *)(a2 + 153);
  int v24 = *(unsigned __int8 *)(a2 + 154);
  double v25 = *(double *)(a2 + 160);
  if (*(unsigned char *)(a1 + 73))
  {
    if ((*(unsigned char *)(a2 + 73) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    if ((*(unsigned char *)(a2 + 73) & 1) != 0
      || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) == 0|| *(double *)(a1 + 40) != *(double *)(a2 + 40)|| *(double *)(a1 + 48) != *(double *)(a2 + 48))
    {
      return result;
    }
    float64x2_t v33 = *(float64x2_t *)(a2 + 88);
    float64x2_t v34 = *(float64x2_t *)(a2 + 104);
    float64x2_t v35 = v16;
    float64x2_t v36 = v15;
    char v37 = v9;
    int v38 = *(unsigned __int8 *)(a2 + 154);
    int v39 = HIDWORD(v8);
    int v40 = v11;
    char v42 = *(unsigned char *)(a1 + 72);
    char v41 = *(unsigned char *)(a2 + 72);
    uint64_t v31 = *(void *)(a2 + 64);
    uint64_t v32 = *(void *)(a1 + 64);
    if ((sub_25E75BFE0() & 1) == 0) {
      return 0;
    }
    if (v42)
    {
      int v11 = v40;
      HIDWORD(v8) = v39;
      char v9 = v37;
      int v24 = v38;
      float64x2_t v16 = v35;
      float64x2_t v15 = v36;
      float64x2_t v18 = v33;
      float64x2_t v17 = v34;
      if ((v41 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      BOOL result = 0;
      if (v41) {
        return result;
      }
      int v11 = v40;
      HIDWORD(v8) = v39;
      char v9 = v37;
      int v24 = v38;
      float64x2_t v16 = v35;
      float64x2_t v15 = v36;
      float64x2_t v18 = v33;
      float64x2_t v17 = v34;
      if (HIDWORD(v32) != HIDWORD(v31)) {
        return result;
      }
    }
  }
  BOOL result = 0;
  if (((v4 ^ v13) & 1) != 0 || v5 != v14) {
    return result;
  }
  if (v10)
  {
    if (v23) {
      goto LABEL_29;
    }
    return 0;
  }
  BOOL result = 0;
  if ((v23 & 1) != 0
    || (vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v16, v18), (int32x4_t)vceqq_f64(v15, v17))), 0xFuLL))) & 1) == 0|| v7 != v20|| v6 != v19)
  {
    return result;
  }
  char v27 = v9;
  int v28 = v24;
  int v29 = v11;
  int v30 = HIDWORD(v8);
  if ((sub_25E75BFE0() & 1) == 0) {
    return 0;
  }
  if ((v27 & 1) == 0)
  {
    BOOL result = 0;
    if (v22) {
      return result;
    }
    int v11 = v29;
    int v24 = v28;
    if (v30 != HIDWORD(v21)) {
      return result;
    }
    goto LABEL_29;
  }
  int v11 = v29;
  int v24 = v28;
  if ((v22 & 1) == 0) {
    return 0;
  }
LABEL_29:
  BOOL result = 0;
  if (((v11 ^ v24) & 1) == 0 && v12 == v25) {
    return *(double *)(a1 + 168) == *(double *)(a2 + 168);
  }
  return result;
}

uint64_t sub_25E70FCB4(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2) {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(a1 + 74);
  double v5 = *(double *)(a1 + 80);
  double v7 = *(double *)(a1 + 120);
  double v6 = *(double *)(a1 + 128);
  uint64_t v8 = *(void *)(a1 + 144);
  char v9 = *(unsigned char *)(a1 + 152);
  char v10 = *(unsigned char *)(a1 + 153);
  int v11 = *(unsigned __int8 *)(a1 + 154);
  double v12 = *(double *)(a1 + 160);
  int v13 = *(unsigned __int8 *)(a2 + 74);
  double v14 = *(double *)(a2 + 80);
  float64x2_t v15 = *(float64x2_t *)(a1 + 104);
  float64x2_t v16 = *(float64x2_t *)(a1 + 88);
  float64x2_t v17 = *(float64x2_t *)(a2 + 104);
  float64x2_t v18 = *(float64x2_t *)(a2 + 88);
  double v20 = *(double *)(a2 + 120);
  double v19 = *(double *)(a2 + 128);
  uint64_t v21 = *(void *)(a2 + 144);
  char v22 = *(unsigned char *)(a2 + 152);
  char v23 = *(unsigned char *)(a2 + 153);
  int v24 = *(unsigned __int8 *)(a2 + 154);
  double v25 = *(double *)(a2 + 160);
  if (*(unsigned char *)(a1 + 73))
  {
    if ((*(unsigned char *)(a2 + 73) & 1) == 0) {
      return 0;
    }
    goto LABEL_16;
  }
  if (*(unsigned char *)(a2 + 73)) {
    return 0;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 8), *(float64x2_t *)(a2 + 8)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 40) == *(double *)(a2 + 40)&& *(double *)(a1 + 48) == *(double *)(a2 + 48))
  {
    float64x2_t v46 = *(float64x2_t *)(a2 + 88);
    float64x2_t v47 = *(float64x2_t *)(a2 + 104);
    float64x2_t v48 = v16;
    float64x2_t v49 = v15;
    char v50 = v9;
    int v51 = *(unsigned __int8 *)(a2 + 154);
    int v52 = HIDWORD(v8);
    int v53 = v11;
    char v54 = *(unsigned char *)(a1 + 72);
    char v45 = *(unsigned char *)(a2 + 72);
    uint64_t v43 = *(void *)(a2 + 64);
    uint64_t v44 = *(void *)(a1 + 64);
    if ((sub_25E75BFE0() & 1) == 0) {
      return 0;
    }
    if (v54)
    {
      int v11 = v53;
      HIDWORD(v8) = v52;
      char v9 = v50;
      int v24 = v51;
      float64x2_t v16 = v48;
      float64x2_t v15 = v49;
      float64x2_t v18 = v46;
      float64x2_t v17 = v47;
      if ((v45 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      int v11 = v53;
      HIDWORD(v8) = v52;
      char v9 = v50;
      int v24 = v51;
      float64x2_t v16 = v48;
      float64x2_t v15 = v49;
      float64x2_t v18 = v46;
      float64x2_t v17 = v47;
      if ((v45 & 1) != 0 || HIDWORD(v44) != HIDWORD(v43)) {
        return result;
      }
    }
LABEL_16:
    uint64_t result = 0;
    if (((v4 ^ v13) & 1) != 0 || v5 != v14) {
      return result;
    }
    if (v10)
    {
      if ((v23 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v23) {
        return 0;
      }
      uint64_t result = 0;
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v16, v18), (int32x4_t)vceqq_f64(v15, v17))), 0xFuLL))) & 1) == 0|| v7 != v20|| v6 != v19)
      {
        return result;
      }
      char v27 = v9;
      int v28 = v24;
      int v29 = v11;
      int v30 = HIDWORD(v8);
      if ((sub_25E75BFE0() & 1) == 0) {
        return 0;
      }
      if (v27)
      {
        int v11 = v29;
        int v24 = v28;
        if ((v22 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        uint64_t result = 0;
        if (v22) {
          return result;
        }
        int v11 = v29;
        int v24 = v28;
        if (v30 != HIDWORD(v21)) {
          return result;
        }
      }
    }
    uint64_t result = 0;
    if (((v11 ^ v24) & 1) != 0 || v12 != v25) {
      return result;
    }
    if (*(double *)(a1 + 168) == *(double *)(a2 + 168))
    {
      int v31 = *(unsigned __int8 *)(a1 + 242);
      double v32 = *(double *)(a1 + 248);
      int v33 = *(unsigned __int8 *)(a2 + 242);
      double v34 = *(double *)(a2 + 248);
      if (*(unsigned char *)(a1 + 241))
      {
        if (*(unsigned char *)(a2 + 241)) {
          goto LABEL_43;
        }
      }
      else
      {
        if (*(unsigned char *)(a2 + 241)) {
          return 0;
        }
        if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 176), *(float64x2_t *)(a2 + 176)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 192), *(float64x2_t *)(a2 + 192)))), 0xFuLL))) & 1) == 0)return 0; {
        if (*(double *)(a1 + 208) != *(double *)(a2 + 208))
        }
          return 0;
        if (*(double *)(a1 + 216) != *(double *)(a2 + 216)) {
          return 0;
        }
        uint64_t v35 = *(void *)(a1 + 232);
        char v36 = *(unsigned char *)(a1 + 240);
        uint64_t v37 = *(void *)(a2 + 232);
        char v38 = *(unsigned char *)(a2 + 240);
        if ((sub_25E75BFE0() & 1) == 0) {
          return 0;
        }
        if ((v36 & 1) == 0)
        {
          if ((v38 & 1) != 0 || HIDWORD(v35) != HIDWORD(v37)) {
            return 0;
          }
LABEL_43:
          if (((v31 ^ v33) & 1) == 0 && v32 == v34)
          {
            long long v39 = *(_OWORD *)(a1 + 304);
            v56[2] = *(_OWORD *)(a1 + 288);
            v56[3] = v39;
            v56[4] = *(_OWORD *)(a1 + 320);
            long long v40 = *(_OWORD *)(a1 + 272);
            v56[0] = *(_OWORD *)(a1 + 256);
            v56[1] = v40;
            long long v41 = *(_OWORD *)(a2 + 304);
            v55[2] = *(_OWORD *)(a2 + 288);
            v55[3] = v41;
            v55[4] = *(_OWORD *)(a2 + 320);
            long long v42 = *(_OWORD *)(a2 + 272);
            v55[0] = *(_OWORD *)(a2 + 256);
            v55[1] = v42;
            if (sub_25E70F18C((uint64_t)v56, (uint64_t)v55)) {
              return 1;
            }
          }
          return 0;
        }
        if (v38) {
          goto LABEL_43;
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_25E7100C4(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a1 + 24);
  long long v5 = *(_OWORD *)(a1 + 56);
  long long v48 = *(_OWORD *)(a1 + 40);
  long long v49 = v5;
  long long v50 = *(_OWORD *)(a1 + 72);
  long long v46 = *(_OWORD *)(a1 + 8);
  long long v47 = v4;
  long long v6 = *(_OWORD *)(a1 + 88);
  long long v7 = *(_OWORD *)(a1 + 104);
  long long v8 = *(_OWORD *)(a1 + 120);
  long long v9 = *(_OWORD *)(a1 + 152);
  long long v44 = *(_OWORD *)(a1 + 136);
  long long v45 = v9;
  long long v42 = v7;
  long long v43 = v8;
  long long v41 = v6;
  long long v10 = *(_OWORD *)(a2 + 8);
  long long v11 = *(_OWORD *)(a2 + 24);
  long long v12 = *(_OWORD *)(a2 + 40);
  long long v13 = *(_OWORD *)(a2 + 72);
  long long v37 = *(_OWORD *)(a2 + 56);
  long long v38 = v13;
  long long v35 = v11;
  long long v36 = v12;
  long long v14 = *(_OWORD *)(a2 + 88);
  long long v15 = *(_OWORD *)(a2 + 104);
  long long v16 = *(_OWORD *)(a2 + 120);
  long long v33 = *(_OWORD *)(a2 + 152);
  long long v34 = v10;
  long long v17 = *(_OWORD *)(a2 + 136);
  long long v31 = v16;
  long long v32 = v17;
  long long v29 = v14;
  long long v30 = v15;
  sub_25E711DB8(0, &qword_26A703FF0);
  sub_25E710B20(a1);
  sub_25E710B20(a2);
  if ((sub_25E75C020() & 1) == 0) {
    goto LABEL_5;
  }
  v51[2] = v48;
  v51[3] = v49;
  v51[4] = v50;
  v51[0] = v46;
  v51[1] = v47;
  v39[2] = v36;
  v39[3] = v37;
  v39[4] = v38;
  v39[0] = v34;
  v39[1] = v35;
  if ((sub_25E70EF38((uint64_t)v51, (uint64_t)v39) & 1) == 0)
  {
LABEL_5:
    sub_25E710B64(a2);
    sub_25E710B64(a1);
    goto LABEL_6;
  }
  v52[2] = v43;
  v52[3] = v44;
  v52[4] = v45;
  v52[0] = v41;
  v52[1] = v42;
  v40[2] = v31;
  v40[3] = v32;
  v40[4] = v33;
  v40[0] = v29;
  v40[1] = v30;
  char v18 = sub_25E70EF38((uint64_t)v52, (uint64_t)v40);
  sub_25E710B64(a2);
  sub_25E710B64(a1);
  if ((v18 & 1) == 0)
  {
LABEL_6:
    char v23 = 0;
    return v23 & 1;
  }
  long long v19 = *(_OWORD *)(a1 + 184);
  long long v20 = *(_OWORD *)(a1 + 216);
  v27[2] = *(_OWORD *)(a1 + 200);
  v27[3] = v20;
  char v28 = *(unsigned char *)(a1 + 232);
  v27[0] = *(_OWORD *)(a1 + 168);
  v27[1] = v19;
  long long v21 = *(_OWORD *)(a2 + 184);
  long long v22 = *(_OWORD *)(a2 + 216);
  v25[2] = *(_OWORD *)(a2 + 200);
  v25[3] = v22;
  char v26 = *(unsigned char *)(a2 + 232);
  v25[0] = *(_OWORD *)(a2 + 168);
  v25[1] = v21;
  char v23 = sub_25E731C98((uint64_t)v27, (uint64_t)v25);
  return v23 & 1;
}

uint64_t sub_25E7102C0(uint64_t a1, uint64_t a2)
{
  if (*(double *)a1 != *(double *)a2
    || *(double *)(a1 + 8) != *(double *)(a2 + 8)
    || *(double *)(a1 + 16) != *(double *)(a2 + 16))
  {
    return 0;
  }
  int v4 = *(unsigned __int8 *)(a1 + 90);
  double v5 = *(double *)(a1 + 96);
  double v7 = *(double *)(a1 + 136);
  double v6 = *(double *)(a1 + 144);
  uint64_t v8 = *(void *)(a1 + 160);
  char v9 = *(unsigned char *)(a1 + 168);
  char v10 = *(unsigned char *)(a1 + 169);
  char v11 = *(unsigned char *)(a1 + 170);
  double v13 = *(double *)(a1 + 176);
  double v12 = *(double *)(a1 + 184);
  int v14 = *(unsigned __int8 *)(a2 + 90);
  double v15 = *(double *)(a2 + 96);
  float64x2_t v16 = *(float64x2_t *)(a1 + 120);
  float64x2_t v17 = *(float64x2_t *)(a1 + 104);
  float64x2_t v18 = *(float64x2_t *)(a2 + 120);
  float64x2_t v19 = *(float64x2_t *)(a2 + 104);
  double v20 = *(double *)(a2 + 136);
  double v21 = *(double *)(a2 + 144);
  uint64_t v22 = *(void *)(a2 + 160);
  char v23 = *(unsigned char *)(a2 + 168);
  char v24 = *(unsigned char *)(a2 + 169);
  char v25 = *(unsigned char *)(a2 + 170);
  double v27 = *(double *)(a2 + 176);
  double v26 = *(double *)(a2 + 184);
  if (*(unsigned char *)(a1 + 89))
  {
    if ((*(unsigned char *)(a2 + 89) & 1) == 0) {
      return 0;
    }
    goto LABEL_18;
  }
  if (*(unsigned char *)(a2 + 89)) {
    return 0;
  }
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 24), *(float64x2_t *)(a2 + 24)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 40), *(float64x2_t *)(a2 + 40)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 56) == *(double *)(a2 + 56)&& *(double *)(a1 + 64) == *(double *)(a2 + 64))
  {
    float64x2_t v77 = *(float64x2_t *)(a2 + 104);
    float64x2_t v78 = *(float64x2_t *)(a2 + 120);
    float64x2_t v79 = v17;
    float64x2_t v80 = v16;
    char v81 = v9;
    char v82 = *(unsigned char *)(a2 + 170);
    int v83 = HIDWORD(v8);
    char v84 = v11;
    double v85 = v13;
    double v86 = v12;
    char v87 = *(unsigned char *)(a1 + 88);
    char v76 = *(unsigned char *)(a2 + 88);
    uint64_t v74 = *(void *)(a2 + 80);
    uint64_t v75 = *(void *)(a1 + 80);
    if ((sub_25E75BFE0() & 1) == 0) {
      return 0;
    }
    if (v87)
    {
      double v13 = v85;
      double v12 = v86;
      char v11 = v84;
      HIDWORD(v8) = v83;
      char v9 = v81;
      char v25 = v82;
      float64x2_t v17 = v79;
      float64x2_t v16 = v80;
      float64x2_t v19 = v77;
      float64x2_t v18 = v78;
      if ((v76 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      uint64_t result = 0;
      double v13 = v85;
      double v12 = v86;
      char v11 = v84;
      HIDWORD(v8) = v83;
      char v9 = v81;
      char v25 = v82;
      float64x2_t v17 = v79;
      float64x2_t v16 = v80;
      float64x2_t v19 = v77;
      float64x2_t v18 = v78;
      if ((v76 & 1) != 0 || HIDWORD(v75) != HIDWORD(v74)) {
        return result;
      }
    }
LABEL_18:
    uint64_t result = 0;
    if (((v4 ^ v14) & 1) != 0 || v5 != v15) {
      return result;
    }
    if (v10)
    {
      if ((v24 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v24) {
        return 0;
      }
      uint64_t result = 0;
      if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(v17, v19), (int32x4_t)vceqq_f64(v16, v18))), 0xFuLL))) & 1) == 0|| v7 != v20|| v6 != v21)
      {
        return result;
      }
      char v29 = v9;
      char v30 = v25;
      char v31 = v11;
      double v32 = v13;
      double v33 = v12;
      int v34 = HIDWORD(v8);
      if ((sub_25E75BFE0() & 1) == 0) {
        return 0;
      }
      if (v29)
      {
        double v12 = v33;
        double v13 = v32;
        char v11 = v31;
        char v25 = v30;
        if ((v23 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        uint64_t result = 0;
        if (v23) {
          return result;
        }
        double v12 = v33;
        double v13 = v32;
        char v11 = v31;
        char v25 = v30;
        if (v34 != HIDWORD(v22)) {
          return result;
        }
      }
    }
    uint64_t result = 0;
    if (((v11 & 1) == 0) == (v25 & 1) || v13 != v27 || v12 != v26) {
      return result;
    }
    long long v35 = *(_OWORD *)(a1 + 240);
    v131[2] = *(_OWORD *)(a1 + 224);
    v131[3] = v35;
    v131[4] = *(_OWORD *)(a1 + 256);
    long long v36 = *(_OWORD *)(a1 + 208);
    v131[0] = *(_OWORD *)(a1 + 192);
    v131[1] = v36;
    long long v37 = *(_OWORD *)(a2 + 240);
    v129[2] = *(_OWORD *)(a2 + 224);
    v129[3] = v37;
    v129[4] = *(_OWORD *)(a2 + 256);
    long long v38 = *(_OWORD *)(a2 + 192);
    v129[1] = *(_OWORD *)(a2 + 208);
    v129[0] = v38;
    if (sub_25E70F18C((uint64_t)v131, (uint64_t)v129))
    {
      long long v39 = *(_OWORD *)(a1 + 320);
      v130[2] = *(_OWORD *)(a1 + 304);
      v130[3] = v39;
      v130[4] = *(_OWORD *)(a1 + 336);
      long long v40 = *(_OWORD *)(a1 + 272);
      v130[1] = *(_OWORD *)(a1 + 288);
      v130[0] = v40;
      long long v41 = *(_OWORD *)(a2 + 320);
      v128[2] = *(_OWORD *)(a2 + 304);
      v128[3] = v41;
      v128[4] = *(_OWORD *)(a2 + 336);
      long long v42 = *(_OWORD *)(a2 + 272);
      v128[1] = *(_OWORD *)(a2 + 288);
      v128[0] = v42;
      if (sub_25E70F18C((uint64_t)v130, (uint64_t)v128))
      {
        long long v43 = *(_OWORD *)(a1 + 400);
        v126[2] = *(_OWORD *)(a1 + 384);
        v126[3] = v43;
        v126[4] = *(_OWORD *)(a1 + 416);
        uint64_t v127 = *(void *)(a1 + 432);
        long long v44 = *(_OWORD *)(a1 + 368);
        v126[0] = *(_OWORD *)(a1 + 352);
        v126[1] = v44;
        long long v45 = *(_OWORD *)(a2 + 400);
        v124[2] = *(_OWORD *)(a2 + 384);
        v124[3] = v45;
        v124[4] = *(_OWORD *)(a2 + 416);
        uint64_t v125 = *(void *)(a2 + 432);
        long long v46 = *(_OWORD *)(a2 + 368);
        v124[0] = *(_OWORD *)(a2 + 352);
        v124[1] = v46;
        BOOL v47 = sub_25E70F06C((uint64_t)v126, (uint64_t)v124);
        uint64_t result = 0;
        if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 440), *(float64x2_t *)(a2 + 440)), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 456), *(float64x2_t *)(a2 + 456)))), 0xFuLL))) & 1) == 0|| !v47)
        {
          return result;
        }
        if (*(double *)(a1 + 472) == *(double *)(a2 + 472))
        {
          uint64_t result = 0;
          if (*(double *)(a1 + 480) != *(double *)(a2 + 480) || *(double *)(a1 + 488) != *(double *)(a2 + 488)) {
            return result;
          }
          memcpy(__dst, (const void *)(a1 + 496), sizeof(__dst));
          memcpy(v122, (const void *)(a2 + 496), sizeof(v122));
          if (sub_25E70F620((uint64_t)__dst, (uint64_t)v122)
            && *(double *)(a1 + 808) == *(double *)(a2 + 808)
            && *(double *)(a1 + 816) == *(double *)(a2 + 816)
            && *(double *)(a1 + 824) == *(double *)(a2 + 824))
          {
            double v48 = *(double *)(a1 + 992);
            double v49 = *(double *)(a2 + 992);
            long long v50 = *(_OWORD *)(a1 + 880);
            v121[2] = *(_OWORD *)(a1 + 864);
            v121[3] = v50;
            v121[4] = *(_OWORD *)(a1 + 896);
            long long v51 = *(_OWORD *)(a1 + 832);
            v121[1] = *(_OWORD *)(a1 + 848);
            v121[0] = v51;
            long long v52 = *(_OWORD *)(a2 + 880);
            v119[2] = *(_OWORD *)(a2 + 864);
            v119[3] = v52;
            v119[4] = *(_OWORD *)(a2 + 896);
            long long v53 = *(_OWORD *)(a2 + 832);
            v119[1] = *(_OWORD *)(a2 + 848);
            v119[0] = v53;
            if (sub_25E70F18C((uint64_t)v121, (uint64_t)v119))
            {
              long long v54 = *(_OWORD *)(a1 + 960);
              v120[2] = *(_OWORD *)(a1 + 944);
              v120[3] = v54;
              v120[4] = *(_OWORD *)(a1 + 976);
              long long v55 = *(_OWORD *)(a1 + 912);
              v120[1] = *(_OWORD *)(a1 + 928);
              v120[0] = v55;
              long long v56 = *(_OWORD *)(a2 + 960);
              v118[2] = *(_OWORD *)(a2 + 944);
              v118[3] = v56;
              v118[4] = *(_OWORD *)(a2 + 976);
              long long v57 = *(_OWORD *)(a2 + 912);
              v118[1] = *(_OWORD *)(a2 + 928);
              v118[0] = v57;
              BOOL v58 = sub_25E70F18C((uint64_t)v120, (uint64_t)v118);
              uint64_t result = 0;
              if (!v58 || v48 != v49) {
                return result;
              }
              long long v59 = *(_OWORD *)(a1 + 1208);
              *(_OWORD *)&v103[192] = *(_OWORD *)(a1 + 1192);
              *(_OWORD *)&v103[208] = v59;
              *(_OWORD *)&v103[217] = *(_OWORD *)(a1 + 1217);
              long long v60 = *(_OWORD *)(a1 + 1144);
              *(_OWORD *)&v103[128] = *(_OWORD *)(a1 + 1128);
              *(_OWORD *)&v103[144] = v60;
              long long v61 = *(_OWORD *)(a1 + 1176);
              *(_OWORD *)&v103[160] = *(_OWORD *)(a1 + 1160);
              *(_OWORD *)&v103[176] = v61;
              long long v62 = *(_OWORD *)(a1 + 1080);
              *(_OWORD *)&v103[64] = *(_OWORD *)(a1 + 1064);
              *(_OWORD *)&v103[80] = v62;
              long long v63 = *(_OWORD *)(a1 + 1112);
              *(_OWORD *)&v103[96] = *(_OWORD *)(a1 + 1096);
              *(_OWORD *)&v103[112] = v63;
              long long v64 = *(_OWORD *)(a1 + 1016);
              *(_OWORD *)v103 = *(_OWORD *)(a1 + 1000);
              *(_OWORD *)&v103[16] = v64;
              long long v65 = *(_OWORD *)(a1 + 1048);
              *(_OWORD *)&v103[32] = *(_OWORD *)(a1 + 1032);
              *(_OWORD *)&v103[48] = v65;
              long long v66 = *(_OWORD *)(a2 + 1208);
              *(_OWORD *)&v88[192] = *(_OWORD *)(a2 + 1192);
              *(_OWORD *)&v88[208] = v66;
              *(_OWORD *)&v88[217] = *(_OWORD *)(a2 + 1217);
              long long v67 = *(_OWORD *)(a2 + 1144);
              *(_OWORD *)&v88[128] = *(_OWORD *)(a2 + 1128);
              *(_OWORD *)&v88[144] = v67;
              long long v68 = *(_OWORD *)(a2 + 1176);
              *(_OWORD *)&v88[160] = *(_OWORD *)(a2 + 1160);
              *(_OWORD *)&v88[176] = v68;
              long long v69 = *(_OWORD *)(a2 + 1080);
              *(_OWORD *)&v88[64] = *(_OWORD *)(a2 + 1064);
              *(_OWORD *)&v88[80] = v69;
              long long v70 = *(_OWORD *)(a2 + 1112);
              *(_OWORD *)&v88[96] = *(_OWORD *)(a2 + 1096);
              *(_OWORD *)&v88[112] = v70;
              long long v71 = *(_OWORD *)(a2 + 1016);
              *(_OWORD *)v88 = *(_OWORD *)(a2 + 1000);
              *(_OWORD *)&v88[16] = v71;
              long long v72 = *(_OWORD *)(a2 + 1048);
              *(_OWORD *)&v88[32] = *(_OWORD *)(a2 + 1032);
              *(_OWORD *)&v88[48] = v72;
              long long v113 = *(_OWORD *)&v103[40];
              long long v114 = *(_OWORD *)&v103[56];
              long long v115 = *(_OWORD *)&v103[72];
              long long v112 = *(_OWORD *)&v103[24];
              long long v111 = *(_OWORD *)&v103[8];
              long long v108 = *(_OWORD *)&v103[120];
              long long v109 = *(_OWORD *)&v103[136];
              long long v110 = *(_OWORD *)&v103[152];
              long long v107 = *(_OWORD *)&v103[104];
              long long v106 = *(_OWORD *)&v103[88];
              long long v98 = *(_OWORD *)&v88[40];
              long long v99 = *(_OWORD *)&v88[56];
              long long v100 = *(_OWORD *)&v88[72];
              long long v96 = *(_OWORD *)&v88[8];
              long long v97 = *(_OWORD *)&v88[24];
              long long v93 = *(_OWORD *)&v88[120];
              long long v94 = *(_OWORD *)&v88[136];
              long long v95 = *(_OWORD *)&v88[152];
              long long v91 = *(_OWORD *)&v88[88];
              long long v92 = *(_OWORD *)&v88[104];
              sub_25E711DB8(0, &qword_26A703FF0);
              sub_25E710B20((uint64_t)v103);
              sub_25E710B20((uint64_t)v88);
              if ((sub_25E75C020() & 1) == 0) {
                goto LABEL_55;
              }
              v117[2] = v113;
              v117[3] = v114;
              v117[4] = v115;
              v117[1] = v112;
              v117[0] = v111;
              v102[2] = v98;
              v102[3] = v99;
              v102[4] = v100;
              v102[0] = v96;
              v102[1] = v97;
              if (sub_25E70EF38((uint64_t)v117, (uint64_t)v102))
              {
                v116[2] = v108;
                v116[3] = v109;
                v116[4] = v110;
                v116[1] = v107;
                v116[0] = v106;
                v101[2] = v93;
                v101[3] = v94;
                v101[4] = v95;
                v101[0] = v91;
                v101[1] = v92;
                char v73 = sub_25E70EF38((uint64_t)v116, (uint64_t)v101);
                sub_25E710B64((uint64_t)v88);
                sub_25E710B64((uint64_t)v103);
                if (v73)
                {
                  v104[2] = *(_OWORD *)&v103[200];
                  v104[3] = *(_OWORD *)&v103[216];
                  char v105 = v103[232];
                  v104[1] = *(_OWORD *)&v103[184];
                  v104[0] = *(_OWORD *)&v103[168];
                  v89[2] = *(_OWORD *)&v88[200];
                  v89[3] = *(_OWORD *)&v88[216];
                  char v90 = v88[232];
                  v89[0] = *(_OWORD *)&v88[168];
                  v89[1] = *(_OWORD *)&v88[184];
                  if (sub_25E731C98((uint64_t)v104, (uint64_t)v89)) {
                    return 1;
                  }
                }
              }
              else
              {
LABEL_55:
                sub_25E710B64((uint64_t)v88);
                sub_25E710B64((uint64_t)v103);
              }
            }
          }
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_25E710B20(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 80);
  uint64_t v3 = *(void **)(a1 + 160);
  id v4 = *(id *)a1;
  id v5 = v2;
  id v6 = v3;
  return a1;
}

uint64_t sub_25E710B64(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 80);

  return a1;
}

uint64_t sub_25E710BA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E710BFC(uint64_t a1)
{
  return a1;
}

char *sub_25E710C4C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_locations);
  sub_25E711DB8(0, &qword_26A703FF8);
  unint64_t v3 = sub_25E75BF30();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v7 = MEMORY[0x263F8EE78];
LABEL_14:
    id v14 = objc_msgSend(a1, sel_colors);
    sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
    sub_25E75BF30();

    id v15 = objc_msgSend(a1, sel_gradientLayerSize);
    objc_msgSend(v15, sel_sizeValue);

    return (char *)v7;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_25E75C130();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t result = sub_25E75A480(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    uint64_t v7 = v16;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x2611E1C70](v6, v3);
      }
      else {
        id v8 = *(id *)(v3 + 8 * v6 + 32);
      }
      char v9 = v8;
      objc_msgSend(v8, sel_doubleValue);
      uint64_t v11 = v10;

      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_25E75A480((char *)(v12 > 1), v13 + 1, 1);
      }
      ++v6;
      *(void *)(v16 + 16) = v13 + 1;
      *(void *)(v16 + 8 * v13 + 32) = v11;
    }
    while (v4 != v6);
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

__n128 sub_25E710E88@<Q0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v168 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_outroDelay];
  uint64_t v169 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_completionTimeout];
  id v3 = *(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessIntroAnimationSettings];
  sub_25E731D5C(v3, (uint64_t)v193);
  uint64_t v167 = v193[0];
  uint64_t v159 = v193[1];
  uint64_t v157 = v193[2];
  uint64_t v156 = v193[3];
  uint64_t v154 = v193[4];
  uint64_t v152 = v193[5];
  uint64_t v151 = v193[6];
  uint64_t v149 = v193[7];
  char v147 = v194;

  uint64_t v166 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessAmount];
  id v4 = *(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessOutroAnimationSettings];
  sub_25E731D5C(v4, (uint64_t)v195);
  uint64_t v143 = v195[0];
  uint64_t v142 = v195[1];
  uint64_t v141 = v195[2];
  uint64_t v140 = v195[3];
  uint64_t v139 = v195[4];
  uint64_t v138 = v195[5];
  uint64_t v137 = v195[6];
  uint64_t v136 = v195[7];
  char v135 = v196;

  id v5 = *(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleIntroAnimationSettings];
  sub_25E731D5C(v5, (uint64_t)v197);
  uint64_t v132 = v197[0];
  uint64_t v131 = v197[1];
  uint64_t v130 = v197[2];
  uint64_t v129 = v197[3];
  uint64_t v128 = v197[4];
  uint64_t v127 = v197[5];
  uint64_t v126 = v197[6];
  uint64_t v125 = v197[7];
  char v124 = v198;

  uint64_t v165 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleFactor];
  id v6 = *(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleOutroAnimationSettings];
  sub_25E731D5C(v6, (uint64_t)v199);
  uint64_t v122 = v199[0];
  uint64_t v121 = v199[1];
  uint64_t v120 = v199[2];
  uint64_t v119 = v199[3];
  uint64_t v118 = v199[4];
  uint64_t v117 = v199[5];
  uint64_t v116 = v199[6];
  uint64_t v115 = v199[7];
  char v114 = v200;

  id v7 = *(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldOffsetAnimationSettings];
  sub_25E731D5C(v7, (uint64_t)v201);
  uint64_t v163 = v201[0];
  uint64_t v113 = v201[1];
  uint64_t v112 = v201[2];
  uint64_t v111 = v201[3];
  uint64_t v110 = v201[4];
  uint64_t v109 = v201[5];
  uint64_t v108 = v201[6];
  uint64_t v107 = v201[7];
  char v106 = v202;

  uint64_t v162 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldInitialOffset];
  uint64_t v161 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldFinalOffset];
  uint64_t v160 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldSharpness];
  uint64_t v158 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldLineWidth];
  uint64_t v155 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthImageColorBrightnessAmount];
  uint64_t v153 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthImageColorContrastAmount];
  uint64_t v150 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_chromaticAberrationMagnitudeX];
  uint64_t v148 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_chromaticAberrationMagnitudeY];
  uint64_t v146 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_chromaticAberrationColorSaturateAmount];
  v104 = sub_25E710C4C(*(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskInitialRadialMask]);
  uint64_t v102 = v8;
  uint64_t v145 = v9;
  uint64_t v144 = v10;
  uint64_t v11 = sub_25E710C4C(*(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskFinalRadialMask]);
  uint64_t v94 = v12;
  long long v95 = v11;
  uint64_t v134 = v13;
  uint64_t v133 = v14;
  id v15 = *(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskPositionAnimationSettings];
  sub_25E731D5C(v15, (uint64_t)v203);
  uint64_t v83 = v203[1];
  uint64_t v84 = v203[0];
  uint64_t v81 = v203[3];
  uint64_t v82 = v203[2];
  uint64_t v79 = v203[5];
  uint64_t v80 = v203[4];
  uint64_t v77 = v203[7];
  uint64_t v78 = v203[6];
  char v76 = v204;

  uint64_t v123 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskPositionYNormalizedDistance];
  id v16 = *(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskScaleAnimationSettings];
  sub_25E731D5C(v16, (uint64_t)v205);
  uint64_t v74 = v205[1];
  uint64_t v75 = v205[0];
  uint64_t v72 = v205[3];
  uint64_t v73 = v205[2];
  uint64_t v70 = v205[5];
  uint64_t v71 = v205[4];
  uint64_t v68 = v205[7];
  uint64_t v69 = v205[6];
  char v67 = v206;

  uint64_t v17 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskScaleFactor];
  id v18 = *(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskIntensityAnimationSettings];
  sub_25E731D5C(v18, (uint64_t)v207);
  uint64_t v65 = v207[1];
  uint64_t v66 = v207[0];
  uint64_t v63 = v207[3];
  uint64_t v64 = v207[2];
  uint64_t v61 = v207[5];
  uint64_t v62 = v207[4];
  uint64_t v59 = v207[7];
  uint64_t v60 = v207[6];
  char v58 = v208;

  uint64_t v19 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskInitialIntensity];
  uint64_t v20 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskFinalIntensity];
  uint64_t v21 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_fillLightColorBrightnessAmount];
  uint64_t v22 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_fillLightColorSaturateAmount];
  id v23 = *(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadiusIntroAnimationSettings];
  sub_25E731D5C(v23, (uint64_t)v209);
  uint64_t v57 = v209[0];
  uint64_t v96 = v209[1];
  uint64_t v105 = v209[2];
  uint64_t v103 = v209[3];
  uint64_t v100 = v209[5];
  uint64_t v101 = v209[4];
  uint64_t v98 = v209[7];
  uint64_t v99 = v209[6];
  char v97 = v210;

  uint64_t v24 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadius];
  id v25 = *(id *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadiusOutroAnimationSettings];
  sub_25E731D5C(v25, (uint64_t)v211);
  uint64_t v92 = v211[1];
  uint64_t v93 = v211[0];
  uint64_t v90 = v211[3];
  uint64_t v91 = v211[2];
  uint64_t v88 = v211[5];
  uint64_t v89 = v211[4];
  uint64_t v86 = v211[7];
  uint64_t v87 = v211[6];
  char v85 = v212;

  v164 = a1;
  uint64_t v26 = *(void *)&a1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurOutroDelay];
  id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F15830]), sel_init);
  objc_msgSend(v27, sel_setDepthNormalization_, *MEMORY[0x263F15A28]);
  objc_msgSend(v27, sel_setReplicatesEdges_, 1);
  uint64_t v28 = 0;
  do
  {
    uint64_t v29 = v28 + 1;
    double v30 = (double)v28 * 0.166666667;
    v221.n128_u64[0] = 0;
    v221.n128_f64[1] = v30;
    *(void *)&long long v222 = 0;
    *((double *)&v222 + 1) = v30;
    *(void *)&long long v223 = 0x3FE0000000000000;
    objc_msgSend(v27, sel_addVertex_, &v221);
    v221.n128_u64[0] = 0x3FC5555555555555;
    v221.n128_f64[1] = v30;
    *(void *)&long long v222 = 0x3FC5555555555555;
    *((double *)&v222 + 1) = v30;
    *(void *)&long long v223 = 0x3FE0000000000000;
    objc_msgSend(v27, sel_addVertex_, &v221);
    v221.n128_u64[0] = 0x3FD5555555555555;
    v221.n128_f64[1] = v30;
    *(void *)&long long v222 = 0x3FD5555555555555;
    *((double *)&v222 + 1) = v30;
    *(void *)&long long v223 = 0x3FE0000000000000;
    objc_msgSend(v27, sel_addVertex_, &v221);
    v221.n128_u64[0] = 0x3FE0000000000000;
    v221.n128_f64[1] = v30;
    *(void *)&long long v222 = 0x3FE0000000000000;
    *((double *)&v222 + 1) = v30;
    *(void *)&long long v223 = 0x3FE0000000000000;
    objc_msgSend(v27, sel_addVertex_, &v221);
    v221.n128_u64[0] = 0x3FE5555555555555;
    v221.n128_f64[1] = v30;
    *(void *)&long long v222 = 0x3FE5555555555555;
    *((double *)&v222 + 1) = v30;
    *(void *)&long long v223 = 0x3FE0000000000000;
    objc_msgSend(v27, sel_addVertex_, &v221);
    v221.n128_u64[0] = 0x3FEAAAAAAAAAAAAALL;
    v221.n128_f64[1] = v30;
    *(void *)&long long v222 = 0x3FEAAAAAAAAAAAAALL;
    *((double *)&v222 + 1) = v30;
    *(void *)&long long v223 = 0x3FE0000000000000;
    objc_msgSend(v27, sel_addVertex_, &v221);
    v221.n128_u64[0] = 0x3FF0000000000000;
    v221.n128_f64[1] = v30;
    *(void *)&long long v222 = 0x3FF0000000000000;
    *((double *)&v222 + 1) = v30;
    *(void *)&long long v223 = 0x3FE0000000000000;
    objc_msgSend(v27, sel_addVertex_, &v221);
    uint64_t v28 = v29;
  }
  while (v29 != 7);
  uint64_t v31 = -42;
  do
  {
    v221.n128_u32[0] = v31 + 42;
    v221.n128_u32[1] = v31 + 43;
    v221.n128_u32[2] = v31 + 50;
    v221.n128_u32[3] = v31 + 49;
    long long v222 = 0uLL;
    objc_msgSend(v27, sel_addFace_, &v221);
    v221.n128_u32[0] = v31 + 43;
    v221.n128_u32[1] = v31 + 44;
    v221.n128_u32[2] = v31 + 51;
    v221.n128_u32[3] = v31 + 50;
    long long v222 = 0uLL;
    objc_msgSend(v27, sel_addFace_, &v221);
    v221.n128_u32[0] = v31 + 44;
    v221.n128_u32[1] = v31 + 45;
    v221.n128_u32[2] = v31 + 52;
    v221.n128_u32[3] = v31 + 51;
    long long v222 = 0uLL;
    objc_msgSend(v27, sel_addFace_, &v221);
    v221.n128_u32[0] = v31 + 45;
    v221.n128_u32[1] = v31 + 46;
    v221.n128_u32[2] = v31 + 53;
    v221.n128_u32[3] = v31 + 52;
    long long v222 = 0uLL;
    objc_msgSend(v27, sel_addFace_, &v221);
    v221.n128_u32[0] = v31 + 46;
    v221.n128_u32[2] = v31 + 54;
    v221.n128_u32[3] = v31 + 53;
    long long v222 = 0uLL;
    int32x2_t v171 = vadd_s32(vdup_n_s32((int)v31 + 42), (int32x2_t)0x600000005);
    v221.n128_u32[1] = v171.i32[0];
    objc_msgSend(v27, sel_addFace_, &v221);
    v221.n128_u64[0] = (unint64_t)v171;
    v221.n128_u32[2] = v31 + 55;
    v221.n128_u32[3] = v31 + 54;
    long long v222 = 0uLL;
    objc_msgSend(v27, sel_addFace_, &v221);
    v31 += 7;
  }
  while (v31);
  double v32 = *(void **)&v164[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformMeshIntroAnimationSettings];
  id v33 = v27;
  id v34 = v32;
  sub_25E731D5C(v34, (uint64_t)v213);
  long long v172 = v213[0];
  long long v55 = v213[2];
  long long v56 = v213[1];
  uint64_t v53 = v215;
  uint64_t v54 = v214;
  char v52 = v216;

  id v51 = sub_25E7555B8();
  id v35 = *(id *)&v164[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformMeshOutroAnimationSettings];
  sub_25E731D5C(v35, (uint64_t)v217);
  long long v49 = v217[1];
  long long v50 = v217[0];
  long long v48 = v217[2];
  uint64_t v36 = v219;
  uint64_t v47 = v218;
  char v46 = v220;

  long long v37 = *(void **)&v164[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformPositionAnimationSettings];
  id v38 = v33;
  id v39 = v37;
  sub_25E731D5C(v39, (uint64_t)&v221);
  int v40 = v225;
  int v41 = v226;
  LOBYTE(v34) = v227;

  *(void *)(a2 + 32) = v159;
  *(void *)(a2 + 40) = v157;
  *(void *)(a2 + 48) = v156;
  *(void *)(a2 + 56) = v154;
  *(void *)(a2 + 64) = v152;
  *(void *)(a2 + 72) = v151;
  *(void *)(a2 + 80) = v149;
  *(unsigned char *)(a2 + 88) = v147;
  *(void *)(a2 + 104) = v143;
  *(void *)(a2 + 112) = v142;
  *(void *)(a2 + 120) = v141;
  *(void *)(a2 + 128) = v140;
  *(void *)(a2 + 136) = v139;
  *(void *)(a2 + 144) = v138;
  *(void *)(a2 + 152) = v137;
  *(void *)(a2 + 160) = v136;
  *(unsigned char *)(a2 + 168) = v135;
  *(unsigned char *)(a2 + 169) = 0;
  *(void *)(a2 + 192) = v132;
  *(void *)(a2 + 200) = v131;
  *(void *)(a2 + 208) = v130;
  *(void *)(a2 + 216) = v129;
  *(void *)(a2 + 224) = v128;
  *(void *)(a2 + 232) = v127;
  *(void *)(a2 + 240) = v126;
  *(void *)(a2 + 248) = v125;
  *(unsigned char *)(a2 + 256) = v124;
  *(void *)(a2 + 272) = v122;
  *(void *)(a2 + 280) = v121;
  *(void *)(a2 + 288) = v120;
  *(void *)(a2 + 296) = v119;
  *(void *)(a2 + 304) = v118;
  *(void *)(a2 + 312) = v117;
  *(void *)(a2 + 320) = v116;
  *(void *)(a2 + 328) = v115;
  *(unsigned char *)(a2 + 336) = v114;
  *(unsigned char *)(a2 + 337) = 0;
  *(void *)(a2 + 360) = v113;
  *(void *)(a2 + 368) = v112;
  *(void *)(a2 + 376) = v111;
  *(void *)(a2 + 384) = v110;
  *(void *)(a2 + 392) = v109;
  *(void *)(a2 + 400) = v108;
  *(void *)(a2 + 408) = v107;
  *(unsigned char *)(a2 + 416) = v106;
  *(void *)(a2 + 496) = v104;
  *(void *)(a2 + 504) = v102;
  *(void *)(a2 + 528) = v95;
  *(void *)(a2 + 536) = v94;
  *(void *)(a2 + 560) = v84;
  *(void *)(a2 + 568) = v83;
  *(void *)(a2 + 576) = v82;
  *(void *)(a2 + 584) = v81;
  *(void *)(a2 + 592) = v80;
  *(void *)(a2 + 600) = v79;
  *(void *)(a2 + 608) = v78;
  *(void *)(a2 + 616) = v77;
  *(unsigned char *)(a2 + 624) = v76;
  *(void *)(a2 + 640) = v75;
  *(void *)(a2 + 648) = v74;
  *(void *)(a2 + 656) = v73;
  *(void *)(a2 + 664) = v72;
  *(void *)(a2 + 672) = v71;
  *(void *)(a2 + 680) = v70;
  *(void *)(a2 + 688) = v69;
  *(void *)(a2 + 696) = v68;
  *(unsigned char *)(a2 + 704) = v67;
  *(void *)(a2 + 720) = v66;
  *(void *)(a2 + 728) = v65;
  *(void *)(a2 + 736) = v64;
  *(void *)(a2 + 744) = v63;
  *(void *)(a2 + 752) = v62;
  *(void *)(a2 + 760) = v61;
  *(void *)(a2 + 768) = v60;
  *(void *)(a2 + 776) = v59;
  *(unsigned char *)(a2 + 784) = v58;
  *(void *)(a2 + 832) = v57;
  *(_DWORD *)(a2 + 259) = v191;
  *(_DWORD *)(a2 + 339) = v189;
  *(_DWORD *)(a2 + 419) = v187;
  *(_DWORD *)(a2 + 627) = v185;
  *(_DWORD *)(a2 + 707) = v183;
  *(_DWORD *)(a2 + 787) = v181;
  *(void *)a2 = v168;
  *(void *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v167;
  *(_WORD *)(a2 + 257) = 0;
  *(unsigned char *)(a2 + 263) = v192;
  *(unsigned char *)(a2 + 343) = v190;
  *(void *)(a2 + 344) = 0x3FF0000000000000;
  *(void *)(a2 + 352) = v163;
  *(unsigned char *)(a2 + 417) = 0;
  *(unsigned char *)(a2 + 423) = v188;
  *(unsigned char *)(a2 + 625) = 0;
  *(unsigned char *)(a2 + 631) = v186;
  *(unsigned char *)(a2 + 705) = 0;
  *(unsigned char *)(a2 + 711) = v184;
  *(unsigned char *)(a2 + 785) = 0;
  *(unsigned char *)(a2 + 791) = v182;
  *(void *)(a2 + 8) = v169;
  *(_WORD *)(a2 + 89) = 0;
  *(void *)(a2 + 96) = v166;
  *(unsigned char *)(a2 + 170) = 0;
  *(_OWORD *)(a2 + 176) = xmmword_25E75EAC0;
  *(void *)(a2 + 264) = v165;
  *(unsigned char *)(a2 + 338) = 0;
  *(unsigned char *)(a2 + 418) = 0;
  *(void *)(a2 + 840) = v96;
  *(void *)(a2 + 424) = v162;
  *(void *)(a2 + 432) = v161;
  *(void *)(a2 + 440) = v160;
  *(void *)(a2 + 448) = v158;
  *(void *)(a2 + 456) = v155;
  *(void *)(a2 + 464) = v153;
  *(void *)(a2 + 472) = v150;
  *(void *)(a2 + 480) = v148;
  *(void *)(a2 + 488) = v146;
  *(void *)(a2 + 512) = v145;
  *(void *)(a2 + 520) = v144;
  *(void *)(a2 + 544) = v134;
  *(void *)(a2 + 552) = v133;
  *(unsigned char *)(a2 + 626) = 0;
  *(void *)(a2 + 632) = v123;
  *(unsigned char *)(a2 + 706) = 0;
  *(void *)(a2 + 712) = v17;
  *(unsigned char *)(a2 + 786) = 0;
  *(void *)(a2 + 792) = v19;
  *(void *)(a2 + 800) = v20;
  *(void *)(a2 + 808) = v21;
  *(void *)(a2 + 816) = v22;
  *(void *)(a2 + 824) = 0;
  *(void *)(a2 + 848) = v105;
  *(void *)(a2 + 856) = v103;
  *(void *)(a2 + 864) = v101;
  *(void *)(a2 + 872) = v100;
  *(void *)(a2 + 880) = v99;
  *(void *)(a2 + 888) = v98;
  *(unsigned char *)(a2 + 896) = v97;
  *(_WORD *)(a2 + 897) = 0;
  *(unsigned char *)(a2 + 903) = v180;
  *(_DWORD *)(a2 + 899) = v179;
  __n128 result = v221;
  long long v43 = v222;
  long long v44 = v223;
  *(void *)(a2 + 904) = v24;
  *(void *)(a2 + 912) = v93;
  *(void *)(a2 + 920) = v92;
  *(void *)(a2 + 928) = v91;
  uint64_t v45 = v224;
  *(void *)(a2 + 936) = v90;
  *(void *)(a2 + 944) = v89;
  *(void *)(a2 + 952) = v88;
  *(void *)(a2 + 960) = v87;
  *(void *)(a2 + 968) = v86;
  *(unsigned char *)(a2 + 976) = v85;
  *(_WORD *)(a2 + 977) = 0;
  *(unsigned char *)(a2 + 983) = v178;
  *(_DWORD *)(a2 + 979) = v177;
  *(void *)(a2 + 984) = 0;
  *(void *)(a2 + 992) = v26;
  *(void *)(a2 + 1000) = v38;
  *(_OWORD *)(a2 + 1008) = v172;
  *(_OWORD *)(a2 + 1024) = v56;
  *(_OWORD *)(a2 + 1040) = v55;
  *(void *)(a2 + 1056) = v54;
  *(void *)(a2 + 1064) = v53;
  *(unsigned char *)(a2 + 1072) = v52;
  *(unsigned char *)(a2 + 1073) = 0;
  *(unsigned char *)(a2 + 1074) = 0;
  *(unsigned char *)(a2 + 1079) = v176;
  *(_DWORD *)(a2 + 1075) = v175;
  *(void *)(a2 + 1080) = v51;
  *(_OWORD *)(a2 + 1088) = v50;
  *(_OWORD *)(a2 + 1104) = v49;
  *(_OWORD *)(a2 + 1120) = v48;
  *(void *)(a2 + 1136) = v47;
  *(void *)(a2 + 1144) = v36;
  *(unsigned char *)(a2 + 1152) = v46;
  *(unsigned char *)(a2 + 1153) = 0;
  *(unsigned char *)(a2 + 1154) = 0;
  *(unsigned char *)(a2 + 1159) = v174;
  *(_DWORD *)(a2 + 1155) = v173;
  *(void *)(a2 + 1160) = v38;
  *(__n128 *)(a2 + 1168) = result;
  *(_OWORD *)(a2 + 1184) = v43;
  *(_OWORD *)(a2 + 1200) = v44;
  *(void *)(a2 + 1216) = v45;
  *(_DWORD *)(a2 + 1224) = v40;
  *(_DWORD *)(a2 + 1228) = v41;
  *(unsigned char *)(a2 + 1232) = (_BYTE)v34;
  return result;
}

uint64_t sub_25E711DB8(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t sub_25E711E0C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25E711E2C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 40) = v3;
  return result;
}

void type metadata accessor for CAMeshVertex(uint64_t a1)
{
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t sub_25E711E80(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25E711EA0(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CAMeshFace(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

__n128 __swift_memcpy128_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t sub_25E711F24(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 128)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25E711F44(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 128) = v3;
  return result;
}

void type metadata accessor for CATransform3D(uint64_t a1)
{
}

void destroy for ComponentScanwavePrototypeSettings.Mesh(uint64_t a1)
{
  long long v2 = *(void **)(a1 + 160);
}

uint64_t initializeWithCopy for ComponentScanwavePrototypeSettings.Mesh(uint64_t a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  long long v4 = *(void **)(a2 + 80);
  *(void *)(a1 + 80) = v4;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  long long v5 = *(_OWORD *)(a2 + 104);
  long long v6 = *(_OWORD *)(a2 + 120);
  long long v7 = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v7;
  *(_OWORD *)(a1 + 120) = v6;
  *(_OWORD *)(a1 + 104) = v5;
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  uint64_t v8 = *(void **)(a2 + 160);
  *(void *)(a1 + 160) = v8;
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  long long v9 = *(_OWORD *)(a2 + 184);
  long long v10 = *(_OWORD *)(a2 + 200);
  long long v11 = *(_OWORD *)(a2 + 216);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v11;
  *(_OWORD *)(a1 + 200) = v10;
  *(_OWORD *)(a1 + 184) = v9;
  id v12 = v3;
  id v13 = v4;
  id v14 = v8;
  return a1;
}

uint64_t assignWithCopy for ComponentScanwavePrototypeSettings.Mesh(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a2;
  long long v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  long long v7 = *(_OWORD *)(a2 + 24);
  long long v8 = *(_OWORD *)(a2 + 40);
  long long v9 = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  long long v10 = *(void **)(a2 + 80);
  long long v11 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = v10;
  id v12 = v10;

  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  long long v13 = *(_OWORD *)(a2 + 104);
  long long v14 = *(_OWORD *)(a2 + 120);
  long long v15 = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v15;
  *(_OWORD *)(a1 + 120) = v14;
  *(_OWORD *)(a1 + 104) = v13;
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  id v16 = *(void **)(a2 + 160);
  uint64_t v17 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = v16;
  id v18 = v16;

  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_DWORD *)(a1 + 216) = *(_DWORD *)(a2 + 216);
  *(_DWORD *)(a1 + 220) = *(_DWORD *)(a2 + 220);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  int v19 = *(_DWORD *)(a2 + 228);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  *(_DWORD *)(a1 + 228) = v19;
  return a1;
}

__n128 __swift_memcpy233_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[13];
  *(_OWORD *)(a1 + 217) = *(long long *)((char *)a2 + 217);
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 208) = v12;
  *(__n128 *)(a1 + 176) = result;
  return result;
}

uint64_t assignWithTake for ComponentScanwavePrototypeSettings.Mesh(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  long long v5 = *(void **)(a1 + 80);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);

  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  long long v6 = *(void **)(a1 + 160);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);

  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(_DWORD *)(a1 + 224) = *(_DWORD *)(a2 + 224);
  *(_DWORD *)(a1 + 228) = *(_DWORD *)(a2 + 228);
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  return a1;
}

uint64_t getEnumTagSinglePayload for ComponentScanwavePrototypeSettings.Mesh(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 233)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentScanwavePrototypeSettings.Mesh(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 232) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 233) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 233) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentScanwavePrototypeSettings.Mesh()
{
  return &type metadata for ComponentScanwavePrototypeSettings.Mesh;
}

__n128 __swift_memcpy176_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(__n128 *)(a1 + 112) = result;
  *(_OWORD *)(a1 + 128) = v8;
  return result;
}

uint64_t getEnumTagSinglePayload for ComponentScanwavePrototypeSettings.InverseBlur(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 176)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 74);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentScanwavePrototypeSettings.InverseBlur(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 168) = 0;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 176) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 176) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 74) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentScanwavePrototypeSettings.InverseBlur()
{
  return &type metadata for ComponentScanwavePrototypeSettings.InverseBlur;
}

uint64_t getEnumTagSinglePayload for ComponentScanwavePrototypeSettings.FillLight(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ComponentScanwavePrototypeSettings.FillLight(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ComponentScanwavePrototypeSettings.FillLight()
{
  return &type metadata for ComponentScanwavePrototypeSettings.FillLight;
}

uint64_t initializeBufferWithCopyOfBuffer for ComponentFluidBehaviorSettings.AnimationSettings.SpringParameters(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for ComponentScanwavePrototypeSettings.CircleMask()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ComponentScanwavePrototypeSettings.CircleMask(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  long long v5 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v5;
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v7;
  long long v8 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v8;
  long long v9 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v9;
  long long v10 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v10;
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  long long v11 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v11;
  long long v12 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ComponentScanwavePrototypeSettings.CircleMask(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 80);
  long long v5 = *(_OWORD *)(a2 + 96);
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v5;
  *(_OWORD *)(a1 + 112) = v6;
  *(_OWORD *)(a1 + 80) = v4;
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  long long v7 = *(_OWORD *)(a2 + 160);
  long long v8 = *(_OWORD *)(a2 + 176);
  long long v9 = *(_OWORD *)(a2 + 192);
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v8;
  *(_OWORD *)(a1 + 192) = v9;
  *(_OWORD *)(a1 + 160) = v7;
  *(unsigned char *)(a1 + 210) = *(unsigned char *)(a2 + 210);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  long long v10 = *(_OWORD *)(a2 + 240);
  long long v11 = *(_OWORD *)(a2 + 256);
  long long v12 = *(_OWORD *)(a2 + 272);
  *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
  *(_OWORD *)(a1 + 256) = v11;
  *(_OWORD *)(a1 + 272) = v12;
  *(_OWORD *)(a1 + 240) = v10;
  *(unsigned char *)(a1 + 290) = *(unsigned char *)(a2 + 290);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  return a1;
}

void *__swift_memcpy312_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t assignWithTake for ComponentScanwavePrototypeSettings.CircleMask(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v4;
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 130) = *(unsigned char *)(a2 + 130);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  long long v6 = *(_OWORD *)(a2 + 144);
  long long v7 = *(_OWORD *)(a2 + 160);
  long long v8 = *(_OWORD *)(a2 + 176);
  long long v9 = *(_OWORD *)(a2 + 192);
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v8;
  *(_OWORD *)(a1 + 192) = v9;
  *(_OWORD *)(a1 + 144) = v6;
  *(_OWORD *)(a1 + 160) = v7;
  *(unsigned char *)(a1 + 210) = *(unsigned char *)(a2 + 210);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  long long v10 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v10;
  *(_WORD *)(a1 + 288) = *(_WORD *)(a2 + 288);
  long long v11 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v11;
  *(unsigned char *)(a1 + 290) = *(unsigned char *)(a2 + 290);
  *(void *)&long long v10 = *(void *)(a2 + 304);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for ComponentScanwavePrototypeSettings.CircleMask(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 312)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentScanwavePrototypeSettings.CircleMask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 312) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 312) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentScanwavePrototypeSettings.CircleMask()
{
  return &type metadata for ComponentScanwavePrototypeSettings.CircleMask;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ComponentFluidBehaviorSettings.AnimationSettings.SpringProperties(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ComponentFluidBehaviorSettings.AnimationSettings.SpringProperties(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ComponentScanwavePrototypeSettings.ChromaticAberration()
{
  return &type metadata for ComponentScanwavePrototypeSettings.ChromaticAberration;
}

__n128 __swift_memcpy120_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  __n128 result = (__n128)a2[4];
  long long v6 = a2[5];
  long long v7 = a2[6];
  *(void *)(a1 + 112) = *((void *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ComponentScanwavePrototypeSettings.DepthImage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 120)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 66);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentScanwavePrototypeSettings.DepthImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 120) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 120) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 66) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentScanwavePrototypeSettings.DepthImage()
{
  return &type metadata for ComponentScanwavePrototypeSettings.DepthImage;
}

void *__swift_memcpy336_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x150uLL);
}

uint64_t getEnumTagSinglePayload for ComponentScanwavePrototypeSettings.SourceImage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 336)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 74);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentScanwavePrototypeSettings.SourceImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 328) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 336) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 336) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 74) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentScanwavePrototypeSettings.SourceImage()
{
  return &type metadata for ComponentScanwavePrototypeSettings.SourceImage;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CAPoint3D(uint64_t a1)
{
}

uint64_t destroy for ComponentScanwavePrototypeSettings.RadialMask()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ComponentScanwavePrototypeSettings.RadialMask(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ComponentScanwavePrototypeSettings.RadialMask(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

_OWORD *assignWithTake for ComponentScanwavePrototypeSettings.RadialMask(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for ComponentScanwavePrototypeSettings.RadialMask(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentScanwavePrototypeSettings.RadialMask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentScanwavePrototypeSettings.RadialMask()
{
  return &type metadata for ComponentScanwavePrototypeSettings.RadialMask;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ComponentScanwavePrototypeSettings.DepthDistanceField(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 66);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentScanwavePrototypeSettings.DepthDistanceField(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 104) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 66) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentScanwavePrototypeSettings.DepthDistanceField()
{
  return &type metadata for ComponentScanwavePrototypeSettings.DepthDistanceField;
}

uint64_t __swift_memcpy12_4(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_DWORD *)(result + 8) = *((_DWORD *)a2 + 2);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t sub_25E712F18(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 12)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_25E712F38(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 8) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 12) = v3;
  return result;
}

void type metadata accessor for CAFrameRateRange(uint64_t a1)
{
}

void sub_25E712F78(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

id SUIAnimationKitPrototypeSettings.shockwaveSettings.getter()
{
  id v1 = (void **)(v0 + OBJC_IVAR___SUIAnimationKitPrototypeSettings_shockwaveSettings);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void SUIAnimationKitPrototypeSettings.shockwaveSettings.setter(void *a1)
{
  char v3 = (void **)(v1 + OBJC_IVAR___SUIAnimationKitPrototypeSettings_shockwaveSettings);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

Swift::Void __swiftcall SUIAnimationKitPrototypeSettings.setDefaultValues()()
{
  v2.super_class = (Class)SUIAnimationKitPrototypeSettings;
  objc_msgSendSuper2(&v2, sel_setDefaultValues);
  id v1 = objc_msgSend(v0, sel_shockwaveSettings);
  objc_msgSend(v1, sel_setDefaultValues);

  objc_msgSend(*(id *)&v0[OBJC_IVAR___SUIAnimationKitPrototypeSettings_scanwaveSettings], sel_setDefaultValues);
}

void _sSo32SUIAnimationKitPrototypeSettingsC017SystemUIAnimationB0E24settingsControllerModuleSo8PTModuleCSgyFZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25E75FB40;
  id v1 = (void *)sub_25E75BEA0();
  objc_super v2 = (void *)sub_25E75BEA0();
  char v3 = self;
  id v4 = objc_msgSend(v3, sel_rowWithTitle_childSettingsKeyPath_, v1, v2);

  if (!v4)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v5 = sub_25E711DB8(0, &qword_26A704058);
  *(void *)(v0 + 56) = v5;
  *(void *)(v0 + 32) = v4;
  long long v6 = (void *)sub_25E75BEA0();
  long long v7 = (void *)sub_25E75BEA0();
  id v8 = objc_msgSend(v3, sel_rowWithTitle_childSettingsKeyPath_, v6, v7);

  if (!v8)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v19 = v5;
  *(void *)&long long v18 = v8;
  long long v9 = sub_25E7445E8((char *)1, 2, 1, (char *)v0);
  *((void *)v9 + 2) = 2;
  sub_25E7136C0(&v18, (_OWORD *)v9 + 4);
  long long v10 = self;
  swift_bridgeObjectRetain();
  long long v11 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  long long v12 = (void *)sub_25E75BEA0();
  id v13 = objc_msgSend(v10, sel_sectionWithRows_title_, v11, v12);

  if (v13)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_25E75FB40;
    *(void *)(v14 + 56) = sub_25E711DB8(0, &qword_26A704060);
    *(void *)(v14 + 32) = v13;
    id v15 = v13;
    id v16 = (void *)sub_25E75BEA0();
    uint64_t v17 = (void *)sub_25E75BF20();
    swift_bridgeObjectRelease();
    objc_msgSend(v10, sel_moduleWithTitle_contents_, v16, v17);

    return;
  }
LABEL_7:
  __break(1u);
}

char *keypath_get_selector_shockwaveSettings()
{
  return sel_shockwaveSettings;
}

id sub_25E713618@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_shockwaveSettings);
  *a2 = result;
  return result;
}

id sub_25E713654(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setShockwaveSettings_, *a1);
}

uint64_t type metadata accessor for SUIAnimationKitPrototypeSettings(uint64_t a1)
{
  return sub_25E711DB8(a1, &qword_26A704050);
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

_OWORD *sub_25E7136C0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

id static SUIAnimationKitPrototypeSettingsDomain.rootSettings()()
{
  v1.receiver = (id)swift_getObjCClassFromMetadata();
  v1.super_class = (Class)&OBJC_METACLASS___SUIAnimationKitPrototypeSettingsDomain;
  id result = objc_msgSendSuper2(&v1, sel_rootSettings);
  if (result)
  {
    self;
    return (id)swift_dynamicCastObjCClassUnconditional();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static SUIAnimationKitPrototypeSettingsDomain.domainGroupName()()
{
  return 0x55206D6574737953;
}

unint64_t static SUIAnimationKitPrototypeSettingsDomain.domainName()()
{
  return 0xD000000000000017;
}

uint64_t static SUIAnimationKitPrototypeSettingsDomain.rootSettingsClass()()
{
  return type metadata accessor for SUIAnimationKitPrototypeSettings(0);
}

unint64_t type metadata accessor for SUIAnimationKitPrototypeSettingsDomain()
{
  unint64_t result = qword_26A704068;
  if (!qword_26A704068)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A704068);
  }
  return result;
}

uint64_t SUIAFluidBehaviorSettings.behaviorType.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_behaviorType;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t SUIAFluidBehaviorSettings.behaviorType.setter(uint64_t a1)
{
  char v3 = (void *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_behaviorType);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t SUIAFluidBehaviorSettings.name.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_name);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SUIAFluidBehaviorSettings.name.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR___SUIAFluidBehaviorSettings_name);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_25E713BF4(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_name);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_25E75BEB0();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_25E713C5C(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  if (*(void *)(a1 + 8)) {
    uint64_t v3 = sub_25E75BEA0();
  }
  else {
    uint64_t v3 = 0;
  }
  id v4 = (id)v3;
  objc_msgSend(v2, sel_setName_);
}

double SUIAFluidBehaviorSettings.dampingRatio.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_dampingRatio;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.dampingRatio.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_dampingRatio);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.response.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_response;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.response.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_response);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.retargetImpulse.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_retargetImpulse;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.retargetImpulse.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_retargetImpulse);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.trackingDampingRatio.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_trackingDampingRatio;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.trackingDampingRatio.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_trackingDampingRatio);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.trackingResponse.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_trackingResponse;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.trackingResponse.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_trackingResponse);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.trackingRetargetImpulse.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_trackingRetargetImpulse;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.trackingRetargetImpulse.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_trackingRetargetImpulse);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t SUIAFluidBehaviorSettings.smoothingAndProjectionEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_smoothingAndProjectionEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAFluidBehaviorSettings.smoothingAndProjectionEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_smoothingAndProjectionEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.dampingRatioSmoothing.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_dampingRatioSmoothing;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.dampingRatioSmoothing.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_dampingRatioSmoothing);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.responseSmoothing.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_responseSmoothing;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.responseSmoothing.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_responseSmoothing);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.trackingDampingRatioSmoothing.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_trackingDampingRatioSmoothing;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.trackingDampingRatioSmoothing.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_trackingDampingRatioSmoothing);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.trackingResponseSmoothing.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_trackingResponseSmoothing;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.trackingResponseSmoothing.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_trackingResponseSmoothing);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.inertialTargetSmoothingRatio.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_inertialTargetSmoothingRatio;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.inertialTargetSmoothingRatio.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_inertialTargetSmoothingRatio);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAFluidBehaviorSettings.inertialProjectionDeceleration.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_inertialProjectionDeceleration;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAFluidBehaviorSettings.inertialProjectionDeceleration.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_inertialProjectionDeceleration);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

void *SUIAFluidBehaviorSettings.preferredFrameRateRange.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAFluidBehaviorSettings_preferredFrameRateRange);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void SUIAFluidBehaviorSettings.preferredFrameRateRange.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___SUIAFluidBehaviorSettings_preferredFrameRateRange);
  swift_beginAccess();
  id v4 = *v3;
  double *v3 = a1;
}

Swift::Void __swiftcall SUIAFluidBehaviorSettings.setDefaultValues()()
{
  v1.super_class = (Class)SUIAFluidBehaviorSettings;
  objc_msgSendSuper2(&v1, sel_setDefaultValues);
  objc_msgSend(v0, sel_setBehaviorType_, 0);
  objc_msgSend(v0, sel_setDampingRatio_, 0.845);
  objc_msgSend(v0, sel_setResponse_, 0.531);
  objc_msgSend(v0, sel_setTrackingDampingRatio_, 0.86);
  objc_msgSend(v0, sel_setTrackingResponse_, 0.15);
  objc_msgSend(v0, sel_setRetargetImpulse_, 0.0);
  objc_msgSend(v0, sel_setTrackingRetargetImpulse_, 0.0);
  objc_msgSend(v0, sel_setDampingRatioSmoothing_, 0.0);
  objc_msgSend(v0, sel_setResponseSmoothing_, 0.0);
  objc_msgSend(v0, sel_setTrackingDampingRatioSmoothing_, 0.0);
  objc_msgSend(v0, sel_setTrackingResponseSmoothing_, 0.0);
  objc_msgSend(v0, sel_setSmoothingAndProjectionEnabled_, 0);
}

Swift::Void __swiftcall SUIAFluidBehaviorSettings.setDefaultCriticallyDampedValues()()
{
  objc_msgSend(v0, sel_setDefaultValues);
  objc_msgSend(v0, sel_setDampingRatio_, 1.0);
  objc_msgSend(v0, sel_setResponse_, 0.336);
}

double SUIAFluidBehaviorSettings.parametersForTransition(from:to:)@<D0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  if (a2 == 1)
  {
    id v6 = objc_msgSend(v3, sel_behaviorType);
    uint64_t v7 = &selRef_dampingRatio;
    if (v6) {
      uint64_t v7 = &selRef_trackingDampingRatio;
    }
    [v3 *v7];
    double v38 = v8;
    id v9 = objc_msgSend(v3, sel_behaviorType);
    long long v10 = &selRef_response;
    if (v9) {
      long long v10 = &selRef_trackingResponse;
    }
    [v3 *v10];
    uint64_t v12 = v11;
    id v13 = objc_msgSend(v3, sel_behaviorType);
    uint64_t v14 = &selRef_retargetImpulse;
    if (v13) {
      uint64_t v14 = &selRef_trackingRetargetImpulse;
    }
    [v3 *v14];
    uint64_t v16 = v15;
    double v17 = 0.0;
    if (objc_msgSend(v3, sel_smoothingAndProjectionEnabled))
    {
      objc_msgSend(v3, sel_trackingDampingRatioSmoothing);
      uint64_t v19 = v18;
      objc_msgSend(v3, sel_trackingResponseSmoothing);
      uint64_t v21 = v20;
      if (a1)
      {
        char v22 = 0;
        uint64_t v23 = 0;
        uint64_t v24 = 0;
      }
      else
      {
        objc_msgSend(v3, sel_dampingRatio);
        uint64_t v24 = v35;
        objc_msgSend(v3, sel_response);
        uint64_t v23 = v36;
        char v22 = 1;
      }
    }
    else
    {
      char v22 = 0;
      uint64_t v23 = 0;
      uint64_t v24 = 0;
      uint64_t v19 = 0;
      uint64_t v21 = 0;
    }
    goto LABEL_19;
  }
  objc_msgSend(v3, sel_dampingRatio);
  double v38 = v25;
  objc_msgSend(v3, sel_response);
  uint64_t v12 = v26;
  objc_msgSend(v3, sel_retargetImpulse);
  uint64_t v16 = v27;
  uint64_t v23 = 0;
  if (!objc_msgSend(v3, sel_smoothingAndProjectionEnabled))
  {
    char v22 = 0;
    uint64_t v24 = 0;
    uint64_t v19 = 0;
    uint64_t v21 = 0;
LABEL_17:
    double v17 = 0.0;
LABEL_19:
    uint64_t v31 = 0;
    goto LABEL_20;
  }
  objc_msgSend(v3, sel_dampingRatioSmoothing);
  uint64_t v19 = v28;
  objc_msgSend(v3, sel_responseSmoothing);
  uint64_t v21 = v29;
  if (a1 != 1)
  {
    char v22 = 0;
    uint64_t v24 = 0;
    goto LABEL_17;
  }
  objc_msgSend(v3, sel_inertialProjectionDeceleration);
  uint64_t v31 = v30;
  objc_msgSend(v3, sel_inertialTargetSmoothingRatio);
  double v33 = v32;
  objc_msgSend(v3, sel_trackingResponse);
  char v22 = 0;
  double v17 = v33 * v34;
  uint64_t v24 = 0;
LABEL_20:
  double result = v38;
  *(double *)a3 = v38;
  *(void *)(a3 + 8) = v12;
  *(unsigned char *)(a3 + 16) = v22;
  *(unsigned char *)(a3 + 17) = v22;
  *(void *)(a3 + 24) = v24;
  *(void *)(a3 + 32) = v23;
  *(void *)(a3 + 40) = v19;
  *(void *)(a3 + 48) = v21;
  *(double *)(a3 + 56) = v17;
  *(void *)(a3 + 64) = v31;
  *(void *)(a3 + 72) = v16;
  return result;
}

id SUIAFluidBehaviorSettings.bsAnimationSettings()()
{
  v7[1] = *(double *)MEMORY[0x263EF8340];
  double v6 = 0.0;
  v7[0] = 0.0;
  objc_msgSend(v0, sel_dampingRatio);
  double v2 = v1;
  objc_msgSend(v0, sel_response);
  SUIAConvertDampingRatioAndResponseToTensionAndFriction(v7, &v6, v2, v3);
  id v4 = objc_msgSend(self, sel_settingsWithMass_stiffness_damping_, 1.0, v7[0], v6);
  return v4;
}

Swift::Void __swiftcall SUIAFluidBehaviorSettings.setFrameRateRange(_:highFrameRateReason:)(__C::CAFrameRateRange _, Swift::UInt32 highFrameRateReason)
{
  uint64_t v3 = *(void *)&highFrameRateReason;
  Swift::Float preferred = _.__preferred;
  Swift::Float maximum = _.maximum;
  Swift::Float minimum = _.minimum;
  id v7 = objc_msgSend(v2, sel_preferredFrameRateRange);
  if (v7)
  {
    id v11 = v7;
    *(Swift::Float *)&double v8 = minimum;
    *(Swift::Float *)&double v9 = maximum;
    *(Swift::Float *)&double v10 = preferred;
    objc_msgSend(v7, sel_setFrameRateRange_highFrameRateReason_, v3, v8, v9, v10);
  }
  else
  {
    __break(1u);
  }
}

__C::CAFrameRateRange __swiftcall SUIAFluidBehaviorSettings.frameRateRange()()
{
  id v1 = objc_msgSend(v0, sel_preferredFrameRateRange);
  if (v1)
  {
    uint64_t v5 = v1;
    objc_msgSend(v1, sel_frameRateRange);
    float v7 = v6;
    float v9 = v8;
    float v11 = v10;

    float v2 = v7;
    float v3 = v9;
    float v4 = v11;
  }
  else
  {
    __break(1u);
  }
  result.__Swift::Float preferred = v4;
  result.Swift::Float maximum = v3;
  result.Swift::Float minimum = v2;
  return result;
}

Swift::UInt32 __swiftcall SUIAFluidBehaviorSettings.highFrameRateReason()()
{
  id v1 = objc_msgSend(v0, sel_preferredFrameRateRange);
  if (v1)
  {
    float v2 = v1;
    unsigned int v3 = objc_msgSend(v1, sel_highFrameRateReason);

    LODWORD(v1) = v3;
  }
  else
  {
    __break(1u);
  }
  return v1;
}

id static SUIAFluidBehaviorSettings.settingsControllerModule()()
{
  ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v1 = (void *)sub_25E75BEA0();
  id v2 = objc_msgSend(ObjCClassFromMetadata, sel__moduleWithSectionTitle_, v1);

  return v2;
}

uint64_t SUIAFluidBehaviorSettings.description.getter()
{
  id v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7040F0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_25E75FB80;
  v18.receiver = v0;
  v18.super_class = (Class)SUIAFluidBehaviorSettings;
  id v3 = objc_msgSendSuper2(&v18, sel_description);
  uint64_t v4 = sub_25E75BEB0();
  uint64_t v6 = v5;

  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 40) = v6;
  v17[1] = 0xE000000000000000;
  sub_25E75C0A0();
  sub_25E75BEE0();
  objc_msgSend(v1, sel_behaviorType);
  type metadata accessor for FluidBehaviorType(0);
  sub_25E75C110();
  *(void *)(v2 + 48) = 0;
  *(void *)(v2 + 56) = v17[1];
  v17[0] = 0x203A656D616ELL;
  v17[1] = 0xE600000000000000;
  id v7 = objc_msgSend(v1, sel_name);
  if (v7)
  {
    float v8 = v7;
    sub_25E75BEB0();
  }
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 64) = v17[0];
  *(void *)(v2 + 72) = v17[1];
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v17, "dampingRatio: ");
  HIBYTE(v17[1]) = -18;
  objc_msgSend(v1, sel_dampingRatio);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  uint64_t v9 = v17[1];
  *(void *)(v2 + 80) = v17[0];
  *(void *)(v2 + 88) = v9;
  strcpy((char *)v17, "response: ");
  BYTE3(v17[1]) = 0;
  HIDWORD(v17[1]) = -369098752;
  objc_msgSend(v1, sel_response);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  uint64_t v10 = v17[1];
  *(void *)(v2 + 96) = v17[0];
  *(void *)(v2 + 104) = v10;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_retargetImpulse);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 112) = 0xD000000000000011;
  *(void *)(v2 + 120) = 0x800000025E761CB0;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_trackingDampingRatio);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 128) = 0xD000000000000016;
  *(void *)(v2 + 136) = 0x800000025E761CD0;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_trackingResponse);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 144) = 0xD000000000000012;
  *(void *)(v2 + 152) = 0x800000025E761CF0;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_trackingRetargetImpulse);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 160) = 0xD000000000000019;
  *(void *)(v2 + 168) = 0x800000025E761D10;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_smoothingAndProjectionEnabled);
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 176) = 0xD00000000000001FLL;
  *(void *)(v2 + 184) = 0x800000025E761D30;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_dampingRatioSmoothing);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 192) = 0xD000000000000017;
  *(void *)(v2 + 200) = 0x800000025E761D50;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_responseSmoothing);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 208) = 0xD000000000000013;
  *(void *)(v2 + 216) = 0x800000025E761D70;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_trackingDampingRatioSmoothing);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 224) = 0xD00000000000001FLL;
  *(void *)(v2 + 232) = 0x800000025E761D90;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_trackingResponseSmoothing);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 240) = 0xD00000000000001BLL;
  *(void *)(v2 + 248) = 0x800000025E761DB0;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_inertialTargetSmoothingRatio);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 256) = 0xD00000000000001ELL;
  *(void *)(v2 + 264) = 0x800000025E761DD0;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  objc_msgSend(v1, sel_inertialProjectionDeceleration);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  *(void *)(v2 + 272) = 0xD000000000000020;
  *(void *)(v2 + 280) = 0x800000025E761DF0;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  v17[0] = 0xD000000000000019;
  v17[1] = 0x800000025E761E20;
  id v11 = objc_msgSend(v1, sel_preferredFrameRateRange);
  if (v11)
  {
    uint64_t v12 = v11;
    id v13 = objc_msgSend(v11, sel_description);

    sub_25E75BEB0();
  }
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  uint64_t v14 = v17[1];
  *(void *)(v2 + 288) = v17[0];
  *(void *)(v2 + 296) = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7040F8);
  sub_25E71827C();
  uint64_t v15 = sub_25E75BE80();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t SUIAFluidBehaviorSettings.copy()@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  objc_msgSend(v4, sel_setBehaviorType_, objc_msgSend(v2, sel_behaviorType));
  id v5 = objc_msgSend(v2, sel_name);
  objc_msgSend(v4, sel_setName_, v5);

  objc_msgSend(v2, sel_dampingRatio);
  objc_msgSend(v4, sel_setDampingRatio_);
  objc_msgSend(v2, sel_response);
  objc_msgSend(v4, sel_setResponse_);
  objc_msgSend(v2, sel_retargetImpulse);
  objc_msgSend(v4, sel_setRetargetImpulse_);
  objc_msgSend(v2, sel_trackingDampingRatio);
  objc_msgSend(v4, sel_setTrackingDampingRatio_);
  objc_msgSend(v2, sel_trackingResponse);
  objc_msgSend(v4, sel_setTrackingResponse_);
  objc_msgSend(v2, sel_trackingRetargetImpulse);
  objc_msgSend(v4, sel_setTrackingRetargetImpulse_);
  objc_msgSend(v4, sel_setSmoothingAndProjectionEnabled_, objc_msgSend(v2, sel_smoothingAndProjectionEnabled));
  objc_msgSend(v2, sel_dampingRatioSmoothing);
  objc_msgSend(v4, sel_setDampingRatioSmoothing_);
  objc_msgSend(v2, sel_responseSmoothing);
  objc_msgSend(v4, sel_setResponseSmoothing_);
  objc_msgSend(v2, sel_trackingDampingRatioSmoothing);
  objc_msgSend(v4, sel_setTrackingDampingRatioSmoothing_);
  objc_msgSend(v2, sel_trackingResponseSmoothing);
  objc_msgSend(v4, sel_setTrackingResponseSmoothing_);
  objc_msgSend(v2, sel_inertialTargetSmoothingRatio);
  objc_msgSend(v4, sel_setInertialTargetSmoothingRatio_);
  objc_msgSend(v2, sel_inertialProjectionDeceleration);
  objc_msgSend(v4, sel_setInertialProjectionDeceleration_);
  id v6 = objc_msgSend(v2, sel_preferredFrameRateRange);
  objc_msgSend(v4, sel_setPreferredFrameRateRange_, v6);

  uint64_t result = type metadata accessor for SUIAFluidBehaviorSettings(v7);
  a1[3] = result;
  *a1 = v4;
  return result;
}

BOOL SUIAFluidBehaviorSettings.isEqual(_:)(uint64_t a1)
{
  uint64_t v2 = sub_25E718334(a1, (uint64_t)v80);
  if (!v81)
  {
    sub_25E71839C((uint64_t)v80);
    return 0;
  }
  type metadata accessor for SUIAFluidBehaviorSettings(v2);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v3 = objc_msgSend(v1, sel_behaviorType);
  if (v3 != objc_msgSend(v79, sel_behaviorType)) {
    goto LABEL_57;
  }
  id v4 = objc_msgSend(v1, sel_name);
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = sub_25E75BEB0();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  id v9 = objc_msgSend(v79, sel_name);
  if (!v9)
  {
    if (!v8) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  uint64_t v10 = v9;
  uint64_t v11 = sub_25E75BEB0();
  uint64_t v13 = v12;

  if (!v8)
  {
    if (!v13) {
      goto LABEL_19;
    }
    goto LABEL_17;
  }
  if (!v13)
  {
LABEL_17:

    swift_bridgeObjectRelease();
    return 0;
  }
  if (v6 == v11 && v8 == v13)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_25E75C190();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0) {
      goto LABEL_57;
    }
  }
LABEL_19:
  objc_msgSend(v1, sel_dampingRatio);
  double v16 = v15;
  objc_msgSend(v79, sel_dampingRatio);
  if (v16 != v17) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_response);
  double v19 = v18;
  objc_msgSend(v79, sel_response);
  if (v19 != v20) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_retargetImpulse);
  double v22 = v21;
  objc_msgSend(v79, sel_retargetImpulse);
  if (v22 != v23) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_trackingDampingRatio);
  double v25 = v24;
  objc_msgSend(v79, sel_trackingDampingRatio);
  if (v25 != v26) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_trackingResponse);
  double v28 = v27;
  objc_msgSend(v79, sel_trackingResponse);
  if (v28 != v29) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_trackingRetargetImpulse);
  double v31 = v30;
  objc_msgSend(v79, sel_trackingRetargetImpulse);
  if (v31 != v32) {
    goto LABEL_57;
  }
  unsigned int v33 = objc_msgSend(v1, sel_smoothingAndProjectionEnabled);
  if (v33 != objc_msgSend(v79, sel_smoothingAndProjectionEnabled)) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_dampingRatioSmoothing);
  double v35 = v34;
  objc_msgSend(v79, sel_dampingRatioSmoothing);
  if (v35 != v36) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_responseSmoothing);
  double v38 = v37;
  objc_msgSend(v79, sel_responseSmoothing);
  if (v38 != v39) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_trackingDampingRatioSmoothing);
  double v41 = v40;
  objc_msgSend(v79, sel_trackingDampingRatioSmoothing);
  if (v41 != v42) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_trackingResponseSmoothing);
  double v44 = v43;
  objc_msgSend(v79, sel_trackingResponseSmoothing);
  if (v44 != v45) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_inertialTargetSmoothingRatio);
  double v47 = v46;
  objc_msgSend(v79, sel_inertialTargetSmoothingRatio);
  if (v47 != v48) {
    goto LABEL_57;
  }
  objc_msgSend(v1, sel_inertialProjectionDeceleration);
  double v50 = v49;
  objc_msgSend(v79, sel_inertialProjectionDeceleration);
  if (v50 != v51) {
    goto LABEL_57;
  }
  id v52 = objc_msgSend(v1, sel_preferredFrameRateRange);
  uint64_t v53 = v52;
  if (v52)
  {
    unsigned int v54 = objc_msgSend(v52, sel_highFrameRateReason);
  }
  else
  {
    unsigned int v54 = 0;
  }
  id v55 = objc_msgSend(v79, sel_preferredFrameRateRange);
  if (v55)
  {
    long long v56 = v55;
    unsigned int v57 = objc_msgSend(v55, sel_highFrameRateReason);

    if (!v53 || v54 != v57) {
      goto LABEL_57;
    }
  }
  else if (v53)
  {
    goto LABEL_57;
  }
  id v58 = objc_msgSend(v1, sel_preferredFrameRateRange);
  uint64_t v59 = v58;
  if (v58)
  {
    unsigned int v60 = objc_msgSend(v58, sel_minimum);
  }
  else
  {
    unsigned int v60 = 0;
  }
  id v61 = objc_msgSend(v79, sel_preferredFrameRateRange);
  if (v61)
  {
    uint64_t v62 = v61;
    unsigned int v63 = objc_msgSend(v61, sel_minimum);

    if (!v59 || v60 != v63) {
      goto LABEL_57;
    }
  }
  else if (v59)
  {
    goto LABEL_57;
  }
  id v64 = objc_msgSend(v1, sel_preferredFrameRateRange);
  uint64_t v65 = v64;
  if (v64)
  {
    unsigned int v66 = objc_msgSend(v64, sel_maximum);
  }
  else
  {
    unsigned int v66 = 0;
  }
  id v67 = objc_msgSend(v79, sel_preferredFrameRateRange);
  if (v67)
  {
    uint64_t v68 = v67;
    unsigned int v69 = objc_msgSend(v67, sel_maximum);

    if (v65 && v66 == v69) {
      goto LABEL_54;
    }
LABEL_57:

    return 0;
  }
  if (v65) {
    goto LABEL_57;
  }
LABEL_54:
  id v70 = objc_msgSend(v1, sel_preferredFrameRateRange);
  uint64_t v71 = v70;
  if (v70)
  {
    unsigned int v72 = objc_msgSend(v70, sel_preferred);
  }
  else
  {
    unsigned int v72 = 0;
  }
  id v75 = objc_msgSend(v79, sel_preferredFrameRateRange);
  char v76 = v75;
  BOOL v73 = v75 == 0;
  if (v75)
  {
    unsigned int v77 = objc_msgSend(v75, sel_preferred);
  }
  else
  {
    unsigned int v77 = 0;
  }

  if (v71) {
    return v76 && v72 == v77;
  }
  return v73;
}

void SUIAFluidBehaviorSettings.hash.getter()
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F29C60]), sel_init);
  id v2 = objc_msgSend(v1, sel_appendInteger_, objc_msgSend(v0, sel_behaviorType));

  if (!v2)
  {
    __break(1u);
    goto LABEL_22;
  }
  id v3 = objc_msgSend(v0, sel_name);
  id v4 = objc_msgSend(v2, sel_appendString_, v3);

  if (!v4)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  objc_msgSend(v0, sel_dampingRatio);
  id v5 = objc_msgSend(v4, sel_appendCGFloat_);

  if (!v5)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  objc_msgSend(v0, sel_response);
  id v6 = objc_msgSend(v5, sel_appendCGFloat_);

  if (!v6)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  objc_msgSend(v0, sel_retargetImpulse);
  id v7 = objc_msgSend(v6, sel_appendCGFloat_);

  if (!v7)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  objc_msgSend(v0, sel_trackingDampingRatio);
  id v8 = objc_msgSend(v7, sel_appendCGFloat_);

  if (!v8)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  objc_msgSend(v0, sel_trackingResponse);
  id v9 = objc_msgSend(v8, sel_appendCGFloat_);

  if (!v9)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  objc_msgSend(v0, sel_trackingRetargetImpulse);
  id v10 = objc_msgSend(v9, sel_appendCGFloat_);

  if (!v10)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  id v11 = objc_msgSend(v10, sel_appendBool_, objc_msgSend(v0, sel_smoothingAndProjectionEnabled));

  if (!v11)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  objc_msgSend(v0, sel_dampingRatioSmoothing);
  id v12 = objc_msgSend(v11, sel_appendCGFloat_);

  if (!v12)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  objc_msgSend(v0, sel_responseSmoothing);
  id v13 = objc_msgSend(v12, sel_appendCGFloat_);

  if (!v13)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  objc_msgSend(v0, sel_trackingDampingRatioSmoothing);
  id v14 = objc_msgSend(v13, sel_appendCGFloat_);

  if (!v14)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  objc_msgSend(v0, sel_trackingResponseSmoothing);
  id v15 = objc_msgSend(v14, sel_appendCGFloat_);

  if (!v15)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  objc_msgSend(v0, sel_inertialTargetSmoothingRatio);
  id v16 = objc_msgSend(v15, sel_appendCGFloat_);

  if (!v16)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  objc_msgSend(v0, sel_inertialProjectionDeceleration);
  id v17 = objc_msgSend(v16, sel_appendCGFloat_);

  if (!v17)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  id v18 = objc_msgSend(v0, sel_preferredFrameRateRange);
  id v19 = objc_msgSend(v17, sel_appendObject_, v18);

  if (!v19)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  id v20 = objc_msgSend(v0, sel_preferredFrameRateRange);
  id v21 = objc_msgSend(v19, sel_appendObject_, v20);

  if (!v21)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  id v22 = objc_msgSend(v0, sel_preferredFrameRateRange);
  id v23 = objc_msgSend(v21, sel_appendObject_, v22);

  if (!v23)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  id v24 = objc_msgSend(v0, sel_preferredFrameRateRange);
  id v25 = objc_msgSend(v23, sel_appendObject_, v24);

  if (v25)
  {
    objc_msgSend(v25, sel_hash);

    return;
  }
LABEL_39:
  __break(1u);
}

void _sSo25SUIAFluidBehaviorSettingsC20SystemUIAnimationKitE7_module16withSectionTitleSo8PTModuleCSgSSSg_tFZ_0()
{
  sub_25E711DB8(0, &qword_26A704178);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704180);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25E75FB90;
  uint64_t v1 = MEMORY[0x263F8D6C8];
  uint64_t v2 = MEMORY[0x263F8D750];
  *(void *)(v0 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 32) = 0;
  *(void *)(v0 + 96) = v1;
  *(void *)(v0 + 104) = v2;
  *(void *)(v0 + 72) = 1;
  id v3 = (void *)sub_25E75BFC0();
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_25E75FB40;
  *(void *)(v4 + 56) = v1;
  *(void *)(v4 + 64) = v2;
  *(void *)(v4 + 32) = 1;
  uint64_t v130 = (void *)sub_25E75BFC0();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_25E75FB40;
  *(void *)(v5 + 56) = v1;
  *(void *)(v5 + 64) = v2;
  *(void *)(v5 + 32) = 1;
  uint64_t v129 = (void *)sub_25E75BFC0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_25E75FB40;
  *(void *)(v6 + 56) = v1;
  *(void *)(v6 + 64) = v2;
  *(void *)(v6 + 32) = 1;
  uint64_t v7 = sub_25E75BFC0();
  id v8 = (void *)sub_25E75BEA0();
  id v9 = (void *)sub_25E75BEA0();
  id v10 = objc_msgSend(self, sel_rowWithTitle_valueKeyPath_, v8, v9);

  if (!v10)
  {
    __break(1u);
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  uint64_t v133 = sub_25E711DB8(0, &qword_26A704188);
  *(void *)&long long v132 = v10;
  id v11 = sub_25E7445E8(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v13 = *((void *)v11 + 2);
  unint64_t v12 = *((void *)v11 + 3);
  if (v13 >= v12 >> 1) {
    id v11 = sub_25E7445E8((char *)(v12 > 1), v13 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v13 + 1;
  sub_25E7136C0(&v132, &v11[32 * v13 + 32]);
  id v14 = (void *)sub_25E75BEA0();
  id v15 = (void *)sub_25E75BEA0();
  id v16 = objc_msgSend(self, sel_rowWithTitle_valueKeyPath_, v14, v15);

  if (!v16) {
    goto LABEL_53;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_25E75FB90;
  *(void *)(v17 + 32) = 0;
  *(void *)(v17 + 88) = v1;
  *(void *)(v17 + 56) = v1;
  *(void *)(v17 + 64) = 1;
  id v18 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_25E75FB90;
  uint64_t v20 = MEMORY[0x263F8D310];
  *(void *)(v19 + 32) = 0x676E69727053;
  *(void *)(v19 + 40) = 0xE600000000000000;
  *(void *)(v19 + 88) = v20;
  *(void *)(v19 + 56) = v20;
  *(void *)(v19 + 64) = 0xD000000000000012;
  *(void *)(v19 + 72) = 0x800000025E7623D0;
  id v21 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(v16, sel_possibleValues_titles_, v18, v21);

  if (!v22)
  {
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  unint64_t v24 = *((void *)v11 + 2);
  unint64_t v23 = *((void *)v11 + 3);
  if (v24 >= v23 >> 1) {
    id v11 = sub_25E7445E8((char *)(v23 > 1), v24 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v24 + 1;
  sub_25E7136C0(&v132, &v11[32 * v24 + 32]);
  id v25 = (void *)sub_25E75BEA0();
  double v26 = (void *)sub_25E75BEA0();
  double v27 = self;
  id v28 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v25, v26);

  if (!v28) {
    goto LABEL_55;
  }
  id v29 = v3;
  id v30 = sub_25E7553D8(3, 0, v3);

  uint64_t v31 = sub_25E711DB8(0, (unint64_t *)&qword_26A704190);
  uint64_t v133 = v31;
  *(void *)&long long v132 = v30;
  unint64_t v33 = *((void *)v11 + 2);
  unint64_t v32 = *((void *)v11 + 3);
  uint64_t v128 = (void *)v7;
  if (v33 >= v32 >> 1) {
    id v11 = sub_25E7445E8((char *)(v32 > 1), v33 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v33 + 1;
  sub_25E7136C0(&v132, &v11[32 * v33 + 32]);
  double v34 = (void *)sub_25E75BEA0();
  double v35 = (void *)sub_25E75BEA0();
  id v36 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v34, v35);

  if (!v36) {
    goto LABEL_56;
  }
  id v37 = v29;
  id v38 = sub_25E7553D8(3, 0, v3);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v38;
  unint64_t v40 = *((void *)v11 + 2);
  unint64_t v39 = *((void *)v11 + 3);
  if (v40 >= v39 >> 1) {
    id v11 = sub_25E7445E8((char *)(v39 > 1), v40 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v40 + 1;
  sub_25E7136C0(&v132, &v11[32 * v40 + 32]);
  double v41 = (void *)sub_25E75BEA0();
  double v42 = (void *)sub_25E75BEA0();
  id v43 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v41, v42);

  if (!v43) {
    goto LABEL_57;
  }
  id v44 = v37;
  id v45 = sub_25E7553D8(3, 0, v3);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v45;
  unint64_t v47 = *((void *)v11 + 2);
  unint64_t v46 = *((void *)v11 + 3);
  if (v47 >= v46 >> 1) {
    id v11 = sub_25E7445E8((char *)(v46 > 1), v47 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v47 + 1;
  sub_25E7136C0(&v132, &v11[32 * v47 + 32]);
  double v48 = (void *)sub_25E75BEA0();
  double v49 = (void *)sub_25E75BEA0();
  id v50 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v48, v49);

  if (!v50) {
    goto LABEL_58;
  }
  id v51 = v130;
  id v52 = sub_25E7553D8(3, 0, v130);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v52;
  unint64_t v54 = *((void *)v11 + 2);
  unint64_t v53 = *((void *)v11 + 3);
  if (v54 >= v53 >> 1) {
    id v11 = sub_25E7445E8((char *)(v53 > 1), v54 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v54 + 1;
  sub_25E7136C0(&v132, &v11[32 * v54 + 32]);
  id v55 = (void *)sub_25E75BEA0();
  long long v56 = (void *)sub_25E75BEA0();
  id v57 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v55, v56);

  if (!v57) {
    goto LABEL_59;
  }
  id v58 = v51;
  id v59 = sub_25E7553D8(3, 0, v130);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v59;
  unint64_t v61 = *((void *)v11 + 2);
  unint64_t v60 = *((void *)v11 + 3);
  uint64_t v127 = v58;
  if (v61 >= v60 >> 1) {
    id v11 = sub_25E7445E8((char *)(v60 > 1), v61 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v61 + 1;
  sub_25E7136C0(&v132, &v11[32 * v61 + 32]);
  uint64_t v62 = (void *)sub_25E75BEA0();
  unsigned int v63 = (void *)sub_25E75BEA0();
  id v64 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v62, v63);

  if (!v64) {
    goto LABEL_60;
  }
  id v65 = v44;
  id v66 = sub_25E7553D8(3, 0, v3);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v66;
  unint64_t v68 = *((void *)v11 + 2);
  unint64_t v67 = *((void *)v11 + 3);
  if (v68 >= v67 >> 1) {
    id v11 = sub_25E7445E8((char *)(v67 > 1), v68 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v68 + 1;
  sub_25E7136C0(&v132, &v11[32 * v68 + 32]);
  unsigned int v69 = (void *)sub_25E75BEA0();
  id v70 = (void *)sub_25E75BEA0();
  id v71 = objc_msgSend(self, sel_rowWithTitle_valueKeyPath_, v69, v70);

  if (!v71) {
    goto LABEL_61;
  }
  uint64_t v133 = sub_25E711DB8(0, &qword_26A704198);
  *(void *)&long long v132 = v71;
  unint64_t v73 = *((void *)v11 + 2);
  unint64_t v72 = *((void *)v11 + 3);
  if (v73 >= v72 >> 1) {
    id v11 = sub_25E7445E8((char *)(v72 > 1), v73 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v73 + 1;
  sub_25E7136C0(&v132, &v11[32 * v73 + 32]);
  uint64_t v74 = (void *)sub_25E75BEA0();
  id v75 = (void *)sub_25E75BEA0();
  id v76 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v74, v75);

  if (!v76) {
    goto LABEL_62;
  }
  id v77 = v129;
  id v78 = sub_25E7553D8(3, 0, v129);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v78;
  unint64_t v80 = *((void *)v11 + 2);
  unint64_t v79 = *((void *)v11 + 3);
  uint64_t v131 = v65;
  if (v80 >= v79 >> 1) {
    id v11 = sub_25E7445E8((char *)(v79 > 1), v80 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v80 + 1;
  sub_25E7136C0(&v132, &v11[32 * v80 + 32]);
  uint64_t v81 = (void *)sub_25E75BEA0();
  uint64_t v82 = (void *)sub_25E75BEA0();
  id v83 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v81, v82);

  if (!v83) {
    goto LABEL_63;
  }
  id v84 = v77;
  id v85 = sub_25E7553D8(3, 0, v129);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v85;
  unint64_t v87 = *((void *)v11 + 2);
  unint64_t v86 = *((void *)v11 + 3);
  if (v87 >= v86 >> 1) {
    id v11 = sub_25E7445E8((char *)(v86 > 1), v87 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v87 + 1;
  sub_25E7136C0(&v132, &v11[32 * v87 + 32]);
  uint64_t v88 = (void *)sub_25E75BEA0();
  uint64_t v89 = (void *)sub_25E75BEA0();
  id v90 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v88, v89);

  if (!v90) {
    goto LABEL_64;
  }
  id v91 = v128;
  id v92 = sub_25E7553D8(3, 0, v128);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v92;
  unint64_t v94 = *((void *)v11 + 2);
  unint64_t v93 = *((void *)v11 + 3);
  if (v94 >= v93 >> 1) {
    id v11 = sub_25E7445E8((char *)(v93 > 1), v94 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v94 + 1;
  sub_25E7136C0(&v132, &v11[32 * v94 + 32]);
  long long v95 = (void *)sub_25E75BEA0();
  uint64_t v96 = (void *)sub_25E75BEA0();
  id v97 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v95, v96);

  if (!v97) {
    goto LABEL_65;
  }
  id v98 = v91;
  id v99 = sub_25E7553D8(3, 0, v128);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v99;
  unint64_t v101 = *((void *)v11 + 2);
  unint64_t v100 = *((void *)v11 + 3);
  if (v101 >= v100 >> 1) {
    id v11 = sub_25E7445E8((char *)(v100 > 1), v101 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v101 + 1;
  sub_25E7136C0(&v132, &v11[32 * v101 + 32]);
  uint64_t v102 = (void *)sub_25E75BEA0();
  uint64_t v103 = (void *)sub_25E75BEA0();
  id v104 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v102, v103);

  if (!v104) {
    goto LABEL_66;
  }
  id v105 = v98;
  id v106 = sub_25E7553D8(3, 0, v128);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v106;
  unint64_t v108 = *((void *)v11 + 2);
  unint64_t v107 = *((void *)v11 + 3);
  if (v108 >= v107 >> 1) {
    id v11 = sub_25E7445E8((char *)(v107 > 1), v108 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v108 + 1;
  sub_25E7136C0(&v132, &v11[32 * v108 + 32]);
  uint64_t v109 = (void *)sub_25E75BEA0();
  uint64_t v110 = (void *)sub_25E75BEA0();
  id v111 = objc_msgSend(v27, sel_rowWithTitle_valueKeyPath_, v109, v110);

  if (!v111) {
    goto LABEL_67;
  }
  id v112 = v105;
  id v113 = sub_25E7553D8(7, 0, v128);

  uint64_t v133 = v31;
  *(void *)&long long v132 = v113;
  unint64_t v115 = *((void *)v11 + 2);
  unint64_t v114 = *((void *)v11 + 3);
  if (v115 >= v114 >> 1) {
    id v11 = sub_25E7445E8((char *)(v114 > 1), v115 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v115 + 1;
  sub_25E7136C0(&v132, &v11[32 * v115 + 32]);
  uint64_t v116 = (void *)sub_25E75BEA0();
  uint64_t v117 = (void *)sub_25E75BEA0();
  id v118 = objc_msgSend(self, sel_rowWithTitle_childSettingsKeyPath_, v116, v117);

  if (!v118) {
    goto LABEL_68;
  }
  uint64_t v133 = sub_25E711DB8(0, &qword_26A704058);
  *(void *)&long long v132 = v118;
  unint64_t v120 = *((void *)v11 + 2);
  unint64_t v119 = *((void *)v11 + 3);
  if (v120 >= v119 >> 1) {
    id v11 = sub_25E7445E8((char *)(v119 > 1), v120 + 1, 1, v11);
  }
  *((void *)v11 + 2) = v120 + 1;
  sub_25E7136C0(&v132, &v11[32 * v120 + 32]);
  uint64_t v121 = swift_allocObject();
  *(_OWORD *)(v121 + 16) = xmmword_25E75FB40;
  swift_bridgeObjectRetain();
  uint64_t v122 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v123 = self;
  swift_bridgeObjectRetain();
  char v124 = (void *)sub_25E75BEA0();
  swift_bridgeObjectRelease();
  id v125 = objc_msgSend(v123, sel_sectionWithRows_title_, v122, v124);

  if (v125)
  {
    swift_bridgeObjectRelease();
    *(void *)(v121 + 56) = sub_25E711DB8(0, &qword_26A704060);
    *(void *)(v121 + 32) = v125;
    uint64_t v126 = (void *)sub_25E75BF20();
    swift_bridgeObjectRelease();
    objc_msgSend(v123, sel_moduleWithTitle_contents_, 0, v126);

    return;
  }
LABEL_69:
  __break(1u);
}

unint64_t sub_25E71827C()
{
  unint64_t result = qword_26A704100;
  if (!qword_26A704100)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A7040F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704100);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for SUIAFluidBehaviorSettings(uint64_t a1)
{
  return sub_25E711DB8(a1, &qword_26A704170);
}

uint64_t sub_25E718334(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E71839C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704108);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *keypath_get_selector_behaviorType()
{
  return sel_behaviorType;
}

id sub_25E718408@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_behaviorType);
  *a2 = result;
  return result;
}

id sub_25E71843C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBehaviorType_, *a1);
}

char *keypath_get_selector_name()
{
  return sel_name;
}

char *keypath_get_selector_dampingRatio()
{
  return sel_dampingRatio;
}

id sub_25E718470@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_dampingRatio);
  *a2 = v4;
  return result;
}

id sub_25E7184A4(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDampingRatio_, *a1);
}

char *keypath_get_selector_response()
{
  return sel_response;
}

id sub_25E7184C4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_response);
  *a2 = v4;
  return result;
}

id sub_25E7184F8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setResponse_, *a1);
}

char *keypath_get_selector_retargetImpulse()
{
  return sel_retargetImpulse;
}

id sub_25E718518@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_retargetImpulse);
  *a2 = v4;
  return result;
}

id sub_25E71854C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRetargetImpulse_, *a1);
}

char *keypath_get_selector_trackingDampingRatio()
{
  return sel_trackingDampingRatio;
}

id sub_25E71856C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_trackingDampingRatio);
  *a2 = v4;
  return result;
}

id sub_25E7185A0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTrackingDampingRatio_, *a1);
}

char *keypath_get_selector_trackingResponse()
{
  return sel_trackingResponse;
}

id sub_25E7185C0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_trackingResponse);
  *a2 = v4;
  return result;
}

id sub_25E7185F4(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTrackingResponse_, *a1);
}

char *keypath_get_selector_trackingRetargetImpulse()
{
  return sel_trackingRetargetImpulse;
}

id sub_25E718614@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_trackingRetargetImpulse);
  *a2 = v4;
  return result;
}

id sub_25E718648(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTrackingRetargetImpulse_, *a1);
}

char *keypath_get_selector_smoothingAndProjectionEnabled()
{
  return sel_smoothingAndProjectionEnabled;
}

id sub_25E718668@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_smoothingAndProjectionEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E71869C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSmoothingAndProjectionEnabled_, *a1);
}

char *keypath_get_selector_dampingRatioSmoothing()
{
  return sel_dampingRatioSmoothing;
}

id sub_25E7186BC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_dampingRatioSmoothing);
  *a2 = v4;
  return result;
}

id sub_25E7186F0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDampingRatioSmoothing_, *a1);
}

char *keypath_get_selector_responseSmoothing()
{
  return sel_responseSmoothing;
}

id sub_25E718710@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_responseSmoothing);
  *a2 = v4;
  return result;
}

id sub_25E718744(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setResponseSmoothing_, *a1);
}

char *keypath_get_selector_trackingDampingRatioSmoothing()
{
  return sel_trackingDampingRatioSmoothing;
}

id sub_25E718764@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_trackingDampingRatioSmoothing);
  *a2 = v4;
  return result;
}

id sub_25E718798(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTrackingDampingRatioSmoothing_, *a1);
}

char *keypath_get_selector_trackingResponseSmoothing()
{
  return sel_trackingResponseSmoothing;
}

id sub_25E7187B8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_trackingResponseSmoothing);
  *a2 = v4;
  return result;
}

id sub_25E7187EC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTrackingResponseSmoothing_, *a1);
}

char *keypath_get_selector_inertialTargetSmoothingRatio()
{
  return sel_inertialTargetSmoothingRatio;
}

id sub_25E71880C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_inertialTargetSmoothingRatio);
  *a2 = v4;
  return result;
}

id sub_25E718840(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setInertialTargetSmoothingRatio_, *a1);
}

char *keypath_get_selector_inertialProjectionDeceleration()
{
  return sel_inertialProjectionDeceleration;
}

id sub_25E718860@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_inertialProjectionDeceleration);
  *a2 = v4;
  return result;
}

id sub_25E718894(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setInertialProjectionDeceleration_, *a1);
}

char *keypath_get_selector_preferredFrameRateRange()
{
  return sel_preferredFrameRateRange;
}

id sub_25E7188B4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_preferredFrameRateRange);
  *a2 = result;
  return result;
}

id sub_25E7188F0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setPreferredFrameRateRange_, *a1);
}

void *__swift_project_boxed_opaque_existential_0(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

id sub_25E718998(uint64_t a1)
{
  v10.receiver = v1;
  v10.super_class = (Class)type metadata accessor for ShockwaveIntelligenceSystemLightView();
  objc_msgSendSuper2(&v10, sel_didAddSubview_, a1);
  id v3 = &v1[OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_circleMaskView];
  id result = (id)swift_beginAccess();
  uint64_t v5 = *(void *)v3;
  if (v5) {
    BOOL v6 = v5 == a1;
  }
  else {
    BOOL v6 = 0;
  }
  if (!v6)
  {
    uint64_t v7 = &v1[OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_sideLightMaskView];
    id result = (id)swift_beginAccess();
    uint64_t v8 = *(void *)v7;
    if (!*(void *)v7 || v8 != a1)
    {
      if (v5)
      {
        id result = objc_msgSend(v1, sel_bringSubviewToFront_, v5);
        uint64_t v8 = *(void *)v7;
      }
      if (v8) {
        return objc_msgSend(v1, sel_bringSubviewToFront_);
      }
    }
  }
  return result;
}

void *sub_25E718AE4()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_circleMaskView);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_25E718B54(void *a1)
{
}

id sub_25E718B74(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void **)&v2[OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_circleMaskView];
  id result = (id)swift_beginAccess();
  BOOL v6 = *v4;
  if (!a1)
  {
    if (!v6) {
      return result;
    }
LABEL_12:
    objc_msgSend(v2, sel_addSubview_);
    if (*v4) {
      objc_msgSend(v2, sel_bringSubviewToFront_);
    }
LABEL_14:
    unint64_t v13 = &v2[OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_sideLightMaskView];
    id result = (id)swift_beginAccess();
    if (*(void *)v13) {
      return objc_msgSend(v2, sel_bringSubviewToFront_);
    }
    return result;
  }
  if (v6) {
    BOOL v7 = a1 == v6;
  }
  else {
    BOOL v7 = 0;
  }
  if (!v7)
  {
    id v8 = a1;
    id v9 = objc_msgSend(v8, sel_superview);
    if (v9)
    {
      objc_super v10 = v9;
      sub_25E7196E8();
      id v11 = v2;
      id v12 = v10;
      LOBYTE(v10) = sub_25E75C020();

      if (v10) {
        objc_msgSend(v8, sel_removeFromSuperview);
      }
    }

    if (!*v4) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  return result;
}

void (*sub_25E718CD0(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_circleMaskView;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = (void **)(v1 + v4);
  swift_beginAccess();
  BOOL v6 = *v5;
  v3[3] = *v5;
  id v7 = v6;
  return sub_25E718D58;
}

void sub_25E718D58(uint64_t a1, char a2)
{
}

id sub_25E718D7C(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = (id *)(a1 + *a3);
  swift_beginAccess();
  return *v3;
}

void *sub_25E718DC4()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_sideLightMaskView);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

uint64_t type metadata accessor for ShockwaveIntelligenceSystemLightView()
{
  return self;
}

void sub_25E718E58(char *a1, uint64_t a2, void *a3, void *a4, void (*a5)(void *))
{
  id v8 = (void **)&a1[*a4];
  swift_beginAccess();
  id v9 = *v8;
  *id v8 = a3;
  id v10 = a3;
  id v11 = a1;
  a5(v9);
}

void sub_25E718EE8(void *a1)
{
}

void sub_25E718F08(void *a1, void *a2, void (*a3)(void *))
{
  BOOL v6 = (void **)(v3 + *a2);
  swift_beginAccess();
  id v7 = *v6;
  *BOOL v6 = a1;
  id v8 = a1;
  a3(v7);
}

void sub_25E718F84(void **a1, void *a2, uint64_t a3, uint64_t a4, void *a5, void (*a6)(void *))
{
  id v7 = *a1;
  id v8 = (void **)(*a2 + *a5);
  swift_beginAccess();
  id v9 = *v8;
  *id v8 = v7;
  id v10 = v7;
  a6(v9);
}

id sub_25E719008(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (void **)&v2[OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_sideLightMaskView];
  id result = (id)swift_beginAccess();
  BOOL v6 = *v4;
  if (!a1)
  {
    if (!v6) {
      return result;
    }
LABEL_12:
    objc_msgSend(v2, sel_addSubview_);
    goto LABEL_13;
  }
  if (v6) {
    BOOL v7 = a1 == v6;
  }
  else {
    BOOL v7 = 0;
  }
  if (v7) {
    return result;
  }
  id v8 = a1;
  id v9 = objc_msgSend(v8, sel_superview);
  if (v9)
  {
    id v10 = v9;
    sub_25E7196E8();
    id v11 = v2;
    id v12 = v10;
    LOBYTE(v10) = sub_25E75C020();

    if (v10) {
      objc_msgSend(v8, sel_removeFromSuperview);
    }
  }

  if (*v4) {
    goto LABEL_12;
  }
LABEL_13:
  unint64_t v13 = &v2[OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_circleMaskView];
  id result = (id)swift_beginAccess();
  if (*(void *)v13) {
    id result = objc_msgSend(v2, sel_bringSubviewToFront_);
  }
  if (*v4) {
    return objc_msgSend(v2, sel_bringSubviewToFront_);
  }
  return result;
}

void (*sub_25E719160(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_sideLightMaskView;
  v3[4] = v1;
  v3[5] = v4;
  uint64_t v5 = (void **)(v1 + v4);
  swift_beginAccess();
  BOOL v6 = *v5;
  v3[3] = *v5;
  id v7 = v6;
  return sub_25E7191E8;
}

void sub_25E7191E8(uint64_t a1, char a2)
{
}

void sub_25E719200(uint64_t a1, char a2, void (*a3)(void *))
{
  uint64_t v4 = *(void **)a1;
  BOOL v6 = (void **)(*(void *)a1 + 24);
  uint64_t v5 = *v6;
  uint64_t v8 = *(void *)(*(void *)a1 + 32);
  uint64_t v7 = *(void *)(*(void *)a1 + 40);
  id v9 = *(void **)(v8 + v7);
  *(void *)(v8 + v7) = *v6;
  if (a2)
  {
    id v10 = v5;
    a3(v9);

    id v9 = *v6;
  }
  else
  {
    id v11 = v5;
    a3(v9);
  }
  free(v4);
}

id ShockwaveIntelligenceSystemLightView.__allocating_init(frame:preferringAudioReactivity:)(char a1, double a2, double a3, double a4, double a5)
{
  id v11 = objc_allocWithZone(v5);
  return objc_msgSend(v11, sel_initWithFrame_preferringAudioReactivity_, a1 & 1, a2, a3, a4, a5);
}

id ShockwaveIntelligenceSystemLightView.init(frame:preferringAudioReactivity:)(char a1, double a2, double a3, double a4, double a5)
{
  *(void *)&v5[OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_circleMaskView] = 0;
  *(void *)&v5[OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_sideLightMaskView] = 0;
  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for ShockwaveIntelligenceSystemLightView();
  return objc_msgSendSuper2(&v12, sel_initWithFrame_preferringAudioReactivity_, a1 & 1, a2, a3, a4, a5);
}

id ShockwaveIntelligenceSystemLightView.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShockwaveIntelligenceSystemLightView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_25E71946C@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_circleMaskView, a2);
}

void sub_25E719478(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

id sub_25E7194AC@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR___SUIAShockwaveIntelligenceSystemLightView_sideLightMaskView, a2);
}

id keypath_getTm@<X0>(void *a1@<X0>, void *a2@<X3>, void **a3@<X8>)
{
  uint64_t v4 = (void **)(*a1 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *a3 = *v4;
  return v5;
}

void sub_25E719518(void **a1, void *a2, uint64_t a3, uint64_t a4)
{
}

uint64_t method lookup function for ShockwaveIntelligenceSystemLightView(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ShockwaveIntelligenceSystemLightView);
}

uint64_t dispatch thunk of ShockwaveIntelligenceSystemLightView.circleMaskView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of ShockwaveIntelligenceSystemLightView.circleMaskView.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of ShockwaveIntelligenceSystemLightView.circleMaskView.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

uint64_t dispatch thunk of ShockwaveIntelligenceSystemLightView.sideLightMaskView.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of ShockwaveIntelligenceSystemLightView.sideLightMaskView.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ShockwaveIntelligenceSystemLightView.sideLightMaskView.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

unint64_t sub_25E7196E8()
{
  unint64_t result = qword_26A7041B0;
  if (!qword_26A7041B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A7041B0);
  }
  return result;
}

double SUIAShockwavePrototypeSettings.maximumHintDuration.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_maximumHintDuration;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.maximumHintDuration.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_maximumHintDuration);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.totalDuration.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_totalDuration;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.totalDuration.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_totalDuration);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.visualizeEffectMasks.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_visualizeEffectMasks);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.visualizeEffectMasks.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_visualizeEffectMasks);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.donutMaskInitialEdgeOutsetProportion.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_donutMaskInitialEdgeOutsetProportion;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.donutMaskInitialEdgeOutsetProportion.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_donutMaskInitialEdgeOutsetProportion);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.finalFitVsDiameterRatioShortEdgeSmallScreen.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_finalFitVsDiameterRatioShortEdgeSmallScreen;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.finalFitVsDiameterRatioShortEdgeSmallScreen.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_finalFitVsDiameterRatioShortEdgeSmallScreen);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.finalFitVsDiameterRatioLongEdgeSmallScreen.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_finalFitVsDiameterRatioLongEdgeSmallScreen;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.finalFitVsDiameterRatioLongEdgeSmallScreen.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_finalFitVsDiameterRatioLongEdgeSmallScreen);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.finalFitVsDiameterRatioShortEdgeBigScreen.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_finalFitVsDiameterRatioShortEdgeBigScreen;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.finalFitVsDiameterRatioShortEdgeBigScreen.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_finalFitVsDiameterRatioShortEdgeBigScreen);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.finalFitVsDiameterRatioLongEdgeBigScreen.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_finalFitVsDiameterRatioLongEdgeBigScreen;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.finalFitVsDiameterRatioLongEdgeBigScreen.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_finalFitVsDiameterRatioLongEdgeBigScreen);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.edgeLightHintTransitionDelay.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_edgeLightHintTransitionDelay;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.edgeLightHintTransitionDelay.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_edgeLightHintTransitionDelay);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.donutMaskEndTransitionDelay.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_donutMaskEndTransitionDelay;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.donutMaskEndTransitionDelay.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_donutMaskEndTransitionDelay);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

id SUIAShockwavePrototypeSettings.donutMaskPositionAnimationSettings.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_donutMaskPositionAnimationSettings);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.donutMaskPositionAnimationSettings.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.chromaticAberrationInitialDonutMask.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_chromaticAberrationInitialDonutMask);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.chromaticAberrationInitialDonutMask.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.chromaticAberrationFinalDonutMaskSmallScreen.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_chromaticAberrationFinalDonutMaskSmallScreen);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.chromaticAberrationFinalDonutMaskSmallScreen.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.chromaticAberrationFinalDonutMaskLargeScreen.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_chromaticAberrationFinalDonutMaskLargeScreen);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.chromaticAberrationFinalDonutMaskLargeScreen.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.colorFillInitialCircleMask.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_colorFillInitialCircleMask);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.colorFillInitialCircleMask.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.colorFillHintCircleMask.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_colorFillHintCircleMask);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.colorFillHintCircleMask.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.colorFillFinalCircleMask.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_colorFillFinalCircleMask);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.colorFillFinalCircleMask.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.edgeLightInitialCircleMask.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_edgeLightInitialCircleMask);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.edgeLightInitialCircleMask.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.edgeLightHintCircleMask.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_edgeLightHintCircleMask);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.edgeLightHintCircleMask.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.edgeLightFinalCircleMask.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_edgeLightFinalCircleMask);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.edgeLightFinalCircleMask.setter(void *a1)
{
}

double SUIAShockwavePrototypeSettings.aberrationMagnitudeX.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationMagnitudeX;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationMagnitudeX.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationMagnitudeX);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.aberrationMagnitudeY.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationMagnitudeY;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationMagnitudeY.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationMagnitudeY);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.aberrationBlurRadius.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationBlurRadius;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationBlurRadius.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationBlurRadius);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationUseColorSaturate.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationUseColorSaturate);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationUseColorSaturate.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationUseColorSaturate);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.aberrationColorSaturateAmount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationColorSaturateAmount;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationColorSaturateAmount.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationColorSaturateAmount);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationUseEDR.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationUseEDR);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationUseEDR.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationUseEDR);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.aberrationEDRGain.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationEDRGain;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationEDRGain.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationEDRGain);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationUseColorBrightness.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationUseColorBrightness);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationUseColorBrightness.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationUseColorBrightness);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.aberrationColorBrightness.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationColorBrightness;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationColorBrightness.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationColorBrightness);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationUseColorMatrixMultiply.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationUseColorMatrixMultiply);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationUseColorMatrixMultiply.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationUseColorMatrixMultiply);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.aberrationColorMatrixMultiplyFactor.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationColorMatrixMultiplyFactor;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationColorMatrixMultiplyFactor.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationColorMatrixMultiplyFactor);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.aberrationFadeOutDelay.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationFadeOutDelay;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationFadeOutDelay.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationFadeOutDelay);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.aberrationFadeOutDelayIPad.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationFadeOutDelayIPad;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.aberrationFadeOutDelayIPad.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_aberrationFadeOutDelayIPad);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

id SUIAShockwavePrototypeSettings.abberationFadeOutAnimationSettings.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_abberationFadeOutAnimationSettings);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.abberationFadeOutAnimationSettings.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.abberationCancelledFadeOutAnimationSettings.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_abberationCancelledFadeOutAnimationSettings);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.abberationCancelledFadeOutAnimationSettings.setter(void *a1)
{
}

double SUIAShockwavePrototypeSettings.meshSquareFinalSizeDiagonalRatio.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshSquareFinalSizeDiagonalRatio;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.meshSquareFinalSizeDiagonalRatio.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshSquareFinalSizeDiagonalRatio);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.meshRectangularFinalShortDimensionRatio.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshRectangularFinalShortDimensionRatio;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.meshRectangularFinalShortDimensionRatio.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshRectangularFinalShortDimensionRatio);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.meshRectangularFinalLongDimensionRatio.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshRectangularFinalLongDimensionRatio;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.meshRectangularFinalLongDimensionRatio.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshRectangularFinalLongDimensionRatio);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.meshFinalProportionAcrossScreenLongEdge.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshFinalProportionAcrossScreenLongEdge;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.meshFinalProportionAcrossScreenLongEdge.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshFinalProportionAcrossScreenLongEdge);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.meshFinalProportionAcrossScreenShortEdge.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshFinalProportionAcrossScreenShortEdge;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.meshFinalProportionAcrossScreenShortEdge.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshFinalProportionAcrossScreenShortEdge);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.meshFinalProportionTowardsCenterOnLargeDisplays.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshFinalProportionTowardsCenterOnLargeDisplays;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.meshFinalProportionTowardsCenterOnLargeDisplays.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshFinalProportionTowardsCenterOnLargeDisplays);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.meshPointsEndTransitionDelay.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshPointsEndTransitionDelay;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.meshPointsEndTransitionDelay.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshPointsEndTransitionDelay);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.useSiriMeshForCapture.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_useSiriMeshForCapture);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.useSiriMeshForCapture.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_useSiriMeshForCapture);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

id SUIAShockwavePrototypeSettings.meshPointsAnimationSettings.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshPointsAnimationSettings);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.meshPointsAnimationSettings.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.meshPositionAnimationSettings.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshPositionAnimationSettings);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.meshPositionAnimationSettings.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.meshPointsCancelledAnimationSettings.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_meshPointsCancelledAnimationSettings);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.meshPointsCancelledAnimationSettings.setter(void *a1)
{
}

double SUIAShockwavePrototypeSettings.fillLightInitialIntensity.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightInitialIntensity;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.fillLightInitialIntensity.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightInitialIntensity);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.fillLightCaptureInitialIntensity.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightCaptureInitialIntensity;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.fillLightCaptureInitialIntensity.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightCaptureInitialIntensity);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.captureFillWhiteValue.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureFillWhiteValue;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.captureFillWhiteValue.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureFillWhiteValue);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.fillLightFinalIntensity.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightFinalIntensity;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.fillLightFinalIntensity.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightFinalIntensity);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

id SUIAShockwavePrototypeSettings.lightIntensityAnimationSettings.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_lightIntensityAnimationSettings);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.lightIntensityAnimationSettings.setter(void *a1)
{
}

id SUIAShockwavePrototypeSettings.lightIntensityCancelledAnimationSettings.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_lightIntensityCancelledAnimationSettings);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.lightIntensityCancelledAnimationSettings.setter(void *a1)
{
}

double SUIAShockwavePrototypeSettings.fillLightIntensityFinalStateDelay.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightIntensityFinalStateDelay;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.fillLightIntensityFinalStateDelay.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightIntensityFinalStateDelay);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.fillLightColorSaturateAmount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightColorSaturateAmount;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.fillLightColorSaturateAmount.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightColorSaturateAmount);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.fillLightColorBrightnessAmount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightColorBrightnessAmount;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.fillLightColorBrightnessAmount.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightColorBrightnessAmount);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.fillLightColorContrastAmount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightColorContrastAmount;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.fillLightColorContrastAmount.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_fillLightColorContrastAmount);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

id SUIAShockwavePrototypeSettings.captureHintAnimationSettings.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureHintAnimationSettings);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void SUIAShockwavePrototypeSettings.captureHintAnimationSettings.setter(void *a1)
{
}

double SUIAShockwavePrototypeSettings.captureHintRetargetImpulse.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureHintRetargetImpulse;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.captureHintRetargetImpulse.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureHintRetargetImpulse);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.captureHintInterpolationProgress.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureHintInterpolationProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.captureHintInterpolationProgress.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureHintInterpolationProgress);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.captureHintMeshOffset.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureHintMeshOffset;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.captureHintMeshOffset.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureHintMeshOffset);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.visionIntelligenceHintRetargetImpulse.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_visionIntelligenceHintRetargetImpulse;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.visionIntelligenceHintRetargetImpulse.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_visionIntelligenceHintRetargetImpulse);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.visionIntelligenceHintInterpolationProgress.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_visionIntelligenceHintInterpolationProgress;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.visionIntelligenceHintInterpolationProgress.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_visionIntelligenceHintInterpolationProgress);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwavePrototypeSettings.visionIntelligenceHintFillLightInitialIntensity.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_visionIntelligenceHintFillLightInitialIntensity;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.visionIntelligenceHintFillLightInitialIntensity.setter(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_visionIntelligenceHintFillLightInitialIntensity);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

id SUIAShockwavePrototypeSettings.visionIntelligenceHintAnimationSettings.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_visionIntelligenceHintAnimationSettings);
  swift_beginAccess();
  objc_super v2 = *v1;
  return v2;
}

void sub_25E71DB88(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = (void **)(a1 + *a4);
  swift_beginAccess();
  BOOL v6 = *v5;
  *uint64_t v5 = a3;
  id v7 = a3;
}

void SUIAShockwavePrototypeSettings.visionIntelligenceHintAnimationSettings.setter(void *a1)
{
}

void sub_25E71DBF0(void *a1, void *a2)
{
  uint64_t v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *uint64_t v4 = a1;
}

uint64_t SUIAShockwavePrototypeSettings.captureChromaticAberrationEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureChromaticAberrationEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.captureChromaticAberrationEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureChromaticAberrationEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.captureMeshEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureMeshEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.captureMeshEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureMeshEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.captureFillLightType.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureFillLightType;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t SUIAShockwavePrototypeSettings.captureFillLightType.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_captureFillLightType);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.siriButtonChromaticAberrationEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriButtonChromaticAberrationEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.siriButtonChromaticAberrationEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriButtonChromaticAberrationEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.siriButtonMeshEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriButtonMeshEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.siriButtonMeshEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriButtonMeshEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.siriButtonMeshEnabledLargeScreen.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriButtonMeshEnabledLargeScreen);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.siriButtonMeshEnabledLargeScreen.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriButtonMeshEnabledLargeScreen);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.siriButtonFillLightEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriButtonFillLightEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.siriButtonFillLightEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriButtonFillLightEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.siriButtonEdgeLightEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriButtonEdgeLightEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.siriButtonEdgeLightEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriButtonEdgeLightEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.siriEdgeChromaticAberrationEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriEdgeChromaticAberrationEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.siriEdgeChromaticAberrationEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriEdgeChromaticAberrationEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.siriEdgeMeshEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriEdgeMeshEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.siriEdgeMeshEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriEdgeMeshEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.siriEdgeMeshEnabledLargeScreen.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriEdgeMeshEnabledLargeScreen);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.siriEdgeMeshEnabledLargeScreen.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriEdgeMeshEnabledLargeScreen);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.siriEdgeFillLightEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriEdgeFillLightEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.siriEdgeFillLightEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriEdgeFillLightEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t SUIAShockwavePrototypeSettings.siriEdgeEdgeLightEnabled.getter()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriEdgeEdgeLightEnabled);
  swift_beginAccess();
  return *v1;
}

uint64_t SUIAShockwavePrototypeSettings.siriEdgeEdgeLightEnabled.setter(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_siriEdgeEdgeLightEnabled);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

Swift::Void __swiftcall SUIAShockwavePrototypeSettings.setDefaultValues()()
{
  uint64_t v1 = v0;
  uint64_t v107 = *MEMORY[0x263EF8340];
  v106.super_class = (Class)SUIAShockwavePrototypeSettings;
  objc_msgSendSuper2(&v106, sel_setDefaultValues);
  double v104 = 0.0;
  double v105 = 0.0;
  objc_msgSend(v0, sel_setMaximumHintDuration_);
  objc_msgSend(v0, sel_setTotalDuration_, 4.2);
  objc_msgSend(v0, sel_setVisualizeEffectMasks_, 0);
  objc_msgSend(v0, sel_setDonutMaskInitialEdgeOutsetProportion_, 1.44);
  objc_msgSend(v0, sel_setFinalFitVsDiameterRatioShortEdgeSmallScreen_, 1.0);
  objc_msgSend(v0, sel_setFinalFitVsDiameterRatioLongEdgeSmallScreen_, 0.75);
  objc_msgSend(v0, sel_setFinalFitVsDiameterRatioShortEdgeBigScreen_, 1.1);
  objc_msgSend(v0, sel_setFinalFitVsDiameterRatioLongEdgeBigScreen_, 0.85);
  objc_msgSend(v0, sel_setEdgeLightHintTransitionDelay_, 0.06);
  objc_msgSend(v0, sel_setDonutMaskEndTransitionDelay_, 0.0);
  id v2 = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  objc_msgSend(v1, sel_setDonutMaskPositionAnimationSettings_, v2);

  id v3 = objc_msgSend(v1, sel_donutMaskPositionAnimationSettings);
  objc_msgSend(v3, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v3, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v3, sel_setBehaviorType_, 0);
  uint64_t v4 = (void *)sub_25E75BEA0();
  objc_msgSend(v3, sel_setName_, v4);

  id v5 = objc_msgSend(v1, sel_donutMaskPositionAnimationSettings, SUIAConvertMassStiffnessAndDampingToDampingRatioAndResponse(&v104, &v105, 2.0, 50.0, 20.0));
  objc_msgSend(v5, sel_setDampingRatio_, v104);

  id v6 = objc_msgSend(v1, sel_donutMaskPositionAnimationSettings);
  objc_msgSend(v6, sel_setResponse_, v105);

  id v7 = objc_msgSend(v1, sel_chromaticAberrationInitialDonutMask);
  uint64_t v8 = (void *)sub_25E75BEA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704960);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_25E760050;
  sub_25E711DB8(0, &qword_26A703FF8);
  *(void *)(v9 + 32) = sub_25E75C010();
  *(void *)(v9 + 40) = sub_25E75C010();
  *(void *)(v9 + 48) = sub_25E75C010();
  *(void *)(v9 + 56) = sub_25E75C010();
  *(void *)(v9 + 64) = sub_25E75C010();
  *(void *)(v9 + 72) = sub_25E75C010();
  *(void *)(v9 + 80) = sub_25E75C010();
  *(void *)(v9 + 88) = sub_25E75C010();
  *(void *)(v9 + 96) = sub_25E75C010();
  *(void *)(v9 + 104) = sub_25E75C010();
  *(void *)(v9 + 112) = sub_25E75C010();
  *(void *)(v9 + 120) = sub_25E75C010();
  *(void *)(v9 + 128) = sub_25E75C010();
  *(void *)(v9 + 136) = sub_25E75C010();
  *(void *)(v9 + 144) = sub_25E75C010();
  *(void *)(v9 + 152) = sub_25E75C010();
  *(void *)(v9 + 160) = sub_25E75C010();
  *(void *)(v9 + 168) = sub_25E75C010();
  *(void *)(v9 + 176) = sub_25E75C010();
  *(void *)(v9 + 184) = sub_25E75C010();
  *(void *)(v9 + 192) = sub_25E75C010();
  *(void *)(v9 + 200) = sub_25E75C010();
  *(void *)(v9 + 208) = sub_25E75C010();
  *(void *)(v9 + 216) = sub_25E75C010();
  *(void *)(v9 + 224) = sub_25E75C010();
  *(void *)(v9 + 232) = sub_25E75C010();
  *(void *)(v9 + 240) = sub_25E75C010();
  *(void *)(v9 + 248) = sub_25E75C010();
  *(void *)(v9 + 256) = sub_25E75C010();
  *(void *)(v9 + 264) = sub_25E75C010();
  sub_25E75BF40();
  id v10 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_25E760050;
  *(void *)(v11 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v11 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v11 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v11 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v11 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v11 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v11 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v11 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v11 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.133);
  *(void *)(v11 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.224);
  *(void *)(v11 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.333);
  *(void *)(v11 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.471);
  *(void *)(v11 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.608);
  *(void *)(v11 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.729);
  *(void *)(v11 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v11 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.871);
  *(void *)(v11 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.875);
  *(void *)(v11 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.835);
  *(void *)(v11 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.753);
  *(void *)(v11 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.639);
  *(void *)(v11 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v11 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.369);
  *(void *)(v11 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.251);
  *(void *)(v11 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.153);
  *(void *)(v11 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.082);
  *(void *)(v11 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v11 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v11 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v11 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v11 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  objc_super v12 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v7, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v8, 30, v10, v12, 195.5, 42.0, 14.0, 279.5, 279.5);

  id v13 = objc_msgSend(v1, sel_chromaticAberrationFinalDonutMaskSmallScreen);
  id v14 = (void *)sub_25E75BEA0();
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_25E760050;
  *(void *)(v15 + 32) = sub_25E75C010();
  *(void *)(v15 + 40) = sub_25E75C010();
  *(void *)(v15 + 48) = sub_25E75C010();
  *(void *)(v15 + 56) = sub_25E75C010();
  *(void *)(v15 + 64) = sub_25E75C010();
  *(void *)(v15 + 72) = sub_25E75C010();
  *(void *)(v15 + 80) = sub_25E75C010();
  *(void *)(v15 + 88) = sub_25E75C010();
  *(void *)(v15 + 96) = sub_25E75C010();
  *(void *)(v15 + 104) = sub_25E75C010();
  *(void *)(v15 + 112) = sub_25E75C010();
  *(void *)(v15 + 120) = sub_25E75C010();
  *(void *)(v15 + 128) = sub_25E75C010();
  *(void *)(v15 + 136) = sub_25E75C010();
  *(void *)(v15 + 144) = sub_25E75C010();
  *(void *)(v15 + 152) = sub_25E75C010();
  *(void *)(v15 + 160) = sub_25E75C010();
  *(void *)(v15 + 168) = sub_25E75C010();
  *(void *)(v15 + 176) = sub_25E75C010();
  *(void *)(v15 + 184) = sub_25E75C010();
  *(void *)(v15 + 192) = sub_25E75C010();
  *(void *)(v15 + 200) = sub_25E75C010();
  *(void *)(v15 + 208) = sub_25E75C010();
  *(void *)(v15 + 216) = sub_25E75C010();
  *(void *)(v15 + 224) = sub_25E75C010();
  *(void *)(v15 + 232) = sub_25E75C010();
  *(void *)(v15 + 240) = sub_25E75C010();
  *(void *)(v15 + 248) = sub_25E75C010();
  *(void *)(v15 + 256) = sub_25E75C010();
  *(void *)(v15 + 264) = sub_25E75C010();
  sub_25E75BF40();
  id v16 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_25E760050;
  *(void *)(v17 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v17 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.004);
  *(void *)(v17 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.035);
  *(void *)(v17 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.122);
  *(void *)(v17 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v17 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.525);
  *(void *)(v17 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.753);
  *(void *)(v17 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.906);
  *(void *)(v17 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.976);
  *(void *)(v17 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v17 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.976);
  *(void *)(v17 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.906);
  *(void *)(v17 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.761);
  *(void *)(v17 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v17 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v17 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.122);
  *(void *)(v17 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v17 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.004);
  *(void *)(v17 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  id v18 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v14, 30, v16, v18);

  id v19 = objc_msgSend(v1, sel_chromaticAberrationFinalDonutMaskLargeScreen);
  uint64_t v20 = (void *)sub_25E75BEA0();
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_25E760050;
  *(void *)(v21 + 32) = sub_25E75C010();
  *(void *)(v21 + 40) = sub_25E75C010();
  *(void *)(v21 + 48) = sub_25E75C010();
  *(void *)(v21 + 56) = sub_25E75C010();
  *(void *)(v21 + 64) = sub_25E75C010();
  *(void *)(v21 + 72) = sub_25E75C010();
  *(void *)(v21 + 80) = sub_25E75C010();
  *(void *)(v21 + 88) = sub_25E75C010();
  *(void *)(v21 + 96) = sub_25E75C010();
  *(void *)(v21 + 104) = sub_25E75C010();
  *(void *)(v21 + 112) = sub_25E75C010();
  *(void *)(v21 + 120) = sub_25E75C010();
  *(void *)(v21 + 128) = sub_25E75C010();
  *(void *)(v21 + 136) = sub_25E75C010();
  *(void *)(v21 + 144) = sub_25E75C010();
  *(void *)(v21 + 152) = sub_25E75C010();
  *(void *)(v21 + 160) = sub_25E75C010();
  *(void *)(v21 + 168) = sub_25E75C010();
  *(void *)(v21 + 176) = sub_25E75C010();
  *(void *)(v21 + 184) = sub_25E75C010();
  *(void *)(v21 + 192) = sub_25E75C010();
  *(void *)(v21 + 200) = sub_25E75C010();
  *(void *)(v21 + 208) = sub_25E75C010();
  *(void *)(v21 + 216) = sub_25E75C010();
  *(void *)(v21 + 224) = sub_25E75C010();
  *(void *)(v21 + 232) = sub_25E75C010();
  *(void *)(v21 + 240) = sub_25E75C010();
  *(void *)(v21 + 248) = sub_25E75C010();
  *(void *)(v21 + 256) = sub_25E75C010();
  *(void *)(v21 + 264) = sub_25E75C010();
  sub_25E75BF40();
  id v22 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_25E760050;
  *(void *)(v23 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v23 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.004);
  *(void *)(v23 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.027);
  *(void *)(v23 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.106);
  *(void *)(v23 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.267);
  *(void *)(v23 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.494);
  *(void *)(v23 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v23 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.8);
  *(void *)(v23 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.725);
  *(void *)(v23 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.529);
  *(void *)(v23 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.294);
  *(void *)(v23 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.122);
  *(void *)(v23 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.039);
  *(void *)(v23 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.004);
  *(void *)(v23 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  unint64_t v24 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v20, 30, v22, v24, 2004.0, 170.0, 66.66, 2403.96, 2403.96);

  id v25 = objc_msgSend(v1, sel_colorFillInitialCircleMask);
  double v26 = (void *)sub_25E75BEA0();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_25E760050;
  *(void *)(v27 + 32) = sub_25E75C010();
  *(void *)(v27 + 40) = sub_25E75C010();
  *(void *)(v27 + 48) = sub_25E75C010();
  *(void *)(v27 + 56) = sub_25E75C010();
  *(void *)(v27 + 64) = sub_25E75C010();
  *(void *)(v27 + 72) = sub_25E75C010();
  *(void *)(v27 + 80) = sub_25E75C010();
  *(void *)(v27 + 88) = sub_25E75C010();
  *(void *)(v27 + 96) = sub_25E75C010();
  *(void *)(v27 + 104) = sub_25E75C010();
  *(void *)(v27 + 112) = sub_25E75C010();
  *(void *)(v27 + 120) = sub_25E75C010();
  *(void *)(v27 + 128) = sub_25E75C010();
  *(void *)(v27 + 136) = sub_25E75C010();
  *(void *)(v27 + 144) = sub_25E75C010();
  *(void *)(v27 + 152) = sub_25E75C010();
  *(void *)(v27 + 160) = sub_25E75C010();
  *(void *)(v27 + 168) = sub_25E75C010();
  *(void *)(v27 + 176) = sub_25E75C010();
  *(void *)(v27 + 184) = sub_25E75C010();
  *(void *)(v27 + 192) = sub_25E75C010();
  *(void *)(v27 + 200) = sub_25E75C010();
  *(void *)(v27 + 208) = sub_25E75C010();
  *(void *)(v27 + 216) = sub_25E75C010();
  *(void *)(v27 + 224) = sub_25E75C010();
  *(void *)(v27 + 232) = sub_25E75C010();
  *(void *)(v27 + 240) = sub_25E75C010();
  *(void *)(v27 + 248) = sub_25E75C010();
  *(void *)(v27 + 256) = sub_25E75C010();
  *(void *)(v27 + 264) = sub_25E75C010();
  sub_25E75BF40();
  id v28 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_25E760050;
  *(void *)(v29 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v29 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.973);
  *(void *)(v29 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v29 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.733);
  *(void *)(v29 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.506);
  *(void *)(v29 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.263);
  *(void *)(v29 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.11);
  *(void *)(v29 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.031);
  *(void *)(v29 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v29 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  id v30 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v26, 30, v28, v30);

  id v31 = objc_msgSend(v1, sel_colorFillHintCircleMask);
  unint64_t v32 = (void *)sub_25E75BEA0();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_25E760050;
  *(void *)(v33 + 32) = sub_25E75C010();
  *(void *)(v33 + 40) = sub_25E75C010();
  *(void *)(v33 + 48) = sub_25E75C010();
  *(void *)(v33 + 56) = sub_25E75C010();
  *(void *)(v33 + 64) = sub_25E75C010();
  *(void *)(v33 + 72) = sub_25E75C010();
  *(void *)(v33 + 80) = sub_25E75C010();
  *(void *)(v33 + 88) = sub_25E75C010();
  *(void *)(v33 + 96) = sub_25E75C010();
  *(void *)(v33 + 104) = sub_25E75C010();
  *(void *)(v33 + 112) = sub_25E75C010();
  *(void *)(v33 + 120) = sub_25E75C010();
  *(void *)(v33 + 128) = sub_25E75C010();
  *(void *)(v33 + 136) = sub_25E75C010();
  *(void *)(v33 + 144) = sub_25E75C010();
  *(void *)(v33 + 152) = sub_25E75C010();
  *(void *)(v33 + 160) = sub_25E75C010();
  *(void *)(v33 + 168) = sub_25E75C010();
  *(void *)(v33 + 176) = sub_25E75C010();
  *(void *)(v33 + 184) = sub_25E75C010();
  *(void *)(v33 + 192) = sub_25E75C010();
  *(void *)(v33 + 200) = sub_25E75C010();
  *(void *)(v33 + 208) = sub_25E75C010();
  *(void *)(v33 + 216) = sub_25E75C010();
  *(void *)(v33 + 224) = sub_25E75C010();
  *(void *)(v33 + 232) = sub_25E75C010();
  *(void *)(v33 + 240) = sub_25E75C010();
  *(void *)(v33 + 248) = sub_25E75C010();
  *(void *)(v33 + 256) = sub_25E75C010();
  *(void *)(v33 + 264) = sub_25E75C010();
  sub_25E75BF40();
  double v34 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_25E760050;
  *(void *)(v35 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v35 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v35 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v35 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v35 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v35 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.996);
  *(void *)(v35 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v35 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v35 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.973);
  *(void *)(v35 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.953);
  *(void *)(v35 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.922);
  *(void *)(v35 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.882);
  *(void *)(v35 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.827);
  *(void *)(v35 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.757);
  *(void *)(v35 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.671);
  *(void *)(v35 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.588);
  *(void *)(v35 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.49);
  *(void *)(v35 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.4);
  *(void *)(v35 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.31);
  *(void *)(v35 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.231);
  *(void *)(v35 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.165);
  *(void *)(v35 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.114);
  *(void *)(v35 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.075);
  *(void *)(v35 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.047);
  *(void *)(v35 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v35 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.012);
  *(void *)(v35 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.004);
  *(void *)(v35 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.004);
  *(void *)(v35 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v35 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  id v36 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v31, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v32, 30, v34, v36, 196.5, 0.0, 25.0, 346.5, 346.5);

  id v37 = objc_msgSend(v1, sel_colorFillFinalCircleMask);
  id v38 = (void *)sub_25E75BEA0();
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_25E760050;
  *(void *)(v39 + 32) = sub_25E75C010();
  *(void *)(v39 + 40) = sub_25E75C010();
  *(void *)(v39 + 48) = sub_25E75C010();
  *(void *)(v39 + 56) = sub_25E75C010();
  *(void *)(v39 + 64) = sub_25E75C010();
  *(void *)(v39 + 72) = sub_25E75C010();
  *(void *)(v39 + 80) = sub_25E75C010();
  *(void *)(v39 + 88) = sub_25E75C010();
  *(void *)(v39 + 96) = sub_25E75C010();
  *(void *)(v39 + 104) = sub_25E75C010();
  *(void *)(v39 + 112) = sub_25E75C010();
  *(void *)(v39 + 120) = sub_25E75C010();
  *(void *)(v39 + 128) = sub_25E75C010();
  *(void *)(v39 + 136) = sub_25E75C010();
  *(void *)(v39 + 144) = sub_25E75C010();
  *(void *)(v39 + 152) = sub_25E75C010();
  *(void *)(v39 + 160) = sub_25E75C010();
  *(void *)(v39 + 168) = sub_25E75C010();
  *(void *)(v39 + 176) = sub_25E75C010();
  *(void *)(v39 + 184) = sub_25E75C010();
  *(void *)(v39 + 192) = sub_25E75C010();
  *(void *)(v39 + 200) = sub_25E75C010();
  *(void *)(v39 + 208) = sub_25E75C010();
  *(void *)(v39 + 216) = sub_25E75C010();
  *(void *)(v39 + 224) = sub_25E75C010();
  *(void *)(v39 + 232) = sub_25E75C010();
  *(void *)(v39 + 240) = sub_25E75C010();
  *(void *)(v39 + 248) = sub_25E75C010();
  *(void *)(v39 + 256) = sub_25E75C010();
  *(void *)(v39 + 264) = sub_25E75C010();
  sub_25E75BF40();
  unint64_t v40 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_25E760050;
  *(void *)(v41 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v41 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.996);
  *(void *)(v41 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v41 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.894);
  *(void *)(v41 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v41 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v41 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v41 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.122);
  *(void *)(v41 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.043);
  *(void *)(v41 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.008);
  *(void *)(v41 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  double v42 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v37, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v38, 30, v40, v42, 2004.0, 0.0);

  id v43 = objc_msgSend(v1, sel_edgeLightInitialCircleMask);
  id v44 = (void *)sub_25E75BEA0();
  uint64_t v45 = swift_allocObject();
  *(_OWORD *)(v45 + 16) = xmmword_25E760050;
  *(void *)(v45 + 32) = sub_25E75C010();
  *(void *)(v45 + 40) = sub_25E75C010();
  *(void *)(v45 + 48) = sub_25E75C010();
  *(void *)(v45 + 56) = sub_25E75C010();
  *(void *)(v45 + 64) = sub_25E75C010();
  *(void *)(v45 + 72) = sub_25E75C010();
  *(void *)(v45 + 80) = sub_25E75C010();
  *(void *)(v45 + 88) = sub_25E75C010();
  *(void *)(v45 + 96) = sub_25E75C010();
  *(void *)(v45 + 104) = sub_25E75C010();
  *(void *)(v45 + 112) = sub_25E75C010();
  *(void *)(v45 + 120) = sub_25E75C010();
  *(void *)(v45 + 128) = sub_25E75C010();
  *(void *)(v45 + 136) = sub_25E75C010();
  *(void *)(v45 + 144) = sub_25E75C010();
  *(void *)(v45 + 152) = sub_25E75C010();
  *(void *)(v45 + 160) = sub_25E75C010();
  *(void *)(v45 + 168) = sub_25E75C010();
  *(void *)(v45 + 176) = sub_25E75C010();
  *(void *)(v45 + 184) = sub_25E75C010();
  *(void *)(v45 + 192) = sub_25E75C010();
  *(void *)(v45 + 200) = sub_25E75C010();
  *(void *)(v45 + 208) = sub_25E75C010();
  *(void *)(v45 + 216) = sub_25E75C010();
  *(void *)(v45 + 224) = sub_25E75C010();
  *(void *)(v45 + 232) = sub_25E75C010();
  *(void *)(v45 + 240) = sub_25E75C010();
  *(void *)(v45 + 248) = sub_25E75C010();
  *(void *)(v45 + 256) = sub_25E75C010();
  *(void *)(v45 + 264) = sub_25E75C010();
  sub_25E75BF40();
  unint64_t v46 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_25E760050;
  *(void *)(v47 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v47 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.996);
  *(void *)(v47 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.984);
  *(void *)(v47 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.937);
  *(void *)(v47 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.847);
  *(void *)(v47 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.706);
  *(void *)(v47 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.506);
  *(void *)(v47 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.306);
  *(void *)(v47 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.157);
  *(void *)(v47 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0);
  *(void *)(v47 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.024);
  *(void *)(v47 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v47 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  double v48 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v43, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v44, 30, v46, v48, 196.0, 0.0, 8.33, 245.98, 245.98);

  id v49 = objc_msgSend(v1, sel_edgeLightHintCircleMask);
  id v50 = (void *)sub_25E75BEA0();
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_25E760050;
  *(void *)(v51 + 32) = sub_25E75C010();
  *(void *)(v51 + 40) = sub_25E75C010();
  *(void *)(v51 + 48) = sub_25E75C010();
  *(void *)(v51 + 56) = sub_25E75C010();
  *(void *)(v51 + 64) = sub_25E75C010();
  *(void *)(v51 + 72) = sub_25E75C010();
  *(void *)(v51 + 80) = sub_25E75C010();
  *(void *)(v51 + 88) = sub_25E75C010();
  *(void *)(v51 + 96) = sub_25E75C010();
  *(void *)(v51 + 104) = sub_25E75C010();
  *(void *)(v51 + 112) = sub_25E75C010();
  *(void *)(v51 + 120) = sub_25E75C010();
  *(void *)(v51 + 128) = sub_25E75C010();
  *(void *)(v51 + 136) = sub_25E75C010();
  *(void *)(v51 + 144) = sub_25E75C010();
  *(void *)(v51 + 152) = sub_25E75C010();
  *(void *)(v51 + 160) = sub_25E75C010();
  *(void *)(v51 + 168) = sub_25E75C010();
  *(void *)(v51 + 176) = sub_25E75C010();
  *(void *)(v51 + 184) = sub_25E75C010();
  *(void *)(v51 + 192) = sub_25E75C010();
  *(void *)(v51 + 200) = sub_25E75C010();
  *(void *)(v51 + 208) = sub_25E75C010();
  *(void *)(v51 + 216) = sub_25E75C010();
  *(void *)(v51 + 224) = sub_25E75C010();
  *(void *)(v51 + 232) = sub_25E75C010();
  *(void *)(v51 + 240) = sub_25E75C010();
  *(void *)(v51 + 248) = sub_25E75C010();
  *(void *)(v51 + 256) = sub_25E75C010();
  *(void *)(v51 + 264) = sub_25E75C010();
  sub_25E75BF40();
  id v52 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_25E760050;
  *(void *)(v53 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v53 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v53 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v53 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v53 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v53 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.992);
  *(void *)(v53 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.984);
  *(void *)(v53 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.976);
  *(void *)(v53 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.957);
  *(void *)(v53 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.929);
  *(void *)(v53 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.89);
  *(void *)(v53 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.843);
  *(void *)(v53 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.78);
  *(void *)(v53 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.706);
  *(void *)(v53 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.624);
  *(void *)(v53 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.537);
  *(void *)(v53 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.443);
  *(void *)(v53 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.353);
  *(void *)(v53 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.275);
  *(void *)(v53 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.204);
  *(void *)(v53 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.145);
  *(void *)(v53 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.102);
  *(void *)(v53 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.067);
  *(void *)(v53 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.039);
  *(void *)(v53 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.02);
  *(void *)(v53 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.008);
  *(void *)(v53 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.004);
  *(void *)(v53 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v53 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  *(void *)(v53 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  unint64_t v54 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v49, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v50, 30, v52, v54, 275.0, 0.0, 37.5, 500.0, 500.0);

  id v55 = objc_msgSend(v1, sel_edgeLightFinalCircleMask);
  long long v56 = (void *)sub_25E75BEA0();
  uint64_t v57 = swift_allocObject();
  *(_OWORD *)(v57 + 16) = xmmword_25E760050;
  *(void *)(v57 + 32) = sub_25E75C010();
  *(void *)(v57 + 40) = sub_25E75C010();
  *(void *)(v57 + 48) = sub_25E75C010();
  *(void *)(v57 + 56) = sub_25E75C010();
  *(void *)(v57 + 64) = sub_25E75C010();
  *(void *)(v57 + 72) = sub_25E75C010();
  *(void *)(v57 + 80) = sub_25E75C010();
  *(void *)(v57 + 88) = sub_25E75C010();
  *(void *)(v57 + 96) = sub_25E75C010();
  *(void *)(v57 + 104) = sub_25E75C010();
  *(void *)(v57 + 112) = sub_25E75C010();
  *(void *)(v57 + 120) = sub_25E75C010();
  *(void *)(v57 + 128) = sub_25E75C010();
  *(void *)(v57 + 136) = sub_25E75C010();
  *(void *)(v57 + 144) = sub_25E75C010();
  *(void *)(v57 + 152) = sub_25E75C010();
  *(void *)(v57 + 160) = sub_25E75C010();
  *(void *)(v57 + 168) = sub_25E75C010();
  *(void *)(v57 + 176) = sub_25E75C010();
  *(void *)(v57 + 184) = sub_25E75C010();
  *(void *)(v57 + 192) = sub_25E75C010();
  *(void *)(v57 + 200) = sub_25E75C010();
  *(void *)(v57 + 208) = sub_25E75C010();
  *(void *)(v57 + 216) = sub_25E75C010();
  *(void *)(v57 + 224) = sub_25E75C010();
  *(void *)(v57 + 232) = sub_25E75C010();
  *(void *)(v57 + 240) = sub_25E75C010();
  *(void *)(v57 + 248) = sub_25E75C010();
  *(void *)(v57 + 256) = sub_25E75C010();
  *(void *)(v57 + 264) = sub_25E75C010();
  sub_25E75BF40();
  id v58 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_25E760050;
  *(void *)(v59 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v59 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.996);
  *(void *)(v59 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.969);
  *(void *)(v59 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.894);
  *(void *)(v59 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.737);
  *(void *)(v59 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.51);
  *(void *)(v59 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.282);
  *(void *)(v59 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.122);
  *(void *)(v59 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.043);
  *(void *)(v59 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.008);
  *(void *)(v59 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  unint64_t v60 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v55, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v56, 30, v58, v60, 2004.0, 0.0, 68.0, 2412.0, 2412.0);

  objc_msgSend(v1, sel_setAberrationMagnitudeX_, 2.66666667);
  objc_msgSend(v1, sel_setAberrationMagnitudeY_, 0.0);
  objc_msgSend(v1, sel_setAberrationBlurRadius_, 1.66666667);
  objc_msgSend(v1, sel_setAberrationUseColorSaturate_, 1);
  objc_msgSend(v1, sel_setAberrationColorSaturateAmount_, 1.2);
  objc_msgSend(v1, sel_setAberrationUseEDR_, 0);
  objc_msgSend(v1, sel_setAberrationEDRGain_, 1.4);
  objc_msgSend(v1, sel_setAberrationUseColorBrightness_, 1);
  objc_msgSend(v1, sel_setAberrationColorBrightness_, 0.1);
  objc_msgSend(v1, sel_setAberrationUseColorMatrixMultiply_, 0);
  objc_msgSend(v1, sel_setAberrationColorMatrixMultiplyFactor_, 1.4);
  objc_msgSend(v1, sel_setAberrationFadeOutDelay_, 0.47);
  objc_msgSend(v1, sel_setAberrationFadeOutDelayIPad_, 0.52);
  id v61 = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  objc_msgSend(v1, sel_setAbberationFadeOutAnimationSettings_, v61);

  id v62 = objc_msgSend(v1, sel_abberationFadeOutAnimationSettings);
  objc_msgSend(v62, sel_setDefaultValues);

  id v63 = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  objc_msgSend(v1, sel_setAbberationCancelledFadeOutAnimationSettings_, v63);

  id v64 = objc_msgSend(v1, sel_abberationCancelledFadeOutAnimationSettings);
  objc_msgSend(v64, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v64, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v64, sel_setBehaviorType_, 0);
  id v65 = (void *)sub_25E75BEA0();
  objc_msgSend(v64, sel_setName_, v65);

  id v66 = objc_msgSend(v1, sel_abberationCancelledFadeOutAnimationSettings, SUIAConvertMassStiffnessAndDampingToDampingRatioAndResponse(&v104, &v105, 2.0, 50.0, 20.0));
  objc_msgSend(v66, sel_setDampingRatio_, v104);

  id v67 = objc_msgSend(v1, sel_abberationCancelledFadeOutAnimationSettings);
  objc_msgSend(v67, sel_setResponse_, v105);

  objc_msgSend(v1, sel_setMeshSquareFinalSizeDiagonalRatio_, 1.77);
  objc_msgSend(v1, sel_setMeshRectangularFinalShortDimensionRatio_, 2.96861747);
  objc_msgSend(v1, sel_setMeshRectangularFinalLongDimensionRatio_, 2.34741784);
  objc_msgSend(v1, sel_setMeshFinalProportionAcrossScreenLongEdge_, 0.415182358);
  objc_msgSend(v1, sel_setMeshFinalProportionAcrossScreenShortEdge_, 0.0551643192);
  objc_msgSend(v1, sel_setMeshFinalProportionTowardsCenterOnLargeDisplays_, 0.5);
  objc_msgSend(v1, sel_setMeshPointsEndTransitionDelay_, 0.125);
  objc_msgSend(v1, sel_setUseSiriMeshForCapture_, 1);
  id v68 = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  objc_msgSend(v1, sel_setMeshPointsAnimationSettings_, v68);

  id v69 = objc_msgSend(v1, sel_meshPointsAnimationSettings);
  objc_msgSend(v69, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v69, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v69, sel_setBehaviorType_, 0);
  id v70 = (void *)sub_25E75BEA0();
  objc_msgSend(v69, sel_setName_, v70);

  id v71 = objc_msgSend(v1, sel_meshPointsAnimationSettings);
  objc_msgSend(v71, sel_setDampingRatio_, 1.0);

  id v72 = objc_msgSend(v1, sel_meshPointsAnimationSettings);
  objc_msgSend(v72, sel_setResponse_, 0.726);

  id v73 = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  objc_msgSend(v1, sel_setMeshPositionAnimationSettings_, v73);

  id v74 = objc_msgSend(v1, sel_meshPositionAnimationSettings);
  objc_msgSend(v74, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v74, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v74, sel_setBehaviorType_, 0);
  id v75 = (void *)sub_25E75BEA0();
  objc_msgSend(v74, sel_setName_, v75);

  id v76 = objc_msgSend(v1, sel_meshPositionAnimationSettings, SUIAConvertMassStiffnessAndDampingToDampingRatioAndResponse(&v104, &v105, 2.0, 60.0, 21.9089));
  objc_msgSend(v76, sel_setDampingRatio_, v104);

  id v77 = objc_msgSend(v1, sel_meshPositionAnimationSettings);
  objc_msgSend(v77, sel_setResponse_, v105);

  id v78 = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  objc_msgSend(v1, sel_setMeshPointsCancelledAnimationSettings_, v78);

  id v79 = objc_msgSend(v1, sel_meshPointsCancelledAnimationSettings);
  objc_msgSend(v79, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v79, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v79, (SEL)&selRef_siriEdgeMeshEnabledLargeScreen + 2, 0);
  unint64_t v80 = (void *)sub_25E75BEA0();
  objc_msgSend(v79, sel_setName_, v80);

  id v81 = objc_msgSend(v1, sel_meshPointsCancelledAnimationSettings);
  objc_msgSend(v81, sel_setDampingRatio_, 1.0);

  id v82 = objc_msgSend(v1, sel_meshPointsCancelledAnimationSettings);
  objc_msgSend(v82, sel_setResponse_, 0.4083);

  objc_msgSend(v1, sel_setFillLightInitialIntensity_, 1.0);
  objc_msgSend(v1, sel_setFillLightCaptureInitialIntensity_, 0.38);
  objc_msgSend(v1, sel_setCaptureFillWhiteValue_, 1.0);
  objc_msgSend(v1, sel_setFillLightFinalIntensity_, 0.0);
  id v83 = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  objc_msgSend(v1, sel_setLightIntensityAnimationSettings_, v83);

  id v84 = objc_msgSend(v1, sel_lightIntensityAnimationSettings);
  objc_msgSend(v84, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v84, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v84, (SEL)&selRef_siriEdgeMeshEnabledLargeScreen + 2, 0);
  id v85 = (void *)sub_25E75BEA0();
  objc_msgSend(v84, sel_setName_, v85);

  id v86 = objc_msgSend(v1, sel_lightIntensityAnimationSettings);
  objc_msgSend(v86, sel_setDampingRatio_, 1.0);

  id v87 = objc_msgSend(v1, sel_lightIntensityAnimationSettings);
  objc_msgSend(v87, sel_setResponse_, 1.35);

  id v88 = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  objc_msgSend(v1, sel_setLightIntensityCancelledAnimationSettings_, v88);

  id v89 = objc_msgSend(v1, sel_lightIntensityCancelledAnimationSettings);
  objc_msgSend(v89, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v89, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v89, (SEL)&selRef_siriEdgeMeshEnabledLargeScreen + 2, 0);
  id v90 = (void *)sub_25E75BEA0();
  objc_msgSend(v89, sel_setName_, v90);

  id v91 = objc_msgSend(v1, sel_lightIntensityCancelledAnimationSettings);
  objc_msgSend(v91, sel_setDampingRatio_, 1.0);

  id v92 = objc_msgSend(v1, sel_lightIntensityCancelledAnimationSettings);
  objc_msgSend(v92, sel_setResponse_, 0.6805);

  objc_msgSend(v1, sel_setFillLightColorSaturateAmount_, 2.0);
  objc_msgSend(v1, sel_setFillLightColorBrightnessAmount_, 0.5);
  objc_msgSend(v1, sel_setFillLightColorContrastAmount_, 2.22);
  objc_msgSend(v1, sel_setFillLightIntensityFinalStateDelay_, 0.05);
  id v93 = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  objc_msgSend(v1, sel_setCaptureHintAnimationSettings_, v93);

  id v94 = objc_msgSend(v1, sel_captureHintAnimationSettings);
  objc_msgSend(v94, (SEL)&selRef_edgeLightMaskOuterRadius + 7);
  sub_25E75BFF0();
  objc_msgSend(v94, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v94, (SEL)&selRef_siriEdgeMeshEnabledLargeScreen + 2, 0);
  long long v95 = (void *)sub_25E75BEA0();
  objc_msgSend(v94, sel_setName_, v95);

  id v96 = objc_msgSend(v1, sel_captureHintAnimationSettings);
  objc_msgSend(v96, sel_setDefaultValues);

  id v97 = objc_msgSend(v1, sel_captureHintAnimationSettings);
  objc_msgSend(v97, sel_setDampingRatio_, 2.0);

  id v98 = objc_msgSend(v1, sel_captureHintAnimationSettings);
  objc_msgSend(v98, sel_setResponse_, 0.29);

  objc_msgSend(v1, sel_setCaptureHintRetargetImpulse_, 0.124);
  objc_msgSend(v1, sel_setCaptureHintInterpolationProgress_, 0.15);
  objc_msgSend(v1, sel_setCaptureHintMeshOffset_, 0.3);
  objc_msgSend(v1, sel_setVisionIntelligenceHintRetargetImpulse_, 0.097);
  objc_msgSend(v1, sel_setVisionIntelligenceHintInterpolationProgress_, 0.09);
  objc_msgSend(v1, sel_setVisionIntelligenceHintFillLightInitialIntensity_, 0.82);
  id v99 = objc_msgSend(v1, sel_visionIntelligenceHintAnimationSettings);
  objc_msgSend(v99, (SEL)&selRef_edgeLightMaskOuterRadius + 7);
  sub_25E75BFF0();
  objc_msgSend(v99, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v99, (SEL)&selRef_siriEdgeMeshEnabledLargeScreen + 2, 0);
  unint64_t v100 = (void *)sub_25E75BEA0();
  objc_msgSend(v99, sel_setName_, v100);

  id v101 = objc_msgSend(v1, sel_visionIntelligenceHintAnimationSettings);
  objc_msgSend(v101, (SEL)&selRef_siriEdgeMeshEnabledLargeScreen + 2, 0);

  id v102 = objc_msgSend(v1, sel_visionIntelligenceHintAnimationSettings);
  objc_msgSend(v102, sel_setResponse_, 1.46);

  id v103 = objc_msgSend(v1, sel_visionIntelligenceHintAnimationSettings);
  objc_msgSend(v103, sel_setDampingRatio_, 0.52);

  objc_msgSend(v1, sel_setCaptureChromaticAberrationEnabled_, 1);
  objc_msgSend(v1, sel_setCaptureMeshEnabled_, 1);
  objc_msgSend(v1, sel_setCaptureFillLightType_, 2);
  objc_msgSend(v1, sel_setSiriButtonChromaticAberrationEnabled_, 1);
  objc_msgSend(v1, sel_setSiriButtonMeshEnabled_, 1);
  objc_msgSend(v1, sel_setSiriButtonMeshEnabledLargeScreen_, 0);
  objc_msgSend(v1, sel_setSiriButtonFillLightEnabled_, 1);
  objc_msgSend(v1, sel_setSiriButtonEdgeLightEnabled_, 1);
  objc_msgSend(v1, sel_setSiriEdgeChromaticAberrationEnabled_, 1);
  objc_msgSend(v1, sel_setSiriEdgeMeshEnabled_, 1);
  objc_msgSend(v1, sel_setSiriEdgeMeshEnabledLargeScreen_, 0);
  objc_msgSend(v1, sel_setSiriEdgeFillLightEnabled_, 1);
  objc_msgSend(v1, sel_setSiriEdgeEdgeLightEnabled_, 1);
}

Swift::Void __swiftcall SUIAShockwavePrototypeSettings.updateValuesForUserInterfaceIdiom(_:)(UIUserInterfaceIdiom a1)
{
  *(void *)&v1[OBJC_IVAR___SUIAShockwavePrototypeSettings_currentUserInterfaceIdiom] = a1;
  objc_msgSend(v1, sel_setDefaultValues);
}

Swift::Bool __swiftcall SUIAShockwavePrototypeSettings.shouldBehaveLikeLargeScreen(_:)(CGSize a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR___SUIAShockwavePrototypeSettings_currentUserInterfaceIdiom);
  if (v2 == 1) {
    return 1;
  }
  if (v2 == 3) {
    return 0;
  }
  if (a1.height < a1.width) {
    a1.width = a1.height;
  }
  return a1.width > 500.0;
}

id SUIAShockwavePrototypeSettings.finalFitVsDiameterRatioShortEdge(forShockwaveSize:)()
{
  return sub_25E723618((const char **)&selRef_finalFitVsDiameterRatioShortEdgeBigScreen, (const char **)&selRef_finalFitVsDiameterRatioShortEdgeSmallScreen);
}

id SUIAShockwavePrototypeSettings.finalFitVsDiameterRatioLongEdge(forShockwaveSize:)()
{
  return sub_25E723618((const char **)&selRef_finalFitVsDiameterRatioLongEdgeBigScreen, (const char **)&selRef_finalFitVsDiameterRatioLongEdgeSmallScreen);
}

id sub_25E723618(const char **a1, const char **a2)
{
  if (objc_msgSend(v2, sel_shouldBehaveLikeLargeScreen_)) {
    id v5 = a1;
  }
  else {
    id v5 = a2;
  }
  id v6 = *v5;
  return [v2 v6];
}

double sub_25E723688(void *a1, double a2, double a3, uint64_t a4, SEL *a5, SEL *a6)
{
  id v10 = a1;
  if (objc_msgSend(v10, sel_shouldBehaveLikeLargeScreen_, a2, a3)) {
    uint64_t v11 = a5;
  }
  else {
    uint64_t v11 = a6;
  }
  [v10 *v11];
  double v13 = v12;

  return v13;
}

void __swiftcall SUIAShockwavePrototypeSettings.chromaticAberrationFinalDonutMask(forShockwaveSize:)(SUIAShockwaveRadialMaskSettings *__return_ptr retstr, CGSize forShockwaveSize)
{
  unsigned int v3 = objc_msgSend(v2, sel_shouldBehaveLikeLargeScreen_, forShockwaveSize.width, forShockwaveSize.height);
  uint64_t v4 = &selRef_chromaticAberrationFinalDonutMaskLargeScreen;
  if (!v3) {
    uint64_t v4 = &selRef_chromaticAberrationFinalDonutMaskSmallScreen;
  }
  id v5 = [v2 *v4];
  id v6 = v5;
}

void sub_25E7237F0(uint64_t a1, uint64_t a2)
{
  sub_25E718334(a2, (uint64_t)&v42);
  if (!*((void *)&v43 + 1)) {
    goto LABEL_37;
  }
  sub_25E711DB8(0, &qword_26A704438);
  if ((swift_dynamicCast() & 1) == 0) {
    return;
  }
  uint64_t v2 = (void *)v39;
  unsigned int v3 = (void *)sub_25E75BEA0();
  uint64_t v4 = &selRef__setDonutGradientLocations_;
  id v5 = objc_msgSend((id)v39, sel_valueForKey_, v3);

  if (v5)
  {
    sub_25E75C050();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v39 = 0u;
    long long v40 = 0u;
  }
  sub_25E728F54((uint64_t)&v39, (uint64_t)&v42);
  if (!*((void *)&v43 + 1))
  {

LABEL_37:
    sub_25E71839C((uint64_t)&v42);
    return;
  }
  sub_25E711DB8(0, &qword_26A704440);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return;
  }
  uint64_t v33 = v2;
  id v6 = v37[0];
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  id v7 = objc_msgSend(v37[0], sel__allKeys);
  if (!v7) {
    goto LABEL_43;
  }
  uint64_t v8 = v7;
  uint64_t v9 = MEMORY[0x263F8DB68];
  uint64_t v10 = sub_25E75BFA0();

  int64_t v11 = 0;
  uint64_t v12 = v10 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v10 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v35 = v10;
  uint64_t v34 = v10 + 56;
  while (v15)
  {
    unint64_t v17 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    unint64_t v18 = v17 | (v11 << 6);
LABEL_29:
    sub_25E728FBC(*(void *)(v10 + 48) + 40 * v18, (uint64_t)&v42);
    long long v39 = v42;
    long long v40 = v43;
    uint64_t v41 = v44;
    if (swift_dynamicCast())
    {
      id v22 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(v6, v4[266], v22);

      if (v23)
      {
        sub_25E75C050();
        swift_unknownObjectRelease();
      }
      else
      {
        *(_OWORD *)id v37 = 0u;
        long long v38 = 0u;
      }
      sub_25E728F54((uint64_t)v37, (uint64_t)&v39);
      if (*((void *)&v40 + 1))
      {
        type metadata accessor for SUIAShockwaveRadialMaskSettings(0);
        if (swift_dynamicCast())
        {
          id v24 = objc_msgSend(v36, sel_computeDerivativeValuesAndGenerateSource);
          id v25 = v4;
          uint64_t v26 = sub_25E75BEB0();
          uint64_t v27 = v9;
          id v28 = v6;
          uint64_t v30 = v29;

          *(void *)&long long v39 = v26;
          *((void *)&v39 + 1) = v30;
          id v6 = v28;
          uint64_t v9 = v27;
          sub_25E75BEE0();
          sub_25E75BEE0();

          uint64_t v4 = v25;
          uint64_t v12 = v34;
          uint64_t v10 = v35;
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_25E71839C((uint64_t)&v39);
      }
    }
  }
  int64_t v19 = v11 + 1;
  if (__OFADD__(v11, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v19 >= v16) {
    goto LABEL_40;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v19);
  ++v11;
  if (v20) {
    goto LABEL_28;
  }
  int64_t v11 = v19 + 1;
  if (v19 + 1 >= v16) {
    goto LABEL_40;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v11);
  if (v20) {
    goto LABEL_28;
  }
  int64_t v11 = v19 + 2;
  if (v19 + 2 >= v16) {
    goto LABEL_40;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v11);
  if (v20)
  {
LABEL_28:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
    goto LABEL_29;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v16)
  {
LABEL_40:
    swift_release();
    id v31 = objc_msgSend(self, sel_generalPasteboard);
    swift_bridgeObjectRetain();
    unint64_t v32 = (void *)sub_25E75BEA0();
    swift_bridgeObjectRelease();
    objc_msgSend(v31, sel_setString_, v32);

    sub_25E75BED0();
    swift_bridgeObjectRelease();

    return;
  }
  unint64_t v20 = *(void *)(v12 + 8 * v21);
  if (v20)
  {
    int64_t v11 = v21;
    goto LABEL_28;
  }
  while (1)
  {
    int64_t v11 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v11 >= v16) {
      goto LABEL_40;
    }
    unint64_t v20 = *(void *)(v12 + 8 * v11);
    ++v21;
    if (v20) {
      goto LABEL_28;
    }
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
}

void _sSo30SUIAShockwavePrototypeSettingsC20SystemUIAnimationKitE24settingsControllerModuleSo8PTModuleCSgyFZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25E760060;
  uint64_t v1 = self;
  id v2 = objc_msgSend(v1, sel_restoreDefaultSettingsButton);
  if (!v2)
  {
    __break(1u);
    goto LABEL_113;
  }
  id v3 = v2;
  uint64_t v4 = sub_25E711DB8(0, &qword_26A704430);
  *(void *)(v0 + 56) = v4;
  *(void *)(v0 + 32) = v3;
  id v5 = (void *)sub_25E75BEA0();
  id v6 = (void *)sub_25E75BEA0();
  id v7 = self;
  id v8 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v5, v6);

  if (!v8)
  {
LABEL_113:
    __break(1u);
    goto LABEL_114;
  }
  id v9 = sub_25E7553D8(2, 0, 0);

  uint64_t v10 = sub_25E711DB8(0, (unint64_t *)&qword_26A704190);
  *(void *)(v0 + 88) = v10;
  *(void *)(v0 + 64) = v9;
  int64_t v11 = (void *)sub_25E75BEA0();
  uint64_t v12 = (void *)sub_25E75BEA0();
  id v13 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v11, v12);

  if (!v13)
  {
LABEL_114:
    __break(1u);
    goto LABEL_115;
  }
  id v14 = sub_25E7553D8(2, 0, 0);

  *(void *)(v0 + 120) = v10;
  *(void *)(v0 + 96) = v14;
  unint64_t v15 = (void *)sub_25E75BEA0();
  int64_t v16 = (void *)sub_25E75BEA0();
  id v348 = self;
  id v17 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v15, v16);

  if (!v17)
  {
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
  uint64_t v342 = v10;
  unint64_t v18 = self;
  uint64_t v347 = sub_25E711DB8(0, &qword_26A704198);
  *(void *)(v0 + 152) = v347;
  *(void *)(v0 + 128) = v17;
  int64_t v19 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  unint64_t v20 = (void *)sub_25E75BEA0();
  id v346 = v18;
  id v21 = objc_msgSend(v18, sel_sectionWithRows_title_, v19, v20);

  if (!v21)
  {
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
  v357 = sub_25E7237F0;
  uint64_t v358 = 0;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  v355 = sub_25E72CE04;
  v356 = &block_descriptor;
  id v22 = _Block_copy(&aBlock);
  swift_release();
  id v23 = objc_msgSend(self, sel_actionWithHandler_, v22);
  _Block_release(v22);
  if (!v23)
  {
LABEL_117:
    __break(1u);
    goto LABEL_118;
  }
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_25E75FB80;
  id v25 = (void *)sub_25E75BEA0();
  uint64_t v26 = (void *)sub_25E75BEA0();
  id v27 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v25, v26);

  if (!v27)
  {
LABEL_118:
    __break(1u);
    goto LABEL_119;
  }
  id v28 = objc_msgSend(v27, sel_precision_, 1);

  if (!v28)
  {
LABEL_119:
    __break(1u);
    goto LABEL_120;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(&aBlock, (_OWORD *)(v24 + 32));
  uint64_t v29 = (void *)sub_25E75BEA0();
  uint64_t v30 = (void *)sub_25E75BEA0();
  id v31 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v29, v30);

  if (!v31)
  {
LABEL_120:
    __break(1u);
    goto LABEL_121;
  }
  id v32 = objc_msgSend(v31, sel_precision_, 2);

  if (!v32)
  {
LABEL_121:
    __break(1u);
    goto LABEL_122;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v353, (_OWORD *)(v24 + 64));
  uint64_t v33 = (void *)sub_25E75BEA0();
  uint64_t v34 = (void *)sub_25E75BEA0();
  id v35 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v33, v34);

  if (!v35)
  {
LABEL_122:
    __break(1u);
    goto LABEL_123;
  }
  id v36 = objc_msgSend(v35, sel_precision_, 2);

  if (!v36)
  {
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v352, (_OWORD *)(v24 + 96));
  id v37 = (void *)sub_25E75BEA0();
  long long v38 = (void *)sub_25E75BEA0();
  id v39 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v37, v38);

  if (!v39)
  {
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  v337 = v21;
  id v40 = objc_msgSend(v39, sel_precision_, 2);

  if (!v40)
  {
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v351, (_OWORD *)(v24 + 128));
  uint64_t v41 = (void *)sub_25E75BEA0();
  long long v42 = (void *)sub_25E75BEA0();
  id v43 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v41, v42);

  if (!v43)
  {
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
  id v44 = objc_msgSend(v43, sel_precision_, 2);

  if (!v44)
  {
LABEL_127:
    __break(1u);
    goto LABEL_128;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v350, (_OWORD *)(v24 + 160));
  uint64_t v45 = (void *)sub_25E75BEA0();
  unint64_t v46 = (void *)sub_25E75BEA0();
  id v47 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v45, v46);

  if (!v47)
  {
LABEL_128:
    __break(1u);
    goto LABEL_129;
  }
  id v48 = objc_msgSend(v47, sel_precision_, 2);

  if (!v48)
  {
LABEL_129:
    __break(1u);
    goto LABEL_130;
  }
  v340 = v23;
  id v341 = v1;
  uint64_t v339 = v4;
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(&v349, (_OWORD *)(v24 + 192));
  id v49 = (void *)sub_25E75BEA0();
  id v50 = (void *)sub_25E75BEA0();
  uint64_t v51 = self;
  id v52 = objc_msgSend(v51, sel_rowWithTitle_childSettingsKeyPath_, v49, v50);

  if (!v52)
  {
LABEL_130:
    __break(1u);
    goto LABEL_131;
  }
  uint64_t v53 = sub_25E711DB8(0, &qword_26A704058);
  *(void *)(v24 + 248) = v53;
  *(void *)(v24 + 224) = v52;
  unint64_t v54 = (void *)sub_25E75BEA0();
  id v55 = (void *)sub_25E75BEA0();
  id v56 = objc_msgSend(v51, sel_rowWithTitle_childSettingsKeyPath_, v54, v55);

  if (!v56)
  {
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  *(void *)(v24 + 280) = v53;
  *(void *)(v24 + 256) = v56;
  uint64_t v57 = (void *)sub_25E75BEA0();
  id v58 = (void *)sub_25E75BEA0();
  id v59 = objc_msgSend(v51, (SEL)&selRef_fillLightFinalIntensity + 2, v57, v58);

  if (!v59)
  {
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
  *(void *)(v24 + 312) = v53;
  *(void *)(v24 + 288) = v59;
  unint64_t v60 = (void *)sub_25E75BEA0();
  id v61 = (void *)sub_25E75BEA0();
  id v62 = objc_msgSend(v51, (SEL)&selRef_fillLightFinalIntensity + 2, v60, v61);

  if (!v62)
  {
LABEL_133:
    __break(1u);
    goto LABEL_134;
  }
  *(void *)(v24 + 344) = v53;
  *(void *)(v24 + 320) = v62;
  id v63 = (void *)sub_25E75BEA0();
  id v64 = (void *)sub_25E75BEA0();
  id v65 = objc_msgSend(v51, (SEL)&selRef_fillLightFinalIntensity + 2, v63, v64);

  if (!v65)
  {
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
  *(void *)(v24 + 376) = v53;
  *(void *)(v24 + 352) = v65;
  id v66 = (void *)sub_25E75BEA0();
  id v67 = (void *)sub_25E75BEA0();
  id v68 = objc_msgSend(v51, (SEL)&selRef_fillLightFinalIntensity + 2, v66, v67);

  if (!v68)
  {
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  *(void *)(v24 + 408) = v53;
  *(void *)(v24 + 384) = v68;
  id v69 = (void *)sub_25E75BEA0();
  id v70 = (void *)sub_25E75BEA0();
  id v71 = objc_msgSend(v51, (SEL)&selRef_fillLightFinalIntensity + 2, v69, v70);

  if (!v71)
  {
LABEL_136:
    __break(1u);
    goto LABEL_137;
  }
  *(void *)(v24 + 440) = v53;
  *(void *)(v24 + 416) = v71;
  id v72 = (void *)sub_25E75BEA0();
  id v73 = (void *)sub_25E75BEA0();
  id v74 = objc_msgSend(v51, (SEL)&selRef_fillLightFinalIntensity + 2, v72, v73);

  if (!v74)
  {
LABEL_137:
    __break(1u);
    goto LABEL_138;
  }
  *(void *)(v24 + 472) = v53;
  *(void *)(v24 + 448) = v74;
  id v75 = (void *)sub_25E75BEA0();
  id v76 = (void *)sub_25E75BEA0();
  id v77 = objc_msgSend(v51, (SEL)&selRef_fillLightFinalIntensity + 2, v75, v76);

  if (!v77)
  {
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  *(void *)(v24 + 504) = v53;
  *(void *)(v24 + 480) = v77;
  id v78 = (void *)sub_25E75BEA0();
  id v79 = (void *)sub_25E75BEA0();
  v345 = v51;
  id v80 = objc_msgSend(v51, (SEL)&selRef_fillLightFinalIntensity + 2, v78, v79);

  if (!v80)
  {
LABEL_139:
    __break(1u);
    goto LABEL_140;
  }
  *(void *)(v24 + 536) = v53;
  *(void *)(v24 + 512) = v80;
  id v81 = v340;
  id v82 = (void *)sub_25E75BEA0();
  id v83 = objc_msgSend(v341, sel_rowWithTitle_action_, v82, v81);

  if (!v83)
  {
LABEL_140:
    __break(1u);
    goto LABEL_141;
  }
  *(void *)(v24 + 568) = v339;
  *(void *)(v24 + 544) = v83;
  id v84 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  id v85 = (void *)sub_25E75BEA0();
  id v86 = objc_msgSend(v346, sel_sectionWithRows_title_, v84, v85);

  id v336 = v86;
  if (!v86)
  {
LABEL_141:
    __break(1u);
    goto LABEL_142;
  }
  uint64_t v87 = swift_allocObject();
  *(_OWORD *)(v87 + 16) = xmmword_25E760070;
  id v88 = (void *)sub_25E75BEA0();
  id v89 = (void *)sub_25E75BEA0();
  id v90 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v88, v89);

  if (!v90)
  {
LABEL_142:
    __break(1u);
    goto LABEL_143;
  }
  v335 = v81;
  id v91 = sub_25E7553D8(2, 0, 0);

  *(void *)(v87 + 56) = v342;
  *(void *)(v87 + 32) = v91;
  id v92 = (void *)sub_25E75BEA0();
  id v93 = (void *)sub_25E75BEA0();
  id v94 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v92, v93);

  if (!v94)
  {
LABEL_143:
    __break(1u);
    goto LABEL_144;
  }
  id v95 = sub_25E7553D8(2, 0, 0);

  *(void *)(v87 + 88) = v342;
  *(void *)(v87 + 64) = v95;
  id v96 = (void *)sub_25E75BEA0();
  id v97 = (void *)sub_25E75BEA0();
  id v98 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v96, v97);

  if (!v98)
  {
LABEL_144:
    __break(1u);
    goto LABEL_145;
  }
  id v99 = sub_25E7553D8(2, 0, 0);

  *(void *)(v87 + 120) = v342;
  *(void *)(v87 + 96) = v99;
  unint64_t v100 = (void *)sub_25E75BEA0();
  id v101 = (void *)sub_25E75BEA0();
  id v102 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v100, v101);

  if (!v102)
  {
LABEL_145:
    __break(1u);
    goto LABEL_146;
  }
  id v103 = sub_25E7553D8(2, 0, 0);

  *(void *)(v87 + 152) = v342;
  *(void *)(v87 + 128) = v103;
  double v104 = (void *)sub_25E75BEA0();
  double v105 = (void *)sub_25E75BEA0();
  id v106 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v104, v105);

  if (!v106)
  {
LABEL_146:
    __break(1u);
    goto LABEL_147;
  }
  id v107 = sub_25E7553D8(2, 0, 0);

  *(void *)(v87 + 184) = v342;
  *(void *)(v87 + 160) = v107;
  unint64_t v108 = (void *)sub_25E75BEA0();
  uint64_t v109 = (void *)sub_25E75BEA0();
  id v110 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v108, v109);

  if (!v110)
  {
LABEL_147:
    __break(1u);
    goto LABEL_148;
  }
  *(void *)(v87 + 216) = v347;
  *(void *)(v87 + 192) = v110;
  id v111 = (void *)sub_25E75BEA0();
  id v112 = (void *)sub_25E75BEA0();
  id v113 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v111, v112);

  if (!v113)
  {
LABEL_148:
    __break(1u);
    goto LABEL_149;
  }
  id v114 = sub_25E7553D8(2, 0, 0);

  sub_25E711DB8(0, &qword_26A704178);
  unint64_t v115 = (void *)sub_25E75BFC0();
  if (!objc_msgSend(v114, sel_condition_, v115))
  {
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v353, &aBlock);
  swift_dynamicCast();
  uint64_t v116 = *(void *)&v352[0];

  *(void *)(v87 + 248) = v342;
  *(void *)(v87 + 224) = v116;
  uint64_t v117 = (void *)sub_25E75BEA0();
  id v118 = (void *)sub_25E75BEA0();
  id v119 = objc_msgSend(v348, (SEL)&selRef_filterWithType_ + 5, v117, v118);

  if (!v119)
  {
LABEL_150:
    __break(1u);
    goto LABEL_151;
  }
  *(void *)(v87 + 280) = v347;
  *(void *)(v87 + 256) = v119;
  unint64_t v120 = (void *)sub_25E75BEA0();
  uint64_t v121 = (void *)sub_25E75BEA0();
  id v122 = objc_msgSend(v7, (SEL)&selRef_filterWithType_ + 5, v120, v121);

  if (!v122)
  {
LABEL_151:
    __break(1u);
    goto LABEL_152;
  }
  id v123 = sub_25E7553D8(2, 0, 0);

  char v124 = (void *)sub_25E75BFC0();
  if (!objc_msgSend(v123, sel_condition_, v124))
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v353, &aBlock);
  swift_dynamicCast();
  uint64_t v125 = *(void *)&v352[0];

  *(void *)(v87 + 312) = v342;
  *(void *)(v87 + 288) = v125;
  uint64_t v126 = (void *)sub_25E75BEA0();
  uint64_t v127 = (void *)sub_25E75BEA0();
  id v128 = objc_msgSend(v348, (SEL)&selRef_filterWithType_ + 5, v126, v127);

  if (!v128)
  {
LABEL_153:
    __break(1u);
    goto LABEL_154;
  }
  *(void *)(v87 + 344) = v347;
  *(void *)(v87 + 320) = v128;
  uint64_t v129 = (void *)sub_25E75BEA0();
  uint64_t v130 = (void *)sub_25E75BEA0();
  id v131 = objc_msgSend(v7, (SEL)&selRef_filterWithType_ + 5, v129, v130);

  if (!v131)
  {
LABEL_154:
    __break(1u);
    goto LABEL_155;
  }
  id v132 = sub_25E7553D8(2, 0, 0);

  uint64_t v133 = (void *)sub_25E75BFC0();
  if (!objc_msgSend(v132, sel_condition_, v133))
  {
LABEL_155:
    __break(1u);
    goto LABEL_156;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v353, &aBlock);
  swift_dynamicCast();
  uint64_t v134 = *(void *)&v352[0];

  *(void *)(v87 + 376) = v342;
  *(void *)(v87 + 352) = v134;
  char v135 = (void *)sub_25E75BEA0();
  uint64_t v136 = (void *)sub_25E75BEA0();
  id v137 = objc_msgSend(v348, (SEL)&selRef_filterWithType_ + 5, v135, v136);

  if (!v137)
  {
LABEL_156:
    __break(1u);
    goto LABEL_157;
  }
  *(void *)(v87 + 408) = v347;
  *(void *)(v87 + 384) = v137;
  uint64_t v138 = (void *)sub_25E75BEA0();
  uint64_t v139 = (void *)sub_25E75BEA0();
  id v140 = objc_msgSend(v7, (SEL)&selRef_filterWithType_ + 5, v138, v139);

  if (!v140)
  {
LABEL_157:
    __break(1u);
    goto LABEL_158;
  }
  id v141 = sub_25E7553D8(2, 0, 0);

  uint64_t v142 = (void *)sub_25E75BFC0();
  if (!objc_msgSend(v141, sel_condition_, v142))
  {
LABEL_158:
    __break(1u);
    goto LABEL_159;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v353, &aBlock);
  swift_dynamicCast();
  uint64_t v143 = *(void *)&v352[0];

  *(void *)(v87 + 440) = v342;
  *(void *)(v87 + 416) = v143;
  uint64_t v144 = (void *)sub_25E75BEA0();
  uint64_t v145 = (void *)sub_25E75BEA0();
  id v146 = objc_msgSend(v51, sel_rowWithTitle_childSettingsKeyPath_, v144, v145);

  if (!v146)
  {
LABEL_159:
    __break(1u);
    goto LABEL_160;
  }
  *(void *)(v87 + 472) = v53;
  *(void *)(v87 + 448) = v146;
  char v147 = (void *)sub_25E75BEA0();
  uint64_t v148 = (void *)sub_25E75BEA0();
  id v149 = objc_msgSend(v51, sel_rowWithTitle_childSettingsKeyPath_, v147, v148);

  if (!v149)
  {
LABEL_160:
    __break(1u);
    goto LABEL_161;
  }
  *(void *)(v87 + 504) = v53;
  *(void *)(v87 + 480) = v149;
  uint64_t v150 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v151 = (void *)sub_25E75BEA0();
  id v152 = objc_msgSend(v346, sel_sectionWithRows_title_, v150, v151);

  if (!v152)
  {
LABEL_161:
    __break(1u);
    goto LABEL_162;
  }
  uint64_t v153 = swift_allocObject();
  *(_OWORD *)(v153 + 16) = xmmword_25E760080;
  uint64_t v154 = (void *)sub_25E75BEA0();
  uint64_t v155 = (void *)sub_25E75BEA0();
  id v156 = objc_msgSend(v7, (SEL)&selRef_filterWithType_ + 5, v154, v155);

  if (!v156)
  {
LABEL_162:
    __break(1u);
    goto LABEL_163;
  }
  id v157 = objc_msgSend(v156, sel_precision_, 2);

  if (!v157)
  {
LABEL_163:
    __break(1u);
    goto LABEL_164;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(&aBlock, (_OWORD *)(v153 + 32));
  uint64_t v158 = (void *)sub_25E75BEA0();
  uint64_t v159 = (void *)sub_25E75BEA0();
  id v160 = objc_msgSend(v7, (SEL)&selRef_filterWithType_ + 5, v158, v159);

  if (!v160)
  {
LABEL_164:
    __break(1u);
    goto LABEL_165;
  }
  id v161 = objc_msgSend(v160, sel_precision_, 2);

  if (!v161)
  {
LABEL_165:
    __break(1u);
    goto LABEL_166;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v353, (_OWORD *)(v153 + 64));
  uint64_t v162 = (void *)sub_25E75BEA0();
  uint64_t v163 = (void *)sub_25E75BEA0();
  id v164 = objc_msgSend(v7, (SEL)&selRef_filterWithType_ + 5, v162, v163);

  if (!v164)
  {
LABEL_166:
    __break(1u);
    goto LABEL_167;
  }
  id v165 = objc_msgSend(v164, sel_precision_, 2);

  if (!v165)
  {
LABEL_167:
    __break(1u);
    goto LABEL_168;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v352, (_OWORD *)(v153 + 96));
  uint64_t v166 = (void *)sub_25E75BEA0();
  uint64_t v167 = (void *)sub_25E75BEA0();
  id v168 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v166, v167);

  if (!v168)
  {
LABEL_168:
    __break(1u);
    goto LABEL_169;
  }
  id v169 = objc_msgSend(v168, sel_precision_, 2);

  if (!v169)
  {
LABEL_169:
    __break(1u);
    goto LABEL_170;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v351, (_OWORD *)(v153 + 128));
  v170 = (void *)sub_25E75BEA0();
  int32x2_t v171 = (void *)sub_25E75BEA0();
  id v172 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v170, v171);

  if (!v172)
  {
LABEL_170:
    __break(1u);
    goto LABEL_171;
  }
  id v173 = objc_msgSend(v172, sel_precision_, 2);

  if (!v173)
  {
LABEL_171:
    __break(1u);
    goto LABEL_172;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v350, (_OWORD *)(v153 + 160));
  char v174 = (void *)sub_25E75BEA0();
  int v175 = (void *)sub_25E75BEA0();
  id v176 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v174, v175);

  if (!v176)
  {
LABEL_172:
    __break(1u);
    goto LABEL_173;
  }
  id v177 = sub_25E7553D8(2, 0, 0);

  *(void *)(v153 + 216) = v342;
  *(void *)(v153 + 192) = v177;
  char v178 = (void *)sub_25E75BEA0();
  int v179 = (void *)sub_25E75BEA0();
  id v180 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v178, v179);

  if (!v180)
  {
LABEL_173:
    __break(1u);
    goto LABEL_174;
  }
  id v334 = v152;
  *(void *)(v153 + 248) = v347;
  *(void *)(v153 + 224) = v180;
  int v181 = (void *)sub_25E75BEA0();
  char v182 = (void *)sub_25E75BEA0();
  id v183 = objc_msgSend(v51, sel_rowWithTitle_childSettingsKeyPath_, v181, v182);

  if (!v183)
  {
LABEL_174:
    __break(1u);
    goto LABEL_175;
  }
  *(void *)(v153 + 280) = v53;
  *(void *)(v153 + 256) = v183;
  char v184 = (void *)sub_25E75BEA0();
  int v185 = (void *)sub_25E75BEA0();
  id v186 = objc_msgSend(v51, sel_rowWithTitle_childSettingsKeyPath_, v184, v185);

  if (!v186)
  {
LABEL_175:
    __break(1u);
    goto LABEL_176;
  }
  *(void *)(v153 + 312) = v53;
  *(void *)(v153 + 288) = v186;
  int v187 = (void *)sub_25E75BEA0();
  char v188 = (void *)sub_25E75BEA0();
  id v189 = objc_msgSend(v51, sel_rowWithTitle_childSettingsKeyPath_, v187, v188);

  if (!v189)
  {
LABEL_176:
    __break(1u);
    goto LABEL_177;
  }
  *(void *)(v153 + 344) = v53;
  *(void *)(v153 + 320) = v189;
  char v190 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  int v191 = (void *)sub_25E75BEA0();
  id v192 = objc_msgSend(v346, sel_sectionWithRows_title_, v190, v191);

  if (!v192)
  {
LABEL_177:
    __break(1u);
    goto LABEL_178;
  }
  uint64_t v193 = swift_allocObject();
  *(_OWORD *)(v193 + 16) = xmmword_25E760090;
  char v194 = (void *)sub_25E75BEA0();
  v195 = (void *)sub_25E75BEA0();
  id v196 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v194, v195);

  if (!v196)
  {
LABEL_178:
    __break(1u);
    goto LABEL_179;
  }
  id v197 = sub_25E7553D8(2, 0, 0);

  *(void *)(v193 + 56) = v342;
  *(void *)(v193 + 32) = v197;
  char v198 = (void *)sub_25E75BEA0();
  v199 = (void *)sub_25E75BEA0();
  id v200 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v198, v199);

  if (!v200)
  {
LABEL_179:
    __break(1u);
    goto LABEL_180;
  }
  id v201 = sub_25E7553D8(2, 0, 0);

  *(void *)(v193 + 88) = v342;
  *(void *)(v193 + 64) = v201;
  char v202 = (void *)sub_25E75BEA0();
  v203 = (void *)sub_25E75BEA0();
  id v204 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v202, v203);

  if (!v204)
  {
LABEL_180:
    __break(1u);
    goto LABEL_181;
  }
  id v205 = sub_25E7553D8(2, 0, 0);

  *(void *)&long long aBlock = 0;
  *((void *)&aBlock + 1) = 0xE000000000000000;
  sub_25E75C0A0();
  swift_bridgeObjectRelease();
  *(void *)&long long aBlock = 0xD000000000000018;
  *((void *)&aBlock + 1) = 0x800000025E764BF0;
  *(void *)&v353[0] = 2;
  sub_25E75C170();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  char v206 = (void *)sub_25E75BFC0();
  swift_bridgeObjectRelease();
  if (!objc_msgSend(v205, sel_condition_, v206))
  {
LABEL_181:
    __break(1u);
    goto LABEL_182;
  }
  id v338 = v192;
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v353, &aBlock);
  swift_dynamicCast();
  uint64_t v207 = *(void *)&v352[0];

  *(void *)(v193 + 120) = v342;
  *(void *)(v193 + 96) = v207;
  char v208 = (void *)sub_25E75BEA0();
  v209 = (void *)sub_25E75BEA0();
  id v210 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v208, v209);

  if (!v210)
  {
LABEL_182:
    __break(1u);
    goto LABEL_183;
  }
  id v211 = sub_25E7553D8(2, 0, 0);

  *(void *)(v193 + 152) = v342;
  *(void *)(v193 + 128) = v211;
  char v212 = (void *)sub_25E75BEA0();
  v213 = (void *)sub_25E75BEA0();
  id v214 = objc_msgSend(v345, sel_rowWithTitle_childSettingsKeyPath_, v212, v213);

  if (!v214)
  {
LABEL_183:
    __break(1u);
    goto LABEL_184;
  }
  *(void *)(v193 + 184) = v53;
  *(void *)(v193 + 160) = v214;
  uint64_t v215 = (void *)sub_25E75BEA0();
  char v216 = (void *)sub_25E75BEA0();
  id v217 = objc_msgSend(v345, sel_rowWithTitle_childSettingsKeyPath_, v215, v216);

  if (!v217)
  {
LABEL_184:
    __break(1u);
    goto LABEL_185;
  }
  *(void *)(v193 + 216) = v53;
  *(void *)(v193 + 192) = v217;
  uint64_t v218 = (void *)sub_25E75BEA0();
  uint64_t v219 = (void *)sub_25E75BEA0();
  id v220 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v218, v219);

  if (!v220)
  {
LABEL_185:
    __break(1u);
    goto LABEL_186;
  }
  id v221 = sub_25E7553D8(2, 0, 0);

  *(void *)(v193 + 248) = v342;
  *(void *)(v193 + 224) = v221;
  long long v222 = (void *)sub_25E75BEA0();
  long long v223 = (void *)sub_25E75BEA0();
  id v224 = objc_msgSend(v7, (SEL)&selRef_filterWithType_ + 5, v222, v223);

  if (!v224)
  {
LABEL_186:
    __break(1u);
    goto LABEL_187;
  }
  id v225 = sub_25E7553D8(2, 0, 0);

  *(void *)(v193 + 280) = v342;
  *(void *)(v193 + 256) = v225;
  int v226 = (void *)sub_25E75BEA0();
  char v227 = (void *)sub_25E75BEA0();
  id v228 = objc_msgSend(v7, (SEL)&selRef_filterWithType_ + 5, v226, v227);

  if (!v228)
  {
LABEL_187:
    __break(1u);
    goto LABEL_188;
  }
  id v229 = sub_25E7553D8(2, 0, 0);

  *(void *)(v193 + 312) = v342;
  *(void *)(v193 + 288) = v229;
  v230 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  v231 = (void *)sub_25E75BEA0();
  id v232 = objc_msgSend(v346, sel_sectionWithRows_title_, v230, v231);

  id v343 = v232;
  if (!v232)
  {
LABEL_188:
    __break(1u);
    goto LABEL_189;
  }
  uint64_t v233 = swift_allocObject();
  *(_OWORD *)(v233 + 16) = xmmword_25E760060;
  v234 = (void *)sub_25E75BEA0();
  v235 = (void *)sub_25E75BEA0();
  id v236 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v234, v235);

  if (!v236)
  {
LABEL_189:
    __break(1u);
    goto LABEL_190;
  }
  id v237 = objc_msgSend(v236, sel_precision_, 3);

  if (!v237)
  {
LABEL_190:
    __break(1u);
    goto LABEL_191;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(&aBlock, (_OWORD *)(v233 + 32));
  v238 = (void *)sub_25E75BEA0();
  v239 = (void *)sub_25E75BEA0();
  id v240 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v238, v239);

  if (!v240)
  {
LABEL_191:
    __break(1u);
    goto LABEL_192;
  }
  id v241 = objc_msgSend(v240, sel_precision_, 3);

  if (!v241)
  {
LABEL_192:
    __break(1u);
    goto LABEL_193;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v353, (_OWORD *)(v233 + 64));
  v242 = (void *)sub_25E75BEA0();
  v243 = (void *)sub_25E75BEA0();
  id v244 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v242, v243);

  if (!v244)
  {
LABEL_193:
    __break(1u);
    goto LABEL_194;
  }
  id v245 = objc_msgSend(v244, sel_precision_, 3);

  if (!v245)
  {
LABEL_194:
    __break(1u);
    goto LABEL_195;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v352, (_OWORD *)(v233 + 96));
  v246 = (void *)sub_25E75BEA0();
  v247 = (void *)sub_25E75BEA0();
  id v248 = objc_msgSend(v345, sel_rowWithTitle_childSettingsKeyPath_, v246, v247);

  if (!v248)
  {
LABEL_195:
    __break(1u);
    goto LABEL_196;
  }
  *(void *)(v233 + 152) = v53;
  *(void *)(v233 + 128) = v248;
  v249 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  v250 = (void *)sub_25E75BEA0();
  id v251 = objc_msgSend(v346, sel_sectionWithRows_title_, v249, v250);

  if (!v251)
  {
LABEL_196:
    __break(1u);
    goto LABEL_197;
  }
  uint64_t v252 = swift_allocObject();
  *(_OWORD *)(v252 + 16) = xmmword_25E760060;
  v253 = (void *)sub_25E75BEA0();
  v254 = (void *)sub_25E75BEA0();
  id v255 = objc_msgSend(v345, sel_rowWithTitle_childSettingsKeyPath_, v253, v254);

  if (!v255)
  {
LABEL_197:
    __break(1u);
    goto LABEL_198;
  }
  *(void *)(v252 + 56) = v53;
  *(void *)(v252 + 32) = v255;
  v256 = (void *)sub_25E75BEA0();
  v257 = (void *)sub_25E75BEA0();
  id v258 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v256, v257);

  if (!v258)
  {
LABEL_198:
    __break(1u);
    goto LABEL_199;
  }
  id v259 = objc_msgSend(v258, sel_precision_, 3);

  if (!v259)
  {
LABEL_199:
    __break(1u);
    goto LABEL_200;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(&aBlock, (_OWORD *)(v252 + 64));
  v260 = (void *)sub_25E75BEA0();
  v261 = (void *)sub_25E75BEA0();
  id v262 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v260, v261);

  if (!v262)
  {
LABEL_200:
    __break(1u);
    goto LABEL_201;
  }
  id v263 = objc_msgSend(v262, sel_precision_, 3);

  if (!v263)
  {
LABEL_201:
    __break(1u);
    goto LABEL_202;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v353, (_OWORD *)(v252 + 96));
  v264 = (void *)sub_25E75BEA0();
  v265 = (void *)sub_25E75BEA0();
  id v266 = objc_msgSend(v7, sel_rowWithTitle_valueKeyPath_, v264, v265);

  if (!v266)
  {
LABEL_202:
    __break(1u);
    goto LABEL_203;
  }
  id v267 = objc_msgSend(v266, sel_precision_, 3);

  if (!v267)
  {
LABEL_203:
    __break(1u);
    goto LABEL_204;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v352, (_OWORD *)(v252 + 128));
  v268 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  v269 = (void *)sub_25E75BEA0();
  id v270 = objc_msgSend(v346, sel_sectionWithRows_title_, v268, v269);

  if (!v270)
  {
LABEL_204:
    __break(1u);
    goto LABEL_205;
  }
  uint64_t v271 = swift_allocObject();
  *(_OWORD *)(v271 + 16) = xmmword_25E7600A0;
  v272 = (void *)sub_25E75BEA0();
  v273 = (void *)sub_25E75BEA0();
  id v274 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v272, v273);

  if (!v274)
  {
LABEL_205:
    __break(1u);
    goto LABEL_206;
  }
  *(void *)(v271 + 56) = v347;
  *(void *)(v271 + 32) = v274;
  v275 = (void *)sub_25E75BEA0();
  v276 = (void *)sub_25E75BEA0();
  id v277 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v275, v276);

  if (!v277)
  {
LABEL_206:
    __break(1u);
    goto LABEL_207;
  }
  id v344 = v270;
  *(void *)(v271 + 88) = v347;
  *(void *)(v271 + 64) = v277;
  v278 = (void *)sub_25E75BEA0();
  v279 = (void *)sub_25E75BEA0();
  id v280 = objc_msgSend(self, sel_rowWithTitle_valueKeyPath_, v278, v279);

  if (!v280)
  {
LABEL_207:
    __break(1u);
    goto LABEL_208;
  }
  uint64_t v281 = swift_allocObject();
  *(_OWORD *)(v281 + 16) = xmmword_25E7600A0;
  *(void *)(v281 + 32) = 0;
  uint64_t v282 = MEMORY[0x263F8D6C8];
  *(void *)(v281 + 56) = MEMORY[0x263F8D6C8];
  *(void *)(v281 + 64) = 1;
  *(void *)(v281 + 120) = v282;
  *(void *)(v281 + 88) = v282;
  *(void *)(v281 + 96) = 2;
  v283 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v284 = swift_allocObject();
  *(_OWORD *)(v284 + 16) = xmmword_25E7600A0;
  uint64_t v285 = MEMORY[0x263F8D310];
  *(void *)(v284 + 32) = 1701736270;
  *(void *)(v284 + 40) = 0xE400000000000000;
  *(void *)(v284 + 56) = v285;
  strcpy((char *)(v284 + 64), "Intelligence");
  *(unsigned char *)(v284 + 77) = 0;
  *(_WORD *)(v284 + 78) = -5120;
  *(void *)(v284 + 120) = v285;
  *(void *)(v284 + 88) = v285;
  *(void *)(v284 + 96) = 0x6574696857;
  *(void *)(v284 + 104) = 0xE500000000000000;
  v286 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  id v287 = objc_msgSend(v280, sel_possibleValues_titles_, v283, v286);

  if (!v287)
  {
LABEL_208:
    __break(1u);
    goto LABEL_209;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(&aBlock, (_OWORD *)(v271 + 96));
  v288 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  v289 = (void *)sub_25E75BEA0();
  id v290 = objc_msgSend(v346, sel_sectionWithRows_title_, v288, v289);

  if (!v290)
  {
LABEL_209:
    __break(1u);
    goto LABEL_210;
  }
  uint64_t v291 = swift_allocObject();
  *(_OWORD *)(v291 + 16) = xmmword_25E7600B0;
  v292 = (void *)sub_25E75BEA0();
  v293 = (void *)sub_25E75BEA0();
  id v294 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v292, v293);

  if (!v294)
  {
LABEL_210:
    __break(1u);
    goto LABEL_211;
  }
  *(void *)(v291 + 56) = v347;
  *(void *)(v291 + 32) = v294;
  v295 = (void *)sub_25E75BEA0();
  v296 = (void *)sub_25E75BEA0();
  id v297 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v295, v296);

  if (!v297)
  {
LABEL_211:
    __break(1u);
    goto LABEL_212;
  }
  *(void *)(v291 + 88) = v347;
  *(void *)(v291 + 64) = v297;
  v298 = (void *)sub_25E75BEA0();
  v299 = (void *)sub_25E75BEA0();
  id v300 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v298, v299);

  if (!v300)
  {
LABEL_212:
    __break(1u);
    goto LABEL_213;
  }
  *(void *)(v291 + 120) = v347;
  *(void *)(v291 + 96) = v300;
  v301 = (void *)sub_25E75BEA0();
  v302 = (void *)sub_25E75BEA0();
  id v303 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v301, v302);

  if (!v303)
  {
LABEL_213:
    __break(1u);
    goto LABEL_214;
  }
  *(void *)(v291 + 152) = v347;
  *(void *)(v291 + 128) = v303;
  v304 = (void *)sub_25E75BEA0();
  v305 = (void *)sub_25E75BEA0();
  id v306 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v304, v305);

  if (!v306)
  {
LABEL_214:
    __break(1u);
    goto LABEL_215;
  }
  *(void *)(v291 + 184) = v347;
  *(void *)(v291 + 160) = v306;
  v307 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  v308 = (void *)sub_25E75BEA0();
  id v309 = objc_msgSend(v346, sel_sectionWithRows_title_, v307, v308);

  if (!v309)
  {
LABEL_215:
    __break(1u);
    goto LABEL_216;
  }
  uint64_t v310 = swift_allocObject();
  *(_OWORD *)(v310 + 16) = xmmword_25E7600B0;
  v311 = (void *)sub_25E75BEA0();
  v312 = (void *)sub_25E75BEA0();
  id v313 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v311, v312);

  if (!v313)
  {
LABEL_216:
    __break(1u);
    goto LABEL_217;
  }
  *(void *)(v310 + 56) = v347;
  *(void *)(v310 + 32) = v313;
  v314 = (void *)sub_25E75BEA0();
  v315 = (void *)sub_25E75BEA0();
  id v316 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v314, v315);

  if (!v316)
  {
LABEL_217:
    __break(1u);
    goto LABEL_218;
  }
  *(void *)(v310 + 88) = v347;
  *(void *)(v310 + 64) = v316;
  v317 = (void *)sub_25E75BEA0();
  v318 = (void *)sub_25E75BEA0();
  id v319 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v317, v318);

  if (!v319)
  {
LABEL_218:
    __break(1u);
    goto LABEL_219;
  }
  *(void *)(v310 + 120) = v347;
  *(void *)(v310 + 96) = v319;
  v320 = (void *)sub_25E75BEA0();
  v321 = (void *)sub_25E75BEA0();
  id v322 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v320, v321);

  if (!v322)
  {
LABEL_219:
    __break(1u);
    goto LABEL_220;
  }
  *(void *)(v310 + 152) = v347;
  *(void *)(v310 + 128) = v322;
  v323 = (void *)sub_25E75BEA0();
  v324 = (void *)sub_25E75BEA0();
  id v325 = objc_msgSend(v348, sel_rowWithTitle_valueKeyPath_, v323, v324);

  if (!v325)
  {
LABEL_220:
    __break(1u);
    goto LABEL_221;
  }
  *(void *)(v310 + 184) = v347;
  *(void *)(v310 + 160) = v325;
  v326 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  v327 = (void *)sub_25E75BEA0();
  id v328 = objc_msgSend(v346, sel_sectionWithRows_title_, v326, v327);

  if (v328)
  {
    uint64_t v329 = swift_allocObject();
    *(_OWORD *)(v329 + 16) = xmmword_25E760080;
    uint64_t v330 = sub_25E711DB8(0, &qword_26A704060);
    *(void *)(v329 + 32) = v337;
    *(void *)(v329 + 56) = v330;
    *(void *)(v329 + 64) = v336;
    *(void *)(v329 + 88) = v330;
    *(void *)(v329 + 96) = v334;
    *(void *)(v329 + 120) = v330;
    *(void *)(v329 + 128) = v338;
    *(void *)(v329 + 152) = v330;
    *(void *)(v329 + 160) = v343;
    *(void *)(v329 + 184) = v330;
    *(void *)(v329 + 192) = v344;
    *(void *)(v329 + 216) = v330;
    *(void *)(v329 + 224) = v251;
    *(void *)(v329 + 248) = v330;
    *(void *)(v329 + 256) = v290;
    *(void *)(v329 + 280) = v330;
    *(void *)(v329 + 288) = v309;
    *(void *)(v329 + 344) = v330;
    *(void *)(v329 + 312) = v330;
    *(void *)(v329 + 320) = v328;
    id v331 = v337;
    v332 = (void *)sub_25E75BEA0();
    v333 = (void *)sub_25E75BF20();
    swift_bridgeObjectRelease();
    objc_msgSend(v346, sel_moduleWithTitle_contents_, v332, v333);

    return;
  }
LABEL_221:
  __break(1u);
}

char *keypath_get_selector_maximumHintDuration()
{
  return sel_maximumHintDuration;
}

id sub_25E727558@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_maximumHintDuration);
  *a2 = v4;
  return result;
}

id sub_25E72758C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMaximumHintDuration_, *a1);
}

char *keypath_get_selector_totalDuration()
{
  return sel_totalDuration;
}

id sub_25E7275AC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_totalDuration);
  *a2 = v4;
  return result;
}

id sub_25E7275E0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setTotalDuration_, *a1);
}

char *keypath_get_selector_visualizeEffectMasks()
{
  return sel_visualizeEffectMasks;
}

id sub_25E727600@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_visualizeEffectMasks);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E727634(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVisualizeEffectMasks_, *a1);
}

char *keypath_get_selector_donutMaskInitialEdgeOutsetProportion()
{
  return sel_donutMaskInitialEdgeOutsetProportion;
}

id sub_25E727654@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_donutMaskInitialEdgeOutsetProportion);
  *a2 = v4;
  return result;
}

id sub_25E727688(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDonutMaskInitialEdgeOutsetProportion_, *a1);
}

char *keypath_get_selector_finalFitVsDiameterRatioShortEdgeSmallScreen()
{
  return sel_finalFitVsDiameterRatioShortEdgeSmallScreen;
}

id sub_25E7276A8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_finalFitVsDiameterRatioShortEdgeSmallScreen);
  *a2 = v4;
  return result;
}

id sub_25E7276DC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFinalFitVsDiameterRatioShortEdgeSmallScreen_, *a1);
}

char *keypath_get_selector_finalFitVsDiameterRatioLongEdgeSmallScreen()
{
  return sel_finalFitVsDiameterRatioLongEdgeSmallScreen;
}

id sub_25E7276FC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_finalFitVsDiameterRatioLongEdgeSmallScreen);
  *a2 = v4;
  return result;
}

id sub_25E727730(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFinalFitVsDiameterRatioLongEdgeSmallScreen_, *a1);
}

char *keypath_get_selector_finalFitVsDiameterRatioShortEdgeBigScreen()
{
  return sel_finalFitVsDiameterRatioShortEdgeBigScreen;
}

id sub_25E727750@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_finalFitVsDiameterRatioShortEdgeBigScreen);
  *a2 = v4;
  return result;
}

id sub_25E727784(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFinalFitVsDiameterRatioShortEdgeBigScreen_, *a1);
}

char *keypath_get_selector_finalFitVsDiameterRatioLongEdgeBigScreen()
{
  return sel_finalFitVsDiameterRatioLongEdgeBigScreen;
}

id sub_25E7277A4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_finalFitVsDiameterRatioLongEdgeBigScreen);
  *a2 = v4;
  return result;
}

id sub_25E7277D8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFinalFitVsDiameterRatioLongEdgeBigScreen_, *a1);
}

char *keypath_get_selector_edgeLightHintTransitionDelay()
{
  return sel_edgeLightHintTransitionDelay;
}

id sub_25E7277F8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_edgeLightHintTransitionDelay);
  *a2 = v4;
  return result;
}

id sub_25E72782C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEdgeLightHintTransitionDelay_, *a1);
}

char *keypath_get_selector_donutMaskEndTransitionDelay()
{
  return sel_donutMaskEndTransitionDelay;
}

id sub_25E72784C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_donutMaskEndTransitionDelay);
  *a2 = v4;
  return result;
}

id sub_25E727880(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDonutMaskEndTransitionDelay_, *a1);
}

char *keypath_get_selector_donutMaskPositionAnimationSettings()
{
  return sel_donutMaskPositionAnimationSettings;
}

id sub_25E7278A0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_donutMaskPositionAnimationSettings);
  *a2 = result;
  return result;
}

id sub_25E7278DC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setDonutMaskPositionAnimationSettings_, *a1);
}

char *keypath_get_selector_chromaticAberrationInitialDonutMask()
{
  return sel_chromaticAberrationInitialDonutMask;
}

id sub_25E7278FC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_chromaticAberrationInitialDonutMask);
  *a2 = result;
  return result;
}

id sub_25E727938(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setChromaticAberrationInitialDonutMask_, *a1);
}

char *keypath_get_selector_chromaticAberrationFinalDonutMaskSmallScreen()
{
  return sel_chromaticAberrationFinalDonutMaskSmallScreen;
}

id sub_25E727958@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_chromaticAberrationFinalDonutMaskSmallScreen);
  *a2 = result;
  return result;
}

id sub_25E727994(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setChromaticAberrationFinalDonutMaskSmallScreen_, *a1);
}

char *keypath_get_selector_chromaticAberrationFinalDonutMaskLargeScreen()
{
  return sel_chromaticAberrationFinalDonutMaskLargeScreen;
}

id sub_25E7279B4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_chromaticAberrationFinalDonutMaskLargeScreen);
  *a2 = result;
  return result;
}

id sub_25E7279F0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setChromaticAberrationFinalDonutMaskLargeScreen_, *a1);
}

char *keypath_get_selector_colorFillInitialCircleMask()
{
  return sel_colorFillInitialCircleMask;
}

id sub_25E727A10@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_colorFillInitialCircleMask);
  *a2 = result;
  return result;
}

id sub_25E727A4C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setColorFillInitialCircleMask_, *a1);
}

char *keypath_get_selector_colorFillHintCircleMask()
{
  return sel_colorFillHintCircleMask;
}

id sub_25E727A6C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_colorFillHintCircleMask);
  *a2 = result;
  return result;
}

id sub_25E727AA8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setColorFillHintCircleMask_, *a1);
}

char *keypath_get_selector_colorFillFinalCircleMask()
{
  return sel_colorFillFinalCircleMask;
}

id sub_25E727AC8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_colorFillFinalCircleMask);
  *a2 = result;
  return result;
}

id sub_25E727B04(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setColorFillFinalCircleMask_, *a1);
}

char *keypath_get_selector_edgeLightInitialCircleMask()
{
  return sel_edgeLightInitialCircleMask;
}

id sub_25E727B24@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_edgeLightInitialCircleMask);
  *a2 = result;
  return result;
}

id sub_25E727B60(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEdgeLightInitialCircleMask_, *a1);
}

char *keypath_get_selector_edgeLightHintCircleMask()
{
  return sel_edgeLightHintCircleMask;
}

id sub_25E727B80@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_edgeLightHintCircleMask);
  *a2 = result;
  return result;
}

id sub_25E727BBC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEdgeLightHintCircleMask_, *a1);
}

char *keypath_get_selector_edgeLightFinalCircleMask()
{
  return sel_edgeLightFinalCircleMask;
}

id sub_25E727BDC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_edgeLightFinalCircleMask);
  *a2 = result;
  return result;
}

id sub_25E727C18(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setEdgeLightFinalCircleMask_, *a1);
}

char *keypath_get_selector_aberrationMagnitudeX()
{
  return sel_aberrationMagnitudeX;
}

id sub_25E727C38@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationMagnitudeX);
  *a2 = v4;
  return result;
}

id sub_25E727C6C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationMagnitudeX_, *a1);
}

char *keypath_get_selector_aberrationMagnitudeY()
{
  return sel_aberrationMagnitudeY;
}

id sub_25E727C8C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationMagnitudeY);
  *a2 = v4;
  return result;
}

id sub_25E727CC0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationMagnitudeY_, *a1);
}

char *keypath_get_selector_aberrationBlurRadius()
{
  return sel_aberrationBlurRadius;
}

id sub_25E727CE0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationBlurRadius);
  *a2 = v4;
  return result;
}

id sub_25E727D14(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationBlurRadius_, *a1);
}

char *keypath_get_selector_aberrationUseColorSaturate()
{
  return sel_aberrationUseColorSaturate;
}

id sub_25E727D34@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationUseColorSaturate);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E727D68(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationUseColorSaturate_, *a1);
}

char *keypath_get_selector_aberrationColorSaturateAmount()
{
  return sel_aberrationColorSaturateAmount;
}

id sub_25E727D88@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationColorSaturateAmount);
  *a2 = v4;
  return result;
}

id sub_25E727DBC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationColorSaturateAmount_, *a1);
}

char *keypath_get_selector_aberrationUseEDR()
{
  return sel_aberrationUseEDR;
}

id sub_25E727DDC@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationUseEDR);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E727E10(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationUseEDR_, *a1);
}

char *keypath_get_selector_aberrationEDRGain()
{
  return sel_aberrationEDRGain;
}

id sub_25E727E30@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationEDRGain);
  *a2 = v4;
  return result;
}

id sub_25E727E64(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationEDRGain_, *a1);
}

char *keypath_get_selector_aberrationUseColorBrightness()
{
  return sel_aberrationUseColorBrightness;
}

id sub_25E727E84@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationUseColorBrightness);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E727EB8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationUseColorBrightness_, *a1);
}

char *keypath_get_selector_aberrationColorBrightness()
{
  return sel_aberrationColorBrightness;
}

id sub_25E727ED8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationColorBrightness);
  *a2 = v4;
  return result;
}

id sub_25E727F0C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationColorBrightness_, *a1);
}

char *keypath_get_selector_aberrationUseColorMatrixMultiply()
{
  return sel_aberrationUseColorMatrixMultiply;
}

id sub_25E727F2C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationUseColorMatrixMultiply);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E727F60(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationUseColorMatrixMultiply_, *a1);
}

char *keypath_get_selector_aberrationColorMatrixMultiplyFactor()
{
  return sel_aberrationColorMatrixMultiplyFactor;
}

id sub_25E727F80@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationColorMatrixMultiplyFactor);
  *a2 = v4;
  return result;
}

id sub_25E727FB4(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationColorMatrixMultiplyFactor_, *a1);
}

char *keypath_get_selector_aberrationFadeOutDelay()
{
  return sel_aberrationFadeOutDelay;
}

id sub_25E727FD4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationFadeOutDelay);
  *a2 = v4;
  return result;
}

id sub_25E728008(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationFadeOutDelay_, *a1);
}

char *keypath_get_selector_aberrationFadeOutDelayIPad()
{
  return sel_aberrationFadeOutDelayIPad;
}

id sub_25E728028@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_aberrationFadeOutDelayIPad);
  *a2 = v4;
  return result;
}

id sub_25E72805C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAberrationFadeOutDelayIPad_, *a1);
}

char *keypath_get_selector_abberationFadeOutAnimationSettings()
{
  return sel_abberationFadeOutAnimationSettings;
}

id sub_25E72807C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_abberationFadeOutAnimationSettings);
  *a2 = result;
  return result;
}

id sub_25E7280B8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAbberationFadeOutAnimationSettings_, *a1);
}

char *keypath_get_selector_abberationCancelledFadeOutAnimationSettings()
{
  return sel_abberationCancelledFadeOutAnimationSettings;
}

id sub_25E7280D8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_abberationCancelledFadeOutAnimationSettings);
  *a2 = result;
  return result;
}

id sub_25E728114(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setAbberationCancelledFadeOutAnimationSettings_, *a1);
}

char *keypath_get_selector_meshSquareFinalSizeDiagonalRatio()
{
  return sel_meshSquareFinalSizeDiagonalRatio;
}

id sub_25E728134@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_meshSquareFinalSizeDiagonalRatio);
  *a2 = v4;
  return result;
}

id sub_25E728168(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMeshSquareFinalSizeDiagonalRatio_, *a1);
}

char *keypath_get_selector_meshRectangularFinalShortDimensionRatio()
{
  return sel_meshRectangularFinalShortDimensionRatio;
}

id sub_25E728188@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_meshRectangularFinalShortDimensionRatio);
  *a2 = v4;
  return result;
}

id sub_25E7281BC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMeshRectangularFinalShortDimensionRatio_, *a1);
}

char *keypath_get_selector_meshRectangularFinalLongDimensionRatio()
{
  return sel_meshRectangularFinalLongDimensionRatio;
}

id sub_25E7281DC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_meshRectangularFinalLongDimensionRatio);
  *a2 = v4;
  return result;
}

id sub_25E728210(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMeshRectangularFinalLongDimensionRatio_, *a1);
}

char *keypath_get_selector_meshFinalProportionAcrossScreenLongEdge()
{
  return sel_meshFinalProportionAcrossScreenLongEdge;
}

id sub_25E728230@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_meshFinalProportionAcrossScreenLongEdge);
  *a2 = v4;
  return result;
}

id sub_25E728264(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMeshFinalProportionAcrossScreenLongEdge_, *a1);
}

char *keypath_get_selector_meshFinalProportionAcrossScreenShortEdge()
{
  return sel_meshFinalProportionAcrossScreenShortEdge;
}

id sub_25E728284@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_meshFinalProportionAcrossScreenShortEdge);
  *a2 = v4;
  return result;
}

id sub_25E7282B8(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMeshFinalProportionAcrossScreenShortEdge_, *a1);
}

char *keypath_get_selector_meshFinalProportionTowardsCenterOnLargeDisplays()
{
  return sel_meshFinalProportionTowardsCenterOnLargeDisplays;
}

id sub_25E7282D8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_meshFinalProportionTowardsCenterOnLargeDisplays);
  *a2 = v4;
  return result;
}

id sub_25E72830C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMeshFinalProportionTowardsCenterOnLargeDisplays_, *a1);
}

char *keypath_get_selector_meshPointsEndTransitionDelay()
{
  return sel_meshPointsEndTransitionDelay;
}

id sub_25E72832C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_meshPointsEndTransitionDelay);
  *a2 = v4;
  return result;
}

id sub_25E728360(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMeshPointsEndTransitionDelay_, *a1);
}

char *keypath_get_selector_useSiriMeshForCapture()
{
  return sel_useSiriMeshForCapture;
}

id sub_25E728380@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_useSiriMeshForCapture);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E7283B4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setUseSiriMeshForCapture_, *a1);
}

char *keypath_get_selector_meshPointsAnimationSettings()
{
  return sel_meshPointsAnimationSettings;
}

id sub_25E7283D4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_meshPointsAnimationSettings);
  *a2 = result;
  return result;
}

id sub_25E728410(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMeshPointsAnimationSettings_, *a1);
}

char *keypath_get_selector_meshPositionAnimationSettings()
{
  return sel_meshPositionAnimationSettings;
}

id sub_25E728430@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_meshPositionAnimationSettings);
  *a2 = result;
  return result;
}

id sub_25E72846C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMeshPositionAnimationSettings_, *a1);
}

char *keypath_get_selector_meshPointsCancelledAnimationSettings()
{
  return sel_meshPointsCancelledAnimationSettings;
}

id sub_25E72848C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_meshPointsCancelledAnimationSettings);
  *a2 = result;
  return result;
}

id sub_25E7284C8(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMeshPointsCancelledAnimationSettings_, *a1);
}

char *keypath_get_selector_fillLightInitialIntensity()
{
  return sel_fillLightInitialIntensity;
}

id sub_25E7284E8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_fillLightInitialIntensity);
  *a2 = v4;
  return result;
}

id sub_25E72851C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFillLightInitialIntensity_, *a1);
}

char *keypath_get_selector_fillLightCaptureInitialIntensity()
{
  return sel_fillLightCaptureInitialIntensity;
}

id sub_25E72853C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_fillLightCaptureInitialIntensity);
  *a2 = v4;
  return result;
}

id sub_25E728570(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFillLightCaptureInitialIntensity_, *a1);
}

char *keypath_get_selector_captureFillWhiteValue()
{
  return sel_captureFillWhiteValue;
}

id sub_25E728590@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_captureFillWhiteValue);
  *a2 = v4;
  return result;
}

id sub_25E7285C4(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCaptureFillWhiteValue_, *a1);
}

char *keypath_get_selector_fillLightFinalIntensity()
{
  return sel_fillLightFinalIntensity;
}

id sub_25E7285E4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_fillLightFinalIntensity);
  *a2 = v4;
  return result;
}

id sub_25E728618(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFillLightFinalIntensity_, *a1);
}

char *keypath_get_selector_lightIntensityAnimationSettings()
{
  return sel_lightIntensityAnimationSettings;
}

id sub_25E728638@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_lightIntensityAnimationSettings);
  *a2 = result;
  return result;
}

id sub_25E728674(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLightIntensityAnimationSettings_, *a1);
}

char *keypath_get_selector_lightIntensityCancelledAnimationSettings()
{
  return sel_lightIntensityCancelledAnimationSettings;
}

id sub_25E728694@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_lightIntensityCancelledAnimationSettings);
  *a2 = result;
  return result;
}

id sub_25E7286D0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setLightIntensityCancelledAnimationSettings_, *a1);
}

char *keypath_get_selector_fillLightIntensityFinalStateDelay()
{
  return sel_fillLightIntensityFinalStateDelay;
}

id sub_25E7286F0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_fillLightIntensityFinalStateDelay);
  *a2 = v4;
  return result;
}

id sub_25E728724(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFillLightIntensityFinalStateDelay_, *a1);
}

char *keypath_get_selector_fillLightColorSaturateAmount()
{
  return sel_fillLightColorSaturateAmount;
}

id sub_25E728744@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_fillLightColorSaturateAmount);
  *a2 = v4;
  return result;
}

id sub_25E728778(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFillLightColorSaturateAmount_, *a1);
}

char *keypath_get_selector_fillLightColorBrightnessAmount()
{
  return sel_fillLightColorBrightnessAmount;
}

id sub_25E728798@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_fillLightColorBrightnessAmount);
  *a2 = v4;
  return result;
}

id sub_25E7287CC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFillLightColorBrightnessAmount_, *a1);
}

char *keypath_get_selector_fillLightColorContrastAmount()
{
  return sel_fillLightColorContrastAmount;
}

id sub_25E7287EC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_fillLightColorContrastAmount);
  *a2 = v4;
  return result;
}

id sub_25E728820(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setFillLightColorContrastAmount_, *a1);
}

char *keypath_get_selector_captureHintAnimationSettings()
{
  return sel_captureHintAnimationSettings;
}

id sub_25E728840@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_captureHintAnimationSettings);
  *a2 = result;
  return result;
}

id sub_25E72887C(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCaptureHintAnimationSettings_, *a1);
}

char *keypath_get_selector_captureHintRetargetImpulse()
{
  return sel_captureHintRetargetImpulse;
}

id sub_25E72889C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_captureHintRetargetImpulse);
  *a2 = v4;
  return result;
}

id sub_25E7288D0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCaptureHintRetargetImpulse_, *a1);
}

char *keypath_get_selector_captureHintInterpolationProgress()
{
  return sel_captureHintInterpolationProgress;
}

id sub_25E7288F0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_captureHintInterpolationProgress);
  *a2 = v4;
  return result;
}

id sub_25E728924(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCaptureHintInterpolationProgress_, *a1);
}

char *keypath_get_selector_captureHintMeshOffset()
{
  return sel_captureHintMeshOffset;
}

id sub_25E728944@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_captureHintMeshOffset);
  *a2 = v4;
  return result;
}

id sub_25E728978(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCaptureHintMeshOffset_, *a1);
}

char *keypath_get_selector_visionIntelligenceHintRetargetImpulse()
{
  return sel_visionIntelligenceHintRetargetImpulse;
}

id sub_25E728998@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_visionIntelligenceHintRetargetImpulse);
  *a2 = v4;
  return result;
}

id sub_25E7289CC(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVisionIntelligenceHintRetargetImpulse_, *a1);
}

char *keypath_get_selector_visionIntelligenceHintInterpolationProgress()
{
  return sel_visionIntelligenceHintInterpolationProgress;
}

id sub_25E7289EC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_visionIntelligenceHintInterpolationProgress);
  *a2 = v4;
  return result;
}

id sub_25E728A20(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVisionIntelligenceHintInterpolationProgress_, *a1);
}

char *keypath_get_selector_visionIntelligenceHintFillLightInitialIntensity()
{
  return sel_visionIntelligenceHintFillLightInitialIntensity;
}

id sub_25E728A40@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_visionIntelligenceHintFillLightInitialIntensity);
  *a2 = v4;
  return result;
}

id sub_25E728A74(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVisionIntelligenceHintFillLightInitialIntensity_, *a1);
}

char *keypath_get_selector_visionIntelligenceHintAnimationSettings()
{
  return sel_visionIntelligenceHintAnimationSettings;
}

id sub_25E728A94@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_visionIntelligenceHintAnimationSettings);
  *a2 = result;
  return result;
}

id sub_25E728AD0(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setVisionIntelligenceHintAnimationSettings_, *a1);
}

char *keypath_get_selector_captureChromaticAberrationEnabled()
{
  return sel_captureChromaticAberrationEnabled;
}

id sub_25E728AF0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_captureChromaticAberrationEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728B24(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCaptureChromaticAberrationEnabled_, *a1);
}

char *keypath_get_selector_captureMeshEnabled()
{
  return sel_captureMeshEnabled;
}

id sub_25E728B44@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_captureMeshEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728B78(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCaptureMeshEnabled_, *a1);
}

char *keypath_get_selector_captureFillLightType()
{
  return sel_captureFillLightType;
}

id sub_25E728B98@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_captureFillLightType);
  *a2 = result;
  return result;
}

id sub_25E728BCC(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setCaptureFillLightType_, *a1);
}

char *keypath_get_selector_siriButtonChromaticAberrationEnabled()
{
  return sel_siriButtonChromaticAberrationEnabled;
}

id sub_25E728BEC@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_siriButtonChromaticAberrationEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728C20(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSiriButtonChromaticAberrationEnabled_, *a1);
}

char *keypath_get_selector_siriButtonMeshEnabled()
{
  return sel_siriButtonMeshEnabled;
}

id sub_25E728C40@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_siriButtonMeshEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728C74(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSiriButtonMeshEnabled_, *a1);
}

char *keypath_get_selector_siriButtonMeshEnabledLargeScreen()
{
  return sel_siriButtonMeshEnabledLargeScreen;
}

id sub_25E728C94@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_siriButtonMeshEnabledLargeScreen);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728CC8(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSiriButtonMeshEnabledLargeScreen_, *a1);
}

char *keypath_get_selector_siriButtonFillLightEnabled()
{
  return sel_siriButtonFillLightEnabled;
}

id sub_25E728CE8@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_siriButtonFillLightEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728D1C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSiriButtonFillLightEnabled_, *a1);
}

char *keypath_get_selector_siriButtonEdgeLightEnabled()
{
  return sel_siriButtonEdgeLightEnabled;
}

id sub_25E728D3C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_siriButtonEdgeLightEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728D70(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSiriButtonEdgeLightEnabled_, *a1);
}

char *keypath_get_selector_siriEdgeChromaticAberrationEnabled()
{
  return sel_siriEdgeChromaticAberrationEnabled;
}

id sub_25E728D90@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_siriEdgeChromaticAberrationEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728DC4(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSiriEdgeChromaticAberrationEnabled_, *a1);
}

char *keypath_get_selector_siriEdgeMeshEnabled()
{
  return sel_siriEdgeMeshEnabled;
}

id sub_25E728DE4@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_siriEdgeMeshEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728E18(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSiriEdgeMeshEnabled_, *a1);
}

char *keypath_get_selector_siriEdgeMeshEnabledLargeScreen()
{
  return sel_siriEdgeMeshEnabledLargeScreen;
}

id sub_25E728E38@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_siriEdgeMeshEnabledLargeScreen);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728E6C(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSiriEdgeMeshEnabledLargeScreen_, *a1);
}

char *keypath_get_selector_siriEdgeFillLightEnabled()
{
  return sel_siriEdgeFillLightEnabled;
}

id sub_25E728E8C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_siriEdgeFillLightEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728EC0(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSiriEdgeFillLightEnabled_, *a1);
}

char *keypath_get_selector_siriEdgeEdgeLightEnabled()
{
  return sel_siriEdgeEdgeLightEnabled;
}

id sub_25E728EE0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_siriEdgeEdgeLightEnabled);
  *a2 = (_BYTE)result;
  return result;
}

id sub_25E728F14(unsigned __int8 *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSiriEdgeEdgeLightEnabled_, *a1);
}

uint64_t type metadata accessor for SUIAShockwavePrototypeSettings(uint64_t a1)
{
  return sub_25E711DB8(a1, &qword_26A704428);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_25E728F54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704108);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E728FBC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SUIAShockwaveRadialMaskSettings.name.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_name);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t SUIAShockwaveRadialMaskSettings.name.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_name);
  swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

void sub_25E7291B8(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = objc_msgSend(*a1, sel_name);
  uint64_t v4 = sub_25E75BEB0();
  uint64_t v6 = v5;

  *a2 = v4;
  a2[1] = v6;
}

uint64_t SUIAShockwaveRadialMaskSettings.locations.getter()
{
  return sub_25E729320();
}

uint64_t SUIAShockwaveRadialMaskSettings.locations.setter(uint64_t a1)
{
  return sub_25E729410(a1, &OBJC_IVAR___SUIAShockwaveRadialMaskSettings_locations);
}

id sub_25E72927C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  swift_beginAccess();
  sub_25E711DB8(0, a4);
  swift_bridgeObjectRetain();
  uint64_t v5 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t SUIAShockwaveRadialMaskSettings.colors.getter()
{
  return sub_25E729320();
}

uint64_t sub_25E729320()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_25E729384(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, void *a6)
{
  sub_25E711DB8(0, a4);
  uint64_t v8 = sub_25E75BF30();
  id v9 = (uint64_t *)(a1 + *a6);
  swift_beginAccess();
  *id v9 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t SUIAShockwaveRadialMaskSettings.colors.setter(uint64_t a1)
{
  return sub_25E729410(a1, &OBJC_IVAR___SUIAShockwaveRadialMaskSettings_colors);
}

uint64_t sub_25E729410(uint64_t a1, void *a2)
{
  uint64_t v4 = (void *)(v2 + *a2);
  swift_beginAccess();
  *uint64_t v4 = a1;
  return swift_bridgeObjectRelease();
}

void sub_25E729460(id *a1@<X0>, SEL *a2@<X3>, unint64_t *a3@<X4>, uint64_t *a4@<X8>)
{
  id v6 = [*a1 *a2];
  sub_25E711DB8(0, a3);
  uint64_t v7 = sub_25E75BF30();

  *a4 = v7;
}

void sub_25E7294D0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, SEL *a7)
{
  uint64_t v8 = *a2;
  sub_25E711DB8(0, a5);
  id v9 = (id)sub_25E75BF20();
  objc_msgSend(v8, *a7, v9);
}

id SUIAShockwaveRadialMaskSettings.gradientLayerSize.getter()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_gradientLayerSize);
  swift_beginAccess();
  uint64_t v2 = *v1;
  return v2;
}

void SUIAShockwaveRadialMaskSettings.gradientLayerSize.setter(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_gradientLayerSize);
  swift_beginAccess();
  uint64_t v4 = *v3;
  void *v3 = a1;
}

double SUIAShockwaveRadialMaskSettings.majorDiameter.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_majorDiameter;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwaveRadialMaskSettings.majorDiameter.setter(double a1)
{
  id v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_majorDiameter);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwaveRadialMaskSettings.ringWidth.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_ringWidth;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwaveRadialMaskSettings.ringWidth.setter(double a1)
{
  id v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_ringWidth);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

double SUIAShockwaveRadialMaskSettings.blurRadius.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_blurRadius;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t SUIAShockwaveRadialMaskSettings.blurRadius.setter(double a1)
{
  id v3 = (double *)(v1 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_blurRadius);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t SUIAShockwaveRadialMaskSettings.sampleCount.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_sampleCount;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t SUIAShockwaveRadialMaskSettings.sampleCount.setter(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR___SUIAShockwaveRadialMaskSettings_sampleCount);
  uint64_t result = swift_beginAccess();
  void *v3 = a1;
  return result;
}

uint64_t static SUIAShockwaveRadialMaskSettings.ignoresKey(_:)(uint64_t a1, char *a2)
{
  if (!qword_270B4DEF8)
  {
    if (!a2) {
      return 1;
    }
    goto LABEL_10;
  }
  if (a2)
  {
    BOOL v4 = *(void *)aDonut_1 == a1 && qword_270B4DEF8 == (void)a2;
    if (v4 || (sub_25E75C190() & 1) != 0) {
      return 1;
    }
LABEL_10:
    if (*(void *)&aInnerradius_1[8])
    {
      BOOL v5 = *(void *)aInnerradius_1 == a1 && *(void *)&aInnerradius_1[8] == (void)a2;
      if (v5 || (sub_25E75C190() & 1) != 0) {
        return 1;
      }
    }
    goto LABEL_18;
  }
  if (!*(void *)&aInnerradius_1[8]) {
    return 1;
  }
LABEL_18:
  if (*(void *)&aOuterradius_1[8])
  {
    if (!a2)
    {
      if (!off_270B4DF28) {
        return 1;
      }
      goto LABEL_33;
    }
    BOOL v6 = *(void *)aOuterradius_1 == a1 && *(void *)&aOuterradius_1[8] == (void)a2;
    if (v6 || (sub_25E75C190() & 1) != 0) {
      return 1;
    }
  }
  else if (!a2)
  {
    return 1;
  }
  if (off_270B4DF28 && (qword_270B4DF20 == a1 && off_270B4DF28 == (_UNKNOWN *)a2 || (sub_25E75C190() & 1) != 0)) {
    return 1;
  }
LABEL_33:
  if (off_270B4DF38)
  {
    if (!a2)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A704488);
      swift_arrayDestroy();
      id v9 = 0;
      goto LABEL_43;
    }
    if (qword_270B4DF30 == a1 && off_270B4DF38 == a2 || (sub_25E75C190() & 1) != 0) {
      return 1;
    }
LABEL_41:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A704488);
    swift_arrayDestroy();
    id v9 = (void *)sub_25E75BEA0();
LABEL_43:
    v10.receiver = (id)swift_getObjCClassFromMetadata();
    v10.super_class = (Class)&OBJC_METACLASS___SUIAShockwaveRadialMaskSettings;
    id v7 = objc_msgSendSuper2(&v10, sel_ignoresKey_, v9);

    return (uint64_t)v7;
  }
  if (a2) {
    goto LABEL_41;
  }
  return 1;
}

BOOL SUIAShockwaveRadialMaskSettings.isDonut.getter()
{
  objc_msgSend(v0, sel_ringWidth);
  return v1 > 0.0;
}

double SUIAShockwaveRadialMaskSettings.innerRadius.getter()
{
  v17[1] = *MEMORY[0x263EF8340];
  id v1 = objc_msgSend(v0, sel_colors);
  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  unint64_t v2 = sub_25E75BF30();

  if (v2 >> 62) {
    goto LABEL_18;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v3)
  {
    uint64_t v4 = 0;
    while (1)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v5 = (id)MEMORY[0x2611E1C70](v4, v2);
      }
      else {
        id v5 = *(id *)(v2 + 8 * v4 + 32);
      }
      BOOL v6 = v5;
      v17[0] = 0x7FEFFFFFFFFFFFFFLL;
      objc_msgSend(v5, sel_getRed_green_blue_alpha_, 0, 0, 0, v17);
      char IsOne = BSFloatIsOne();

      if ((IsOne & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v9 = v4 - (v4 > 0);
        goto LABEL_12;
      }
      uint64_t v8 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        break;
      }
      ++v4;
      if (v8 == v3) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_25E75C130();
    swift_bridgeObjectRelease();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  unint64_t v9 = 0;
LABEL_12:
  id v10 = objc_msgSend(v0, sel_locations);
  sub_25E711DB8(0, &qword_26A703FF8);
  uint64_t v11 = sub_25E75BF30();

  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x2611E1C70](v9, v11);
    goto LABEL_16;
  }
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_22:
    __break(1u);
  }
  if (v9 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_22;
  }
  id v12 = *(id *)(v11 + 8 * v9 + 32);
LABEL_16:
  id v13 = v12;
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_floatValue);
  float v15 = v14;

  return v15;
}

double SUIAShockwaveRadialMaskSettings.outerRadius.getter()
{
  id v1 = v0;
  v20[1] = *MEMORY[0x263EF8340];
  uint64_t IsZero = (uint64_t)&selRef__setDonutGradientLocations_;
  id v3 = objc_msgSend(v0, sel_colors);
  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  unint64_t v4 = sub_25E75BF30();

  if (v4 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    unint64_t v5 = sub_25E75C130();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      id v19 = v1;
      do
      {
        if (__OFSUB__(v5--, 1))
        {
          __break(1u);
LABEL_23:
          __break(1u);
LABEL_24:
          __break(1u);
          goto LABEL_25;
        }
        if ((v4 & 0xC000000000000001) != 0)
        {
          id v7 = (id)MEMORY[0x2611E1C70](v5, v4);
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_23;
          }
          if (v5 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_24;
          }
          id v7 = *(id *)(v4 + 32 + 8 * v5);
        }
        id v1 = v7;
        v20[0] = 0x7FEFFFFFFFFFFFFFLL;
        objc_msgSend(v7, sel_getRed_green_blue_alpha_, 0, 0, 0, v20);
        uint64_t IsZero = BSFloatIsZero();
      }
      while ((IsZero & 1) != 0 && v5);
      swift_bridgeObjectRelease();
      id v1 = v19;
      uint64_t IsZero = (uint64_t)&selRef__setDonutGradientLocations_;
      int64_t v8 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_28;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  int64_t v8 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
LABEL_13:
  id v9 = [v1 *(SEL *)(IsZero + 696)];
  unint64_t v10 = sub_25E75BF30();

  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_15;
  }
LABEL_29:
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_25E75C130();
  swift_bridgeObjectRelease();
LABEL_15:
  swift_bridgeObjectRelease();
  if (v8 < v11) {
    unint64_t v5 = v8;
  }
  id v12 = objc_msgSend(v1, sel_locations);
  sub_25E711DB8(0, &qword_26A703FF8);
  uint64_t v13 = sub_25E75BF30();

  if ((v13 & 0xC000000000000001) != 0)
  {
    id v14 = (id)MEMORY[0x2611E1C70](v5, v13);
    goto LABEL_21;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_32:
    __break(1u);
  }
  if (v5 >= *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_32;
  }
  id v14 = *(id *)(v13 + 8 * v5 + 32);
LABEL_21:
  float v15 = v14;
  swift_bridgeObjectRelease();
  objc_msgSend(v15, sel_floatValue);
  float v17 = v16;

  return v17;
}

double SUIAShockwaveRadialMaskSettings.maximumExtentOfZeroOpacity.getter()
{
  v17[1] = *MEMORY[0x263EF8340];
  id v1 = objc_msgSend(v0, sel_colors);
  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  unint64_t v2 = sub_25E75BF30();

  if (!(v2 >> 62))
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v3) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v9 = 0;
    goto LABEL_14;
  }
LABEL_19:
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_25E75C130();
  swift_bridgeObjectRelease();
  if (!v3) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v4 = 0;
  while (1)
  {
    id v5 = (v2 & 0xC000000000000001) != 0 ? (id)MEMORY[0x2611E1C70](v4, v2) : *(id *)(v2 + 8 * v4 + 32);
    BOOL v6 = v5;
    v17[0] = 0x7FEFFFFFFFFFFFFFLL;
    objc_msgSend(v5, sel_getRed_green_blue_alpha_, 0, 0, 0, v17);
    char IsZero = BSFloatIsZero();

    if ((IsZero & 1) == 0) {
      break;
    }
    uint64_t v8 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    ++v4;
    if (v8 == v3) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease();
  if (v4 <= 0) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v4 - 1;
  }
LABEL_14:
  id v10 = objc_msgSend(v0, sel_locations);
  sub_25E711DB8(0, &qword_26A703FF8);
  uint64_t v11 = sub_25E75BF30();

  if ((v11 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x2611E1C70](v9, v11);
  }
  else
  {
    if (v9 >= *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      __break(1u);
    }
    id v12 = *(id *)(v11 + 8 * v9 + 32);
  }
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_floatValue);
  float v15 = v14;

  return v15;
}

double SUIAShockwaveRadialMaskSettings.radiusOfMaximumOpacity.getter()
{
  v19[1] = *MEMORY[0x263EF8340];
  id v1 = (SEL *)&selRef__setDonutGradientLocations_;
  id v2 = objc_msgSend(v0, sel_colors);
  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  unint64_t v3 = sub_25E75BF30();

  if (v3 >> 62) {
    goto LABEL_17;
  }
  unint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    unint64_t v18 = v0;
    uint64_t v0 = &selRef_setCaptureHintAnimationSettings_;
    while (!__OFSUB__(v4--, 1))
    {
      if ((v3 & 0xC000000000000001) != 0)
      {
        BOOL v6 = (SEL *)MEMORY[0x2611E1C70](v4, v3);
      }
      else
      {
        if ((v4 & 0x8000000000000000) != 0) {
          goto LABEL_15;
        }
        if (v4 >= *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_16;
        }
        BOOL v6 = (SEL *)*(id *)(v3 + 32 + 8 * v4);
      }
      id v1 = v6;
      v19[0] = 0x7FEFFFFFFFFFFFFFLL;
      [(SEL *)v6 getRed:0 green:0 blue:0 alpha:v19];
      char IsZero = BSFloatIsZero();

      if ((IsZero & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v0 = v18;
        goto LABEL_22;
      }
      if (!v4)
      {
        swift_bridgeObjectRelease();
        uint64_t v0 = v18;
        id v1 = (SEL *)&selRef__setDonutGradientLocations_;
        goto LABEL_19;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    unint64_t v4 = sub_25E75C130();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
LABEL_19:
  id v8 = [v0 v1[87]];
  unint64_t v9 = sub_25E75BF30();

  if (v9 >> 62) {
    goto LABEL_32;
  }
  unint64_t v3 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = v3 - 1;
    if (__OFSUB__(v3, 1)) {
      __break(1u);
    }
LABEL_22:
    unint64_t v10 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    id v11 = objc_msgSend(v0, sel_locations);
    sub_25E711DB8(0, &qword_26A703FF8);
    unint64_t v3 = sub_25E75BF30();

    if ((v3 & 0xC000000000000001) != 0) {
      goto LABEL_29;
    }
    if ((v10 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v10 < *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v12 = *(id *)(v3 + 8 * v10 + 32);
      goto LABEL_27;
    }
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_25E75C130();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_29:
  id v12 = (id)MEMORY[0x2611E1C70](v10, v3);
LABEL_27:
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_floatValue);
  float v15 = v14;

  objc_msgSend(v0, sel_maximumExtentOfZeroOpacity);
  return (v16 + v15) * 0.5;
}

Swift::Bool __swiftcall SUIAShockwaveRadialMaskSettings.validateComputedValuesCorrespondToSourceValues()()
{
  uint64_t v1 = swift_allocObject();
  *(unsigned char *)(v1 + 16) = 1;
  id v2 = self;
  objc_msgSend(v0, sel_majorDiameter);
  double v4 = v3;
  objc_msgSend(v0, sel_ringWidth);
  double v6 = v5;
  objc_msgSend(v0, sel_blurRadius);
  double v8 = v7;
  unint64_t v9 = (unint64_t)objc_msgSend(v0, sel_sampleCount);
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v10 = v9;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v0;
    *(void *)(v11 + 24) = v1;
    v16[4] = sub_25E72B200;
    _OWORD v16[5] = v11;
    v16[0] = MEMORY[0x263EF8330];
    v16[1] = 1107296256;
    v16[2] = sub_25E72B208;
    v16[3] = &block_descriptor_0;
    id v12 = _Block_copy(v16);
    id v13 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v2, sel_calculateDescriptionForGradientMajorDiameter_ringWidth_blurRadius_numberOfSamples_completion_, v10, v12, v4, v6, v8);
    _Block_release(v12);
    swift_beginAccess();
    char v14 = *(unsigned char *)(v1 + 16);
    swift_release();
    LOBYTE(v9) = v14;
  }
  return v9;
}

uint64_t sub_25E72ABB0()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25E72ABC0(unint64_t a1, unint64_t a2, int a3, id a4, uint64_t a5)
{
  uint64_t v45 = *MEMORY[0x263EF8340];
  id v8 = objc_msgSend(a4, sel_locations);
  sub_25E711DB8(0, &qword_26A703FF8);
  unint64_t v9 = sub_25E75BF30();

  if (v9 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_25E75C130();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  long long v42 = (unsigned char *)(a5 + 16);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_25E75C130();
    swift_bridgeObjectRelease();
    if (v10 == v16)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_25E75C130();
      if (v10) {
        goto LABEL_6;
      }
      goto LABEL_22;
    }
  }
  else if (v10 == *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_6:
      if (v10 < 1)
      {
LABEL_64:
        __break(1u);
        goto LABEL_65;
      }
      if ((v9 & 0xC000000000000001) == 0
        && (unint64_t)(v10 - 1) >= *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_65:
        __break(1u);
      }
      swift_beginAccess();
      for (uint64_t i = 0; i != v10; ++i)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v12 = (id)MEMORY[0x2611E1C70](i, a1);
        }
        else {
          id v12 = *(id *)(a1 + 8 * i + 32);
        }
        id v13 = v12;
        objc_msgSend(v12, sel_bs_CGFloatValue);
        if ((v9 & 0xC000000000000001) != 0) {
          id v14 = (id)MEMORY[0x2611E1C70](i, v9);
        }
        else {
          id v14 = *(id *)(v9 + 8 * i + 32);
        }
        float v15 = v14;
        objc_msgSend(v14, sel_bs_CGFloatValue);

        LOBYTE(v15) = BSFloatApproximatelyEqualToFloat();
        if ((v15 & 1) == 0) {
          *long long v42 = 0;
        }
      }
    }
LABEL_22:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  swift_bridgeObjectRelease();
  swift_beginAccess();
  *long long v42 = 0;
LABEL_24:
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_25E75C130();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v18 = MEMORY[0x263F8EE78];
  if (v17)
  {
    uint64_t v44 = MEMORY[0x263F8EE78];
    sub_25E75A4A0(0, v17 & ~(v17 >> 63), 0);
    if (v17 < 0)
    {
      __break(1u);
      goto LABEL_63;
    }
    uint64_t v19 = 0;
    uint64_t v20 = v44;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v21 = (id)MEMORY[0x2611E1C70](v19, a2);
      }
      else {
        id v21 = *(id *)(a2 + 8 * v19 + 32);
      }
      id v22 = v21;
      v43[0] = 0;
      objc_msgSend(v21, sel_getRed_green_blue_alpha_, 0, 0, 0, v43);

      uint64_t v23 = v43[0];
      uint64_t v44 = v20;
      unint64_t v25 = *(void *)(v20 + 16);
      unint64_t v24 = *(void *)(v20 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_25E75A4A0((char *)(v24 > 1), v25 + 1, 1);
        uint64_t v20 = v44;
      }
      ++v19;
      *(void *)(v20 + 16) = v25 + 1;
      *(void *)(v20 + 8 * v25 + 32) = v23;
    }
    while (v17 != v19);
  }
  else
  {
    uint64_t v20 = MEMORY[0x263F8EE78];
  }
  id v26 = objc_msgSend(a4, sel_colors);
  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  unint64_t v27 = sub_25E75BF30();

  if (!(v27 >> 62))
  {
    uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v28) {
      goto LABEL_39;
    }
LABEL_50:
    swift_bridgeObjectRelease();
    uint64_t v30 = MEMORY[0x263F8EE78];
    goto LABEL_51;
  }
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_25E75C130();
  swift_bridgeObjectRelease();
  if (!v28) {
    goto LABEL_50;
  }
LABEL_39:
  uint64_t v44 = v18;
  sub_25E75A4A0(0, v28 & ~(v28 >> 63), 0);
  if (v28 < 0)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v29 = 0;
  uint64_t v30 = v44;
  do
  {
    if ((v27 & 0xC000000000000001) != 0) {
      id v31 = (id)MEMORY[0x2611E1C70](v29, v27);
    }
    else {
      id v31 = *(id *)(v27 + 8 * v29 + 32);
    }
    id v32 = v31;
    v43[0] = 0;
    objc_msgSend(v31, sel_getRed_green_blue_alpha_, 0, 0, 0, v43);

    uint64_t v33 = v43[0];
    uint64_t v44 = v30;
    unint64_t v35 = *(void *)(v30 + 16);
    unint64_t v34 = *(void *)(v30 + 24);
    if (v35 >= v34 >> 1)
    {
      sub_25E75A4A0((char *)(v34 > 1), v35 + 1, 1);
      uint64_t v30 = v44;
    }
    ++v29;
    *(void *)(v30 + 16) = v35 + 1;
    *(void *)(v30 + 8 * v35 + 32) = v33;
  }
  while (v28 != v29);
  swift_bridgeObjectRelease();
LABEL_51:
  uint64_t v36 = *(void *)(v30 + 16);
  if (v36 == *(void *)(v20 + 16))
  {
    if (v36)
    {
      swift_beginAccess();
      uint64_t v37 = -v36;
      uint64_t v38 = 4;
      do
      {
        if ((BSFloatApproximatelyEqualToFloat() & 1) == 0) {
          *long long v42 = 0;
        }
        ++v38;
      }
      while (v37 + v38 != 4);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    *long long v42 = 0;
  }
  id v39 = objc_msgSend(a4, sel_gradientLayerSize);
  objc_msgSend(v39, sel_width);

  uint64_t result = BSFloatApproximatelyEqualToFloat();
  if ((result & 1) == 0)
  {
    uint64_t result = swift_beginAccess();
    *long long v42 = 0;
  }
  return result;
}

uint64_t sub_25E72B200(unint64_t a1, unint64_t a2, int a3)
{
  return sub_25E72ABC0(a1, a2, a3, *(id *)(v3 + 16), *(void *)(v3 + 24));
}

void sub_25E72B208(uint64_t a1, double a2, uint64_t a3, uint64_t a4, void *a5)
{
  double v7 = *(void (**)(uint64_t, uint64_t, id, double))(a1 + 32);
  sub_25E711DB8(0, &qword_26A703FF8);
  uint64_t v8 = sub_25E75BF30();
  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  uint64_t v9 = sub_25E75BF30();
  swift_retain();
  id v10 = a5;
  v7(v8, v9, v10, a2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

Swift::String __swiftcall SUIAShockwaveRadialMaskSettings.computeDerivativeValuesAndGenerateSource()()
{
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = 0;
  *(void *)(v1 + 24) = 0xE000000000000000;
  uint64_t v2 = self;
  objc_msgSend(v0, sel_majorDiameter);
  double v4 = v3;
  objc_msgSend(v0, sel_ringWidth);
  double v6 = v5;
  objc_msgSend(v0, sel_blurRadius);
  double v8 = v7;
  uint64_t v9 = (uint64_t)objc_msgSend(v0, sel_sampleCount);
  if (v9 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v11 = v9;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v0;
    *(void *)(v12 + 24) = v1;
    v18[4] = sub_25E72BD84;
    v18[5] = v12;
    v18[0] = MEMORY[0x263EF8330];
    v18[1] = 1107296256;
    _OWORD v18[2] = sub_25E72B208;
    v18[3] = &block_descriptor_12;
    id v13 = _Block_copy(v18);
    id v14 = v0;
    swift_retain();
    swift_release();
    objc_msgSend(v2, sel_calculateDescriptionForGradientMajorDiameter_ringWidth_blurRadius_numberOfSamples_completion_, v11, v13, v4, v6, v8);
    _Block_release(v13);
    swift_beginAccess();
    uint64_t v15 = *(void *)(v1 + 16);
    uint64_t v16 = *(void **)(v1 + 24);
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t v9 = v15;
    id v10 = v16;
  }
  result._object = v10;
  result._countAndFlagsBits = v9;
  return result;
}

uint64_t sub_25E72B51C()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E72B554(unint64_t a1, unint64_t a2, double a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v55 = *MEMORY[0x263EF8340];
  sub_25E711DB8(0, &qword_26A703FF8);
  uint64_t v11 = (void *)sub_25E75BF20();
  objc_msgSend(a5, sel_setLocations_, v11);

  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  uint64_t v12 = (void *)sub_25E75BF20();
  objc_msgSend(a5, sel_setColors_, v12);

  id v13 = objc_msgSend(a5, sel_gradientLayerSize);
  objc_msgSend(v13, sel_setSizeValue_, a3, a3);

  id v48 = a5;
  uint64_t v49 = a6;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_25E75C130();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v14 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v15 = MEMORY[0x263F8EE78];
  unint64_t v51 = a2;
  if (v14)
  {
    uint64_t v53 = MEMORY[0x263F8EE78];
    sub_25E75A4C0(0, v14 & ~(v14 >> 63), 0);
    if (v14 < 0)
    {
      __break(1u);
      goto LABEL_27;
    }
    uint64_t v16 = 0;
    uint64_t v15 = v53;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v17 = (id)MEMORY[0x2611E1C70](v16, a1);
      }
      else {
        id v17 = *(id *)(a1 + 8 * v16 + 32);
      }
      uint64_t v18 = v17;
      objc_msgSend(v17, sel_doubleValue);
      uint64_t v20 = v19;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A704180);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = xmmword_25E75FB40;
      *(void *)(v21 + 56) = MEMORY[0x263F8D538];
      *(void *)(v21 + 64) = MEMORY[0x263F8D5B8];
      *(void *)(v21 + 32) = v20;
      uint64_t v22 = sub_25E75BEC0();
      uint64_t v24 = v23;

      uint64_t v53 = v15;
      unint64_t v26 = *(void *)(v15 + 16);
      unint64_t v25 = *(void *)(v15 + 24);
      if (v26 >= v25 >> 1)
      {
        sub_25E75A4C0((char *)(v25 > 1), v26 + 1, 1);
        uint64_t v15 = v53;
      }
      ++v16;
      *(void *)(v15 + 16) = v26 + 1;
      uint64_t v27 = v15 + 16 * v26;
      *(void *)(v27 + 32) = v22;
      *(void *)(v27 + 40) = v24;
    }
    while (v14 != v16);
  }
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = sub_25E75C130();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v29 = MEMORY[0x263F8EE78];
  if (!v28) {
    goto LABEL_23;
  }
  uint64_t v53 = MEMORY[0x263F8EE78];
  sub_25E75A4C0(0, v28 & ~(v28 >> 63), 0);
  if (v28 < 0) {
LABEL_27:
  }
    __break(1u);
  uint64_t v30 = 0;
  uint64_t v29 = v53;
  unint64_t v50 = a2 & 0xC000000000000001;
  do
  {
    if (v50) {
      id v31 = (id)MEMORY[0x2611E1C70](v30, a2);
    }
    else {
      id v31 = *(id *)(a2 + 8 * v30 + 32);
    }
    id v32 = v31;
    id v52 = 0;
    objc_msgSend(v31, sel_getRed_green_blue_alpha_, 0, 0, 0, &v52);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A704180);
    uint64_t v33 = swift_allocObject();
    *(_OWORD *)(v33 + 16) = xmmword_25E75FB40;
    id v34 = v52;
    *(void *)(v33 + 56) = MEMORY[0x263F8EF38];
    *(void *)(v33 + 64) = sub_25E72CDA0();
    *(void *)(v33 + 32) = v34;
    uint64_t v35 = sub_25E75BEC0();
    uint64_t v37 = v36;

    uint64_t v53 = v29;
    unint64_t v39 = *(void *)(v29 + 16);
    unint64_t v38 = *(void *)(v29 + 24);
    if (v39 >= v38 >> 1)
    {
      sub_25E75A4C0((char *)(v38 > 1), v39 + 1, 1);
      uint64_t v29 = v53;
    }
    ++v30;
    *(void *)(v29 + 16) = v39 + 1;
    uint64_t v40 = v29 + 16 * v39;
    *(void *)(v40 + 32) = v35;
    *(void *)(v40 + 40) = v37;
    a2 = v51;
  }
  while (v28 != v30);
LABEL_23:
  uint64_t v53 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7040F8);
  sub_25E71827C();
  sub_25E75BE80();
  swift_bridgeObjectRelease();
  uint64_t v53 = v29;
  sub_25E75BE80();
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704180);
  uint64_t v41 = swift_allocObject();
  *(_OWORD *)(v41 + 16) = xmmword_25E75FB90;
  uint64_t v42 = MEMORY[0x263F8EF38];
  *(void *)(v41 + 56) = MEMORY[0x263F8EF38];
  unint64_t v43 = sub_25E72CDA0();
  *(void *)(v41 + 64) = v43;
  *(double *)(v41 + 32) = a3;
  *(void *)(v41 + 96) = v42;
  *(void *)(v41 + 104) = v43;
  *(double *)(v41 + 72) = a3;
  sub_25E75BEC0();
  uint64_t v53 = 0;
  unint64_t v54 = 0xE000000000000000;
  sub_25E75C0A0();
  sub_25E75BEE0();
  id v44 = objc_msgSend(v48, sel_name);
  sub_25E75BEB0();

  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  sub_25E75BEE0();
  objc_msgSend(v48, sel_majorDiameter);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  sub_25E75BEE0();
  objc_msgSend(v48, sel_ringWidth);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  sub_25E75BEE0();
  objc_msgSend(v48, sel_blurRadius);
  sub_25E75BF90();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  sub_25E75BEE0();
  id v52 = objc_msgSend(v48, sel_sampleCount);
  sub_25E75C170();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  sub_25E75BEE0();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  sub_25E75BEE0();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  sub_25E75BEE0();
  sub_25E75BEE0();
  swift_bridgeObjectRelease();
  sub_25E75BEE0();
  uint64_t v45 = v53;
  unint64_t v46 = v54;
  swift_beginAccess();
  *(void *)(v49 + 16) = v45;
  *(void *)(v49 + 24) = v46;
  return swift_bridgeObjectRelease();
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E72BD84(unint64_t a1, unint64_t a2, uint64_t a3, double a4)
{
  return sub_25E72B554(a1, a2, a4, a3, *(void **)(v4 + 16), *(void *)(v4 + 24));
}

Swift::Void __swiftcall SUIAShockwaveRadialMaskSettings.setDefaultValues()()
{
  v0.super_class = (Class)SUIAShockwaveRadialMaskSettings;
  objc_msgSendSuper2(&v0, sel_setDefaultValues);
}

void SUIAShockwaveRadialMaskSettings.setDefaultValuesWithName(_:majorDiameter:ringWidth:blurRadius:sampleCount:locations:colors:gradientLayerSize:)(double a1, double a2, double a3, double a4, double a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v15 = (void *)sub_25E75BEA0();
  objc_msgSend(v8, sel_setName_, v15);

  objc_msgSend(v8, sel_setMajorDiameter_, a1);
  objc_msgSend(v8, sel_setRingWidth_, a2);
  objc_msgSend(v8, sel_setBlurRadius_, a3);
  objc_msgSend(v8, sel_setSampleCount_, a8);
  sub_25E711DB8(0, &qword_26A703FF8);
  uint64_t v16 = (void *)sub_25E75BF20();
  objc_msgSend(v8, sel_setLocations_, v16);

  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  id v17 = (void *)sub_25E75BF20();
  objc_msgSend(v8, sel_setColors_, v17);

  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F62318]), sel_init);
  objc_msgSend(v8, sel_setGradientLayerSize_, v18);

  id v19 = objc_msgSend(v8, sel_gradientLayerSize);
  objc_msgSend(v19, sel_setSizeValue_, a4, a5);
}

BOOL sub_25E72C168(uint64_t a1, uint64_t a2)
{
  sub_25E718334(a2, (uint64_t)v12);
  if (!v13) {
    goto LABEL_12;
  }
  sub_25E711DB8(0, &qword_26A704438);
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t v2 = *(void **)&v11[0];
  double v3 = (void *)sub_25E75BEA0();
  id v4 = objc_msgSend(*(id *)&v11[0], sel_valueForKey_, v3);

  if (v4)
  {
    sub_25E75C050();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v11, 0, sizeof(v11));
  }
  uint64_t v5 = sub_25E728F54((uint64_t)v11, (uint64_t)v12);
  if (!v13)
  {

LABEL_12:
    sub_25E71839C((uint64_t)v12);
    return 0;
  }
  type metadata accessor for SUIAShockwaveRadialMaskSettings(v5);
  if ((swift_dynamicCast() & 1) == 0)
  {

    return 0;
  }
  id v6 = objc_msgSend(v10, sel_computeDerivativeValuesAndGenerateSource);
  if (!v6)
  {
    sub_25E75BEB0();
    id v6 = (id)sub_25E75BEA0();
    swift_bridgeObjectRelease();
  }
  sub_25E75BEB0();
  id v7 = objc_msgSend(self, sel_generalPasteboard);
  objc_msgSend(v7, sel_setString_, v6);

  uint64_t v8 = sub_25E75BED0();
  swift_bridgeObjectRelease();

  return v8 > 0;
}

void _sSo31SUIAShockwaveRadialMaskSettingsC20SystemUIAnimationKitE24settingsControllerModuleSo8PTModuleCSgyFZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25E7600B0;
  uint64_t v1 = (void *)sub_25E75BEA0();
  uint64_t v2 = (void *)sub_25E75BEA0();
  id v3 = objc_msgSend(self, sel_rowWithTitle_valueKeyPath_, v1, v2);

  if (!v3)
  {
    __break(1u);
    goto LABEL_12;
  }
  *(void *)(v0 + 56) = sub_25E711DB8(0, &qword_26A704188);
  *(void *)(v0 + 32) = v3;
  id v4 = (void *)sub_25E75BEA0();
  uint64_t v5 = (void *)sub_25E75BEA0();
  id v6 = self;
  id v7 = objc_msgSend(v6, sel_rowWithTitle_valueKeyPath_, v4, v5);

  if (!v7)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  id v8 = sub_25E7553D8(2, 0, 0);

  uint64_t v9 = sub_25E711DB8(0, (unint64_t *)&qword_26A704190);
  *(void *)(v0 + 88) = v9;
  *(void *)(v0 + 64) = v8;
  id v10 = (void *)sub_25E75BEA0();
  uint64_t v11 = (void *)sub_25E75BEA0();
  id v12 = objc_msgSend(v6, sel_rowWithTitle_valueKeyPath_, v10, v11);

  if (!v12)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v13 = sub_25E7553D8(2, 0, 0);

  *(void *)(v0 + 120) = v9;
  *(void *)(v0 + 96) = v13;
  uint64_t v14 = (void *)sub_25E75BEA0();
  uint64_t v15 = (void *)sub_25E75BEA0();
  id v16 = objc_msgSend(v6, sel_rowWithTitle_valueKeyPath_, v14, v15);

  if (!v16)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v17 = sub_25E7553D8(2, 0, 0);

  *(void *)(v0 + 152) = v9;
  *(void *)(v0 + 128) = v17;
  id v18 = (void *)sub_25E75BEA0();
  id v19 = (void *)sub_25E75BEA0();
  id v20 = objc_msgSend(v6, sel_rowWithTitle_valueKeyPath_, v18, v19);

  if (!v20)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v21 = self;
  id v22 = sub_25E7553D8(0, 0, 0);

  *(void *)(v0 + 184) = v9;
  *(void *)(v0 + 160) = v22;
  uint64_t v23 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v24 = (void *)sub_25E75BEA0();
  id v25 = objc_msgSend(v21, sel_sectionWithRows_title_, v23, v24);

  if (!v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v41[4] = sub_25E72C168;
  v41[5] = 0;
  v41[0] = MEMORY[0x263EF8330];
  v41[1] = 1107296256;
  v41[2] = sub_25E72CE04;
  v41[3] = &block_descriptor_29;
  unint64_t v26 = _Block_copy(v41);
  swift_release();
  id v27 = objc_msgSend(self, sel_actionWithHandler_, v26);
  _Block_release(v26);
  if (!v27)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_25E75FB40;
  id v29 = v27;
  uint64_t v30 = (void *)sub_25E75BEA0();
  id v31 = objc_msgSend(self, sel_rowWithTitle_action_, v30, v29);

  if (!v31)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(void *)(v28 + 56) = sub_25E711DB8(0, &qword_26A704430);
  *(void *)(v28 + 32) = v31;
  id v32 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v33 = (void *)sub_25E75BEA0();
  id v34 = objc_msgSend(v21, sel_sectionWithRows_title_, v32, v33);

  if (v34)
  {
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_25E75FB90;
    uint64_t v36 = sub_25E711DB8(0, &qword_26A704060);
    *(void *)(v35 + 32) = v25;
    *(void *)(v35 + 88) = v36;
    *(void *)(v35 + 56) = v36;
    *(void *)(v35 + 64) = v34;
    id v37 = v25;
    id v38 = v34;
    unint64_t v39 = (void *)sub_25E75BEA0();
    uint64_t v40 = (void *)sub_25E75BF20();
    swift_bridgeObjectRelease();
    objc_msgSend(v21, sel_moduleWithTitle_contents_, v39, v40);

    return;
  }
LABEL_19:
  __break(1u);
}

void sub_25E72CAA4(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  id v3 = (id)sub_25E75BEA0();
  objc_msgSend(v2, sel_setName_, v3);
}

char *keypath_get_selector_locations()
{
  return sel_locations;
}

void sub_25E72CB14(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E72CB44(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_colors()
{
  return sel_colors;
}

void sub_25E72CB80(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E72CBB0(uint64_t a1, void **a2, uint64_t a3, uint64_t a4)
{
}

char *keypath_get_selector_gradientLayerSize()
{
  return sel_gradientLayerSize;
}

id sub_25E72CBEC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_gradientLayerSize);
  *a2 = result;
  return result;
}

id sub_25E72CC28(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setGradientLayerSize_, *a1);
}

char *keypath_get_selector_majorDiameter()
{
  return sel_majorDiameter;
}

id sub_25E72CC48@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_majorDiameter);
  *a2 = v4;
  return result;
}

id sub_25E72CC7C(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setMajorDiameter_, *a1);
}

char *keypath_get_selector_ringWidth()
{
  return sel_ringWidth;
}

id sub_25E72CC9C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_ringWidth);
  *a2 = v4;
  return result;
}

id sub_25E72CCD0(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setRingWidth_, *a1);
}

char *keypath_get_selector_blurRadius()
{
  return sel_blurRadius;
}

id sub_25E72CCF0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_blurRadius);
  *a2 = v4;
  return result;
}

id sub_25E72CD24(double *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setBlurRadius_, *a1);
}

char *keypath_get_selector_sampleCount()
{
  return sel_sampleCount;
}

id sub_25E72CD44@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_sampleCount);
  *a2 = result;
  return result;
}

id sub_25E72CD78(void *a1, id *a2)
{
  return objc_msgSend(*a2, sel_setSampleCount_, *a1);
}

uint64_t type metadata accessor for SUIAShockwaveRadialMaskSettings(uint64_t a1)
{
  return sub_25E711DB8(a1, &qword_26A704490);
}

unint64_t sub_25E72CDA0()
{
  unint64_t result = qword_26A704498;
  if (!qword_26A704498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704498);
  }
  return result;
}

uint64_t sub_25E72CE04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(uint64_t (**)(long long *, long long *))(a1 + 32);
  if (!a2)
  {
    long long v10 = 0u;
    long long v11 = 0u;
    if (a3) {
      goto LABEL_3;
    }
LABEL_5:
    long long v8 = 0u;
    long long v9 = 0u;
    goto LABEL_6;
  }
  *((void *)&v11 + 1) = swift_getObjectType();
  *(void *)&long long v10 = a2;
  if (!a3) {
    goto LABEL_5;
  }
LABEL_3:
  *((void *)&v9 + 1) = swift_getObjectType();
  *(void *)&long long v8 = a3;
LABEL_6:
  swift_retain();
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  char v6 = v5(&v10, &v8);
  swift_release();
  sub_25E71839C((uint64_t)&v8);
  sub_25E71839C((uint64_t)&v10);
  return v6 & 1;
}

id sub_25E72D68C()
{
  uint64_t v1 = v0;
  v54.receiver = v0;
  v54.super_class = (Class)type metadata accessor for ScanwavePrototypeSettings();
  objc_msgSendSuper2(&v54, sel_setDefaultValues);
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_outroDelay] = 0x3FC999999999999ALL;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_completionTimeout] = 0x3FFE666666666666;
  uint64_t v2 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleIntroAnimationSettings;
  id v3 = *(id *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleIntroAnimationSettings];
  objc_msgSend(v3, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v3, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v3, sel_setBehaviorType_, 0);
  uint64_t v4 = (void *)sub_25E75BEA0();
  objc_msgSend(v3, sel_setName_, v4);

  objc_msgSend(*(id *)&v1[v2], sel_setDampingRatio_, 1.0);
  objc_msgSend(*(id *)&v1[v2], sel_setResponse_, 0.513);
  uint64_t v5 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleOutroAnimationSettings;
  id v6 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleOutroAnimationSettings];
  objc_msgSend(v6, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v6, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v6, (SEL)&selRef_siriEdgeMeshEnabledLargeScreen + 2, 0);
  id v7 = (void *)sub_25E75BEA0();
  objc_msgSend(v6, sel_setName_, v7);

  objc_msgSend(*(id *)&v1[v5], sel_setDampingRatio_, 1.0);
  objc_msgSend(*(id *)&v1[v5], sel_setResponse_, 0.7451);
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleFactor] = 0x3FF051EB851EB852;
  uint64_t v8 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessIntroAnimationSettings;
  id v9 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessIntroAnimationSettings];
  objc_msgSend(v9, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v9, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v9, (SEL)&selRef_siriEdgeMeshEnabledLargeScreen + 2, 0);
  long long v10 = (void *)sub_25E75BEA0();
  objc_msgSend(v9, sel_setName_, v10);

  objc_msgSend(*(id *)&v1[v8], sel_setDampingRatio_, 1.0);
  objc_msgSend(*(id *)&v1[v8], sel_setResponse_, 0.513);
  uint64_t v11 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessOutroAnimationSettings;
  id v12 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessOutroAnimationSettings];
  objc_msgSend(v12, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v12, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v12, sel_setBehaviorType_, 0);
  id v13 = (void *)sub_25E75BEA0();
  objc_msgSend(v12, sel_setName_, v13);

  objc_msgSend(*(id *)&v1[v11], (SEL)&selRef_appendObject_, 1.0);
  objc_msgSend(*(id *)&v1[v11], sel_setResponse_, 0.513);
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessAmount] = 0x3FC7ADE225FA658CLL;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthImageColorBrightnessAmount] = 0xBFD0000000000000;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthImageColorContrastAmount] = 0x3FF599999999999ALL;
  uint64_t v14 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskPositionAnimationSettings;
  id v15 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskPositionAnimationSettings];
  objc_msgSend(v15, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v15, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v15, sel_setBehaviorType_, 0);
  id v16 = (void *)sub_25E75BEA0();
  objc_msgSend(v15, sel_setName_, v16);

  objc_msgSend(*(id *)&v1[v14], sel_setDampingRatio_, 1.0);
  objc_msgSend(*(id *)&v1[v14], (SEL)&selRef_donutMaskInitialEdgeOutsetProportion);
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskPositionYNormalizedDistance] = 0x3FD6666666666666;
  uint64_t v17 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskScaleAnimationSettings;
  id v18 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskScaleAnimationSettings];
  objc_msgSend(v18, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v18, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v18, sel_setBehaviorType_, 0);
  id v19 = (void *)sub_25E75BEA0();
  objc_msgSend(v18, sel_setName_, v19);

  objc_msgSend(*(id *)&v1[v17], sel_setDampingRatio_, 1.0);
  objc_msgSend(*(id *)&v1[v17], (SEL)&selRef_donutMaskInitialEdgeOutsetProportion, 1.0);
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskScaleFactor] = 0x402EA3D70A3D70A4;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskInitialIntensity] = 0x3FE999999999999ALL;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskFinalIntensity] = 0x3FE0000000000000;
  uint64_t v20 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskIntensityAnimationSettings;
  id v21 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskIntensityAnimationSettings];
  objc_msgSend(v21, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v21, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v21, sel_setBehaviorType_, 0);
  id v22 = (void *)sub_25E75BEA0();
  objc_msgSend(v21, sel_setName_, v22);

  objc_msgSend(*(id *)&v1[v20], sel_setDampingRatio_, 1.0);
  objc_msgSend(*(id *)&v1[v20], (SEL)&selRef_donutMaskInitialEdgeOutsetProportion, 2.045);
  id v23 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskInitialRadialMask];
  uint64_t v24 = (void *)sub_25E75BEA0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704960);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_25E760050;
  sub_25E711DB8(0, &qword_26A703FF8);
  *(void *)(v25 + 32) = sub_25E75C010();
  *(void *)(v25 + 40) = sub_25E75C010();
  *(void *)(v25 + 48) = sub_25E75C010();
  *(void *)(v25 + 56) = sub_25E75C010();
  *(void *)(v25 + 64) = sub_25E75C010();
  *(void *)(v25 + 72) = sub_25E75C010();
  *(void *)(v25 + 80) = sub_25E75C010();
  *(void *)(v25 + 88) = sub_25E75C010();
  *(void *)(v25 + 96) = sub_25E75C010();
  *(void *)(v25 + 104) = sub_25E75C010();
  *(void *)(v25 + 112) = sub_25E75C010();
  *(void *)(v25 + 120) = sub_25E75C010();
  *(void *)(v25 + 128) = sub_25E75C010();
  *(void *)(v25 + 136) = sub_25E75C010();
  *(void *)(v25 + 144) = sub_25E75C010();
  *(void *)(v25 + 152) = sub_25E75C010();
  *(void *)(v25 + 160) = sub_25E75C010();
  *(void *)(v25 + 168) = sub_25E75C010();
  *(void *)(v25 + 176) = sub_25E75C010();
  *(void *)(v25 + 184) = sub_25E75C010();
  *(void *)(v25 + 192) = sub_25E75C010();
  *(void *)(v25 + 200) = sub_25E75C010();
  *(void *)(v25 + 208) = sub_25E75C010();
  *(void *)(v25 + 216) = sub_25E75C010();
  *(void *)(v25 + 224) = sub_25E75C010();
  *(void *)(v25 + 232) = sub_25E75C010();
  *(void *)(v25 + 240) = sub_25E75C010();
  *(void *)(v25 + 248) = sub_25E75C010();
  *(void *)(v25 + 256) = sub_25E75C010();
  *(void *)(v25 + 264) = sub_25E75C010();
  sub_25E75BF40();
  unint64_t v26 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_25E760050;
  *(void *)(v27 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v27 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v27 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v27 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v27 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v27 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v27 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v27 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v27 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v27 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.992);
  *(void *)(v27 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.984);
  *(void *)(v27 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.969);
  *(void *)(v27 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.945);
  *(void *)(v27 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.906);
  *(void *)(v27 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.851);
  *(void *)(v27 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.78);
  *(void *)(v27 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.686);
  *(void *)(v27 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.58);
  *(void *)(v27 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.475);
  *(void *)(v27 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.365);
  *(void *)(v27 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.271);
  *(void *)(v27 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.184);
  *(void *)(v27 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.122);
  *(void *)(v27 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.075);
  *(void *)(v27 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.047);
  *(void *)(v27 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.024);
  *(void *)(v27 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.016);
  *(void *)(v27 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.004);
  *(void *)(v27 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.004);
  *(void *)(v27 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  uint64_t v28 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v23, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v24, 30, v26, v28, 60.0, 0.0, 6.0, 96.0, 96.0);

  id v29 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskFinalRadialMask];
  uint64_t v30 = (void *)sub_25E75BEA0();
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_25E760050;
  *(void *)(v31 + 32) = sub_25E75C010();
  *(void *)(v31 + 40) = sub_25E75C010();
  *(void *)(v31 + 48) = sub_25E75C010();
  *(void *)(v31 + 56) = sub_25E75C010();
  *(void *)(v31 + 64) = sub_25E75C010();
  *(void *)(v31 + 72) = sub_25E75C010();
  *(void *)(v31 + 80) = sub_25E75C010();
  *(void *)(v31 + 88) = sub_25E75C010();
  *(void *)(v31 + 96) = sub_25E75C010();
  *(void *)(v31 + 104) = sub_25E75C010();
  *(void *)(v31 + 112) = sub_25E75C010();
  *(void *)(v31 + 120) = sub_25E75C010();
  *(void *)(v31 + 128) = sub_25E75C010();
  *(void *)(v31 + 136) = sub_25E75C010();
  *(void *)(v31 + 144) = sub_25E75C010();
  *(void *)(v31 + 152) = sub_25E75C010();
  *(void *)(v31 + 160) = sub_25E75C010();
  *(void *)(v31 + 168) = sub_25E75C010();
  *(void *)(v31 + 176) = sub_25E75C010();
  *(void *)(v31 + 184) = sub_25E75C010();
  *(void *)(v31 + 192) = sub_25E75C010();
  *(void *)(v31 + 200) = sub_25E75C010();
  *(void *)(v31 + 208) = sub_25E75C010();
  *(void *)(v31 + 216) = sub_25E75C010();
  *(void *)(v31 + 224) = sub_25E75C010();
  *(void *)(v31 + 232) = sub_25E75C010();
  *(void *)(v31 + 240) = sub_25E75C010();
  *(void *)(v31 + 248) = sub_25E75C010();
  *(void *)(v31 + 256) = sub_25E75C010();
  *(void *)(v31 + 264) = sub_25E75C010();
  sub_25E75BF40();
  id v32 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_25E760050;
  *(void *)(v33 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 40) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 48) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 56) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 64) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 72) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 80) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 88) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 96) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 104) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 112) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 120) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 128) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 136) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 144) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 152) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 160) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 168) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 176) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 184) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 192) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 1.0);
  *(void *)(v33 + 200) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.98);
  *(void *)(v33 + 208) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.922);
  *(void *)(v33 + 216) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.784);
  *(void *)(v33 + 224) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.553);
  *(void *)(v33 + 232) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.306);
  *(void *)(v33 + 240) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.125);
  *(void *)(v33 + 248) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.031);
  *(void *)(v33 + 256) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.008);
  *(void *)(v33 + 264) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 1.0, 0.0);
  sub_25E75BF40();
  id v34 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v29, sel_setDefaultValuesWithName_majorDiameter_ringWidth_blurRadius_sampleCount_locations_colors_gradientLayerSize_, v30, 30, v32, v34, 920.0, 0.0, 30.0, 1100.0, 1100.0);

  uint64_t v35 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldOffsetAnimationSettings;
  id v36 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldOffsetAnimationSettings];
  objc_msgSend(v36, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v36, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v36, sel_setBehaviorType_, 0);
  id v37 = (void *)sub_25E75BEA0();
  objc_msgSend(v36, sel_setName_, v37);

  objc_msgSend(*(id *)&v1[v35], sel_setDampingRatio_, 1.0);
  objc_msgSend(*(id *)&v1[v35], sel_setResponse_, 1.0479);
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldInitialOffset] = 0x3FF3333333333333;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldFinalOffset] = 0xBFD0A3D70A3D70A4;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldSharpness] = 0x3FD3A5E353F7CED9;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldLineWidth] = 0x3FD0000000000000;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_fillLightColorBrightnessAmount] = 0x3FA999999999999ALL;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_fillLightColorSaturateAmount] = 0x3FF3851EB851EB85;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadius] = 0x4014000000000000;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurOutroDelay] = 0x3FC999999999999ALL;
  uint64_t v38 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadiusIntroAnimationSettings;
  id v39 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadiusIntroAnimationSettings];
  objc_msgSend(v39, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v39, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v39, sel_setBehaviorType_, 0);
  uint64_t v40 = (void *)sub_25E75BEA0();
  objc_msgSend(v39, sel_setName_, v40);

  objc_msgSend(*(id *)&v1[v38], sel_setDampingRatio_, 1.0);
  objc_msgSend(*(id *)&v1[v38], sel_setResponse_, 0.544);
  uint64_t v41 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadiusOutroAnimationSettings;
  id v42 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadiusOutroAnimationSettings];
  objc_msgSend(v42, sel_setDefaultCriticallyDampedValues);
  sub_25E75BFF0();
  objc_msgSend(v42, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v42, sel_setBehaviorType_, 0);
  unint64_t v43 = (void *)sub_25E75BEA0();
  objc_msgSend(v42, sel_setName_, v43);

  objc_msgSend(*(id *)&v1[v41], sel_setDampingRatio_, 1.0);
  objc_msgSend(*(id *)&v1[v41], sel_setResponse_, 0.272);
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_chromaticAberrationMagnitudeX] = 0;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_chromaticAberrationMagnitudeY] = 0x4005555555555555;
  *(void *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_chromaticAberrationColorSaturateAmount] = 0x3FF3333333333333;
  uint64_t v44 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformMeshIntroAnimationSettings;
  id v45 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformMeshIntroAnimationSettings];
  objc_msgSend(v45, (SEL)&selRef_edgeLightMaskOuterRadius + 7);
  sub_25E75BFF0();
  objc_msgSend(v45, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v45, sel_setBehaviorType_, 0);
  unint64_t v46 = (void *)sub_25E75BEA0();
  objc_msgSend(v45, sel_setName_, v46);

  objc_msgSend(*(id *)&v1[v44], sel_setDampingRatio_, 1.0);
  objc_msgSend(*(id *)&v1[v44], sel_setResponse_, 0.408);
  uint64_t v47 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformMeshOutroAnimationSettings;
  id v48 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformMeshOutroAnimationSettings];
  objc_msgSend(v48, (SEL)&selRef_edgeLightMaskOuterRadius + 7);
  sub_25E75BFF0();
  objc_msgSend(v48, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v48, sel_setBehaviorType_, 0);
  uint64_t v49 = (void *)sub_25E75BEA0();
  objc_msgSend(v48, sel_setName_, v49);

  objc_msgSend(*(id *)&v1[v47], sel_setDampingRatio_, 0.35);
  objc_msgSend(*(id *)&v1[v47], sel_setResponse_, 1.2566);
  uint64_t v50 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformPositionAnimationSettings;
  id v51 = *(id *)&v1[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformPositionAnimationSettings];
  objc_msgSend(v51, (SEL)&selRef_edgeLightMaskOuterRadius + 7);
  sub_25E75BFF0();
  objc_msgSend(v51, sel_setFrameRateRange_highFrameRateReason_, 3014657);
  objc_msgSend(v51, sel_setBehaviorType_, 0);
  id v52 = (void *)sub_25E75BEA0();
  objc_msgSend(v51, sel_setName_, v52);

  objc_msgSend(*(id *)&v1[v50], sel_setDampingRatio_, 1.0);
  return objc_msgSend(*(id *)&v1[v50], sel_setResponse_, 1.633);
}

id sub_25E72F064()
{
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_outroDelay] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_completionTimeout] = 0;
  uint64_t v1 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskInitialRadialMask;
  id v2 = objc_allocWithZone((Class)SUIAShockwaveRadialMaskSettings);
  id v3 = v0;
  *(void *)&v0[v1] = objc_msgSend(v2, sel_init);
  uint64_t v4 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskFinalRadialMask;
  *(void *)&v3[v4] = objc_msgSend(objc_allocWithZone((Class)SUIAShockwaveRadialMaskSettings), sel_init);
  uint64_t v5 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskPositionAnimationSettings;
  *(void *)&v3[v5] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskPositionYNormalizedDistance] = 0;
  uint64_t v6 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskScaleAnimationSettings;
  *(void *)&v3[v6] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskScaleFactor] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskInitialIntensity] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskFinalIntensity] = 0;
  uint64_t v7 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_circleMaskIntensityAnimationSettings;
  *(void *)&v3[v7] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  uint64_t v8 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleIntroAnimationSettings;
  *(void *)&v3[v8] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  uint64_t v9 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleOutroAnimationSettings;
  *(void *)&v3[v9] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageScaleFactor] = 0;
  uint64_t v10 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessIntroAnimationSettings;
  *(void *)&v3[v10] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  uint64_t v11 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessOutroAnimationSettings;
  *(void *)&v3[v11] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_sourceImageColorBrightnessAmount] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthImageColorBrightnessAmount] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthImageColorContrastAmount] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldInitialOffset] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldFinalOffset] = 0;
  uint64_t v12 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldOffsetAnimationSettings;
  *(void *)&v3[v12] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldSharpness] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_depthDistanceFieldLineWidth] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_fillLightColorSaturateAmount] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_fillLightColorBrightnessAmount] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadius] = 0;
  uint64_t v13 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadiusIntroAnimationSettings;
  *(void *)&v3[v13] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  uint64_t v14 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurRadiusOutroAnimationSettings;
  *(void *)&v3[v14] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_inverseBlurOutroDelay] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_chromaticAberrationMagnitudeX] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_chromaticAberrationMagnitudeY] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_chromaticAberrationColorSaturateAmount] = 0;
  uint64_t v15 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformMeshIntroAnimationSettings;
  *(void *)&v3[v15] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  uint64_t v16 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformMeshOutroAnimationSettings;
  *(void *)&v3[v16] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);
  uint64_t v17 = OBJC_IVAR____TtC20SystemUIAnimationKit25ScanwavePrototypeSettings_meshTransformPositionAnimationSettings;
  *(void *)&v3[v17] = objc_msgSend(objc_allocWithZone((Class)SUIAFluidBehaviorSettings), sel_init);

  v19.receiver = v3;
  v19.super_class = (Class)type metadata accessor for ScanwavePrototypeSettings();
  return objc_msgSendSuper2(&v19, sel_initWithDefaultValues);
}

id sub_25E72F394()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScanwavePrototypeSettings();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ScanwavePrototypeSettings()
{
  return self;
}

void sub_25E72F508()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_25E7600A0;
  char v216 = self;
  id v1 = objc_msgSend(v216, sel_restoreDefaultSettingsButton);
  if (!v1)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  id v2 = v1;
  uint64_t v214 = sub_25E711DB8(0, &qword_26A704430);
  *(void *)(v0 + 56) = v214;
  *(void *)(v0 + 32) = v2;
  id v3 = (void *)sub_25E75BEA0();
  uint64_t v4 = (void *)sub_25E75BEA0();
  uint64_t v5 = self;
  id v6 = objc_msgSend(v5, sel_rowWithTitle_valueKeyPath_, v3, v4);

  if (!v6)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  id v7 = sub_25E7553D8(3, 0, 0);

  uint64_t v8 = sub_25E711DB8(0, (unint64_t *)&qword_26A704190);
  *(void *)(v0 + 88) = v8;
  *(void *)(v0 + 64) = v7;
  uint64_t v9 = (void *)sub_25E75BEA0();
  uint64_t v10 = (void *)sub_25E75BEA0();
  id v11 = objc_msgSend(v5, sel_rowWithTitle_valueKeyPath_, v9, v10);

  if (!v11)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v12 = self;
  id v13 = sub_25E7553D8(3, 0, 0);

  *(void *)(v0 + 120) = v8;
  *(void *)(v0 + 96) = v13;
  uint64_t v14 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)sub_25E75BEA0();
  v213 = v12;
  id v16 = objc_msgSend(v12, sel_sectionWithRows_title_, v14, v15);

  if (!v16)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_25E760170;
  id v18 = (void *)sub_25E75BEA0();
  objc_super v19 = (void *)sub_25E75BEA0();
  id v211 = v5;
  id v20 = objc_msgSend(v5, sel_rowWithTitle_valueKeyPath_, v18, v19);

  if (!v20)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  id v21 = sub_25E7553D8(3, 0, 0);

  *(void *)(v17 + 56) = v8;
  *(void *)(v17 + 32) = v21;
  id v22 = (void *)sub_25E75BEA0();
  id v23 = (void *)sub_25E75BEA0();
  uint64_t v24 = self;
  id v25 = objc_msgSend(v24, sel_rowWithTitle_childSettingsKeyPath_, v22, v23);

  if (!v25)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  uint64_t v26 = sub_25E711DB8(0, &qword_26A704058);
  *(void *)(v17 + 88) = v26;
  *(void *)(v17 + 64) = v25;
  uint64_t v27 = (void *)sub_25E75BEA0();
  uint64_t v28 = (void *)sub_25E75BEA0();
  id v29 = objc_msgSend(v24, sel_rowWithTitle_childSettingsKeyPath_, v27, v28);

  if (!v29)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  id v200 = v16;
  uint64_t v208 = v26;
  *(void *)(v17 + 120) = v26;
  *(void *)(v17 + 96) = v29;
  uint64_t v30 = (void *)sub_25E75BEA0();
  uint64_t v31 = (void *)sub_25E75BEA0();
  id v32 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v30, v31);

  if (!v32)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  id v33 = sub_25E7553D8(3, 0, 0);

  *(void *)(v17 + 152) = v8;
  *(void *)(v17 + 128) = v33;
  id v34 = (void *)sub_25E75BEA0();
  uint64_t v35 = (void *)sub_25E75BEA0();
  id v36 = objc_msgSend(v24, sel_rowWithTitle_childSettingsKeyPath_, v34, v35);

  if (!v36)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  *(void *)(v17 + 184) = v208;
  *(void *)(v17 + 160) = v36;
  id v37 = (void *)sub_25E75BEA0();
  uint64_t v38 = (void *)sub_25E75BEA0();
  id v39 = objc_msgSend(v24, sel_rowWithTitle_childSettingsKeyPath_, v37, v38);

  if (!v39)
  {
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  *(void *)(v17 + 216) = v208;
  *(void *)(v17 + 192) = v39;
  uint64_t v40 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v41 = (void *)sub_25E75BEA0();
  id v42 = objc_msgSend(v213, sel_sectionWithRows_title_, v40, v41);

  v199 = v42;
  if (!v42)
  {
LABEL_67:
    __break(1u);
    goto LABEL_68;
  }
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_25E75FB90;
  uint64_t v44 = (void *)sub_25E75BEA0();
  id v45 = (void *)sub_25E75BEA0();
  id v46 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v44, v45);

  if (!v46)
  {
LABEL_68:
    __break(1u);
    goto LABEL_69;
  }
  id v47 = sub_25E7553D8(3, 0, 0);

  *(void *)(v43 + 56) = v8;
  *(void *)(v43 + 32) = v47;
  id v48 = (void *)sub_25E75BEA0();
  uint64_t v49 = (void *)sub_25E75BEA0();
  id v50 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v48, v49);

  if (!v50)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  id v51 = sub_25E7553D8(3, 0, 0);

  *(void *)(v43 + 88) = v8;
  *(void *)(v43 + 64) = v51;
  id v52 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v53 = (void *)sub_25E75BEA0();
  id v54 = objc_msgSend(v213, sel_sectionWithRows_title_, v52, v53);

  if (!v54)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 16) = xmmword_25E760090;
  id v56 = (void *)sub_25E75BEA0();
  uint64_t v57 = (void *)sub_25E75BEA0();
  id v58 = objc_msgSend(v24, sel_rowWithTitle_childSettingsKeyPath_, v56, v57);

  if (!v58)
  {
LABEL_71:
    __break(1u);
    goto LABEL_72;
  }
  *(void *)(v55 + 56) = v208;
  *(void *)(v55 + 32) = v58;
  id v59 = (void *)sub_25E75BEA0();
  unint64_t v60 = (void *)sub_25E75BEA0();
  id v61 = objc_msgSend(v24, sel_rowWithTitle_childSettingsKeyPath_, v59, v60);

  if (!v61)
  {
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  *(void *)(v55 + 88) = v208;
  *(void *)(v55 + 64) = v61;
  id v62 = (void *)sub_25E75BEA0();
  id v63 = (void *)sub_25E75BEA0();
  id v64 = objc_msgSend(v24, sel_rowWithTitle_childSettingsKeyPath_, v62, v63);

  if (!v64)
  {
LABEL_73:
    __break(1u);
    goto LABEL_74;
  }
  *(void *)(v55 + 120) = v208;
  *(void *)(v55 + 96) = v64;
  id v65 = (void *)sub_25E75BEA0();
  id v66 = (void *)sub_25E75BEA0();
  id v67 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v65, v66);

  if (!v67)
  {
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  char v198 = v54;
  id v68 = sub_25E7553D8(3, 0, 0);

  *(void *)(v55 + 152) = v8;
  *(void *)(v55 + 128) = v68;
  id v69 = (void *)sub_25E75BEA0();
  id v70 = (void *)sub_25E75BEA0();
  id v71 = objc_msgSend(v24, sel_rowWithTitle_childSettingsKeyPath_, v69, v70);

  if (!v71)
  {
LABEL_75:
    __break(1u);
    goto LABEL_76;
  }
  *(void *)(v55 + 184) = v208;
  *(void *)(v55 + 160) = v71;
  id v72 = (void *)sub_25E75BEA0();
  id v73 = (void *)sub_25E75BEA0();
  id v74 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v72, v73);

  if (!v74)
  {
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }
  id v75 = sub_25E7553D8(3, 0, 0);

  *(void *)(v55 + 216) = v8;
  *(void *)(v55 + 192) = v75;
  id v76 = (void *)sub_25E75BEA0();
  id v77 = (void *)sub_25E75BEA0();
  id v78 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v76, v77);

  if (!v78)
  {
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  id v79 = sub_25E7553D8(3, 0, 0);

  *(void *)(v55 + 248) = v8;
  *(void *)(v55 + 224) = v79;
  id v80 = (void *)sub_25E75BEA0();
  id v81 = (void *)sub_25E75BEA0();
  id v82 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v80, v81);

  if (!v82)
  {
LABEL_78:
    __break(1u);
    goto LABEL_79;
  }
  id v83 = sub_25E7553D8(3, 0, 0);

  *(void *)(v55 + 280) = v8;
  *(void *)(v55 + 256) = v83;
  id v84 = (void *)sub_25E75BEA0();
  id v85 = (void *)sub_25E75BEA0();
  id v86 = objc_msgSend(v24, sel_rowWithTitle_childSettingsKeyPath_, v84, v85);

  if (!v86)
  {
LABEL_79:
    __break(1u);
    goto LABEL_80;
  }
  *(void *)(v55 + 312) = v208;
  *(void *)(v55 + 288) = v86;
  uint64_t v87 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  id v88 = (void *)sub_25E75BEA0();
  id v89 = objc_msgSend(v213, sel_sectionWithRows_title_, v87, v88);

  id v197 = v89;
  if (!v89)
  {
LABEL_80:
    __break(1u);
    goto LABEL_81;
  }
  uint64_t v90 = swift_allocObject();
  *(_OWORD *)(v90 + 16) = xmmword_25E7600B0;
  id v91 = (void *)sub_25E75BEA0();
  id v92 = (void *)sub_25E75BEA0();
  id v93 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v91, v92);

  if (!v93)
  {
LABEL_81:
    __break(1u);
    goto LABEL_82;
  }
  id v94 = sub_25E7553D8(3, 0, 0);

  *(void *)(v90 + 56) = v8;
  *(void *)(v90 + 32) = v94;
  id v95 = (void *)sub_25E75BEA0();
  id v96 = (void *)sub_25E75BEA0();
  id v97 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v95, v96);

  if (!v97)
  {
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  id v98 = sub_25E7553D8(3, 0, 0);

  *(void *)(v90 + 88) = v8;
  *(void *)(v90 + 64) = v98;
  id v99 = (void *)sub_25E75BEA0();
  unint64_t v100 = (void *)sub_25E75BEA0();
  id v201 = v24;
  id v101 = objc_msgSend(v24, sel_rowWithTitle_childSettingsKeyPath_, v99, v100);

  if (!v101)
  {
LABEL_83:
    __break(1u);
    goto LABEL_84;
  }
  *(void *)(v90 + 120) = v208;
  *(void *)(v90 + 96) = v101;
  id v102 = (void *)sub_25E75BEA0();
  id v103 = (void *)sub_25E75BEA0();
  id v104 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v102, v103);

  if (!v104)
  {
LABEL_84:
    __break(1u);
    goto LABEL_85;
  }
  id v105 = sub_25E7553D8(3, 0, 0);

  *(void *)(v90 + 152) = v8;
  *(void *)(v90 + 128) = v105;
  id v106 = (void *)sub_25E75BEA0();
  id v107 = (void *)sub_25E75BEA0();
  id v108 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v106, v107);

  if (!v108)
  {
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  id v109 = sub_25E7553D8(3, 0, 0);

  *(void *)(v90 + 184) = v8;
  *(void *)(v90 + 160) = v109;
  id v110 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  id v111 = (void *)sub_25E75BEA0();
  id v112 = objc_msgSend(v213, sel_sectionWithRows_title_, v110, v111);

  if (!v112)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  uint64_t v113 = swift_allocObject();
  *(_OWORD *)(v113 + 16) = xmmword_25E760060;
  id v114 = (void *)sub_25E75BEA0();
  unint64_t v115 = (void *)sub_25E75BEA0();
  id v116 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v114, v115);

  if (!v116)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  id v196 = v112;
  id v117 = sub_25E7553D8(2, 0, 0);

  *(void *)(v113 + 56) = v8;
  *(void *)(v113 + 32) = v117;
  id v118 = (void *)sub_25E75BEA0();
  id v119 = (void *)sub_25E75BEA0();
  id v120 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v118, v119);

  if (!v120)
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  id v121 = sub_25E7553D8(2, 0, 0);

  *(void *)(v113 + 88) = v8;
  *(void *)(v113 + 64) = v121;
  id v122 = (void *)sub_25E75BEA0();
  id v123 = (void *)sub_25E75BEA0();
  id v124 = objc_msgSend(v201, sel_rowWithTitle_childSettingsKeyPath_, v122, v123);

  if (!v124)
  {
LABEL_89:
    __break(1u);
    goto LABEL_90;
  }
  *(void *)(v113 + 120) = v208;
  *(void *)(v113 + 96) = v124;
  uint64_t v125 = (void *)sub_25E75BEA0();
  uint64_t v126 = (void *)sub_25E75BEA0();
  id v127 = objc_msgSend(v201, sel_rowWithTitle_childSettingsKeyPath_, v125, v126);

  if (!v127)
  {
LABEL_90:
    __break(1u);
    goto LABEL_91;
  }
  *(void *)(v113 + 152) = v208;
  *(void *)(v113 + 128) = v127;
  id v128 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v129 = (void *)sub_25E75BEA0();
  id v130 = objc_msgSend(v213, sel_sectionWithRows_title_, v128, v129);

  if (!v130)
  {
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  uint64_t v131 = swift_allocObject();
  *(_OWORD *)(v131 + 16) = xmmword_25E75FB90;
  id v132 = (void *)sub_25E75BEA0();
  uint64_t v133 = (void *)sub_25E75BEA0();
  id v134 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v132, v133);

  if (!v134)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  id v135 = sub_25E7553D8(2, 0, 0);

  *(void *)(v131 + 56) = v8;
  *(void *)(v131 + 32) = v135;
  uint64_t v136 = (void *)sub_25E75BEA0();
  id v137 = (void *)sub_25E75BEA0();
  id v138 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v136, v137);

  if (!v138)
  {
LABEL_93:
    __break(1u);
    goto LABEL_94;
  }
  v203 = v130;
  id v139 = sub_25E7553D8(2, 0, 0);

  *(void *)(v131 + 88) = v8;
  *(void *)(v131 + 64) = v139;
  id v140 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  id v141 = (void *)sub_25E75BEA0();
  id v142 = objc_msgSend(v213, sel_sectionWithRows_title_, v140, v141);

  v195 = v142;
  if (!v142)
  {
LABEL_94:
    __break(1u);
    goto LABEL_95;
  }
  uint64_t v143 = swift_allocObject();
  *(_OWORD *)(v143 + 16) = xmmword_25E75FB90;
  uint64_t v144 = (void *)sub_25E75BEA0();
  uint64_t v145 = (void *)sub_25E75BEA0();
  id v146 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v144, v145);

  if (!v146)
  {
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  id v147 = sub_25E7553D8(2, 0, 0);

  *(void *)(v143 + 56) = v8;
  *(void *)(v143 + 32) = v147;
  uint64_t v148 = (void *)sub_25E75BEA0();
  id v149 = (void *)sub_25E75BEA0();
  id v150 = objc_msgSend(v211, sel_rowWithTitle_valueKeyPath_, v148, v149);

  if (!v150)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  id v151 = sub_25E7553D8(2, 0, 0);

  *(void *)(v143 + 88) = v8;
  *(void *)(v143 + 64) = v151;
  id v152 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v153 = (void *)sub_25E75BEA0();
  id v154 = objc_msgSend(v213, sel_sectionWithRows_title_, v152, v153);

  id v212 = v154;
  if (!v154)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  uint64_t v155 = swift_allocObject();
  *(_OWORD *)(v155 + 16) = xmmword_25E7600A0;
  id v156 = (void *)sub_25E75BEA0();
  id v157 = (void *)sub_25E75BEA0();
  id v158 = objc_msgSend(v201, sel_rowWithTitle_childSettingsKeyPath_, v156, v157);

  if (!v158)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  *(void *)(v155 + 56) = v208;
  *(void *)(v155 + 32) = v158;
  uint64_t v159 = (void *)sub_25E75BEA0();
  id v160 = (void *)sub_25E75BEA0();
  id v161 = objc_msgSend(v201, sel_rowWithTitle_childSettingsKeyPath_, v159, v160);

  if (!v161)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  *(void *)(v155 + 88) = v208;
  *(void *)(v155 + 64) = v161;
  uint64_t v162 = (void *)sub_25E75BEA0();
  uint64_t v163 = (void *)sub_25E75BEA0();
  id v164 = objc_msgSend(v201, sel_rowWithTitle_childSettingsKeyPath_, v162, v163);

  if (!v164)
  {
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  *(void *)(v155 + 120) = v208;
  *(void *)(v155 + 96) = v164;
  id v165 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  uint64_t v166 = (void *)sub_25E75BEA0();
  id v167 = objc_msgSend(v213, sel_sectionWithRows_title_, v165, v166);

  if (!v167)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  id v221 = sub_25E7237F0;
  uint64_t v222 = 0;
  *(void *)&long long aBlock = MEMORY[0x263EF8330];
  *((void *)&aBlock + 1) = 1107296256;
  uint64_t v219 = sub_25E72CE04;
  id v220 = &block_descriptor_1;
  id v168 = _Block_copy(&aBlock);
  swift_release();
  id v169 = objc_msgSend(self, sel_actionWithHandler_, v168);
  _Block_release(v168);
  if (!v169)
  {
LABEL_102:
    __break(1u);
    goto LABEL_103;
  }
  uint64_t v170 = swift_allocObject();
  *(_OWORD *)(v170 + 16) = xmmword_25E75FB40;
  id v171 = v169;
  id v172 = (void *)sub_25E75BEA0();
  id v173 = objc_msgSend(v216, sel_rowWithTitle_action_, v172, v171);

  if (!v173)
  {
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
LABEL_105:
    __break(1u);
    return;
  }
  id v205 = v171;
  v209 = v167;
  *(void *)(v170 + 56) = v214;
  *(void *)(v170 + 32) = v173;
  char v174 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  int v175 = (void *)sub_25E75BEA0();
  id v176 = objc_msgSend(v213, sel_sectionWithRows_title_, v174, v175);

  id v206 = v176;
  if (!v176) {
    goto LABEL_104;
  }
  uint64_t v217 = MEMORY[0x263F8EE78];
  uint64_t v177 = 50;
  sub_25E75A4E0(0, 50, 0);
  char v178 = self;
  do
  {
    id v179 = objc_msgSend(v178, sel_actionWithSettingsKeyPath_, 0);
    id v180 = (void *)sub_25E75BEA0();
    id v181 = objc_msgSend(v216, sel_rowWithTitle_action_, v180, v179);

    if (!v181)
    {
      __break(1u);
      goto LABEL_57;
    }
    id v220 = (void *)v214;
    *(void *)&long long aBlock = v181;
    unint64_t v183 = *(void *)(v217 + 16);
    unint64_t v182 = *(void *)(v217 + 24);
    if (v183 >= v182 >> 1) {
      sub_25E75A4E0((char *)(v182 > 1), v183 + 1, 1);
    }
    *(void *)(v217 + 16) = v183 + 1;
    sub_25E7136C0(&aBlock, (_OWORD *)(v217 + 32 * v183 + 32));
    --v177;
  }
  while (v177);
  char v184 = (void *)sub_25E75BF20();
  swift_release();
  int v185 = (void *)sub_25E75BEA0();
  id v186 = objc_msgSend(v213, sel_sectionWithRows_title_, v184, v185);

  if (!v186) {
    goto LABEL_105;
  }
  uint64_t v187 = swift_allocObject();
  *(_OWORD *)(v187 + 16) = xmmword_25E760180;
  uint64_t v188 = sub_25E711DB8(0, &qword_26A704060);
  *(void *)(v187 + 32) = v200;
  *(void *)(v187 + 56) = v188;
  *(void *)(v187 + 64) = v199;
  *(void *)(v187 + 88) = v188;
  *(void *)(v187 + 96) = v198;
  *(void *)(v187 + 120) = v188;
  *(void *)(v187 + 128) = v197;
  *(void *)(v187 + 152) = v188;
  *(void *)(v187 + 160) = v196;
  *(void *)(v187 + 184) = v188;
  *(void *)(v187 + 192) = v203;
  *(void *)(v187 + 216) = v188;
  *(void *)(v187 + 224) = v195;
  *(void *)(v187 + 248) = v188;
  *(void *)(v187 + 256) = v212;
  *(void *)(v187 + 280) = v188;
  *(void *)(v187 + 288) = v209;
  *(void *)(v187 + 312) = v188;
  *(void *)(v187 + 320) = v206;
  *(void *)(v187 + 376) = v188;
  *(void *)(v187 + 344) = v188;
  *(void *)(v187 + 352) = v186;
  id v215 = v200;
  id v210 = v199;
  id v207 = v198;
  id v204 = v197;
  id v202 = v196;
  id v189 = v203;
  id v190 = v195;
  id v191 = v212;
  id v192 = v209;
  uint64_t v193 = (void *)sub_25E75BEA0();
  char v194 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v213, sel_moduleWithTitle_contents_, v193, v194);
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_25E731370()
{
  return sub_25E75C200();
}

uint64_t sub_25E7313F4()
{
  return sub_25E75C1E0();
}

uint64_t sub_25E731468()
{
  return sub_25E75C200();
}

BOOL sub_25E7314E8(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

ValueMetadata *type metadata accessor for GUID()
{
  return &type metadata for GUID;
}

uint64_t sub_25E731510()
{
  uint64_t v8 = *MEMORY[0x263EF8340];
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  id v3 = (char *)swift_slowAlloc();
  *(void *)uu = v1;
  uint64_t v7 = v2;
  uuid_unparse_upper(uu, v3);
  uint64_t v4 = sub_25E75BEF0();
  MEMORY[0x2611E26F0](v3, -1, -1);
  return v4;
}

unint64_t sub_25E7315B8()
{
  unint64_t result = qword_26A7045C0;
  if (!qword_26A7045C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7045C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for GUID.UInt128()
{
  return &type metadata for GUID.UInt128;
}

unint64_t sub_25E731620()
{
  unint64_t result = qword_26A7045C8;
  if (!qword_26A7045C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7045C8);
  }
  return result;
}

id sub_25E73175C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ShapeView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ShapeView()
{
  return self;
}

unint64_t sub_25E7317B4()
{
  unint64_t result = qword_26A7045D0;
  if (!qword_26A7045D0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A7045D0);
  }
  return result;
}

uint64_t sub_25E7317F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    swift_beginAccess();
    uint64_t v8 = (void *)sub_25E744AF0(a3, a4);
    swift_endAccess();
    objc_msgSend(v8, sel_invalidate);

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 16);
    swift_retain();
    v9(a3, a4);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_25E7318CC()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 40, 7);
}

uint64_t type metadata accessor for LayoutTimerController()
{
  return self;
}

BOOL sub_25E731930(double *a1, double *a2)
{
  if (*a1 != *a2 || a1[1] != a2[1] || a1[2] != a2[2]) {
    return 0;
  }
  BOOL v5 = a1[3] == a2[3];
  if (a1[4] != a2[4]) {
    BOOL v5 = 0;
  }
  return a1[5] == a2[5] && v5;
}

uint64_t sub_25E731984(float64x2_t *a1, float64x2_t *a2)
{
  return vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*a1, *a2), (int32x4_t)vceqq_f64(a1[1], a2[1]))), 0xFuLL))) & (a1[2].f64[0] == a2[2].f64[0]) & (a1[2].f64[1] == a2[2].f64[1]);
}

uint64_t sub_25E7319D0(uint64_t a1, uint64_t a2)
{
  int v2 = *(_DWORD *)(a1 + 12);
  char v3 = *(unsigned char *)(a1 + 16);
  int v4 = *(_DWORD *)(a2 + 12);
  int v5 = *(unsigned __int8 *)(a2 + 16);
  if (sub_25E75BFE0())
  {
    if (v3)
    {
      if (v5) {
        return 1;
      }
    }
    else
    {
      if (v2 == v4) {
        char v7 = v5;
      }
      else {
        char v7 = 1;
      }
      if ((v7 & 1) == 0) {
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_25E731A3C(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 48);
  double v7[2] = *(_OWORD *)(a1 + 32);
  v7[3] = v2;
  char v8 = *(unsigned char *)(a1 + 64);
  long long v3 = *(_OWORD *)(a1 + 16);
  v7[0] = *(_OWORD *)a1;
  v7[1] = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  v9[2] = *(_OWORD *)(a2 + 32);
  v9[3] = v4;
  char v10 = *(unsigned char *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v5;
  return sub_25E731C98((uint64_t)v7, (uint64_t)v9) & 1;
}

char *sub_25E731A98(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  char v8 = (char *)objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  objc_msgSend(v8, sel_setDefaultValues);
  uint64_t v9 = &v8[OBJC_IVAR___SUIAFluidBehaviorSettings_dampingRatio];
  swift_beginAccess();
  *(void *)uint64_t v9 = v2;
  char v10 = &v8[OBJC_IVAR___SUIAFluidBehaviorSettings_response];
  swift_beginAccess();
  *(void *)char v10 = v3;
  id v11 = &v8[OBJC_IVAR___SUIAFluidBehaviorSettings_retargetImpulse];
  swift_beginAccess();
  *(void *)id v11 = v5;
  uint64_t v12 = &v8[OBJC_IVAR___SUIAFluidBehaviorSettings_trackingDampingRatio];
  swift_beginAccess();
  *(void *)uint64_t v12 = v4;
  id v13 = &v8[OBJC_IVAR___SUIAFluidBehaviorSettings_trackingResponse];
  swift_beginAccess();
  *(void *)id v13 = v7;
  uint64_t v14 = &v8[OBJC_IVAR___SUIAFluidBehaviorSettings_trackingRetargetImpulse];
  swift_beginAccess();
  *(void *)uint64_t v14 = v6;
  if (a1[8]) {
    uint64_t v18 = 0;
  }
  else {
    uint64_t v18 = *((unsigned int *)a1 + 15);
  }
  LODWORD(v15) = *((_DWORD *)a1 + 12);
  LODWORD(v16) = *((_DWORD *)a1 + 13);
  LODWORD(v17) = *((_DWORD *)a1 + 14);
  objc_msgSend(v8, sel_setFrameRateRange_highFrameRateReason_, v18, v15, v16, v17);

  return v8;
}

uint64_t sub_25E731C38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(a2, a3);
  return swift_release();
}

uint64_t sub_25E731C98(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) != 0&& *(double *)(a1 + 32) == *(double *)(a2 + 32)&& *(double *)(a1 + 40) == *(double *)(a2 + 40))
  {
    int v4 = *(_DWORD *)(a1 + 60);
    char v5 = *(unsigned char *)(a1 + 64);
    int v6 = *(_DWORD *)(a2 + 60);
    char v7 = *(unsigned char *)(a2 + 64);
    if (sub_25E75BFE0())
    {
      if (v5)
      {
        if (v7) {
          return 1;
        }
      }
      else if ((v7 & 1) == 0 && v4 == v6)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

id sub_25E731D5C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  if (objc_msgSend(a1, sel_behaviorType))
  {
    id result = (id)sub_25E75C120();
    __break(1u);
  }
  else
  {
    objc_msgSend(a1, sel_dampingRatio);
    uint64_t v5 = v4;
    objc_msgSend(a1, sel_response);
    uint64_t v7 = v6;
    objc_msgSend(a1, sel_retargetImpulse);
    uint64_t v9 = v8;
    objc_msgSend(a1, sel_trackingDampingRatio);
    uint64_t v11 = v10;
    objc_msgSend(a1, sel_trackingResponse);
    uint64_t v13 = v12;
    objc_msgSend(a1, sel_trackingRetargetImpulse);
    uint64_t v15 = v14;
    unsigned int v16 = objc_msgSend(a1, sel_highFrameRateReason);
    id result = objc_msgSend(a1, sel_frameRateRange);
    *(void *)a2 = v5;
    *(void *)(a2 + 8) = v7;
    *(void *)(a2 + 16) = v9;
    *(void *)(a2 + 24) = v11;
    *(void *)(a2 + 32) = v13;
    *(void *)(a2 + 40) = v15;
    *(_DWORD *)(a2 + 48) = v18;
    *(_DWORD *)(a2 + 52) = v19;
    *(_DWORD *)(a2 + 56) = v20;
    *(_DWORD *)(a2 + 60) = v16;
    *(unsigned char *)(a2 + 64) = v16 == 0;
  }
  return result;
}

void sub_25E731EC4(uint64_t *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  type metadata accessor for SUIAFluidBehaviorSettings(0);
  uint64_t v11 = sub_25E731A98(a1);
  uint64_t v12 = self;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v18 = 1107296256;
  int v19 = sub_25E7385C4;
  int v20 = &block_descriptor_2;
  uint64_t v13 = _Block_copy(&aBlock);
  uint64_t v14 = v11;
  swift_retain();
  swift_release();
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v18 = 1107296256;
  int v19 = sub_25E731C38;
  int v20 = &block_descriptor_3;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v12, sel__animateUsingSpringBehavior_tracking_animations_completion_, v14, a2 & 1, v13, v15);
  _Block_release(v15);
  _Block_release(v13);
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

__n128 __swift_memcpy65_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ComponentFluidBehaviorSettings(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ComponentFluidBehaviorSettings(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 65) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ComponentFluidBehaviorSettings()
{
  return &type metadata for ComponentFluidBehaviorSettings;
}

__n128 __swift_memcpy17_4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ComponentFluidBehaviorSettings.FrameRateConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ComponentFluidBehaviorSettings.FrameRateConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 17) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ComponentFluidBehaviorSettings.FrameRateConfiguration()
{
  return &type metadata for ComponentFluidBehaviorSettings.FrameRateConfiguration;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t sub_25E732188()
{
  return 0;
}

ValueMetadata *type metadata accessor for ComponentFluidBehaviorSettings.AnimationSettings()
{
  return &type metadata for ComponentFluidBehaviorSettings.AnimationSettings;
}

uint64_t getEnumTagSinglePayload for ComponentFluidBehaviorSettings.AnimationSettings.SpringParameters(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ComponentFluidBehaviorSettings.AnimationSettings.SpringParameters(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ComponentFluidBehaviorSettings.AnimationSettings.SpringParameters()
{
  return &type metadata for ComponentFluidBehaviorSettings.AnimationSettings.SpringParameters;
}

ValueMetadata *type metadata accessor for ComponentFluidBehaviorSettings.AnimationSettings.SpringProperties()
{
  return &type metadata for ComponentFluidBehaviorSettings.AnimationSettings.SpringProperties;
}

unsigned char *sub_25E732228(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (unsigned char *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_25E75BE40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_25E732378(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3 || result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_25E75BE40();
    long long v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

unsigned char *sub_25E732420(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 3)
  {
    *(void *)a1 = *(void *)a2;
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(void *)a1 = *(void *)a2;
    a1[8] = a2[8];
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_25E75BE40();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_25E73252C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E732648((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_25E75BE40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_25E732648(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScanwaveCommonEvent();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ScanwaveCommonEvent()
{
  uint64_t result = qword_26A7045D8;
  if (!qword_26A7045D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_25E7326F0(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_25E75BE40();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_25E7327A4(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E732648((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_25E75BE40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_25E732868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_25E732890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_25E7328BC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_25E7328CC()
{
  uint64_t result = sub_25E75BE40();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ScanwaveCommonEvent.OutputModelUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ScanwaveCommonEvent.OutputModelUpdateInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for ScanwaveCommonEvent.OutputModelUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for ScanwaveCommonEvent.OutputModelUpdateInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScanwaveCommonEvent.OutputModelUpdateInfo(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveCommonEvent.OutputModelUpdateInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveCommonEvent.OutputModelUpdateInfo()
{
  return &type metadata for ScanwaveCommonEvent.OutputModelUpdateInfo;
}

uint64_t sub_25E732AF0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 8);
  int v3 = *(unsigned __int8 *)(a2 + 8);
  return sub_25E732B34(*(void *)a1, *(void *)a2) & ~(v2 ^ v3) & 1;
}

uint64_t sub_25E732B34(uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) == *(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v5 = a1 + 56;
    uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(a1 + 56);
    int64_t v27 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = a2 + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v10 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v11 = v10 | (v4 << 6);
      }
      else
      {
        int64_t v12 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_36;
        }
        if (v12 >= v27) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v12);
        ++v4;
        if (!v13)
        {
          int64_t v4 = v12 + 1;
          if (v12 + 1 >= v27) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13)
          {
            int64_t v4 = v12 + 2;
            if (v12 + 2 >= v27) {
              return 1;
            }
            unint64_t v13 = *(void *)(v5 + 8 * v4);
            if (!v13)
            {
              int64_t v4 = v12 + 3;
              if (v12 + 3 >= v27) {
                return 1;
              }
              unint64_t v13 = *(void *)(v5 + 8 * v4);
              if (!v13)
              {
                int64_t v14 = v12 + 4;
                if (v14 >= v27) {
                  return 1;
                }
                unint64_t v13 = *(void *)(v5 + 8 * v14);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v4 = v14 + 1;
                    if (__OFADD__(v14, 1)) {
                      break;
                    }
                    if (v4 >= v27) {
                      return 1;
                    }
                    unint64_t v13 = *(void *)(v5 + 8 * v4);
                    ++v14;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_36:
                  __break(1u);
                }
                int64_t v4 = v14;
              }
            }
          }
        }
LABEL_24:
        unint64_t v8 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
      }
      uint64_t v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v17 = *v15;
      uint64_t v16 = v15[1];
      sub_25E75C1D0();
      sub_25E75C1E0();
      uint64_t v18 = sub_25E75C200();
      uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
        return 0;
      }
      uint64_t v21 = ~v19;
      while (1)
      {
        uint64_t v22 = (uint64_t *)(*(void *)(a2 + 48) + 16 * v20);
        uint64_t v24 = *v22;
        uint64_t v23 = v22[1];
        if (v24 == v17 && v23 == v16) {
          break;
        }
        unint64_t v20 = (v20 + 1) & v21;
        if (((*(void *)(v9 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          return 0;
        }
      }
    }
  }
  return 0;
}

uint64_t sub_25E732D8C()
{
  if ((sub_25E75BE90() & 1) == 0) {
    return 0;
  }
  type metadata accessor for FromToValue();
  return sub_25E75BE90() & 1;
}

uint64_t sub_25E732DF8()
{
  return sub_25E732D8C();
}

uint64_t type metadata accessor for FromToValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E732E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t sub_25E732E24()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25E732EB4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *int64_t v4 = *a2;
    int64_t v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    uint64_t v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, v5);
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_25E732FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8) + 8;
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))v6;
  (*(void (**)(uint64_t, uint64_t))v6)(a1, v3);
  unint64_t v4 = (*(void *)(v6 + 56) + a1 + *(unsigned __int8 *)(v6 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 72);
  return v7(v4, v3);
}

unint64_t sub_25E73305C(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), v5);
  return a1;
}

unint64_t sub_25E7330F0(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  uint64_t v8 = v6 + 24;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), v5);
  return a1;
}

unint64_t sub_25E733184(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), v5);
  return a1;
}

unint64_t sub_25E733218(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  uint64_t v8 = v6 + 40;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), v5);
  return a1;
}

uint64_t sub_25E7332AC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v6;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_25E733418(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x25E733640);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t destroy for ComponentAnimatableProperty.Milestone()
{
  return swift_release();
}

uint64_t initializeWithCopy for ComponentAnimatableProperty.Milestone(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  return a1;
}

void *assignWithCopy for ComponentAnimatableProperty.Milestone(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v3 = a2[3];
  a1[2] = a2[2];
  a1[3] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for ComponentAnimatableProperty.Milestone(_OWORD *a1, _OWORD *a2)
{
  long long v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ComponentAnimatableProperty.Milestone(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentAnimatableProperty.Milestone(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentAnimatableProperty.Milestone()
{
  return &type metadata for ComponentAnimatableProperty.Milestone;
}

ValueMetadata *type metadata accessor for ComponentAnimatableProperty.Milestone.ID()
{
  return &type metadata for ComponentAnimatableProperty.Milestone.ID;
}

uint64_t destroy for ComponentAnimatableProperty()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ComponentAnimatableProperty(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ComponentAnimatableProperty(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  long long v3 = *(_OWORD *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 56);
  long long v5 = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = v5;
  *(_OWORD *)(a1 + 56) = v4;
  *(_OWORD *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy112_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ComponentAnimatableProperty(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(unsigned char *)(a1 + 90) = *(unsigned char *)(a2 + 90);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ComponentAnimatableProperty(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 104);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ComponentAnimatableProperty(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 104) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ComponentAnimatableProperty()
{
  return &type metadata for ComponentAnimatableProperty;
}

ValueMetadata *type metadata accessor for ComponentAnimatableProperty.ID()
{
  return &type metadata for ComponentAnimatableProperty.ID;
}

uint64_t sub_25E733A60()
{
  return sub_25E731370();
}

uint64_t sub_25E733AB8()
{
  return sub_25E7313F4();
}

uint64_t sub_25E733B10()
{
  return sub_25E731468();
}

unint64_t sub_25E733B6C()
{
  unint64_t result = qword_26A704668;
  if (!qword_26A704668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704668);
  }
  return result;
}

unint64_t sub_25E733BC4()
{
  unint64_t result = qword_26A704670;
  if (!qword_26A704670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704670);
  }
  return result;
}

void *sub_25E733C18(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v7 = sub_25E75BE40();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for ScanwaveActivateResponse(0);
      *((unsigned char *)a1 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_25E733D28(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 3)
  {
    uint64_t v3 = sub_25E75BE40();
    long long v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

unsigned char *sub_25E733DA4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = sub_25E75BE40();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for ScanwaveActivateResponse(0);
    a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_25E733E70(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E733F4C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = sub_25E75BE40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for ScanwaveActivateResponse(0);
      a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25E733F4C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScanwaveCommonAction();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for ScanwaveCommonAction()
{
  uint64_t result = qword_26A704678;
  if (!qword_26A704678) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unsigned char *sub_25E733FF4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v6 = sub_25E75BE40();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for ScanwaveActivateResponse(0);
    a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_25E7340C0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E733F4C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      uint64_t v6 = sub_25E75BE40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for ScanwaveActivateResponse(0);
      a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25E73419C()
{
  uint64_t result = type metadata accessor for ScanwaveActivateResponse(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveCommonAction.UpdateOutputModelCallbackID()
{
  return &type metadata for ScanwaveCommonAction.UpdateOutputModelCallbackID;
}

uint64_t sub_25E734254()
{
  uint64_t v0 = type metadata accessor for ScanwaveCommonAction();
  __swift_allocate_value_buffer(v0, qword_26A706580);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26A706580);
  *(void *)uint64_t v1 = 0;
  *(void *)(v1 + 8) = 0;
  *(unsigned char *)(v1 + 16) = 2;
  return swift_storeEnumTagMultiPayload();
}

unint64_t sub_25E7342C0()
{
  unint64_t result = qword_26A704688;
  if (!qword_26A704688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704688);
  }
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

ValueMetadata *type metadata accessor for ScanwaveCommonAction.TimerStartInfo()
{
  return &type metadata for ScanwaveCommonAction.TimerStartInfo;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ScanwaveCommonAction.UpdateOutputModelCallbackInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveCommonAction.UpdateOutputModelCallbackInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveCommonAction.UpdateOutputModelCallbackInfo()
{
  return &type metadata for ScanwaveCommonAction.UpdateOutputModelCallbackInfo;
}

uint64_t sub_25E73446C()
{
  return sub_25E75C200();
}

uint64_t sub_25E7344B4()
{
  return sub_25E75C1F0();
}

uint64_t sub_25E7344E0()
{
  return sub_25E75C200();
}

BOOL sub_25E734524(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

__n128 sub_25E73453C@<Q0>(__n128 *a1@<X8>)
{
  __n128 result = *v1;
  *a1 = *v1;
  return result;
}

uint64_t sub_25E734548(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return (*(unsigned __int8 *)(a2 + 16) ^ *(unsigned __int8 *)(a1 + 16) ^ 1) & 1;
  }
  else {
    return 0;
  }
}

unint64_t sub_25E734580()
{
  unint64_t result = qword_26A704950;
  if (!qword_26A704950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704950);
  }
  return result;
}

BOOL sub_25E7345D4(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2
      && *(void *)(a1 + 8) == *(void *)(a2 + 8)
      && *(double *)(a1 + 16) == *(double *)(a2 + 16);
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ScanwaveCommonAction.UpdateOutputModelCallbackStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScanwaveCommonAction.UpdateOutputModelCallbackStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E73476CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_25E734794(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_25E73479C(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveCommonAction.UpdateOutputModelCallbackStyle()
{
  return &type metadata for ScanwaveCommonAction.UpdateOutputModelCallbackStyle;
}

unint64_t sub_25E7347BC()
{
  unint64_t result = qword_26A704690;
  if (!qword_26A704690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704690);
  }
  return result;
}

id sub_25E7348F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BackdropView();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for BackdropView()
{
  return self;
}

unint64_t sub_25E73494C()
{
  unint64_t result = qword_26A704698;
  if (!qword_26A704698)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A704698);
  }
  return result;
}

uint64_t static UnsafeMutablePointer.with<A>(_:_:)(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_25E75C040();
  a2();
  return MEMORY[0x270F9E358](v6, a4);
}

uint64_t sub_25E7349F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E75BE40();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  return v5(a1, a2, v4);
}

uint64_t sub_25E734A64(uint64_t a1)
{
  uint64_t v2 = sub_25E75BE40();
  int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
  return v3(a1, v2);
}

uint64_t sub_25E734AC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_25E734B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_25E734B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_25E734BF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_25E734C58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E734C6C);
}

uint64_t sub_25E734C6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E75BE40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_25E734CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E734CEC);
}

uint64_t sub_25E734CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E75BE40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ExternalRequestID(uint64_t a1)
{
  return sub_25E7355D0(a1, (uint64_t *)&unk_26A7046A0);
}

uint64_t sub_25E734D7C()
{
  uint64_t result = sub_25E75BE40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25E734E08(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25E75BE40();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t *)((char *)a2 + v8 + 24);
    *(uint64_t *)((char *)a1 + v8 + 24) = v9;
    (**(void (***)(void))(v9 - 8))();
  }
  return a1;
}

uint64_t sub_25E734F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  return __swift_destroy_boxed_opaque_existential_0(v5);
}

uint64_t sub_25E734F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(void *)(a2 + v7 + 24);
  *(void *)(a1 + v7 + 24) = v8;
  (**(void (***)(void))(v8 - 8))();
  return a1;
}

uint64_t sub_25E73504C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  __swift_assign_boxed_opaque_existential_0((uint64_t *)(a1 + *(int *)(a3 + 20)), (uint64_t *)(a2 + *(int *)(a3 + 20)));
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        int v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_25E7352F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  int v9 = (_OWORD *)(a2 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_25E735378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (_OWORD *)(a1 + v7);
  int v9 = (_OWORD *)(a2 + v7);
  __swift_destroy_boxed_opaque_existential_0(a1 + v7);
  long long v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  return a1;
}

uint64_t sub_25E735404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E735418);
}

uint64_t sub_25E735418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ExternalRequestID(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_25E7354DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E7354F0);
}

uint64_t sub_25E7354F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ExternalRequestID(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for ExternalContinuation(uint64_t a1)
{
  return sub_25E7355D0(a1, (uint64_t *)&unk_26A7046B0);
}

uint64_t sub_25E7355D0(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_25E735608()
{
  uint64_t result = sub_25E75BE40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_25E73569C()
{
  return sub_25E7358CC(&qword_26A7046C0, (void (*)(uint64_t))type metadata accessor for ExternalRequestID);
}

uint64_t sub_25E7356E4()
{
  return sub_25E75C200();
}

uint64_t sub_25E73576C()
{
  sub_25E75BE40();
  sub_25E7358CC(qword_26A7046D0, MEMORY[0x263F07508]);
  return sub_25E75BE70();
}

uint64_t sub_25E7357F0()
{
  return sub_25E75C200();
}

uint64_t sub_25E735878@<X0>(uint64_t a1@<X8>)
{
  return sub_25E735914(v1, a1);
}

uint64_t sub_25E735884()
{
  return sub_25E7358CC(&qword_26A7046C8, (void (*)(uint64_t))type metadata accessor for ExternalRequestID);
}

uint64_t sub_25E7358CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25E735914(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExternalRequestID(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void destroy for ScanwaveOutputModel.Mesh(uint64_t a1)
{
}

uint64_t initializeWithCopy for ScanwaveOutputModel.Mesh(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  uint64_t v5 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v5;
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  long long v9 = *(_OWORD *)(a2 + 144);
  long long v10 = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  long long v11 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = v11;
  long long v12 = *(_OWORD *)(a2 + 216);
  long long v13 = *(_OWORD *)(a2 + 232);
  long long v14 = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 248) = v14;
  *(_OWORD *)(a1 + 232) = v13;
  *(_OWORD *)(a1 + 216) = v12;
  id v15 = v5;
  return a1;
}

uint64_t assignWithCopy for ScanwaveOutputModel.Mesh(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  long long v7 = *(void **)(a1 + 72);
  long long v8 = *(void **)(a2 + 72);
  *(void *)(a1 + 72) = v8;
  id v9 = v8;

  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  long long v10 = *(_OWORD *)(a2 + 96);
  long long v11 = *(_OWORD *)(a2 + 112);
  long long v12 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v11;
  *(_OWORD *)(a1 + 128) = v12;
  *(_OWORD *)(a1 + 96) = v10;
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  long long v13 = *(_OWORD *)(a2 + 200);
  long long v14 = *(_OWORD *)(a2 + 216);
  long long v15 = *(_OWORD *)(a2 + 232);
  *(_WORD *)(a1 + 248) = *(_WORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = v15;
  *(_OWORD *)(a1 + 216) = v14;
  *(_OWORD *)(a1 + 200) = v13;
  *(unsigned char *)(a1 + 250) = *(unsigned char *)(a2 + 250);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  return a1;
}

void *__swift_memcpy272_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x110uLL);
}

uint64_t assignWithTake for ScanwaveOutputModel.Mesh(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  long long v6 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);

  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  long long v8 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  long long v9 = *(_OWORD *)(a2 + 200);
  long long v10 = *(_OWORD *)(a2 + 216);
  long long v11 = *(_OWORD *)(a2 + 232);
  *(_WORD *)(a1 + 248) = *(_WORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = v11;
  *(_OWORD *)(a1 + 216) = v10;
  *(_OWORD *)(a1 + 200) = v9;
  *(unsigned char *)(a1 + 250) = *(unsigned char *)(a2 + 250);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScanwaveOutputModel.Mesh(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 272)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 72);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveOutputModel.Mesh(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 264) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 272) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 272) = 0;
    }
    if (a2) {
      *(void *)(result + 72) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveOutputModel.Mesh()
{
  return &type metadata for ScanwaveOutputModel.Mesh;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for ScanwaveOutputModel.InverseBlur(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 66);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveOutputModel.InverseBlur(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 66) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveOutputModel.InverseBlur()
{
  return &type metadata for ScanwaveOutputModel.InverseBlur;
}

void *__swift_memcpy432_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1B0uLL);
}

uint64_t getEnumTagSinglePayload for ScanwaveOutputModel.ChromaticAberration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 432)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 66);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveOutputModel.ChromaticAberration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 424) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 432) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 432) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 66) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveOutputModel.ChromaticAberration()
{
  return &type metadata for ScanwaveOutputModel.ChromaticAberration;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveOutputModel.FillLight()
{
  return &type metadata for ScanwaveOutputModel.FillLight;
}

uint64_t getEnumTagSinglePayload for ScanwaveOutputModel.DepthImage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 66);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveOutputModel.DepthImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 66) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveOutputModel.DepthImage()
{
  return &type metadata for ScanwaveOutputModel.DepthImage;
}

uint64_t destroy for ScanwaveOutputModel.CircleMask()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScanwaveOutputModel.CircleMask(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v5;
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  long long v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_WORD *)(a1 + 336) = *(_WORD *)(a2 + 336);
  long long v8 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v8;
  long long v9 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v9;
  *(unsigned char *)(a1 + 338) = *(unsigned char *)(a2 + 338);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
  long long v10 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v10;
  long long v11 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v11;
  *(unsigned char *)(a1 + 418) = *(unsigned char *)(a2 + 418);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScanwaveOutputModel.CircleMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 338;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v5 = *(_OWORD *)(a2 + 16);
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 48) = v7;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  long long v8 = *(_OWORD *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 112);
  long long v10 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  long long v11 = *(_OWORD *)(a2 + 200);
  long long v12 = *(_OWORD *)(a2 + 216);
  long long v13 = *(_OWORD *)(a2 + 232);
  *(_WORD *)(a1 + 248) = *(_WORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = v13;
  *(_OWORD *)(a1 + 216) = v12;
  *(_OWORD *)(a1 + 200) = v11;
  *(unsigned char *)(a1 + 250) = *(unsigned char *)(a2 + 250);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  long long v14 = *(_OWORD *)(a2 + 288);
  long long v15 = *(_OWORD *)(a2 + 304);
  long long v16 = *(_OWORD *)(a2 + 320);
  *(_WORD *)(a1 + 336) = *(_WORD *)(a2 + 336);
  *(_OWORD *)(a1 + 304) = v15;
  *(_OWORD *)(a1 + 320) = v16;
  *(_OWORD *)(a1 + 288) = v14;
  *(unsigned char *)(a1 + 338) = *(unsigned char *)(a2 + 338);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  long long v17 = *(_OWORD *)(a2 + 368);
  long long v18 = *(_OWORD *)(a2 + 384);
  long long v19 = *(_OWORD *)(a2 + 400);
  *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
  *(_OWORD *)(a1 + 384) = v18;
  *(_OWORD *)(a1 + 400) = v19;
  *(_OWORD *)(a1 + 368) = v17;
  *(unsigned char *)(a1 + 418) = *(unsigned char *)(v4 + 80);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ScanwaveOutputModel.CircleMask(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 338;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v7 = *(_OWORD *)(a2 + 80);
  long long v8 = *(_OWORD *)(a2 + 96);
  long long v9 = *(_OWORD *)(a2 + 112);
  long long v10 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v10;
  *(_OWORD *)(a1 + 80) = v7;
  *(_OWORD *)(a1 + 96) = v8;
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_WORD *)(a1 + 248) = *(_WORD *)(a2 + 248);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(unsigned char *)(a1 + 250) = *(unsigned char *)(a2 + 250);
  long long v11 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v11;
  *(_WORD *)(a1 + 336) = *(_WORD *)(a2 + 336);
  long long v12 = *(_OWORD *)(a2 + 320);
  long long v13 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v12;
  *(_OWORD *)(a1 + 288) = v13;
  *(unsigned char *)(a1 + 338) = *(unsigned char *)(a2 + 338);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  swift_bridgeObjectRelease();
  long long v14 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v14;
  *(_WORD *)(a1 + 416) = *(_WORD *)(a2 + 416);
  long long v15 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v15;
  *(unsigned char *)(a1 + 418) = *(unsigned char *)(v4 + 80);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScanwaveOutputModel.CircleMask(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 432)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 344);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveOutputModel.CircleMask(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 424) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 432) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 344) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 432) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveOutputModel.CircleMask()
{
  return &type metadata for ScanwaveOutputModel.CircleMask;
}

uint64_t destroy for ScanwaveOutputModel(uint64_t a1)
{
  if (*(void *)(a1 + 344))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  unint64_t v2 = *(void **)(a1 + 1224);
  if (v2 != (void *)1) {

  }
  return swift_bridgeObjectRelease();
}

_OWORD *initializeWithCopy for ScanwaveOutputModel(_OWORD *__dst, char *__src)
{
  uint64_t v4 = *((void *)__src + 43);
  if (v4)
  {
    long long v5 = *((_OWORD *)__src + 3);
    __dst[2] = *((_OWORD *)__src + 2);
    __dst[3] = v5;
    long long v6 = *((_OWORD *)__src + 1);
    *__dst = *(_OWORD *)__src;
    __dst[1] = v6;
    long long v7 = *((_OWORD *)__src + 9);
    __dst[8] = *((_OWORD *)__src + 8);
    __dst[9] = v7;
    __dst[10] = *((_OWORD *)__src + 10);
    *((void *)__dst + 22) = *((void *)__src + 22);
    long long v8 = *((_OWORD *)__src + 5);
    __dst[4] = *((_OWORD *)__src + 4);
    __dst[5] = v8;
    long long v9 = *((_OWORD *)__src + 7);
    __dst[6] = *((_OWORD *)__src + 6);
    __dst[7] = v9;
    *(_OWORD *)((char *)__dst + 216) = *(_OWORD *)(__src + 216);
    *(_OWORD *)((char *)__dst + 232) = *(_OWORD *)(__src + 232);
    *(_OWORD *)((char *)__dst + 248) = *(_OWORD *)(__src + 248);
    *((void *)__dst + 33) = *((void *)__src + 33);
    *(_OWORD *)((char *)__dst + 184) = *(_OWORD *)(__src + 184);
    *(_OWORD *)((char *)__dst + 200) = *(_OWORD *)(__src + 200);
    *((_WORD *)__dst + 168) = *((_WORD *)__src + 168);
    long long v10 = *((_OWORD *)__src + 20);
    __dst[19] = *((_OWORD *)__src + 19);
    __dst[20] = v10;
    long long v11 = *((_OWORD *)__src + 18);
    __dst[17] = *((_OWORD *)__src + 17);
    __dst[18] = v11;
    *((unsigned char *)__dst + 338) = __src[338];
    *((void *)__dst + 43) = v4;
    *((_WORD *)__dst + 208) = *((_WORD *)__src + 208);
    long long v12 = *((_OWORD *)__src + 25);
    __dst[24] = *((_OWORD *)__src + 24);
    __dst[25] = v12;
    long long v13 = *((_OWORD *)__src + 23);
    __dst[22] = *((_OWORD *)__src + 22);
    __dst[23] = v13;
    *((unsigned char *)__dst + 418) = __src[418];
    *((void *)__dst + 53) = *((void *)__src + 53);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    memcpy(__dst, __src, 0x1B0uLL);
  }
  memcpy(__dst + 27, __src + 432, 0x1B0uLL);
  long long v14 = *((_OWORD *)__src + 59);
  __dst[58] = *((_OWORD *)__src + 58);
  __dst[59] = v14;
  long long v15 = *((_OWORD *)__src + 55);
  __dst[54] = *((_OWORD *)__src + 54);
  __dst[55] = v15;
  long long v16 = *((_OWORD *)__src + 57);
  __dst[56] = *((_OWORD *)__src + 56);
  __dst[57] = v16;
  long long v17 = *((_OWORD *)__src + 61);
  __dst[60] = *((_OWORD *)__src + 60);
  __dst[61] = v17;
  long long v18 = *((_OWORD *)__src + 62);
  long long v19 = *((_OWORD *)__src + 63);
  long long v20 = *((_OWORD *)__src + 64);
  __dst[66] = *((_OWORD *)__src + 66);
  __dst[65] = *((_OWORD *)__src + 65);
  __dst[63] = v19;
  __dst[64] = v20;
  __dst[62] = v18;
  __dst[67] = *((_OWORD *)__src + 67);
  long long v21 = *((_OWORD *)__src + 68);
  long long v22 = *((_OWORD *)__src + 69);
  long long v23 = *((_OWORD *)__src + 70);
  __dst[71] = *((_OWORD *)__src + 71);
  __dst[70] = v23;
  __dst[69] = v22;
  __dst[68] = v21;
  uint64_t v24 = __dst + 72;
  id v25 = __src + 1152;
  uint64_t v26 = (void *)*((void *)__src + 153);
  if (v26 == (void *)1)
  {
    memcpy(v24, v25, 0x110uLL);
  }
  else
  {
    long long v27 = *((_OWORD *)__src + 75);
    __dst[74] = *((_OWORD *)__src + 74);
    __dst[75] = v27;
    *((_WORD *)__dst + 608) = *((_WORD *)__src + 608);
    long long v28 = *((_OWORD *)__src + 73);
    *uint64_t v24 = *v25;
    __dst[73] = v28;
    *((unsigned char *)__dst + 1218) = __src[1218];
    *((void *)__dst + 153) = v26;
    __dst[77] = *((_OWORD *)__src + 77);
    __dst[78] = *((_OWORD *)__src + 78);
    __dst[79] = *((_OWORD *)__src + 79);
    long long v29 = *((_OWORD *)__src + 80);
    long long v30 = *((_OWORD *)__src + 81);
    long long v31 = *((_OWORD *)__src + 82);
    *((void *)__dst + 166) = *((void *)__src + 166);
    __dst[82] = v31;
    __dst[81] = v30;
    __dst[80] = v29;
    *(_OWORD *)((char *)__dst + 1336) = *(_OWORD *)(__src + 1336);
    *((void *)__dst + 177) = *((void *)__src + 177);
    *(_OWORD *)((char *)__dst + 1400) = *(_OWORD *)(__src + 1400);
    *(_OWORD *)((char *)__dst + 1384) = *(_OWORD *)(__src + 1384);
    *(_OWORD *)((char *)__dst + 1368) = *(_OWORD *)(__src + 1368);
    *(_OWORD *)((char *)__dst + 1352) = *(_OWORD *)(__src + 1352);
    id v32 = v26;
  }
  memcpy(__dst + 89, __src + 1424, 0x120uLL);
  swift_bridgeObjectRetain();
  return __dst;
}

char *assignWithCopy for ScanwaveOutputModel(char *__dst, char *__src)
{
  uint64_t v4 = __src + 338;
  uint64_t v5 = *((void *)__src + 43);
  if (*((void *)__dst + 43))
  {
    if (v5)
    {
      *(_OWORD *)__dst = *(_OWORD *)__src;
      long long v6 = *((_OWORD *)__src + 1);
      long long v7 = *((_OWORD *)__src + 2);
      long long v8 = *((_OWORD *)__src + 3);
      *((_WORD *)__dst + 32) = *((_WORD *)__src + 32);
      *((_OWORD *)__dst + 2) = v7;
      *((_OWORD *)__dst + 3) = v8;
      *((_OWORD *)__dst + 1) = v6;
      __dst[66] = __src[66];
      *((void *)__dst + 9) = *((void *)__src + 9);
      *((_OWORD *)__dst + 5) = *((_OWORD *)__src + 5);
      long long v9 = *((_OWORD *)__src + 6);
      long long v10 = *((_OWORD *)__src + 7);
      long long v11 = *((_OWORD *)__src + 8);
      *((_WORD *)__dst + 72) = *((_WORD *)__src + 72);
      *((_OWORD *)__dst + 7) = v10;
      *((_OWORD *)__dst + 8) = v11;
      *((_OWORD *)__dst + 6) = v9;
      __dst[146] = __src[146];
      *((void *)__dst + 19) = *((void *)__src + 19);
      *((void *)__dst + 20) = *((void *)__src + 20);
      *((void *)__dst + 21) = *((void *)__src + 21);
      *((void *)__dst + 22) = *((void *)__src + 22);
      *(_OWORD *)(__dst + 184) = *(_OWORD *)(__src + 184);
      long long v12 = *(_OWORD *)(__src + 200);
      long long v13 = *(_OWORD *)(__src + 216);
      long long v14 = *(_OWORD *)(__src + 232);
      *((_WORD *)__dst + 124) = *((_WORD *)__src + 124);
      *(_OWORD *)(__dst + 232) = v14;
      *(_OWORD *)(__dst + 216) = v13;
      *(_OWORD *)(__dst + 200) = v12;
      __dst[250] = __src[250];
      *((void *)__dst + 32) = *((void *)__src + 32);
      *((void *)__dst + 33) = *((void *)__src + 33);
      *((_OWORD *)__dst + 17) = *((_OWORD *)__src + 17);
      long long v15 = *((_OWORD *)__src + 18);
      long long v16 = *((_OWORD *)__src + 19);
      long long v17 = *((_OWORD *)__src + 20);
      *((_WORD *)__dst + 168) = *((_WORD *)__src + 168);
      *((_OWORD *)__dst + 19) = v16;
      *((_OWORD *)__dst + 20) = v17;
      *((_OWORD *)__dst + 18) = v15;
      __dst[338] = *v4;
      *((void *)__dst + 43) = *((void *)__src + 43);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_OWORD *)__dst + 22) = *((_OWORD *)__src + 22);
      long long v18 = *((_OWORD *)__src + 23);
      long long v19 = *((_OWORD *)__src + 24);
      long long v20 = *((_OWORD *)__src + 25);
      *((_WORD *)__dst + 208) = *((_WORD *)__src + 208);
      *((_OWORD *)__dst + 24) = v19;
      *((_OWORD *)__dst + 25) = v20;
      *((_OWORD *)__dst + 23) = v18;
      __dst[418] = v4[80];
      *((void *)__dst + 53) = *((void *)__src + 53);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_25E736CF0((uint64_t)__dst);
  }
  else if (v5)
  {
    *(_OWORD *)__dst = *(_OWORD *)__src;
    long long v21 = *((_OWORD *)__src + 1);
    long long v22 = *((_OWORD *)__src + 2);
    long long v23 = *((_OWORD *)__src + 4);
    *((_OWORD *)__dst + 3) = *((_OWORD *)__src + 3);
    *((_OWORD *)__dst + 4) = v23;
    *((_OWORD *)__dst + 1) = v21;
    *((_OWORD *)__dst + 2) = v22;
    long long v25 = *((_OWORD *)__src + 9);
    long long v24 = *((_OWORD *)__src + 10);
    long long v26 = *((_OWORD *)__src + 8);
    *((void *)__dst + 22) = *((void *)__src + 22);
    *((_OWORD *)__dst + 9) = v25;
    *((_OWORD *)__dst + 10) = v24;
    *((_OWORD *)__dst + 8) = v26;
    long long v27 = *((_OWORD *)__src + 5);
    long long v28 = *((_OWORD *)__src + 7);
    *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
    *((_OWORD *)__dst + 7) = v28;
    *((_OWORD *)__dst + 5) = v27;
    long long v29 = *(_OWORD *)(__src + 232);
    long long v30 = *(_OWORD *)(__src + 248);
    uint64_t v31 = *((void *)__src + 33);
    *(_OWORD *)(__dst + 216) = *(_OWORD *)(__src + 216);
    *((void *)__dst + 33) = v31;
    *(_OWORD *)(__dst + 248) = v30;
    *(_OWORD *)(__dst + 232) = v29;
    long long v32 = *(_OWORD *)(__src + 184);
    *(_OWORD *)(__dst + 200) = *(_OWORD *)(__src + 200);
    *(_OWORD *)(__dst + 184) = v32;
    *((_OWORD *)__dst + 17) = *((_OWORD *)__src + 17);
    long long v33 = *((_OWORD *)__src + 18);
    long long v34 = *((_OWORD *)__src + 19);
    long long v35 = *((_OWORD *)__src + 20);
    *((_WORD *)__dst + 168) = *((_WORD *)__src + 168);
    *((_OWORD *)__dst + 19) = v34;
    *((_OWORD *)__dst + 20) = v35;
    *((_OWORD *)__dst + 18) = v33;
    __dst[338] = __src[338];
    *((void *)__dst + 43) = *((void *)__src + 43);
    *((_OWORD *)__dst + 22) = *((_OWORD *)__src + 22);
    long long v36 = *((_OWORD *)__src + 23);
    long long v37 = *((_OWORD *)__src + 24);
    long long v38 = *((_OWORD *)__src + 25);
    *((_WORD *)__dst + 208) = *((_WORD *)__src + 208);
    *((_OWORD *)__dst + 24) = v37;
    *((_OWORD *)__dst + 25) = v38;
    *((_OWORD *)__dst + 23) = v36;
    __dst[418] = __src[418];
    *((void *)__dst + 53) = *((void *)__src + 53);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  memcpy(__dst, __src, 0x1B0uLL);
LABEL_8:
  memcpy(__dst + 432, __src + 432, 0x1B0uLL);
  long long v39 = *((_OWORD *)__src + 54);
  long long v40 = *((_OWORD *)__src + 56);
  *((_OWORD *)__dst + 55) = *((_OWORD *)__src + 55);
  *((_OWORD *)__dst + 56) = v40;
  *((_OWORD *)__dst + 54) = v39;
  long long v41 = *((_OWORD *)__src + 57);
  long long v42 = *((_OWORD *)__src + 58);
  long long v43 = *((_OWORD *)__src + 60);
  *((_OWORD *)__dst + 59) = *((_OWORD *)__src + 59);
  *((_OWORD *)__dst + 60) = v43;
  *((_OWORD *)__dst + 57) = v41;
  *((_OWORD *)__dst + 58) = v42;
  long long v44 = *((_OWORD *)__src + 65);
  long long v46 = *((_OWORD *)__src + 63);
  long long v45 = *((_OWORD *)__src + 64);
  *((_OWORD *)__dst + 66) = *((_OWORD *)__src + 66);
  *((_OWORD *)__dst + 65) = v44;
  *((_OWORD *)__dst + 63) = v46;
  *((_OWORD *)__dst + 64) = v45;
  long long v47 = *((_OWORD *)__src + 62);
  *((_OWORD *)__dst + 61) = *((_OWORD *)__src + 61);
  *((_OWORD *)__dst + 62) = v47;
  *((_OWORD *)__dst + 67) = *((_OWORD *)__src + 67);
  long long v48 = *((_OWORD *)__src + 69);
  long long v49 = *((_OWORD *)__src + 70);
  long long v50 = *((_OWORD *)__src + 71);
  *((_OWORD *)__dst + 68) = *((_OWORD *)__src + 68);
  *((_OWORD *)__dst + 71) = v50;
  *((_OWORD *)__dst + 70) = v49;
  *((_OWORD *)__dst + 69) = v48;
  id v51 = __dst + 1152;
  id v52 = __src + 1152;
  uint64_t v53 = (void *)*((void *)__dst + 153);
  uint64_t v54 = *((void *)__src + 153);
  if (v53 != (void *)1)
  {
    if (v54 != 1)
    {
      *id v51 = *v52;
      long long v69 = *((_OWORD *)__src + 73);
      long long v70 = *((_OWORD *)__src + 74);
      long long v71 = *((_OWORD *)__src + 75);
      *((_WORD *)__dst + 608) = *((_WORD *)__src + 608);
      *((_OWORD *)__dst + 74) = v70;
      *((_OWORD *)__dst + 75) = v71;
      *((_OWORD *)__dst + 73) = v69;
      __dst[1218] = v4[880];
      id v72 = (void *)*((void *)__src + 153);
      *((void *)__dst + 153) = v72;
      id v73 = v72;

      *((_OWORD *)__dst + 77) = *((_OWORD *)__src + 77);
      long long v74 = *((_OWORD *)__src + 78);
      long long v75 = *((_OWORD *)__src + 79);
      long long v76 = *((_OWORD *)__src + 80);
      *((_WORD *)__dst + 648) = *((_WORD *)__src + 648);
      *((_OWORD *)__dst + 80) = v76;
      *((_OWORD *)__dst + 79) = v75;
      *((_OWORD *)__dst + 78) = v74;
      __dst[1298] = v4[960];
      *((void *)__dst + 163) = *((void *)__src + 163);
      *((void *)__dst + 164) = *((void *)__src + 164);
      *((void *)__dst + 165) = *((void *)__src + 165);
      *((void *)__dst + 166) = *((void *)__src + 166);
      *(_OWORD *)(__dst + 1336) = *(_OWORD *)(__src + 1336);
      long long v77 = *(_OWORD *)(__src + 1352);
      long long v78 = *(_OWORD *)(__src + 1368);
      long long v79 = *(_OWORD *)(__src + 1384);
      *((_WORD *)__dst + 700) = *((_WORD *)__src + 700);
      *(_OWORD *)(__dst + 1384) = v79;
      *(_OWORD *)(__dst + 1368) = v78;
      *(_OWORD *)(__dst + 1352) = v77;
      __dst[1402] = v4[1064];
      *((void *)__dst + 176) = *((void *)__src + 176);
      *((void *)__dst + 177) = *((void *)__src + 177);
      goto LABEL_15;
    }
    sub_25E736D24((uint64_t)(__dst + 1152));
    goto LABEL_13;
  }
  if (v54 == 1)
  {
LABEL_13:
    memcpy(__dst + 1152, __src + 1152, 0x110uLL);
    goto LABEL_15;
  }
  *id v51 = *v52;
  long long v55 = *((_OWORD *)__src + 73);
  long long v56 = *((_OWORD *)__src + 74);
  long long v57 = *((_OWORD *)__src + 75);
  *((_WORD *)__dst + 608) = *((_WORD *)__src + 608);
  *((_OWORD *)__dst + 74) = v56;
  *((_OWORD *)__dst + 75) = v57;
  *((_OWORD *)__dst + 73) = v55;
  __dst[1218] = __src[1218];
  id v58 = (void *)*((void *)__src + 153);
  *((void *)__dst + 153) = v58;
  long long v59 = *((_OWORD *)__src + 77);
  long long v60 = *((_OWORD *)__src + 78);
  *((_OWORD *)__dst + 79) = *((_OWORD *)__src + 79);
  *((_OWORD *)__dst + 78) = v60;
  *((_OWORD *)__dst + 77) = v59;
  long long v61 = *((_OWORD *)__src + 80);
  long long v62 = *((_OWORD *)__src + 81);
  long long v63 = *((_OWORD *)__src + 82);
  *((void *)__dst + 166) = *((void *)__src + 166);
  *((_OWORD *)__dst + 82) = v63;
  *((_OWORD *)__dst + 81) = v62;
  *((_OWORD *)__dst + 80) = v61;
  long long v64 = *(_OWORD *)(__src + 1384);
  long long v65 = *(_OWORD *)(__src + 1400);
  uint64_t v66 = *((void *)__src + 177);
  *(_OWORD *)(__dst + 1368) = *(_OWORD *)(__src + 1368);
  *((void *)__dst + 177) = v66;
  *(_OWORD *)(__dst + 1400) = v65;
  *(_OWORD *)(__dst + 1384) = v64;
  long long v67 = *(_OWORD *)(__src + 1336);
  *(_OWORD *)(__dst + 1352) = *(_OWORD *)(__src + 1352);
  *(_OWORD *)(__dst + 1336) = v67;
  id v68 = v58;
LABEL_15:
  *((_OWORD *)__dst + 89) = *((_OWORD *)__src + 89);
  long long v80 = *((_OWORD *)__src + 90);
  long long v81 = *((_OWORD *)__src + 91);
  long long v82 = *((_OWORD *)__src + 92);
  *((_WORD *)__dst + 744) = *((_WORD *)__src + 744);
  *((_OWORD *)__dst + 92) = v82;
  *((_OWORD *)__dst + 91) = v81;
  *((_OWORD *)__dst + 90) = v80;
  __dst[1490] = v4[1152];
  *((void *)__dst + 187) = *((void *)__src + 187);
  *((void *)__dst + 188) = *((void *)__src + 188);
  *((void *)__dst + 189) = *((void *)__src + 189);
  *((void *)__dst + 190) = *((void *)__src + 190);
  *((void *)__dst + 191) = *((void *)__src + 191);
  *((void *)__dst + 192) = *((void *)__src + 192);
  *((void *)__dst + 193) = *((void *)__src + 193);
  *((void *)__dst + 194) = *((void *)__src + 194);
  *((void *)__dst + 195) = *((void *)__src + 195);
  *((void *)__dst + 196) = *((void *)__src + 196);
  *((void *)__dst + 197) = *((void *)__src + 197);
  *((void *)__dst + 198) = *((void *)__src + 198);
  *((void *)__dst + 199) = *((void *)__src + 199);
  *((void *)__dst + 200) = *((void *)__src + 200);
  *((void *)__dst + 201) = *((void *)__src + 201);
  *((void *)__dst + 202) = *((void *)__src + 202);
  *(_OWORD *)(__dst + 1624) = *(_OWORD *)(__src + 1624);
  long long v83 = *(_OWORD *)(__src + 1640);
  long long v84 = *(_OWORD *)(__src + 1656);
  long long v85 = *(_OWORD *)(__src + 1672);
  *((_WORD *)__dst + 844) = *((_WORD *)__src + 844);
  *(_OWORD *)(__dst + 1672) = v85;
  *(_OWORD *)(__dst + 1656) = v84;
  *(_OWORD *)(__dst + 1640) = v83;
  __dst[1690] = v4[1352];
  *((void *)__dst + 212) = *((void *)__src + 212);
  *((void *)__dst + 213) = *((void *)__src + 213);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return __dst;
}

uint64_t sub_25E736CF0(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E736D24(uint64_t a1)
{
  return a1;
}

void *__swift_memcpy1712_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x6B0uLL);
}

_OWORD *assignWithTake for ScanwaveOutputModel(_OWORD *__dst, char *__src)
{
  uint64_t v4 = __src + 338;
  if (*((void *)__dst + 43))
  {
    uint64_t v5 = *((void *)__src + 43);
    if (v5)
    {
      long long v6 = *((_OWORD *)__src + 3);
      __dst[2] = *((_OWORD *)__src + 2);
      __dst[3] = v6;
      *((_WORD *)__dst + 32) = *((_WORD *)__src + 32);
      long long v7 = *((_OWORD *)__src + 1);
      *__dst = *(_OWORD *)__src;
      __dst[1] = v7;
      *((unsigned char *)__dst + 66) = __src[66];
      *((void *)__dst + 9) = *((void *)__src + 9);
      long long v8 = *((_OWORD *)__src + 5);
      long long v9 = *((_OWORD *)__src + 6);
      long long v10 = *((_OWORD *)__src + 7);
      long long v11 = *((_OWORD *)__src + 8);
      *((_WORD *)__dst + 72) = *((_WORD *)__src + 72);
      __dst[7] = v10;
      __dst[8] = v11;
      __dst[5] = v8;
      __dst[6] = v9;
      *((unsigned char *)__dst + 146) = __src[146];
      *(_OWORD *)((char *)__dst + 152) = *(_OWORD *)(__src + 152);
      *(_OWORD *)((char *)__dst + 168) = *(_OWORD *)(__src + 168);
      *(_OWORD *)((char *)__dst + 200) = *(_OWORD *)(__src + 200);
      *(_OWORD *)((char *)__dst + 216) = *(_OWORD *)(__src + 216);
      *(_OWORD *)((char *)__dst + 232) = *(_OWORD *)(__src + 232);
      *((_WORD *)__dst + 124) = *((_WORD *)__src + 124);
      *(_OWORD *)((char *)__dst + 184) = *(_OWORD *)(__src + 184);
      *((unsigned char *)__dst + 250) = __src[250];
      long long v12 = *((_OWORD *)__src + 17);
      __dst[16] = *((_OWORD *)__src + 16);
      __dst[17] = v12;
      *((_WORD *)__dst + 168) = *((_WORD *)__src + 168);
      long long v13 = *((_OWORD *)__src + 20);
      long long v14 = *((_OWORD *)__src + 18);
      __dst[19] = *((_OWORD *)__src + 19);
      __dst[20] = v13;
      __dst[18] = v14;
      *((unsigned char *)__dst + 338) = *v4;
      *((void *)__dst + 43) = v5;
      swift_bridgeObjectRelease();
      long long v15 = *((_OWORD *)__src + 25);
      __dst[24] = *((_OWORD *)__src + 24);
      __dst[25] = v15;
      *((_WORD *)__dst + 208) = *((_WORD *)__src + 208);
      long long v16 = *((_OWORD *)__src + 23);
      __dst[22] = *((_OWORD *)__src + 22);
      __dst[23] = v16;
      *((unsigned char *)__dst + 418) = v4[80];
      *((void *)__dst + 53) = *((void *)__src + 53);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_25E736CF0((uint64_t)__dst);
  }
  memcpy(__dst, __src, 0x1B0uLL);
LABEL_6:
  memcpy(__dst + 27, __src + 432, 0x1B0uLL);
  long long v17 = *((_OWORD *)__src + 59);
  __dst[58] = *((_OWORD *)__src + 58);
  __dst[59] = v17;
  long long v18 = *((_OWORD *)__src + 55);
  __dst[54] = *((_OWORD *)__src + 54);
  __dst[55] = v18;
  long long v19 = *((_OWORD *)__src + 57);
  __dst[56] = *((_OWORD *)__src + 56);
  __dst[57] = v19;
  long long v20 = *((_OWORD *)__src + 61);
  __dst[60] = *((_OWORD *)__src + 60);
  __dst[61] = v20;
  long long v21 = *((_OWORD *)__src + 62);
  long long v22 = *((_OWORD *)__src + 63);
  long long v23 = *((_OWORD *)__src + 64);
  __dst[66] = *((_OWORD *)__src + 66);
  __dst[65] = *((_OWORD *)__src + 65);
  __dst[63] = v22;
  __dst[64] = v23;
  __dst[62] = v21;
  __dst[67] = *((_OWORD *)__src + 67);
  long long v24 = *((_OWORD *)__src + 68);
  long long v25 = *((_OWORD *)__src + 69);
  long long v26 = *((_OWORD *)__src + 70);
  __dst[71] = *((_OWORD *)__src + 71);
  __dst[70] = v26;
  __dst[69] = v25;
  __dst[68] = v24;
  long long v27 = (void *)*((void *)__dst + 153);
  if (v27 != (void *)1)
  {
    uint64_t v28 = *((void *)__src + 153);
    if (v28 != 1)
    {
      long long v29 = *((_OWORD *)__src + 75);
      __dst[74] = *((_OWORD *)__src + 74);
      __dst[75] = v29;
      *((_WORD *)__dst + 608) = *((_WORD *)__src + 608);
      long long v30 = *((_OWORD *)__src + 73);
      __dst[72] = *((_OWORD *)__src + 72);
      __dst[73] = v30;
      *((unsigned char *)__dst + 1218) = v4[880];
      *((void *)__dst + 153) = v28;

      __dst[78] = *((_OWORD *)__src + 78);
      __dst[79] = *((_OWORD *)__src + 79);
      __dst[80] = *((_OWORD *)__src + 80);
      *((_WORD *)__dst + 648) = *((_WORD *)__src + 648);
      __dst[77] = *((_OWORD *)__src + 77);
      *((unsigned char *)__dst + 1298) = v4[960];
      *((void *)__dst + 163) = *((void *)__src + 163);
      __dst[82] = *((_OWORD *)__src + 82);
      *((void *)__dst + 166) = *((void *)__src + 166);
      *(_OWORD *)((char *)__dst + 1352) = *(_OWORD *)(__src + 1352);
      *(_OWORD *)((char *)__dst + 1368) = *(_OWORD *)(__src + 1368);
      *(_OWORD *)((char *)__dst + 1384) = *(_OWORD *)(__src + 1384);
      *((_WORD *)__dst + 700) = *((_WORD *)__src + 700);
      *(_OWORD *)((char *)__dst + 1336) = *(_OWORD *)(__src + 1336);
      *((unsigned char *)__dst + 1402) = v4[1064];
      __dst[88] = *((_OWORD *)__src + 88);
      goto LABEL_11;
    }
    sub_25E736D24((uint64_t)(__dst + 72));
  }
  memcpy(__dst + 72, __src + 1152, 0x110uLL);
LABEL_11:
  __dst[90] = *((_OWORD *)__src + 90);
  __dst[91] = *((_OWORD *)__src + 91);
  __dst[92] = *((_OWORD *)__src + 92);
  *((_WORD *)__dst + 744) = *((_WORD *)__src + 744);
  __dst[89] = *((_OWORD *)__src + 89);
  *((unsigned char *)__dst + 1490) = v4[1152];
  *((void *)__dst + 187) = *((void *)__src + 187);
  __dst[94] = *((_OWORD *)__src + 94);
  __dst[95] = *((_OWORD *)__src + 95);
  __dst[96] = *((_OWORD *)__src + 96);
  __dst[97] = *((_OWORD *)__src + 97);
  __dst[98] = *((_OWORD *)__src + 98);
  __dst[99] = *((_OWORD *)__src + 99);
  __dst[100] = *((_OWORD *)__src + 100);
  *((void *)__dst + 202) = *((void *)__src + 202);
  *(_OWORD *)((char *)__dst + 1640) = *(_OWORD *)(__src + 1640);
  *(_OWORD *)((char *)__dst + 1656) = *(_OWORD *)(__src + 1656);
  *(_OWORD *)((char *)__dst + 1672) = *(_OWORD *)(__src + 1672);
  *((_WORD *)__dst + 844) = *((_WORD *)__src + 844);
  *(_OWORD *)((char *)__dst + 1624) = *(_OWORD *)(__src + 1624);
  *((unsigned char *)__dst + 1690) = v4[1352];
  *((void *)__dst + 212) = *((void *)__src + 212);
  *((void *)__dst + 213) = *((void *)__src + 213);
  swift_bridgeObjectRelease();
  return __dst;
}

uint64_t getEnumTagSinglePayload for ScanwaveOutputModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 1712)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 1704);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveOutputModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 1704) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1712) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 1704) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1712) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveOutputModel()
{
  return &type metadata for ScanwaveOutputModel;
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

uint64_t getEnumTagSinglePayload for ScanwaveOutputModel.SourceImage(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 280)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 66);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveOutputModel.SourceImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 280) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 280) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 66) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveOutputModel.SourceImage()
{
  return &type metadata for ScanwaveOutputModel.SourceImage;
}

uint64_t _s20SystemUIAnimationKit19ScanwaveOutputModelV18DepthDistanceFieldVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 96)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 66);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s20SystemUIAnimationKit19ScanwaveOutputModelV18DepthDistanceFieldVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 96) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 66) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveOutputModel.DepthDistanceField()
{
  return &type metadata for ScanwaveOutputModel.DepthDistanceField;
}

uint64_t destroy for ScanwaveOutputModel.AnimatedGradient()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScanwaveOutputModel.AnimatedGradient(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v3;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  long long v5 = *(_OWORD *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScanwaveOutputModel.AnimatedGradient(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  long long v7 = *(_OWORD *)(a2 + 96);
  long long v8 = *(_OWORD *)(a2 + 112);
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v8;
  *(_OWORD *)(a1 + 128) = v9;
  *(_OWORD *)(a1 + 96) = v7;
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy160_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(__n128 *)(a1 + 96) = result;
  *(_OWORD *)(a1 + 112) = v7;
  return result;
}

uint64_t assignWithTake for ScanwaveOutputModel.AnimatedGradient(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v7;
  *(unsigned char *)(a1 + 146) = *(unsigned char *)(a2 + 146);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ScanwaveOutputModel.AnimatedGradient(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 160)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveOutputModel.AnimatedGradient(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 160) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 72) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 160) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveOutputModel.AnimatedGradient()
{
  return &type metadata for ScanwaveOutputModel.AnimatedGradient;
}

uint64_t sub_25E7377C8(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 65))
  {
    if ((*(unsigned char *)(a2 + 65) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(unsigned char *)(a2 + 65)) {
      return 0;
    }
    if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*(float64x2_t *)a1, *(float64x2_t *)a2), (int32x4_t)vceqq_f64(*(float64x2_t *)(a1 + 16), *(float64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) == 0)return 0; {
    if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    }
      return 0;
    if (*(double *)(a1 + 40) != *(double *)(a2 + 40)) {
      return 0;
    }
    char v5 = *(unsigned char *)(a1 + 64);
    uint64_t v6 = *(void *)(a2 + 56);
    char v7 = *(unsigned char *)(a2 + 64);
    uint64_t v8 = *(void *)(a1 + 56);
    if ((sub_25E75BFE0() & 1) == 0) {
      return 0;
    }
    if (v5)
    {
      if ((v7 & 1) == 0) {
        return 0;
      }
    }
    else if ((v7 & 1) != 0 || HIDWORD(v8) != HIDWORD(v6))
    {
      return 0;
    }
  }
  if (*(unsigned __int8 *)(a1 + 66) == *(unsigned __int8 *)(a2 + 66))
  {
    type metadata accessor for FluidBehaviorAnimatedValue();
    return sub_25E75BE90() & 1;
  }
  return 0;
}

uint64_t sub_25E737904(uint64_t a1, uint64_t a2)
{
  return sub_25E7377C8(a1, a2);
}

uint64_t type metadata accessor for FluidBehaviorAnimatedValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E737928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_25E737930()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_25E7379D4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  long long v3 = (void *)a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 67) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    void *v3 = *a2;
    long long v3 = (void *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    long long v9 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v9;
    *(_WORD *)(a1 + 64) = *((_WORD *)a2 + 32);
    long long v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    *(unsigned char *)(a1 + 66) = *((unsigned char *)a2 + 66);
    (*(void (**)(uint64_t, unint64_t))(v4 + 16))((a1 + v5 + 67) & ~v5, ((unint64_t)a2 + v5 + 67) & ~v5);
  }
  return v3;
}

uint64_t sub_25E737AD8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 67) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

uint64_t sub_25E737B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 16))((*(unsigned __int8 *)(v6 + 80) + 67 + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 67 + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_25E737B9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v4 = *(_OWORD *)(a2 + 16);
  long long v5 = *(_OWORD *)(a2 + 32);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 48) = v6;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  uint64_t v7 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(unsigned __int8 *)(v7 + 80) + 67 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 67 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_25E737C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 32))((*(unsigned __int8 *)(v6 + 80) + 67 + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 67 + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_25E737CB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 66) = *(unsigned char *)(a2 + 66);
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 40))((*(unsigned __int8 *)(v6 + 80) + 67 + a1) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), (*(unsigned __int8 *)(v6 + 80) + 67 + a2) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_25E737D3C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 67) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if (v5 > 0xFE) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 67) & ~v6);
      }
      unsigned int v15 = *((unsigned __int8 *)a1 + 66);
      BOOL v16 = v15 >= 2;
      int v17 = (v15 + 2147483646) & 0x7FFFFFFF;
      if (v16) {
        return (v17 + 1);
      }
      else {
        return 0;
      }
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_25E737EE4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 67) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x25E73813CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 > 0xFE)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 67] & ~v9;
          long long v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else
        {
          a1[66] = a2 + 1;
        }
      }
      return;
  }
}

void sub_25E738164(uint64_t a1, void *a2)
{
  long long v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_25E7381CC(uint64_t a1, uint64_t a2)
{
  long long v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704780);
  MEMORY[0x270FA5388](v6 - 8);
  unsigned int v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ExternalContinuation(0);
  MEMORY[0x270FA5388](v9);
  BOOL v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_25E74A394(a1);
    sub_25E744B88(a2, (uint64_t)v8);
    sub_25E7481BC(a2, type metadata accessor for ExternalRequestID);
    return sub_25E74A394((uint64_t)v8);
  }
  else
  {
    sub_25E748154(a1, (uint64_t)v11, type metadata accessor for ExternalContinuation);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_25E745DB0((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v16;
    swift_bridgeObjectRelease();
    return sub_25E7481BC(a2, type metadata accessor for ExternalRequestID);
  }
}

unint64_t sub_25E7383A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7049A8);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388]();
  unsigned int v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7049B0);
  uint64_t v6 = sub_25E75C160();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_25E74B5BC(v12, (uint64_t)v5);
    unint64_t result = sub_25E753A50((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = type metadata accessor for ExternalRequestID(0);
    sub_25E748154((uint64_t)v5, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, type metadata accessor for ExternalRequestID);
    uint64_t v19 = v7[7];
    uint64_t v20 = type metadata accessor for ExternalContinuation(0);
    unint64_t result = sub_25E748154(v9, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, type metadata accessor for ExternalContinuation);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    double v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_25E7385C4(uint64_t a1)
{
  unint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

char *sub_25E738608(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = &v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration];
  *uint64_t v6 = 0;
  v6[1] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageMode] = 2;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationBackdropView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationMaskView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightMaskView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurBackdropView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurMaskView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_mainMaskView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_circleMaskView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_depthDistanceFieldImageView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_meshBackdropView] = 0;
  *(void *)&v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_sourceImageView] = 0;
  uint64_t v7 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_animatableProperties;
  uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  *(void *)&v3[v7] = sub_25E74954C(MEMORY[0x263F8EE78]);
  v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didLayoutSubviewsOnce] = 0;
  v3[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didPrepareInitialUpdate] = 0;
  uint64_t v9 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_externalContinuations;
  uint64_t v10 = v3;
  *(void *)&v3[v9] = sub_25E7383A4((uint64_t)v8);
  v10[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate] = 0;
  v10[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_hasEnqueuedPreCAUpdate] = 0;
  *(void *)&v10[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates] = v8;
  uint64_t v11 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_prototypeSettings;
  uint64_t v12 = (char *)objc_msgSend(self, sel_rootSettings);
  id v13 = *(id *)&v12[OBJC_IVAR___SUIAnimationKitPrototypeSettings_scanwaveSettings];

  *(void *)&v10[v11] = v13;
  uint64_t v14 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_timerController;
  type metadata accessor for LayoutTimerController();
  char v15 = (void *)swift_allocObject();
  v15[2] = nullsub_1;
  v15[3] = 0;
  v15[4] = sub_25E74943C(v8);
  *(void *)&v10[v14] = v15;
  uint64_t v16 = (uint64_t)&v10[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_rootComponent];
  sub_25E74B5B4(v28);
  sub_25E74A4CC((uint64_t)v28, v16, &qword_26A7049A0);
  type metadata accessor for RootComponent(0);
  type metadata accessor for RootComponent.State(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = &v10[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_transactionCommitObserverProvider];
  *((void *)v17 + 3) = &type metadata for DefaultCATransactionCommitObserverProvider;
  *((void *)v17 + 4) = &off_270B50848;
  sub_25E710E88((char *)*(id *)&v10[v11], (uint64_t)__src);
  memcpy(&v10[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_componentPrototypeSettings], __src, 0x4D1uLL);

  if (a2)
  {
    uint64_t v18 = (void *)sub_25E75BEA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = 0;
  }
  v26.receiver = v10;
  v26.super_class = (Class)type metadata accessor for ScanwaveViewController(0);
  uint64_t v19 = (char *)objc_msgSendSuper2(&v26, sel_initWithNibName_bundle_, v18, a3);

  uint64_t v20 = *(void **)&v19[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_prototypeSettings];
  uint64_t v21 = v19;
  id v22 = v20;
  objc_msgSend(v22, sel_addKeyPathObserver_, v21);

  uint64_t v23 = *(void *)&v21[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_timerController];
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  *(void *)(v23 + 16) = sub_25E74B624;
  *(void *)(v23 + 24) = v24;
  swift_release();
  return v21;
}

void sub_25E738974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a3 + 16;
  swift_beginAccess();
  uint64_t v6 = MEMORY[0x2611E2770](v5);
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    sub_25E73BA8C(a1, a2);
  }
}

id ScanwaveViewController.__deallocating_deinit()
{
  objc_msgSend(*(id *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_prototypeSettings], sel_removeKeyPathObserver_, v0);
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ScanwaveViewController(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ScanwaveViewController(uint64_t a1)
{
  return sub_25E7355D0(a1, qword_26A7048A0);
}

id sub_25E738D94()
{
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ScanwaveViewController(0);
  id result = objc_msgSendSuper2(&v4, sel_viewDidLayoutSubviews);
  if ((v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didLayoutSubviewsOnce] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didLayoutSubviewsOnce] = 1;
    uint64_t v2 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didPrepareInitialUpdate;
    if ((v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didPrepareInitialUpdate] & 1) == 0)
    {
      uint64_t v3 = &v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration];
      id result = (id)swift_beginAccess();
      if (*(void *)v3)
      {
        v0[v2] = 1;
        return sub_25E73A908();
      }
    }
  }
  return result;
}

uint64_t sub_25E738E80()
{
  return sub_25E738E9C((uint64_t)nullsub_1, 0);
}

uint64_t sub_25E738E9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScanwaveViewController.RootComponentUpdate(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v42 = v4;
  uint64_t v43 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  long long v39 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  long long v41 = (char *)&v38 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704780);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ExternalRequestID(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = type metadata accessor for ExternalContinuation(0);
  uint64_t v15 = *(void *)(v38 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v38);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v38 - v19;
  uint64_t v21 = type metadata accessor for ScanwaveActivateRequest(0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_25E75BE30();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a1;
  *(void *)(v24 + 24) = a2;
  sub_25E7480EC((uint64_t)v23, (uint64_t)v14, type metadata accessor for ExternalRequestID);
  sub_25E7480EC((uint64_t)v14, (uint64_t)v18, type metadata accessor for ExternalRequestID);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_25E7443AC;
  *(void *)(v25 + 24) = v24;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704788);
  *(void *)&long long v44 = sub_25E7480B0;
  *((void *)&v44 + 1) = v25;
  swift_retain();
  swift_retain();
  sub_25E7481BC((uint64_t)v14, type metadata accessor for ExternalRequestID);
  uint64_t v26 = v38;
  sub_25E7136C0(&v44, &v18[*(int *)(v38 + 20)]);
  sub_25E748154((uint64_t)v18, (uint64_t)v20, type metadata accessor for ExternalContinuation);
  uint64_t v27 = (uint64_t)v39;
  swift_release();
  uint64_t v28 = v40;
  sub_25E7480EC((uint64_t)v20, (uint64_t)v14, type metadata accessor for ExternalRequestID);
  sub_25E7480EC((uint64_t)v20, (uint64_t)v11, type metadata accessor for ExternalContinuation);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v11, 0, 1, v26);
  swift_beginAccess();
  uint64_t v29 = (uint64_t)v14;
  uint64_t v30 = (uint64_t)v41;
  sub_25E7381CC((uint64_t)v11, v29);
  swift_endAccess();
  sub_25E7480EC((uint64_t)v23, v30, type metadata accessor for ScanwaveActivateRequest);
  type metadata accessor for ScanwaveCommonEvent();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates;
  uint64_t v32 = *(void *)(*(void *)(v28
                              + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates)
                  + 16);
  sub_25E7480EC(v30, v27, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
  long long v33 = *(void **)(v28 + v31);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v28 + v31) = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    long long v33 = (void *)sub_25E744710(0, v33[2] + 1, 1, v33, (uint64_t *)&unk_26A7049E0, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    *(void *)(v28 + v31) = v33;
  }
  unint64_t v36 = v33[2];
  unint64_t v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    long long v33 = (void *)sub_25E744710(v35 > 1, v36 + 1, 1, v33, (uint64_t *)&unk_26A7049E0, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    *(void *)(v28 + v31) = v33;
  }
  v33[2] = v36 + 1;
  sub_25E748154(v27, (uint64_t)v33+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(void *)(v43 + 72) * v36, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
  if ((*(unsigned char *)(v28 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate) & 1) == 0
    && !v32)
  {
    sub_25E73BCD8();
  }
  sub_25E7481BC(v30, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
  sub_25E7481BC((uint64_t)v20, type metadata accessor for ExternalContinuation);
  return sub_25E7481BC((uint64_t)v23, type metadata accessor for ScanwaveActivateRequest);
}

id sub_25E739460@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration;
  swift_beginAccess();
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void **)(v3 + 8);
  *a2 = *(void *)v3;
  a2[1] = v5;
  return sub_25E74821C(v4, v5);
}

void sub_25E7394B8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(a1 + 8);
  uint64_t v4 = *a2 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration;
  swift_beginAccess();
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void **)(v4 + 8);
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = v3;
  sub_25E74821C(v2, v3);
  sub_25E74825C(v5, v6);
  sub_25E739538();
}

void sub_25E739538()
{
  uint64_t v91 = sub_25E75BD80();
  uint64_t v93 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  uint64_t v2 = (char *)&v76 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_25E75BE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_25E75BDB0();
  uint64_t v88 = *(void *)(v7 - 8);
  uint64_t v89 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v90 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v76 - v11;
  MEMORY[0x270FA5388](v10);
  id v92 = (char *)&v76 - v13;
  uint64_t v14 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didPrepareInitialUpdate;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didPrepareInitialUpdate) != 1) {
    goto LABEL_37;
  }
  uint64_t v15 = *(void **)(v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_depthDistanceFieldImageView);
  if (v15)
  {
    uint64_t v16 = v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration;
    swift_beginAccess();
    if (*(void *)v16) {
      id v17 = *(id *)(v16 + 8);
    }
    else {
      id v17 = 0;
    }
    id v18 = v15;
    objc_msgSend(v18, sel_setImage_, v17);
  }
  uint64_t v19 = *(void **)(v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_sourceImageView);
  if (v19)
  {
    uint64_t v20 = (id *)(v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration);
    swift_beginAccess();
    if (*v20) {
      id v21 = *v20;
    }
    else {
      id v21 = 0;
    }
    id v22 = v19;
    objc_msgSend(v22, sel_setImage_, v21);
  }
  if ((*(unsigned char *)(v0 + v14) & 1) == 0)
  {
LABEL_37:
    if (*(unsigned char *)(v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didLayoutSubviewsOnce))
    {
      uint64_t v23 = (void *)(v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration);
      swift_beginAccess();
      if (*v23)
      {
        *(unsigned char *)(v0 + v14) = 1;
        sub_25E73A908();
      }
    }
  }
  id v24 = objc_msgSend(self, sel_standardUserDefaults);
  uint64_t v25 = (void *)sub_25E75BEA0();
  unsigned __int8 v26 = objc_msgSend(v24, sel_BOOLForKey_, v25);

  if (v26)
  {
    uint64_t v27 = v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration;
    swift_beginAccess();
    uint64_t v28 = *(void **)v27;
    if (*(void *)v27)
    {
      uint64_t v29 = *(void **)(v27 + 8);
      long long v84 = v28;
      uint64_t v30 = v28;
      long long v83 = v29;
      uint64_t v31 = v29;
      uint64_t v32 = UIImagePNGRepresentation(v30);
      if (v32)
      {
        long long v33 = v32;
        uint64_t v86 = sub_25E75BDD0();
        unint64_t v87 = v34;
      }
      else
      {
        uint64_t v86 = 0;
        unint64_t v87 = 0xF000000000000000;
      }
      unint64_t v35 = UIImagePNGRepresentation(v31);
      if (v35)
      {
        unint64_t v36 = v35;
        uint64_t v77 = sub_25E75BDD0();
        unint64_t v85 = v37;
      }
      else
      {
        uint64_t v77 = 0;
        unint64_t v85 = 0xF000000000000000;
      }
      id v38 = objc_msgSend(self, sel_defaultManager);
      id v39 = objc_msgSend(v38, sel_temporaryDirectory);

      sub_25E75BD90();
      id v40 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
      long long v41 = (void *)sub_25E75BEA0();
      objc_msgSend(v40, sel_setDateFormat_, v41);

      sub_25E75BE00();
      uint64_t v42 = (void *)sub_25E75BDF0();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      id v82 = v40;
      id v43 = objc_msgSend(v40, sel_stringFromDate_, v42);

      uint64_t v44 = sub_25E75BEB0();
      uint64_t v46 = v45;

      uint64_t v94 = v44;
      uint64_t v95 = v46;
      swift_bridgeObjectRetain();
      sub_25E75BEE0();
      long long v47 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      long long v48 = (void *)sub_25E75BEA0();
      id v49 = objc_msgSend(v47, sel_stringByAppendingPathExtension_, v48);

      if (v49)
      {
        uint64_t v50 = sub_25E75BEB0();
        uint64_t v52 = v51;

        uint64_t v94 = v50;
        uint64_t v95 = v52;
        uint64_t v53 = v93;
        uint64_t v54 = *(void (**)(void))(v93 + 104);
        unsigned int v80 = *MEMORY[0x263F06E38];
        uint64_t v55 = v91;
        long long v79 = (void (*)(char *, void, uint64_t))v54;
        v54(v2);
        unint64_t v78 = sub_25E74B62C();
        sub_25E75BDA0();
        long long v56 = v12;
        long long v57 = *(void (**)(char *, uint64_t))(v53 + 8);
        uint64_t v93 = v53 + 8;
        v57(v2, v55);
        swift_bridgeObjectRelease();
        unint64_t v58 = v87;
        long long v81 = v56;
        if (v87 >> 60 != 15)
        {
          uint64_t v59 = v86;
          sub_25E74B6EC(v86, v87);
          sub_25E75BDE0();
          sub_25E74B680(v59, v58);
        }
        uint64_t v94 = v44;
        uint64_t v95 = v46;
        swift_bridgeObjectRetain();
        sub_25E75BEE0();
        swift_bridgeObjectRelease();
        long long v60 = (void *)sub_25E75BEA0();
        swift_bridgeObjectRelease();
        long long v61 = (void *)sub_25E75BEA0();
        id v62 = objc_msgSend(v60, sel_stringByAppendingPathExtension_, v61);

        if (v62)
        {
          uint64_t v63 = sub_25E75BEB0();
          uint64_t v65 = v64;

          uint64_t v94 = v63;
          uint64_t v95 = v65;
          uint64_t v66 = v91;
          v79(v2, v80, v91);
          long long v67 = v90;
          id v68 = v92;
          sub_25E75BDA0();
          v57(v2, v66);
          swift_bridgeObjectRelease();
          unint64_t v69 = v85;
          if (v85 >> 60 == 15)
          {

            sub_25E74825C(v84, v83);
            sub_25E74B680(v86, v87);
            uint64_t v71 = v88;
            uint64_t v70 = v89;
            id v72 = v81;
          }
          else
          {
            uint64_t v73 = v77;
            sub_25E74B6EC(v77, v85);
            sub_25E75BDE0();
            uint64_t v71 = v88;
            uint64_t v70 = v89;
            id v72 = v81;
            unint64_t v74 = v87;
            sub_25E74B680(v73, v69);

            sub_25E74825C(v84, v83);
            sub_25E74B680(v73, v69);
            sub_25E74B680(v86, v74);
          }
          long long v75 = *(void (**)(char *, uint64_t))(v71 + 8);
          v75(v67, v70);
          v75(v72, v70);
          v75(v68, v70);
          return;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
  }
}

id sub_25E739EE4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration;
  swift_beginAccess();
  uint64_t v4 = *(void **)v3;
  uint64_t v5 = *(void **)(v3 + 8);
  *a1 = *(void *)v3;
  a1[1] = v5;
  return sub_25E74821C(v4, v5);
}

void sub_25E739F38(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = v1 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration;
  swift_beginAccess();
  uint64_t v5 = *(void **)v4;
  uint64_t v6 = *(void **)(v4 + 8);
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = v3;
  sub_25E74825C(v5, v6);
  sub_25E739538();
}

void (*sub_25E739F98(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_25E739FF8;
}

void sub_25E739FF8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_25E739538();
  }
}

id sub_25E73A02C()
{
  sub_25E710E88((char *)*(id *)(v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_prototypeSettings), (uint64_t)__src);
  memcpy(__dst, (const void *)(v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_componentPrototypeSettings), 0x4D1uLL);
  memcpy((void *)(v0 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_componentPrototypeSettings), __src, 0x4D1uLL);
  sub_25E74829C((uint64_t)__dst);
  return sub_25E73A908();
}

size_t sub_25E73A140(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x270FA5388](a1);
  uint64_t v3 = type metadata accessor for ScanwaveCommonEvent();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v49 = (uint64_t)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for ScanwaveViewController.RootComponentUpdate(0);
  MEMORY[0x270FA5388](v50);
  uint64_t v7 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + 16);
  if (!v8) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v9 = v1 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_rootComponent;
  uint64_t v10 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v48 = *(void *)(v5 + 72);
  uint64_t v44 = &v53;
  uint64_t v45 = &v55[64];
  uint64_t v46 = &v54;
  uint64_t v43 = v2;
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  long long v47 = xmmword_25E75FB40;
  while (1)
  {
    sub_25E7480EC(v10, (uint64_t)v7, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    if (swift_getEnumCaseMultiPayload() == 1) {
      break;
    }
    memcpy(v55, v7, sizeof(v55));
    swift_beginAccess();
    memcpy(v56, v55, 0x511uLL);
    nullsub_1(v56);
    sub_25E74A4CC(v9, (uint64_t)v57, &qword_26A7049A0);
    sub_25E74A4CC((uint64_t)v57, (uint64_t)v58, &qword_26A7049A0);
    if (sub_25E74A530((uint64_t)v58) == 1)
    {
      sub_25E74A4CC((uint64_t)v56, (uint64_t)v51, &qword_26A7049A0);
      sub_25E74A4CC((uint64_t)v57, (uint64_t)v46, &qword_26A7049A0);
      sub_25E74A548(v55);
      sub_25E74A5C8((uint64_t)v51);
    }
    else
    {
      sub_25E74A4CC((uint64_t)v57, (uint64_t)v51, &qword_26A7049A0);
      CGFloat v23 = *(double *)v55;
      CGFloat v24 = *(double *)&v55[8];
      CGFloat v25 = *(double *)&v55[16];
      CGFloat v26 = *(double *)&v55[24];
      CGFloat v27 = *(double *)v51;
      CGFloat v28 = *(double *)&v51[1];
      CGFloat v29 = *(double *)&v51[2];
      CGFloat v30 = *(double *)&v51[3];
      sub_25E74A548(v55);
      sub_25E74B16C(v57, sub_25E74B50C);
      v61.origin.x = v23;
      v61.origin.y = v24;
      v61.size.width = v25;
      v61.size.height = v26;
      v62.origin.x = v27;
      v62.origin.y = v28;
      v62.size.width = v29;
      v62.size.height = v30;
      if (CGRectEqualToRect(v61, v62) && CGRectEqualToRect(*(CGRect *)&v55[32], v52))
      {
        memcpy(v59, v45, 0x4D1uLL);
        memcpy(v60, v44, 0x4D1uLL);
        char v31 = sub_25E7102C0((uint64_t)v59, (uint64_t)v60);
        sub_25E74B16C(v57, sub_25E74B040);
        sub_25E74B0E8((uint64_t)v55);
        uint64_t v32 = MEMORY[0x263F8EE78];
        if (v31) {
          goto LABEL_31;
        }
      }
      else
      {
        sub_25E74B16C(v57, sub_25E74B040);
        sub_25E74B0E8((uint64_t)v55);
      }
    }
    sub_25E74A548(v55);
    sub_25E74B16C(v57, sub_25E74B040);
    sub_25E74A4CC((uint64_t)v56, v9, &qword_26A7049A0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A7048D0);
    uint64_t v33 = type metadata accessor for ScanwaveCommonAction();
    unint64_t v34 = (*(unsigned __int8 *)(*(void *)(v33 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v33 - 8) + 80);
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = v47;
    if (qword_26A703FD0 != -1) {
      swift_once();
    }
    uint64_t v35 = __swift_project_value_buffer(v33, (uint64_t)qword_26A706580);
    sub_25E7480EC(v35, v32 + v34, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
LABEL_31:
    size_t result = swift_endAccess();
    uint64_t v36 = *(void *)(v32 + 16);
    int64_t v37 = v11[2];
    int64_t v38 = v37 + v36;
    if (__OFADD__(v37, v36)) {
      goto LABEL_48;
    }
    size_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result && v38 <= v11[3] >> 1)
    {
      if (!*(void *)(v32 + 16)) {
        goto LABEL_3;
      }
    }
    else
    {
      if (v37 <= v38) {
        int64_t v39 = v37 + v36;
      }
      else {
        int64_t v39 = v37;
      }
      size_t result = sub_25E744710(result, v39, 1, v11, &qword_26A7048D0, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
      uint64_t v11 = (void *)result;
      if (!*(void *)(v32 + 16))
      {
LABEL_3:
        if (v36) {
          goto LABEL_49;
        }
        goto LABEL_4;
      }
    }
    uint64_t v40 = (v11[3] >> 1) - v11[2];
    size_t result = type metadata accessor for ScanwaveCommonAction();
    if (v40 < v36) {
      goto LABEL_52;
    }
    size_t result = swift_arrayInitWithCopy();
    if (v36)
    {
      uint64_t v41 = v11[2];
      BOOL v20 = __OFADD__(v41, v36);
      uint64_t v42 = v41 + v36;
      if (v20) {
        goto LABEL_54;
      }
      _OWORD v11[2] = v42;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    sub_25E74B0E8((uint64_t)v55);
LABEL_5:
    v10 += v48;
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      return (size_t)v11;
    }
  }
  uint64_t v12 = v49;
  sub_25E748154((uint64_t)v7, v49, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonEvent);
  swift_beginAccess();
  uint64_t v13 = sub_25E74C060(v12);
  size_t result = swift_endAccess();
  uint64_t v15 = *(void *)(v13 + 16);
  int64_t v16 = v11[2];
  int64_t v17 = v16 + v15;
  if (!__OFADD__(v16, v15))
  {
    size_t result = swift_isUniquelyReferenced_nonNull_native();
    if (result && v17 <= v11[3] >> 1)
    {
      if (*(void *)(v13 + 16)) {
        goto LABEL_11;
      }
LABEL_21:
      if (v15) {
        goto LABEL_50;
      }
    }
    else
    {
      if (v16 <= v17) {
        int64_t v22 = v16 + v15;
      }
      else {
        int64_t v22 = v16;
      }
      size_t result = sub_25E744710(result, v22, 1, v11, &qword_26A7048D0, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
      uint64_t v11 = (void *)result;
      if (!*(void *)(v13 + 16)) {
        goto LABEL_21;
      }
LABEL_11:
      uint64_t v18 = (v11[3] >> 1) - v11[2];
      size_t result = type metadata accessor for ScanwaveCommonAction();
      if (v18 < v15) {
        goto LABEL_51;
      }
      size_t result = swift_arrayInitWithCopy();
      if (v15)
      {
        uint64_t v19 = v11[2];
        BOOL v20 = __OFADD__(v19, v15);
        uint64_t v21 = v19 + v15;
        if (v20) {
          goto LABEL_53;
        }
        _OWORD v11[2] = v21;
      }
    }
    swift_bridgeObjectRelease();
    sub_25E7481BC(v49, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonEvent);
    goto LABEL_5;
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

id sub_25E73A908()
{
  uint64_t v1 = type metadata accessor for ScanwaveViewController.RootComponentUpdate(0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)MEMORY[0x270FA5388](v3);
  uint64_t v8 = (int64x2_t *)((char *)v37 - v7);
  if (v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didLayoutSubviewsOnce] != 1) {
    return result;
  }
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v9 = result;
  objc_msgSend(result, sel_bounds);
  double v11 = v10;
  CGFloat v13 = v12;
  double v15 = v14;
  CGFloat v17 = v16;

  v38.origin.x = v11;
  v38.origin.y = v13;
  v38.size.width = v15;
  v38.size.height = v17;
  double MaxY = CGRectGetMaxY(v38);
  id result = objc_msgSend(v0, sel_view);
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  uint64_t v19 = result;
  double v20 = v11 + (v15 + -78.0) * 0.5;
  double v21 = MaxY + -50.0 + -78.0;
  objc_msgSend(result, sel_bounds);
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;

  CGFloat v30 = &v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_componentPrototypeSettings];
  memcpy(v37, &v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_componentPrototypeSettings], 0x4D1uLL);
  v8->i64[0] = v23;
  v8->i64[1] = v25;
  v8[1].i64[0] = v27;
  v8[1].i64[1] = v29;
  *(double *)v8[2].i64 = v20;
  *(double *)&v8[2].i64[1] = v21;
  v8[3] = vdupq_n_s64(0x4053800000000000uLL);
  memcpy(&v8[4], v30, 0x4D1uLL);
  swift_storeEnumTagMultiPayload();
  uint64_t v31 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates;
  uint64_t v32 = *(void *)(*(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates]
                  + 16);
  sub_25E7480EC((uint64_t)v8, (uint64_t)v5, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
  uint64_t v33 = *(void **)&v0[v31];
  sub_25E74B800(v37);
  sub_25E74B800(v37);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v0[v31] = v33;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v33 = (void *)sub_25E744710(0, v33[2] + 1, 1, v33, (uint64_t *)&unk_26A7049E0, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    *(void *)&v0[v31] = v33;
  }
  unint64_t v36 = v33[2];
  unint64_t v35 = v33[3];
  if (v36 >= v35 >> 1)
  {
    uint64_t v33 = (void *)sub_25E744710(v35 > 1, v36 + 1, 1, v33, (uint64_t *)&unk_26A7049E0, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    *(void *)&v0[v31] = v33;
  }
  v33[2] = v36 + 1;
  sub_25E748154((uint64_t)v5, (uint64_t)v33+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(void *)(v2 + 72) * v36, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
  if ((v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate] & 1) == 0 && !v32) {
    sub_25E73BCD8();
  }
  sub_25E74829C((uint64_t)v37);
  return (id)sub_25E7481BC((uint64_t)v8, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
}

uint64_t sub_25E73AC88(uint64_t result)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    id result = swift_bridgeObjectRetain();
    unint64_t v3 = 0;
    uint64_t v4 = result + 48;
    uint64_t v5 = MEMORY[0x263F8EE78];
    do
    {
      if (v3 <= v2) {
        unint64_t v6 = v2;
      }
      else {
        unint64_t v6 = v3;
      }
      uint64_t v7 = -(uint64_t)v6;
      uint64_t v8 = (unsigned __int8 *)(v4 + 24 * v3++);
      while (1)
      {
        if (v7 + v3 == 1)
        {
          __break(1u);
          return result;
        }
        int v9 = *v8;
        if (v9 != 2) {
          break;
        }
        ++v3;
        v8 += 24;
        if (v3 - v2 == 1) {
          goto LABEL_16;
        }
      }
      uint64_t v10 = *((void *)v8 - 1);
      uint64_t v15 = *((void *)v8 - 2);
      uint64_t v16 = v4;
      id result = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v1;
      if ((result & 1) == 0)
      {
        id result = (uint64_t)sub_25E7448EC(0, *(void *)(v5 + 16) + 1, 1, (char *)v5, &qword_26A704998);
        uint64_t v5 = result;
      }
      unint64_t v13 = *(void *)(v5 + 16);
      unint64_t v12 = *(void *)(v5 + 24);
      if (v13 >= v12 >> 1)
      {
        id result = (uint64_t)sub_25E7448EC((char *)(v12 > 1), v13 + 1, 1, (char *)v5, &qword_26A704998);
        uint64_t v5 = result;
      }
      *(void *)(v5 + 16) = v13 + 1;
      uint64_t v14 = v5 + 24 * v13;
      *(void *)(v14 + 32) = v15;
      *(void *)(v14 + 40) = v10;
      *(unsigned char *)(v14 + 48) = v9 & 1;
      uint64_t v1 = v11;
      uint64_t v4 = v16;
    }
    while (v3 != v2);
LABEL_16:
    swift_bridgeObjectRelease();
    sub_25E73D90C(v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_25E73AE28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ExternalRequestID(0);
  uint64_t v93 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v104 = (uint64_t)v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v91 - v7;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704780);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v105 = (uint64_t)v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = type metadata accessor for ExternalContinuation(0);
  uint64_t v11 = *(void *)(v112 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v112);
  uint64_t v103 = (uint64_t)v91 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v91 - v14;
  id v111 = (int *)type metadata accessor for ScanwaveActivateResponse(0);
  uint64_t v16 = MEMORY[0x270FA5388](v111);
  uint64_t v102 = (uint64_t)v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v110 = (uint64_t)v91 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v109 = (uint64_t)v91 - v20;
  uint64_t v114 = type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction(0);
  uint64_t result = MEMORY[0x270FA5388](v114);
  uint64_t v24 = (void *)((char *)v91 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = *(void *)(a1 + 16);
  if (!v25) {
    return result;
  }
  id v101 = (uint64_t *)(v2 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_externalContinuations);
  uint64_t v108 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_timerController;
  uint64_t v26 = a1 + ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  unint64_t v100 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v92 = v11;
  id v99 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  id v98 = &v116;
  uint64_t v94 = *MEMORY[0x263EFF588];
  uint64_t v113 = *(void *)(v22 + 72);
  v91[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v97 = MEMORY[0x263F8EE58] + 8;
  id v107 = v15;
  id v106 = v24;
  uint64_t v96 = v2;
  uint64_t v95 = v8;
  while (1)
  {
    sub_25E7480EC(v26, (uint64_t)v24, type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload) {
      break;
    }
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v29 = *v24;
      uint64_t v30 = v24[1];
      uint64_t v31 = (uint64_t *)(*(void *)(v2 + v108) + 32);
      swift_beginAccess();
      unint64_t v32 = sub_25E7539F8(v29, v30);
      uint64_t v27 = 0;
      if (v33)
      {
        unint64_t v34 = v32;
        int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v36 = *v31;
        id v121 = (void *)*v31;
        *uint64_t v31 = 0x8000000000000000;
        if (!isUniquelyReferenced_nonNull_native)
        {
          sub_25E754558();
          uint64_t v36 = (uint64_t)v121;
        }
        uint64_t v27 = *(void **)(*(void *)(v36 + 56) + 8 * v34);
        sub_25E753BC4(v34, v36);
        *uint64_t v31 = v36;
        swift_bridgeObjectRelease();
      }
      swift_endAccess();
      objc_msgSend(v27, sel_invalidate);

      uint64_t v15 = v107;
    }
    else
    {
      uint64_t v65 = v109;
      sub_25E748154((uint64_t)v24, v109, type metadata accessor for ScanwaveActivateResponse);
      uint64_t v66 = v65;
      uint64_t v67 = v110;
      sub_25E7480EC(v66, v110, type metadata accessor for ScanwaveActivateResponse);
      id v117 = v111;
      uint64_t v118 = sub_25E74B7B8(&qword_26A704988, (void (*)(uint64_t))type metadata accessor for ScanwaveActivateResponse);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(aBlock);
      sub_25E7480EC(v67, (uint64_t)boxed_opaque_existential_1, type metadata accessor for ScanwaveActivateResponse);
      unint64_t v69 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v117);
      sub_25E7480EC((uint64_t)v69, (uint64_t)v8, type metadata accessor for ExternalRequestID);
      uint64_t v70 = v101;
      swift_beginAccess();
      swift_bridgeObjectRetain();
      unint64_t v71 = sub_25E753A50((uint64_t)v8);
      char v73 = v72;
      swift_bridgeObjectRelease();
      if (v73)
      {
        int v74 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v75 = *v70;
        id v120 = (void (*)(void **))*v70;
        *uint64_t v70 = 0x8000000000000000;
        if (!v74)
        {
          sub_25E754700();
          uint64_t v75 = (uint64_t)v120;
        }
        sub_25E7481BC(*(void *)(v75 + 48) + *(void *)(v93 + 72) * v71, type metadata accessor for ExternalRequestID);
        uint64_t v37 = v105;
        sub_25E748154(*(void *)(v75 + 56) + *(void *)(v92 + 72) * v71, v105, type metadata accessor for ExternalContinuation);
        sub_25E753C1C(v71, v75);
        *uint64_t v70 = v75;
        swift_bridgeObjectRelease();
        uint64_t v76 = 0;
      }
      else
      {
        uint64_t v76 = 1;
        uint64_t v37 = v105;
      }
      uint64_t v77 = v2;
      uint64_t v78 = v112;
      (*v100)(v37, v76, 1, v112);
      sub_25E7481BC((uint64_t)v8, type metadata accessor for ExternalRequestID);
      swift_endAccess();
      if ((*v99)(v37, 1, v78) == 1) {
        goto LABEL_41;
      }
      sub_25E748154(v37, (uint64_t)v15, type metadata accessor for ExternalContinuation);
      long long v79 = __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v117);
      uint64_t v80 = (uint64_t)v15;
      uint64_t v81 = (uint64_t)v15;
      uint64_t v82 = v103;
      sub_25E7480EC(v80, v103, type metadata accessor for ExternalContinuation);
      uint64_t v83 = v102;
      sub_25E7480EC((uint64_t)v79, v102, type metadata accessor for ScanwaveActivateResponse);
      uint64_t v37 = v104;
      sub_25E7480EC(v83, v104, type metadata accessor for ExternalRequestID);
      char v84 = sub_25E75BE20();
      sub_25E7481BC(v37, type metadata accessor for ExternalRequestID);
      sub_25E7481BC(v83, type metadata accessor for ScanwaveActivateResponse);
      sub_25E7481BC(v82, type metadata accessor for ExternalContinuation);
      if ((v84 & 1) == 0) {
        goto LABEL_39;
      }
      sub_25E74A3F4(v81 + *(int *)(v112 + 20), (uint64_t)&v121);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A704788);
      if (!swift_dynamicCast()) {
        goto LABEL_42;
      }
      uint64_t v15 = (char *)v81;
      LOBYTE(v121) = *((unsigned char *)v79 + v111[5]);
      v120(&v121);
      swift_release();
      sub_25E7481BC(v81, type metadata accessor for ExternalContinuation);
      __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      sub_25E7481BC(v109, type metadata accessor for ScanwaveActivateResponse);
      sub_25E7481BC(v110, type metadata accessor for ScanwaveActivateResponse);
      uint64_t v24 = v106;
      uint64_t v2 = v77;
    }
LABEL_5:
    v26 += v113;
    if (!--v25) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v37 = *v24;
  uint64_t v38 = v24[1];
  double v39 = *((double *)v24 + 2);
  uint64_t v40 = *(void *)(v2 + v108);
  uint64_t v41 = (uint64_t *)(v40 + 32);
  swift_beginAccess();
  unint64_t v42 = sub_25E7539F8(v37, v38);
  uint64_t v43 = 0;
  if (v44)
  {
    unint64_t v45 = v42;
    int v46 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v47 = *v41;
    id v121 = (void *)*v41;
    uint64_t *v41 = 0x8000000000000000;
    if (!v46)
    {
      sub_25E754558();
      uint64_t v47 = (uint64_t)v121;
    }
    uint64_t v43 = *(void **)(*(void *)(v47 + 56) + 8 * v45);
    sub_25E753BC4(v45, v47);
    uint64_t *v41 = v47;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  objc_msgSend(v43, sel_invalidate);

  uint64_t v48 = swift_allocObject();
  swift_weakInit();
  uint64_t v49 = (void *)swift_allocObject();
  v49[2] = v48;
  v49[3] = v37;
  v49[4] = v38;
  uint64_t v118 = (uint64_t)sub_25E74A4C0;
  id v119 = v49;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  id v116 = sub_25E738164;
  id v117 = &block_descriptor_368;
  uint64_t v50 = _Block_copy(aBlock);
  uint64_t v51 = self;
  swift_retain();
  id v52 = objc_msgSend(v51, sel_timerWithTimeInterval_repeats_block_, 0, v50, v39);
  _Block_release(v50);
  swift_release();
  swift_release();
  swift_beginAccess();
  id v53 = v52;
  char v54 = swift_isUniquelyReferenced_nonNull_native();
  id v121 = *(void **)(v40 + 32);
  uint64_t v55 = v121;
  *(void *)(v40 + 32) = 0x8000000000000000;
  unint64_t v57 = sub_25E7539F8(v37, v38);
  uint64_t v58 = v55[2];
  BOOL v59 = (v56 & 1) == 0;
  uint64_t v60 = v58 + v59;
  if (!__OFADD__(v58, v59))
  {
    char v61 = v56;
    if (v55[3] < v60)
    {
      sub_25E744D50(v60, v54);
      unint64_t v62 = sub_25E7539F8(v37, v38);
      if ((v61 & 1) != (v63 & 1)) {
        goto LABEL_43;
      }
      unint64_t v57 = v62;
      uint64_t v64 = v121;
      if ((v61 & 1) == 0) {
        goto LABEL_33;
      }
LABEL_31:
      uint64_t v85 = v64[7];

      *(void *)(v85 + 8 * v57) = v53;
LABEL_35:
      uint64_t *v41 = (uint64_t)v64;
      swift_bridgeObjectRelease();
      swift_endAccess();
      id v90 = objc_msgSend(self, sel_currentRunLoop);
      objc_msgSend(v90, sel_addTimer_forMode_, v53, v94);

      uint64_t v2 = v96;
      uint64_t v8 = v95;
      uint64_t v15 = v107;
      uint64_t v24 = v106;
      goto LABEL_5;
    }
    if (v54)
    {
      uint64_t v64 = v121;
      if (v56) {
        goto LABEL_31;
      }
    }
    else
    {
      sub_25E754558();
      uint64_t v64 = v121;
      if (v61) {
        goto LABEL_31;
      }
    }
LABEL_33:
    v64[(v57 >> 6) + 8] |= 1 << v57;
    uint64_t v86 = (uint64_t *)(v64[6] + 16 * v57);
    *uint64_t v86 = v37;
    v86[1] = v38;
    *(void *)(v64[7] + 8 * v57) = v53;
    uint64_t v87 = v64[2];
    BOOL v88 = __OFADD__(v87, 1);
    uint64_t v89 = v87 + 1;
    if (v88) {
      goto LABEL_40;
    }
    v64[2] = v89;
    goto LABEL_35;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  sub_25E74A394(v37);
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  uint64_t result = sub_25E75C1B0();
  __break(1u);
  return result;
}

uint64_t sub_25E73BA8C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for ScanwaveViewController.RootComponentUpdate(0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (uint64_t *)((char *)&v19 - v10);
  *uint64_t v11 = a1;
  v11[1] = a2;
  type metadata accessor for ScanwaveCommonEvent();
  swift_storeEnumTagMultiPayload();
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates;
  uint64_t v13 = *(void *)(*(void *)(v2
                              + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates)
                  + 16);
  sub_25E7480EC((uint64_t)v11, (uint64_t)v9, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
  uint64_t v14 = *(void **)(v2 + v12);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + v12) = v14;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v14 = (void *)sub_25E744710(0, v14[2] + 1, 1, v14, (uint64_t *)&unk_26A7049E0, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    *(void *)(v2 + v12) = v14;
  }
  unint64_t v17 = v14[2];
  unint64_t v16 = v14[3];
  if (v17 >= v16 >> 1)
  {
    uint64_t v14 = (void *)sub_25E744710(v16 > 1, v17 + 1, 1, v14, (uint64_t *)&unk_26A7049E0, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    *(void *)(v2 + v12) = v14;
  }
  v14[2] = v17 + 1;
  sub_25E748154((uint64_t)v9, (uint64_t)v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate) & 1) == 0
    && !v13)
  {
    sub_25E73BCD8();
  }
  return sub_25E7481BC((uint64_t)v11, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
}

void sub_25E73BCD8()
{
  uint64_t v1 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate;
  if (v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate]) {
    return;
  }
  uint64_t v2 = v0;
  unint64_t v3 = self;
  objc_msgSend(v3, sel_activate);
  char v4 = sub_25E755050(0);
  uint64_t v5 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_hasEnqueuedPreCAUpdate;
  if (v4)
  {
    if (v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_hasEnqueuedPreCAUpdate]) {
      return;
    }
    v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_hasEnqueuedPreCAUpdate] = 1;
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v2;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_25E74B744;
    *(void *)(v7 + 24) = v6;
    void aBlock[4] = (uint64_t)sub_25E74B74C;
    aBlock[5] = v7;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    uint64_t aBlock[2] = (uint64_t)sub_25E7385C4;
    aBlock[3] = (uint64_t)&block_descriptor_378;
    uint64_t v8 = _Block_copy(aBlock);
    uint64_t v57 = v1;
    uint64_t v9 = v2;
    swift_retain();
    uint64_t v10 = v57;
    swift_release();
    unsigned __int8 v11 = objc_msgSend(v3, sel_addCommitHandler_forPhase_, v8, 0);
    _Block_release(v8);
    swift_release();
    if (v11) {
      return;
    }
    v2[v5] = 0;
    uint64_t v12 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates;
    if (!*(void *)(*(void *)&v9[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates]
                    + 16))
      return;
    char v56 = v2[v57];
    v2[v57] = 1;
    uint64_t v13 = *(void *)&v9[v12];
    if (*(void *)(v13 + 16))
    {
      uint64_t v14 = MEMORY[0x263F8EE78];
      do
      {
        int v15 = 0;
        unint64_t v16 = (char *)v14;
        while (1)
        {
          *(void *)&v9[v12] = v14;
          if (*(void *)(v13 + 16))
          {
            size_t v17 = sub_25E73A140(v13);
            int v18 = 1;
          }
          else
          {
            size_t v17 = v14;
            int v18 = v15;
          }
          swift_bridgeObjectRelease();
          v15 |= v18;
          if (!*(void *)(v17 + 16)) {
            break;
          }
          uint64_t v19 = sub_25E73C4AC(v17);
          uint64_t v21 = v20;
          swift_bridgeObjectRelease();
          sub_25E73AE28((uint64_t)v19);
          swift_bridgeObjectRelease();
          uint64_t v22 = *(void *)(v21 + 16);
          int64_t v23 = *((void *)v16 + 2);
          int64_t v24 = v23 + v22;
          if (__OFADD__(v23, v22)) {
            goto LABEL_68;
          }
          char isUniquelyReferenced_nonNull_native = (char *)swift_isUniquelyReferenced_nonNull_native();
          if (isUniquelyReferenced_nonNull_native && v24 <= *((void *)v16 + 3) >> 1)
          {
            if (!*(void *)(v21 + 16)) {
              goto LABEL_11;
            }
          }
          else
          {
            if (v23 <= v24) {
              int64_t v26 = v23 + v22;
            }
            else {
              int64_t v26 = v23;
            }
            unint64_t v16 = sub_25E7448EC(isUniquelyReferenced_nonNull_native, v26, 1, v16, &qword_26A7049D0);
            if (!*(void *)(v21 + 16))
            {
LABEL_11:
              if (v22) {
                goto LABEL_69;
              }
              goto LABEL_12;
            }
          }
          uint64_t v27 = *((void *)v16 + 2);
          if ((*((void *)v16 + 3) >> 1) - v27 < v22) {
            goto LABEL_70;
          }
          memcpy(&v16[24 * v27 + 32], (const void *)(v21 + 32), 24 * v22);
          if (v22)
          {
            uint64_t v28 = *((void *)v16 + 2);
            BOOL v29 = __OFADD__(v28, v22);
            uint64_t v30 = v28 + v22;
            if (v29) {
              goto LABEL_71;
            }
            *((void *)v16 + 2) = v30;
          }
LABEL_12:
          swift_bridgeObjectRelease();
          uint64_t v13 = *(void *)&v9[v12];
        }
        swift_bridgeObjectRelease();
        aBlock[0] = (uint64_t)v16;
        if (v15)
        {
          uint64_t v31 = sub_25E73C4AC(v14);
          uint64_t v33 = v32;
          sub_25E73AE28((uint64_t)v31);
          swift_bridgeObjectRelease();
          sub_25E7461A0(v33);
          if (*(void *)(aBlock[0] + 16)) {
            sub_25E73AC88(aBlock[0]);
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v10 = v57;
        uint64_t v13 = *(void *)&v9[v12];
      }
      while (*(void *)(v13 + 16));
    }
LABEL_62:
    char v35 = v56;
LABEL_63:
    v2[v10] = v35;
    return;
  }
  v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_hasEnqueuedPreCAUpdate] = 0;
  uint64_t v34 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates;
  if (!*(void *)(*(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates]
                  + 16))
    return;
  char v35 = v2[v1];
  uint64_t v58 = v1;
  v2[v1] = 1;
  uint64_t v36 = *(void *)&v2[v34];
  if (!*(void *)(v36 + 16))
  {
    uint64_t v10 = v1;
    goto LABEL_63;
  }
  char v56 = v35;
  uint64_t v37 = MEMORY[0x263F8EE78];
LABEL_37:
  int v38 = 0;
  double v39 = (char *)v37;
  while (1)
  {
    *(void *)&v2[v34] = v37;
    if (*(void *)(v36 + 16))
    {
      size_t v40 = sub_25E73A140(v36);
      int v41 = 1;
    }
    else
    {
      size_t v40 = v37;
      int v41 = v38;
    }
    swift_bridgeObjectRelease();
    v38 |= v41;
    if (!*(void *)(v40 + 16))
    {
      swift_bridgeObjectRelease();
      aBlock[0] = (uint64_t)v39;
      if (v38)
      {
        id v53 = sub_25E73C4AC(v37);
        uint64_t v55 = v54;
        sub_25E73AE28((uint64_t)v53);
        swift_bridgeObjectRelease();
        sub_25E7461A0(v55);
        if (*(void *)(aBlock[0] + 16)) {
          sub_25E73AC88(aBlock[0]);
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v36 = *(void *)&v2[v34];
      if (!*(void *)(v36 + 16))
      {
        uint64_t v10 = v58;
        goto LABEL_62;
      }
      goto LABEL_37;
    }
    unint64_t v42 = sub_25E73C4AC(v40);
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    sub_25E73AE28((uint64_t)v42);
    swift_bridgeObjectRelease();
    uint64_t v45 = *(void *)(v44 + 16);
    int64_t v46 = *((void *)v39 + 2);
    int64_t v47 = v46 + v45;
    if (__OFADD__(v46, v45)) {
      break;
    }
    uint64_t v48 = (char *)swift_isUniquelyReferenced_nonNull_native();
    if (v48 && v47 <= *((void *)v39 + 3) >> 1)
    {
      if (*(void *)(v44 + 16)) {
        goto LABEL_53;
      }
    }
    else
    {
      if (v46 <= v47) {
        int64_t v49 = v46 + v45;
      }
      else {
        int64_t v49 = v46;
      }
      double v39 = sub_25E7448EC(v48, v49, 1, v39, &qword_26A7049D0);
      if (*(void *)(v44 + 16))
      {
LABEL_53:
        uint64_t v50 = *((void *)v39 + 2);
        if ((*((void *)v39 + 3) >> 1) - v50 < v45) {
          goto LABEL_66;
        }
        memcpy(&v39[24 * v50 + 32], (const void *)(v44 + 32), 24 * v45);
        if (v45)
        {
          uint64_t v51 = *((void *)v39 + 2);
          BOOL v29 = __OFADD__(v51, v45);
          uint64_t v52 = v51 + v45;
          if (v29) {
            goto LABEL_67;
          }
          *((void *)v39 + 2) = v52;
        }
        goto LABEL_39;
      }
    }
    if (v45) {
      goto LABEL_65;
    }
LABEL_39:
    swift_bridgeObjectRelease();
    uint64_t v36 = *(void *)&v2[v34];
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
LABEL_70:
  __break(1u);
LABEL_71:
  __break(1u);
}

char *sub_25E73C25C(char *result)
{
  result[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_hasEnqueuedPreCAUpdate] = 0;
  uint64_t v1 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates;
  if (*(void *)(*(void *)&result[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates]
                 + 16))
  {
    uint64_t v2 = result;
    char v23 = result[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate];
    uint64_t v24 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate;
    result[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate] = 1;
    uint64_t v3 = *(void *)&result[v1];
    if (*(void *)(v3 + 16))
    {
      uint64_t v4 = MEMORY[0x263F8EE78];
      do
      {
        int v5 = 0;
        uint64_t v6 = v4;
        while (1)
        {
          *(void *)&v2[v1] = v4;
          if (*(void *)(v3 + 16))
          {
            size_t v7 = sub_25E73A140(v3);
            int v8 = 1;
          }
          else
          {
            size_t v7 = v4;
            int v8 = v5;
          }
          swift_bridgeObjectRelease();
          v5 |= v8;
          if (!*(void *)(v7 + 16)) {
            break;
          }
          uint64_t v9 = sub_25E73C4AC(v7);
          uint64_t v11 = v10;
          swift_bridgeObjectRelease();
          sub_25E73AE28((uint64_t)v9);
          uint64_t result = (char *)swift_bridgeObjectRelease();
          uint64_t v12 = *(void *)(v11 + 16);
          int64_t v13 = *(void *)(v6 + 16);
          int64_t v14 = v13 + v12;
          if (__OFADD__(v13, v12))
          {
            __break(1u);
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
            return result;
          }
          uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
          if (result && v14 <= *(void *)(v6 + 24) >> 1)
          {
            if (!*(void *)(v11 + 16)) {
              goto LABEL_6;
            }
          }
          else
          {
            if (v13 <= v14) {
              int64_t v15 = v13 + v12;
            }
            else {
              int64_t v15 = v13;
            }
            uint64_t result = sub_25E7448EC(result, v15, 1, (char *)v6, &qword_26A7049D0);
            uint64_t v6 = (uint64_t)result;
            if (!*(void *)(v11 + 16))
            {
LABEL_6:
              if (v12) {
                goto LABEL_31;
              }
              goto LABEL_7;
            }
          }
          uint64_t v16 = *(void *)(v6 + 16);
          if ((*(void *)(v6 + 24) >> 1) - v16 < v12) {
            goto LABEL_32;
          }
          uint64_t result = (char *)memcpy((void *)(v6 + 24 * v16 + 32), (const void *)(v11 + 32), 24 * v12);
          if (v12)
          {
            uint64_t v17 = *(void *)(v6 + 16);
            BOOL v18 = __OFADD__(v17, v12);
            uint64_t v19 = v17 + v12;
            if (v18) {
              goto LABEL_33;
            }
            *(void *)(v6 + 16) = v19;
          }
LABEL_7:
          swift_bridgeObjectRelease();
          uint64_t v3 = *(void *)&v2[v1];
        }
        swift_bridgeObjectRelease();
        if (v5)
        {
          uint64_t v20 = sub_25E73C4AC(v4);
          uint64_t v22 = v21;
          sub_25E73AE28((uint64_t)v20);
          swift_bridgeObjectRelease();
          sub_25E7461A0(v22);
          if (*(void *)(v6 + 16)) {
            sub_25E73AC88(v6);
          }
        }
        uint64_t result = (char *)swift_bridgeObjectRelease();
        uint64_t v3 = *(void *)&v2[v1];
      }
      while (*(void *)(v3 + 16));
    }
    v2[v24] = v23;
  }
  return result;
}

void *sub_25E73C4AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScanwaveActivateResponse(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction(0);
  uint64_t v5 = *(void *)(v41 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v41);
  uint64_t v44 = (uint64_t)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v43 = (_OWORD *)((char *)v40 - v9);
  MEMORY[0x270FA5388](v8);
  unint64_t v42 = (_OWORD *)((char *)v40 - v10);
  uint64_t v46 = type metadata accessor for ScanwaveCommonAction();
  uint64_t v11 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  int64_t v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v14 = *(void *)(a1 + 16);
  int64_t v15 = (char *)MEMORY[0x263F8EE78];
  uint64_t v16 = (void *)sub_25E744710(0, v14, 0, MEMORY[0x263F8EE78], &qword_26A7049D8, type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction);
  uint64_t v17 = sub_25E7448EC(0, v14, 0, v15, &qword_26A7049D0);
  if (v14)
  {
    *(void *)&long long v45 = v17;
    uint64_t v18 = a1;
    uint64_t v19 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    uint64_t v20 = *(void *)(v11 + 72);
    v40[1] = v18;
    swift_bridgeObjectRetain();
    do
    {
      sub_25E7480EC(v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          uint64_t v21 = *((void *)v13 + 2);
          uint64_t v22 = v42;
          *unint64_t v42 = *(_OWORD *)v13;
          *((void *)v22 + 2) = v21;
          swift_storeEnumTagMultiPayload();
          unint64_t v24 = v16[2];
          unint64_t v23 = v16[3];
          if (v24 >= v23 >> 1) {
            uint64_t v16 = (void *)sub_25E744710(v23 > 1, v24 + 1, 1, v16, &qword_26A7049D8, type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction);
          }
          v16[2] = v24 + 1;
          uint64_t v25 = (uint64_t)v16
              + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
              + *(void *)(v5 + 72) * v24;
          uint64_t v26 = (uint64_t)v42;
          goto LABEL_6;
        case 2u:
          *uint64_t v43 = *(_OWORD *)v13;
          swift_storeEnumTagMultiPayload();
          unint64_t v35 = v16[2];
          unint64_t v34 = v16[3];
          if (v35 >= v34 >> 1) {
            uint64_t v16 = (void *)sub_25E744710(v34 > 1, v35 + 1, 1, v16, &qword_26A7049D8, type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction);
          }
          v16[2] = v35 + 1;
          uint64_t v25 = (uint64_t)v16
              + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
              + *(void *)(v5 + 72) * v35;
          uint64_t v26 = (uint64_t)v43;
LABEL_6:
          sub_25E748154(v26, v25, type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction);
          break;
        case 3u:
          sub_25E748154((uint64_t)v13, (uint64_t)v4, type metadata accessor for ScanwaveActivateResponse);
          sub_25E7480EC((uint64_t)v4, v44, type metadata accessor for ScanwaveActivateResponse);
          swift_storeEnumTagMultiPayload();
          unint64_t v37 = v16[2];
          unint64_t v36 = v16[3];
          if (v37 >= v36 >> 1) {
            uint64_t v16 = (void *)sub_25E744710(v36 > 1, v37 + 1, 1, v16, &qword_26A7049D8, type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction);
          }
          v16[2] = v37 + 1;
          sub_25E748154(v44, (uint64_t)v16+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v37, type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction);
          sub_25E7481BC((uint64_t)v4, type metadata accessor for ScanwaveActivateResponse);
          break;
        default:
          uint64_t v27 = v4;
          long long v28 = *(_OWORD *)v13;
          char v29 = v13[16];
          uint64_t v30 = (char *)v45;
          unint64_t v32 = *(void *)(v45 + 16);
          unint64_t v31 = *(void *)(v45 + 24);
          if (v32 >= v31 >> 1)
          {
            long long v45 = *(_OWORD *)v13;
            int v38 = sub_25E7448EC((char *)(v31 > 1), v32 + 1, 1, v30, &qword_26A7049D0);
            long long v28 = v45;
            uint64_t v30 = v38;
          }
          *((void *)v30 + 2) = v32 + 1;
          *(void *)&long long v45 = v30;
          uint64_t v33 = &v30[24 * v32];
          *((_OWORD *)v33 + 2) = v28;
          v33[48] = v29;
          uint64_t v4 = v27;
          break;
      }
      v19 += v20;
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  return v16;
}

uint64_t sub_25E73CA28(uint64_t a1)
{
  uint64_t v3 = (uint64_t *)(v1 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_animatableProperties);
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t result = sub_25E73D44C(v4);
  uint64_t v114 = result;
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v93 = v3;
    swift_bridgeObjectRetain();
    uint64_t v7 = 0;
    uint64_t v95 = v6 - 1;
    long long v89 = xmmword_25E760C30;
    for (uint64_t i = a1; ; a1 = i)
    {
      uint64_t v94 = v7;
      uint64_t v8 = a1 + v7;
      uint64_t v9 = *(void *)(a1 + v7 + 32);
      uint64_t v10 = *(void *)(a1 + v7 + 40);
      double v11 = *(double *)(a1 + v7 + 48);
      uint64_t v13 = *(void *)(a1 + v7 + 56);
      uint64_t v12 = *(void *)(a1 + v7 + 64);
      uint64_t v14 = *(void *)(a1 + v7 + 72);
      uint64_t v15 = *(void *)(a1 + v7 + 80);
      uint64_t v16 = *(void *)(a1 + v7 + 88);
      uint64_t v104 = v14;
      uint64_t v105 = *(void *)(v8 + 96);
      uint64_t v17 = *(void *)(v8 + 104);
      unint64_t v97 = *(void *)(v8 + 112);
      uint64_t v98 = v12;
      char v18 = *(unsigned char *)(v8 + 120);
      char v96 = *(unsigned char *)(v8 + 121);
      unsigned int v103 = *(unsigned __int8 *)(v8 + 122);
      uint64_t v19 = *(void *)(v8 + 128);
      uint64_t v102 = *(void *)(v8 + 136);
      swift_bridgeObjectRetain();
      sub_25E746418(v9, v10, &qword_26A704978);
      uint64_t v20 = *v93;
      if (*(void *)(*v93 + 16) && (unint64_t v21 = sub_25E7539F8(v9, v10), (v22 & 1) != 0))
      {
        uint64_t v23 = *(void *)(*(void *)(v20 + 56) + 8 * v21);
        *(void *)(v23 + 24) = v9;
        *(void *)(v23 + 32) = v10;
        *(double *)(v23 + 40) = v11;
        *(void *)(v23 + 48) = v13;
        uint64_t v24 = v13;
        uint64_t v25 = v98;
        *(void *)(v23 + 56) = v98;
        *(void *)(v23 + 64) = v104;
        *(void *)(v23 + 72) = v15;
        *(void *)(v23 + 80) = v16;
        *(void *)(v23 + 88) = v105;
        *(void *)(v23 + 96) = v17;
        uint64_t v26 = v17;
        unint64_t v27 = v97;
        *(void *)(v23 + 104) = v97;
        *(unsigned char *)(v23 + 112) = v18;
        char v28 = v96;
        *(unsigned char *)(v23 + 113) = v96;
        *(unsigned char *)(v23 + 114) = v103;
        *(void *)(v23 + 120) = v19;
        *(void *)(v23 + 128) = v102;
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v100 = v18;
        id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E28]), sel_init);
        objc_msgSend(v29, sel_setValue_, v11);
        uint64_t v30 = self;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26A704960);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = v89;
        *(void *)(v31 + 32) = v29;
        uint64_t aBlock = v31;
        sub_25E75BF40();
        sub_25E711DB8(0, &qword_26A704968);
        id v32 = v29;
        uint64_t v33 = (void *)sub_25E75BF20();
        swift_bridgeObjectRelease();
        uint64_t v34 = swift_allocObject();
        swift_unknownObjectWeakInit();
        unint64_t v35 = (void *)swift_allocObject();
        v35[2] = v34;
        v35[3] = v9;
        v35[4] = v10;
        _OWORD v35[5] = v32;
        uint64_t v112 = sub_25E74A29C;
        uint64_t v113 = v35;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v109 = 1107296256;
        uint64_t v110 = sub_25E7385C4;
        id v111 = &block_descriptor_346;
        unint64_t v36 = _Block_copy(&aBlock);
        uint64_t v99 = v16;
        id v37 = v32;
        swift_release();
        objc_msgSend(v30, sel__createTransformerWithInputAnimatableProperties_presentationValueChangedCallback_, v33, v36);
        _Block_release(v36);

        type metadata accessor for ScanwaveViewController.AnimatablePropertyContext();
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v37;
        *(void *)(v23 + 24) = v9;
        *(void *)(v23 + 32) = v10;
        *(double *)(v23 + 40) = v11;
        *(void *)(v23 + 48) = v13;
        uint64_t v91 = v9;
        uint64_t v92 = v13;
        uint64_t v25 = v98;
        *(void *)(v23 + 56) = v98;
        *(void *)(v23 + 64) = v104;
        *(void *)(v23 + 72) = v15;
        *(void *)(v23 + 80) = v16;
        *(void *)(v23 + 88) = v105;
        *(void *)(v23 + 96) = v17;
        uint64_t v26 = v17;
        unint64_t v27 = v97;
        *(void *)(v23 + 104) = v97;
        *(unsigned char *)(v23 + 112) = v100;
        uint64_t v38 = v10;
        char v28 = v96;
        *(unsigned char *)(v23 + 113) = v96;
        *(unsigned char *)(v23 + 114) = v103;
        *(void *)(v23 + 120) = v19;
        uint64_t v39 = MEMORY[0x263F8EE88];
        *(void *)(v23 + 128) = v102;
        *(void *)(v23 + 136) = v39;
        swift_beginAccess();
        swift_bridgeObjectRetain();
        id v40 = v37;
        char v18 = v100;
        id v41 = v40;
        swift_retain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v106 = *v93;
        *uint64_t v93 = 0x8000000000000000;
        uint64_t v43 = v38;
        uint64_t v24 = v92;
        sub_25E745B28(v23, v91, v43, isUniquelyReferenced_nonNull_native);
        *uint64_t v93 = v106;
        swift_bridgeObjectRelease();
        swift_endAccess();

        uint64_t v16 = v99;
      }
      uint64_t v44 = swift_allocObject();
      *(void *)(v44 + 16) = sub_25E74A2A8;
      *(void *)(v44 + 24) = v23;
      *(void *)(v44 + 32) = v24;
      *(void *)(v44 + 40) = v25;
      *(void *)(v44 + 48) = v104;
      *(void *)(v44 + 56) = v15;
      *(void *)(v44 + 64) = v16;
      *(void *)(v44 + 72) = v105;
      *(void *)(v44 + 80) = v26;
      *(void *)(v44 + 88) = v27;
      *(unsigned char *)(v44 + 96) = v18;
      *(unsigned char *)(v44 + 97) = v28;
      *(unsigned char *)(v44 + 98) = v103;
      *(void *)(v44 + 104) = v19;
      if (v28)
      {
        long long v45 = self;
        uint64_t v112 = (void (*)())sub_25E74BED4;
        uint64_t v113 = (void *)v44;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v109 = 1107296256;
        uint64_t v110 = sub_25E7385C4;
        id v111 = &block_descriptor_353;
        uint64_t v46 = _Block_copy(&aBlock);
        swift_retain_n();
        swift_retain();
        swift_release();
        objc_msgSend(v45, sel__performWithoutRetargetingAnimations_, v46);
        _Block_release(v46);
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release();
        uint64_t v47 = v95;
        if (!v95) {
          goto LABEL_15;
        }
      }
      else
      {
        int v48 = v27;
        unint64_t v101 = HIDWORD(v27);
        uint64_t v49 = v16;
        id v50 = objc_allocWithZone((Class)SUIAFluidBehaviorSettings);
        swift_retain_n();
        uint64_t v51 = v25;
        uint64_t v52 = (char *)objc_msgSend(v50, sel_init);
        objc_msgSend(v52, sel_setDefaultValues);
        id v53 = &v52[OBJC_IVAR___SUIAFluidBehaviorSettings_dampingRatio];
        swift_beginAccess();
        *(void *)id v53 = v24;
        uint64_t v54 = &v52[OBJC_IVAR___SUIAFluidBehaviorSettings_response];
        swift_beginAccess();
        *(void *)uint64_t v54 = v51;
        uint64_t v55 = &v52[OBJC_IVAR___SUIAFluidBehaviorSettings_retargetImpulse];
        swift_beginAccess();
        *(void *)uint64_t v55 = v104;
        char v56 = &v52[OBJC_IVAR___SUIAFluidBehaviorSettings_trackingDampingRatio];
        swift_beginAccess();
        *(void *)char v56 = v15;
        uint64_t v57 = &v52[OBJC_IVAR___SUIAFluidBehaviorSettings_trackingResponse];
        swift_beginAccess();
        *(void *)uint64_t v57 = v49;
        uint64_t v58 = &v52[OBJC_IVAR___SUIAFluidBehaviorSettings_trackingRetargetImpulse];
        swift_beginAccess();
        *(void *)uint64_t v58 = v105;
        if (v18) {
          uint64_t v62 = 0;
        }
        else {
          uint64_t v62 = v101;
        }
        LODWORD(v60) = HIDWORD(v26);
        LODWORD(v59) = v26;
        LODWORD(v61) = v48;
        objc_msgSend(v52, sel_setFrameRateRange_highFrameRateReason_, v62, v59, v60, v61, v89);

        char v63 = self;
        uint64_t v112 = (void (*)())sub_25E74BED4;
        uint64_t v113 = (void *)v44;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v109 = 1107296256;
        uint64_t v110 = sub_25E7385C4;
        id v111 = &block_descriptor_356;
        uint64_t v64 = _Block_copy(&aBlock);
        uint64_t v65 = v52;
        swift_retain();
        swift_release();
        uint64_t v112 = (void (*)())nullsub_1;
        uint64_t v113 = 0;
        uint64_t aBlock = MEMORY[0x263EF8330];
        uint64_t v109 = 1107296256;
        uint64_t v110 = sub_25E731C38;
        id v111 = &block_descriptor_359;
        uint64_t v66 = _Block_copy(&aBlock);
        swift_release();
        objc_msgSend(v63, sel__animateUsingSpringBehavior_tracking_animations_completion_, v65, v103, v64, v66);
        _Block_release(v66);
        _Block_release(v64);
        swift_bridgeObjectRelease();
        swift_release_n();
        swift_release();

        uint64_t v47 = v95;
        if (!v95)
        {
LABEL_15:
          uint64_t result = swift_bridgeObjectRelease();
          uint64_t v3 = v93;
          break;
        }
      }
      uint64_t v95 = v47 - 1;
      uint64_t v7 = v94 + 112;
    }
  }
  int64_t v67 = 0;
  uint64_t v68 = v114;
  uint64_t v70 = v114 + 56;
  uint64_t v69 = *(void *)(v114 + 56);
  uint64_t v71 = 1 << *(unsigned char *)(v114 + 32);
  uint64_t v72 = -1;
  if (v71 < 64) {
    uint64_t v72 = ~(-1 << v71);
  }
  unint64_t v73 = v72 & v69;
  int64_t v74 = (unint64_t)(v71 + 63) >> 6;
  if ((v72 & v69) != 0) {
    goto LABEL_21;
  }
LABEL_22:
  int64_t v77 = v67 + 1;
  if (!__OFADD__(v67, 1))
  {
    if (v77 < v74)
    {
      unint64_t v78 = *(void *)(v70 + 8 * v77);
      ++v67;
      if (v78) {
        goto LABEL_35;
      }
      int64_t v67 = v77 + 1;
      if (v77 + 1 >= v74) {
        return swift_release();
      }
      unint64_t v78 = *(void *)(v70 + 8 * v67);
      if (v78) {
        goto LABEL_35;
      }
      int64_t v67 = v77 + 2;
      if (v77 + 2 >= v74) {
        return swift_release();
      }
      unint64_t v78 = *(void *)(v70 + 8 * v67);
      if (v78)
      {
LABEL_35:
        unint64_t v73 = (v78 - 1) & v78;
        for (unint64_t j = __clz(__rbit64(v78)) + (v67 << 6); ; unint64_t j = v75 | (v67 << 6))
        {
          uint64_t v80 = (uint64_t *)(*(void *)(v68 + 48) + 16 * j);
          uint64_t v82 = *v80;
          uint64_t v81 = v80[1];
          swift_beginAccess();
          unint64_t v83 = sub_25E7539F8(v82, v81);
          if (v84)
          {
            unint64_t v85 = v83;
            int v86 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v87 = *v3;
            uint64_t v107 = *v3;
            uint64_t *v3 = 0x8000000000000000;
            if (!v86)
            {
              sub_25E754A18();
              uint64_t v87 = v107;
            }
            uint64_t v88 = *(void *)(*(void *)(v87 + 56) + 8 * v85);
            sub_25E753BC4(v85, v87);
            uint64_t *v3 = v87;
            swift_bridgeObjectRelease();
            swift_endAccess();
            objc_msgSend(*(id *)(v88 + 16), sel_invalidate);
            uint64_t result = swift_release();
            if (!v73) {
              goto LABEL_22;
            }
          }
          else
          {
            uint64_t result = swift_endAccess();
            if (!v73) {
              goto LABEL_22;
            }
          }
LABEL_21:
          unint64_t v75 = __clz(__rbit64(v73));
          v73 &= v73 - 1;
        }
      }
      int64_t v79 = v77 + 3;
      if (v79 < v74)
      {
        unint64_t v78 = *(void *)(v70 + 8 * v79);
        if (v78)
        {
          int64_t v67 = v79;
          goto LABEL_35;
        }
        while (1)
        {
          int64_t v67 = v79 + 1;
          if (__OFADD__(v79, 1)) {
            goto LABEL_43;
          }
          if (v67 >= v74) {
            return swift_release();
          }
          unint64_t v78 = *(void *)(v70 + 8 * v67);
          ++v79;
          if (v78) {
            goto LABEL_35;
          }
        }
      }
    }
    return swift_release();
  }
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_25E73D44C(uint64_t a1)
{
  sub_25E74A2BC();
  uint64_t result = sub_25E75BFB0();
  int64_t v3 = 0;
  uint64_t v15 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_25E746294(&v14, *(void *)(*(void *)(a1 + 48) + 16 * v10), *(void *)(*(void *)(a1 + 48) + 16 * v10 + 8), &qword_26A704978);
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_25E73D5E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8 = type metadata accessor for ScanwaveViewController.RootComponentUpdate(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v12 = &v32[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (uint64_t *)&v32[-v13];
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x2611E2770](a1 + 16);
  if (v15)
  {
    uint64_t v16 = (unsigned char *)v15;
    uint64_t v17 = v15 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_animatableProperties;
    swift_beginAccess();
    if (*(void *)(*(void *)v17 + 16) && (sub_25E7539F8(a2, a3), (v18 & 1) != 0))
    {
      swift_retain();
      objc_msgSend(a4, sel_presentationValue);
      uint64_t v20 = sub_25E743EA4(v19);
      if (*(void *)(v20 + 16))
      {
        *uint64_t v14 = v20;
        type metadata accessor for ScanwaveCommonEvent();
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        uint64_t v21 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates;
        uint64_t v22 = *(void *)(*(void *)&v16[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates]
                        + 16);
        sub_25E7480EC((uint64_t)v14, (uint64_t)v12, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
        uint64_t v23 = *(void **)&v16[v21];
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v16[v21] = v23;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v23 = (void *)sub_25E744710(0, v23[2] + 1, 1, v23, (uint64_t *)&unk_26A7049E0, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
          *(void *)&v16[v21] = v23;
        }
        unint64_t v25 = v23[2];
        unint64_t v26 = v23[3];
        unint64_t v27 = v25 + 1;
        if (v25 >= v26 >> 1)
        {
          id v29 = v23;
          unint64_t v30 = v23[2];
          size_t v31 = sub_25E744710(v26 > 1, v25 + 1, 1, v29, (uint64_t *)&unk_26A7049E0, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
          unint64_t v25 = v30;
          uint64_t v23 = (void *)v31;
          *(void *)&v16[v21] = v31;
        }
        v23[2] = v27;
        uint64_t v28 = sub_25E748154((uint64_t)v12, (uint64_t)v23+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * v25, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
        if ((v16[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate] & 1) == 0
          && !v22)
        {
          sub_25E73BCD8(v28);
        }
        swift_release();

        sub_25E7481BC((uint64_t)v14, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
      }
      else
      {

        swift_release();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
    }
  }
}

uint64_t sub_25E73D90C(uint64_t a1)
{
  uint64_t v3 = swift_allocObject();
  *(unsigned char *)(v3 + 16) = 2;
  uint64_t v4 = swift_allocObject();
  *(unsigned char *)(v4 + 16) = 0;
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v3;
  v5[4] = v1;
  v5[5] = a1;
  swift_retain();
  swift_retain();
  id v6 = v1;
  swift_bridgeObjectRetain();
  sub_25E743B74((uint64_t)sub_25E74A218, (uint64_t)v5);
  swift_release();
  swift_beginAccess();
  *(unsigned char *)(v4 + 16) = 1;
  swift_beginAccess();
  int v7 = *(unsigned __int8 *)(v3 + 16);
  if (v7 == 2)
  {
    uint64_t v8 = *(void *)(a1 + 16);
    uint64_t v9 = MEMORY[0x263F8EE78];
    if (v8)
    {
      id v32 = v6;
      swift_bridgeObjectRetain();
      uint64_t v10 = (unsigned char *)(a1 + 48);
      uint64_t v11 = MEMORY[0x263F8EE78];
      do
      {
        if ((*v10 & 1) == 0)
        {
          long long v33 = *((_OWORD *)v10 - 1);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_25E75A660(0, *(void *)(v11 + 16) + 1, 1);
          }
          unint64_t v13 = *(void *)(v11 + 16);
          unint64_t v12 = *(void *)(v11 + 24);
          if (v13 >= v12 >> 1) {
            sub_25E75A660((char *)(v12 > 1), v13 + 1, 1);
          }
          *(void *)(v11 + 16) = v13 + 1;
          uint64_t v14 = v11 + 24 * v13;
          *(_OWORD *)(v14 + 32) = v33;
          *(unsigned char *)(v14 + 48) = 0;
        }
        v10 += 24;
        --v8;
      }
      while (v8);
      swift_bridgeObjectRelease();
      id v6 = v32;
      uint64_t v9 = MEMORY[0x263F8EE78];
      int64_t v24 = *(void *)(v11 + 16);
      if (v24) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v11 = MEMORY[0x263F8EE78];
      int64_t v24 = *(void *)(MEMORY[0x263F8EE78] + 16);
      if (v24)
      {
LABEL_18:
        uint64_t v37 = v9;
        sub_25E75A680(0, v24, 0);
        uint64_t v25 = v37;
        unint64_t v26 = *(void *)(v37 + 16);
        uint64_t v27 = 32;
        do
        {
          long long v28 = *(_OWORD *)(v11 + v27);
          unint64_t v29 = *(void *)(v37 + 24);
          if (v26 >= v29 >> 1)
          {
            long long v35 = *(_OWORD *)(v11 + v27);
            sub_25E75A680((char *)(v29 > 1), v26 + 1, 1);
            long long v28 = v35;
          }
          *(void *)(v37 + 16) = v26 + 1;
          *(_OWORD *)(v37 + 16 * v26 + 32) = v28;
          v27 += 24;
          ++v26;
          --v24;
        }
        while (v24);
        swift_release();
        goto LABEL_25;
      }
    }
    swift_release();
    uint64_t v25 = MEMORY[0x263F8EE78];
LABEL_25:
    uint64_t v30 = sub_25E7498E0(v25, (void (*)(void))sub_25E734580, (uint64_t)&type metadata for ScanwaveCommonAction.UpdateOutputModelCallbackID, &qword_26A704958);
    swift_bridgeObjectRelease();
    uint64_t v22 = v30;
    char v23 = 0;
    goto LABEL_26;
  }
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = MEMORY[0x263F8EE78];
  if (v15)
  {
    uint64_t v36 = MEMORY[0x263F8EE78];
    sub_25E75A680(0, v15, 0);
    uint64_t v16 = v36;
    uint64_t v17 = (long long *)(a1 + 32);
    unint64_t v18 = *(void *)(v36 + 16);
    do
    {
      long long v19 = *v17;
      unint64_t v20 = *(void *)(v36 + 24);
      if (v18 >= v20 >> 1)
      {
        long long v34 = *v17;
        sub_25E75A680((char *)(v20 > 1), v18 + 1, 1);
        long long v19 = v34;
      }
      *(void *)(v36 + 16) = v18 + 1;
      *(_OWORD *)(v36 + 16 * v18 + 32) = v19;
      uint64_t v17 = (long long *)((char *)v17 + 24);
      ++v18;
      --v15;
    }
    while (v15);
  }
  uint64_t v21 = sub_25E7498E0(v16, (void (*)(void))sub_25E734580, (uint64_t)&type metadata for ScanwaveCommonAction.UpdateOutputModelCallbackID, &qword_26A704958);
  swift_bridgeObjectRelease();
  uint64_t v22 = v21;
  char v23 = v7 & 1;
LABEL_26:
  sub_25E73DD00(v22, v23, (uint64_t)v6);
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_25E73DD00(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ScanwaveViewController.RootComponentUpdate(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  unint64_t v13 = (char *)&v21 - v12;
  if (*(void *)(a1 + 16))
  {
    *(void *)unint64_t v13 = a1;
    v13[8] = a2 & 1;
    type metadata accessor for ScanwaveCommonEvent();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    uint64_t v14 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates;
    uint64_t v15 = *(void *)(*(void *)(a3
                                + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates)
                    + 16);
    sub_25E7480EC((uint64_t)v13, (uint64_t)v10, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    uint64_t v16 = *(void **)(a3 + v14);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(a3 + v14) = v16;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v16 = (void *)sub_25E744710(0, v16[2] + 1, 1, v16, (uint64_t *)&unk_26A7049E0, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
      *(void *)(a3 + v14) = v16;
    }
    unint64_t v19 = v16[2];
    unint64_t v18 = v16[3];
    if (v19 >= v18 >> 1)
    {
      uint64_t v16 = (void *)sub_25E744710(v18 > 1, v19 + 1, 1, v16, (uint64_t *)&unk_26A7049E0, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
      *(void *)(a3 + v14) = v16;
    }
    v16[2] = v19 + 1;
    uint64_t v20 = sub_25E748154((uint64_t)v10, (uint64_t)v16+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(void *)(v7 + 72) * v19, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    if ((*(unsigned char *)(a3 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate) & 1) == 0
      && !v15)
    {
      sub_25E73BCD8(v20);
    }
    return sub_25E7481BC((uint64_t)v13, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
  }
  return result;
}

uint64_t sub_25E73DF68(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_beginAccess();
  if ((*(unsigned char *)(a2 + 16) & 1) == 0)
  {
    uint64_t result = swift_beginAccess();
    *(unsigned char *)(a3 + 16) = a1 & 1;
    return result;
  }
  uint64_t v10 = *(void *)(a5 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  if (v10)
  {
    uint64_t v25 = a4;
    swift_bridgeObjectRetain();
    uint64_t v12 = (unsigned char *)(a5 + 48);
    uint64_t v13 = MEMORY[0x263F8EE78];
    do
    {
      if (*v12 == 1)
      {
        long long v26 = *((_OWORD *)v12 - 1);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_25E75A660(0, *(void *)(v13 + 16) + 1, 1);
        }
        unint64_t v15 = *(void *)(v13 + 16);
        unint64_t v14 = *(void *)(v13 + 24);
        if (v15 >= v14 >> 1) {
          sub_25E75A660((char *)(v14 > 1), v15 + 1, 1);
        }
        *(void *)(v13 + 16) = v15 + 1;
        uint64_t v16 = v13 + 24 * v15;
        *(_OWORD *)(v16 + 32) = v26;
        *(unsigned char *)(v16 + 48) = 1;
      }
      v12 += 24;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    a4 = v25;
    uint64_t v11 = MEMORY[0x263F8EE78];
    int64_t v18 = *(void *)(v13 + 16);
    if (v18) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    int64_t v18 = *(void *)(MEMORY[0x263F8EE78] + 16);
    if (v18)
    {
LABEL_13:
      uint64_t v28 = v11;
      sub_25E75A680(0, v18, 0);
      uint64_t v19 = v28;
      unint64_t v20 = *(void *)(v28 + 16);
      uint64_t v21 = 32;
      do
      {
        long long v22 = *(_OWORD *)(v13 + v21);
        unint64_t v23 = *(void *)(v28 + 24);
        if (v20 >= v23 >> 1)
        {
          long long v27 = *(_OWORD *)(v13 + v21);
          sub_25E75A680((char *)(v23 > 1), v20 + 1, 1);
          long long v22 = v27;
        }
        *(void *)(v28 + 16) = v20 + 1;
        *(_OWORD *)(v28 + 16 * v20 + 32) = v22;
        v21 += 24;
        ++v20;
        --v18;
      }
      while (v18);
      swift_release();
      goto LABEL_20;
    }
  }
  swift_release();
  uint64_t v19 = MEMORY[0x263F8EE78];
LABEL_20:
  uint64_t v24 = sub_25E7498E0(v19, (void (*)(void))sub_25E734580, (uint64_t)&type metadata for ScanwaveCommonAction.UpdateOutputModelCallbackID, &qword_26A704958);
  swift_bridgeObjectRelease();
  sub_25E73DD00(v24, a1 & 1, a4);
  return swift_bridgeObjectRelease();
}

void sub_25E73E1DC(uint64_t a1, uint64_t a2)
{
  sub_25E74A4CC(a1, (uint64_t)v135, &qword_26A704908);
  if (sub_25E74A100((uint64_t)v135) != 1)
  {
    long long v184 = v135[6];
    long long v185 = v135[7];
    long long v186 = v135[8];
    long long v187 = v135[9];
    long long v180 = v135[2];
    long long v181 = v135[3];
    long long v182 = v135[4];
    long long v183 = v135[5];
    long long v178 = v135[0];
    long long v179 = v135[1];
    uint64_t v116 = v137;
    uint64_t v117 = v136;
    uint64_t v114 = v139;
    uint64_t v115 = v138;
    uint64_t v113 = v140;
    uint64_t v118 = v142;
    uint64_t v119 = v143;
    char v120 = v144;
    unsigned __int8 v177 = v145;
    char v176 = v146;
    uint64_t v7 = v147;
    uint64_t v6 = v148;
    uint64_t v127 = v149;
    char v175 = v158;
    char v174 = v159;
    uint64_t v8 = v160;
    uint64_t v9 = v161;
    long long v170 = v164;
    long long v171 = v165;
    long long v172 = v166;
    uint64_t v173 = v167;
    long long v168 = v162;
    long long v169 = v163;
    uint64_t v10 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationBackdropView;
    uint64_t v11 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationBackdropView];
    char v130 = v157;
    uint64_t v128 = v155;
    uint64_t v129 = v156;
    uint64_t v125 = v151;
    uint64_t v126 = v150;
    uint64_t v123 = v153;
    uint64_t v124 = v152;
    uint64_t v122 = v154;
    uint64_t v112 = v141;
    if (v11)
    {
      uint64_t v12 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationBackdropView];
LABEL_11:
      uint64_t v42 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationMaskView;
      uint64_t v43 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationMaskView];
      if (v43)
      {
        id v44 = v11;
        id v111 = v43;
LABEL_15:
        id v63 = v43;
        id v132 = v12;
        id v64 = objc_msgSend(v12, sel_layer);
        self;
        uint64_t v65 = swift_dynamicCastObjCClassUnconditional();
        long long v190 = v170;
        long long v191 = v171;
        long long v192 = v172;
        uint64_t v193 = v173;
        long long v188 = v168;
        long long v189 = v169;
        uint64_t v66 = swift_allocObject();
        id v134 = (id)v65;
        *(void *)(v66 + 16) = v65;
        swift_beginAccess();
        id v67 = v64;
        atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
        swift_endAccess();
        uint64_t v68 = *(void *)(a2 + 48);
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v215[0] = *(void *)(a2 + 40);
        *(void *)(a2 + 40) = 0x8000000000000000;
        sub_25E745C70(0x7366664F65756C62, 0xEA00000000007465, v68, isUniquelyReferenced_nonNull_native);
        *(void *)(a2 + 40) = *(void *)&v215[0];
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v70 = swift_allocObject();
        *(void *)(v70 + 16) = a2;
        *(void *)(v70 + 24) = v68;
        sub_25E74A4CC((uint64_t)&v188, (uint64_t)v194, &qword_26A704930);
        char v71 = BYTE2(v192);
        uint64_t v72 = swift_allocObject();
        *(void *)(v72 + 16) = sub_25E74A11C;
        *(void *)(v72 + 24) = v66;
        long long v73 = v191;
        *(_OWORD *)(v72 + 64) = v190;
        *(_OWORD *)(v72 + 80) = v73;
        *(_OWORD *)(v72 + 96) = v192;
        *(void *)(v72 + 112) = v193;
        long long v74 = v189;
        *(_OWORD *)(v72 + 32) = v188;
        *(_OWORD *)(v72 + 48) = v74;
        sub_25E74A4CC((uint64_t)v194, (uint64_t)v215, &qword_26A704930);
        if (v217 == 1)
        {
          unint64_t v75 = self;
          *(void *)&long long v197 = sub_25E74BEE0;
          *((void *)&v197 + 1) = v72;
          *(void *)&long long aBlock = MEMORY[0x263EF8330];
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v196 = sub_25E7385C4;
          *((void *)&v196 + 1) = &block_descriptor_280;
          uint64_t v76 = _Block_copy(&aBlock);
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_release();
          objc_msgSend(v75, sel__performWithoutRetargetingAnimations_, v76);
          _Block_release(v76);
          sub_25E754D70(0, a2, v68);
          int64_t v77 = sub_25E74A150;
        }
        else
        {
          v210[2] = v215[2];
          v210[3] = v215[3];
          char v211 = v216;
          v210[1] = v215[1];
          v210[0] = v215[0];
          swift_retain_n();
          swift_retain();
          sub_25E731EC4((uint64_t *)v210, v71, (uint64_t)sub_25E74BEE0, v72, (uint64_t)sub_25E74C05C, v70);
          int64_t v77 = sub_25E74BED0;
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        char v78 = v176;
        int v79 = v177;
        uint64_t v80 = swift_allocObject();
        *(void *)(v80 + 16) = v134;
        swift_beginAccess();
        id v110 = v67;
        atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
        swift_endAccess();
        uint64_t v81 = *(void *)(a2 + 48);
        swift_beginAccess();
        char v82 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v212[0] = *(void *)(a2 + 40);
        *(void *)(a2 + 40) = 0x8000000000000000;
        sub_25E745C70(0x7366664F65756C62, 0xEA00000000007465, v81, v82);
        *(void *)(a2 + 40) = *(void *)&v212[0];
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v83 = swift_allocObject();
        *(void *)(v83 + 16) = a2;
        *(void *)(v83 + 24) = v81;
        LOBYTE(v212[0]) = v79;
        uint64_t v84 = swift_allocObject();
        *(void *)(v84 + 16) = v77;
        *(void *)(v84 + 24) = v80;
        *(void *)(v84 + 32) = v117;
        *(void *)(v84 + 40) = v116;
        *(void *)(v84 + 48) = v115;
        *(void *)(v84 + 56) = v114;
        *(void *)(v84 + 64) = v113;
        *(void *)(v84 + 72) = v112;
        *(void *)(v84 + 80) = v118;
        *(void *)(v84 + 88) = v119;
        *(unsigned char *)(v84 + 96) = v120;
        *(unsigned char *)(v84 + 97) = v212[0];
        *(unsigned char *)(v84 + 98) = v78;
        *(void *)(v84 + 104) = v7;
        *(void *)(v84 + 112) = v6;
        if (v79 == 1)
        {
          unint64_t v85 = self;
          *(void *)&long long v197 = sub_25E74BEE0;
          *((void *)&v197 + 1) = v84;
          *(void *)&long long aBlock = MEMORY[0x263EF8330];
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v196 = sub_25E7385C4;
          *((void *)&v196 + 1) = &block_descriptor_294;
          int v86 = _Block_copy(&aBlock);
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_release();
          objc_msgSend(v85, sel__performWithoutRetargetingAnimations_, v86);
          _Block_release(v86);
          sub_25E754D70(0, a2, v81);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v87 = sub_25E74A184;
        }
        else
        {
          v208[0] = v117;
          v208[1] = v116;
          v208[2] = v115;
          v208[3] = v114;
          v208[4] = v113;
          v208[5] = v112;
          v208[6] = v118;
          v208[7] = v119;
          char v209 = v120 & 1;
          swift_retain_n();
          swift_retain();
          sub_25E731EC4(v208, v78, (uint64_t)sub_25E74BEE0, v84, (uint64_t)sub_25E74C05C, v83);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          uint64_t v87 = sub_25E74BECC;
        }
        char v88 = v174;
        char v89 = v175;
        uint64_t v90 = swift_allocObject();
        *(void *)(v90 + 16) = v134;
        swift_beginAccess();
        id v121 = v110;
        atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
        swift_endAccess();
        uint64_t v91 = *(void *)(a2 + 48);
        swift_beginAccess();
        char v92 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)&v212[0] = *(void *)(a2 + 40);
        *(void *)(a2 + 40) = 0x8000000000000000;
        sub_25E745C70(0x66664F6E65657267, 0xEB00000000746573, v91, v92);
        *(void *)(a2 + 40) = *(void *)&v212[0];
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v93 = swift_allocObject();
        *(void *)(v93 + 16) = a2;
        *(void *)(v93 + 24) = v91;
        LOBYTE(v212[0]) = v89;
        uint64_t v94 = swift_allocObject();
        *(void *)(v94 + 16) = v87;
        *(void *)(v94 + 24) = v90;
        *(void *)(v94 + 32) = v127;
        *(void *)(v94 + 40) = v126;
        *(void *)(v94 + 48) = v125;
        *(void *)(v94 + 56) = v124;
        *(void *)(v94 + 64) = v123;
        *(void *)(v94 + 72) = v122;
        *(void *)(v94 + 80) = v128;
        *(void *)(v94 + 88) = v129;
        *(unsigned char *)(v94 + 96) = v130;
        *(unsigned char *)(v94 + 97) = v212[0];
        *(unsigned char *)(v94 + 98) = v88;
        *(void *)(v94 + 104) = v8;
        *(void *)(v94 + 112) = v9;
        if (v89)
        {
          uint64_t v95 = self;
          *(void *)&long long v197 = sub_25E74BEE0;
          *((void *)&v197 + 1) = v94;
          *(void *)&long long aBlock = MEMORY[0x263EF8330];
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v196 = sub_25E7385C4;
          *((void *)&v196 + 1) = &block_descriptor_308;
          char v96 = _Block_copy(&aBlock);
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_release();
          objc_msgSend(v95, sel__performWithoutRetargetingAnimations_, v96);
          _Block_release(v96);
          sub_25E754D70(0, a2, v91);
        }
        else
        {
          v206[0] = v127;
          v206[1] = v126;
          v206[2] = v125;
          v206[3] = v124;
          v206[4] = v123;
          v206[5] = v122;
          v206[6] = v128;
          v206[7] = v129;
          char v207 = v130 & 1;
          swift_retain_n();
          swift_retain();
          sub_25E731EC4(v206, v88, (uint64_t)sub_25E74BEE0, v94, (uint64_t)sub_25E74C05C, v93);
        }
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        unint64_t v97 = (void *)sub_25E75BE50();
        uint64_t v98 = (void *)sub_25E75BEA0();
        objc_msgSend(v134, sel_setValue_forKeyPath_, v97, v98);

        long long v197 = v180;
        long long v198 = v181;
        long long v199 = v182;
        long long v196 = v179;
        long long aBlock = v178;
        uint64_t v99 = swift_allocObject();
        *(void *)(v99 + 16) = v111;
        swift_beginAccess();
        id v100 = v111;
        atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
        swift_endAccess();
        uint64_t v101 = *(void *)(a2 + 48);
        swift_beginAccess();
        char v102 = swift_isUniquelyReferenced_nonNull_native();
        v200[0] = *(void *)(a2 + 40);
        *(void *)(a2 + 40) = 0x8000000000000000;
        sub_25E745C70(0x6168706C61, 0xE500000000000000, v101, v102);
        *(void *)(a2 + 40) = v200[0];
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v103 = swift_allocObject();
        *(void *)(v103 + 16) = a2;
        *(void *)(v103 + 24) = v101;
        sub_25E74A4CC((uint64_t)&aBlock, (uint64_t)v200, &qword_26A704930);
        char v104 = BYTE2(v199);
        uint64_t v105 = swift_allocObject();
        *(void *)(v105 + 16) = sub_25E74C000;
        *(void *)(v105 + 24) = v99;
        long long v106 = v198;
        *(_OWORD *)(v105 + 64) = v197;
        *(_OWORD *)(v105 + 80) = v106;
        *(_OWORD *)(v105 + 96) = v199;
        long long v107 = v196;
        *(_OWORD *)(v105 + 32) = aBlock;
        *(_OWORD *)(v105 + 48) = v107;
        sub_25E74A4CC((uint64_t)v200, (uint64_t)v212, &qword_26A704930);
        if (v214 == 1)
        {
          uint64_t v108 = self;
          *(void *)&long long v203 = sub_25E74BED4;
          *((void *)&v203 + 1) = v105;
          *(void *)&long long v201 = MEMORY[0x263EF8330];
          *((void *)&v201 + 1) = 1107296256;
          *(void *)&long long v202 = sub_25E7385C4;
          *((void *)&v202 + 1) = &block_descriptor_322;
          uint64_t v109 = _Block_copy(&v201);
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_release();
          objc_msgSend(v108, sel__performWithoutRetargetingAnimations_, v109);
          _Block_release(v109);
          sub_25E754D70(0, a2, v101);
        }
        else
        {
          long long v203 = v212[2];
          long long v204 = v212[3];
          char v205 = v213;
          long long v202 = v212[1];
          long long v201 = v212[0];
          swift_retain_n();
          swift_retain();
          sub_25E731EC4((uint64_t *)&v201, v104, (uint64_t)sub_25E74BED4, v105, (uint64_t)sub_25E74C05C, v103);
        }

        swift_release();
        swift_release();
        swift_release();

        swift_release();
        return;
      }
      uint64_t v45 = v6;
      uint64_t v46 = v9;
      id v47 = v11;
      objc_msgSend(v12, sel_bounds);
      uint64_t v52 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_mainMaskView];
      if (v52)
      {
        double v53 = v48;
        double v54 = v49;
        double v55 = v50;
        double v56 = v51;
        id v57 = objc_allocWithZone(MEMORY[0x263F83078]);
        id v58 = v52;
        id v59 = objc_msgSend(v57, sel_initWithFrame_, v53, v54, v55, v56);
        objc_msgSend(v59, sel_setMatchesPosition_, 1);
        objc_msgSend(v59, sel_setMatchesAlpha_, 1);
        objc_msgSend(v59, sel_setMatchesTransform_, 1);
        objc_msgSend(v59, sel_setSourceView_, v58);
        objc_msgSend(v59, sel_setHidesSourceView_, 1);

        double v60 = *(void **)&v2[v42];
        *(void *)&v2[v42] = v59;
        id v61 = v59;

        id v62 = v12;
        objc_msgSend(v62, sel_setMaskView_, v61);

        id v111 = v61;
        uint64_t v43 = 0;
        uint64_t v9 = v46;
        uint64_t v6 = v45;
        goto LABEL_15;
      }
LABEL_31:
      sub_25E75C120();
      __break(1u);
      return;
    }
    uint64_t v13 = v161;
    id v14 = objc_msgSend(v2, sel_view);
    if (v14)
    {
      unint64_t v15 = v14;
      objc_msgSend(v14, sel_bounds);
      double v17 = v16;
      double v19 = v18;
      double v21 = v20;
      double v23 = v22;

      id v24 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BackdropView()), sel_initWithFrame_, v17, v19, v21, v23);
      uint64_t v25 = *(void **)&v2[v10];
      *(void *)&v2[v10] = v24;
      id v26 = v24;

      uint64_t v131 = v26;
      id v133 = objc_msgSend(v26, sel_layer);
      self;
      long long v27 = (void *)swift_dynamicCastObjCClassUnconditional();
      objc_msgSend(v27, sel_setScale_, 0.75);
      objc_msgSend(v27, sel_setAllowsGroupBlending_, 0);
      objc_msgSend(v27, sel_setMarginWidth_, 25.0);
      sub_25E75BEB0();
      id v28 = objc_allocWithZone(MEMORY[0x263F157C8]);
      unint64_t v29 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v30 = objc_msgSend(v28, sel_initWithType_, v29);

      sub_25E75BEB0();
      id v31 = objc_allocWithZone(MEMORY[0x263F157C8]);
      id v32 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v33 = objc_msgSend(v31, sel_initWithType_, v32);

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_25E75FB90;
      uint64_t v35 = sub_25E711DB8(0, &qword_26A704928);
      *(void *)(v34 + 32) = v30;
      *(void *)(v34 + 88) = v35;
      *(void *)(v34 + 56) = v35;
      *(void *)(v34 + 64) = v33;
      id v36 = v133;
      id v37 = v30;
      id v38 = v33;
      uint64_t v39 = (void *)sub_25E75BF20();
      swift_bridgeObjectRelease();
      objc_msgSend(v27, sel_setFilters_, v39);

      id v40 = objc_msgSend(v2, sel_view);
      if (v40)
      {
        id v41 = v40;
        uint64_t v12 = v131;
        objc_msgSend(v40, sel_addSubview_, v131);

        uint64_t v9 = v13;
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationBackdropView];
  if (v4)
  {
    *(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationBackdropView] = 0;
    objc_msgSend(v4, sel_removeFromSuperview);
  }
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationMaskView];
  if (v5)
  {
    *(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationMaskView] = 0;
    objc_msgSend(v5, sel_removeFromSuperview);
  }
}

void sub_25E73F488(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)sub_25E75C000();
  id v4 = (id)sub_25E75BEA0();
  objc_msgSend(a2, sel_setValue_forKeyPath_, v3, v4);
}

void sub_25E73F50C(uint64_t a1, uint64_t a2)
{
  sub_25E74A4CC(a1, (uint64_t)v78, &qword_26A704900);
  if ((unint64_t)BYTE2(v79) << 16 != 0x20000)
  {
    long long v82 = v78[2];
    long long v83 = v78[3];
    long long v84 = v79;
    long long v80 = v78[0];
    long long v81 = v78[1];
    uint64_t v6 = &selRef__setDonutGradientLocations_;
    uint64_t v7 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightView;
    uint64_t v8 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightView];
    if (v8)
    {
      id v9 = *(id *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightView];
LABEL_11:
      uint64_t v42 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightMaskView;
      uint64_t v43 = *(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightMaskView];
      id v44 = v8;
      if (v43)
      {
LABEL_14:
        id v59 = [v9 v6[144]];
        double v60 = (void *)sub_25E75BE50();
        id v61 = (void *)sub_25E75BEA0();
        objc_msgSend(v59, sel_setValue_forKeyPath_, v60, v61);

        id v62 = [v9 v6[144]];
        id v63 = (void *)sub_25E75BE50();
        id v64 = (void *)sub_25E75BEA0();
        objc_msgSend(v62, sel_setValue_forKeyPath_, v63, v64);

        long long v87 = v82;
        long long v88 = v83;
        long long v89 = v84;
        long long v85 = v80;
        long long v86 = v81;
        uint64_t v65 = swift_allocObject();
        *(void *)(v65 + 16) = v9;
        swift_beginAccess();
        id v66 = v9;
        atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
        swift_endAccess();
        uint64_t v67 = *(void *)(a2 + 48);
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v90[0] = *(void *)(a2 + 40);
        *(void *)(a2 + 40) = 0x8000000000000000;
        sub_25E745C70(0x6168706C61, 0xE500000000000000, v67, isUniquelyReferenced_nonNull_native);
        *(void *)(a2 + 40) = v90[0];
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v69 = swift_allocObject();
        *(void *)(v69 + 16) = a2;
        *(void *)(v69 + 24) = v67;
        sub_25E74A4CC((uint64_t)&v85, (uint64_t)v90, &qword_26A704930);
        char v70 = BYTE2(v89);
        uint64_t v71 = swift_allocObject();
        *(void *)(v71 + 16) = sub_25E74C000;
        *(void *)(v71 + 24) = v65;
        long long v72 = v88;
        *(_OWORD *)(v71 + 64) = v87;
        *(_OWORD *)(v71 + 80) = v72;
        *(_OWORD *)(v71 + 96) = v89;
        long long v73 = v86;
        *(_OWORD *)(v71 + 32) = v85;
        *(_OWORD *)(v71 + 48) = v73;
        sub_25E74A4CC((uint64_t)v90, (uint64_t)v96, &qword_26A704930);
        if (v98)
        {
          long long v74 = self;
          *(void *)&long long v93 = sub_25E74BED4;
          *((void *)&v93 + 1) = v71;
          *(void *)&long long aBlock = MEMORY[0x263EF8330];
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v92 = sub_25E7385C4;
          *((void *)&v92 + 1) = &block_descriptor_266;
          unint64_t v75 = _Block_copy(&aBlock);
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_release();
          objc_msgSend(v74, sel__performWithoutRetargetingAnimations_, v75);
          _Block_release(v75);
          sub_25E754D70(0, a2, v67);
        }
        else
        {
          long long v93 = v96[2];
          long long v94 = v96[3];
          char v95 = v97;
          long long aBlock = v96[0];
          long long v92 = v96[1];
          swift_retain_n();
          swift_retain();
          sub_25E731EC4((uint64_t *)&aBlock, v70, (uint64_t)sub_25E74BED4, v71, (uint64_t)sub_25E74C05C, v69);
        }
        swift_release();
        swift_release();
        swift_release();

        swift_release();
        return;
      }
      objc_msgSend(v9, sel_bounds);
      double v49 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_mainMaskView];
      if (v49)
      {
        double v50 = v45;
        double v51 = v46;
        double v52 = v47;
        double v53 = v48;
        id v54 = objc_allocWithZone(MEMORY[0x263F83078]);
        id v55 = v49;
        id v56 = objc_msgSend(v54, sel_initWithFrame_, v50, v51, v52, v53);
        objc_msgSend(v56, sel_setMatchesPosition_, 1);
        objc_msgSend(v56, sel_setMatchesAlpha_, 1);
        objc_msgSend(v56, sel_setMatchesTransform_, 1);
        objc_msgSend(v56, sel_setSourceView_, v55);
        objc_msgSend(v56, sel_setHidesSourceView_, 1);

        id v57 = *(void **)&v2[v42];
        *(void *)&v2[v42] = v56;
        id v58 = v56;

        objc_msgSend(v9, sel_setMaskView_, v58);
        goto LABEL_14;
      }
LABEL_21:
      sub_25E75C120();
      __break(1u);
      return;
    }
    id v10 = objc_msgSend(v2, sel_view);
    if (v10)
    {
      uint64_t v11 = v10;
      objc_msgSend(v10, sel_bounds);
      double v13 = v12;
      double v15 = v14;
      double v17 = v16;
      double v19 = v18;

      id v20 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for ShockwaveIntelligenceSystemLightView()), sel_initWithFrame_preferringAudioReactivity_, 0, v13, v15, v17, v19);
      double v21 = *(void **)&v2[v7];
      *(void *)&v2[v7] = v20;
      id v9 = v20;

      sub_25E75BEB0();
      id v22 = objc_allocWithZone(MEMORY[0x263F157C8]);
      double v23 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v76 = objc_msgSend(v22, sel_initWithType_, v23);

      sub_25E75BEB0();
      id v24 = objc_allocWithZone(MEMORY[0x263F157C8]);
      uint64_t v25 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v26 = objc_msgSend(v24, sel_initWithType_, v25);

      sub_25E75BEB0();
      id v27 = objc_allocWithZone(MEMORY[0x263F157C8]);
      id v28 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v29 = objc_msgSend(v27, sel_initWithType_, v28);

      id v30 = objc_msgSend(v9, sel_layer);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = xmmword_25E7600A0;
      uint64_t v32 = sub_25E711DB8(0, &qword_26A704928);
      *(void *)(v31 + 32) = v76;
      *(void *)(v31 + 56) = v32;
      *(void *)(v31 + 64) = v26;
      *(void *)(v31 + 120) = v32;
      *(void *)(v31 + 88) = v32;
      *(void *)(v31 + 96) = v29;
      id v77 = v76;
      id v33 = v26;
      id v34 = v29;
      uint64_t v35 = (void *)sub_25E75BF20();
      swift_bridgeObjectRelease();
      objc_msgSend(v30, sel_setFilters_, v35);

      id v36 = objc_msgSend(v9, sel_layer);
      sub_25E75BEB0();
      id v37 = objc_allocWithZone(MEMORY[0x263F157C8]);
      id v38 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v39 = objc_msgSend(v37, sel_initWithType_, v38);

      objc_msgSend(v36, sel_setCompositingFilter_, v39);
      id v40 = objc_msgSend(v2, sel_view);
      if (v40)
      {
        id v41 = v40;
        objc_msgSend(v40, sel_addSubview_, v9);

        uint64_t v6 = &selRef__setDonutGradientLocations_;
        uint64_t v8 = 0;
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_21;
  }
  id v4 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightView];
  if (v4)
  {
    *(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightView] = 0;
    objc_msgSend(v4, sel_removeFromSuperview);
  }
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightMaskView];
  if (v5)
  {
    *(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightMaskView] = 0;
    objc_msgSend(v5, sel_removeFromSuperview);
  }
}

void sub_25E73FE3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v4 = v3;
  id v8 = objc_msgSend(v4, sel_view);
  if (!v8)
  {
    __break(1u);
    goto LABEL_48;
  }
  id v9 = v8;
  objc_msgSend(v8, sel_bounds);
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  double v17 = v16;

  sub_25E74A4CC(a1, (uint64_t)v230, &qword_26A7048F0);
  double v18 = &qword_26A704000;
  if (sub_25E749FB0((uint64_t)v230) == 1)
  {
    sub_25E74A4CC(a2, (uint64_t)v229, &qword_26A7048F8);
    if ((unint64_t)v229[66] << 16 == 0x20000)
    {
      double v21 = *(void **)&v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_mainMaskView];
      if (v21)
      {
        *(void *)&v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_mainMaskView] = 0;
        objc_msgSend(v21, sel_removeFromSuperview);
      }
      goto LABEL_14;
    }
  }
  uint64_t v22 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_mainMaskView;
  if (!*(void *)&v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_mainMaskView])
  {
    id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, v11, v13, v15, v17);
    id v24 = *(void **)&v4[v22];
    *(void *)&v4[v22] = v23;
    id v25 = v23;

    id v26 = objc_msgSend(v4, sel_view);
    if (v26)
    {
      id v27 = v26;
      objc_msgSend(v26, sel_insertSubview_atIndex_, v25, 0);

      double v18 = &qword_26A704000;
      goto LABEL_9;
    }
LABEL_48:
    __break(1u);
    return;
  }
LABEL_9:
  sub_25E74A4CC(a1, (uint64_t)v182, &qword_26A7048F0);
  if (sub_25E749FB0((uint64_t)v182) == 1) {
    goto LABEL_14;
  }
  long long v225 = v182[6];
  long long v226 = v182[7];
  long long v227 = v182[8];
  uint64_t v228 = v183;
  long long v221 = v182[2];
  long long v222 = v182[3];
  long long v223 = v182[4];
  long long v224 = v182[5];
  long long v219 = v182[0];
  long long v220 = v182[1];
  double v20 = v184;
  double v29 = *((double *)&v185 + 1);
  double v19 = *(double *)&v185;
  double v28 = v186;
  long long v216 = v189;
  long long v217 = v190;
  uint64_t v218 = v191;
  long long v214 = v187;
  long long v215 = v188;
  double v30 = v192;
  double v31 = v193;
  long long v204 = v194;
  long long v205 = v195;
  long long v208 = v198;
  long long v209 = v199;
  long long v206 = v196;
  long long v207 = v197;
  long long v212 = v202;
  long long v213 = v203;
  long long v210 = v200;
  long long v211 = v201;
  uint64_t v32 = *(void **)&v4[v22];
  if (!v32)
  {
LABEL_14:
    double v48 = *(void **)&v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_circleMaskView];
    if (v48)
    {
      *(void *)&v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_circleMaskView] = 0;
      objc_msgSend(v48, sel_removeFromSuperview, v19, v20);
    }
    goto LABEL_32;
  }
  long long v171 = v32;
  uint64_t v172 = a2;
  uint64_t v33 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_circleMaskView;
  id v34 = *(void **)&v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_circleMaskView];
  if (v34)
  {
    long long v245 = v225;
    long long v246 = v226;
    long long v247 = v227;
    *(void *)&long long v248 = v228;
    long long v244 = v224;
    *((double *)&v248 + 1) = v184;
    long long v249 = v185;
    double v250 = v186;
    uint64_t v35 = swift_allocObject();
    *(void *)(v35 + 16) = v34;
    swift_beginAccess();
    id v174 = v34;
    id v36 = v32;
    atomic_fetch_add_explicit((atomic_ullong *volatile)(a3 + 48), 1uLL, memory_order_relaxed);
    swift_endAccess();
    uint64_t v37 = *(void *)(a3 + 48);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v177 = *(void *)(a3 + 40);
    *(void *)(a3 + 40) = 0x8000000000000000;
    sub_25E745C70(0xD000000000000012, 0x800000025E7669F0, v37, isUniquelyReferenced_nonNull_native);
    *(void *)(a3 + 40) = v177;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = a3;
    *(void *)(v39 + 24) = v37;
    sub_25E74A4CC((uint64_t)&v244, (uint64_t)v251, &qword_26A704930);
    char v40 = BYTE2(v248);
    uint64_t v41 = a3;
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = sub_25E749EC8;
    *(void *)(v42 + 24) = v35;
    long long v43 = v247;
    long long v44 = v249;
    *(_OWORD *)(v42 + 96) = v248;
    *(_OWORD *)(v42 + 112) = v44;
    *(double *)(v42 + 128) = v250;
    long long v45 = v245;
    *(_OWORD *)(v42 + 32) = v244;
    *(_OWORD *)(v42 + 48) = v45;
    *(_OWORD *)(v42 + 64) = v246;
    *(_OWORD *)(v42 + 80) = v43;
    sub_25E74A4CC((uint64_t)v251, (uint64_t)v309, &qword_26A704930);
    if (v311)
    {
      double v46 = self;
      *(void *)&long long v254 = sub_25E74BEDC;
      *((void *)&v254 + 1) = v42;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v253 = sub_25E7385C4;
      *((void *)&v253 + 1) = &block_descriptor_238;
      double v47 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v46, sel__performWithoutRetargetingAnimations_, v47);
      _Block_release(v47);
      sub_25E754D70(0, v41, v37);
    }
    else
    {
      v298[1] = v309[1];
      v298[2] = v309[2];
      v298[3] = v309[3];
      char v299 = v310;
      v298[0] = v309[0];
      swift_retain_n();
      swift_retain();
      sub_25E731EC4((uint64_t *)v298, v40, (uint64_t)sub_25E74BEDC, v42, (uint64_t)sub_25E74C05C, v39);
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    long long v238 = v215;
    long long v239 = v216;
    long long v240 = v217;
    *(void *)&long long v241 = v218;
    long long v237 = v214;
    *((double *)&v241 + 1) = v30;
    double v242 = v31;
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = v174;
    swift_beginAccess();
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v41 + 48), 1uLL, memory_order_relaxed);
    swift_endAccess();
    uint64_t v57 = *(void *)(v41 + 48);
    swift_beginAccess();
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v177 = *(void *)(v41 + 40);
    *(void *)(v41 + 40) = 0x8000000000000000;
    sub_25E745C70(0xD000000000000014, 0x800000025E766A10, v57, v58);
    *(void *)(v41 + 40) = v177;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v41;
    *(void *)(v59 + 24) = v57;
    sub_25E74A4CC((uint64_t)&v237, (uint64_t)v243, &qword_26A704930);
    char v60 = BYTE2(v241);
    uint64_t v61 = swift_allocObject();
    *(void *)(v61 + 16) = sub_25E74BEC8;
    *(void *)(v61 + 24) = v56;
    long long v62 = v240;
    *(_OWORD *)(v61 + 64) = v239;
    *(_OWORD *)(v61 + 80) = v62;
    *(_OWORD *)(v61 + 96) = v241;
    *(double *)(v61 + 112) = v242;
    long long v63 = v238;
    *(_OWORD *)(v61 + 32) = v237;
    *(_OWORD *)(v61 + 48) = v63;
    sub_25E74A4CC((uint64_t)v243, (uint64_t)v312, &qword_26A704930);
    if (v314)
    {
      id v64 = self;
      *(void *)&long long v254 = sub_25E74BEE0;
      *((void *)&v254 + 1) = v61;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v253 = sub_25E7385C4;
      *((void *)&v253 + 1) = &block_descriptor_252;
      uint64_t v65 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v64, sel__performWithoutRetargetingAnimations_, v65);
      _Block_release(v65);
      sub_25E754D70(0, v41, v57);
    }
    else
    {
      v296[1] = v312[1];
      v296[2] = v312[2];
      v296[3] = v312[3];
      char v297 = v313;
      v296[0] = v312[0];
      swift_retain_n();
      swift_retain();
      sub_25E731EC4((uint64_t *)v296, v60, (uint64_t)sub_25E74BEE0, v61, (uint64_t)sub_25E74C05C, v59);
    }
    swift_release();
    swift_release();
    swift_release();
    id v55 = v174;

    swift_release();
    a3 = v41;
  }
  else
  {
    double v49 = v184 + v192 - *((double *)&v185 + 1) * 0.5;
    double v50 = *(double *)&v185 + v193 - v186 * 0.5;
    id v51 = objc_allocWithZone((Class)SUIARadialGradientView);
    id v52 = v32;
    id v53 = objc_msgSend(v51, sel_initWithFrame_, v49, v50, v29, v28);
    id v54 = *(void **)&v4[v33];
    *(void *)&v4[v33] = v53;
    id v55 = v53;

    objc_msgSend(v52, sel_setMaskView_, v55);
  }
  long long v258 = v210;
  long long v259 = v211;
  long long v260 = v212;
  long long v261 = v213;
  long long v254 = v206;
  long long v255 = v207;
  long long v256 = v208;
  long long v257 = v209;
  long long aBlock = v204;
  long long v253 = v205;
  long long v269 = v205;
  long long v270 = v206;
  long long v271 = v207;
  long long v272 = v208;
  long long v268 = v204;
  uint64_t v66 = swift_allocObject();
  *(void *)(v66 + 16) = v55;
  swift_beginAccess();
  id v169 = v55;
  sub_25E74A004((uint64_t)&v268);
  atomic_fetch_add_explicit((atomic_ullong *volatile)(a3 + 48), 1uLL, memory_order_relaxed);
  swift_endAccess();
  uint64_t v67 = *(void *)(a3 + 48);
  swift_beginAccess();
  char v68 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v279 = *(void *)(a3 + 40);
  *(void *)(a3 + 40) = 0x8000000000000000;
  sub_25E745C70(0xD00000000000001ELL, 0x800000025E7669B0, v67, v68);
  *(void *)(a3 + 40) = v279;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = a3;
  *(void *)(v69 + 24) = v67;
  sub_25E74A4CC((uint64_t)&v268, (uint64_t)v273, &qword_26A704930);
  char v70 = BYTE2(v272);
  uint64_t v71 = a3;
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = sub_25E749FFC;
  *(void *)(v72 + 24) = v66;
  long long v73 = v269;
  long long v74 = v271;
  *(_OWORD *)(v72 + 64) = v270;
  *(_OWORD *)(v72 + 80) = v74;
  *(_OWORD *)(v72 + 96) = v272;
  *(_OWORD *)(v72 + 32) = v268;
  *(_OWORD *)(v72 + 48) = v73;
  sub_25E74A4CC((uint64_t)v273, (uint64_t)v303, &qword_26A704930);
  if (v305)
  {
    unint64_t v75 = self;
    *(void *)&long long v179 = sub_25E74A034;
    *((void *)&v179 + 1) = v72;
    *(void *)&long long v177 = MEMORY[0x263EF8330];
    *((void *)&v177 + 1) = 1107296256;
    *(void *)&long long v178 = sub_25E7385C4;
    *((void *)&v178 + 1) = &block_descriptor_197;
    id v76 = _Block_copy(&v177);
    swift_retain_n();
    sub_25E74A004((uint64_t)&v268);
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v75, sel__performWithoutRetargetingAnimations_, v76);
    _Block_release(v76);
    sub_25E754D70(0, v71, v67);
  }
  else
  {
    v294[1] = v303[1];
    v294[2] = v303[2];
    v294[3] = v303[3];
    char v295 = v304;
    v294[0] = v303[0];
    swift_retain_n();
    sub_25E74A004((uint64_t)&v268);
    swift_retain();
    sub_25E731EC4((uint64_t *)v294, v70, (uint64_t)sub_25E74A034, v72, (uint64_t)sub_25E74C05C, v69);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25E74A054((uint64_t)&v268);
  long long v263 = v258;
  long long v264 = v259;
  long long v265 = v260;
  long long v266 = v261;
  long long v262 = v257;
  uint64_t v77 = swift_allocObject();
  *(void *)(v77 + 16) = v169;
  swift_beginAccess();
  id v78 = v169;
  sub_25E74A004((uint64_t)&v262);
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v71 + 48), 1uLL, memory_order_relaxed);
  swift_endAccess();
  uint64_t v79 = *(void *)(v71 + 48);
  swift_beginAccess();
  char v80 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v279 = *(void *)(v71 + 40);
  *(void *)(v71 + 40) = 0x8000000000000000;
  sub_25E745C70(0xD00000000000001BLL, 0x800000025E766990, v79, v80);
  *(void *)(v71 + 40) = v279;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + 16) = v71;
  *(void *)(v81 + 24) = v79;
  sub_25E74A4CC((uint64_t)&v262, (uint64_t)v267, &qword_26A704930);
  char v82 = BYTE2(v266);
  uint64_t v83 = swift_allocObject();
  *(void *)(v83 + 16) = sub_25E74A080;
  *(void *)(v83 + 24) = v77;
  long long v84 = v263;
  long long v85 = v265;
  *(_OWORD *)(v83 + 64) = v264;
  *(_OWORD *)(v83 + 80) = v85;
  *(_OWORD *)(v83 + 96) = v266;
  *(_OWORD *)(v83 + 32) = v262;
  *(_OWORD *)(v83 + 48) = v84;
  sub_25E74A4CC((uint64_t)v267, (uint64_t)v306, &qword_26A704930);
  if (v308)
  {
    id v170 = v78;
    uint64_t v86 = self;
    *(void *)&long long v179 = sub_25E74BED8;
    *((void *)&v179 + 1) = v83;
    *(void *)&long long v177 = MEMORY[0x263EF8330];
    *((void *)&v177 + 1) = 1107296256;
    *(void *)&long long v178 = sub_25E7385C4;
    *((void *)&v178 + 1) = &block_descriptor_210;
    long long v87 = _Block_copy(&v177);
    swift_retain_n();
    sub_25E74A004((uint64_t)&v262);
    swift_retain();
    swift_retain();
    swift_release();
    long long v88 = (void *)v86;
    id v78 = v170;
    objc_msgSend(v88, sel__performWithoutRetargetingAnimations_, v87);
    _Block_release(v87);
    sub_25E754D70(0, v71, v79);
  }
  else
  {
    v292[1] = v306[1];
    v292[2] = v306[2];
    v292[3] = v306[3];
    char v293 = v307;
    v292[0] = v306[0];
    swift_retain_n();
    sub_25E74A004((uint64_t)&v262);
    swift_retain();
    sub_25E731EC4((uint64_t *)v292, v82, (uint64_t)sub_25E74BED8, v83, (uint64_t)sub_25E74C05C, v81);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25E74A054((uint64_t)&v262);
  long long v232 = v220;
  long long v233 = v221;
  long long v234 = v222;
  long long v235 = v223;
  long long v231 = v219;
  uint64_t v89 = swift_allocObject();
  *(void *)(v89 + 16) = v78;
  swift_beginAccess();
  id v90 = v78;
  atomic_fetch_add_explicit((atomic_ullong *volatile)(v71 + 48), 1uLL, memory_order_relaxed);
  swift_endAccess();
  uint64_t v91 = *(void *)(v71 + 48);
  swift_beginAccess();
  char v92 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v279 = *(void *)(v71 + 40);
  *(void *)(v71 + 40) = 0x8000000000000000;
  sub_25E745C70(0xD000000000000015, 0x800000025E7669D0, v91, v92);
  *(void *)(v71 + 40) = v279;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v93 = swift_allocObject();
  *(void *)(v93 + 16) = v71;
  *(void *)(v93 + 24) = v91;
  sub_25E74A4CC((uint64_t)&v231, (uint64_t)v236, &qword_26A704930);
  char v94 = BYTE2(v235);
  uint64_t v95 = swift_allocObject();
  *(void *)(v95 + 16) = sub_25E74A0CC;
  *(void *)(v95 + 24) = v89;
  long long v96 = v232;
  long long v97 = v234;
  *(_OWORD *)(v95 + 64) = v233;
  *(_OWORD *)(v95 + 80) = v97;
  *(_OWORD *)(v95 + 96) = v235;
  *(_OWORD *)(v95 + 32) = v231;
  *(_OWORD *)(v95 + 48) = v96;
  sub_25E74A4CC((uint64_t)v236, (uint64_t)v315, &qword_26A704930);
  if (v317 == 1)
  {
    char v175 = v90;
    char v98 = self;
    *(void *)&long long v179 = sub_25E74BED4;
    *((void *)&v179 + 1) = v95;
    *(void *)&long long v177 = MEMORY[0x263EF8330];
    *((void *)&v177 + 1) = 1107296256;
    *(void *)&long long v178 = sub_25E7385C4;
    *((void *)&v178 + 1) = &block_descriptor_224;
    uint64_t v99 = _Block_copy(&v177);
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v98, sel__performWithoutRetargetingAnimations_, v99);
    _Block_release(v99);
    sub_25E754D70(0, v71, v91);

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    v290[1] = v315[1];
    v290[2] = v315[2];
    v290[3] = v315[3];
    char v291 = v316;
    v290[0] = v315[0];
    swift_retain_n();
    swift_retain();
    sub_25E731EC4((uint64_t *)v290, v94, (uint64_t)sub_25E74BED4, v95, (uint64_t)sub_25E74C05C, v93);

    swift_release();
    swift_release();
    swift_release();
  }
  swift_release();
  a3 = v71;
  a2 = v172;
  double v18 = &qword_26A704000;
LABEL_32:
  sub_25E74A4CC(a2, (uint64_t)&v177, &qword_26A7048F8);
  if ((unint64_t)BYTE2(v181) << 16 == 0x20000 || (char v176 = *(void **)&v4[v18[253]]) == 0)
  {
    uint64_t v105 = *(void **)&v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_depthDistanceFieldImageView];
    if (v105)
    {
      *(void *)&v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_depthDistanceFieldImageView] = 0;
      objc_msgSend(v105, sel_removeFromSuperview);
    }
  }
  else
  {
    long long v275 = v178;
    long long v276 = v179;
    long long v277 = v180;
    long long v278 = v181;
    long long v274 = v177;
    id v100 = &selRef__setDonutGradientLocations_;
    uint64_t v101 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_depthDistanceFieldImageView;
    char v102 = *(void **)&v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_depthDistanceFieldImageView];
    if (v102)
    {
      id v103 = v176;
      id v104 = v102;
    }
    else
    {
      id v106 = v176;
      objc_msgSend(v106, sel_bounds);
      id v111 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithFrame_, v107, v108, v109, v110);
      uint64_t v112 = *(void *)&v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageMode];
      id v113 = v111;
      objc_msgSend(v113, sel_setContentMode_, v112);
      uint64_t v114 = &v4[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration];
      swift_beginAccess();
      uint64_t v115 = *(void **)v114;
      uint64_t v168 = a3;
      id v173 = v106;
      if (*(void *)v114)
      {
        uint64_t v116 = (void *)*((void *)v114 + 1);
        sub_25E74821C(v115, v116);
        id v117 = v116;
        sub_25E74825C(v115, v116);
      }
      else
      {
        id v117 = 0;
      }
      objc_msgSend(v113, sel_setImage_, v117);

      uint64_t v118 = *(void **)&v4[v101];
      *(void *)&v4[v101] = v113;
      id v104 = v113;

      sub_25E75BEB0();
      id v119 = objc_allocWithZone(MEMORY[0x263F157C8]);
      char v120 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v121 = objc_msgSend(v119, sel_initWithType_, v120);

      sub_25E75BEB0();
      id v122 = objc_allocWithZone(MEMORY[0x263F157C8]);
      uint64_t v123 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v124 = objc_msgSend(v122, sel_initWithType_, v123);

      sub_25E75BEB0();
      id v125 = objc_allocWithZone(MEMORY[0x263F157C8]);
      uint64_t v126 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v127 = objc_msgSend(v125, sel_initWithType_, v126);

      sub_25E75BEB0();
      id v128 = objc_allocWithZone(MEMORY[0x263F157C8]);
      uint64_t v129 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v130 = objc_msgSend(v128, sel_initWithType_, v129);

      uint64_t v131 = (void *)sub_25E75BEA0();
      id v132 = (void *)sub_25E75BEA0();
      objc_msgSend(v130, sel_setValue_forKey_, v131, v132);

      id v133 = objc_msgSend(self, sel_whiteColor);
      id v134 = objc_msgSend(v133, sel_CGColor);

      id v135 = (void *)sub_25E75BEA0();
      objc_msgSend(v130, sel_setValue_forKey_, v134, v135);

      id v136 = objc_msgSend(v104, sel_layer);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
      uint64_t v137 = swift_allocObject();
      *(_OWORD *)(v137 + 16) = xmmword_25E760060;
      uint64_t v138 = sub_25E711DB8(0, &qword_26A704928);
      *(void *)(v137 + 32) = v121;
      *(void *)(v137 + 56) = v138;
      *(void *)(v137 + 64) = v124;
      *(void *)(v137 + 88) = v138;
      *(void *)(v137 + 96) = v127;
      *(void *)(v137 + 152) = v138;
      *(void *)(v137 + 120) = v138;
      *(void *)(v137 + 128) = v130;
      id v139 = v121;
      id v140 = v124;
      id v141 = v127;
      id v142 = v130;
      uint64_t v143 = (void *)sub_25E75BF20();
      swift_bridgeObjectRelease();
      objc_msgSend(v136, sel_setFilters_, v143);

      objc_msgSend(v173, sel_addSubview_, v104);
      id v100 = &selRef__setDonutGradientLocations_;

      char v102 = 0;
      a3 = v168;
    }
    id v144 = v102;
    id v145 = [v104 v100[144]];
    char v146 = (void *)sub_25E75BE50();
    uint64_t v147 = (void *)sub_25E75BEA0();
    objc_msgSend(v145, sel_setValue_forKeyPath_, v146, v147);

    id v148 = [v104 v100[144]];
    uint64_t v149 = (void *)sub_25E75BE50();
    uint64_t v150 = (void *)sub_25E75BEA0();
    objc_msgSend(v148, sel_setValue_forKeyPath_, v149, v150);

    id v151 = [v104 v100[144]];
    uint64_t v152 = (void *)sub_25E75BE50();
    uint64_t v153 = (void *)sub_25E75BEA0();
    objc_msgSend(v151, sel_setValue_forKeyPath_, v152, v153);

    id v154 = [v104 v100[144]];
    uint64_t v155 = (void *)sub_25E75BE50();
    uint64_t v156 = (void *)sub_25E75BEA0();
    objc_msgSend(v154, sel_setValue_forKeyPath_, v155, v156);

    long long v280 = v275;
    long long v281 = v276;
    long long v282 = v277;
    long long v283 = v278;
    long long v279 = v274;
    uint64_t v157 = swift_allocObject();
    *(void *)(v157 + 16) = v104;
    swift_beginAccess();
    id v158 = v104;
    atomic_fetch_add_explicit((atomic_ullong *volatile)(a3 + 48), 1uLL, memory_order_relaxed);
    swift_endAccess();
    uint64_t v159 = *(void *)(a3 + 48);
    swift_beginAccess();
    char v160 = swift_isUniquelyReferenced_nonNull_native();
    v284[0] = *(void *)(a3 + 40);
    *(void *)(a3 + 40) = 0x8000000000000000;
    sub_25E745C70(0xD00000000000001BLL, 0x800000025E766990, v159, v160);
    *(void *)(a3 + 40) = v284[0];
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v161 = swift_allocObject();
    *(void *)(v161 + 16) = a3;
    *(void *)(v161 + 24) = v159;
    sub_25E74A4CC((uint64_t)&v279, (uint64_t)v284, &qword_26A704930);
    char v162 = BYTE2(v283);
    uint64_t v163 = swift_allocObject();
    *(void *)(v163 + 16) = sub_25E749FC8;
    *(void *)(v163 + 24) = v157;
    long long v164 = v280;
    long long v165 = v282;
    *(_OWORD *)(v163 + 64) = v281;
    *(_OWORD *)(v163 + 80) = v165;
    *(_OWORD *)(v163 + 96) = v283;
    *(_OWORD *)(v163 + 32) = v279;
    *(_OWORD *)(v163 + 48) = v164;
    sub_25E74A4CC((uint64_t)v284, (uint64_t)v300, &qword_26A704930);
    if (v302 == 1)
    {
      long long v166 = self;
      *(void *)&long long v287 = sub_25E74BED4;
      *((void *)&v287 + 1) = v163;
      *(void *)&long long v285 = MEMORY[0x263EF8330];
      *((void *)&v285 + 1) = 1107296256;
      *(void *)&long long v286 = sub_25E7385C4;
      *((void *)&v286 + 1) = &block_descriptor_184;
      uint64_t v167 = _Block_copy(&v285);
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v166, sel__performWithoutRetargetingAnimations_, v167);
      _Block_release(v167);
      sub_25E754D70(0, a3, v159);
    }
    else
    {
      long long v286 = v300[1];
      long long v287 = v300[2];
      long long v288 = v300[3];
      char v289 = v301;
      long long v285 = v300[0];
      swift_retain_n();
      swift_retain();
      sub_25E731EC4((uint64_t *)&v285, v162, (uint64_t)sub_25E74BED4, v163, (uint64_t)sub_25E74C05C, v161);
    }

    swift_release();
    swift_release();
    swift_release();

    swift_release();
  }
}

void sub_25E741AA4(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void *)(*a1 + 16);
  if (v4)
  {
    sub_25E75C0E0();
    uint64_t v5 = v3 + 32;
    do
    {
      v5 += 8;
      sub_25E75BE50();
      sub_25E75C0C0();
      sub_25E75C0F0();
      sub_25E75C100();
      sub_25E75C0D0();
      --v4;
    }
    while (v4);
  }
  sub_25E711DB8(0, &qword_26A703FF8);
  id v6 = (id)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(a2, sel_setLocations_, v6);
}

void sub_25E741BA8(uint64_t a1, void *a2)
{
  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  id v3 = (id)sub_25E75BF20();
  objc_msgSend(a2, sel_setColors_, v3);
}

void sub_25E741C24(uint64_t a1, uint64_t a2)
{
  sub_25E74A4CC(a1, (uint64_t)v63, &qword_26A704910);
  if ((unint64_t)BYTE2(v64) << 16 != 0x20000)
  {
    long long v67 = v63[2];
    long long v68 = v63[3];
    long long v69 = v64;
    long long v65 = v63[0];
    long long v66 = v63[1];
    uint64_t v6 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurBackdropView;
    uint64_t v7 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurBackdropView];
    if (v7)
    {
      id v8 = *(id *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurBackdropView];
LABEL_11:
      uint64_t v32 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurMaskView;
      uint64_t v33 = *(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurMaskView];
      id v34 = v7;
      if (v33)
      {
LABEL_14:
        id v49 = objc_msgSend(v8, sel_layer);
        self;
        uint64_t v50 = swift_dynamicCastObjCClassUnconditional();
        long long v72 = v67;
        long long v73 = v68;
        long long v74 = v69;
        long long v70 = v65;
        long long v71 = v66;
        uint64_t v51 = swift_allocObject();
        *(void *)(v51 + 16) = v50;
        swift_beginAccess();
        id v52 = v49;
        atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
        swift_endAccess();
        uint64_t v53 = *(void *)(a2 + 48);
        swift_beginAccess();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v75[0] = *(void *)(a2 + 40);
        *(void *)(a2 + 40) = 0x8000000000000000;
        sub_25E745C70(0xD000000000000013, 0x800000025E7668B0, v53, isUniquelyReferenced_nonNull_native);
        *(void *)(a2 + 40) = v75[0];
        swift_bridgeObjectRelease();
        swift_endAccess();
        uint64_t v55 = swift_allocObject();
        *(void *)(v55 + 16) = a2;
        *(void *)(v55 + 24) = v53;
        sub_25E74A4CC((uint64_t)&v70, (uint64_t)v75, &qword_26A704930);
        char v56 = BYTE2(v74);
        uint64_t v57 = swift_allocObject();
        *(void *)(v57 + 16) = sub_25E749F70;
        *(void *)(v57 + 24) = v51;
        long long v58 = v73;
        *(_OWORD *)(v57 + 64) = v72;
        *(_OWORD *)(v57 + 80) = v58;
        *(_OWORD *)(v57 + 96) = v74;
        long long v59 = v71;
        *(_OWORD *)(v57 + 32) = v70;
        *(_OWORD *)(v57 + 48) = v59;
        sub_25E74A4CC((uint64_t)v75, (uint64_t)v81, &qword_26A704930);
        if (v83 == 1)
        {
          char v60 = self;
          *(void *)&long long v78 = sub_25E74BED4;
          *((void *)&v78 + 1) = v57;
          *(void *)&long long aBlock = MEMORY[0x263EF8330];
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v77 = sub_25E7385C4;
          *((void *)&v77 + 1) = &block_descriptor_170;
          uint64_t v61 = _Block_copy(&aBlock);
          swift_retain_n();
          swift_retain();
          swift_retain();
          swift_release();
          objc_msgSend(v60, sel__performWithoutRetargetingAnimations_, v61);
          _Block_release(v61);
          sub_25E754D70(0, a2, v53);
        }
        else
        {
          long long v78 = v81[2];
          long long v79 = v81[3];
          char v80 = v82;
          long long aBlock = v81[0];
          long long v77 = v81[1];
          swift_retain_n();
          swift_retain();
          sub_25E731EC4((uint64_t *)&aBlock, v56, (uint64_t)sub_25E74BED4, v57, (uint64_t)sub_25E74C05C, v55);
        }
        swift_release();
        swift_release();
        swift_release();

        swift_release();
        return;
      }
      objc_msgSend(v8, sel_bounds);
      uint64_t v39 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_mainMaskView];
      if (v39)
      {
        double v40 = v35;
        double v41 = v36;
        double v42 = v37;
        double v43 = v38;
        id v44 = objc_allocWithZone(MEMORY[0x263F83078]);
        id v45 = v39;
        id v46 = objc_msgSend(v44, sel_initWithFrame_, v40, v41, v42, v43);
        objc_msgSend(v46, sel_setMatchesPosition_, 1);
        objc_msgSend(v46, sel_setMatchesAlpha_, 1);
        objc_msgSend(v46, sel_setMatchesTransform_, 1);
        objc_msgSend(v46, sel_setSourceView_, v45);
        objc_msgSend(v46, sel_setHidesSourceView_, 1);

        double v47 = *(void **)&v2[v32];
        *(void *)&v2[v32] = v46;
        id v48 = v46;

        objc_msgSend(v8, sel_setMaskView_, v48);
        goto LABEL_14;
      }
LABEL_21:
      sub_25E75C120();
      __break(1u);
      return;
    }
    id v9 = objc_msgSend(v2, sel_view);
    if (v9)
    {
      double v10 = v9;
      objc_msgSend(v9, sel_bounds);
      double v12 = v11;
      double v14 = v13;
      double v16 = v15;
      double v18 = v17;

      id v19 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for BackdropView()), sel_initWithFrame_, v12, v14, v16, v18);
      id v20 = objc_msgSend(v19, sel_layer);
      self;
      id v62 = (id)swift_dynamicCastObjCClassUnconditional();
      objc_msgSend(v62, sel_setInvertsMask_, 1);
      sub_25E75BEB0();
      id v21 = objc_allocWithZone(MEMORY[0x263F157C8]);
      uint64_t v22 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(v21, sel_initWithType_, v22);

      id v24 = (void *)sub_25E75BF70();
      objc_msgSend(v23, sel_setValue_forKey_, v24, *MEMORY[0x263F15C68]);

      __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_25E75FB40;
      *(void *)(v25 + 56) = sub_25E711DB8(0, &qword_26A704928);
      *(void *)(v25 + 32) = v23;
      id v26 = v20;
      id v27 = v23;
      double v28 = (void *)sub_25E75BF20();
      swift_bridgeObjectRelease();
      objc_msgSend(v62, sel_setFilters_, v28);

      double v29 = *(void **)&v2[v6];
      *(void *)&v2[v6] = v19;
      id v8 = v19;

      id v30 = objc_msgSend(v2, sel_view);
      if (v30)
      {
        double v31 = v30;
        objc_msgSend(v30, sel_addSubview_, v8);

        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v4 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurBackdropView];
  if (v4)
  {
    *(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurBackdropView] = 0;
    objc_msgSend(v4, sel_removeFromSuperview);
  }
  uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurMaskView];
  if (v5)
  {
    *(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurMaskView] = 0;
    objc_msgSend(v5, sel_removeFromSuperview);
  }
}

void sub_25E7423D0(uint64_t a1, void *a2)
{
  id v3 = (void *)sub_25E75BE50();
  id v4 = (id)sub_25E75BEA0();
  objc_msgSend(a2, sel_setValue_forKeyPath_, v3, v4);
}

void sub_25E742454(uint64_t a1, uint64_t a2)
{
  sub_25E74A4CC(a1, (uint64_t)v75, &qword_26A704918);
  sub_25E74A4CC((uint64_t)v75, (uint64_t)v126, &qword_26A704918);
  sub_25E74A4CC(a1, (uint64_t)v76, &qword_26A704918);
  if (sub_25E749D8C((uint64_t)v76) == 1)
  {
    uint64_t v5 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_meshBackdropView];
    if (v5)
    {
      *(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_meshBackdropView] = 0;
      objc_msgSend(v5, sel_removeFromSuperview);
    }
    return;
  }
  long long v101 = v76[7];
  long long v102 = v76[8];
  uint64_t v103 = v77;
  long long v96 = v76[2];
  long long v97 = v76[3];
  long long v98 = v76[4];
  long long v99 = v76[5];
  long long v100 = v76[6];
  long long v94 = v76[0];
  long long v95 = v76[1];
  double v6 = *((double *)&v79 + 1);
  double v7 = v80;
  double v8 = v92;
  double v9 = v93;
  uint64_t v10 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_meshBackdropView;
  double v11 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_meshBackdropView];
  if (v11)
  {
    uint64_t v62 = v82;
    uint64_t v63 = v81;
    uint64_t v60 = v84;
    uint64_t v61 = v83;
    uint64_t v58 = v86;
    uint64_t v59 = v85;
    uint64_t v64 = v87;
    uint64_t v65 = v88;
    char v57 = v90;
    char v66 = v89;
    char v67 = v91 & 1;
    long long v70 = v101;
    long long v71 = v102;
    *(void *)&long long v72 = v103;
    long long v68 = v99;
    long long v69 = v100;
    *((double *)&v72 + 1) = v78;
    long long v73 = v79;
    double v74 = v80;
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    swift_beginAccess();
    id v13 = v11;
    sub_25E749E44(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25E749DE4);
    atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
    swift_endAccess();
    uint64_t v14 = *(void *)(a2 + 48);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v123[0] = *(void *)(a2 + 40);
    *(void *)(a2 + 40) = 0x8000000000000000;
    sub_25E745C70(0x756F62206873656DLL, 0xEB0000000073646ELL, v14, isUniquelyReferenced_nonNull_native);
    *(void *)(a2 + 40) = *(void *)&v123[0];
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = a2;
    *(void *)(v16 + 24) = v14;
    sub_25E74A4CC((uint64_t)&v68, (uint64_t)v104, &qword_26A704930);
    char v17 = BYTE2(v72);
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = sub_25E749EC8;
    *(void *)(v18 + 24) = v12;
    long long v19 = v73;
    *(_OWORD *)(v18 + 96) = v72;
    *(_OWORD *)(v18 + 112) = v19;
    *(double *)(v18 + 128) = v74;
    long long v20 = v69;
    *(_OWORD *)(v18 + 32) = v68;
    *(_OWORD *)(v18 + 48) = v20;
    long long v21 = v71;
    *(_OWORD *)(v18 + 64) = v70;
    *(_OWORD *)(v18 + 80) = v21;
    sub_25E74A4CC((uint64_t)v104, (uint64_t)v123, &qword_26A704930);
    if (v125 == 1)
    {
      uint64_t v22 = self;
      *(void *)&long long v107 = sub_25E749F04;
      *((void *)&v107 + 1) = v18;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v106 = sub_25E7385C4;
      *((void *)&v106 + 1) = &block_descriptor_139;
      id v23 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v22, sel__performWithoutRetargetingAnimations_, v23);
      _Block_release(v23);
      sub_25E754D70(0, a2, v14);
      id v24 = sub_25E749F10;
    }
    else
    {
      v118[2] = v123[2];
      v118[3] = v123[3];
      char v119 = v124;
      v118[1] = v123[1];
      v118[0] = v123[0];
      swift_retain_n();
      swift_retain();
      sub_25E731EC4((uint64_t *)v118, v17, (uint64_t)sub_25E749F04, v18, (uint64_t)sub_25E74C05C, v16);
      id v24 = (void (*)(double *))sub_25E74BEC8;
    }
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v13;
    swift_beginAccess();
    atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
    swift_endAccess();
    uint64_t v40 = *(void *)(a2 + 48);
    swift_beginAccess();
    char v41 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&v120[0] = *(void *)(a2 + 40);
    *(void *)(a2 + 40) = 0x8000000000000000;
    sub_25E745C70(0x736F70206873656DLL, 0xED00006E6F697469, v40, v41);
    *(void *)(a2 + 40) = *(void *)&v120[0];
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t v42 = swift_allocObject();
    *(void *)(v42 + 16) = a2;
    *(void *)(v42 + 24) = v40;
    LOBYTE(v120[0]) = v57 & 1;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = v24;
    *(void *)(v43 + 24) = v39;
    *(void *)(v43 + 32) = v63;
    *(void *)(v43 + 40) = v62;
    *(void *)(v43 + 48) = v61;
    *(void *)(v43 + 56) = v60;
    *(void *)(v43 + 64) = v59;
    *(void *)(v43 + 72) = v58;
    *(void *)(v43 + 80) = v64;
    *(void *)(v43 + 88) = v65;
    *(unsigned char *)(v43 + 96) = v66;
    *(unsigned char *)(v43 + 97) = v120[0];
    *(unsigned char *)(v43 + 98) = v67;
    *(double *)(v43 + 104) = v8;
    *(double *)(v43 + 112) = v9;
    if (v57)
    {
      id v44 = self;
      *(void *)&long long v107 = sub_25E749F64;
      *((void *)&v107 + 1) = v43;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v106 = sub_25E7385C4;
      *((void *)&v106 + 1) = &block_descriptor_152;
      id v45 = _Block_copy(&aBlock);
      swift_retain_n();
      swift_retain();
      swift_retain();
      swift_release();
      objc_msgSend(v44, sel__performWithoutRetargetingAnimations_, v45);
      _Block_release(v45);
      sub_25E754D70(0, a2, v40);
    }
    else
    {
      v116[0] = v63;
      v116[1] = v62;
      v116[2] = v61;
      v116[3] = v60;
      v116[4] = v59;
      _OWORD v116[5] = v58;
      v116[6] = v64;
      v116[7] = v65;
      char v117 = v66 & 1;
      swift_retain_n();
      swift_retain();
      sub_25E731EC4(v116, v67, (uint64_t)sub_25E749F64, v43, (uint64_t)sub_25E74C05C, v42);
    }
    swift_release();
    swift_release();
    swift_release();

    swift_release();
    goto LABEL_15;
  }
  double v25 = v78 + v92 - *((double *)&v79 + 1) * 0.5;
  double v26 = *(double *)&v79 + v93 - v80 * 0.5;
  id v27 = objc_allocWithZone((Class)type metadata accessor for BackdropView());
  sub_25E74A4CC((uint64_t)v126, (uint64_t)&v68, &qword_26A704918);
  sub_25E749DB0((uint64_t)&v68);
  id v28 = objc_msgSend(v27, sel_initWithFrame_, v25, v26, v6, v7);
  double v29 = *(void **)&v2[v10];
  *(void *)&v2[v10] = v28;
  id v13 = v28;

  id v30 = objc_msgSend(v13, sel_layer);
  id v31 = objc_msgSend(v2, sel_view);
  if (!v31)
  {
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v32 = v31;
  id v33 = objc_msgSend(v31, sel_traitCollection);

  objc_msgSend(v33, sel_displayScale);
  double v35 = v34;

  objc_msgSend(v30, sel_setRasterizationScale_, v35);
  id v36 = objc_msgSend(v13, sel_layer);
  objc_msgSend(v36, sel_setWantsExtendedDynamicRangeContent_, 1);

  id v37 = objc_msgSend(v2, sel_view);
  if (!v37)
  {
LABEL_21:
    __break(1u);
    return;
  }
  double v38 = v37;
  objc_msgSend(v37, sel_addSubview_, v13);

LABEL_15:
  long long v107 = v96;
  long long v108 = v97;
  long long v109 = v98;
  long long v106 = v95;
  long long aBlock = v94;
  uint64_t v46 = swift_allocObject();
  *(void *)(v46 + 16) = v13;
  swift_beginAccess();
  sub_25E749E44(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25E749DE4);
  id v47 = v13;
  atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
  swift_endAccess();
  uint64_t v48 = *(void *)(a2 + 48);
  swift_beginAccess();
  char v49 = swift_isUniquelyReferenced_nonNull_native();
  v110[0] = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0x8000000000000000;
  sub_25E745C70(0x6E6172546873656DLL, 0xED00006D726F6673, v48, v49);
  *(void *)(a2 + 40) = v110[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = a2;
  *(void *)(v50 + 24) = v48;
  sub_25E74A4CC((uint64_t)&aBlock, (uint64_t)v110, &qword_26A704930);
  char v51 = BYTE2(v109);
  uint64_t v52 = swift_allocObject();
  *(void *)(v52 + 16) = sub_25E749DDC;
  *(void *)(v52 + 24) = v46;
  long long v53 = v108;
  *(_OWORD *)(v52 + 64) = v107;
  *(_OWORD *)(v52 + 80) = v53;
  *(_OWORD *)(v52 + 96) = v109;
  long long v54 = v106;
  *(_OWORD *)(v52 + 32) = aBlock;
  *(_OWORD *)(v52 + 48) = v54;
  sub_25E74A4CC((uint64_t)v110, (uint64_t)v120, &qword_26A704930);
  if (v122 == 1)
  {
    uint64_t v55 = self;
    *(void *)&long long v113 = sub_25E749E38;
    *((void *)&v113 + 1) = v52;
    *(void *)&long long v111 = MEMORY[0x263EF8330];
    *((void *)&v111 + 1) = 1107296256;
    *(void *)&long long v112 = sub_25E7385C4;
    *((void *)&v112 + 1) = &block_descriptor_126;
    char v56 = _Block_copy(&v111);
    swift_retain();
    sub_25E749E44(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25E749DE4);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v55, sel__performWithoutRetargetingAnimations_, v56);
    _Block_release(v56);
    sub_25E754D70(0, a2, v48);
  }
  else
  {
    long long v113 = v120[2];
    long long v114 = v120[3];
    char v115 = v121;
    long long v112 = v120[1];
    long long v111 = v120[0];
    swift_retain();
    sub_25E749E44(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25E749DE4);
    swift_retain();
    swift_retain();
    sub_25E731EC4((uint64_t *)&v111, v51, (uint64_t)sub_25E749E38, v52, (uint64_t)sub_25E74C05C, v50);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_25E749E44(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25E749BF4);

  sub_25E749E44(a1, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25E749BF4);
}

void sub_25E7430D0(double *a1, id a2)
{
  double v2 = *a1;
  double v3 = a1[1];
  id v4 = objc_msgSend(a2, sel_layer);
  objc_msgSend(v4, sel_setPosition_, v2, v3);
}

void sub_25E743140(uint64_t *a1, id a2)
{
  uint64_t v2 = *a1;
  id v3 = objc_msgSend(a2, sel_layer);
  objc_msgSend(v3, sel_setMeshTransform_, v2);
}

id sub_25E7431AC(long long *a1, uint64_t a2)
{
  uint64_t v5 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_sourceImageView;
  double v6 = *(void **)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_sourceImageView];
  if (!v6)
  {
    id result = objc_msgSend(v2, sel_view);
    if (result)
    {
      double v9 = result;
      objc_msgSend(result, sel_bounds);
      double v11 = v10;
      double v13 = v12;
      double v15 = v14;
      double v17 = v16;

      id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82828]), sel_initWithFrame_, v11, v13, v15, v17);
      long long v19 = &v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration];
      swift_beginAccess();
      long long v20 = *(void **)v19;
      if (*(void *)v19)
      {
        long long v21 = (void *)*((void *)v19 + 1);
        id v22 = v18;
        sub_25E74821C(v20, v21);
        id v23 = v20;
        sub_25E74825C(v20, v21);
      }
      else
      {
        id v24 = v18;
        id v23 = 0;
      }
      objc_msgSend(v18, sel_setImage_, v23);

      objc_msgSend(v18, sel_setContentMode_, *(void *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageMode]);
      sub_25E75BEB0();
      id v25 = objc_allocWithZone(MEMORY[0x263F157C8]);
      double v26 = (void *)sub_25E75BEA0();
      swift_bridgeObjectRelease();
      id v27 = objc_msgSend(v25, sel_initWithType_, v26);

      id v28 = objc_msgSend(v18, sel_layer);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
      uint64_t v29 = swift_allocObject();
      *(_OWORD *)(v29 + 16) = xmmword_25E75FB40;
      *(void *)(v29 + 56) = sub_25E711DB8(0, &qword_26A704928);
      *(void *)(v29 + 32) = v27;
      id v30 = v27;
      id v31 = (void *)sub_25E75BF20();
      swift_bridgeObjectRelease();
      objc_msgSend(v28, sel_setFilters_, v31);

      uint64_t v32 = *(void **)&v2[v5];
      *(void *)&v2[v5] = v18;
      id v7 = v18;

      id result = objc_msgSend(v2, sel_view);
      if (result)
      {
        id v33 = result;
        objc_msgSend(result, sel_addSubview_, v7);

        double v6 = 0;
        goto LABEL_9;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  id v7 = *(id *)&v2[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_sourceImageView];
LABEL_9:
  long long v34 = *(long long *)((char *)a1 + 216);
  long long v35 = *(long long *)((char *)a1 + 248);
  long long v88 = *(long long *)((char *)a1 + 232);
  long long v89 = v35;
  long long v86 = *(long long *)((char *)a1 + 200);
  long long v87 = v34;
  long long v90 = *(long long *)((char *)a1 + 264);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v7;
  swift_beginAccess();
  id v71 = v7;
  id v37 = v6;
  atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
  swift_endAccess();
  uint64_t v38 = *(void *)(a2 + 48);
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&v102[0] = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0x8000000000000000;
  sub_25E745C70(0xD00000000000001DLL, 0x800000025E766840, v38, isUniquelyReferenced_nonNull_native);
  *(void *)(a2 + 40) = *(void *)&v102[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = a2;
  *(void *)(v40 + 24) = v38;
  sub_25E74A4CC((uint64_t)&v86, (uint64_t)v91, &qword_26A704930);
  char v41 = BYTE2(v90);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_25E749C08;
  *(void *)(v42 + 24) = v36;
  long long v43 = v89;
  *(_OWORD *)(v42 + 64) = v88;
  *(_OWORD *)(v42 + 80) = v43;
  *(_OWORD *)(v42 + 96) = v90;
  long long v44 = v87;
  *(_OWORD *)(v42 + 32) = v86;
  *(_OWORD *)(v42 + 48) = v44;
  sub_25E74A4CC((uint64_t)v91, (uint64_t)v99, &qword_26A704930);
  if (v101)
  {
    id v45 = self;
    *(void *)&long long v74 = sub_25E749C44;
    *((void *)&v74 + 1) = v42;
    *(void *)&long long aBlock = MEMORY[0x263EF8330];
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v73 = sub_25E7385C4;
    *((void *)&v73 + 1) = &block_descriptor_3;
    uint64_t v46 = _Block_copy(&aBlock);
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v45, sel__performWithoutRetargetingAnimations_, v46);
    _Block_release(v46);
    sub_25E754D70(0, a2, v38);
  }
  else
  {
    v97[2] = v99[2];
    v97[3] = v99[3];
    char v98 = v100;
    v97[0] = v99[0];
    v97[1] = v99[1];
    swift_retain_n();
    swift_retain();
    sub_25E731EC4((uint64_t *)v97, v41, (uint64_t)sub_25E749C44, v42, (uint64_t)sub_25E749C3C, v40);
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v47 = a1[10];
  long long v48 = a1[11];
  long long v49 = a1[8];
  long long v81 = a1[9];
  long long v82 = v47;
  long long v83 = v48;
  long long v51 = a1[6];
  long long v50 = a1[7];
  uint64_t v84 = *((void *)a1 + 24);
  long long v79 = v50;
  long long v80 = v49;
  long long v52 = a1[3];
  long long v74 = a1[2];
  long long v75 = v52;
  long long v53 = a1[4];
  long long v77 = a1[5];
  long long v78 = v51;
  long long v76 = v53;
  long long v54 = a1[1];
  long long aBlock = *a1;
  long long v73 = v54;
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = v71;
  swift_beginAccess();
  id v56 = v71;
  atomic_fetch_add_explicit((atomic_ullong *volatile)(a2 + 48), 1uLL, memory_order_relaxed);
  swift_endAccess();
  uint64_t v57 = *(void *)(a2 + 48);
  swift_beginAccess();
  char v58 = swift_isUniquelyReferenced_nonNull_native();
  v85[0] = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0x8000000000000000;
  sub_25E745C70(0xD000000000000016, 0x800000025E766860, v57, v58);
  *(void *)(a2 + 40) = v85[0];
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v59 = swift_allocObject();
  *(void *)(v59 + 16) = a2;
  *(void *)(v59 + 24) = v57;
  sub_25E74A4CC((uint64_t)&aBlock, (uint64_t)v85, &qword_26A704930);
  char v60 = BYTE2(v76);
  uint64_t v61 = swift_allocObject();
  long long v62 = v81;
  long long v63 = v83;
  *(_OWORD *)(v61 + 192) = v82;
  *(_OWORD *)(v61 + 208) = v63;
  long long v64 = v79;
  long long v65 = v80;
  *(_OWORD *)(v61 + 128) = v78;
  *(_OWORD *)(v61 + 144) = v64;
  *(void *)(v61 + 16) = sub_25E749CA0;
  *(void *)(v61 + 24) = v55;
  *(void *)(v61 + 224) = v84;
  *(_OWORD *)(v61 + 160) = v65;
  *(_OWORD *)(v61 + 176) = v62;
  long long v66 = v75;
  *(_OWORD *)(v61 + 64) = v74;
  *(_OWORD *)(v61 + 80) = v66;
  long long v67 = v77;
  *(_OWORD *)(v61 + 96) = v76;
  *(_OWORD *)(v61 + 112) = v67;
  long long v68 = v73;
  *(_OWORD *)(v61 + 32) = aBlock;
  *(_OWORD *)(v61 + 48) = v68;
  sub_25E74A4CC((uint64_t)v85, (uint64_t)v102, &qword_26A704930);
  if (v104)
  {
    long long v69 = self;
    *(void *)&long long v94 = sub_25E749D18;
    *((void *)&v94 + 1) = v61;
    *(void *)&long long v92 = MEMORY[0x263EF8330];
    *((void *)&v92 + 1) = 1107296256;
    *(void *)&long long v93 = sub_25E7385C4;
    *((void *)&v93 + 1) = &block_descriptor_113;
    long long v70 = _Block_copy(&v92);
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_release();
    objc_msgSend(v69, sel__performWithoutRetargetingAnimations_, v70);
    _Block_release(v70);
    sub_25E754D70(0, a2, v57);
  }
  else
  {
    long long v94 = v102[2];
    long long v95 = v102[3];
    char v96 = v103;
    long long v92 = v102[0];
    long long v93 = v102[1];
    swift_retain_n();
    swift_retain();
    sub_25E731EC4((uint64_t *)&v92, v60, (uint64_t)sub_25E749D18, v61, (uint64_t)sub_25E74C05C, v59);
  }

  swift_release();
  swift_release();
  swift_release();
  return (id)swift_release();
}

void sub_25E743A70(int a1, id a2)
{
  id v2 = objc_msgSend(a2, sel_layer);
  id v3 = (void *)sub_25E75BE50();
  id v4 = (id)sub_25E75BEA0();
  objc_msgSend(v2, sel_setValue_forKeyPath_, v3, v4);
}

id sub_25E743B20(_OWORD *a1, id a2)
{
  long long v2 = a1[1];
  v7[0] = *a1;
  v7[1] = v2;
  long long v3 = a1[3];
  double v7[2] = a1[2];
  v7[3] = v3;
  long long v4 = a1[5];
  _OWORD v7[4] = a1[4];
  v7[5] = v4;
  long long v5 = a1[7];
  v7[6] = a1[6];
  v7[7] = v5;
  return objc_msgSend(a2, sel_setTransform3D_, v7);
}

uint64_t sub_25E743B74(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for RootComponent(0);
  MEMORY[0x270FA5388](v6 - 8);
  double v8 = v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0) + 40;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didLayoutSubviewsOnce) == 1)
  {
    uint64_t v9 = v3 + OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_rootComponent;
    swift_beginAccess();
    uint64_t v10 = sub_25E7480EC(v9, (uint64_t)v8, type metadata accessor for RootComponent);
    sub_25E74C5B4(v10);
    sub_25E7481BC((uint64_t)v8, type metadata accessor for RootComponent);
    type metadata accessor for GroupAnimation();
    uint64_t v11 = swift_allocObject();
    *(unsigned char *)(v11 + 16) = 0;
    *(void *)(v11 + 24) = 0;
    double v12 = (void (**)(void))(v11 + 24);
    *(void *)(v11 + 32) = 0;
    *(void *)(v11 + 40) = sub_25E75BE60();
    *(void *)(v11 + 48) = 1;
    sub_25E73CA28(v24);
    memcpy(v31, v23, sizeof(v31));
    sub_25E7431AC((long long *)v31, v11);
    sub_25E74A4CC((uint64_t)v17, (uint64_t)v30, &qword_26A7048F0);
    sub_25E74A4CC((uint64_t)&v19, (uint64_t)v29, &qword_26A7048F8);
    sub_25E73FE3C((uint64_t)v30, (uint64_t)v29, v11);
    sub_25E74A4CC((uint64_t)&v20, (uint64_t)v28, &qword_26A704900);
    sub_25E73F50C((uint64_t)v28, v11);
    sub_25E74A4CC((uint64_t)&v18, (uint64_t)v27, &qword_26A704908);
    sub_25E73E1DC((uint64_t)v27, v11);
    sub_25E74A4CC((uint64_t)&v21, (uint64_t)v26, &qword_26A704910);
    sub_25E741C24((uint64_t)v26, v11);
    sub_25E74A4CC((uint64_t)&v22, (uint64_t)v25, &qword_26A704918);
    sub_25E742454((uint64_t)v25, v11);
    uint64_t v13 = *(void *)(v11 + 24);
    *(void *)(v11 + 24) = a1;
    *(void *)(v11 + 32) = a2;
    swift_retain();
    sub_25E7499CC(v13);
    swift_beginAccess();
    if (!*(void *)(*(void *)(v11 + 40) + 16))
    {
      double v14 = *v12;
      if (*v12)
      {
        *double v12 = 0;
        *(void *)(v11 + 32) = 0;
        swift_retain();
        sub_25E7499CC((uint64_t)v14);
        v14(*(unsigned __int8 *)(v11 + 16));
        sub_25E7499CC((uint64_t)v14);
      }
    }
    swift_release();
    return sub_25E7499DC((uint64_t)v17);
  }
  else
  {
    uint64_t result = sub_25E75C120();
    __break(1u);
  }
  return result;
}

uint64_t sub_25E743EA4(double a1)
{
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v2 + 56;
    uint64_t v6 = (char *)MEMORY[0x263F8EE78];
    do
    {
      uint64_t v8 = *(void *)(v5 - 24);
      uint64_t v9 = *(void *)(v5 - 16);
      uint64_t v10 = *(uint64_t (**)(uint64_t, double))(v5 - 8);
      uint64_t v11 = swift_retain();
      LOBYTE(v10) = v10(v11, a1);
      swift_release();
      if (v10)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_25E7449F4(0, *((void *)v6 + 2) + 1, 1, v6);
        }
        unint64_t v13 = *((void *)v6 + 2);
        unint64_t v12 = *((void *)v6 + 3);
        if (v13 >= v12 >> 1) {
          uint64_t v6 = sub_25E7449F4((char *)(v12 > 1), v13 + 1, 1, v6);
        }
        *((void *)v6 + 2) = v13 + 1;
        uint64_t v7 = &v6[16 * v13];
        *((void *)v7 + 4) = v8;
        *((void *)v7 + 5) = v9;
      }
      v5 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v14 = sub_25E7498E0((uint64_t)v6, (void (*)(void))sub_25E749978, (uint64_t)&type metadata for ComponentAnimatableProperty.Milestone.ID, &qword_26A7048E0);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if (*(void *)(*(void *)(v1 + 136) + 16) <= *(void *)(v14 + 16) >> 3)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = swift_bridgeObjectRetain();
    sub_25E7470D8(v17);
    swift_bridgeObjectRelease();
    uint64_t v16 = v14;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = swift_bridgeObjectRetain();
    uint64_t v16 = sub_25E747268(v15, v14);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  sub_25E74418C(v14);
  swift_endAccess();
  uint64_t v18 = *(void *)(v1 + 128);
  int64_t v19 = *(void *)(v18 + 16);
  uint64_t v20 = MEMORY[0x263F8EE78];
  if (v19)
  {
    uint64_t v27 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_25E75A6A8(0, v19, 0);
    uint64_t v20 = v27;
    unint64_t v21 = *(void *)(v27 + 16);
    uint64_t v22 = 32;
    do
    {
      long long v23 = *(_OWORD *)(v18 + v22);
      unint64_t v24 = *(void *)(v27 + 24);
      if (v21 >= v24 >> 1)
      {
        long long v26 = *(_OWORD *)(v18 + v22);
        sub_25E75A6A8((char *)(v24 > 1), v21 + 1, 1);
        long long v23 = v26;
      }
      *(void *)(v27 + 16) = v21 + 1;
      *(_OWORD *)(v27 + 16 * v21 + 32) = v23;
      v22 += 32;
      ++v21;
      --v19;
    }
    while (v19);
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  *(void *)(v1 + 136) = sub_25E747654(v20, *(void *)(v1 + 136));
  swift_endAccess();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_25E74418C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_25E746294(&v13, *(void *)(*(void *)(v1 + 48) + 16 * v9), *(void *)(*(void *)(v1 + 48) + 16 * v9 + 8), &qword_26A7048E0);
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:
  return swift_release();
}

uint64_t sub_25E74430C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 144, 7);
}

uint64_t type metadata accessor for ScanwaveViewController.RootComponentUpdate(uint64_t a1)
{
  return sub_25E7355D0(a1, qword_26A7048B8);
}

uint64_t sub_25E744374()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E7443AC(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

char *sub_25E7443D8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A7049B8);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 32 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25E7444D4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A7049C0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 40 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_25E7445E8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

size_t sub_25E7446F0(size_t a1, int64_t a2, char a3, void *a4)
{
  return sub_25E744710(a1, a2, a3, a4, &qword_26A7048D0, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
}

size_t sub_25E744710(size_t result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  char v8 = result;
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  uint64_t result = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_29;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(result - v15) / v14);
LABEL_19:
  uint64_t v18 = *(void *)(a6(0) - 8);
  if (v8)
  {
    if (v16 < a4
      || (unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80),
          (char *)v16 + v19 >= (char *)a4 + v19 + *(void *)(v18 + 72) * v11))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return (size_t)v16;
}

char *sub_25E7448EC(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 24);
  }
  else
  {
    uint64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 24 * v9;
  if (v6)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, v15);
  }
  swift_bridgeObjectRelease();
  return v11;
}

char *sub_25E7449F4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A7048D8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_25E744AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = sub_25E7539F8(a1, a2);
  if ((v5 & 1) == 0) {
    return 0;
  }
  unint64_t v6 = v4;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = *v2;
  uint64_t v11 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25E754558();
    uint64_t v8 = v11;
  }
  uint64_t v9 = *(void *)(*(void *)(v8 + 56) + 8 * v6);
  sub_25E753BC4(v6, v8);
  uint64_t *v3 = v8;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_25E744B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_25E753A50(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_25E754700();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = type metadata accessor for ExternalRequestID(0);
    sub_25E7481BC(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, type metadata accessor for ExternalRequestID);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for ExternalContinuation(0);
    uint64_t v20 = *(void *)(v13 - 8);
    sub_25E748154(v12 + *(void *)(v20 + 72) * v6, a2, type metadata accessor for ExternalContinuation);
    sub_25E753C1C(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for ExternalContinuation(0);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }
  return v14(v15, v16, 1, v17);
}

uint64_t sub_25E744D50(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704990);
  uint64_t v6 = sub_25E75C150();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  int64_t v8 = 0;
  uint64_t v32 = (void *)(v5 + 64);
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  while (1)
  {
    if (v11)
    {
      unint64_t v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v19 = v18 | (v8 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_41;
    }
    if (v20 >= v31) {
      break;
    }
    unint64_t v21 = v32[v20];
    ++v8;
    if (!v21)
    {
      int64_t v8 = v20 + 1;
      if (v20 + 1 >= v31) {
        break;
      }
      unint64_t v21 = v32[v8];
      if (!v21)
      {
        int64_t v22 = v20 + 2;
        if (v22 >= v31) {
          break;
        }
        unint64_t v21 = v32[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v8 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_42;
            }
            if (v8 >= v31) {
              goto LABEL_33;
            }
            unint64_t v21 = v32[v8];
            ++v22;
            if (v21) {
              goto LABEL_30;
            }
          }
        }
        int64_t v8 = v22;
      }
    }
LABEL_30:
    unint64_t v11 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
LABEL_31:
    long long v33 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v19);
    uint64_t v27 = *(void **)(*(void *)(v5 + 56) + 8 * v19);
    if ((a2 & 1) == 0) {
      id v28 = v27;
    }
    sub_25E75C1D0();
    sub_25E75C1E0();
    uint64_t v13 = sub_25E75C200();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
      }
      BOOL v25 = v16 == v24;
      if (v16 == v24) {
        unint64_t v16 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v12 + 8 * v16);
    }
    while (v26 == -1);
    unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
LABEL_8:
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v17) = v33;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v27;
    ++*(void *)(v7 + 16);
  }
LABEL_33:
  if (a2)
  {
    uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v29 >= 64) {
      bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v32 = -1 << v29;
    }
    *(void *)(v5 + 16) = 0;
LABEL_39:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_25E74506C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ExternalContinuation(0);
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v43 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ExternalRequestID(0);
  uint64_t v41 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7049B0);
  int v42 = a2;
  uint64_t v11 = sub_25E75C150();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    id v37 = v2;
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v14 = *(void *)(v10 + 64);
    uint64_t v39 = (void *)(v10 + 64);
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v38 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v17 = v11 + 64;
    uint64_t result = swift_retain();
    int64_t v19 = 0;
    while (1)
    {
      if (v16)
      {
        unint64_t v21 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v22 = v21 | (v19 << 6);
      }
      else
      {
        int64_t v23 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v38) {
          goto LABEL_34;
        }
        unint64_t v24 = v39[v23];
        ++v19;
        if (!v24)
        {
          int64_t v19 = v23 + 1;
          if (v23 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v24 = v39[v19];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v38)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v10 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v39 = -1 << v36;
                }
                *(void *)(v10 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v39[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v19 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v19 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v24 = v39[v19];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v19 = v25;
          }
        }
LABEL_21:
        unint64_t v16 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v19 << 6);
      }
      uint64_t v26 = *(void *)(v41 + 72);
      uint64_t v27 = *(void *)(v10 + 48) + v26 * v22;
      if (v42)
      {
        sub_25E748154(v27, (uint64_t)v9, type metadata accessor for ExternalRequestID);
        uint64_t v28 = *(void *)(v40 + 72);
        sub_25E748154(*(void *)(v10 + 56) + v28 * v22, v43, type metadata accessor for ExternalContinuation);
      }
      else
      {
        sub_25E7480EC(v27, (uint64_t)v9, type metadata accessor for ExternalRequestID);
        uint64_t v28 = *(void *)(v40 + 72);
        sub_25E7480EC(*(void *)(v10 + 56) + v28 * v22, v43, type metadata accessor for ExternalContinuation);
      }
      sub_25E75C1D0();
      sub_25E75BE40();
      sub_25E74B7B8(qword_26A7046D0, MEMORY[0x263F07508]);
      sub_25E75BE70();
      uint64_t result = sub_25E75C200();
      uint64_t v29 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v17 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v30) & ~*(void *)(v17 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v17 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v20 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      sub_25E748154((uint64_t)v9, *(void *)(v12 + 48) + v26 * v20, type metadata accessor for ExternalRequestID);
      uint64_t result = sub_25E748154(v43, *(void *)(v12 + 56) + v28 * v20, type metadata accessor for ExternalContinuation);
      ++*(void *)(v12 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v12;
  return result;
}

uint64_t sub_25E74554C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704970);
  uint64_t v6 = sub_25E75C150();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_39;
  }
  int64_t v8 = 0;
  unint64_t v31 = (void *)(v5 + 64);
  uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  while (1)
  {
    if (v11)
    {
      unint64_t v18 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v19 = v18 | (v8 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_41;
    }
    if (v20 >= v30) {
      break;
    }
    unint64_t v21 = v31[v20];
    ++v8;
    if (!v21)
    {
      int64_t v8 = v20 + 1;
      if (v20 + 1 >= v30) {
        break;
      }
      unint64_t v21 = v31[v8];
      if (!v21)
      {
        int64_t v22 = v20 + 2;
        if (v22 >= v30) {
          break;
        }
        unint64_t v21 = v31[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v8 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_42;
            }
            if (v8 >= v30) {
              goto LABEL_33;
            }
            unint64_t v21 = v31[v8];
            ++v22;
            if (v21) {
              goto LABEL_30;
            }
          }
        }
        int64_t v8 = v22;
      }
    }
LABEL_30:
    unint64_t v11 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
LABEL_31:
    long long v32 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v19);
    uint64_t v27 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((a2 & 1) == 0) {
      swift_retain();
    }
    sub_25E75C1D0();
    sub_25E75C1E0();
    uint64_t v13 = sub_25E75C200();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = v13 & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v12 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v23 = 0;
    unint64_t v24 = (unint64_t)(63 - v14) >> 6;
    do
    {
      if (++v16 == v24 && (v23 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
      }
      BOOL v25 = v16 == v24;
      if (v16 == v24) {
        unint64_t v16 = 0;
      }
      v23 |= v25;
      uint64_t v26 = *(void *)(v12 + 8 * v16);
    }
    while (v26 == -1);
    unint64_t v17 = __clz(__rbit64(~v26)) + (v16 << 6);
LABEL_8:
    *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v17) = v32;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v27;
    ++*(void *)(v7 + 16);
  }
LABEL_33:
  if (a2)
  {
    uint64_t v28 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v3 = v2;
    if (v28 >= 64) {
      bzero(v31, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *unint64_t v31 = -1 << v28;
    }
    *(void *)(v5 + 16) = 0;
LABEL_39:
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    uint64_t v3 = v2;
  }
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_25E745870(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704938);
  uint64_t result = sub_25E75C150();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  *BOOL v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_25E75C1C0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      *unint64_t v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_25E745B28(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25E7539F8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25E754A18();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_release();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    unint64_t v21 = (uint64_t *)(v18[6] + 16 * v12);
    *unint64_t v21 = a2;
    v21[1] = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      _OWORD v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_25E74554C(result, a4 & 1);
  uint64_t result = sub_25E7539F8(a2, a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    unint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_25E75C1B0();
  __break(1u);
  return result;
}

uint64_t sub_25E745C70(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_25E753B80(a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_25E754BC0();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = (void *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *uint64_t v19 = a1;
      v19[1] = a2;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    *(void *)(v18[6] + 8 * v12) = a3;
    unint64_t v21 = (void *)(v18[7] + 16 * v12);
    *unint64_t v21 = a1;
    v21[1] = a2;
    uint64_t v22 = v18[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (!v23)
    {
      _OWORD v18[2] = v24;
      return result;
    }
    goto LABEL_14;
  }
  sub_25E745870(result, a4 & 1);
  uint64_t result = sub_25E753B80(a3);
  if ((v16 & 1) == (v20 & 1))
  {
    unint64_t v12 = result;
    unint64_t v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_25E75C1B0();
  __break(1u);
  return result;
}

uint64_t sub_25E745DB0(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for ExternalRequestID(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = (void *)*v3;
  unint64_t v13 = sub_25E753A50(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_25E754700();
      goto LABEL_7;
    }
    sub_25E74506C(v16, a3 & 1);
    unint64_t v23 = sub_25E753A50(a2);
    if ((v17 & 1) == (v24 & 1))
    {
      unint64_t v13 = v23;
      uint64_t v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_13:
      sub_25E7480EC(a2, (uint64_t)v10, type metadata accessor for ExternalRequestID);
      return sub_25E745F70(v13, (uint64_t)v10, a1, v19);
    }
LABEL_15:
    uint64_t result = sub_25E75C1B0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v19 = *v4;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = v19[7];
  uint64_t v21 = v20 + *(void *)(*(void *)(type metadata accessor for ExternalContinuation(0) - 8) + 72) * v13;
  return sub_25E74B754(a1, v21);
}

uint64_t sub_25E745F70(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for ExternalRequestID(0);
  sub_25E748154(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for ExternalRequestID);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for ExternalContinuation(0);
  uint64_t result = sub_25E748154(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, type metadata accessor for ExternalContinuation);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

size_t sub_25E74605C(size_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  size_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= v3[3] >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = sub_25E744710(result, v11, 1, v3, &qword_26A7048D0, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
  uint64_t v3 = (void *)result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = (v3[3] >> 1) - v3[2];
  uint64_t result = type metadata accessor for ScanwaveCommonAction();
  if (v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = v3[2];
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    v3[2] = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_25E7461A0(uint64_t result)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (result && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v6 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_13;
  }
  if (v4 <= v5) {
    int64_t v11 = v4 + v2;
  }
  else {
    int64_t v11 = v4;
  }
  uint64_t result = (uint64_t)sub_25E7448EC((char *)result, v11, 1, (char *)v3, &qword_26A7049D0);
  uint64_t v3 = result;
  if (!*(void *)(v6 + 16))
  {
LABEL_13:
    if (!v2) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
LABEL_5:
  uint64_t v7 = *(void *)(v3 + 16);
  if ((*(void *)(v3 + 24) >> 1) - v7 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t result = (uint64_t)memcpy((void *)(v3 + 24 * v7 + 32), (const void *)(v6 + 32), 24 * v2);
  if (!v2)
  {
LABEL_14:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v8 = *(void *)(v3 + 16);
  BOOL v9 = __OFADD__(v8, v2);
  uint64_t v10 = v8 + v2;
  if (!v9)
  {
    *(void *)(v3 + 16) = v10;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_25E746294(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v9 = *v4;
  sub_25E75C1D0();
  sub_25E75C1E0();
  uint64_t v10 = sub_25E75C200();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v13 = ~v11;
    while (1)
    {
      BOOL v14 = (uint64_t *)(*(void *)(v9 + 48) + 16 * v12);
      uint64_t v16 = *v14;
      uint64_t v15 = v14[1];
      if (v16 == a2 && v15 == a3) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v13;
      if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t result = 0;
    uint64_t v20 = (uint64_t *)(*(void *)(*v4 + 48) + 16 * v12);
    a2 = *v20;
    a3 = v20[1];
  }
  else
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v4;
    *int64_t v4 = 0x8000000000000000;
    sub_25E746F34(a2, a3, v12, isUniquelyReferenced_nonNull_native, a4);
    *int64_t v4 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = a2;
  a1[1] = a3;
  return result;
}

uint64_t sub_25E746418(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  sub_25E75C1D0();
  sub_25E75C1E0();
  uint64_t v8 = sub_25E75C200();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  uint64_t v11 = ~v9;
  while (1)
  {
    unint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v10);
    uint64_t v14 = *v12;
    uint64_t v13 = v12[1];
    if (v14 == a1 && v13 == a2) {
      break;
    }
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      return 0;
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v3;
  uint64_t v20 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_25E746598(a3);
    uint64_t v18 = v20;
  }
  uint64_t v16 = *(void *)(*(void *)(v18 + 48) + 16 * v10);
  sub_25E746D3C(v10);
  uint64_t *v3 = v20;
  swift_bridgeObjectRelease();
  return v16;
}

void *sub_25E746598(uint64_t *a1)
{
  uint64_t v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_25E75C070();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v5 + 48) + 16 * v16) = *(_OWORD *)(*(void *)(v3 + 48) + 16 * v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_25E746728(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_25E75C080();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_35;
  }
  int64_t v7 = 0;
  uint64_t v31 = v4 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_36;
    }
    if (v16 >= v32) {
      break;
    }
    unint64_t v17 = *(void *)(v31 + 8 * v16);
    ++v7;
    if (!v17)
    {
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v32) {
        break;
      }
      unint64_t v17 = *(void *)(v31 + 8 * v7);
      if (!v17)
      {
        int64_t v7 = v16 + 2;
        if (v16 + 2 >= v32) {
          break;
        }
        unint64_t v17 = *(void *)(v31 + 8 * v7);
        if (!v17)
        {
          int64_t v18 = v16 + 3;
          if (v18 >= v32) {
            break;
          }
          unint64_t v17 = *(void *)(v31 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v7 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_37;
              }
              if (v7 >= v32) {
                goto LABEL_33;
              }
              unint64_t v17 = *(void *)(v31 + 8 * v7);
              ++v18;
              if (v17) {
                goto LABEL_23;
              }
            }
          }
          int64_t v7 = v18;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v15);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    sub_25E75C1D0();
    sub_25E75C1E0();
    uint64_t v22 = sub_25E75C200();
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v26 = 0;
    unint64_t v27 = (unint64_t)(63 - v23) >> 6;
    do
    {
      if (++v25 == v27 && (v26 & 1) != 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
      }
      BOOL v28 = v25 == v27;
      if (v25 == v27) {
        unint64_t v25 = 0;
      }
      v26 |= v28;
      uint64_t v29 = *(void *)(v11 + 8 * v25);
    }
    while (v29 == -1);
    unint64_t v12 = __clz(__rbit64(~v29)) + (v25 << 6);
LABEL_7:
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v6 + 48) + 16 * v12);
    *unint64_t v13 = v21;
    v13[1] = v20;
    ++*(void *)(v6 + 16);
  }
LABEL_33:
  uint64_t result = swift_release();
  uint64_t v3 = v2;
LABEL_35:
  uint64_t *v3 = v6;
  return result;
}

uint64_t sub_25E746A18(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v5 = sub_25E75C080();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_37;
  }
  int64_t v7 = 0;
  int64_t v33 = (void *)(v4 + 56);
  uint64_t v8 = 1 << *(unsigned char *)(v4 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_38;
    }
    if (v16 >= v32) {
      break;
    }
    unint64_t v17 = v33[v16];
    ++v7;
    if (!v17)
    {
      int64_t v7 = v16 + 1;
      if (v16 + 1 >= v32) {
        break;
      }
      unint64_t v17 = v33[v7];
      if (!v17)
      {
        int64_t v7 = v16 + 2;
        if (v16 + 2 >= v32) {
          break;
        }
        unint64_t v17 = v33[v7];
        if (!v17)
        {
          int64_t v18 = v16 + 3;
          if (v18 >= v32) {
            break;
          }
          unint64_t v17 = v33[v18];
          if (!v17)
          {
            while (1)
            {
              int64_t v7 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_39;
              }
              if (v7 >= v32) {
                goto LABEL_33;
              }
              unint64_t v17 = v33[v7];
              ++v18;
              if (v17) {
                goto LABEL_23;
              }
            }
          }
          int64_t v7 = v18;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_25E75C1D0();
    sub_25E75C1E0();
    uint64_t v22 = sub_25E75C200();
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v26 = 0;
    unint64_t v27 = (unint64_t)(63 - v23) >> 6;
    do
    {
      if (++v25 == v27 && (v26 & 1) != 0)
      {
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
      }
      BOOL v28 = v25 == v27;
      if (v25 == v27) {
        unint64_t v25 = 0;
      }
      v26 |= v28;
      uint64_t v29 = *(void *)(v11 + 8 * v25);
    }
    while (v29 == -1);
    unint64_t v12 = __clz(__rbit64(~v29)) + (v25 << 6);
LABEL_7:
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v6 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v6 + 16);
  }
LABEL_33:
  uint64_t v30 = 1 << *(unsigned char *)(v4 + 32);
  if (v30 > 63) {
    bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v33 = -1 << v30;
  }
  uint64_t v3 = v2;
  *(void *)(v4 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  uint64_t *v3 = v6;
  return result;
}

unint64_t sub_25E746D3C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_25E75C060();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_25E75C1D0();
        sub_25E75C1E0();
        unint64_t v10 = sub_25E75C200() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 < v9) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(v3 + 48);
          unint64_t v12 = (_OWORD *)(v11 + 16 * v2);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v12 >= v13 + 1))
          {
            *unint64_t v12 = *v13;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v14 = *(void *)(v3 + 16);
  BOOL v15 = __OFSUB__(v14, 1);
  uint64_t v16 = v14 - 1;
  if (v15) {
    __break(1u);
  }
  *(void *)(v3 + 16) = v16;
  ++*(_DWORD *)(v3 + 36);
  return result;
}

uint64_t sub_25E746F34(uint64_t result, uint64_t a2, unint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
  {
LABEL_15:
    uint64_t v19 = *v5;
    *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
    uint64_t v20 = (uint64_t *)(*(void *)(v19 + 48) + 16 * a3);
    *uint64_t v20 = v8;
    v20[1] = a2;
    uint64_t v21 = *(void *)(v19 + 16);
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      __break(1u);
    }
    *(void *)(v19 + 16) = v23;
    return result;
  }
  uint64_t v11 = v9 + 1;
  if (a4)
  {
    sub_25E746A18(v11, a5);
    goto LABEL_8;
  }
  if (v10 > v9)
  {
    uint64_t result = (uint64_t)sub_25E746598(a5);
    goto LABEL_15;
  }
  sub_25E746728(v11, a5);
LABEL_8:
  uint64_t v12 = *v5;
  sub_25E75C1D0();
  sub_25E75C1E0();
  uint64_t result = sub_25E75C200();
  uint64_t v13 = -1 << *(unsigned char *)(v12 + 32);
  a3 = result & ~v13;
  if (((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
    goto LABEL_15;
  }
  uint64_t v14 = ~v13;
  while (1)
  {
    BOOL v15 = (uint64_t *)(*(void *)(v12 + 48) + 16 * a3);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    if (v17 == v8 && v16 == a2) {
      break;
    }
    a3 = (a3 + 1) & v14;
    if (((*(void *)(v12 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
      goto LABEL_15;
    }
  }
  uint64_t result = sub_25E75C1A0();
  __break(1u);
  return result;
}

uint64_t sub_25E7470D8(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_25E746418(*(void *)(*(void *)(v2 + 48) + 16 * v10), *(void *)(*(void *)(v2 + 48) + 16 * v10 + 8), &qword_26A7048E0);
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:
  return swift_release();
}

uint64_t sub_25E747268(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  _OWORD v39[5] = *MEMORY[0x263EF8340];
  if (*(void *)(a2 + 16))
  {
    int64_t v4 = 0;
    uint64_t v6 = a1 + 56;
    uint64_t v5 = *(void *)(a1 + 56);
    uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v36 = ~v7;
    if (-v7 < 64) {
      uint64_t v8 = ~(-1 << -(char)v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & v5;
    int64_t v37 = (unint64_t)(63 - v7) >> 6;
    uint64_t v10 = a2 + 56;
    do
    {
LABEL_6:
      if (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v4 << 6);
      }
      else
      {
        int64_t v13 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_39;
        }
        if (v13 >= v37) {
          goto LABEL_36;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v13);
        int64_t v15 = v4 + 1;
        if (!v14)
        {
          int64_t v15 = v4 + 2;
          if (v4 + 2 >= v37) {
            goto LABEL_36;
          }
          unint64_t v14 = *(void *)(v6 + 8 * v15);
          if (!v14)
          {
            int64_t v15 = v4 + 3;
            if (v4 + 3 >= v37) {
              goto LABEL_36;
            }
            unint64_t v14 = *(void *)(v6 + 8 * v15);
            if (!v14)
            {
              int64_t v15 = v4 + 4;
              if (v4 + 4 >= v37) {
                goto LABEL_36;
              }
              unint64_t v14 = *(void *)(v6 + 8 * v15);
              if (!v14)
              {
                int64_t v16 = v4 + 5;
                if (v4 + 5 >= v37)
                {
LABEL_36:
                  swift_bridgeObjectRetain();
                  sub_25E749970();
                  return v2;
                }
                unint64_t v14 = *(void *)(v6 + 8 * v16);
                if (!v14)
                {
                  while (1)
                  {
                    int64_t v15 = v16 + 1;
                    if (__OFADD__(v16, 1)) {
                      break;
                    }
                    if (v15 >= v37) {
                      goto LABEL_36;
                    }
                    unint64_t v14 = *(void *)(v6 + 8 * v15);
                    ++v16;
                    if (v14) {
                      goto LABEL_23;
                    }
                  }
LABEL_39:
                  __break(1u);
                }
                int64_t v15 = v4 + 5;
              }
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
        int64_t v4 = v15;
      }
      uint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      sub_25E75C1D0();
      uint64_t v38 = v18 ^ v19;
      sub_25E75C1E0();
      uint64_t v20 = sub_25E75C200();
      uint64_t v21 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v22 = v20 & ~v21;
    }
    while (((*(void *)(v10 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0);
    while (1)
    {
      uint64_t v23 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v22);
      uint64_t v25 = *v23;
      uint64_t v24 = v23[1];
      if (v25 == v19 && v24 == v18) {
        break;
      }
      unint64_t v22 = (v22 + 1) & ~v21;
      if (((*(void *)(v10 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
        goto LABEL_6;
      }
    }
    v39[0] = a1;
    v39[1] = v6;
    v39[2] = v36;
    v39[3] = v4;
    v39[4] = v9;
    unint64_t v27 = (unint64_t)(63 - v21) >> 6;
    size_t v28 = 8 * v27;
    uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
    if (v27 <= 0x80 || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      MEMORY[0x270FA5388](isStackAllocationSafe);
      uint64_t v31 = (unint64_t *)((char *)&v36 - v30);
      memcpy((char *)&v36 - v30, (const void *)(v2 + 56), v28);
      uint64_t v32 = sub_25E747C40(v31, v27, v2, v22, v39);
      swift_release();
      sub_25E749970();
      return v32;
    }
    else
    {
      int64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v28);
      uint64_t v34 = sub_25E747C40((unint64_t *)v33, v27, v2, v22, v39);
      swift_release();
      sub_25E749970();
      MEMORY[0x2611E26F0](v33, -1, -1);
      return v34;
    }
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_25E747654(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_25E7477DC((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_25E7477DC((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x2611E26F0](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_25E7477DC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a3 + 16);
  if (v5)
  {
    uint64_t v25 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = a4 + 56;
    uint64_t v8 = a3 + 32;
    do
    {
      unint64_t v12 = (uint64_t *)(v8 + 16 * v6);
      uint64_t v13 = *v12;
      uint64_t v14 = v12[1];
      sub_25E75C1D0();
      sub_25E75C1E0();
      uint64_t v15 = sub_25E75C200();
      uint64_t v16 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v17 = v15 & ~v16;
      if ((*(void *)(v7 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17))
      {
        uint64_t v18 = ~v16;
        while (1)
        {
          uint64_t v19 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v17);
          uint64_t v21 = *v19;
          uint64_t v20 = v19[1];
          if (v21 == v13 && v20 == v14) {
            break;
          }
          unint64_t v17 = (v17 + 1) & v18;
          if (((*(void *)(v7 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
            goto LABEL_4;
          }
        }
        uint64_t v9 = (v17 >> 3) & 0x1FFFFFFFFFFFFFF8;
        uint64_t v10 = 1 << v17;
        uint64_t v11 = *(unint64_t *)((char *)a1 + v9);
        *(unint64_t *)((char *)a1 + v9) = v11 | v10;
        if ((v11 & v10) == 0)
        {
          if (__OFADD__(v25, 1)) {
            __break(1u);
          }
          ++v25;
        }
      }
LABEL_4:
      ++v6;
    }
    while (v6 != v5);
  }
  else
  {
    uint64_t v25 = 0;
  }
  swift_retain();
  return sub_25E74797C(a1, a2, v25, a4);
}

uint64_t sub_25E74797C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v5 = a3;
    if (*(void *)(a4 + 16) != a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26A7048E0);
      uint64_t v9 = sub_25E75C090();
      uint64_t v6 = v9;
      int64_t v33 = a1;
      uint64_t v34 = a2;
      if (a2 < 1) {
        unint64_t v10 = 0;
      }
      else {
        unint64_t v10 = *a1;
      }
      uint64_t v11 = 0;
      uint64_t v12 = v9 + 56;
      while (1)
      {
        if (v10)
        {
          unint64_t v13 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          unint64_t v14 = v13 | (v11 << 6);
        }
        else
        {
          uint64_t v15 = v11 + 1;
          if (__OFADD__(v11, 1)) {
            goto LABEL_40;
          }
          if (v15 >= v34) {
            goto LABEL_37;
          }
          unint64_t v16 = v33[v15];
          ++v11;
          if (!v16)
          {
            uint64_t v11 = v15 + 1;
            if (v15 + 1 >= v34) {
              goto LABEL_37;
            }
            unint64_t v16 = v33[v11];
            if (!v16)
            {
              uint64_t v11 = v15 + 2;
              if (v15 + 2 >= v34) {
                goto LABEL_37;
              }
              unint64_t v16 = v33[v11];
              if (!v16)
              {
                uint64_t v17 = v15 + 3;
                if (v17 >= v34) {
                  goto LABEL_37;
                }
                unint64_t v16 = v33[v17];
                if (!v16)
                {
                  while (1)
                  {
                    uint64_t v11 = v17 + 1;
                    if (__OFADD__(v17, 1)) {
                      goto LABEL_41;
                    }
                    if (v11 >= v34) {
                      goto LABEL_37;
                    }
                    unint64_t v16 = v33[v11];
                    ++v17;
                    if (v16) {
                      goto LABEL_24;
                    }
                  }
                }
                uint64_t v11 = v17;
              }
            }
          }
LABEL_24:
          unint64_t v10 = (v16 - 1) & v16;
          unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
        }
        uint64_t v18 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v14);
        uint64_t v19 = *v18;
        uint64_t v20 = v18[1];
        sub_25E75C1D0();
        sub_25E75C1E0();
        uint64_t v21 = sub_25E75C200();
        uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v23 = v21 & ~v22;
        unint64_t v24 = v23 >> 6;
        if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
        {
          unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
          goto LABEL_35;
        }
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
LABEL_39:
            __break(1u);
LABEL_40:
            __break(1u);
LABEL_41:
            __break(1u);
          }
          BOOL v28 = v24 == v27;
          if (v24 == v27) {
            unint64_t v24 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v24);
        }
        while (v29 == -1);
        unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
LABEL_35:
        *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
        uint64_t v30 = (void *)(*(void *)(v6 + 48) + 16 * v25);
        *uint64_t v30 = v19;
        v30[1] = v20;
        ++*(void *)(v6 + 16);
        if (__OFSUB__(v5--, 1)) {
          goto LABEL_39;
        }
        if (!v5)
        {
LABEL_37:
          swift_release();
          return v6;
        }
      }
    }
    return a4;
  }
  else
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
}

uint64_t sub_25E747C40(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v8 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v9 = v8 - 1;
  uint64_t v10 = a3 + 56;
LABEL_2:
  uint64_t v37 = v9;
  while (1)
  {
LABEL_4:
    int64_t v15 = a5[3];
    unint64_t v14 = a5[4];
    if (v14)
    {
      uint64_t v16 = (v14 - 1) & v14;
      unint64_t v17 = __clz(__rbit64(v14)) | (v15 << 6);
      goto LABEL_16;
    }
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
    }
    int64_t v19 = (unint64_t)(a5[2] + 64) >> 6;
    if (v18 >= v19)
    {
      int64_t v18 = a5[3];
      goto LABEL_36;
    }
    uint64_t v20 = a5[1];
    unint64_t v21 = *(void *)(v20 + 8 * v18);
    if (!v21) {
      break;
    }
LABEL_15:
    uint64_t v16 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v18 << 6);
    int64_t v15 = v18;
LABEL_16:
    unint64_t v23 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v17);
    uint64_t v24 = *v23;
    uint64_t v25 = v23[1];
    a5[3] = v15;
    a5[4] = v16;
    sub_25E75C1D0();
    sub_25E75C1E0();
    uint64_t v26 = sub_25E75C200();
    uint64_t v27 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v28 = v26 & ~v27;
    if ((*(void *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28))
    {
      uint64_t v29 = ~v27;
      while (1)
      {
        uint64_t v30 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v28);
        uint64_t v32 = *v30;
        uint64_t v31 = v30[1];
        if (v32 == v24 && v31 == v25) {
          break;
        }
        unint64_t v28 = (v28 + 1) & v29;
        if (((*(void *)(v10 + ((v28 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v28) & 1) == 0) {
          goto LABEL_4;
        }
      }
      uint64_t v11 = (v28 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v12 = 1 << v28;
      uint64_t v13 = *(unint64_t *)((char *)a1 + v11);
      *(unint64_t *)((char *)a1 + v11) = v13 & ~v12;
      if ((v13 & v12) != 0)
      {
        uint64_t v9 = v37 - 1;
        if (__OFSUB__(v37, 1)) {
          goto LABEL_40;
        }
        if (v37 == 1) {
          return MEMORY[0x263F8EE88];
        }
        goto LABEL_2;
      }
    }
  }
  int64_t v22 = v15 + 2;
  if (v15 + 2 >= v19) {
    goto LABEL_36;
  }
  unint64_t v21 = *(void *)(v20 + 8 * v22);
  if (v21)
  {
LABEL_11:
    int64_t v18 = v22;
    goto LABEL_15;
  }
  if (v15 + 3 >= v19) {
    goto LABEL_37;
  }
  unint64_t v21 = *(void *)(v20 + 8 * (v15 + 3));
  if (v21)
  {
    int64_t v18 = v15 + 3;
    goto LABEL_15;
  }
  int64_t v22 = v15 + 4;
  if (v15 + 4 < v19)
  {
    unint64_t v21 = *(void *)(v20 + 8 * v22);
    if (!v21)
    {
      int64_t v18 = v15 + 5;
      if (v15 + 5 >= v19)
      {
LABEL_37:
        int64_t v18 = v22;
        goto LABEL_36;
      }
      unint64_t v21 = *(void *)(v20 + 8 * v18);
      if (!v21)
      {
        int64_t v18 = v19 - 1;
        int64_t v34 = v15 + 6;
        do
        {
          if (v19 == v34) {
            goto LABEL_36;
          }
          unint64_t v21 = *(void *)(v20 + 8 * v34++);
        }
        while (!v21);
        int64_t v18 = v34 - 1;
      }
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  int64_t v18 = v15 + 3;
LABEL_36:
  a5[3] = v18;
  a5[4] = 0;
  swift_retain();
  return sub_25E74797C(a1, a2, v37, a3);
}

uint64_t sub_25E747EF8(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 72);
  return a1(&v4);
}

uint64_t sub_25E747F64(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 72);
  return a1(&v4);
}

uint64_t sub_25E747FD0(uint64_t (*a1)(long long *), uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a3 + 72);
  return a1(&v4);
}

uint64_t sub_25E74803C(uint64_t (*a1)(_OWORD *), uint64_t a2, uint64_t a3)
{
  v4[0] = *(_OWORD *)(a3 + 72);
  v4[1] = *(_OWORD *)(a3 + 88);
  return a1(v4);
}

uint64_t sub_25E7480B0(char *a1)
{
  uint64_t v2 = *(uint64_t (**)(char *))(v1 + 16);
  char v4 = *a1;
  return v2(&v4);
}

uint64_t sub_25E7480EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E748154(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E7481BC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_25E74821C(id result, void *a2)
{
  if (result)
  {
    id v2 = result;
    return a2;
  }
  return result;
}

void sub_25E74825C(void *a1, void *a2)
{
  if (a1)
  {
  }
}

uint64_t sub_25E74829C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 1000);
  uint64_t v3 = *(void **)(a1 + 1080);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25E748324()
{
  return type metadata accessor for ScanwaveViewController(0);
}

uint64_t sub_25E74832C()
{
  uint64_t result = type metadata accessor for RootComponent(319);
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t method lookup function for ScanwaveViewController(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ScanwaveViewController);
}

uint64_t dispatch thunk of ScanwaveViewController.activate()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x118))();
}

uint64_t dispatch thunk of ScanwaveViewController.activate(with:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x120))();
}

uint64_t dispatch thunk of ScanwaveViewController.imageConfiguration.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x128))();
}

uint64_t dispatch thunk of ScanwaveViewController.imageConfiguration.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x130))();
}

uint64_t dispatch thunk of ScanwaveViewController.imageConfiguration.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x138))();
}

uint64_t dispatch thunk of ScanwaveViewController.settings(_:changedValueForKeyPath:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x140))();
}

uint64_t type metadata accessor for ScanwaveViewController.AnimatablePropertyContext()
{
  return self;
}

uint64_t sub_25E7485E4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ScanwaveCommonEvent();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        *(void *)a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy((void *)a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v8 = sub_25E75BE40();
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      long long v10 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      long long v11 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v11;
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      memcpy((void *)(a1 + 80), a2 + 10, 0x150uLL);
      long long v12 = *((_OWORD *)a2 + 31);
      *(_OWORD *)(a1 + 480) = *((_OWORD *)a2 + 30);
      *(_OWORD *)(a1 + 496) = v12;
      *(_OWORD *)(a1 + 512) = *((_OWORD *)a2 + 32);
      *(void *)(a1 + 528) = a2[66];
      long long v13 = *((_OWORD *)a2 + 27);
      *(_OWORD *)(a1 + 416) = *((_OWORD *)a2 + 26);
      *(_OWORD *)(a1 + 432) = v13;
      long long v14 = *((_OWORD *)a2 + 29);
      *(_OWORD *)(a1 + 448) = *((_OWORD *)a2 + 28);
      *(_OWORD *)(a1 + 464) = v14;
      long long v15 = *(_OWORD *)(a2 + 67);
      *(void *)(a1 + 552) = a2[69];
      *(_OWORD *)(a1 + 536) = v15;
      *(void *)(a1 + 560) = a2[70];
      *(void *)(a1 + 568) = a2[71];
      *(_OWORD *)(a1 + 576) = *((_OWORD *)a2 + 36);
      *(void *)(a1 + 592) = a2[74];
      *(void *)(a1 + 600) = a2[75];
      long long v16 = *((_OWORD *)a2 + 39);
      *(_OWORD *)(a1 + 608) = *((_OWORD *)a2 + 38);
      *(_OWORD *)(a1 + 624) = v16;
      long long v17 = *((_OWORD *)a2 + 40);
      long long v18 = *((_OWORD *)a2 + 41);
      long long v19 = *((_OWORD *)a2 + 43);
      *(_OWORD *)(a1 + 672) = *((_OWORD *)a2 + 42);
      *(_OWORD *)(a1 + 688) = v19;
      *(_OWORD *)(a1 + 640) = v17;
      *(_OWORD *)(a1 + 656) = v18;
      long long v20 = *((_OWORD *)a2 + 47);
      *(_OWORD *)(a1 + 736) = *((_OWORD *)a2 + 46);
      *(_OWORD *)(a1 + 752) = v20;
      long long v21 = *((_OWORD *)a2 + 45);
      *(_OWORD *)(a1 + 704) = *((_OWORD *)a2 + 44);
      *(_OWORD *)(a1 + 720) = v21;
      long long v22 = *((_OWORD *)a2 + 49);
      *(_OWORD *)(a1 + 768) = *((_OWORD *)a2 + 48);
      *(_OWORD *)(a1 + 784) = v22;
      long long v23 = *((_OWORD *)a2 + 50);
      long long v24 = *((_OWORD *)a2 + 51);
      long long v25 = *((_OWORD *)a2 + 52);
      long long v26 = *((_OWORD *)a2 + 53);
      *(void *)(a1 + 864) = a2[108];
      *(_OWORD *)(a1 + 832) = v25;
      *(_OWORD *)(a1 + 848) = v26;
      *(_OWORD *)(a1 + 800) = v23;
      *(_OWORD *)(a1 + 816) = v24;
      *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 109);
      long long v27 = *(_OWORD *)(a2 + 113);
      *(_OWORD *)(a1 + 888) = *(_OWORD *)(a2 + 111);
      *(_OWORD *)(a1 + 904) = v27;
      long long v28 = *(_OWORD *)(a2 + 115);
      long long v29 = *(_OWORD *)(a2 + 117);
      long long v30 = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 119);
      *(_OWORD *)(a1 + 968) = v30;
      *(_OWORD *)(a1 + 920) = v28;
      *(_OWORD *)(a1 + 936) = v29;
      long long v31 = *(_OWORD *)(a2 + 123);
      long long v32 = *(_OWORD *)(a2 + 125);
      long long v33 = *(_OWORD *)(a2 + 131);
      *(_OWORD *)(a1 + 1032) = *(_OWORD *)(a2 + 129);
      *(_OWORD *)(a1 + 1048) = v33;
      long long v34 = *(_OWORD *)(a2 + 127);
      *(_OWORD *)(a1 + 1000) = v32;
      *(_OWORD *)(a1 + 1016) = v34;
      *(_OWORD *)(a1 + 984) = v31;
      uint64_t v35 = (void *)a2[133];
      *(void *)(a1 + 1064) = v35;
      *(_OWORD *)(a1 + 1088) = *((_OWORD *)a2 + 68);
      *(_OWORD *)(a1 + 1104) = *((_OWORD *)a2 + 69);
      *(_OWORD *)(a1 + 1120) = *((_OWORD *)a2 + 70);
      *(_WORD *)(a1 + 1136) = *((_WORD *)a2 + 568);
      *(_OWORD *)(a1 + 1072) = *((_OWORD *)a2 + 67);
      *(unsigned char *)(a1 + 1138) = *((unsigned char *)a2 + 1138);
      uint64_t v36 = (void *)a2[143];
      *(void *)(a1 + 1144) = v36;
      *(_OWORD *)(a1 + 1152) = *((_OWORD *)a2 + 72);
      long long v37 = *((_OWORD *)a2 + 73);
      long long v38 = *((_OWORD *)a2 + 74);
      long long v39 = *((_OWORD *)a2 + 75);
      *(_WORD *)(a1 + 1216) = *((_WORD *)a2 + 608);
      *(_OWORD *)(a1 + 1200) = v39;
      *(_OWORD *)(a1 + 1184) = v38;
      *(_OWORD *)(a1 + 1168) = v37;
      *(unsigned char *)(a1 + 1218) = *((unsigned char *)a2 + 1218);
      uint64_t v40 = (void *)a2[153];
      *(void *)(a1 + 1224) = v40;
      *(_OWORD *)(a1 + 1232) = *((_OWORD *)a2 + 77);
      long long v41 = *((_OWORD *)a2 + 78);
      long long v42 = *((_OWORD *)a2 + 79);
      long long v43 = *((_OWORD *)a2 + 80);
      *(unsigned char *)(a1 + 1296) = *((unsigned char *)a2 + 1296);
      *(_OWORD *)(a1 + 1280) = v43;
      *(_OWORD *)(a1 + 1264) = v42;
      *(_OWORD *)(a1 + 1248) = v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v44 = v35;
      id v45 = v36;
      id v46 = v40;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_25E748980(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    type metadata accessor for ScanwaveCommonEvent();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3 || EnumCaseMultiPayload == 1)
    {
      swift_bridgeObjectRelease();
    }
    else if (!EnumCaseMultiPayload)
    {
      uint64_t v3 = sub_25E75BE40();
      char v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      v4(a1, v3);
    }
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    int v5 = *(void **)(a1 + 1224);
  }
}

uint64_t sub_25E748A94(uint64_t a1, uint64_t a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for ScanwaveCommonEvent();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 3)
    {
      *(void *)a1 = *(void *)a2;
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v4 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_25E75BE40();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    memcpy((void *)(a1 + 80), (const void *)(a2 + 80), 0x150uLL);
    long long v9 = *(_OWORD *)(a2 + 496);
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 496) = v9;
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    long long v10 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v10;
    long long v11 = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 464) = v11;
    long long v12 = *(_OWORD *)(a2 + 536);
    *(void *)(a1 + 552) = *(void *)(a2 + 552);
    *(_OWORD *)(a1 + 536) = v12;
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    long long v13 = *(_OWORD *)(a2 + 624);
    *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
    *(_OWORD *)(a1 + 624) = v13;
    long long v14 = *(_OWORD *)(a2 + 640);
    long long v15 = *(_OWORD *)(a2 + 656);
    long long v16 = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
    *(_OWORD *)(a1 + 688) = v16;
    *(_OWORD *)(a1 + 640) = v14;
    *(_OWORD *)(a1 + 656) = v15;
    long long v17 = *(_OWORD *)(a2 + 752);
    *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 752) = v17;
    long long v18 = *(_OWORD *)(a2 + 720);
    *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 720) = v18;
    long long v19 = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
    *(_OWORD *)(a1 + 784) = v19;
    long long v20 = *(_OWORD *)(a2 + 800);
    long long v21 = *(_OWORD *)(a2 + 816);
    long long v22 = *(_OWORD *)(a2 + 832);
    long long v23 = *(_OWORD *)(a2 + 848);
    *(void *)(a1 + 864) = *(void *)(a2 + 864);
    *(_OWORD *)(a1 + 832) = v22;
    *(_OWORD *)(a1 + 848) = v23;
    *(_OWORD *)(a1 + 800) = v20;
    *(_OWORD *)(a1 + 816) = v21;
    *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
    long long v24 = *(_OWORD *)(a2 + 904);
    *(_OWORD *)(a1 + 888) = *(_OWORD *)(a2 + 888);
    *(_OWORD *)(a1 + 904) = v24;
    long long v25 = *(_OWORD *)(a2 + 920);
    long long v26 = *(_OWORD *)(a2 + 936);
    long long v27 = *(_OWORD *)(a2 + 968);
    *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 952);
    *(_OWORD *)(a1 + 968) = v27;
    *(_OWORD *)(a1 + 920) = v25;
    *(_OWORD *)(a1 + 936) = v26;
    long long v28 = *(_OWORD *)(a2 + 984);
    long long v29 = *(_OWORD *)(a2 + 1000);
    long long v30 = *(_OWORD *)(a2 + 1048);
    *(_OWORD *)(a1 + 1032) = *(_OWORD *)(a2 + 1032);
    *(_OWORD *)(a1 + 1048) = v30;
    long long v31 = *(_OWORD *)(a2 + 1016);
    *(_OWORD *)(a1 + 1000) = v29;
    *(_OWORD *)(a1 + 1016) = v31;
    *(_OWORD *)(a1 + 984) = v28;
    long long v32 = *(void **)(a2 + 1064);
    *(void *)(a1 + 1064) = v32;
    *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
    *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
    *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
    *(_WORD *)(a1 + 1136) = *(_WORD *)(a2 + 1136);
    *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
    *(unsigned char *)(a1 + 1138) = *(unsigned char *)(a2 + 1138);
    long long v33 = *(void **)(a2 + 1144);
    *(void *)(a1 + 1144) = v33;
    *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
    long long v34 = *(_OWORD *)(a2 + 1168);
    long long v35 = *(_OWORD *)(a2 + 1184);
    long long v36 = *(_OWORD *)(a2 + 1200);
    *(_WORD *)(a1 + 1216) = *(_WORD *)(a2 + 1216);
    *(_OWORD *)(a1 + 1200) = v36;
    *(_OWORD *)(a1 + 1184) = v35;
    *(_OWORD *)(a1 + 1168) = v34;
    *(unsigned char *)(a1 + 1218) = *(unsigned char *)(a2 + 1218);
    long long v37 = *(void **)(a2 + 1224);
    *(void *)(a1 + 1224) = v37;
    *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
    long long v38 = *(_OWORD *)(a2 + 1248);
    long long v39 = *(_OWORD *)(a2 + 1264);
    long long v40 = *(_OWORD *)(a2 + 1280);
    *(unsigned char *)(a1 + 1296) = *(unsigned char *)(a2 + 1296);
    *(_OWORD *)(a1 + 1280) = v40;
    *(_OWORD *)(a1 + 1264) = v39;
    *(_OWORD *)(a1 + 1248) = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v41 = v32;
    id v42 = v33;
    id v43 = v37;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_25E748DE0(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_25E7481BC(a1, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v4 = type metadata accessor for ScanwaveCommonEvent();
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 3)
      {
        *(void *)a1 = *(void *)a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
      }
      else if (EnumCaseMultiPayload)
      {
        memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v4 - 8) + 64));
      }
      else
      {
        uint64_t v6 = sub_25E75BE40();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      long long v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      long long v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      memcpy((void *)(a1 + 80), (const void *)(a2 + 80), 0x150uLL);
      long long v9 = *(_OWORD *)(a2 + 464);
      long long v11 = *(_OWORD *)(a2 + 416);
      long long v10 = *(_OWORD *)(a2 + 432);
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      *(_OWORD *)(a1 + 464) = v9;
      *(_OWORD *)(a1 + 416) = v11;
      *(_OWORD *)(a1 + 432) = v10;
      long long v13 = *(_OWORD *)(a2 + 496);
      long long v12 = *(_OWORD *)(a2 + 512);
      long long v14 = *(_OWORD *)(a2 + 480);
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(_OWORD *)(a1 + 496) = v13;
      *(_OWORD *)(a1 + 512) = v12;
      *(_OWORD *)(a1 + 480) = v14;
      long long v15 = *(_OWORD *)(a2 + 536);
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      *(_OWORD *)(a1 + 536) = v15;
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
      *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
      long long v16 = *(_OWORD *)(a2 + 688);
      long long v18 = *(_OWORD *)(a2 + 640);
      long long v17 = *(_OWORD *)(a2 + 656);
      *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
      *(_OWORD *)(a1 + 688) = v16;
      *(_OWORD *)(a1 + 640) = v18;
      *(_OWORD *)(a1 + 656) = v17;
      long long v20 = *(_OWORD *)(a2 + 720);
      long long v19 = *(_OWORD *)(a2 + 736);
      long long v21 = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
      *(_OWORD *)(a1 + 768) = v21;
      *(_OWORD *)(a1 + 720) = v20;
      *(_OWORD *)(a1 + 736) = v19;
      *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
      long long v23 = *(_OWORD *)(a2 + 832);
      long long v22 = *(_OWORD *)(a2 + 848);
      long long v24 = *(_OWORD *)(a2 + 816);
      *(void *)(a1 + 864) = *(void *)(a2 + 864);
      *(_OWORD *)(a1 + 832) = v23;
      *(_OWORD *)(a1 + 848) = v22;
      *(_OWORD *)(a1 + 816) = v24;
      long long v25 = *(_OWORD *)(a2 + 800);
      *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 800) = v25;
      *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
      long long v27 = *(_OWORD *)(a2 + 904);
      long long v26 = *(_OWORD *)(a2 + 920);
      *(_OWORD *)(a1 + 888) = *(_OWORD *)(a2 + 888);
      *(_OWORD *)(a1 + 904) = v27;
      *(_OWORD *)(a1 + 920) = v26;
      long long v28 = *(_OWORD *)(a2 + 984);
      long long v30 = *(_OWORD *)(a2 + 936);
      long long v29 = *(_OWORD *)(a2 + 952);
      *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
      *(_OWORD *)(a1 + 984) = v28;
      *(_OWORD *)(a1 + 936) = v30;
      *(_OWORD *)(a1 + 952) = v29;
      long long v31 = *(_OWORD *)(a2 + 1048);
      long long v33 = *(_OWORD *)(a2 + 1000);
      long long v32 = *(_OWORD *)(a2 + 1016);
      *(_OWORD *)(a1 + 1032) = *(_OWORD *)(a2 + 1032);
      *(_OWORD *)(a1 + 1048) = v31;
      *(_OWORD *)(a1 + 1000) = v33;
      *(_OWORD *)(a1 + 1016) = v32;
      long long v34 = *(void **)(a2 + 1064);
      *(void *)(a1 + 1064) = v34;
      long long v35 = *(_OWORD *)(a2 + 1088);
      long long v36 = *(_OWORD *)(a2 + 1104);
      long long v37 = *(_OWORD *)(a2 + 1120);
      *(_WORD *)(a1 + 1136) = *(_WORD *)(a2 + 1136);
      *(_OWORD *)(a1 + 1120) = v37;
      *(_OWORD *)(a1 + 1104) = v36;
      *(_OWORD *)(a1 + 1088) = v35;
      *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
      *(unsigned char *)(a1 + 1138) = *(unsigned char *)(a2 + 1138);
      long long v38 = *(void **)(a2 + 1144);
      *(void *)(a1 + 1144) = v38;
      long long v39 = *(_OWORD *)(a2 + 1168);
      long long v40 = *(_OWORD *)(a2 + 1184);
      long long v41 = *(_OWORD *)(a2 + 1200);
      *(_WORD *)(a1 + 1216) = *(_WORD *)(a2 + 1216);
      *(_OWORD *)(a1 + 1200) = v41;
      *(_OWORD *)(a1 + 1184) = v40;
      *(_OWORD *)(a1 + 1168) = v39;
      *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
      *(unsigned char *)(a1 + 1218) = *(unsigned char *)(a2 + 1218);
      id v42 = *(void **)(a2 + 1224);
      *(void *)(a1 + 1224) = v42;
      long long v43 = *(_OWORD *)(a2 + 1248);
      long long v44 = *(_OWORD *)(a2 + 1264);
      long long v45 = *(_OWORD *)(a2 + 1280);
      *(unsigned char *)(a1 + 1296) = *(unsigned char *)(a2 + 1296);
      *(_OWORD *)(a1 + 1280) = v45;
      *(_OWORD *)(a1 + 1264) = v44;
      *(_OWORD *)(a1 + 1248) = v43;
      *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v46 = v34;
      id v47 = v38;
      id v48 = v42;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_25E749168(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for ScanwaveCommonEvent();
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_25E75BE40();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_25E749270(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E7481BC((uint64_t)a1, type metadata accessor for ScanwaveViewController.RootComponentUpdate);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for ScanwaveCommonEvent();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      }
      else
      {
        uint64_t v7 = sub_25E75BE40();
        (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25E7493A4()
{
  uint64_t result = type metadata accessor for ScanwaveCommonEvent();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unint64_t sub_25E74943C(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704990);
  uint64_t v3 = (void *)sub_25E75C160();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = (void *)a1[6];
  unint64_t result = sub_25E7539F8(v4, v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v18 = v6;
    return (unint64_t)v3;
  }
  long long v9 = (void **)(a1 + 9);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v3[6] + 16 * result);
    *long long v10 = v4;
    v10[1] = v5;
    *(void *)(v3[7] + 8 * result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    long long v14 = v9 + 3;
    uint64_t v4 = (uint64_t)*(v9 - 2);
    uint64_t v5 = (uint64_t)*(v9 - 1);
    long long v15 = *v9;
    id v16 = v6;
    unint64_t result = sub_25E7539F8(v4, v5);
    long long v9 = v14;
    uint64_t v6 = v15;
    if (v17) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_25E74954C(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x263F8EE80];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704970);
  uint64_t v3 = (void *)sub_25E75C160();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_25E7539F8(v4, v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  long long v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v10 = (uint64_t *)(v3[6] + 16 * result);
    *long long v10 = v4;
    v10[1] = v5;
    *(void *)(v3[7] + 8 * result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    long long v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_retain();
    unint64_t result = sub_25E7539F8(v4, v5);
    long long v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

void sub_25E749664()
{
  uint64_t v1 = &v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageConfiguration];
  *uint64_t v1 = 0;
  v1[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_imageMode] = 2;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationBackdropView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_chromaticAberrationMaskView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_fillLightMaskView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurBackdropView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_inverseBlurMaskView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_mainMaskView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_circleMaskView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_depthDistanceFieldImageView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_meshBackdropView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_sourceImageView] = 0;
  uint64_t v2 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_animatableProperties;
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  *(void *)&v0[v2] = sub_25E74954C(MEMORY[0x263F8EE78]);
  v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didLayoutSubviewsOnce] = 0;
  v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_didPrepareInitialUpdate] = 0;
  uint64_t v4 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_externalContinuations;
  *(void *)&v0[v4] = sub_25E7383A4((uint64_t)v3);
  v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_isPerformingPreCAUpdate] = 0;
  v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_hasEnqueuedPreCAUpdate] = 0;
  *(void *)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_pendingRootComponentUpdates] = v3;
  uint64_t v5 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_prototypeSettings;
  uint64_t v6 = (char *)objc_msgSend(self, sel_rootSettings);
  id v7 = *(id *)&v6[OBJC_IVAR___SUIAnimationKitPrototypeSettings_scanwaveSettings];

  *(void *)&v0[v5] = v7;
  uint64_t v8 = OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_timerController;
  type metadata accessor for LayoutTimerController();
  long long v9 = (void *)swift_allocObject();
  v9[2] = nullsub_1;
  v9[3] = 0;
  _OWORD v9[4] = sub_25E74943C(v3);
  *(void *)&v0[v8] = v9;
  uint64_t v10 = (uint64_t)&v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_rootComponent];
  sub_25E74B5B4(v12);
  sub_25E74A4CC((uint64_t)v12, v10, &qword_26A7049A0);
  type metadata accessor for RootComponent(0);
  type metadata accessor for RootComponent.State(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v11 = &v0[OBJC_IVAR____TtC20SystemUIAnimationKit22ScanwaveViewController_transactionCommitObserverProvider];
  *((void *)v11 + 3) = &type metadata for DefaultCATransactionCommitObserverProvider;
  *((void *)v11 + 4) = &off_270B50848;

  sub_25E75C120();
  __break(1u);
}

uint64_t sub_25E7498E0(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t *a4)
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_25E75BFB0();
  uint64_t v10 = result;
  if (v6)
  {
    uint64_t v8 = (uint64_t *)(a1 + 40);
    do
    {
      sub_25E746294(&v9, *(v8 - 1), *v8, a4);
      v8 += 2;
      --v6;
    }
    while (v6);
    return v10;
  }
  return result;
}

uint64_t sub_25E749970()
{
  return swift_release();
}

unint64_t sub_25E749978()
{
  unint64_t result = qword_26A7048E8;
  if (!qword_26A7048E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7048E8);
  }
  return result;
}

uint64_t sub_25E7499CC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_25E7499DC(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 1160);
  uint64_t v18 = *(void *)(a1 + 1152);
  uint64_t v2 = *(void *)(a1 + 1168);
  uint64_t v3 = *(void *)(a1 + 1176);
  uint64_t v4 = *(void *)(a1 + 1184);
  uint64_t v5 = *(void *)(a1 + 1192);
  uint64_t v6 = *(void *)(a1 + 1200);
  uint64_t v7 = *(void *)(a1 + 1208);
  long long v16 = *(_OWORD *)(a1 + 1216);
  long long v14 = *(_OWORD *)(a1 + 320);
  long long v15 = *(_OWORD *)(a1 + 336);
  long long v12 = *(_OWORD *)(a1 + 288);
  long long v13 = *(_OWORD *)(a1 + 304);
  long long v10 = *(_OWORD *)(a1 + 256);
  long long v11 = *(_OWORD *)(a1 + 272);
  long long v9 = *(_OWORD *)(a1 + 224);
  sub_25E749BA8(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v9,
    *((uint64_t *)&v9 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1));
  sub_25E749BF4(v18, v17, v2, v3, v4, v5, v6, v7, v16, *((id *)&v16 + 1));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_25E749BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t result = a44;
  if (a44)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_25E749BF4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  if (a10 != (id)1) {
}
  }

void sub_25E749C08(int a1)
{
  sub_25E743A70(a1, *(id *)(v1 + 16));
}

uint64_t sub_25E749C3C(uint64_t a1, char a2)
{
  return sub_25E753984(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_25E749C44()
{
  return sub_25E747EF8(*(uint64_t (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_25E749C68()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_25E749CA0(_OWORD *a1)
{
  return sub_25E743B20(a1, *(id *)(v1 + 16));
}

uint64_t sub_25E749CA8()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E749CE0()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 232, 7);
}

uint64_t sub_25E749D18()
{
  uint64_t v1 = *(uint64_t (**)(char *))(v0 + 16);
  long long v2 = *(_OWORD *)(v0 + 208);
  v7[6] = *(_OWORD *)(v0 + 192);
  v7[7] = v2;
  uint64_t v8 = *(void *)(v0 + 224);
  long long v3 = *(_OWORD *)(v0 + 144);
  double v7[2] = *(_OWORD *)(v0 + 128);
  v7[3] = v3;
  long long v4 = *(_OWORD *)(v0 + 176);
  _OWORD v7[4] = *(_OWORD *)(v0 + 160);
  v7[5] = v4;
  long long v5 = *(_OWORD *)(v0 + 112);
  v7[0] = *(_OWORD *)(v0 + 96);
  v7[1] = v5;
  return v1((char *)v7 + 8);
}

uint64_t sub_25E749D8C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t sub_25E749DB0(uint64_t a1)
{
  id v2 = *(id *)(a1 + 72);
  return a1;
}

void sub_25E749DDC(uint64_t *a1)
{
  sub_25E743140(a1, *(id *)(v1 + 16));
}

id sub_25E749DE4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  id result = a10;
  if (a10 != (id)1) {
    return a10;
  }
  return result;
}

uint64_t sub_25E749DF8()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_25E749E38()
{
  return sub_25E747F64(*(uint64_t (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

uint64_t sub_25E749E44(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    *(void *)(a1 + 256),
    *(void *)(a1 + 264));
  return a1;
}

uint64_t sub_25E749ECC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 136, 7);
}

uint64_t sub_25E749F04()
{
  return sub_25E74803C(*(uint64_t (**)(_OWORD *))(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

void sub_25E749F10(double *a1)
{
  sub_25E7430D0(a1, *(id *)(v1 + 16));
}

uint64_t sub_25E749F2C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 120, 7);
}

uint64_t sub_25E749F64()
{
  return sub_25E747FD0(*(uint64_t (**)(long long *))(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

void sub_25E749F70(uint64_t a1)
{
  sub_25E7423D0(a1, *(void **)(v1 + 16));
}

uint64_t sub_25E749F78()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 112, 7);
}

uint64_t sub_25E749FB0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 344);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void sub_25E749FC8(int a1)
{
  sub_25E743A70(a1, *(id *)(v1 + 16));
}

void sub_25E749FFC(uint64_t *a1)
{
  sub_25E741AA4(a1, *(void **)(v1 + 16));
}

uint64_t sub_25E74A004(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E74A034()
{
  return sub_25E747F64(*(uint64_t (**)(uint64_t *))(v0 + 16), *(void *)(v0 + 24), v0 + 32);
}

uint64_t sub_25E74A054(uint64_t a1)
{
  return a1;
}

void sub_25E74A080(uint64_t a1)
{
  sub_25E741BA8(a1, *(void **)(v1 + 16));
}

uint64_t objectdestroy_193Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 112, 7);
}

id sub_25E74A0CC(double *a1)
{
  return objc_msgSend(*(id *)(v1 + 16), sel_setAlpha_, *a1);
}

id sub_25E74A0E4(double *a1)
{
  return objc_msgSend(*(id *)(v1 + 16), sel_setBounds_, *a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_25E74A100(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 66);
  BOOL v2 = v1 >= 2;
  int v3 = (v1 + 2147483646) & 0x7FFFFFFF;
  if (v2) {
    return (v3 + 1);
  }
  else {
    return 0;
  }
}

void sub_25E74A11C(uint64_t a1)
{
  sub_25E73F488(a1, *(void **)(v1 + 16));
}

void sub_25E74A150(uint64_t a1)
{
  sub_25E73F488(a1, *(void **)(v1 + 16));
}

void sub_25E74A184(uint64_t a1)
{
  sub_25E73F488(a1, *(void **)(v1 + 16));
}

uint64_t sub_25E74A1B8()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_25E74A1C8()
{
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_25E74A218(char a1)
{
  return sub_25E73DF68(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_25E74A224()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E74A25C()
{
  swift_release();

  return MEMORY[0x270FA0238](v0, 48, 7);
}

void sub_25E74A29C()
{
  sub_25E73D5E4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

id sub_25E74A2A8(double *a1)
{
  return objc_msgSend(*(id *)(v1 + 16), sel_setValue_, *a1);
}

unint64_t sub_25E74A2BC()
{
  unint64_t result = qword_26A704980;
  if (!qword_26A704980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704980);
  }
  return result;
}

uint64_t type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction(uint64_t a1)
{
  return sub_25E7355D0(a1, (uint64_t *)&unk_26A7049F0);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_25E74A394(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704780);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25E74A3F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_25E74A450()
{
  swift_weakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E74A488()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_25E74A4C0(uint64_t a1)
{
  return sub_25E7317F8(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_25E74A4CC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E74A530(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 560);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_25E74A548(void *a1)
{
  uint64_t v2 = (void *)a1[133];
  uint64_t v3 = (void *)a1[143];
  long long v4 = (void *)a1[153];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v2;
  id v6 = v3;
  id v7 = v4;
  return a1;
}

uint64_t sub_25E74A5C8(uint64_t a1)
{
  uint64_t v50 = *(void *)(a1 + 1312);
  uint64_t v51 = *(void *)(a1 + 1304);
  uint64_t v48 = *(void *)(a1 + 1328);
  uint64_t v49 = *(void *)(a1 + 1320);
  uint64_t v47 = *(void *)(a1 + 1336);
  uint64_t v46 = *(void *)(a1 + 1344);
  uint64_t v45 = *(void *)(a1 + 1352);
  uint64_t v44 = *(void *)(a1 + 1360);
  long long v43 = *(_OWORD *)(a1 + 1368);
  long long v42 = *(_OWORD *)(a1 + 1384);
  long long v41 = *(_OWORD *)(a1 + 1400);
  long long v40 = *(_OWORD *)(a1 + 1416);
  long long v39 = *(_OWORD *)(a1 + 1432);
  long long v38 = *(_OWORD *)(a1 + 1448);
  long long v37 = *(_OWORD *)(a1 + 1464);
  long long v36 = *(_OWORD *)(a1 + 1480);
  long long v35 = *(_OWORD *)(a1 + 1496);
  long long v34 = *(_OWORD *)(a1 + 1512);
  long long v33 = *(_OWORD *)(a1 + 1528);
  long long v32 = *(_OWORD *)(a1 + 1544);
  long long v31 = *(_OWORD *)(a1 + 1560);
  long long v30 = *(_OWORD *)(a1 + 1576);
  long long v29 = *(_OWORD *)(a1 + 1592);
  long long v28 = *(_OWORD *)(a1 + 1608);
  long long v27 = *(_OWORD *)(a1 + 1624);
  long long v26 = *(_OWORD *)(a1 + 1640);
  long long v25 = *(_OWORD *)(a1 + 1656);
  long long v24 = *(_OWORD *)(a1 + 1672);
  long long v23 = *(_OWORD *)(a1 + 1688);
  long long v22 = *(_OWORD *)(a1 + 1704);
  long long v21 = *(_OWORD *)(a1 + 1720);
  long long v20 = *(_OWORD *)(a1 + 1736);
  long long v19 = *(_OWORD *)(a1 + 1752);
  long long v18 = *(_OWORD *)(a1 + 1768);
  long long v17 = *(_OWORD *)(a1 + 1784);
  long long v16 = *(_OWORD *)(a1 + 1800);
  long long v14 = *(_OWORD *)(a1 + 464);
  long long v15 = *(_OWORD *)(a1 + 480);
  long long v12 = *(_OWORD *)(a1 + 432);
  long long v13 = *(_OWORD *)(a1 + 448);
  long long v10 = *(_OWORD *)(a1 + 400);
  long long v11 = *(_OWORD *)(a1 + 416);
  long long v8 = *(_OWORD *)(a1 + 368);
  long long v9 = *(_OWORD *)(a1 + 384);
  long long v6 = *(_OWORD *)(a1 + 336);
  long long v7 = *(_OWORD *)(a1 + 352);
  long long v4 = *(_OWORD *)(a1 + 304);
  long long v5 = *(_OWORD *)(a1 + 320);
  long long v3 = *(_OWORD *)(a1 + 272);
  sub_25E74B040(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    *(void *)(a1 + 256),
    *(void *)(a1 + 264),
    v3,
    *((uint64_t *)&v3 + 1),
    *(void *)(a1 + 288),
    *(void *)(a1 + 296),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    *(void *)(a1 + 496));
  sub_25E74B040(v51, v50, v49, v48, v47, v46, v45, v44, v43, *((uint64_t *)&v43 + 1), v42, *((uint64_t *)&v42 + 1), v41, *((uint64_t *)&v41 + 1), v40, *((uint64_t *)&v40 + 1), v39, *((uint64_t *)&v39 + 1), v38,
    *((uint64_t *)&v38 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v16);
  return a1;
}

void sub_25E74B040(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (a71)
  {
    id v73 = (id)STACK[0x4D8];
    id v71 = (void *)STACK[0x488];
    long long v72 = (void *)STACK[0x438];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_25E74B0E8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 1064);
  long long v3 = *(void **)(a1 + 1144);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

#error "25E74B4E4: call analysis failed (funcsize=232)"

id sub_25E74B50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  id result = a71;
  if (a71)
  {
    id v76 = (id)STACK[0x4D8];
    long long v72 = (void *)STACK[0x488];
    id v73 = (void *)STACK[0x438];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v74 = v73;
    id v75 = v72;
    return v76;
  }
  return result;
}

void sub_25E74B5B4(void *a1)
{
}

uint64_t sub_25E74B5BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A7049A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_25E74B624(uint64_t a1, uint64_t a2)
{
  sub_25E738974(a1, a2, v2);
}

unint64_t sub_25E74B62C()
{
  unint64_t result = qword_26A7049C8;
  if (!qword_26A7049C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A7049C8);
  }
  return result;
}

uint64_t sub_25E74B680(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_25E74B694(a1, a2);
  }
  return a1;
}

uint64_t sub_25E74B694(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

uint64_t sub_25E74B6EC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }
  return swift_retain();
}

char *sub_25E74B744()
{
  return sub_25E73C25C(*(char **)(v0 + 16));
}

uint64_t sub_25E74B74C()
{
  return sub_25E755028(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_25E74B754(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExternalContinuation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E74B7B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_25E74B800(void *a1)
{
  uint64_t v2 = (void *)a1[125];
  long long v3 = (void *)a1[135];
  uint64_t v4 = (void *)a1[145];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v2;
  id v6 = v3;
  id v7 = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for ScanwaveViewController.OrderedFinalTransactionAction(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 254);
  }
  if (*(unsigned __int8 *)(a1 + 16) <= 2u) {
    int v3 = 2;
  }
  else {
    int v3 = *(unsigned __int8 *)(a1 + 16);
  }
  int v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 16) < 2u) {
    int v5 = -1;
  }
  else {
    int v5 = v4;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveViewController.OrderedFinalTransactionAction(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveViewController.OrderedFinalTransactionAction()
{
  return &type metadata for ScanwaveViewController.OrderedFinalTransactionAction;
}

void *sub_25E74B928(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v7 = sub_25E75BE40();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = type metadata accessor for ScanwaveActivateResponse(0);
      *((unsigned char *)a1 + *(int *)(v8 + 20)) = *((unsigned char *)a2 + *(int *)(v8 + 20));
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_25E74BA38(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v3 = sub_25E75BE40();
    int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

unsigned char *sub_25E74BAB4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_25E75BE40();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for ScanwaveActivateResponse(0);
    a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_25E74BB80(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E7481BC((uint64_t)a1, type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_25E75BE40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for ScanwaveActivateResponse(0);
      a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

unsigned char *sub_25E74BC70(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v6 = sub_25E75BE40();
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = type metadata accessor for ScanwaveActivateResponse(0);
    a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

unsigned char *sub_25E74BD3C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E7481BC((uint64_t)a1, type metadata accessor for ScanwaveViewController.OrderedStandardTransactionAction);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t v6 = sub_25E75BE40();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = type metadata accessor for ScanwaveActivateResponse(0);
      a1[*(int *)(v7 + 20)] = a2[*(int *)(v7 + 20)];
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_25E74BE2C()
{
  uint64_t result = type metadata accessor for ScanwaveActivateResponse(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_25E74C060(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v49 = MEMORY[0x270FA5388](a1);
  uint64_t v48 = type metadata accessor for RootComponent.State(0);
  uint64_t v3 = MEMORY[0x270FA5388](v48);
  uint64_t v46 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v47 = (char *)&v42 - v5;
  uint64_t v6 = type metadata accessor for ScanwaveActivateRequest(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  long long v11 = (char *)&v42 - v10;
  uint64_t v12 = type metadata accessor for ScanwaveCommonEvent();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  long long v15 = (uint64_t *)((char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v13);
  long long v17 = (char *)&v42 - v16;
  uint64_t v18 = MEMORY[0x263F8EE78];
  uint64_t v51 = MEMORY[0x263F8EE78];
  uint64_t v19 = v2;
  sub_25E74A4CC(v2, (uint64_t)v53, &qword_26A7049A0);
  sub_25E74A4CC((uint64_t)v53, (uint64_t)v54, &qword_26A7049A0);
  if (sub_25E74A530((uint64_t)v54) != 1)
  {
    long long v43 = v15;
    long long v20 = (uint64_t *)v47;
    uint64_t v45 = v19;
    uint64_t v21 = (uint64_t)v9;
    memcpy(v52, v54, 0x511uLL);
    uint64_t v22 = v49;
    sub_25E7521FC(v49, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonEvent);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    long long v24 = v17;
    if (!EnumCaseMultiPayload)
    {
      sub_25E752B28((uint64_t)v17, (uint64_t)v11, type metadata accessor for ScanwaveActivateRequest);
      sub_25E74A4CC((uint64_t)v53, (uint64_t)v50, &qword_26A7049A0);
      sub_25E74A548(v50);
      long long v32 = sub_25E74CFB4((uint64_t)v11);
      sub_25E74605C((size_t)v32);
      sub_25E7525F8((uint64_t)v53);
      long long v33 = type metadata accessor for ScanwaveActivateRequest;
      uint64_t v34 = (uint64_t)v11;
LABEL_16:
      sub_25E75219C(v34, v33);
      return v51;
    }
    uint64_t v25 = v22;
    uint64_t v44 = (uint64_t)v24;
    uint64_t v42 = v12;
    uint64_t v26 = v45 + *(int *)(type metadata accessor for RootComponent(0) + 20);
    sub_25E7521FC(v26, (uint64_t)v20, type metadata accessor for RootComponent.State);
    int v27 = swift_getEnumCaseMultiPayload();
    if (v27)
    {
      if (v27 != 1)
      {
LABEL_15:
        long long v33 = (uint64_t (*)(void))type metadata accessor for ScanwaveCommonEvent;
        uint64_t v34 = v44;
        goto LABEL_16;
      }
      uint64_t v28 = *v20;
      sub_25E74A4CC((uint64_t)v53, (uint64_t)v50, &qword_26A7049A0);
      sub_25E74A548(v50);
      long long v29 = sub_25E74FC98(v25, (uint64_t)v52);
      sub_25E74605C((size_t)v29);
      if (*(unsigned char *)(v28
                    + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_isComplete) == 1)
      {
        uint64_t v30 = (uint64_t)v46;
        swift_storeEnumTagMultiPayload();
        sub_25E74EF94(v30);
        sub_25E752A00(v30, v26);
        size_t v31 = swift_bridgeObjectRetain();
        sub_25E74605C(v31);
        swift_release();
        sub_25E7525F8((uint64_t)v53);
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      swift_release();
    }
    else
    {
      long long v35 = (uint64_t *)((char *)v20 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8) + 48));
      uint64_t v36 = *v35;
      uint64_t v37 = v35[1];
      sub_25E752B28((uint64_t)v20, v21, type metadata accessor for ScanwaveActivateRequest);
      long long v38 = v43;
      sub_25E7521FC(v25, (uint64_t)v43, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonEvent);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        sub_25E75219C(v21, type metadata accessor for ScanwaveActivateRequest);
        sub_25E75219C((uint64_t)v38, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonEvent);
        goto LABEL_15;
      }
      char v39 = sub_25E74D344(v36, v37, *v38);
      sub_25E74A4CC((uint64_t)v53, (uint64_t)v50, &qword_26A7049A0);
      sub_25E74A548(v50);
      swift_bridgeObjectRelease();
      if (v39)
      {
        sub_25E74D44C(v21);
        size_t v40 = swift_bridgeObjectRetain();
        sub_25E74605C(v40);
        sub_25E7525F8((uint64_t)v53);
        swift_bridgeObjectRelease();
        sub_25E75219C(v21, type metadata accessor for ScanwaveActivateRequest);
        goto LABEL_15;
      }
      sub_25E75219C(v21, type metadata accessor for ScanwaveActivateRequest);
    }
    sub_25E7525F8((uint64_t)v53);
    goto LABEL_15;
  }
  return v18;
}

void *sub_25E74C5B4(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  long long v43 = v2;
  uint64_t v3 = type metadata accessor for RootComponent.State(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - v7;
  sub_25E752264(v136);
  sub_25E7522A4((uint64_t)v137);
  sub_25E752304((uint64_t)v138);
  long long v9 = *(_OWORD *)(MEMORY[0x263F15740] + 80);
  *(_OWORD *)&v139[69] = *(_OWORD *)(MEMORY[0x263F15740] + 64);
  *(_OWORD *)&v139[85] = v9;
  long long v10 = *(_OWORD *)(MEMORY[0x263F15740] + 112);
  *(_OWORD *)&v139[101] = *(_OWORD *)(MEMORY[0x263F15740] + 96);
  *(_OWORD *)&v139[117] = v10;
  long long v11 = *(_OWORD *)(MEMORY[0x263F15740] + 16);
  *(_OWORD *)&v139[5] = *MEMORY[0x263F15740];
  *(_OWORD *)&v139[21] = v11;
  long long v12 = *(_OWORD *)(MEMORY[0x263F15740] + 48);
  *(_OWORD *)&v139[37] = *(_OWORD *)(MEMORY[0x263F15740] + 32);
  char v140 = 1;
  *(_OWORD *)&v139[53] = v12;
  unsigned __int8 v141 = 1;
  sub_25E74A4CC((uint64_t)v136, (uint64_t)v142, &qword_26A7048F0);
  sub_25E74A4CC((uint64_t)v137, (uint64_t)&v142[27], &qword_26A704908);
  memset(&v142[54], 0, 64);
  *(void *)&v142[58] = 0x20000;
  *(_OWORD *)((char *)&v142[58] + 8) = 0u;
  *(_OWORD *)((char *)&v142[59] + 8) = 0u;
  *(_OWORD *)((char *)&v142[60] + 8) = 0u;
  *(_OWORD *)((char *)&v142[61] + 8) = 0u;
  *(_OWORD *)((char *)&v142[62] + 8) = 0u;
  *(_OWORD *)((char *)&v142[63] + 8) = 0u;
  *((void *)&v142[64] + 1) = 0;
  *(void *)&v142[65] = 0x20000;
  *(_OWORD *)((char *)&v142[65] + 8) = 0u;
  *(_OWORD *)((char *)&v142[66] + 8) = 0u;
  *(_OWORD *)((char *)&v142[67] + 8) = 0u;
  *(_OWORD *)((char *)&v142[68] + 8) = 0u;
  *(_OWORD *)((char *)&v142[69] + 8) = 0u;
  *((void *)&v142[70] + 1) = 0;
  v142[71] = xmmword_25E760DF0;
  sub_25E74A4CC((uint64_t)v138, (uint64_t)&v142[72], &qword_26A704918);
  *(_OWORD *)((char *)&v142[98] + 3) = *(_OWORD *)&v139[80];
  *(_OWORD *)((char *)&v142[99] + 3) = *(_OWORD *)&v139[96];
  *(_OWORD *)((char *)&v142[100] + 3) = *(_OWORD *)&v139[112];
  *(_OWORD *)((char *)&v142[94] + 3) = *(_OWORD *)&v139[16];
  *(_OWORD *)((char *)&v142[95] + 3) = *(_OWORD *)&v139[32];
  *(_OWORD *)((char *)&v142[96] + 3) = *(_OWORD *)&v139[48];
  *(_OWORD *)((char *)&v142[97] + 3) = *(_OWORD *)&v139[64];
  memset(&v142[89], 0, 64);
  LOWORD(v142[93]) = 256;
  BYTE2(v142[93]) = 0;
  *(_OWORD *)((char *)&v142[93] + 3) = *(_OWORD *)v139;
  *(void *)&v142[101] = *(void *)&v139[125];
  *(_OWORD *)((char *)&v142[104] + 8) = 0u;
  *(_OWORD *)((char *)&v142[103] + 8) = 0u;
  *(_OWORD *)((char *)&v142[102] + 8) = 0u;
  *(_OWORD *)((char *)&v142[101] + 8) = 0u;
  BYTE8(v142[105]) = 0;
  *(_WORD *)((char *)&v142[105] + 9) = v141;
  *(void *)&v142[106] = 0;
  *((void *)&v142[106] + 1) = MEMORY[0x263F8EE78];
  memcpy(v89, v142, sizeof(v89));
  uint64_t v13 = v1 + *(int *)(type metadata accessor for RootComponent(0) + 20);
  sub_25E7521FC(v13, (uint64_t)v8, type metadata accessor for RootComponent.State);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_25E75219C((uint64_t)v8, type metadata accessor for RootComponent.State);
LABEL_4:
    uint64_t v14 = v137;
    goto LABEL_6;
  }
  sub_25E75219C((uint64_t)v8, type metadata accessor for RootComponent.State);
  sub_25E74A4CC(v1, (uint64_t)v53, &qword_26A7049A0);
  sub_25E74A4CC((uint64_t)v53, (uint64_t)v56, &qword_26A7049A0);
  if (sub_25E74A530((uint64_t)v56) == 1) {
    goto LABEL_4;
  }
  v88[0] = 1;
  v55[0] = 1;
  v54[0] = 1;
  v51[0] = 1;
  v134[0] = 1;
  memset(v90, 0, sizeof(v90));
  __int16 v91 = 256;
  char v92 = 0;
  uint64_t v93 = 0x3FF0000000000000;
  char v98 = 0;
  long long v97 = 0u;
  long long v96 = 0u;
  long long v95 = 0u;
  long long v94 = 0u;
  __int16 v99 = 1;
  memset(v103, 0, 25);
  long long v102 = 0u;
  long long v101 = 0u;
  long long v100 = 0u;
  v103[25] = 1;
  v103[26] = 0;
  long long v108 = 0u;
  long long v109 = 0u;
  long long v107 = 0u;
  char v110 = 0;
  long long v106 = 0u;
  char v111 = 1;
  char v112 = 0;
  char v118 = 0;
  long long v116 = 0u;
  long long v117 = 0u;
  long long v114 = 0u;
  long long v115 = 0u;
  long long v113 = 0u;
  __int16 v119 = 1;
  double v120 = v58;
  double v104 = -v58;
  double v105 = -v59[0];
  long long v121 = *(_OWORD *)v59;
  nullsub_1(v90);
  uint64_t v14 = v90;
LABEL_6:
  sub_25E74A4CC((uint64_t)v14, (uint64_t)v135, &qword_26A704908);
  uint64_t v42 = &v89[27];
  sub_25E74A4CC((uint64_t)v135, (uint64_t)&v89[27], &qword_26A704908);
  sub_25E74D9D4((uint64_t)v90);
  sub_25E74A4CC((uint64_t)v90, (uint64_t)v88, &qword_26A7048F0);
  sub_25E74A4CC((uint64_t)v90, (uint64_t)v89, &qword_26A7048F0);
  uint64_t v15 = sub_25E75254C((uint64_t)v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25E752334);
  sub_25E74E03C(v15);
  uint64_t v16 = v122[0];
  uint64_t v31 = v122[2];
  uint64_t v32 = v122[1];
  uint64_t v30 = v122[3];
  *(void *)&long long v41 = v122[4];
  *(void *)&long long v40 = v122[5];
  *(void *)&long long v39 = v122[6];
  *(void *)&long long v38 = v122[7];
  *(void *)&long long v37 = v122[8];
  uint64_t v35 = v122[10];
  *(void *)&long long v36 = v122[9];
  long long v33 = v123;
  uint64_t v34 = v122[11];
  sub_25E74A4CC((uint64_t)v122, (uint64_t)&v89[54], &qword_26A7048F8);
  sub_25E7521FC(v13, (uint64_t)v6, type metadata accessor for RootComponent.State);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_25E75219C((uint64_t)v6, type metadata accessor for RootComponent.State);
  }
  else
  {
    sub_25E75219C((uint64_t)v6, type metadata accessor for RootComponent.State);
    sub_25E74A4CC(v1, (uint64_t)v53, &qword_26A7049A0);
    sub_25E74A4CC((uint64_t)v53, (uint64_t)v56, &qword_26A7049A0);
    if (sub_25E74A530((uint64_t)v56) != 1)
    {
      uint64_t v18 = *((void *)&v60 + 1);
      uint64_t v19 = v61;
      uint64_t v17 = 0x3FF0000000000000;
      uint64_t v20 = 256;
      goto LABEL_11;
    }
  }
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0x20000;
LABEL_11:
  uint64_t v21 = sub_25E74E3E4((uint64_t)&v124);
  uint64_t v22 = v124;
  uint64_t v23 = v125;
  uint64_t v28 = v125;
  uint64_t v29 = v124;
  uint64_t v24 = v126;
  uint64_t v27 = v126;
  uint64_t v48 = v128;
  uint64_t v49 = v127;
  uint64_t v46 = v130;
  uint64_t v47 = v129;
  uint64_t v44 = v132;
  uint64_t v45 = v131;
  uint64_t v50 = v133;
  sub_25E74E688(v21);
  sub_25E74EB50((uint64_t)v134);
  sub_25E74A4CC((uint64_t)v134, (uint64_t)v52, &qword_26A704918);
  sub_25E74A4CC((uint64_t)v88, (uint64_t)v53, &qword_26A7048F0);
  sub_25E74A4CC((uint64_t)v135, (uint64_t)&v53[27], &qword_26A704908);
  *(void *)&v53[54] = v16;
  *((void *)&v53[54] + 1) = v32;
  *(void *)&v53[55] = v31;
  *((void *)&v53[55] + 1) = v30;
  *(void *)&v53[56] = v41;
  *((void *)&v53[56] + 1) = v40;
  *(void *)&v53[57] = v39;
  *((void *)&v53[57] + 1) = v38;
  *(void *)&v53[58] = v37;
  *((void *)&v53[58] + 1) = v36;
  *(void *)&v53[59] = v35;
  *((void *)&v53[59] + 1) = v34;
  v53[60] = v33;
  memset(&v53[61], 0, 64);
  *(void *)&v53[65] = v20;
  *((void *)&v53[65] + 1) = v17;
  *(void *)&v53[66] = v18;
  *((void *)&v53[66] + 1) = v19;
  *(void *)&v53[67] = v22;
  *((void *)&v53[67] + 1) = v23;
  *(void *)&v53[68] = v24;
  *((void *)&v53[68] + 1) = v49;
  *(void *)&v53[69] = v48;
  *((void *)&v53[69] + 1) = v47;
  *(void *)&v53[70] = v46;
  *((void *)&v53[70] + 1) = v45;
  *(void *)&v53[71] = v44;
  *((void *)&v53[71] + 1) = v50;
  sub_25E74A4CC((uint64_t)v52, (uint64_t)&v53[72], &qword_26A704918);
  memcpy(&v53[89], v51, 0x118uLL);
  *((void *)&v53[106] + 1) = MEMORY[0x263F8EE78];
  sub_25E752380((uint64_t)v53);
  sub_25E75254C((uint64_t)v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_25E749BA8);
  sub_25E74A4CC((uint64_t)v89, (uint64_t)v54, &qword_26A7048F0);
  sub_25E74A4CC((uint64_t)v42, (uint64_t)v55, &qword_26A704908);
  long long v40 = v89[55];
  long long v41 = v89[54];
  long long v38 = v89[57];
  long long v39 = v89[56];
  long long v36 = v89[59];
  long long v37 = v89[58];
  long long v25 = v89[60];
  uint64_t v42 = (_OWORD *)*((void *)&v89[106] + 1);
  sub_25E74A4CC((uint64_t)v54, (uint64_t)v56, &qword_26A7048F0);
  sub_25E74A4CC((uint64_t)v55, (uint64_t)&v57, &qword_26A704908);
  long long v60 = v41;
  long long v61 = v40;
  long long v62 = v39;
  long long v63 = v38;
  long long v64 = v37;
  long long v65 = v36;
  long long v66 = v25;
  long long v67 = 0u;
  long long v68 = 0u;
  long long v69 = 0u;
  long long v70 = 0u;
  uint64_t v71 = v20;
  uint64_t v72 = v17;
  uint64_t v73 = v18;
  uint64_t v74 = v19;
  uint64_t v75 = v29;
  uint64_t v76 = v28;
  uint64_t v77 = v27;
  uint64_t v78 = v49;
  uint64_t v79 = v48;
  uint64_t v80 = v47;
  uint64_t v81 = v46;
  uint64_t v82 = v45;
  uint64_t v83 = v44;
  uint64_t v84 = v50;
  sub_25E74A4CC((uint64_t)v52, (uint64_t)&v85, &qword_26A704918);
  memcpy(v86, v51, sizeof(v86));
  long long v87 = v42;
  sub_25E7499DC((uint64_t)v56);
  return memcpy(v43, v53, 0x6B0uLL);
}

void *sub_25E74CFB4(uint64_t a1)
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  uint64_t v3 = type metadata accessor for ScanwaveCommonAction();
  uint64_t v29 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for RootComponent.State(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  long long v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  long long v12 = (char *)&v28 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v28 - v13;
  uint64_t v32 = (void *)MEMORY[0x263F8EE78];
  uint64_t v15 = v1 + *(int *)(type metadata accessor for RootComponent(0) + 20);
  sub_25E7521FC(v15, (uint64_t)v14, type metadata accessor for RootComponent.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_25E75219C((uint64_t)v14, type metadata accessor for RootComponent.State);
  if (EnumCaseMultiPayload == 2
    || (sub_25E7521FC(v15, (uint64_t)v12, type metadata accessor for RootComponent.State),
        int v17 = swift_getEnumCaseMultiPayload(),
        sub_25E75219C((uint64_t)v12, type metadata accessor for RootComponent.State),
        v17 != 2))
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    MEMORY[0x2611E27D0](&v30);
    uint64_t v20 = v30;
    uint64_t v21 = v31;
    uint64_t v22 = &v9[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8) + 48)];
    sub_25E7521FC(a1, (uint64_t)v9, type metadata accessor for ScanwaveActivateRequest);
    *(void *)uint64_t v22 = v20;
    *((void *)v22 + 1) = v21;
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = sub_25E74EF94((uint64_t)v9);
    sub_25E752A00((uint64_t)v9, v15);
    sub_25E74605C((size_t)v23);
    *(void *)uint64_t v5 = v20;
    *((void *)v5 + 1) = v21;
    v5[16] = 1;
    swift_storeEnumTagMultiPayload();
    uint64_t v19 = v32;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v19 = (void *)sub_25E7446F0(0, v19[2] + 1, 1, v19);
    }
    uint64_t v24 = v29;
    unint64_t v26 = v19[2];
    unint64_t v25 = v19[3];
    if (v26 >= v25 >> 1) {
      uint64_t v19 = (void *)sub_25E7446F0(v25 > 1, v26 + 1, 1, v19);
    }
    void v19[2] = v26 + 1;
    sub_25E752B28((uint64_t)v5, (uint64_t)v19+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v26, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
  }
  else
  {
    uint64_t v18 = sub_25E74D44C(a1);
    sub_25E74605C((size_t)v18);
    return v32;
  }
  return v19;
}

uint64_t sub_25E74D344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!*(void *)(a3 + 16)) {
    return 0;
  }
  sub_25E75C1D0();
  sub_25E75C1E0();
  uint64_t v6 = sub_25E75C200();
  uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
    return 0;
  }
  uint64_t v9 = ~v7;
  do
  {
    uint64_t v10 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v8);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    BOOL v13 = v12 == a1 && v11 == a2;
    uint64_t result = v13;
    if (v13) {
      break;
    }
    unint64_t v8 = (v8 + 1) & v9;
  }
  while (((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  return result;
}

void *sub_25E74D44C(uint64_t a1)
{
  uint64_t v54 = a1;
  v60[163] = *MEMORY[0x263EF8340];
  uint64_t v2 = type metadata accessor for ScanwaveCommonAction();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  long long v52 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v47 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v47 - v9;
  uint64_t v11 = type metadata accessor for RootComponent.State(0);
  MEMORY[0x270FA5388](v11);
  BOOL v13 = (uint64_t *)((char *)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v14 = type metadata accessor for ScanwaveActivateRequest(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v47 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = v1;
  sub_25E74A4CC(v1, (uint64_t)v59, &qword_26A7049A0);
  sub_25E74A4CC((uint64_t)v59, (uint64_t)v60, &qword_26A7049A0);
  int v17 = sub_25E74A530((uint64_t)v60);
  uint64_t v18 = (void *)MEMORY[0x263F8EE78];
  if (v17 != 1)
  {
    uint64_t v48 = v8;
    uint64_t v51 = v3;
    uint64_t v56 = 0;
    uint64_t v57 = (void *)MEMORY[0x263F8EE78];
    uint64_t v55 = 0;
    sub_25E74A4CC((uint64_t)v59, (uint64_t)v58, &qword_26A7049A0);
    sub_25E74A548(v58);
    MEMORY[0x2611E27D0](&v55);
    uint64_t v19 = v56;
    uint64_t v47 = v55;
    uint64_t v49 = v2;
    uint64_t v55 = 0;
    uint64_t v56 = 0;
    MEMORY[0x2611E27D0](&v55);
    uint64_t v20 = v55;
    uint64_t v21 = v56;
    sub_25E7521FC(v54, (uint64_t)v16, type metadata accessor for ScanwaveActivateRequest);
    type metadata accessor for RootComponent.ActiveContext(0);
    swift_allocObject();
    uint64_t v22 = sub_25E74FB8C((uint64_t)v16);
    uint64_t v23 = v22
        + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_outroDelayTimerID;
    uint64_t v24 = v47;
    *(void *)uint64_t v23 = v47;
    *(void *)(v23 + 8) = v19;
    *(unsigned char *)(v23 + 16) = 0;
    uint64_t v25 = v22
        + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_completionTimerID;
    uint64_t v54 = v20;
    *(void *)uint64_t v25 = v20;
    *(void *)(v25 + 8) = v21;
    uint64_t v50 = v21;
    *(unsigned char *)(v25 + 16) = 0;
    *BOOL v13 = v22;
    swift_storeEnumTagMultiPayload();
    uint64_t v26 = v53 + *(int *)(type metadata accessor for RootComponent(0) + 20);
    uint64_t v53 = v22;
    swift_retain();
    uint64_t v27 = sub_25E74EF94((uint64_t)v13);
    sub_25E752A00((uint64_t)v13, v26);
    sub_25E74605C((size_t)v27);
    double v28 = *(double *)&v60[8];
    UIAnimationDragCoefficient();
    *(void *)uint64_t v10 = v24;
    *((void *)v10 + 1) = v19;
    *((double *)v10 + 2) = v28 * v29;
    uint64_t v30 = v49;
    swift_storeEnumTagMultiPayload();
    uint64_t v31 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v31 = (void *)sub_25E7446F0(0, v31[2] + 1, 1, v31);
    }
    unint64_t v33 = v31[2];
    unint64_t v32 = v31[3];
    uint64_t v34 = (uint64_t)v48;
    if (v33 >= v32 >> 1) {
      uint64_t v31 = (void *)sub_25E7446F0(v32 > 1, v33 + 1, 1, v31);
    }
    v31[2] = v33 + 1;
    unint64_t v35 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
    uint64_t v36 = *(void *)(v51 + 72);
    sub_25E752B28((uint64_t)v10, (uint64_t)v31 + v35 + v36 * v33, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
    double v37 = *(double *)&v60[9];
    UIAnimationDragCoefficient();
    uint64_t v39 = v50;
    *(void *)uint64_t v34 = v54;
    *(void *)(v34 + 8) = v39;
    *(double *)(v34 + 16) = v37 * v38;
    swift_storeEnumTagMultiPayload();
    unint64_t v41 = v31[2];
    unint64_t v40 = v31[3];
    if (v41 >= v40 >> 1) {
      uint64_t v31 = (void *)sub_25E7446F0(v40 > 1, v41 + 1, 1, v31);
    }
    uint64_t v42 = (uint64_t)v52;
    v31[2] = v41 + 1;
    sub_25E752B28(v34, (uint64_t)v31 + v35 + v41 * v36, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
    uint64_t v57 = v31;
    if (qword_26A703FD0 != -1) {
      swift_once();
    }
    uint64_t v43 = __swift_project_value_buffer(v30, (uint64_t)qword_26A706580);
    sub_25E7521FC(v43, v42, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
    uint64_t v18 = v57;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v18 = (void *)sub_25E7446F0(0, v18[2] + 1, 1, v18);
    }
    unint64_t v45 = v18[2];
    unint64_t v44 = v18[3];
    if (v45 >= v44 >> 1) {
      uint64_t v18 = (void *)sub_25E7446F0(v44 > 1, v45 + 1, 1, v18);
    }
    _OWORD v18[2] = v45 + 1;
    sub_25E752B28(v42, (uint64_t)v18 + v35 + v45 * v36, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
    sub_25E7525F8((uint64_t)v59);
    swift_release();
  }
  return v18;
}

uint64_t sub_25E74D9D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RootComponent.State(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  unint64_t v8 = (char *)&v64 - v7;
  uint64_t v9 = v1 + *(int *)(type metadata accessor for RootComponent(0) + 20);
  sub_25E7521FC(v9, (uint64_t)v8, type metadata accessor for RootComponent.State);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_25E75219C((uint64_t)v8, type metadata accessor for RootComponent.State);
    sub_25E74A4CC(v1, (uint64_t)v155, &qword_26A7049A0);
    sub_25E74A4CC((uint64_t)v155, (uint64_t)&v156, &qword_26A7049A0);
    if (sub_25E74A530((uint64_t)&v156) == 1) {
      goto LABEL_4;
    }
    char v154 = 1;
    CGPoint v10 = v156;
    CGFloat v11 = v157;
    CGFloat v12 = v158;
    uint64_t v13 = v163[0];
    double v14 = *(double *)&v163[1];
    double v15 = v164;
    double v16 = v165;
    uint64_t v17 = v166;
    double v65 = v167;
    double v66 = v168;
    double v18 = v169;
    double v79 = v165 * 0.5 + v160 + (v162 - v165) * 0.5;
    double v80 = v164 * 0.5 + v159 + (v161 - v164) * 0.5;
    uint64_t v75 = v171;
    uint64_t v76 = v170;
    uint64_t v73 = v173;
    uint64_t v74 = v172;
    uint64_t v71 = v175;
    uint64_t v72 = v174;
    uint64_t v69 = v177;
    uint64_t v70 = v176;
    int v67 = v179;
    int v68 = v178;
    double v19 = v180;
    sub_25E710BA8((uint64_t)v163);
    v199.origin = v10;
    v199.size.width = v11;
    v199.size.height = v12;
    double Height = CGRectGetHeight(v199);
    sub_25E7521FC(v9, (uint64_t)v6, type metadata accessor for RootComponent.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v81 = a1;
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        double v22 = v79 - v19 * Height - v18 * 0.5;
        double v15 = v66;
        double v23 = v80 - v66 * 0.5;
        swift_release();
        double v24 = v15 * 0.5 + v23;
        double v79 = COERCE_DOUBLE(v163);
        double v80 = v181;
        double v25 = v18 * 0.5 + v22;
        uint64_t v77 = v183;
        uint64_t v78 = v182;
        uint64_t v26 = v184;
        uint64_t v27 = v185;
        uint64_t v28 = v186;
        uint64_t v29 = v187;
        long long v64 = &v179;
        uint64_t v30 = v188;
        char v31 = v189;
        int v32 = v190;
        double v33 = v65;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_25E710BFC(*(uint64_t *)&v79);
        double v34 = v80;
        long long v35 = v191;
        long long v36 = v192;
        long long v37 = v193;
        long long v38 = v194;
        uint64_t v39 = &v197;
        char v40 = v195;
        uint64_t v41 = v17;
        double v16 = v18;
        char v42 = v64[160];
        uint64_t v44 = v75;
        uint64_t v43 = v76;
        uint64_t v46 = v73;
        uint64_t v45 = v74;
        uint64_t v48 = v71;
        uint64_t v47 = v72;
        uint64_t v50 = v69;
        uint64_t v49 = v70;
        unsigned __int8 v52 = v67;
        char v51 = v68;
LABEL_10:
        uint64_t v76 = v41;
        LODWORD(v79) = v32;
        double v80 = v33;
        uint64_t v53 = *v39;
        uint64_t v54 = v77;
        *(double *)&long long v82 = v34;
        *((void *)&v82 + 1) = v78;
        *(void *)&long long v83 = v77;
        *((void *)&v83 + 1) = v26;
        *(void *)&long long v84 = v27;
        *((void *)&v84 + 1) = v28;
        *(void *)&long long v85 = v29;
        *((void *)&v85 + 1) = v30;
        LOBYTE(v86) = v31;
        *(_WORD *)((char *)&v86 + 1) = v32;
        *((void *)&v86 + 1) = v41;
        *(double *)&long long v87 = v34;
        *((void *)&v87 + 1) = v78;
        *(void *)&long long v88 = v77;
        *((void *)&v88 + 1) = v26;
        *(void *)&long long v89 = v27;
        *((void *)&v89 + 1) = v28;
        *(void *)&long long v90 = v29;
        *((void *)&v90 + 1) = v30;
        LOBYTE(v91) = v31;
        *(_WORD *)((char *)&v91 + 1) = v32;
        *((double *)&v91 + 1) = v33;
        char v94 = v42;
        char v93 = v32;
        unsigned __int8 v92 = v52;
        long long v127 = v82;
        long long v128 = v83;
        long long v131 = v86;
        long long v132 = v87;
        long long v129 = v84;
        long long v130 = v85;
        long long v135 = v90;
        long long v136 = v91;
        long long v133 = v88;
        long long v134 = v89;
        v95[0] = v35;
        v95[1] = v36;
        v95[2] = v37;
        v95[3] = v38;
        char v96 = v40;
        char v97 = v42;
        char v98 = 0;
        uint64_t v99 = v53;
        double v100 = v34;
        uint64_t v101 = v78;
        uint64_t v102 = v77;
        uint64_t v103 = v26;
        uint64_t v104 = v27;
        uint64_t v105 = v28;
        uint64_t v106 = v29;
        uint64_t v107 = v30;
        char v108 = v31;
        char v109 = v32;
        char v110 = 0;
        uint64_t v111 = 0;
        uint64_t v112 = 0;
        double v113 = v15;
        double v114 = v16;
        uint64_t v115 = v43;
        uint64_t v116 = v44;
        uint64_t v117 = v45;
        uint64_t v118 = v46;
        uint64_t v119 = v47;
        uint64_t v120 = v48;
        uint64_t v121 = v49;
        uint64_t v122 = v50;
        char v123 = v51;
        __int16 v124 = v52;
        double v125 = v24;
        double v126 = v25;
        char v55 = v31;
        uint64_t v56 = v30;
        uint64_t v57 = v29;
        uint64_t v58 = v28;
        uint64_t v59 = v27;
        uint64_t v60 = v26;
        uint64_t v61 = v78;
        double v62 = v34;
        nullsub_1(v95);
        *(double *)uint64_t v137 = v62;
        v137[1] = v61;
        v137[2] = v54;
        v137[3] = v60;
        v137[4] = v59;
        v137[5] = v58;
        v137[6] = v57;
        v137[7] = v56;
        char v138 = v55;
        char v139 = LOBYTE(v79);
        char v140 = 0;
        uint64_t v141 = v76;
        double v142 = v62;
        uint64_t v143 = v61;
        uint64_t v144 = v54;
        uint64_t v145 = v60;
        uint64_t v146 = v59;
        uint64_t v147 = v58;
        uint64_t v148 = v57;
        uint64_t v149 = v56;
        char v150 = v55;
        char v151 = LOBYTE(v79);
        char v152 = 0;
        double v153 = v80;
        sub_25E752990((uint64_t)&v82);
        sub_25E7529C8((uint64_t)v137);
        sub_25E74A4CC((uint64_t)v95, (uint64_t)v198, &qword_26A7048F0);
        a1 = v81;
        return sub_25E74A4CC((uint64_t)v198, a1, &qword_26A7048F0);
      }
    }
    else
    {
      sub_25E75219C((uint64_t)v6, type metadata accessor for ScanwaveActivateRequest);
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease_n();
    sub_25E710BFC((uint64_t)v163);
    char v40 = 0;
    double v34 = 0.0;
    uint64_t v77 = 0;
    uint64_t v78 = 0;
    uint64_t v26 = 0;
    uint64_t v41 = v13;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    double v33 = v14;
    char v31 = 0;
    uint64_t v43 = 0;
    uint64_t v44 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    char v51 = 0;
    long long v35 = 0uLL;
    long long v36 = 0uLL;
    uint64_t v39 = &v196;
    long long v37 = 0uLL;
    int v32 = 1;
    long long v38 = 0uLL;
    unsigned __int8 v52 = 1;
    double v25 = v79;
    double v24 = v80;
    char v42 = 1;
    goto LABEL_10;
  }
  sub_25E75219C((uint64_t)v8, type metadata accessor for RootComponent.State);
LABEL_4:
  sub_25E752264(&v156);
  sub_25E74A4CC((uint64_t)&v156, (uint64_t)v198, &qword_26A7048F0);
  return sub_25E74A4CC((uint64_t)v198, a1, &qword_26A7048F0);
}

uint64_t sub_25E74E03C(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for RootComponent.State(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  CGPoint v10 = &v29[-v9];
  MEMORY[0x270FA5388](v8);
  CGFloat v12 = &v29[-v11];
  uint64_t v13 = v1 + *(int *)(type metadata accessor for RootComponent(0) + 20);
  sub_25E7521FC(v13, (uint64_t)v12, type metadata accessor for RootComponent.State);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_25E75219C((uint64_t)v12, type metadata accessor for RootComponent.State);
    sub_25E74A4CC(v1, (uint64_t)v45, &qword_26A7049A0);
    sub_25E74A4CC((uint64_t)v45, (uint64_t)v46, &qword_26A7049A0);
    uint64_t result = sub_25E74A530((uint64_t)v46);
    if (result == 1) {
      goto LABEL_7;
    }
    sub_25E7521FC(v13, (uint64_t)v10, type metadata accessor for RootComponent.State);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      uint64_t result = sub_25E75219C((uint64_t)v10, type metadata accessor for RootComponent.State);
      goto LABEL_7;
    }
    sub_25E75219C((uint64_t)v10, type metadata accessor for RootComponent.State);
    sub_25E74A4CC(v1, (uint64_t)v38, &qword_26A7049A0);
    sub_25E74A4CC((uint64_t)v38, (uint64_t)v39, &qword_26A7049A0);
    uint64_t result = sub_25E74A530((uint64_t)v39);
    if (result == 1) {
      goto LABEL_7;
    }
    uint64_t v35 = v39[53];
    uint64_t v36 = v39[52];
    uint64_t v33 = v39[55];
    uint64_t v34 = v39[54];
    uint64_t v19 = v39[56];
    uint64_t v20 = v39[57];
    uint64_t v21 = v39[58];
    uint64_t v22 = v39[59];
    uint64_t v32 = v40;
    int v30 = v41;
    uint64_t v23 = v42;
    uint64_t v31 = v43;
    long long v37 = v44;
    sub_25E7521FC(v13, (uint64_t)v7, type metadata accessor for RootComponent.State);
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result)
    {
      if (result == 1)
      {
        uint64_t result = swift_release();
        uint64_t v27 = 256;
        if (!v30) {
          uint64_t v27 = 0;
        }
        uint64_t v23 = v31;
        uint64_t v28 = v32;
        uint64_t v16 = v35;
        uint64_t v15 = v36;
        uint64_t v18 = v33;
        uint64_t v17 = v34;
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t result = sub_25E75219C((uint64_t)v7, type metadata accessor for ScanwaveActivateRequest);
    }
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v28 = 0;
    uint64_t v27 = 256;
LABEL_16:
    long long v24 = v37;
    long long v25 = *(_OWORD *)&v46[520];
    uint64_t v26 = v27 | v28;
    goto LABEL_8;
  }
  uint64_t result = sub_25E75219C((uint64_t)v12, type metadata accessor for RootComponent.State);
LABEL_7:
  uint64_t v15 = 0;
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = 0;
  uint64_t v19 = 0;
  uint64_t v20 = 0;
  uint64_t v21 = 0;
  uint64_t v22 = 0;
  uint64_t v23 = 0;
  long long v24 = 0uLL;
  long long v25 = 0uLL;
  uint64_t v26 = 0x20000;
LABEL_8:
  *(void *)uint64_t v3 = v15;
  *(void *)(v3 + 8) = v16;
  *(void *)(v3 + 16) = v17;
  *(void *)(v3 + 24) = v18;
  *(void *)(v3 + 32) = v19;
  *(void *)(v3 + 40) = v20;
  *(void *)(v3 + 48) = v21;
  *(void *)(v3 + 56) = v22;
  *(void *)(v3 + 64) = v26;
  *(void *)(v3 + 72) = v23;
  *(_OWORD *)(v3 + 80) = v24;
  *(_OWORD *)(v3 + 96) = v25;
  return result;
}

uint64_t sub_25E74E3E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RootComponent.State(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v23[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = &v23[-v7];
  uint64_t v9 = v1 + *(int *)(type metadata accessor for RootComponent(0) + 20);
  sub_25E7521FC(v9, (uint64_t)v8, type metadata accessor for RootComponent.State);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t result = sub_25E75219C((uint64_t)v8, type metadata accessor for RootComponent.State);
LABEL_4:
    uint64_t v11 = 0;
    long long v12 = 0uLL;
    uint64_t v13 = 0x20000;
    long long v14 = 0uLL;
    long long v15 = 0uLL;
    long long v16 = 0uLL;
    goto LABEL_19;
  }
  sub_25E75219C((uint64_t)v8, type metadata accessor for RootComponent.State);
  sub_25E74A4CC(v1, (uint64_t)v23, &qword_26A7049A0);
  sub_25E74A4CC((uint64_t)v23, (uint64_t)v24, &qword_26A7049A0);
  uint64_t result = sub_25E74A530((uint64_t)v24);
  if (result == 1) {
    goto LABEL_4;
  }
  sub_25E7521FC(v9, (uint64_t)v6, type metadata accessor for RootComponent.State);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    uint64_t result = sub_25E75219C((uint64_t)v6, type metadata accessor for ScanwaveActivateRequest);
    goto LABEL_13;
  }
  if (result != 1)
  {
LABEL_13:
    uint64_t v18 = 0;
    int v19 = 0;
    long long v12 = 0uLL;
    uint64_t v11 = v24[111];
    long long v14 = 0uLL;
    long long v15 = 0uLL;
    long long v16 = 0uLL;
    goto LABEL_14;
  }
  if ((*(unsigned char *)(*v6
                 + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_outroDelayTimerID
                 + 16) & 1) == 0)
  {
    uint64_t result = swift_release();
    goto LABEL_13;
  }
  int v17 = *(unsigned __int8 *)(*v6
                           + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_inverseBlurDelayTimerID
                           + 16);
  uint64_t result = swift_release();
  if (v17 == 1)
  {
    long long v12 = v33;
    long long v14 = v34;
    long long v15 = v35;
    long long v16 = v36;
    uint64_t v18 = v37;
    int v19 = v39;
    uint64_t v11 = v40;
    if ((v38 & 1) == 0) {
      goto LABEL_21;
    }
  }
  else
  {
    long long v12 = v25;
    long long v14 = v26;
    long long v15 = v27;
    long long v16 = v28;
    uint64_t v18 = v29;
    int v19 = v31;
    uint64_t v11 = v32;
    if (v30 != 1)
    {
LABEL_21:
      uint64_t v20 = 0;
      goto LABEL_15;
    }
  }
LABEL_14:
  uint64_t v20 = 256;
LABEL_15:
  BOOL v21 = v19 == 0;
  uint64_t v22 = 0x10000;
  if (v21) {
    uint64_t v22 = 0;
  }
  uint64_t v13 = v22 | v18 | v20;
LABEL_19:
  *(_OWORD *)a1 = v12;
  *(_OWORD *)(a1 + 16) = v14;
  *(_OWORD *)(a1 + 32) = v15;
  *(_OWORD *)(a1 + 48) = v16;
  *(void *)(a1 + 64) = v13;
  *(void *)(a1 + 72) = v11;
  return result;
}

uint64_t sub_25E74E688(uint64_t a1)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v3 = v2;
  uint64_t v4 = type metadata accessor for RootComponent.State(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (void *)((char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v40 - v8;
  uint64_t v10 = v1 + *(int *)(type metadata accessor for RootComponent(0) + 20);
  sub_25E7521FC(v10, (uint64_t)v9, type metadata accessor for RootComponent.State);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_25E75219C((uint64_t)v9, type metadata accessor for RootComponent.State);
    sub_25E74A4CC(v1, (uint64_t)&v51, &qword_26A7049A0);
    sub_25E74A4CC((uint64_t)&v51, (uint64_t)&v53, &qword_26A7049A0);
    uint64_t result = sub_25E74A530((uint64_t)&v53);
    if (result == 1) {
      goto LABEL_4;
    }
    sub_25E7521FC(v10, (uint64_t)v7, type metadata accessor for RootComponent.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        if ((*(unsigned char *)(*v7
                       + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_outroDelayTimerID
                       + 16) & 1) != 0)
        {
          long long v46 = v65;
          long long v47 = v64;
          long long v44 = v67;
          long long v45 = v66;
          char v13 = v68;
          char v27 = v69;
          char v14 = v70;
          uint64_t v22 = v71;
          long long v42 = v80;
          long long v43 = v79;
          long long v40 = v82;
          long long v41 = v81;
          char v12 = v83;
          char v26 = v84;
          CGFloat v35 = v85;
        }
        else
        {
          long long v46 = v57;
          long long v47 = v56;
          long long v44 = v59;
          long long v45 = v58;
          char v13 = v60;
          char v27 = v61;
          char v14 = v62;
          uint64_t v22 = v63;
          long long v42 = v73;
          long long v43 = v72;
          long long v40 = v75;
          long long v41 = v74;
          char v12 = v76;
          char v26 = v77;
          CGFloat v35 = v78;
        }
        sub_25E74A4CC((uint64_t)&v51, (uint64_t)v50, &qword_26A7049A0);
        sub_25E74A548(v50);
        CATransform3DMakeScale(&v49, v35, v35, 1.0);
        CATransform3D v48 = v49;
        swift_release();
        uint64_t result = sub_25E7525F8((uint64_t)&v51);
        long long v29 = v40;
        long long v28 = v41;
        long long v23 = v42;
        long long v21 = v43;
        long long v33 = v44;
        long long v32 = v45;
        long long v31 = v46;
        long long v30 = v47;
        LOBYTE(v49.m11) = v26;
        goto LABEL_14;
      }
      sub_25E74A4CC((uint64_t)&v51, (uint64_t)v50, &qword_26A7049A0);
      sub_25E74A548(v50);
    }
    else
    {
      sub_25E74A4CC((uint64_t)&v51, (uint64_t)v50, &qword_26A7049A0);
      sub_25E74A548(v50);
      sub_25E75219C((uint64_t)v7, type metadata accessor for ScanwaveActivateRequest);
    }
    uint64_t v22 = v55;
    long long v36 = *(_OWORD *)(MEMORY[0x263F15740] + 112);
    *(_OWORD *)&v48.m41 = *(_OWORD *)(MEMORY[0x263F15740] + 96);
    *(_OWORD *)&v48.m43 = v36;
    long long v37 = *(_OWORD *)(MEMORY[0x263F15740] + 80);
    *(_OWORD *)&v48.m31 = *(_OWORD *)(MEMORY[0x263F15740] + 64);
    *(_OWORD *)&v48.m33 = v37;
    long long v38 = *(_OWORD *)(MEMORY[0x263F15740] + 48);
    *(_OWORD *)&v48.m21 = *(_OWORD *)(MEMORY[0x263F15740] + 32);
    *(_OWORD *)&v48.m23 = v38;
    long long v39 = *(_OWORD *)(MEMORY[0x263F15740] + 16);
    *(_OWORD *)&v48.m11 = *MEMORY[0x263F15740];
    *(_OWORD *)&v48.m13 = v39;
    uint64_t result = sub_25E7525F8((uint64_t)&v51);
    char v12 = 0;
    char v13 = 0;
    char v14 = 0;
    long long v21 = 0uLL;
    long long v23 = 0uLL;
    char v26 = 1;
    LOBYTE(v50[0]) = 1;
    char v27 = 1;
    long long v28 = 0uLL;
    long long v29 = 0uLL;
    long long v30 = 0uLL;
    long long v31 = 0uLL;
    long long v32 = 0uLL;
    long long v33 = 0uLL;
LABEL_14:
    long long v16 = *(_OWORD *)&v48.m41;
    long long v15 = *(_OWORD *)&v48.m43;
    long long v18 = *(_OWORD *)&v48.m31;
    long long v17 = *(_OWORD *)&v48.m33;
    long long v20 = *(_OWORD *)&v48.m21;
    long long v19 = *(_OWORD *)&v48.m23;
    long long v25 = *(_OWORD *)&v48.m11;
    long long v24 = *(_OWORD *)&v48.m13;
    goto LABEL_15;
  }
  uint64_t result = sub_25E75219C((uint64_t)v9, type metadata accessor for RootComponent.State);
LABEL_4:
  char v12 = 0;
  char v13 = 0;
  char v14 = 0;
  long long v16 = *(_OWORD *)(MEMORY[0x263F15740] + 96);
  long long v15 = *(_OWORD *)(MEMORY[0x263F15740] + 112);
  long long v18 = *(_OWORD *)(MEMORY[0x263F15740] + 64);
  long long v17 = *(_OWORD *)(MEMORY[0x263F15740] + 80);
  long long v20 = *(_OWORD *)(MEMORY[0x263F15740] + 32);
  long long v19 = *(_OWORD *)(MEMORY[0x263F15740] + 48);
  long long v21 = 0uLL;
  uint64_t v22 = 0;
  long long v23 = 0uLL;
  long long v25 = *MEMORY[0x263F15740];
  long long v24 = *(_OWORD *)(MEMORY[0x263F15740] + 16);
  char v26 = 1;
  LOBYTE(v51) = 1;
  LOBYTE(v53) = 1;
  char v27 = 1;
  long long v28 = 0uLL;
  long long v29 = 0uLL;
  long long v30 = 0uLL;
  long long v31 = 0uLL;
  long long v32 = 0uLL;
  long long v33 = 0uLL;
LABEL_15:
  *(_OWORD *)uint64_t v3 = v21;
  *(_OWORD *)(v3 + 16) = v23;
  *(_OWORD *)(v3 + 32) = v28;
  *(_OWORD *)(v3 + 48) = v29;
  *(unsigned char *)(v3 + 64) = v12;
  *(unsigned char *)(v3 + 65) = v26;
  *(unsigned char *)(v3 + 66) = 0;
  *(_DWORD *)(v3 + 67) = v53;
  *(unsigned char *)(v3 + 71) = v54;
  *(_OWORD *)(v3 + 72) = v25;
  *(_OWORD *)(v3 + 88) = v24;
  *(_OWORD *)(v3 + 104) = v20;
  *(_OWORD *)(v3 + 120) = v19;
  *(_OWORD *)(v3 + 136) = v18;
  *(_OWORD *)(v3 + 152) = v17;
  *(_OWORD *)(v3 + 168) = v16;
  *(_OWORD *)(v3 + 184) = v15;
  *(_OWORD *)(v3 + 200) = v30;
  *(_OWORD *)(v3 + 216) = v31;
  *(_OWORD *)(v3 + 232) = v32;
  *(_OWORD *)(v3 + 248) = v33;
  *(unsigned char *)(v3 + 264) = v13;
  *(unsigned char *)(v3 + 265) = v27;
  *(unsigned char *)(v3 + 266) = v14;
  *(_DWORD *)(v3 + 267) = v51;
  *(unsigned char *)(v3 + 271) = v52;
  *(void *)(v3 + 272) = v22;
  return result;
}

uint64_t sub_25E74EB50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RootComponent.State(0);
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v6 = (void *)((char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = v1 + *(int *)(type metadata accessor for RootComponent(0) + 20);
  sub_25E7521FC(v9, (uint64_t)v8, type metadata accessor for RootComponent.State);
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_25E75219C((uint64_t)v8, type metadata accessor for RootComponent.State);
    sub_25E74A4CC(v1, (uint64_t)v85, &qword_26A7049A0);
    sub_25E74A4CC((uint64_t)v85, (uint64_t)v86, &qword_26A7049A0);
    if (sub_25E74A530((uint64_t)v86) == 1) {
      goto LABEL_4;
    }
    double v11 = *(double *)v86;
    CGFloat v12 = *(double *)&v86[1];
    double v13 = *(double *)&v86[2];
    CGFloat v14 = *(double *)&v86[3];
    sub_25E710B20((uint64_t)&v89);
    v114.origin.x = v11;
    v114.origin.y = v12;
    v114.size.width = v13;
    v114.size.height = v14;
    *(double *)&long long v15 = CGRectGetWidth(v114);
    float64x2_t v48 = v88;
    float64x2_t v49 = v87;
    *(_OWORD *)int v51 = v15;
    *(double *)&long long v15 = *(double *)&v15 * 0.5;
    long long v50 = v15;
    sub_25E7521FC(v9, (uint64_t)v6, type metadata accessor for RootComponent.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload)
    {
      if (EnumCaseMultiPayload == 1)
      {
        *((double *)&v17 + 1) = v51[1];
        *(double *)&long long v17 = v11 + (v13 - v51[0]) * 0.5;
        long long v45 = v17;
        char v18 = *(unsigned char *)(*v6
                       + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_outroDelayTimerID
                       + 16);
        swift_release();
        if (v18)
        {
          float64x2_t v48 = v98;
          float64x2_t v49 = v97;
          long long v46 = v100;
          long long v47 = v99;
          char v19 = v101;
          char v20 = v102;
          long long v21 = v103;
        }
        else
        {
          float64x2_t v48 = v91;
          float64x2_t v49 = v90;
          long long v46 = v93;
          long long v47 = v92;
          char v19 = v94;
          char v20 = v95;
          long long v21 = v96;
        }
        id v27 = v21;
        sub_25E710B64((uint64_t)&v89);
        long long v43 = v46;
        long long v41 = v47;
        float64x2_t v40 = v48;
        float64x2_t v39 = v49;
        unsigned __int8 v42 = 0;
        uint64_t v30 = v104;
        uint64_t v31 = v105;
        uint64_t v32 = v106;
        uint64_t v33 = v107;
        uint64_t v34 = v108;
        uint64_t v35 = v109;
        uint64_t v36 = v110;
        uint64_t v37 = v111;
        char v38 = v112;
        float64x2_t v29 = (float64x2_t)(unint64_t)v45;
        double v28 = v51[0];
        goto LABEL_13;
      }
    }
    else
    {
      sub_25E75219C((uint64_t)v6, type metadata accessor for ScanwaveActivateRequest);
    }
    __asm { FMOV            V1.2D, #0.5 }
    float64x2_t v49 = vaddq_f64(v49, vmulq_f64(vsubq_f64(v48, (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v51[0], 0)), _Q1));
    id v27 = v89;
    sub_25E710B64((uint64_t)&v89);
    double v28 = v51[0];
    float64x2_t v29 = v49;
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    char v38 = 0;
    char v19 = 0;
    float64x2_t v39 = 0uLL;
    float64x2_t v40 = 0uLL;
    long long v41 = 0uLL;
    unsigned __int8 v42 = 1;
    long long v43 = 0uLL;
    char v20 = 1;
LABEL_13:
    char v54 = v20;
    unsigned __int8 v53 = v42;
    unsigned __int8 v52 = v42;
    v55[0] = v39;
    v55[1] = v40;
    v55[2] = v41;
    v55[3] = v43;
    char v56 = v19;
    char v57 = v20;
    char v58 = 0;
    id v59 = v27;
    uint64_t v60 = v30;
    uint64_t v61 = v31;
    uint64_t v62 = v32;
    uint64_t v63 = v33;
    uint64_t v64 = v34;
    uint64_t v65 = v35;
    uint64_t v66 = v36;
    uint64_t v67 = v37;
    char v68 = v38;
    __int16 v69 = v42;
    uint64_t v70 = 0;
    uint64_t v71 = 0;
    double v72 = v28;
    double v73 = v28;
    uint64_t v74 = v30;
    uint64_t v75 = v31;
    uint64_t v76 = v32;
    uint64_t v77 = v33;
    uint64_t v78 = v34;
    uint64_t v79 = v35;
    uint64_t v80 = v36;
    uint64_t v81 = v37;
    char v82 = v38;
    __int16 v83 = v42;
    float64x2_t v84 = vaddq_f64((float64x2_t)vdupq_lane_s64(v50, 0), v29);
    nullsub_1(v55);
    uint64_t v10 = v55;
    goto LABEL_14;
  }
  sub_25E75219C((uint64_t)v8, type metadata accessor for RootComponent.State);
LABEL_4:
  sub_25E752304((uint64_t)v86);
  uint64_t v10 = v86;
LABEL_14:
  sub_25E74A4CC((uint64_t)v10, (uint64_t)v113, &qword_26A704918);
  return sub_25E74A4CC((uint64_t)v113, a1, &qword_26A704918);
}

void *sub_25E74EF94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScanwaveCommonAction();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v85 = v2;
  uint64_t v86 = v3;
  uint64_t v4 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v78 = (_OWORD *)((char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v77 = (_OWORD *)((char *)&v73 - v7);
  MEMORY[0x270FA5388](v6);
  float64x2_t v84 = (char *)&v73 - v8;
  uint64_t v87 = type metadata accessor for ExternalRequestID(0);
  uint64_t v89 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v74 = (uint64_t)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AD0);
  MEMORY[0x270FA5388](v81);
  __int16 v83 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AD8);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v75 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v82 = (uint64_t)&v73 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v88 = (uint64_t)&v73 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(qword_26A704AE0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  char v20 = (char *)&v73 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v73 - v21;
  uint64_t v23 = type metadata accessor for ScanwaveActivateRequest(0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v79 = v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v91 = (uint64_t)&v73 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for RootComponent.State(0);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  float64x2_t v90 = (uint64_t *)((char *)&v73 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (uint64_t *)((char *)&v73 - v30);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v34 = (uint64_t *)((char *)&v73 - v33);
  MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)&v73 - v35;
  uint64_t v80 = a1;
  uint64_t v37 = a1;
  uint64_t v38 = v93;
  sub_25E7521FC(v37, (uint64_t)&v73 - v35, type metadata accessor for RootComponent.State);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_25E75219C((uint64_t)v36, type metadata accessor for RootComponent.State);
  sub_25E7521FC(v38, (uint64_t)v34, type metadata accessor for RootComponent.State);
  uint64_t v92 = v26;
  int v39 = swift_getEnumCaseMultiPayload();
  if (!v39)
  {
    sub_25E752B28((uint64_t)v34, (uint64_t)v22, type metadata accessor for ScanwaveActivateRequest);
    goto LABEL_5;
  }
  if (v39 == 1)
  {
    sub_25E7521FC(*v34+ OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_activateRequest, (uint64_t)v22, type metadata accessor for ScanwaveActivateRequest);
    swift_release();
LABEL_5:
    float64x2_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
    v40(v22, 0, 1, v23);
    goto LABEL_7;
  }
  float64x2_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
  v40(v22, 1, 1, v23);
LABEL_7:
  long long v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v41(v22, 1, v23) == 1)
  {
    sub_25E752ACC((uint64_t)v22, qword_26A704AE0);
LABEL_25:
    uint64_t v61 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_29;
  }
  uint64_t v42 = v91;
  sub_25E752B28((uint64_t)v22, v91, type metadata accessor for ScanwaveActivateRequest);
  uint64_t v43 = v42;
  uint64_t v44 = v88;
  sub_25E7521FC(v43, v88, type metadata accessor for ExternalRequestID);
  long long v45 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56);
  uint64_t v46 = 1;
  uint64_t v47 = v44;
  uint64_t v48 = v87;
  v45(v47, 0, 1, v87);
  sub_25E7521FC(v80, (uint64_t)v31, type metadata accessor for RootComponent.State);
  int v49 = swift_getEnumCaseMultiPayload();
  if (v49)
  {
    if (v49 != 1) {
      goto LABEL_14;
    }
    sub_25E7521FC(*v31+ OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_activateRequest, (uint64_t)v20, type metadata accessor for ScanwaveActivateRequest);
    uint64_t v48 = v87;
    swift_release();
  }
  else
  {
    sub_25E752B28((uint64_t)v31, (uint64_t)v20, type metadata accessor for ScanwaveActivateRequest);
  }
  uint64_t v46 = 0;
LABEL_14:
  v40(v20, v46, 1, v23);
  if (v41(v20, 1, v23) == 1)
  {
    sub_25E752ACC((uint64_t)v20, qword_26A704AE0);
    uint64_t v50 = 1;
    uint64_t v52 = (uint64_t)v83;
    uint64_t v51 = (uint64_t)v84;
    uint64_t v53 = v82;
  }
  else
  {
    uint64_t v53 = v82;
    sub_25E7521FC((uint64_t)v20, v82, type metadata accessor for ExternalRequestID);
    sub_25E75219C((uint64_t)v20, type metadata accessor for ScanwaveActivateRequest);
    uint64_t v50 = 0;
    uint64_t v52 = (uint64_t)v83;
    uint64_t v51 = (uint64_t)v84;
  }
  v45(v53, v50, 1, v48);
  uint64_t v54 = v52 + *(int *)(v81 + 48);
  uint64_t v55 = v88;
  sub_25E752A64(v88, v52);
  sub_25E752A64(v53, v54);
  char v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
  if (v56(v52, 1, v48) == 1)
  {
    sub_25E752ACC(v53, &qword_26A704AD8);
    sub_25E752ACC(v55, &qword_26A704AD8);
    int v57 = v56(v54, 1, v48);
    uint64_t v38 = v93;
    if (v57 == 1)
    {
      sub_25E752ACC(v52, &qword_26A704AD8);
LABEL_24:
      sub_25E75219C(v91, type metadata accessor for ScanwaveActivateRequest);
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  uint64_t v58 = v75;
  sub_25E752A64(v52, v75);
  if (v56(v54, 1, v48) == 1)
  {
    sub_25E752ACC(v53, &qword_26A704AD8);
    sub_25E752ACC(v55, &qword_26A704AD8);
    sub_25E75219C(v58, type metadata accessor for ExternalRequestID);
LABEL_22:
    sub_25E752ACC(v52, &qword_26A704AD0);
    goto LABEL_26;
  }
  uint64_t v59 = v74;
  sub_25E752B28(v54, v74, type metadata accessor for ExternalRequestID);
  char v60 = sub_25E75BE20();
  sub_25E75219C(v59, type metadata accessor for ExternalRequestID);
  sub_25E752ACC(v53, &qword_26A704AD8);
  sub_25E752ACC(v55, &qword_26A704AD8);
  sub_25E75219C(v58, type metadata accessor for ExternalRequestID);
  sub_25E752ACC(v52, &qword_26A704AD8);
  uint64_t v38 = v93;
  if (v60) {
    goto LABEL_24;
  }
LABEL_26:
  BOOL v62 = EnumCaseMultiPayload != 2;
  sub_25E7521FC(v91, v51, type metadata accessor for ExternalRequestID);
  *(unsigned char *)(v51 + *(int *)(type metadata accessor for ScanwaveActivateResponse(0) + 20)) = v62;
  swift_storeEnumTagMultiPayload();
  uint64_t v61 = (void *)sub_25E7446F0(0, 1, 1, MEMORY[0x263F8EE78]);
  unint64_t v64 = v61[2];
  unint64_t v63 = v61[3];
  if (v64 >= v63 >> 1) {
    uint64_t v61 = (void *)sub_25E7446F0(v63 > 1, v64 + 1, 1, v61);
  }
  v61[2] = v64 + 1;
  sub_25E752B28(v51, (uint64_t)v61+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v64, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
  sub_25E75219C(v91, type metadata accessor for ScanwaveActivateRequest);
  uint64_t v38 = v93;
LABEL_29:
  uint64_t v65 = v90;
  sub_25E7521FC(v38, (uint64_t)v90, type metadata accessor for RootComponent.State);
  int v66 = swift_getEnumCaseMultiPayload();
  if (v66)
  {
    if (v66 == 1)
    {
      uint64_t v67 = *v65;
      if ((*(unsigned char *)(v67
                     + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_outroDelayTimerID
                     + 16) & 1) == 0)
      {
        *uint64_t v77 = *(_OWORD *)(v67
                         + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_outroDelayTimerID);
        swift_storeEnumTagMultiPayload();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v61 = (void *)sub_25E7446F0(0, v61[2] + 1, 1, v61);
        }
        unint64_t v69 = v61[2];
        unint64_t v68 = v61[3];
        if (v69 >= v68 >> 1) {
          uint64_t v61 = (void *)sub_25E7446F0(v68 > 1, v69 + 1, 1, v61);
        }
        v61[2] = v69 + 1;
        sub_25E752B28((uint64_t)v77, (uint64_t)v61+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v69, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
      }
      if (*(unsigned char *)(v67
                    + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_inverseBlurDelayTimerID
                    + 16) != 1)
      {
        *uint64_t v78 = *(_OWORD *)(v67
                         + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_inverseBlurDelayTimerID);
        swift_storeEnumTagMultiPayload();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v61 = (void *)sub_25E7446F0(0, v61[2] + 1, 1, v61);
        }
        unint64_t v71 = v61[2];
        unint64_t v70 = v61[3];
        if (v71 >= v70 >> 1) {
          uint64_t v61 = (void *)sub_25E7446F0(v70 > 1, v71 + 1, 1, v61);
        }
        v61[2] = v71 + 1;
        sub_25E752B28((uint64_t)v78, (uint64_t)v61+ ((*(unsigned __int8 *)(v86 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v86 + 80))+ *(void *)(v86 + 72) * v71, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
      }
      swift_release();
    }
  }
  else
  {
    sub_25E75219C((uint64_t)v65, type metadata accessor for ScanwaveActivateRequest);
  }
  return v61;
}

uint64_t sub_25E74FB8C(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  uint64_t v3 = v1
     + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_completionTimerID;
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  *(unsigned char *)(v3 + 16) = 1;
  uint64_t v4 = v1
     + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_outroDelayTimerID;
  *(void *)uint64_t v4 = 0;
  *(void *)(v4 + 8) = 0;
  *(unsigned char *)(v4 + 16) = 1;
  uint64_t v5 = v1
     + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_inverseBlurDelayTimerID;
  *(void *)uint64_t v5 = 0;
  *(void *)(v5 + 8) = 0;
  *(unsigned char *)(v5 + 16) = 1;
  uint64_t v6 = OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_progressAnimatablePropertyID;
  long long v9 = 0uLL;
  MEMORY[0x2611E27D0](&v9);
  *(_OWORD *)(v1 + v6) = v9;
  uint64_t v7 = OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_completionProgressMilestoneID;
  long long v9 = 0uLL;
  MEMORY[0x2611E27D0](&v9);
  *(_OWORD *)(v1 + v7) = v9;
  *(unsigned char *)(v1
           + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_isComplete) = 0;
  sub_25E752B28(a1, v1+ OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_activateRequest, type metadata accessor for ScanwaveActivateRequest);
  return v1;
}

void *sub_25E74FC98(uint64_t a1, uint64_t a2)
{
  uint64_t v55 = a2;
  uint64_t v59 = *MEMORY[0x263EF8340];
  uint64_t v4 = type metadata accessor for ScanwaveCommonAction();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v54 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char *)&v54 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v54 - v14;
  uint64_t v16 = type metadata accessor for ScanwaveCommonEvent();
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t *)((char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v54 - v20;
  sub_25E7521FC(a1, (uint64_t)&v54 - v20, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonEvent);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    sub_25E7521FC((uint64_t)v21, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonEvent);
    uint64_t v22 = *v19;
    uint64_t v23 = v19[1];
    uint64_t v24 = v2
        + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_outroDelayTimerID;
    if ((*(unsigned char *)(v2
                   + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_outroDelayTimerID
                   + 16) & 1) == 0
      && (*(void *)v24 == v22 ? (BOOL v25 = *(void *)(v24 + 8) == v23) : (BOOL v25 = 0), v25))
    {
      uint64_t v57 = 0;
      uint64_t v58 = 0;
      MEMORY[0x2611E27D0](&v57);
      uint64_t v31 = v57;
      uint64_t v32 = v58;
      uint64_t v33 = v2
          + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_inverseBlurDelayTimerID;
      *(void *)uint64_t v33 = v57;
      *(void *)(v33 + 8) = v32;
      *(unsigned char *)(v33 + 16) = 0;
      *(void *)uint64_t v24 = 0;
      *(void *)(v24 + 8) = 0;
      *(unsigned char *)(v24 + 16) = 1;
      double v34 = *(double *)(v55 + 1056);
      UIAnimationDragCoefficient();
      *(void *)uint64_t v15 = v31;
      *((void *)v15 + 1) = v32;
      *((double *)v15 + 2) = v34 * v35;
      swift_storeEnumTagMultiPayload();
      uint64_t v30 = (void *)sub_25E7446F0(0, 1, 1, MEMORY[0x263F8EE78]);
      unint64_t v37 = v30[2];
      unint64_t v36 = v30[3];
      if (v37 >= v36 >> 1) {
        uint64_t v30 = (void *)sub_25E7446F0(v36 > 1, v37 + 1, 1, v30);
      }
      v30[2] = v37 + 1;
      unint64_t v38 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
      uint64_t v39 = *(void *)(v56 + 72);
      sub_25E752B28((uint64_t)v15, (uint64_t)v30 + v38 + v39 * v37, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
      if (qword_26A703FD0 != -1) {
        swift_once();
      }
      uint64_t v40 = __swift_project_value_buffer(v4, (uint64_t)qword_26A706580);
      sub_25E7521FC(v40, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
      unint64_t v42 = v30[2];
      unint64_t v41 = v30[3];
      if (v42 >= v41 >> 1) {
        uint64_t v30 = (void *)sub_25E7446F0(v41 > 1, v42 + 1, 1, v30);
      }
      v30[2] = v42 + 1;
      uint64_t v43 = (uint64_t)v30 + v38 + v42 * v39;
      uint64_t v44 = (uint64_t)v13;
    }
    else
    {
      uint64_t v26 = v2
          + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_inverseBlurDelayTimerID;
      if ((*(unsigned char *)(v2
                     + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_inverseBlurDelayTimerID
                     + 16) & 1) == 0
        && (*(void *)v26 == v22 ? (BOOL v27 = *(void *)(v26 + 8) == v23) : (BOOL v27 = 0), v27))
      {
        *(void *)uint64_t v26 = 0;
        *(void *)(v26 + 8) = 0;
        *(unsigned char *)(v26 + 16) = 1;
        if (qword_26A703FD0 != -1) {
          swift_once();
        }
        uint64_t v45 = __swift_project_value_buffer(v4, (uint64_t)qword_26A706580);
        sub_25E7521FC(v45, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
        uint64_t v30 = (void *)sub_25E7446F0(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v47 = v30[2];
        unint64_t v46 = v30[3];
        if (v47 >= v46 >> 1) {
          uint64_t v30 = (void *)sub_25E7446F0(v46 > 1, v47 + 1, 1, v30);
        }
        uint64_t v48 = v56;
        v30[2] = v47 + 1;
        uint64_t v43 = (uint64_t)v30
            + ((*(unsigned __int8 *)(v48 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80))
            + *(void *)(v48 + 72) * v47;
        uint64_t v44 = (uint64_t)v10;
      }
      else
      {
        uint64_t v28 = v2
            + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_completionTimerID;
        if ((*(unsigned char *)(v2
                       + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_completionTimerID
                       + 16) & 1) != 0)
          goto LABEL_17;
        if (*(void *)v28 != v22 || *(void *)(v28 + 8) != v23) {
          goto LABEL_17;
        }
        *(void *)uint64_t v28 = 0;
        *(void *)(v28 + 8) = 0;
        *(unsigned char *)(v28 + 16) = 1;
        *(unsigned char *)(v2
                 + OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_isComplete) = 1;
        if (qword_26A703FD0 != -1) {
          swift_once();
        }
        uint64_t v49 = __swift_project_value_buffer(v4, (uint64_t)qword_26A706580);
        sub_25E7521FC(v49, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
        uint64_t v30 = (void *)sub_25E7446F0(0, 1, 1, MEMORY[0x263F8EE78]);
        unint64_t v51 = v30[2];
        unint64_t v50 = v30[3];
        if (v51 >= v50 >> 1) {
          uint64_t v30 = (void *)sub_25E7446F0(v50 > 1, v51 + 1, 1, v30);
        }
        uint64_t v52 = v56;
        v30[2] = v51 + 1;
        uint64_t v43 = (uint64_t)v30
            + ((*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80))
            + *(void *)(v52 + 72) * v51;
        uint64_t v44 = (uint64_t)v7;
      }
    }
    sub_25E752B28(v44, v43, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonAction);
    goto LABEL_36;
  }
LABEL_17:
  uint64_t v30 = (void *)MEMORY[0x263F8EE78];
LABEL_36:
  sub_25E75219C((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ScanwaveCommonEvent);
  return v30;
}

uint64_t sub_25E7502D0()
{
  sub_25E75219C(v0+ OBJC_IVAR____TtCV20SystemUIAnimationKit13RootComponentP33_F30F26508A891EC295F2C3E7A2A3378913ActiveContext_activateRequest, type metadata accessor for ScanwaveActivateRequest);
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);
  return MEMORY[0x270FA0228](v0, v1, v2);
}

uint64_t sub_25E750348()
{
  return type metadata accessor for RootComponent.ActiveContext(0);
}

uint64_t type metadata accessor for RootComponent.ActiveContext(uint64_t a1)
{
  return sub_25E7355D0(a1, (uint64_t *)&unk_26A704A98);
}

uint64_t sub_25E750370()
{
  uint64_t result = sub_25E75BE40();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

_OWORD *sub_25E750424(_OWORD *__dst, char *__src, uint64_t a3)
{
  uint64_t v4 = __dst;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v42 = *(void *)__src;
    *(void *)uint64_t v4 = *(void *)__src;
    uint64_t v4 = (_OWORD *)(v42 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *((void *)__src + 70);
    if (v7)
    {
      long long v8 = *((_OWORD *)__src + 1);
      *__dst = *(_OWORD *)__src;
      __dst[1] = v8;
      long long v9 = *((_OWORD *)__src + 3);
      __dst[2] = *((_OWORD *)__src + 2);
      __dst[3] = v9;
      __dst[4] = *((_OWORD *)__src + 4);
      memcpy(__dst + 5, __src + 80, 0x150uLL);
      long long v10 = *((_OWORD *)__src + 31);
      v4[30] = *((_OWORD *)__src + 30);
      v4[31] = v10;
      v4[32] = *((_OWORD *)__src + 32);
      *((void *)v4 + 66) = *((void *)__src + 66);
      long long v11 = *((_OWORD *)__src + 27);
      v4[26] = *((_OWORD *)__src + 26);
      v4[27] = v11;
      long long v12 = *((_OWORD *)__src + 29);
      v4[28] = *((_OWORD *)__src + 28);
      v4[29] = v12;
      long long v13 = *(_OWORD *)(__src + 536);
      *((void *)v4 + 69) = *((void *)__src + 69);
      *(_OWORD *)((char *)v4 + 536) = v13;
      *((void *)v4 + 70) = v7;
      *((void *)v4 + 71) = *((void *)__src + 71);
      v4[36] = *((_OWORD *)__src + 36);
      *((void *)v4 + 74) = *((void *)__src + 74);
      *((void *)v4 + 75) = *((void *)__src + 75);
      long long v14 = *((_OWORD *)__src + 41);
      v4[40] = *((_OWORD *)__src + 40);
      v4[41] = v14;
      long long v15 = *((_OWORD *)__src + 43);
      v4[42] = *((_OWORD *)__src + 42);
      v4[43] = v15;
      long long v16 = *((_OWORD *)__src + 39);
      v4[38] = *((_OWORD *)__src + 38);
      v4[39] = v16;
      long long v17 = *((_OWORD *)__src + 47);
      v4[46] = *((_OWORD *)__src + 46);
      v4[47] = v17;
      long long v18 = *((_OWORD *)__src + 45);
      v4[44] = *((_OWORD *)__src + 44);
      v4[45] = v18;
      long long v19 = *((_OWORD *)__src + 49);
      v4[48] = *((_OWORD *)__src + 48);
      v4[49] = v19;
      *((void *)v4 + 108) = *((void *)__src + 108);
      long long v20 = *((_OWORD *)__src + 53);
      v4[52] = *((_OWORD *)__src + 52);
      v4[53] = v20;
      long long v21 = *((_OWORD *)__src + 51);
      v4[50] = *((_OWORD *)__src + 50);
      v4[51] = v21;
      *(_OWORD *)((char *)v4 + 872) = *(_OWORD *)(__src + 872);
      long long v22 = *(_OWORD *)(__src + 904);
      *(_OWORD *)((char *)v4 + 888) = *(_OWORD *)(__src + 888);
      *(_OWORD *)((char *)v4 + 904) = v22;
      long long v23 = *(_OWORD *)(__src + 920);
      long long v24 = *(_OWORD *)(__src + 936);
      long long v25 = *(_OWORD *)(__src + 968);
      *(_OWORD *)((char *)v4 + 952) = *(_OWORD *)(__src + 952);
      *(_OWORD *)((char *)v4 + 968) = v25;
      *(_OWORD *)((char *)v4 + 920) = v23;
      *(_OWORD *)((char *)v4 + 936) = v24;
      long long v26 = *(_OWORD *)(__src + 984);
      long long v27 = *(_OWORD *)(__src + 1000);
      long long v28 = *(_OWORD *)(__src + 1048);
      *(_OWORD *)((char *)v4 + 1032) = *(_OWORD *)(__src + 1032);
      *(_OWORD *)((char *)v4 + 1048) = v28;
      long long v29 = *(_OWORD *)(__src + 1016);
      *(_OWORD *)((char *)v4 + 1000) = v27;
      *(_OWORD *)((char *)v4 + 1016) = v29;
      *(_OWORD *)((char *)v4 + 984) = v26;
      uint64_t v30 = (void *)*((void *)__src + 133);
      *((void *)v4 + 133) = v30;
      v4[68] = *((_OWORD *)__src + 68);
      v4[69] = *((_OWORD *)__src + 69);
      v4[70] = *((_OWORD *)__src + 70);
      *((_WORD *)v4 + 568) = *((_WORD *)__src + 568);
      v4[67] = *((_OWORD *)__src + 67);
      *((unsigned char *)v4 + 1138) = __src[1138];
      uint64_t v31 = (void *)*((void *)__src + 143);
      *((void *)v4 + 143) = v31;
      v4[72] = *((_OWORD *)__src + 72);
      long long v32 = *((_OWORD *)__src + 73);
      long long v33 = *((_OWORD *)__src + 74);
      long long v34 = *((_OWORD *)__src + 75);
      *((_WORD *)v4 + 608) = *((_WORD *)__src + 608);
      v4[75] = v34;
      v4[74] = v33;
      v4[73] = v32;
      *((unsigned char *)v4 + 1218) = __src[1218];
      float v35 = (void *)*((void *)__src + 153);
      *((void *)v4 + 153) = v35;
      v4[77] = *((_OWORD *)__src + 77);
      long long v36 = *((_OWORD *)__src + 78);
      long long v37 = *((_OWORD *)__src + 79);
      long long v38 = *((_OWORD *)__src + 80);
      *((unsigned char *)v4 + 1296) = __src[1296];
      v4[80] = v38;
      v4[79] = v37;
      v4[78] = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v39 = v30;
      id v40 = v31;
      id v41 = v35;
    }
    else
    {
      memcpy(__dst, __src, 0x511uLL);
    }
    uint64_t v43 = *(int *)(a3 + 20);
    uint64_t v44 = (void *)((char *)v4 + v43);
    uint64_t v45 = &__src[v43];
    uint64_t v46 = type metadata accessor for RootComponent.State(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *uint64_t v44 = *(void *)v45;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v44, v45, *(void *)(*(void *)(v46 - 8) + 64));
    }
    else
    {
      uint64_t v48 = sub_25E75BE40();
      (*(void (**)(void *, char *, uint64_t))(*(void *)(v48 - 8) + 16))(v44, v45, v48);
      uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8);
      *(_OWORD *)((char *)v44 + *(int *)(v49 + 48)) = *(_OWORD *)&v45[*(int *)(v49 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return v4;
}

uint64_t type metadata accessor for RootComponent.State(uint64_t a1)
{
  return sub_25E7355D0(a1, (uint64_t *)&unk_26A704AC0);
}

uint64_t sub_25E7507BC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 560))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for RootComponent.State(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_release();
  }
  else if (!result)
  {
    uint64_t v6 = sub_25E75BE40();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
    return v7(v4, v6);
  }
  return result;
}

_OWORD *sub_25E7508B4(_OWORD *__dst, char *__src, uint64_t a3)
{
  uint64_t v6 = *((void *)__src + 70);
  if (v6)
  {
    long long v7 = *((_OWORD *)__src + 1);
    *__dst = *(_OWORD *)__src;
    __dst[1] = v7;
    long long v8 = *((_OWORD *)__src + 3);
    __dst[2] = *((_OWORD *)__src + 2);
    __dst[3] = v8;
    __dst[4] = *((_OWORD *)__src + 4);
    memcpy(__dst + 5, __src + 80, 0x150uLL);
    long long v9 = *((_OWORD *)__src + 31);
    __dst[30] = *((_OWORD *)__src + 30);
    __dst[31] = v9;
    __dst[32] = *((_OWORD *)__src + 32);
    *((void *)__dst + 66) = *((void *)__src + 66);
    long long v10 = *((_OWORD *)__src + 27);
    __dst[26] = *((_OWORD *)__src + 26);
    __dst[27] = v10;
    long long v11 = *((_OWORD *)__src + 29);
    __dst[28] = *((_OWORD *)__src + 28);
    __dst[29] = v11;
    long long v12 = *(_OWORD *)(__src + 536);
    *((void *)__dst + 69) = *((void *)__src + 69);
    *(_OWORD *)((char *)__dst + 536) = v12;
    *((void *)__dst + 70) = v6;
    *((void *)__dst + 71) = *((void *)__src + 71);
    __dst[36] = *((_OWORD *)__src + 36);
    *((void *)__dst + 74) = *((void *)__src + 74);
    *((void *)__dst + 75) = *((void *)__src + 75);
    long long v13 = *((_OWORD *)__src + 41);
    __dst[40] = *((_OWORD *)__src + 40);
    __dst[41] = v13;
    long long v14 = *((_OWORD *)__src + 43);
    __dst[42] = *((_OWORD *)__src + 42);
    __dst[43] = v14;
    long long v15 = *((_OWORD *)__src + 39);
    __dst[38] = *((_OWORD *)__src + 38);
    __dst[39] = v15;
    long long v16 = *((_OWORD *)__src + 47);
    __dst[46] = *((_OWORD *)__src + 46);
    __dst[47] = v16;
    long long v17 = *((_OWORD *)__src + 45);
    __dst[44] = *((_OWORD *)__src + 44);
    __dst[45] = v17;
    long long v18 = *((_OWORD *)__src + 49);
    __dst[48] = *((_OWORD *)__src + 48);
    __dst[49] = v18;
    *((void *)__dst + 108) = *((void *)__src + 108);
    long long v19 = *((_OWORD *)__src + 53);
    __dst[52] = *((_OWORD *)__src + 52);
    __dst[53] = v19;
    long long v20 = *((_OWORD *)__src + 51);
    __dst[50] = *((_OWORD *)__src + 50);
    __dst[51] = v20;
    *(_OWORD *)((char *)__dst + 872) = *(_OWORD *)(__src + 872);
    long long v21 = *(_OWORD *)(__src + 904);
    *(_OWORD *)((char *)__dst + 888) = *(_OWORD *)(__src + 888);
    *(_OWORD *)((char *)__dst + 904) = v21;
    long long v22 = *(_OWORD *)(__src + 920);
    long long v23 = *(_OWORD *)(__src + 936);
    long long v24 = *(_OWORD *)(__src + 968);
    *(_OWORD *)((char *)__dst + 952) = *(_OWORD *)(__src + 952);
    *(_OWORD *)((char *)__dst + 968) = v24;
    *(_OWORD *)((char *)__dst + 920) = v22;
    *(_OWORD *)((char *)__dst + 936) = v23;
    long long v25 = *(_OWORD *)(__src + 984);
    long long v26 = *(_OWORD *)(__src + 1000);
    long long v27 = *(_OWORD *)(__src + 1048);
    *(_OWORD *)((char *)__dst + 1032) = *(_OWORD *)(__src + 1032);
    *(_OWORD *)((char *)__dst + 1048) = v27;
    long long v28 = *(_OWORD *)(__src + 1016);
    *(_OWORD *)((char *)__dst + 1000) = v26;
    *(_OWORD *)((char *)__dst + 1016) = v28;
    *(_OWORD *)((char *)__dst + 984) = v25;
    long long v29 = (void *)*((void *)__src + 133);
    *((void *)__dst + 133) = v29;
    __dst[68] = *((_OWORD *)__src + 68);
    __dst[69] = *((_OWORD *)__src + 69);
    __dst[70] = *((_OWORD *)__src + 70);
    *((_WORD *)__dst + 568) = *((_WORD *)__src + 568);
    __dst[67] = *((_OWORD *)__src + 67);
    *((unsigned char *)__dst + 1138) = __src[1138];
    uint64_t v30 = (void *)*((void *)__src + 143);
    *((void *)__dst + 143) = v30;
    __dst[72] = *((_OWORD *)__src + 72);
    long long v31 = *((_OWORD *)__src + 73);
    long long v32 = *((_OWORD *)__src + 74);
    long long v33 = *((_OWORD *)__src + 75);
    *((_WORD *)__dst + 608) = *((_WORD *)__src + 608);
    __dst[75] = v33;
    __dst[74] = v32;
    __dst[73] = v31;
    *((unsigned char *)__dst + 1218) = __src[1218];
    long long v34 = (void *)*((void *)__src + 153);
    *((void *)__dst + 153) = v34;
    __dst[77] = *((_OWORD *)__src + 77);
    long long v35 = *((_OWORD *)__src + 78);
    long long v36 = *((_OWORD *)__src + 79);
    long long v37 = *((_OWORD *)__src + 80);
    *((unsigned char *)__dst + 1296) = __src[1296];
    __dst[80] = v37;
    __dst[79] = v36;
    __dst[78] = v35;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v38 = v29;
    id v39 = v30;
    id v40 = v34;
  }
  else
  {
    memcpy(__dst, __src, 0x511uLL);
  }
  uint64_t v41 = *(int *)(a3 + 20);
  uint64_t v42 = (void *)((char *)__dst + v41);
  uint64_t v43 = &__src[v41];
  uint64_t v44 = type metadata accessor for RootComponent.State(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *uint64_t v42 = *(void *)v43;
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(v42, v43, *(void *)(*(void *)(v44 - 8) + 64));
  }
  else
  {
    uint64_t v46 = sub_25E75BE40();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v46 - 8) + 16))(v42, v43, v46);
    uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8);
    *(_OWORD *)((char *)v42 + *(int *)(v47 + 48)) = *(_OWORD *)&v43[*(int *)(v47 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return __dst;
}

char *sub_25E750BDC(char *__dst, char *__src, uint64_t a3)
{
  uint64_t v6 = *((void *)__src + 70);
  if (*((void *)__dst + 70))
  {
    if (v6)
    {
      *(void *)__dst = *(void *)__src;
      *((void *)__dst + 1) = *((void *)__src + 1);
      *((void *)__dst + 2) = *((void *)__src + 2);
      *((void *)__dst + 3) = *((void *)__src + 3);
      *((void *)__dst + 4) = *((void *)__src + 4);
      *((void *)__dst + 5) = *((void *)__src + 5);
      *((void *)__dst + 6) = *((void *)__src + 6);
      *((void *)__dst + 7) = *((void *)__src + 7);
      *((void *)__dst + 8) = *((void *)__src + 8);
      *((void *)__dst + 9) = *((void *)__src + 9);
      *((void *)__dst + 10) = *((void *)__src + 10);
      *(_OWORD *)(__dst + 88) = *(_OWORD *)(__src + 88);
      long long v7 = *(_OWORD *)(__src + 104);
      long long v8 = *(_OWORD *)(__src + 120);
      long long v9 = *(_OWORD *)(__src + 136);
      *((_WORD *)__dst + 76) = *((_WORD *)__src + 76);
      *(_OWORD *)(__dst + 136) = v9;
      *(_OWORD *)(__dst + 120) = v8;
      *(_OWORD *)(__dst + 104) = v7;
      __dst[154] = __src[154];
      *((void *)__dst + 20) = *((void *)__src + 20);
      *(_OWORD *)(__dst + 168) = *(_OWORD *)(__src + 168);
      long long v10 = *(_OWORD *)(__src + 184);
      long long v11 = *(_OWORD *)(__src + 200);
      long long v12 = *(_OWORD *)(__src + 216);
      *((_WORD *)__dst + 116) = *((_WORD *)__src + 116);
      *(_OWORD *)(__dst + 216) = v12;
      *(_OWORD *)(__dst + 200) = v11;
      *(_OWORD *)(__dst + 184) = v10;
      __dst[234] = __src[234];
      *((void *)__dst + 30) = *((void *)__src + 30);
      *((void *)__dst + 31) = *((void *)__src + 31);
      *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
      long long v13 = *((_OWORD *)__src + 17);
      long long v14 = *((_OWORD *)__src + 18);
      long long v15 = *((_OWORD *)__src + 19);
      *((_WORD *)__dst + 160) = *((_WORD *)__src + 160);
      *((_OWORD *)__dst + 18) = v14;
      *((_OWORD *)__dst + 19) = v15;
      *((_OWORD *)__dst + 17) = v13;
      __dst[322] = __src[322];
      *((void *)__dst + 41) = *((void *)__src + 41);
      *((_OWORD *)__dst + 21) = *((_OWORD *)__src + 21);
      long long v16 = *((_OWORD *)__src + 22);
      long long v17 = *((_OWORD *)__src + 23);
      long long v18 = *((_OWORD *)__src + 24);
      *((_WORD *)__dst + 200) = *((_WORD *)__src + 200);
      *((_OWORD *)__dst + 23) = v17;
      *((_OWORD *)__dst + 24) = v18;
      *((_OWORD *)__dst + 22) = v16;
      __dst[402] = __src[402];
      *((void *)__dst + 51) = *((void *)__src + 51);
      *((_OWORD *)__dst + 26) = *((_OWORD *)__src + 26);
      long long v19 = *((_OWORD *)__src + 27);
      long long v20 = *((_OWORD *)__src + 28);
      long long v21 = *((_OWORD *)__src + 29);
      *((_WORD *)__dst + 240) = *((_WORD *)__src + 240);
      *((_OWORD *)__dst + 28) = v20;
      *((_OWORD *)__dst + 29) = v21;
      *((_OWORD *)__dst + 27) = v19;
      __dst[482] = __src[482];
      *((void *)__dst + 61) = *((void *)__src + 61);
      *((void *)__dst + 62) = *((void *)__src + 62);
      *((void *)__dst + 63) = *((void *)__src + 63);
      *((void *)__dst + 64) = *((void *)__src + 64);
      *((void *)__dst + 65) = *((void *)__src + 65);
      *((void *)__dst + 66) = *((void *)__src + 66);
      *((void *)__dst + 67) = *((void *)__src + 67);
      *((void *)__dst + 68) = *((void *)__src + 68);
      *((void *)__dst + 69) = *((void *)__src + 69);
      *((void *)__dst + 70) = *((void *)__src + 70);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 71) = *((void *)__src + 71);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 72) = *((void *)__src + 72);
      *((void *)__dst + 73) = *((void *)__src + 73);
      *((void *)__dst + 74) = *((void *)__src + 74);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 75) = *((void *)__src + 75);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((void *)__dst + 76) = *((void *)__src + 76);
      *((void *)__dst + 77) = *((void *)__src + 77);
      *((_OWORD *)__dst + 39) = *((_OWORD *)__src + 39);
      long long v22 = *((_OWORD *)__src + 40);
      long long v23 = *((_OWORD *)__src + 41);
      long long v24 = *((_OWORD *)__src + 42);
      *((_WORD *)__dst + 344) = *((_WORD *)__src + 344);
      *((_OWORD *)__dst + 41) = v23;
      *((_OWORD *)__dst + 42) = v24;
      *((_OWORD *)__dst + 40) = v22;
      __dst[690] = __src[690];
      *((void *)__dst + 87) = *((void *)__src + 87);
      *((_OWORD *)__dst + 44) = *((_OWORD *)__src + 44);
      long long v25 = *((_OWORD *)__src + 45);
      long long v26 = *((_OWORD *)__src + 46);
      long long v27 = *((_OWORD *)__src + 47);
      *((_WORD *)__dst + 384) = *((_WORD *)__src + 384);
      *((_OWORD *)__dst + 46) = v26;
      *((_OWORD *)__dst + 47) = v27;
      *((_OWORD *)__dst + 45) = v25;
      __dst[770] = __src[770];
      *((void *)__dst + 97) = *((void *)__src + 97);
      *((_OWORD *)__dst + 49) = *((_OWORD *)__src + 49);
      long long v28 = *((_OWORD *)__src + 50);
      long long v29 = *((_OWORD *)__src + 51);
      long long v30 = *((_OWORD *)__src + 52);
      *((_WORD *)__dst + 424) = *((_WORD *)__src + 424);
      *((_OWORD *)__dst + 51) = v29;
      *((_OWORD *)__dst + 52) = v30;
      *((_OWORD *)__dst + 50) = v28;
      __dst[850] = __src[850];
      *((void *)__dst + 107) = *((void *)__src + 107);
      *((void *)__dst + 108) = *((void *)__src + 108);
      *((void *)__dst + 109) = *((void *)__src + 109);
      *((void *)__dst + 110) = *((void *)__src + 110);
      *((void *)__dst + 111) = *((void *)__src + 111);
      *((_OWORD *)__dst + 56) = *((_OWORD *)__src + 56);
      long long v31 = *((_OWORD *)__src + 57);
      long long v32 = *((_OWORD *)__src + 58);
      long long v33 = *((_OWORD *)__src + 59);
      *((_WORD *)__dst + 480) = *((_WORD *)__src + 480);
      *((_OWORD *)__dst + 58) = v32;
      *((_OWORD *)__dst + 59) = v33;
      *((_OWORD *)__dst + 57) = v31;
      __dst[962] = __src[962];
      *((void *)__dst + 121) = *((void *)__src + 121);
      *((_OWORD *)__dst + 61) = *((_OWORD *)__src + 61);
      long long v34 = *((_OWORD *)__src + 62);
      long long v35 = *((_OWORD *)__src + 63);
      long long v36 = *((_OWORD *)__src + 64);
      *((_WORD *)__dst + 520) = *((_WORD *)__src + 520);
      *((_OWORD *)__dst + 63) = v35;
      *((_OWORD *)__dst + 64) = v36;
      *((_OWORD *)__dst + 62) = v34;
      __dst[1042] = __src[1042];
      *((void *)__dst + 131) = *((void *)__src + 131);
      *((void *)__dst + 132) = *((void *)__src + 132);
      long long v37 = (void *)*((void *)__src + 133);
      id v38 = (void *)*((void *)__dst + 133);
      *((void *)__dst + 133) = v37;
      id v39 = v37;

      *((_OWORD *)__dst + 67) = *((_OWORD *)__src + 67);
      long long v40 = *((_OWORD *)__src + 68);
      long long v41 = *((_OWORD *)__src + 69);
      long long v42 = *((_OWORD *)__src + 70);
      *((_WORD *)__dst + 568) = *((_WORD *)__src + 568);
      *((_OWORD *)__dst + 70) = v42;
      *((_OWORD *)__dst + 69) = v41;
      *((_OWORD *)__dst + 68) = v40;
      __dst[1138] = __src[1138];
      uint64_t v43 = (void *)*((void *)__src + 143);
      uint64_t v44 = (void *)*((void *)__dst + 143);
      *((void *)__dst + 143) = v43;
      id v45 = v43;

      *((_OWORD *)__dst + 72) = *((_OWORD *)__src + 72);
      long long v46 = *((_OWORD *)__src + 73);
      long long v47 = *((_OWORD *)__src + 74);
      long long v48 = *((_OWORD *)__src + 75);
      *((_WORD *)__dst + 608) = *((_WORD *)__src + 608);
      *((_OWORD *)__dst + 75) = v48;
      *((_OWORD *)__dst + 74) = v47;
      *((_OWORD *)__dst + 73) = v46;
      __dst[1218] = __src[1218];
      uint64_t v49 = (void *)*((void *)__src + 153);
      unint64_t v50 = (void *)*((void *)__dst + 153);
      *((void *)__dst + 153) = v49;
      id v51 = v49;

      *((void *)__dst + 154) = *((void *)__src + 154);
      *((void *)__dst + 155) = *((void *)__src + 155);
      *((void *)__dst + 156) = *((void *)__src + 156);
      *((void *)__dst + 157) = *((void *)__src + 157);
      *((void *)__dst + 158) = *((void *)__src + 158);
      *((void *)__dst + 159) = *((void *)__src + 159);
      *((_DWORD *)__dst + 320) = *((_DWORD *)__src + 320);
      *((_DWORD *)__dst + 321) = *((_DWORD *)__src + 321);
      *((_DWORD *)__dst + 322) = *((_DWORD *)__src + 322);
      int v52 = *((_DWORD *)__src + 323);
      __dst[1296] = __src[1296];
      *((_DWORD *)__dst + 323) = v52;
      goto LABEL_8;
    }
    sub_25E751388((uint64_t)__dst);
  }
  else if (v6)
  {
    long long v53 = *((_OWORD *)__src + 1);
    *(_OWORD *)__dst = *(_OWORD *)__src;
    *((_OWORD *)__dst + 1) = v53;
    long long v54 = *((_OWORD *)__src + 3);
    *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
    *((_OWORD *)__dst + 3) = v54;
    *((void *)__dst + 8) = *((void *)__src + 8);
    *((void *)__dst + 9) = *((void *)__src + 9);
    memcpy(__dst + 80, __src + 80, 0x150uLL);
    long long v55 = *((_OWORD *)__src + 29);
    long long v57 = *((_OWORD *)__src + 26);
    long long v56 = *((_OWORD *)__src + 27);
    *((_OWORD *)__dst + 28) = *((_OWORD *)__src + 28);
    *((_OWORD *)__dst + 29) = v55;
    *((_OWORD *)__dst + 26) = v57;
    *((_OWORD *)__dst + 27) = v56;
    long long v59 = *((_OWORD *)__src + 31);
    long long v58 = *((_OWORD *)__src + 32);
    long long v60 = *((_OWORD *)__src + 30);
    *((void *)__dst + 66) = *((void *)__src + 66);
    *((_OWORD *)__dst + 31) = v59;
    *((_OWORD *)__dst + 32) = v58;
    *((_OWORD *)__dst + 30) = v60;
    long long v61 = *(_OWORD *)(__src + 536);
    *((void *)__dst + 69) = *((void *)__src + 69);
    *(_OWORD *)(__dst + 536) = v61;
    *((void *)__dst + 70) = *((void *)__src + 70);
    *((void *)__dst + 71) = *((void *)__src + 71);
    *((_OWORD *)__dst + 36) = *((_OWORD *)__src + 36);
    *((void *)__dst + 74) = *((void *)__src + 74);
    *((void *)__dst + 75) = *((void *)__src + 75);
    *((_OWORD *)__dst + 38) = *((_OWORD *)__src + 38);
    *((_OWORD *)__dst + 39) = *((_OWORD *)__src + 39);
    long long v62 = *((_OWORD *)__src + 43);
    long long v64 = *((_OWORD *)__src + 40);
    long long v63 = *((_OWORD *)__src + 41);
    *((_OWORD *)__dst + 42) = *((_OWORD *)__src + 42);
    *((_OWORD *)__dst + 43) = v62;
    *((_OWORD *)__dst + 40) = v64;
    *((_OWORD *)__dst + 41) = v63;
    long long v66 = *((_OWORD *)__src + 45);
    long long v65 = *((_OWORD *)__src + 46);
    long long v67 = *((_OWORD *)__src + 48);
    *((_OWORD *)__dst + 47) = *((_OWORD *)__src + 47);
    *((_OWORD *)__dst + 48) = v67;
    *((_OWORD *)__dst + 45) = v66;
    *((_OWORD *)__dst + 46) = v65;
    *((_OWORD *)__dst + 44) = *((_OWORD *)__src + 44);
    long long v69 = *((_OWORD *)__src + 52);
    long long v68 = *((_OWORD *)__src + 53);
    long long v70 = *((_OWORD *)__src + 51);
    *((void *)__dst + 108) = *((void *)__src + 108);
    *((_OWORD *)__dst + 52) = v69;
    *((_OWORD *)__dst + 53) = v68;
    *((_OWORD *)__dst + 51) = v70;
    long long v71 = *((_OWORD *)__src + 50);
    *((_OWORD *)__dst + 49) = *((_OWORD *)__src + 49);
    *((_OWORD *)__dst + 50) = v71;
    *(_OWORD *)(__dst + 872) = *(_OWORD *)(__src + 872);
    long long v73 = *(_OWORD *)(__src + 904);
    long long v72 = *(_OWORD *)(__src + 920);
    *(_OWORD *)(__dst + 888) = *(_OWORD *)(__src + 888);
    *(_OWORD *)(__dst + 904) = v73;
    *(_OWORD *)(__dst + 920) = v72;
    long long v74 = *(_OWORD *)(__src + 984);
    long long v76 = *(_OWORD *)(__src + 936);
    long long v75 = *(_OWORD *)(__src + 952);
    *(_OWORD *)(__dst + 968) = *(_OWORD *)(__src + 968);
    *(_OWORD *)(__dst + 984) = v74;
    *(_OWORD *)(__dst + 936) = v76;
    *(_OWORD *)(__dst + 952) = v75;
    long long v77 = *(_OWORD *)(__src + 1048);
    long long v79 = *(_OWORD *)(__src + 1000);
    long long v78 = *(_OWORD *)(__src + 1016);
    *(_OWORD *)(__dst + 1032) = *(_OWORD *)(__src + 1032);
    *(_OWORD *)(__dst + 1048) = v77;
    *(_OWORD *)(__dst + 1000) = v79;
    *(_OWORD *)(__dst + 1016) = v78;
    uint64_t v80 = (void *)*((void *)__src + 133);
    *((void *)__dst + 133) = v80;
    long long v81 = *((_OWORD *)__src + 68);
    long long v82 = *((_OWORD *)__src + 69);
    long long v83 = *((_OWORD *)__src + 70);
    *((_WORD *)__dst + 568) = *((_WORD *)__src + 568);
    *((_OWORD *)__dst + 70) = v83;
    *((_OWORD *)__dst + 69) = v82;
    *((_OWORD *)__dst + 68) = v81;
    *((_OWORD *)__dst + 67) = *((_OWORD *)__src + 67);
    __dst[1138] = __src[1138];
    float64x2_t v84 = (void *)*((void *)__src + 143);
    *((void *)__dst + 143) = v84;
    long long v85 = *((_OWORD *)__src + 73);
    long long v86 = *((_OWORD *)__src + 74);
    long long v87 = *((_OWORD *)__src + 75);
    *((_WORD *)__dst + 608) = *((_WORD *)__src + 608);
    *((_OWORD *)__dst + 75) = v87;
    *((_OWORD *)__dst + 74) = v86;
    *((_OWORD *)__dst + 73) = v85;
    *((_OWORD *)__dst + 72) = *((_OWORD *)__src + 72);
    __dst[1218] = __src[1218];
    uint64_t v88 = (void *)*((void *)__src + 153);
    *((void *)__dst + 153) = v88;
    long long v89 = *((_OWORD *)__src + 78);
    long long v90 = *((_OWORD *)__src + 79);
    long long v91 = *((_OWORD *)__src + 80);
    __dst[1296] = __src[1296];
    *((_OWORD *)__dst + 80) = v91;
    *((_OWORD *)__dst + 79) = v90;
    *((_OWORD *)__dst + 78) = v89;
    *((_OWORD *)__dst + 77) = *((_OWORD *)__src + 77);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v92 = v80;
    id v93 = v84;
    id v94 = v88;
    goto LABEL_8;
  }
  memcpy(__dst, __src, 0x511uLL);
LABEL_8:
  if (__dst != __src)
  {
    uint64_t v95 = *(int *)(a3 + 20);
    char v96 = &__dst[v95];
    float64x2_t v97 = &__src[v95];
    sub_25E75219C((uint64_t)&__dst[v95], type metadata accessor for RootComponent.State);
    uint64_t v98 = type metadata accessor for RootComponent.State(0);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *(void *)char v96 = *(void *)v97;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(v96, v97, *(void *)(*(void *)(v98 - 8) + 64));
    }
    else
    {
      uint64_t v100 = sub_25E75BE40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v100 - 8) + 16))(v96, v97, v100);
      uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8);
      *(_OWORD *)&v96[*(int *)(v101 + 48)] = *(_OWORD *)&v97[*(int *)(v101 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return __dst;
}

uint64_t sub_25E751388(uint64_t a1)
{
  return a1;
}

char *sub_25E7513DC(char *a1, char *a2, uint64_t a3)
{
  memcpy(a1, a2, 0x511uLL);
  uint64_t v6 = *(int *)(a3 + 20);
  long long v7 = &a1[v6];
  long long v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for RootComponent.State(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_25E75BE40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8);
    *(_OWORD *)&v7[*(int *)(v11 + 48)] = *(_OWORD *)&v8[*(int *)(v11 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_25E7514C8(char *__dst, char *__src, uint64_t a3)
{
  if (!*((void *)__dst + 70))
  {
LABEL_6:
    memcpy(__dst, __src, 0x511uLL);
    if (__dst == __src) {
      return __dst;
    }
    goto LABEL_7;
  }
  if (!*((void *)__src + 70))
  {
    sub_25E751388((uint64_t)__dst);
    goto LABEL_6;
  }
  long long v6 = *((_OWORD *)__src + 1);
  *(_OWORD *)__dst = *(_OWORD *)__src;
  *((_OWORD *)__dst + 1) = v6;
  long long v7 = *((_OWORD *)__src + 3);
  *((_OWORD *)__dst + 2) = *((_OWORD *)__src + 2);
  *((_OWORD *)__dst + 3) = v7;
  *((_OWORD *)__dst + 4) = *((_OWORD *)__src + 4);
  *((void *)__dst + 10) = *((void *)__src + 10);
  *(_OWORD *)(__dst + 104) = *(_OWORD *)(__src + 104);
  *(_OWORD *)(__dst + 120) = *(_OWORD *)(__src + 120);
  *(_OWORD *)(__dst + 136) = *(_OWORD *)(__src + 136);
  *((_WORD *)__dst + 76) = *((_WORD *)__src + 76);
  *(_OWORD *)(__dst + 88) = *(_OWORD *)(__src + 88);
  __dst[154] = __src[154];
  *((void *)__dst + 20) = *((void *)__src + 20);
  *(_OWORD *)(__dst + 184) = *(_OWORD *)(__src + 184);
  *(_OWORD *)(__dst + 200) = *(_OWORD *)(__src + 200);
  *(_OWORD *)(__dst + 216) = *(_OWORD *)(__src + 216);
  *((_WORD *)__dst + 116) = *((_WORD *)__src + 116);
  *(_OWORD *)(__dst + 168) = *(_OWORD *)(__src + 168);
  __dst[234] = __src[234];
  long long v8 = *((_OWORD *)__src + 16);
  *((_OWORD *)__dst + 15) = *((_OWORD *)__src + 15);
  *((_OWORD *)__dst + 16) = v8;
  *((_WORD *)__dst + 160) = *((_WORD *)__src + 160);
  long long v9 = *((_OWORD *)__src + 19);
  long long v10 = *((_OWORD *)__src + 17);
  *((_OWORD *)__dst + 18) = *((_OWORD *)__src + 18);
  *((_OWORD *)__dst + 19) = v9;
  *((_OWORD *)__dst + 17) = v10;
  __dst[322] = __src[322];
  *((void *)__dst + 41) = *((void *)__src + 41);
  long long v11 = *((_OWORD *)__src + 21);
  long long v12 = *((_OWORD *)__src + 22);
  long long v13 = *((_OWORD *)__src + 23);
  long long v14 = *((_OWORD *)__src + 24);
  *((_WORD *)__dst + 200) = *((_WORD *)__src + 200);
  *((_OWORD *)__dst + 23) = v13;
  *((_OWORD *)__dst + 24) = v14;
  *((_OWORD *)__dst + 21) = v11;
  *((_OWORD *)__dst + 22) = v12;
  __dst[402] = __src[402];
  *((void *)__dst + 51) = *((void *)__src + 51);
  long long v15 = *((_OWORD *)__src + 26);
  long long v16 = *((_OWORD *)__src + 27);
  long long v17 = *((_OWORD *)__src + 28);
  long long v18 = *((_OWORD *)__src + 29);
  *((_WORD *)__dst + 240) = *((_WORD *)__src + 240);
  *((_OWORD *)__dst + 28) = v17;
  *((_OWORD *)__dst + 29) = v18;
  *((_OWORD *)__dst + 26) = v15;
  *((_OWORD *)__dst + 27) = v16;
  __dst[482] = __src[482];
  *((void *)__dst + 61) = *((void *)__src + 61);
  long long v19 = *((_OWORD *)__src + 32);
  *((_OWORD *)__dst + 31) = *((_OWORD *)__src + 31);
  *((_OWORD *)__dst + 32) = v19;
  long long v20 = *((_OWORD *)__src + 34);
  *((_OWORD *)__dst + 33) = *((_OWORD *)__src + 33);
  *((_OWORD *)__dst + 34) = v20;
  *((void *)__dst + 70) = *((void *)__src + 70);
  swift_bridgeObjectRelease();
  *((void *)__dst + 71) = *((void *)__src + 71);
  swift_bridgeObjectRelease();
  *((_OWORD *)__dst + 36) = *((_OWORD *)__src + 36);
  *((void *)__dst + 74) = *((void *)__src + 74);
  swift_bridgeObjectRelease();
  *((void *)__dst + 75) = *((void *)__src + 75);
  swift_bridgeObjectRelease();
  long long v21 = *((_OWORD *)__src + 41);
  *((_OWORD *)__dst + 40) = *((_OWORD *)__src + 40);
  *((_OWORD *)__dst + 41) = v21;
  *((_OWORD *)__dst + 42) = *((_OWORD *)__src + 42);
  *((_WORD *)__dst + 344) = *((_WORD *)__src + 344);
  long long v22 = *((_OWORD *)__src + 39);
  *((_OWORD *)__dst + 38) = *((_OWORD *)__src + 38);
  *((_OWORD *)__dst + 39) = v22;
  __dst[690] = __src[690];
  *((void *)__dst + 87) = *((void *)__src + 87);
  long long v23 = *((_OWORD *)__src + 44);
  long long v24 = *((_OWORD *)__src + 45);
  long long v25 = *((_OWORD *)__src + 46);
  long long v26 = *((_OWORD *)__src + 47);
  *((_WORD *)__dst + 384) = *((_WORD *)__src + 384);
  *((_OWORD *)__dst + 46) = v25;
  *((_OWORD *)__dst + 47) = v26;
  *((_OWORD *)__dst + 44) = v23;
  *((_OWORD *)__dst + 45) = v24;
  __dst[770] = __src[770];
  *((void *)__dst + 97) = *((void *)__src + 97);
  long long v27 = *((_OWORD *)__src + 52);
  *((_OWORD *)__dst + 51) = *((_OWORD *)__src + 51);
  *((_OWORD *)__dst + 52) = v27;
  *((_WORD *)__dst + 424) = *((_WORD *)__src + 424);
  long long v28 = *((_OWORD *)__src + 50);
  *((_OWORD *)__dst + 49) = *((_OWORD *)__src + 49);
  *((_OWORD *)__dst + 50) = v28;
  __dst[850] = __src[850];
  *((void *)__dst + 107) = *((void *)__src + 107);
  long long v29 = *((_OWORD *)__src + 55);
  *((_OWORD *)__dst + 54) = *((_OWORD *)__src + 54);
  *((_OWORD *)__dst + 55) = v29;
  *((_WORD *)__dst + 480) = *((_WORD *)__src + 480);
  long long v30 = *((_OWORD *)__src + 59);
  *((_OWORD *)__dst + 58) = *((_OWORD *)__src + 58);
  *((_OWORD *)__dst + 59) = v30;
  long long v31 = *((_OWORD *)__src + 57);
  *((_OWORD *)__dst + 56) = *((_OWORD *)__src + 56);
  *((_OWORD *)__dst + 57) = v31;
  __dst[962] = __src[962];
  *((void *)__dst + 121) = *((void *)__src + 121);
  long long v32 = *((_OWORD *)__src + 61);
  long long v33 = *((_OWORD *)__src + 62);
  long long v34 = *((_OWORD *)__src + 63);
  long long v35 = *((_OWORD *)__src + 64);
  *((_WORD *)__dst + 520) = *((_WORD *)__src + 520);
  *((_OWORD *)__dst + 63) = v34;
  *((_OWORD *)__dst + 64) = v35;
  *((_OWORD *)__dst + 61) = v32;
  *((_OWORD *)__dst + 62) = v33;
  __dst[1042] = __src[1042];
  *((void *)__dst + 131) = *((void *)__src + 131);
  *((void *)__dst + 132) = *((void *)__src + 132);
  long long v36 = (void *)*((void *)__dst + 133);
  *((void *)__dst + 133) = *((void *)__src + 133);

  *((_OWORD *)__dst + 68) = *((_OWORD *)__src + 68);
  *((_OWORD *)__dst + 69) = *((_OWORD *)__src + 69);
  *((_OWORD *)__dst + 70) = *((_OWORD *)__src + 70);
  *((_WORD *)__dst + 568) = *((_WORD *)__src + 568);
  *((_OWORD *)__dst + 67) = *((_OWORD *)__src + 67);
  __dst[1138] = __src[1138];
  long long v37 = (void *)*((void *)__dst + 143);
  *((void *)__dst + 143) = *((void *)__src + 143);

  *((_OWORD *)__dst + 73) = *((_OWORD *)__src + 73);
  *((_OWORD *)__dst + 74) = *((_OWORD *)__src + 74);
  *((_OWORD *)__dst + 75) = *((_OWORD *)__src + 75);
  *((_WORD *)__dst + 608) = *((_WORD *)__src + 608);
  *((_OWORD *)__dst + 72) = *((_OWORD *)__src + 72);
  __dst[1218] = __src[1218];
  id v38 = (void *)*((void *)__dst + 153);
  *((void *)__dst + 153) = *((void *)__src + 153);

  *((_OWORD *)__dst + 77) = *((_OWORD *)__src + 77);
  *((_OWORD *)__dst + 78) = *((_OWORD *)__src + 78);
  *((_OWORD *)__dst + 79) = *((_OWORD *)__src + 79);
  *((void *)__dst + 160) = *((void *)__src + 160);
  *((_DWORD *)__dst + 322) = *((_DWORD *)__src + 322);
  *((_DWORD *)__dst + 323) = *((_DWORD *)__src + 323);
  __dst[1296] = __src[1296];
  if (__dst == __src) {
    return __dst;
  }
LABEL_7:
  uint64_t v39 = *(int *)(a3 + 20);
  long long v40 = &__dst[v39];
  long long v41 = &__src[v39];
  sub_25E75219C((uint64_t)&__dst[v39], type metadata accessor for RootComponent.State);
  uint64_t v42 = type metadata accessor for RootComponent.State(0);
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
  }
  else
  {
    uint64_t v43 = sub_25E75BE40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v40, v41, v43);
    uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8);
    *(_OWORD *)&v40[*(int *)(v44 + 48)] = *(_OWORD *)&v41[*(int *)(v44 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return __dst;
}

uint64_t sub_25E751910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E751924);
}

uint64_t sub_25E751924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 560);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for RootComponent.State(0);
    long long v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_25E7519E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E7519F4);
}

uint64_t sub_25E7519F4(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 560) = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for RootComponent.State(0);
    long long v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for RootComponent(uint64_t a1)
{
  return sub_25E7355D0(a1, (uint64_t *)&unk_26A704AB0);
}

uint64_t sub_25E751ABC()
{
  uint64_t result = type metadata accessor for RootComponent.State(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_25E751B54(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = sub_25E75BE40();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8);
      *(_OWORD *)((char *)a1 + *(int *)(v9 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v9 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_25E751C8C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    return swift_release();
  }
  else if (!result)
  {
    uint64_t v3 = sub_25E75BE40();
    unint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_25E751D2C(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    *a1 = *a2;
    swift_retain();
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = sub_25E75BE40();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8);
    *(_OWORD *)((char *)a1 + *(int *)(v8 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 48));
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_25E751E20(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E75219C((uint64_t)a1, type metadata accessor for RootComponent.State);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      swift_retain();
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v7 = sub_25E75BE40();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8);
      *(_OWORD *)((char *)a1 + *(int *)(v8 + 48)) = *(_OWORD *)((char *)a2 + *(int *)(v8 + 48));
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

char *sub_25E751F38(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_25E75BE40();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8);
    *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_25E752004(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_25E75219C((uint64_t)a1, type metadata accessor for RootComponent.State);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_25E75BE40();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AA8);
      *(_OWORD *)&a1[*(int *)(v7 + 48)] = *(_OWORD *)&a2[*(int *)(v7 + 48)];
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_25E7520F4()
{
  uint64_t result = sub_25E75BE40();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[4] = v2;
    v2[5] = MEMORY[0x263F8CF88] + 64;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_25E75219C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25E7521FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

double sub_25E752264(_OWORD *a1)
{
  double result = 0.0;
  a1[25] = 0u;
  a1[26] = 0u;
  a1[23] = 0u;
  a1[24] = 0u;
  a1[21] = 0u;
  a1[22] = 0u;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

_OWORD *sub_25E7522A4(uint64_t a1)
{
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 64) = 0x20000;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(void *)(a1 + 424) = 0;
  *(_OWORD *)(a1 + 72) = 0u;
  double result = (_OWORD *)(a1 + 72);
  result[12] = 0u;
  result[13] = 0u;
  result[14] = 0u;
  result[15] = 0u;
  result[16] = 0u;
  result[17] = 0u;
  result[18] = 0u;
  result[19] = 0u;
  result[20] = 0u;
  result[21] = 0u;
  return result;
}

double sub_25E752304(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 64) = 0;
  *(void *)(a1 + 72) = 1;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  return result;
}

uint64_t sub_25E752334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  uint64_t result = a44;
  if (a44)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_25E752380(uint64_t a1)
{
  uint64_t v17 = *(void *)(a1 + 1160);
  uint64_t v18 = *(void *)(a1 + 1152);
  uint64_t v2 = *(void *)(a1 + 1168);
  uint64_t v3 = *(void *)(a1 + 1176);
  uint64_t v4 = *(void *)(a1 + 1184);
  uint64_t v5 = *(void *)(a1 + 1192);
  uint64_t v6 = *(void *)(a1 + 1200);
  uint64_t v7 = *(void *)(a1 + 1208);
  long long v16 = *(_OWORD *)(a1 + 1216);
  long long v14 = *(_OWORD *)(a1 + 320);
  long long v15 = *(_OWORD *)(a1 + 336);
  long long v12 = *(_OWORD *)(a1 + 288);
  long long v13 = *(_OWORD *)(a1 + 304);
  long long v10 = *(_OWORD *)(a1 + 256);
  long long v11 = *(_OWORD *)(a1 + 272);
  long long v9 = *(_OWORD *)(a1 + 224);
  sub_25E752334(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v9,
    *((uint64_t *)&v9 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1));
  sub_25E749DE4(v18, v17, v2, v3, v4, v5, v6, v7, v16, *((id *)&v16 + 1));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_25E75254C(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  long long v14 = *(_OWORD *)(a1 + 384);
  long long v15 = *(_OWORD *)(a1 + 400);
  long long v12 = *(_OWORD *)(a1 + 352);
  long long v13 = *(_OWORD *)(a1 + 368);
  long long v10 = *(_OWORD *)(a1 + 320);
  long long v11 = *(_OWORD *)(a1 + 336);
  long long v8 = *(_OWORD *)(a1 + 288);
  long long v9 = *(_OWORD *)(a1 + 304);
  long long v6 = *(_OWORD *)(a1 + 256);
  long long v7 = *(_OWORD *)(a1 + 272);
  long long v4 = *(_OWORD *)(a1 + 224);
  long long v5 = *(_OWORD *)(a1 + 240);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v4,
    *((void *)&v4 + 1),
    v5,
    *((void *)&v5 + 1),
    v6,
    *((void *)&v6 + 1),
    v7,
    *((void *)&v7 + 1),
    v8,
    *((void *)&v8 + 1),
    v9,
    *((void *)&v9 + 1),
    v10,
    *((void *)&v10 + 1),
    v11,
    *((void *)&v11 + 1),
    v12,
    *((void *)&v12 + 1),
    v13,
    *((void *)&v13 + 1),
    v14,
    *((void *)&v14 + 1),
    v15,
    *((void *)&v15 + 1),
    *(void *)(a1 + 416),
    *(void *)(a1 + 424));
  return a1;
}

uint64_t sub_25E7525F8(uint64_t a1)
{
  long long v17 = *(_OWORD *)(a1 + 464);
  long long v18 = *(_OWORD *)(a1 + 480);
  long long v15 = *(_OWORD *)(a1 + 432);
  long long v16 = *(_OWORD *)(a1 + 448);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v14 = *(_OWORD *)(a1 + 416);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v3 = *(_OWORD *)(a1 + 240);
  long long v4 = *(_OWORD *)(a1 + 256);
  sub_25E74B040(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    *(void *)(a1 + 224),
    *(void *)(a1 + 232),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    v5,
    *((uint64_t *)&v5 + 1),
    v6,
    *((uint64_t *)&v6 + 1),
    v7,
    *((uint64_t *)&v7 + 1),
    v8,
    *((uint64_t *)&v8 + 1),
    v9,
    *((uint64_t *)&v9 + 1),
    v10,
    *((uint64_t *)&v10 + 1),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    *(void *)(a1 + 496));
  return a1;
}

uint64_t sub_25E752990(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E7529C8(uint64_t a1)
{
  return a1;
}

uint64_t sub_25E752A00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RootComponent.State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E752A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A704AD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_25E752ACC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_25E752B28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E752B90(uint64_t a1, uint64_t a2)
{
  if ((sub_25E75BE90() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = type metadata accessor for ComponentIntroOutroValue();
  if ((sub_25E7377C8(a1 + *(int *)(v4 + 28), a2 + *(int *)(v4 + 28)) & 1) == 0) {
    return 0;
  }
  uint64_t v5 = *(int *)(v4 + 32);
  return sub_25E7377C8(a1 + v5, a2 + v5);
}

uint64_t sub_25E752C3C(uint64_t a1, uint64_t a2)
{
  return sub_25E752B90(a1, a2);
}

uint64_t type metadata accessor for ComponentIntroOutroValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_25E752C60()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = type metadata accessor for FluidBehaviorAnimatedValue();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t *sub_25E752D40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~(v8 | 7);
  uint64_t v10 = v8 + 67;
  uint64_t v11 = ((v8 + 67) & ~v8) + v7;
  if (v8 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v11 + (v8 | 7) + (((v8 | 7) + v7) & ~(v8 | 7))) & ~(v8 | 7uLL)) + v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    uint64_t v15 = ~v8;
    long long v16 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v16(a1, a2, v5);
    uint64_t v17 = ((unint64_t)v4 + v7 + 7) & v9;
    uint64_t v18 = ((unint64_t)a2 + v7 + 7) & v9;
    *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
    long long v20 = *(_OWORD *)(v18 + 32);
    long long v19 = *(_OWORD *)(v18 + 48);
    long long v21 = *(_OWORD *)(v18 + 16);
    *(_WORD *)(v17 + 64) = *(_WORD *)(v18 + 64);
    *(_OWORD *)(v17 + 32) = v20;
    *(_OWORD *)(v17 + 48) = v19;
    *(_OWORD *)(v17 + 16) = v21;
    *(unsigned char *)(v17 + 66) = *(unsigned char *)(v18 + 66);
    v16((uint64_t *)((v10 + v17) & v15), (uint64_t *)((v10 + v18) & v15), v5);
    uint64_t v22 = ((v17 | 7) + v11) & v9;
    uint64_t v23 = ((v18 | 7) + v11) & v9;
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    long long v25 = *(_OWORD *)(v23 + 0x20);
    long long v24 = *(_OWORD *)(v23 + 0x30);
    long long v26 = *(_OWORD *)(v23 + 0x10);
    *(_WORD *)(v22 + 64) = *(_WORD *)(v23 + 0x40);
    *(_OWORD *)(v22 + 32) = v25;
    *(_OWORD *)(v22 + 48) = v24;
    *(_OWORD *)(v22 + 16) = v26;
    *(unsigned char *)(v22 + 66) = *(unsigned char *)(v23 + 0x42);
    v16((uint64_t *)((v10 + v22) & v15), (uint64_t *)((v10 + v23) & v15), v5);
  }
  return v4;
}

uint64_t sub_25E752F1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v9(a1, v3);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 | 7) + *(void *)(v4 + 64);
  uint64_t v7 = (v6 + a1) & ~(v5 | 7);
  v9((v5 + 67 + v7) & ~v5, v3);
  return ((uint64_t (*)(uint64_t, uint64_t))v9)((v5 + 67 + ((v6 + ((v5 + 67) & ~v5) + v7) & ~(v5 | 7))) & ~v5, v3);
}

uint64_t sub_25E753004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v9 | 7) + v8;
  uint64_t v11 = (v10 + a1) & ~(v9 | 7);
  uint64_t v12 = (v10 + a2) & ~(v9 | 7);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  long long v14 = *(_OWORD *)(v12 + 32);
  long long v13 = *(_OWORD *)(v12 + 48);
  long long v15 = *(_OWORD *)(v12 + 16);
  *(_WORD *)(v11 + 64) = *(_WORD *)(v12 + 64);
  *(_OWORD *)(v11 + 32) = v14;
  *(_OWORD *)(v11 + 48) = v13;
  *(_OWORD *)(v11 + 16) = v15;
  *(unsigned char *)(v11 + 66) = *(unsigned char *)(v12 + 66);
  v7((v9 + 67 + v11) & ~v9, (v9 + 67 + v12) & ~v9, v5);
  uint64_t v16 = ((v9 + 67) & ~v9) + v8 + (v9 | 7);
  uint64_t v17 = (v16 + v11) & ~(v9 | 7);
  uint64_t v18 = (v16 + v12) & ~(v9 | 7);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  long long v20 = *(_OWORD *)(v18 + 32);
  long long v19 = *(_OWORD *)(v18 + 48);
  long long v21 = *(_OWORD *)(v18 + 16);
  *(_WORD *)(v17 + 64) = *(_WORD *)(v18 + 64);
  *(_OWORD *)(v17 + 32) = v20;
  *(_OWORD *)(v17 + 48) = v19;
  *(_OWORD *)(v17 + 16) = v21;
  *(unsigned char *)(v17 + 66) = *(unsigned char *)(v18 + 66);
  v7((v9 + 67 + v17) & ~v9, (v9 + 67 + v18) & ~v9, v5);
  return a1;
}

uint64_t sub_25E75314C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 24);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v9 | 7) + v8;
  uint64_t v11 = (v10 + a1) & ~(v9 | 7);
  uint64_t v12 = (v10 + a2) & ~(v9 | 7);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  long long v14 = *(_OWORD *)(v12 + 32);
  long long v13 = *(_OWORD *)(v12 + 48);
  long long v15 = *(_OWORD *)(v12 + 16);
  *(_WORD *)(v11 + 64) = *(_WORD *)(v12 + 64);
  *(_OWORD *)(v11 + 32) = v14;
  *(_OWORD *)(v11 + 48) = v13;
  *(_OWORD *)(v11 + 16) = v15;
  *(unsigned char *)(v11 + 66) = *(unsigned char *)(v12 + 66);
  v7((v9 + 67 + v11) & ~v9, (v9 + 67 + v12) & ~v9, v5);
  uint64_t v16 = ((v9 + 67) & ~v9) + v8 + (v9 | 7);
  uint64_t v17 = (v16 + v11) & ~(v9 | 7);
  uint64_t v18 = (v16 + v12) & ~(v9 | 7);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  long long v20 = *(_OWORD *)(v18 + 32);
  long long v19 = *(_OWORD *)(v18 + 48);
  long long v21 = *(_OWORD *)(v18 + 16);
  *(_WORD *)(v17 + 64) = *(_WORD *)(v18 + 64);
  *(_OWORD *)(v17 + 32) = v20;
  *(_OWORD *)(v17 + 48) = v19;
  *(_OWORD *)(v17 + 16) = v21;
  *(unsigned char *)(v17 + 66) = *(unsigned char *)(v18 + 66);
  v7((v9 + 67 + v17) & ~v9, (v9 + 67 + v18) & ~v9, v5);
  return a1;
}

uint64_t sub_25E753294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v9 | 7) + v8;
  uint64_t v11 = (v10 + a1) & ~(v9 | 7);
  uint64_t v12 = (v10 + a2) & ~(v9 | 7);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  long long v14 = *(_OWORD *)(v12 + 32);
  long long v13 = *(_OWORD *)(v12 + 48);
  long long v15 = *(_OWORD *)(v12 + 16);
  *(_WORD *)(v11 + 64) = *(_WORD *)(v12 + 64);
  *(_OWORD *)(v11 + 32) = v14;
  *(_OWORD *)(v11 + 48) = v13;
  *(_OWORD *)(v11 + 16) = v15;
  *(unsigned char *)(v11 + 66) = *(unsigned char *)(v12 + 66);
  v7((v9 + 67 + v11) & ~v9, (v9 + 67 + v12) & ~v9, v5);
  uint64_t v16 = ((v9 + 67) & ~v9) + v8 + (v9 | 7);
  uint64_t v17 = (v16 + v11) & ~(v9 | 7);
  uint64_t v18 = (v16 + v12) & ~(v9 | 7);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  long long v20 = *(_OWORD *)(v18 + 32);
  long long v19 = *(_OWORD *)(v18 + 48);
  long long v21 = *(_OWORD *)(v18 + 16);
  *(_WORD *)(v17 + 64) = *(_WORD *)(v18 + 64);
  *(_OWORD *)(v17 + 32) = v20;
  *(_OWORD *)(v17 + 48) = v19;
  *(_OWORD *)(v17 + 16) = v21;
  *(unsigned char *)(v17 + 66) = *(unsigned char *)(v18 + 66);
  v7((v9 + 67 + v17) & ~v9, (v9 + 67 + v18) & ~v9, v5);
  return a1;
}

uint64_t sub_25E7533DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40);
  v7(a1, a2, v5);
  uint64_t v8 = *(void *)(v6 + 64);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v9 | 7) + v8;
  uint64_t v11 = (v10 + a1) & ~(v9 | 7);
  uint64_t v12 = (v10 + a2) & ~(v9 | 7);
  *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
  long long v14 = *(_OWORD *)(v12 + 32);
  long long v13 = *(_OWORD *)(v12 + 48);
  long long v15 = *(_OWORD *)(v12 + 16);
  *(_WORD *)(v11 + 64) = *(_WORD *)(v12 + 64);
  *(_OWORD *)(v11 + 32) = v14;
  *(_OWORD *)(v11 + 48) = v13;
  *(_OWORD *)(v11 + 16) = v15;
  *(unsigned char *)(v11 + 66) = *(unsigned char *)(v12 + 66);
  v7((v9 + 67 + v11) & ~v9, (v9 + 67 + v12) & ~v9, v5);
  uint64_t v16 = ((v9 + 67) & ~v9) + v8 + (v9 | 7);
  uint64_t v17 = (v16 + v11) & ~(v9 | 7);
  uint64_t v18 = (v16 + v12) & ~(v9 | 7);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  long long v20 = *(_OWORD *)(v18 + 32);
  long long v19 = *(_OWORD *)(v18 + 48);
  long long v21 = *(_OWORD *)(v18 + 16);
  *(_WORD *)(v17 + 64) = *(_WORD *)(v18 + 64);
  *(_OWORD *)(v17 + 32) = v20;
  *(_OWORD *)(v17 + 48) = v19;
  *(_OWORD *)(v17 + 16) = v21;
  *(unsigned char *)(v17 + 66) = *(unsigned char *)(v18 + 66);
  v7((v9 + 67 + v17) & ~v9, (v9 + 67 + v18) & ~v9, v5);
  return a1;
}

uint64_t sub_25E753524(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v10 = (v8 | 7) + v6;
  int v11 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_22;
  }
  uint64_t v12 = ((((v8 + 67) & ~v8) + v6 + v9 + (v10 & ~v9)) & ~v9) + ((v8 + 67) & ~v8) + v6;
  char v13 = 8 * v12;
  if (v12 > 3) {
    goto LABEL_7;
  }
  unsigned int v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
  if (HIWORD(v15))
  {
    int v14 = *(_DWORD *)((char *)a1 + v12);
    if (v14) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v15 <= 0xFF)
    {
      if (v15 < 2) {
        goto LABEL_22;
      }
LABEL_7:
      int v14 = *((unsigned __int8 *)a1 + v12);
      if (!*((unsigned char *)a1 + v12)) {
        goto LABEL_22;
      }
LABEL_14:
      int v16 = (v14 - 1) << v13;
      if (v12 > 3) {
        int v16 = 0;
      }
      if (v12)
      {
        if (v12 > 3) {
          LODWORD(v12) = 4;
        }
        switch((int)v12)
        {
          case 2:
            LODWORD(v12) = *a1;
            break;
          case 3:
            LODWORD(v12) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v12) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v12) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v7 + (v12 | v16) + 1;
    }
    int v14 = *(unsigned __int16 *)((char *)a1 + v12);
    if (*(unsigned __int16 *)((char *)a1 + v12)) {
      goto LABEL_14;
    }
  }
LABEL_22:
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v18 = *(unsigned __int8 *)((((unint64_t)a1 + v10) & ~v9) + 0x42);
  if (v18 < 2) {
    return 0;
  }
  return ((v18 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_25E7536E8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  uint64_t v10 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v11 = (v10 | 7) + v9;
  size_t v12 = ((((v10 + 67) & ~v10) + v9 + (v10 | 7) + (v11 & ~(v10 | 7))) & ~(v10 | 7)) + ((v10 + 67) & ~v10) + v9;
  BOOL v13 = a3 >= v8;
  unsigned int v14 = a3 - v8;
  if (v14 != 0 && v13)
  {
    if (v12 <= 3)
    {
      unsigned int v18 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
      if (HIWORD(v18))
      {
        int v15 = 4;
      }
      else if (v18 >= 0x100)
      {
        int v15 = 2;
      }
      else
      {
        int v15 = v18 > 1;
      }
    }
    else
    {
      int v15 = 1;
    }
  }
  else
  {
    int v15 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v16 = ~v8 + a2;
    if (v12 < 4)
    {
      int v17 = (v16 >> (8 * v12)) + 1;
      if (v12)
      {
        int v19 = v16 & ~(-1 << (8 * v12));
        bzero(a1, v12);
        if (v12 == 3)
        {
          *(_WORD *)a1 = v19;
          a1[2] = BYTE2(v19);
        }
        else if (v12 == 2)
        {
          *(_WORD *)a1 = v19;
        }
        else
        {
          *a1 = v19;
        }
      }
    }
    else
    {
      bzero(a1, v12);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v12] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v12] = v17;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v12] = v17;
        return;
      default:
        return;
    }
  }
  switch(v15)
  {
    case 1:
      a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v12] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x25E75395CLL);
    case 4:
      *(_DWORD *)&a1[v12] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          *(unsigned char *)(((unint64_t)&a1[v11] & ~(v10 | 7)) + 0x42) = a2 + 1;
        }
        else
        {
          long long v20 = *(void (**)(void))(v6 + 56);
          v20();
        }
      }
      return;
  }
}

uint64_t sub_25E753984(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_25E754D70(a2, a3, a4);
}

uint64_t sub_25E753994()
{
  sub_25E7499CC(*(void *)(v0 + 24));
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0228](v0, 56, 7);
}

uint64_t type metadata accessor for GroupAnimation()
{
  return self;
}

unint64_t sub_25E7539F8(uint64_t a1, uint64_t a2)
{
  return sub_25E753AD4(a1, a2);
}

unint64_t sub_25E753A50(uint64_t a1)
{
  sub_25E75C1D0();
  sub_25E75BE40();
  sub_25E754EA4();
  sub_25E75BE70();
  uint64_t v2 = sub_25E75C200();
  return sub_25E7542F4(a1, v2);
}

unint64_t sub_25E753AD4(uint64_t a1, uint64_t a2)
{
  sub_25E75C1D0();
  sub_25E75C1E0();
  uint64_t v4 = sub_25E75C200();
  return sub_25E754440(a1, a2, v4);
}

unint64_t sub_25E753B80(uint64_t a1)
{
  uint64_t v2 = sub_25E75C1C0();
  return sub_25E7544BC(a1, v2);
}

unint64_t sub_25E753BC4(unint64_t result, uint64_t a2)
{
  return sub_25E753F54(result, a2);
}

unint64_t sub_25E753C1C(int64_t a1, uint64_t a2)
{
  uint64_t v33 = type metadata accessor for ExternalRequestID(0);
  uint64_t v4 = *(void *)(v33 - 8);
  unint64_t result = MEMORY[0x270FA5388](v33);
  unsigned int v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a2 + 64;
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    unint64_t result = sub_25E75C060();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v34 = (result + 1) & v11;
      uint64_t v12 = *(void *)(v4 + 72);
      uint64_t v13 = v11;
      do
      {
        uint64_t v14 = v12;
        int64_t v15 = v12 * v10;
        uint64_t v16 = v13;
        sub_25E754F58(*(void *)(a2 + 48) + v12 * v10, (uint64_t)v7, type metadata accessor for ExternalRequestID);
        sub_25E75C1D0();
        sub_25E75BE40();
        sub_25E754EA4();
        sub_25E75BE70();
        uint64_t v17 = sub_25E75C200();
        unint64_t result = sub_25E754EFC((uint64_t)v7);
        uint64_t v13 = v16;
        unint64_t v18 = v17 & v16;
        if (a1 >= (uint64_t)v34)
        {
          if (v18 < v34)
          {
            uint64_t v12 = v14;
          }
          else
          {
            uint64_t v12 = v14;
            if (a1 >= (uint64_t)v18) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v12 = v14;
          if (v18 >= v34 || a1 >= (uint64_t)v18)
          {
LABEL_12:
            if (v12 * a1 < v15
              || *(void *)(a2 + 48) + v12 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v15 + v12))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v12 * a1 != v15)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v19 = *(void *)(a2 + 56);
            uint64_t v20 = *(void *)(*(void *)(type metadata accessor for ExternalContinuation(0) - 8) + 72);
            int64_t v21 = v20 * a1;
            unint64_t result = v19 + v20 * a1;
            int64_t v22 = v20 * v10;
            unint64_t v23 = v19 + v20 * v10 + v20;
            if (v21 < v22 || result >= v23)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v10;
              uint64_t v12 = v14;
              uint64_t v13 = v16;
            }
            else
            {
              a1 = v10;
              BOOL v25 = v21 == v22;
              uint64_t v12 = v14;
              uint64_t v13 = v16;
              if (!v25)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                uint64_t v13 = v16;
                a1 = v10;
              }
            }
          }
        }
        unint64_t v10 = (v10 + 1) & v13;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    long long v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << a1) - 1;
  }
  else
  {
    long long v26 = (uint64_t *)(v8 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *long long v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25E753F54(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25E75C060();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_25E75C1D0();
        sub_25E75C1E0();
        unint64_t result = sub_25E75C200();
        unint64_t v9 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v9 < v8) {
            goto LABEL_5;
          }
        }
        else if (v9 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v9)
        {
LABEL_11:
          uint64_t v10 = *(void *)(a2 + 48);
          uint64_t v11 = (_OWORD *)(v10 + 16 * v3);
          uint64_t v12 = (_OWORD *)(v10 + 16 * v6);
          if (v3 != v6 || v11 >= v12 + 1) {
            *uint64_t v11 = *v12;
          }
          uint64_t v13 = *(void *)(a2 + 56);
          uint64_t v14 = (void *)(v13 + 8 * v3);
          int64_t v15 = (void *)(v13 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v14 >= v15 + 1))
          {
            *uint64_t v14 = *v15;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v16 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v17 = *v16;
    uint64_t v18 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v16 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v18 = *v16;
    uint64_t v17 = (-1 << result) - 1;
  }
  *uint64_t v16 = v18 & v17;
  uint64_t v19 = *(void *)(a2 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20) {
    __break(1u);
  }
  *(void *)(a2 + 16) = v21;
  ++*(_DWORD *)(a2 + 36);
  return result;
}

unint64_t sub_25E75415C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_25E75C060();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_25E75C1C0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (_OWORD *)(v15 + 16 * v3);
            uint64_t v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_25E7542F4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ExternalRequestID(0);
  MEMORY[0x270FA5388]();
  unint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v8 = a2 & ~v7;
  if ((*(void *)(v2 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = ~v7;
    uint64_t v10 = *(void *)(v4 + 72);
    do
    {
      sub_25E754F58(*(void *)(v2 + 48) + v10 * v8, (uint64_t)v6, type metadata accessor for ExternalRequestID);
      char v11 = sub_25E75BE20();
      sub_25E754EFC((uint64_t)v6);
      if (v11) {
        break;
      }
      unint64_t v8 = (v8 + 1) & v9;
    }
    while (((*(void *)(v2 + 64 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  return v8;
}

unint64_t sub_25E754440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    do
    {
      unint64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * result);
      uint64_t v10 = *v8;
      uint64_t v9 = v8[1];
      if (v10 == a1 && v9 == a2) {
        break;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_25E7544BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

id sub_25E754558()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704990);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25E75C140();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25E754700()
{
  uint64_t v1 = type metadata accessor for ExternalContinuation(0);
  uint64_t v28 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ExternalRequestID(0);
  uint64_t v27 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A7049B0);
  long long v24 = v0;
  uint64_t v7 = *v0;
  uint64_t v8 = sub_25E75C140();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *long long v24 = v9;
    return result;
  }
  id result = (void *)(v8 + 64);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 64 + 8 * v11) {
    id result = memmove(result, (const void *)(v7 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v7 + 64);
  uint64_t v25 = v7 + 64;
  int64_t v26 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v20 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v17 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v27 + 72) * v17;
    sub_25E754F58(*(void *)(v7 + 48) + v18, (uint64_t)v6, type metadata accessor for ExternalRequestID);
    unint64_t v19 = *(void *)(v28 + 72) * v17;
    sub_25E754F58(*(void *)(v7 + 56) + v19, (uint64_t)v3, type metadata accessor for ExternalContinuation);
    sub_25E754FC0((uint64_t)v6, *(void *)(v9 + 48) + v18, type metadata accessor for ExternalRequestID);
    id result = (void *)sub_25E754FC0((uint64_t)v3, *(void *)(v9 + 56) + v19, type metadata accessor for ExternalContinuation);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_23;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v26) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_25E754A18()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704970);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25E75C140();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v17);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id result = (void *)swift_retain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_25E754BC0()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704938);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_25E75C140();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    int64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *int64_t v22 = v21;
    v22[1] = v20;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_25E754D70(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (uint64_t *)(a2 + 40);
  swift_beginAccess();
  unint64_t v7 = sub_25E753B80(a3);
  if ((v8 & 1) == 0) {
    return swift_endAccess();
  }
  unint64_t v9 = v7;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v6;
  uint64_t v14 = *v6;
  *uint64_t v6 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_25E754BC0();
    uint64_t v11 = v14;
  }
  sub_25E75415C(v9, v11);
  *(void *)(a2 + 40) = v11;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(a2 + 16) = (*(unsigned char *)(a2 + 16) | a1) & 1;
  if (!*(void *)(*(void *)(a2 + 40) + 16))
  {
    int64_t v13 = *(void (**)(void))(a2 + 24);
    if (v13)
    {
      *(void *)(a2 + 24) = 0;
      *(void *)(a2 + 32) = 0;
      swift_retain();
      sub_25E7499CC((uint64_t)v13);
      v13(*(unsigned __int8 *)(a2 + 16));
      return sub_25E7499CC((uint64_t)v13);
    }
  }
  return result;
}

unint64_t sub_25E754EA4()
{
  unint64_t result = qword_26A7046D0[0];
  if (!qword_26A7046D0[0])
  {
    sub_25E75BE40();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A7046D0);
  }
  return result;
}

uint64_t sub_25E754EFC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ExternalRequestID(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_25E754F58(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E754FC0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_25E755028(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_25E755050(unsigned int a1)
{
  uint64_t v2 = self;
  if ((objc_msgSend(v2, sel_currentState) & 3) == 0) {
    return 0;
  }
  unsigned int v3 = objc_msgSend(v2, sel_currentPhase);
  if (v3 == -1) {
    return 1;
  }
  unsigned int v4 = (0x50002040301uLL >> (8 * v3)) < (0x50002040301uLL >> (8 * a1));
  if ((a1 & 0x3F) == 5) {
    unsigned int v4 = (0x1Bu >> v3) & 1;
  }
  if (v3 > 5) {
    unsigned int v4 = 0;
  }
  if (a1 <= 5) {
    return v4;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for DefaultCATransactionCommitObserverProvider()
{
  return &type metadata for DefaultCATransactionCommitObserverProvider;
}

ValueMetadata *type metadata accessor for TimerID()
{
  return &type metadata for TimerID;
}

unint64_t sub_25E755134()
{
  unint64_t result = qword_26A704B68;
  if (!qword_26A704B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704B68);
  }
  return result;
}

id ScanwaveImageConfiguration.image.getter()
{
  return *v0;
}

void ScanwaveImageConfiguration.image.setter(void *a1)
{
  *uint64_t v1 = a1;
}

uint64_t (*ScanwaveImageConfiguration.image.modify())()
{
  return nullsub_1;
}

id ScanwaveImageConfiguration.depthImage.getter()
{
  return *(id *)(v0 + 8);
}

void ScanwaveImageConfiguration.depthImage.setter(uint64_t a1)
{
  *(void *)(v1 + 8) = a1;
}

uint64_t (*ScanwaveImageConfiguration.depthImage.modify())()
{
  return nullsub_1;
}

SystemUIAnimationKit::ScanwaveImageConfiguration __swiftcall ScanwaveImageConfiguration.init(image:depthImage:)(UIImage image, UIImage depthImage)
{
  v2->super.isa = image.super.isa;
  v2[1].super.isa = depthImage.super.isa;
  result.depthImage = depthImage;
  result.image = image;
  return result;
}

void *initializeBufferWithCopyOfBuffer for ScanwaveImageConfiguration(void *a1, uint64_t a2)
{
  unsigned int v3 = *(void **)a2;
  unsigned int v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

void destroy for ScanwaveImageConfiguration(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 8);
}

uint64_t assignWithCopy for ScanwaveImageConfiguration(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  unint64_t v7 = *(void **)(a2 + 8);
  char v8 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v7;
  id v9 = v7;

  return a1;
}

uint64_t assignWithTake for ScanwaveImageConfiguration(uint64_t a1, _OWORD *a2)
{
  unsigned int v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for ScanwaveImageConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveImageConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)SystemUIAnimationKit::ScanwaveImageConfiguration result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)SystemUIAnimationKit::ScanwaveImageConfiguration result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveImageConfiguration()
{
  return &type metadata for ScanwaveImageConfiguration;
}

id sub_25E7553D8(uint64_t a1, char a2, void *a3)
{
  unsigned int v4 = v3;
  id result = objc_msgSend(v4, sel_between_and_);
  if (!result)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_25E75C050();
  swift_unknownObjectRelease();
  sub_25E7136C0(v13, v14);
  sub_25E755578();
  swift_dynamicCast();
  id v9 = v12;
  if (a2)
  {
LABEL_5:
    if (!a3) {
      return v9;
    }
    id v11 = a3;
    id result = objc_msgSend(v9, sel_condition_, v11);
    if (result)
    {
      sub_25E75C050();
      swift_unknownObjectRelease();
      sub_25E7136C0(v13, v14);
      swift_dynamicCast();

      return v12;
    }
    goto LABEL_10;
  }
  id v10 = v12;
  id result = objc_msgSend(v10, sel_precision_, a1);
  if (result)
  {
    sub_25E75C050();
    swift_unknownObjectRelease();
    sub_25E7136C0(v13, v14);
    swift_dynamicCast();
    id v9 = v12;

    goto LABEL_5;
  }
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_25E755578()
{
  unint64_t result = qword_26A704190;
  if (!qword_26A704190)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26A704190);
  }
  return result;
}

id sub_25E7555B8()
{
  uint64_t v0 = sub_25E7444D4(0, 49, 0, MEMORY[0x263F8EE78]);
  unint64_t v2 = *((void *)v0 + 2);
  unint64_t v1 = *((void *)v0 + 3);
  int64_t v3 = v1 >> 1;
  unint64_t v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    uint64_t v0 = sub_25E7444D4((char *)(v1 > 1), v2 + 1, 1, v0);
    unint64_t v1 = *((void *)v0 + 3);
    int64_t v3 = v1 >> 1;
  }
  *((void *)v0 + 2) = v4;
  id v5 = &v0[40 * v2];
  *((_OWORD *)v5 + 2) = 0u;
  *((_OWORD *)v5 + 3) = 0u;
  *((void *)v5 + 8) = 0x3FE0000000000000;
  unint64_t v6 = v2 + 2;
  if (v3 < (uint64_t)(v2 + 2)) {
    uint64_t v0 = sub_25E7444D4((char *)(v1 > 1), v2 + 2, 1, v0);
  }
  *((void *)v0 + 2) = v6;
  unint64_t v7 = &v0[40 * v4];
  *((_OWORD *)v7 + 2) = xmmword_25E75E8B0;
  *((_OWORD *)v7 + 3) = xmmword_25E75E8B0;
  *((void *)v7 + 8) = 0x3FE0000000000000;
  unint64_t v8 = *((void *)v0 + 3);
  unint64_t v9 = v2 + 3;
  if ((uint64_t)(v2 + 3) > (uint64_t)(v8 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v8 > 1), v2 + 3, 1, v0);
  }
  *((void *)v0 + 2) = v9;
  id v10 = &v0[40 * v6];
  *((_OWORD *)v10 + 2) = xmmword_25E75E850;
  *((_OWORD *)v10 + 3) = xmmword_25E75E850;
  *((void *)v10 + 8) = 0x3FE0000000000000;
  unint64_t v11 = *((void *)v0 + 3);
  unint64_t v12 = v2 + 4;
  if ((uint64_t)(v2 + 4) > (uint64_t)(v11 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v11 > 1), v2 + 4, 1, v0);
  }
  *((void *)v0 + 2) = v12;
  int64_t v13 = &v0[40 * v9];
  *((_OWORD *)v13 + 2) = xmmword_25E75E8A0;
  *((_OWORD *)v13 + 3) = xmmword_25E75E8A0;
  *((void *)v13 + 8) = 0x3FE0000000000000;
  unint64_t v14 = *((void *)v0 + 3);
  unint64_t v15 = v2 + 5;
  if ((uint64_t)(v2 + 5) > (uint64_t)(v14 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v14 > 1), v2 + 5, 1, v0);
  }
  *((void *)v0 + 2) = v15;
  uint64_t v16 = &v0[40 * v12];
  *((_OWORD *)v16 + 2) = xmmword_25E75E860;
  *((_OWORD *)v16 + 3) = xmmword_25E75E860;
  *((void *)v16 + 8) = 0x3FE0000000000000;
  unint64_t v17 = *((void *)v0 + 3);
  unint64_t v18 = v2 + 6;
  if ((uint64_t)(v2 + 6) > (uint64_t)(v17 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v17 > 1), v2 + 6, 1, v0);
  }
  *((void *)v0 + 2) = v18;
  int64_t v19 = &v0[40 * v15];
  *((_OWORD *)v19 + 2) = xmmword_25E75EA70;
  *((_OWORD *)v19 + 3) = xmmword_25E75EA70;
  *((void *)v19 + 8) = 0x3FE0000000000000;
  unint64_t v20 = *((void *)v0 + 3);
  unint64_t v21 = v2 + 7;
  if ((uint64_t)(v2 + 7) > (uint64_t)(v20 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v20 > 1), v2 + 7, 1, v0);
  }
  *((void *)v0 + 2) = v21;
  int64_t v22 = &v0[40 * v18];
  *((_OWORD *)v22 + 2) = xmmword_25E75E890;
  *((_OWORD *)v22 + 3) = xmmword_25E75E890;
  *((void *)v22 + 8) = 0x3FE0000000000000;
  unint64_t v23 = *((void *)v0 + 3);
  unint64_t v24 = v2 + 8;
  if ((uint64_t)(v2 + 8) > (uint64_t)(v23 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v23 > 1), v2 + 8, 1, v0);
  }
  *((void *)v0 + 2) = v24;
  int64_t v25 = &v0[40 * v21];
  *((_OWORD *)v25 + 2) = xmmword_25E75E830;
  *((_OWORD *)v25 + 3) = xmmword_25E75E830;
  *((void *)v25 + 8) = 0x3FE0000000000000;
  unint64_t v26 = *((void *)v0 + 3);
  unint64_t v27 = v2 + 9;
  if ((uint64_t)(v2 + 9) > (uint64_t)(v26 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v26 > 1), v2 + 9, 1, v0);
  }
  *((void *)v0 + 2) = v27;
  uint64_t v28 = (int64x2_t *)&v0[40 * v24];
  int64x2_t v29 = vdupq_n_s64(0x3FC555555FFDF467uLL);
  v28[2] = v29;
  v28[3] = v29;
  v28[4].i64[0] = 0x3FE0000000000000;
  unint64_t v30 = *((void *)v0 + 3);
  unint64_t v31 = v2 + 10;
  if ((uint64_t)(v2 + 10) > (uint64_t)(v30 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v30 > 1), v2 + 10, 1, v0);
  }
  *((void *)v0 + 2) = v31;
  uint64_t v32 = &v0[40 * v27];
  *((_OWORD *)v32 + 2) = xmmword_25E75E950;
  *((_OWORD *)v32 + 3) = xmmword_25E75E950;
  *((void *)v32 + 8) = 0x3FE0000000000000;
  unint64_t v33 = *((void *)v0 + 3);
  unint64_t v34 = v2 + 11;
  if ((uint64_t)(v2 + 11) > (uint64_t)(v33 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v33 > 1), v2 + 11, 1, v0);
  }
  *((void *)v0 + 2) = v34;
  long long v35 = &v0[40 * v31];
  *((_OWORD *)v35 + 2) = xmmword_25E75E820;
  *((_OWORD *)v35 + 3) = xmmword_25E75E820;
  *((void *)v35 + 8) = 0x3FE0000000000000;
  unint64_t v36 = *((void *)v0 + 3);
  unint64_t v37 = v2 + 12;
  if ((uint64_t)(v2 + 12) > (uint64_t)(v36 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v36 > 1), v2 + 12, 1, v0);
  }
  *((void *)v0 + 2) = v37;
  id v38 = &v0[40 * v34];
  *((_OWORD *)v38 + 2) = xmmword_25E75EA20;
  *((_OWORD *)v38 + 3) = xmmword_25E75EA20;
  *((void *)v38 + 8) = 0x3FE0000000000000;
  unint64_t v39 = *((void *)v0 + 3);
  unint64_t v40 = v2 + 13;
  if ((uint64_t)(v2 + 13) > (uint64_t)(v39 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v39 > 1), v2 + 13, 1, v0);
  }
  *((void *)v0 + 2) = v40;
  long long v41 = &v0[40 * v37];
  *((_OWORD *)v41 + 2) = xmmword_25E75E910;
  *((_OWORD *)v41 + 3) = xmmword_25E75E910;
  *((void *)v41 + 8) = 0x3FE0000000000000;
  unint64_t v42 = *((void *)v0 + 3);
  unint64_t v43 = v2 + 14;
  if ((uint64_t)(v2 + 14) > (uint64_t)(v42 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v42 > 1), v2 + 14, 1, v0);
  }
  *((void *)v0 + 2) = v43;
  uint64_t v44 = &v0[40 * v40];
  *((_OWORD *)v44 + 2) = xmmword_25E75EAD0;
  *((_OWORD *)v44 + 3) = xmmword_25E75EAD0;
  *((void *)v44 + 8) = 0x3FE0000000000000;
  unint64_t v45 = *((void *)v0 + 3);
  unint64_t v46 = v2 + 15;
  if ((uint64_t)(v2 + 15) > (uint64_t)(v45 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v45 > 1), v2 + 15, 1, v0);
  }
  *((void *)v0 + 2) = v46;
  long long v47 = &v0[40 * v43];
  *((_OWORD *)v47 + 2) = xmmword_25E75E940;
  *((_OWORD *)v47 + 3) = xmmword_25E75E940;
  *((void *)v47 + 8) = 0x3FE0000000000000;
  unint64_t v48 = *((void *)v0 + 3);
  unint64_t v49 = v2 + 16;
  if ((uint64_t)(v2 + 16) > (uint64_t)(v48 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v48 > 1), v2 + 16, 1, v0);
  }
  *((void *)v0 + 2) = v49;
  unint64_t v50 = &v0[40 * v46];
  *((_OWORD *)v50 + 2) = xmmword_25E75E8E0;
  *((_OWORD *)v50 + 3) = xmmword_25E75E8E0;
  *((void *)v50 + 8) = 0x3FE0000000000000;
  unint64_t v51 = *((void *)v0 + 3);
  unint64_t v52 = v2 + 17;
  if ((uint64_t)(v2 + 17) > (uint64_t)(v51 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v51 > 1), v2 + 17, 1, v0);
  }
  *((void *)v0 + 2) = v52;
  long long v53 = (int64x2_t *)&v0[40 * v49];
  int64x2_t v54 = vdupq_n_s64(0x3FD555556000B417uLL);
  v53[2] = v54;
  v53[3] = v54;
  v53[4].i64[0] = 0x3FE0000000000000;
  unint64_t v55 = *((void *)v0 + 3);
  unint64_t v56 = v2 + 18;
  if ((uint64_t)(v2 + 18) > (uint64_t)(v55 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v55 > 1), v2 + 18, 1, v0);
  }
  *((void *)v0 + 2) = v56;
  long long v57 = &v0[40 * v52];
  *((_OWORD *)v57 + 2) = xmmword_25E75E8D0;
  *((_OWORD *)v57 + 3) = xmmword_25E75E8D0;
  *((void *)v57 + 8) = 0x3FE0000000000000;
  unint64_t v58 = *((void *)v0 + 3);
  unint64_t v59 = v2 + 19;
  if ((uint64_t)(v2 + 19) > (uint64_t)(v58 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v58 > 1), v2 + 19, 1, v0);
  }
  *((void *)v0 + 2) = v59;
  long long v60 = &v0[40 * v56];
  *((_OWORD *)v60 + 2) = xmmword_25E75E990;
  *((_OWORD *)v60 + 3) = xmmword_25E75E990;
  *((void *)v60 + 8) = 0x3FE0000000000000;
  unint64_t v61 = *((void *)v0 + 3);
  unint64_t v62 = v2 + 20;
  if ((uint64_t)(v2 + 20) > (uint64_t)(v61 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v61 > 1), v2 + 20, 1, v0);
  }
  *((void *)v0 + 2) = v62;
  long long v63 = &v0[40 * v59];
  *((_OWORD *)v63 + 2) = xmmword_25E75EA90;
  *((_OWORD *)v63 + 3) = xmmword_25E75EA90;
  *((void *)v63 + 8) = 0x3FE0000000000000;
  unint64_t v64 = *((void *)v0 + 3);
  unint64_t v65 = v2 + 21;
  if ((uint64_t)(v2 + 21) > (uint64_t)(v64 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v64 > 1), v2 + 21, 1, v0);
  }
  *((void *)v0 + 2) = v65;
  long long v66 = &v0[40 * v62];
  *((_OWORD *)v66 + 2) = xmmword_25E75E9B0;
  *((_OWORD *)v66 + 3) = xmmword_25E75E9B0;
  *((void *)v66 + 8) = 0x3FE0000000000000;
  unint64_t v67 = *((void *)v0 + 3);
  unint64_t v68 = v2 + 22;
  if ((uint64_t)(v2 + 22) > (uint64_t)(v67 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v67 > 1), v2 + 22, 1, v0);
  }
  *((void *)v0 + 2) = v68;
  long long v69 = &v0[40 * v65];
  *((_OWORD *)v69 + 2) = xmmword_25E75E840;
  *((_OWORD *)v69 + 3) = xmmword_25E75E840;
  *((void *)v69 + 8) = 0x3FE0000000000000;
  unint64_t v70 = *((void *)v0 + 3);
  unint64_t v71 = v2 + 23;
  if ((uint64_t)(v2 + 23) > (uint64_t)(v70 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v70 > 1), v2 + 23, 1, v0);
  }
  *((void *)v0 + 2) = v71;
  long long v72 = &v0[40 * v68];
  *((_OWORD *)v72 + 2) = xmmword_25E75E8C0;
  *((_OWORD *)v72 + 3) = xmmword_25E7610A0;
  *((void *)v72 + 8) = 0x3FE0000000000000;
  unint64_t v73 = *((void *)v0 + 3);
  unint64_t v74 = v2 + 24;
  if ((uint64_t)(v2 + 24) > (uint64_t)(v73 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v73 > 1), v2 + 24, 1, v0);
  }
  *((void *)v0 + 2) = v74;
  long long v75 = &v0[40 * v71];
  *((_OWORD *)v75 + 2) = xmmword_25E75E960;
  *((_OWORD *)v75 + 3) = xmmword_25E7610B0;
  *((void *)v75 + 8) = 0x4074D21D600002CBLL;
  unint64_t v76 = *((void *)v0 + 3);
  unint64_t v77 = v2 + 25;
  if ((uint64_t)(v2 + 25) > (uint64_t)(v76 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v76 > 1), v2 + 25, 1, v0);
  }
  *((void *)v0 + 2) = v77;
  long long v78 = &v0[40 * v74];
  __asm { FMOV            V0.2D, #0.5 }
  *((_OWORD *)v78 + 2) = _Q0;
  *((_OWORD *)v78 + 3) = _Q0;
  *((void *)v78 + 8) = 0x407EE725600002CBLL;
  unint64_t v84 = *((void *)v0 + 3);
  unint64_t v85 = v2 + 26;
  if ((uint64_t)(v2 + 26) > (uint64_t)(v84 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v84 > 1), v2 + 26, 1, v0);
  }
  *((void *)v0 + 2) = v85;
  long long v86 = &v0[40 * v77];
  *((_OWORD *)v86 + 2) = xmmword_25E75EA30;
  *((_OWORD *)v86 + 3) = xmmword_25E7610C0;
  *((void *)v86 + 8) = 0x407B60BC20000181;
  unint64_t v87 = *((void *)v0 + 3);
  unint64_t v88 = v2 + 27;
  if ((uint64_t)(v2 + 27) > (uint64_t)(v87 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v87 > 1), v2 + 27, 1, v0);
  }
  *((void *)v0 + 2) = v88;
  long long v89 = &v0[40 * v85];
  *((_OWORD *)v89 + 2) = xmmword_25E75EA00;
  *((_OWORD *)v89 + 3) = xmmword_25E7610D0;
  *((void *)v89 + 8) = 0x3FE0000000000000;
  unint64_t v90 = *((void *)v0 + 3);
  unint64_t v91 = v2 + 28;
  if ((uint64_t)(v2 + 28) > (uint64_t)(v90 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v90 > 1), v2 + 28, 1, v0);
  }
  *((void *)v0 + 2) = v91;
  id v92 = &v0[40 * v88];
  *((_OWORD *)v92 + 2) = xmmword_25E75EAE0;
  *((_OWORD *)v92 + 3) = xmmword_25E75EAE0;
  *((void *)v92 + 8) = 0x3FE0000000000000;
  unint64_t v93 = *((void *)v0 + 3);
  unint64_t v94 = v2 + 29;
  if ((uint64_t)(v2 + 29) > (uint64_t)(v93 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v93 > 1), v2 + 29, 1, v0);
  }
  *((void *)v0 + 2) = v94;
  uint64_t v95 = &v0[40 * v91];
  *((_OWORD *)v95 + 2) = xmmword_25E75EA10;
  *((_OWORD *)v95 + 3) = xmmword_25E75EA10;
  *((void *)v95 + 8) = 0x3FE0000000000000;
  unint64_t v96 = *((void *)v0 + 3);
  unint64_t v97 = v2 + 30;
  if ((uint64_t)(v2 + 30) > (uint64_t)(v96 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v96 > 1), v2 + 30, 1, v0);
  }
  *((void *)v0 + 2) = v97;
  uint64_t v98 = &v0[40 * v94];
  *((_OWORD *)v98 + 2) = xmmword_25E75E900;
  *((_OWORD *)v98 + 3) = xmmword_25E7610E0;
  *((void *)v98 + 8) = 0x3FE0000000000000;
  unint64_t v99 = *((void *)v0 + 3);
  unint64_t v100 = v2 + 31;
  if ((uint64_t)(v2 + 31) > (uint64_t)(v99 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v99 > 1), v2 + 31, 1, v0);
  }
  *((void *)v0 + 2) = v100;
  uint64_t v101 = &v0[40 * v97];
  *((_OWORD *)v101 + 2) = xmmword_25E75EA40;
  *((_OWORD *)v101 + 3) = xmmword_25E75EA40;
  *((void *)v101 + 8) = 0x3FE0000000000000;
  unint64_t v102 = *((void *)v0 + 3);
  unint64_t v103 = v2 + 32;
  if ((uint64_t)(v2 + 32) > (uint64_t)(v102 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v102 > 1), v2 + 32, 1, v0);
  }
  *((void *)v0 + 2) = v103;
  uint64_t v104 = &v0[40 * v100];
  *((_OWORD *)v104 + 2) = xmmword_25E75E8F0;
  *((_OWORD *)v104 + 3) = xmmword_25E75E8F0;
  *((void *)v104 + 8) = 0x3FE0000000000000;
  unint64_t v105 = *((void *)v0 + 3);
  unint64_t v106 = v2 + 33;
  if ((uint64_t)(v2 + 33) > (uint64_t)(v105 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v105 > 1), v2 + 33, 1, v0);
  }
  *((void *)v0 + 2) = v106;
  uint64_t v107 = (int64x2_t *)&v0[40 * v103];
  int64x2_t v108 = vdupq_n_s64(0x3FE555555FFF543FuLL);
  v107[2] = v108;
  v107[3] = v108;
  v107[4].i64[0] = 0x3FE0000000000000;
  unint64_t v109 = *((void *)v0 + 3);
  unint64_t v110 = v2 + 34;
  if ((uint64_t)(v2 + 34) > (uint64_t)(v109 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v109 > 1), v2 + 34, 1, v0);
  }
  *((void *)v0 + 2) = v110;
  uint64_t v111 = &v0[40 * v106];
  *((_OWORD *)v111 + 2) = xmmword_25E75EAA0;
  *((_OWORD *)v111 + 3) = xmmword_25E7610F0;
  *((void *)v111 + 8) = 0x3FE0000000000000;
  unint64_t v112 = *((void *)v0 + 3);
  unint64_t v113 = v2 + 35;
  if ((uint64_t)(v2 + 35) > (uint64_t)(v112 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v112 > 1), v2 + 35, 1, v0);
  }
  *((void *)v0 + 2) = v113;
  CGRect v114 = &v0[40 * v110];
  *((_OWORD *)v114 + 2) = xmmword_25E75EA60;
  *((_OWORD *)v114 + 3) = xmmword_25E75EA60;
  *((void *)v114 + 8) = 0x3FE0000000000000;
  unint64_t v115 = *((void *)v0 + 3);
  unint64_t v116 = v2 + 36;
  if ((uint64_t)(v2 + 36) > (uint64_t)(v115 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v115 > 1), v2 + 36, 1, v0);
  }
  *((void *)v0 + 2) = v116;
  uint64_t v117 = &v0[40 * v113];
  *((_OWORD *)v117 + 2) = xmmword_25E75E880;
  *((_OWORD *)v117 + 3) = xmmword_25E75E880;
  *((void *)v117 + 8) = 0x3FE0000000000000;
  unint64_t v118 = *((void *)v0 + 3);
  unint64_t v119 = v2 + 37;
  if ((uint64_t)(v2 + 37) > (uint64_t)(v118 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v118 > 1), v2 + 37, 1, v0);
  }
  *((void *)v0 + 2) = v119;
  uint64_t v120 = &v0[40 * v116];
  *((_OWORD *)v120 + 2) = xmmword_25E75EA80;
  *((_OWORD *)v120 + 3) = xmmword_25E75EA80;
  *((void *)v120 + 8) = 0x3FE0000000000000;
  unint64_t v121 = *((void *)v0 + 3);
  unint64_t v122 = v2 + 38;
  if ((uint64_t)(v2 + 38) > (uint64_t)(v121 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v121 > 1), v2 + 38, 1, v0);
  }
  *((void *)v0 + 2) = v122;
  char v123 = &v0[40 * v119];
  *((_OWORD *)v123 + 2) = xmmword_25E75E9A0;
  *((_OWORD *)v123 + 3) = xmmword_25E75E9A0;
  *((void *)v123 + 8) = 0x3FE0000000000000;
  unint64_t v124 = *((void *)v0 + 3);
  unint64_t v125 = v2 + 39;
  if ((uint64_t)(v2 + 39) > (uint64_t)(v124 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v124 > 1), v2 + 39, 1, v0);
  }
  *((void *)v0 + 2) = v125;
  double v126 = &v0[40 * v122];
  *((_OWORD *)v126 + 2) = xmmword_25E75E870;
  *((_OWORD *)v126 + 3) = xmmword_25E75E870;
  *((void *)v126 + 8) = 0x3FE0000000000000;
  unint64_t v127 = *((void *)v0 + 3);
  unint64_t v128 = v2 + 40;
  if ((uint64_t)(v2 + 40) > (uint64_t)(v127 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v127 > 1), v2 + 40, 1, v0);
  }
  *((void *)v0 + 2) = v128;
  long long v129 = &v0[40 * v125];
  *((_OWORD *)v129 + 2) = xmmword_25E75EA50;
  *((_OWORD *)v129 + 3) = xmmword_25E75EA50;
  *((void *)v129 + 8) = 0x3FE0000000000000;
  unint64_t v130 = *((void *)v0 + 3);
  unint64_t v131 = v2 + 41;
  if ((uint64_t)(v2 + 41) > (uint64_t)(v130 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v130 > 1), v2 + 41, 1, v0);
  }
  *((void *)v0 + 2) = v131;
  long long v132 = (int64x2_t *)&v0[40 * v128];
  int64x2_t v133 = vdupq_n_s64(0x3FEAAAAAA000ABC1uLL);
  v132[2] = v133;
  v132[3] = v133;
  v132[4].i64[0] = 0x3FE0000000000000;
  unint64_t v134 = *((void *)v0 + 3);
  unint64_t v135 = v2 + 42;
  if ((uint64_t)(v2 + 42) > (uint64_t)(v134 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v134 > 1), v2 + 42, 1, v0);
  }
  *((void *)v0 + 2) = v135;
  long long v136 = &v0[40 * v131];
  *((_OWORD *)v136 + 2) = xmmword_25E75EB10;
  *((_OWORD *)v136 + 3) = xmmword_25E75EB10;
  *((void *)v136 + 8) = 0x3FE0000000000000;
  unint64_t v137 = *((void *)v0 + 3);
  unint64_t v138 = v2 + 43;
  if ((uint64_t)(v2 + 43) > (uint64_t)(v137 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v137 > 1), v2 + 43, 1, v0);
  }
  *((void *)v0 + 2) = v138;
  char v139 = &v0[40 * v135];
  *((_OWORD *)v139 + 2) = xmmword_25E75EAC0;
  *((_OWORD *)v139 + 3) = xmmword_25E75EAC0;
  *((void *)v139 + 8) = 0x3FE0000000000000;
  unint64_t v140 = *((void *)v0 + 3);
  unint64_t v141 = v2 + 44;
  if ((uint64_t)(v2 + 44) > (uint64_t)(v140 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v140 > 1), v2 + 44, 1, v0);
  }
  *((void *)v0 + 2) = v141;
  double v142 = &v0[40 * v138];
  *((_OWORD *)v142 + 2) = xmmword_25E75E930;
  *((_OWORD *)v142 + 3) = xmmword_25E75E930;
  *((void *)v142 + 8) = 0x3FE0000000000000;
  unint64_t v143 = *((void *)v0 + 3);
  unint64_t v144 = v2 + 45;
  if ((uint64_t)(v2 + 45) > (uint64_t)(v143 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v143 > 1), v2 + 45, 1, v0);
  }
  *((void *)v0 + 2) = v144;
  uint64_t v145 = &v0[40 * v141];
  *((_OWORD *)v145 + 2) = xmmword_25E75EAF0;
  *((_OWORD *)v145 + 3) = xmmword_25E75EAF0;
  *((void *)v145 + 8) = 0x3FE0000000000000;
  unint64_t v146 = *((void *)v0 + 3);
  unint64_t v147 = v2 + 46;
  if ((uint64_t)(v2 + 46) > (uint64_t)(v146 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v146 > 1), v2 + 46, 1, v0);
  }
  *((void *)v0 + 2) = v147;
  uint64_t v148 = &v0[40 * v144];
  *((_OWORD *)v148 + 2) = xmmword_25E75E920;
  *((_OWORD *)v148 + 3) = xmmword_25E75E920;
  *((void *)v148 + 8) = 0x3FE0000000000000;
  unint64_t v149 = *((void *)v0 + 3);
  unint64_t v150 = v2 + 47;
  if ((uint64_t)(v2 + 47) > (uint64_t)(v149 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v149 > 1), v2 + 47, 1, v0);
  }
  *((void *)v0 + 2) = v150;
  char v151 = &v0[40 * v147];
  *((_OWORD *)v151 + 2) = xmmword_25E75EB00;
  *((_OWORD *)v151 + 3) = xmmword_25E75EB00;
  *((void *)v151 + 8) = 0x3FE0000000000000;
  unint64_t v152 = *((void *)v0 + 3);
  unint64_t v153 = v2 + 48;
  if ((uint64_t)(v2 + 48) > (uint64_t)(v152 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v152 > 1), v2 + 48, 1, v0);
  }
  *((void *)v0 + 2) = v153;
  char v154 = &v0[40 * v150];
  *((_OWORD *)v154 + 2) = xmmword_25E75EAB0;
  *((_OWORD *)v154 + 3) = xmmword_25E75EAB0;
  *((void *)v154 + 8) = 0x3FE0000000000000;
  unint64_t v155 = *((void *)v0 + 3);
  if ((uint64_t)(v2 + 49) > (uint64_t)(v155 >> 1)) {
    uint64_t v0 = sub_25E7444D4((char *)(v155 > 1), v2 + 49, 1, v0);
  }
  *((void *)v0 + 2) = v2 + 49;
  uint64_t v156 = (uint64_t)&v0[40 * v153 + 32];
  __asm { FMOV            V0.2D, #1.0 }
  *(_OWORD *)uint64_t v156 = _Q0;
  *(_OWORD *)(v156 + 16) = _Q0;
  *(void *)(v156 + 32) = 0x3FE0000000000000;
  double v158 = sub_25E7443D8(0, 36, 0, MEMORY[0x263F8EE78]);
  unint64_t v160 = *((void *)v158 + 2);
  unint64_t v159 = *((void *)v158 + 3);
  int64_t v161 = v159 >> 1;
  unint64_t v162 = v160 + 1;
  if (v159 >> 1 <= v160)
  {
    double v158 = sub_25E7443D8((char *)(v159 > 1), v160 + 1, 1, v158);
    unint64_t v159 = *((void *)v158 + 3);
    int64_t v161 = v159 >> 1;
  }
  *((void *)v158 + 2) = v162;
  uint64_t v163 = &v158[32 * v160];
  *((_OWORD *)v163 + 2) = xmmword_25E75EB20;
  unint64_t v164 = v160 + 2;
  *((void *)v163 + 6) = 0;
  *((void *)v163 + 7) = 0;
  if (v161 < (uint64_t)(v160 + 2)) {
    double v158 = sub_25E7443D8((char *)(v159 > 1), v160 + 2, 1, v158);
  }
  *((void *)v158 + 2) = v164;
  double v165 = &v158[32 * v162];
  *((_OWORD *)v165 + 2) = xmmword_25E75EB30;
  *((void *)v165 + 6) = 0;
  *((void *)v165 + 7) = 0;
  unint64_t v166 = *((void *)v158 + 3);
  unint64_t v167 = v160 + 3;
  if ((uint64_t)(v160 + 3) > (uint64_t)(v166 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v166 > 1), v160 + 3, 1, v158);
  }
  *((void *)v158 + 2) = v167;
  double v168 = &v158[32 * v164];
  *((_OWORD *)v168 + 2) = xmmword_25E75EB40;
  *((void *)v168 + 6) = 0;
  *((void *)v168 + 7) = 0;
  unint64_t v169 = *((void *)v158 + 3);
  unint64_t v170 = v160 + 4;
  if ((uint64_t)(v160 + 4) > (uint64_t)(v169 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v169 > 1), v160 + 4, 1, v158);
  }
  *((void *)v158 + 2) = v170;
  uint64_t v171 = &v158[32 * v167];
  *((_OWORD *)v171 + 2) = xmmword_25E75EB50;
  *((void *)v171 + 6) = 0;
  *((void *)v171 + 7) = 0;
  unint64_t v172 = *((void *)v158 + 3);
  unint64_t v173 = v160 + 5;
  if ((uint64_t)(v160 + 5) > (uint64_t)(v172 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v172 > 1), v160 + 5, 1, v158);
  }
  *((void *)v158 + 2) = v173;
  uint64_t v174 = &v158[32 * v170];
  *((_OWORD *)v174 + 2) = xmmword_25E75EB60;
  *((void *)v174 + 6) = 0;
  *((void *)v174 + 7) = 0;
  unint64_t v175 = *((void *)v158 + 3);
  unint64_t v176 = v160 + 6;
  if ((uint64_t)(v160 + 6) > (uint64_t)(v175 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v175 > 1), v160 + 6, 1, v158);
  }
  *((void *)v158 + 2) = v176;
  uint64_t v177 = &v158[32 * v173];
  *((_OWORD *)v177 + 2) = xmmword_25E75EB70;
  *((void *)v177 + 6) = 0;
  *((void *)v177 + 7) = 0;
  unint64_t v178 = *((void *)v158 + 3);
  unint64_t v179 = v160 + 7;
  if ((uint64_t)(v160 + 7) > (uint64_t)(v178 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v178 > 1), v160 + 7, 1, v158);
  }
  *((void *)v158 + 2) = v179;
  double v180 = &v158[32 * v176];
  *((_OWORD *)v180 + 2) = xmmword_25E75EB80;
  *((void *)v180 + 6) = 0;
  *((void *)v180 + 7) = 0;
  unint64_t v181 = *((void *)v158 + 3);
  unint64_t v182 = v160 + 8;
  if ((uint64_t)(v160 + 8) > (uint64_t)(v181 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v181 > 1), v160 + 8, 1, v158);
  }
  *((void *)v158 + 2) = v182;
  uint64_t v183 = &v158[32 * v179];
  *((_OWORD *)v183 + 2) = xmmword_25E75EB90;
  *((void *)v183 + 6) = 0;
  *((void *)v183 + 7) = 0;
  unint64_t v184 = *((void *)v158 + 3);
  unint64_t v185 = v160 + 9;
  if ((uint64_t)(v160 + 9) > (uint64_t)(v184 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v184 > 1), v160 + 9, 1, v158);
  }
  *((void *)v158 + 2) = v185;
  uint64_t v186 = &v158[32 * v182];
  *((_OWORD *)v186 + 2) = xmmword_25E75EBA0;
  *((void *)v186 + 6) = 0;
  *((void *)v186 + 7) = 0;
  unint64_t v187 = *((void *)v158 + 3);
  unint64_t v188 = v160 + 10;
  if ((uint64_t)(v160 + 10) > (uint64_t)(v187 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v187 > 1), v160 + 10, 1, v158);
  }
  *((void *)v158 + 2) = v188;
  char v189 = &v158[32 * v185];
  *((_OWORD *)v189 + 2) = xmmword_25E75EBB0;
  *((void *)v189 + 6) = 0;
  *((void *)v189 + 7) = 0;
  unint64_t v190 = *((void *)v158 + 3);
  unint64_t v191 = v160 + 11;
  if ((uint64_t)(v160 + 11) > (uint64_t)(v190 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v190 > 1), v160 + 11, 1, v158);
  }
  *((void *)v158 + 2) = v191;
  long long v192 = &v158[32 * v188];
  *((_OWORD *)v192 + 2) = xmmword_25E75EBC0;
  *((void *)v192 + 6) = 0;
  *((void *)v192 + 7) = 0;
  unint64_t v193 = *((void *)v158 + 3);
  unint64_t v194 = v160 + 12;
  if ((uint64_t)(v160 + 12) > (uint64_t)(v193 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v193 > 1), v160 + 12, 1, v158);
  }
  *((void *)v158 + 2) = v194;
  char v195 = &v158[32 * v191];
  *((_OWORD *)v195 + 2) = xmmword_25E75EBD0;
  *((void *)v195 + 6) = 0;
  *((void *)v195 + 7) = 0;
  unint64_t v196 = *((void *)v158 + 3);
  unint64_t v197 = v160 + 13;
  if ((uint64_t)(v160 + 13) > (uint64_t)(v196 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v196 > 1), v160 + 13, 1, v158);
  }
  *((void *)v158 + 2) = v197;
  long long v198 = &v158[32 * v194];
  *((_OWORD *)v198 + 2) = xmmword_25E75EBE0;
  *((void *)v198 + 6) = 0;
  *((void *)v198 + 7) = 0;
  unint64_t v199 = *((void *)v158 + 3);
  unint64_t v200 = v160 + 14;
  if ((uint64_t)(v160 + 14) > (uint64_t)(v199 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v199 > 1), v160 + 14, 1, v158);
  }
  *((void *)v158 + 2) = v200;
  long long v201 = &v158[32 * v197];
  *((_OWORD *)v201 + 2) = xmmword_25E75EBF0;
  *((void *)v201 + 6) = 0;
  *((void *)v201 + 7) = 0;
  unint64_t v202 = *((void *)v158 + 3);
  unint64_t v203 = v160 + 15;
  if ((uint64_t)(v160 + 15) > (uint64_t)(v202 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v202 > 1), v160 + 15, 1, v158);
  }
  *((void *)v158 + 2) = v203;
  long long v204 = &v158[32 * v200];
  *((_OWORD *)v204 + 2) = xmmword_25E75EC00;
  *((void *)v204 + 6) = 0;
  *((void *)v204 + 7) = 0;
  unint64_t v205 = *((void *)v158 + 3);
  unint64_t v206 = v160 + 16;
  if ((uint64_t)(v160 + 16) > (uint64_t)(v205 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v205 > 1), v160 + 16, 1, v158);
  }
  *((void *)v158 + 2) = v206;
  long long v207 = &v158[32 * v203];
  *((_OWORD *)v207 + 2) = xmmword_25E75EC10;
  *((void *)v207 + 6) = 0;
  *((void *)v207 + 7) = 0;
  unint64_t v208 = *((void *)v158 + 3);
  unint64_t v209 = v160 + 17;
  if ((uint64_t)(v160 + 17) > (uint64_t)(v208 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v208 > 1), v160 + 17, 1, v158);
  }
  *((void *)v158 + 2) = v209;
  long long v210 = &v158[32 * v206];
  *((_OWORD *)v210 + 2) = xmmword_25E75EC20;
  *((void *)v210 + 6) = 0;
  *((void *)v210 + 7) = 0;
  unint64_t v211 = *((void *)v158 + 3);
  unint64_t v212 = v160 + 18;
  if ((uint64_t)(v160 + 18) > (uint64_t)(v211 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v211 > 1), v160 + 18, 1, v158);
  }
  *((void *)v158 + 2) = v212;
  long long v213 = &v158[32 * v209];
  *((_OWORD *)v213 + 2) = xmmword_25E75EC30;
  *((void *)v213 + 6) = 0;
  *((void *)v213 + 7) = 0;
  unint64_t v214 = *((void *)v158 + 3);
  unint64_t v215 = v160 + 19;
  if ((uint64_t)(v160 + 19) > (uint64_t)(v214 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v214 > 1), v160 + 19, 1, v158);
  }
  *((void *)v158 + 2) = v215;
  long long v216 = &v158[32 * v212];
  *((_OWORD *)v216 + 2) = xmmword_25E75EC40;
  *((void *)v216 + 6) = 0;
  *((void *)v216 + 7) = 0;
  unint64_t v217 = *((void *)v158 + 3);
  unint64_t v218 = v160 + 20;
  if ((uint64_t)(v160 + 20) > (uint64_t)(v217 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v217 > 1), v160 + 20, 1, v158);
  }
  *((void *)v158 + 2) = v218;
  long long v219 = &v158[32 * v215];
  *((_OWORD *)v219 + 2) = xmmword_25E75EC50;
  *((void *)v219 + 6) = 0;
  *((void *)v219 + 7) = 0;
  unint64_t v220 = *((void *)v158 + 3);
  unint64_t v221 = v160 + 21;
  if ((uint64_t)(v160 + 21) > (uint64_t)(v220 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v220 > 1), v160 + 21, 1, v158);
  }
  *((void *)v158 + 2) = v221;
  long long v222 = &v158[32 * v218];
  *((_OWORD *)v222 + 2) = xmmword_25E75EC60;
  *((void *)v222 + 6) = 0;
  *((void *)v222 + 7) = 0;
  unint64_t v223 = *((void *)v158 + 3);
  unint64_t v224 = v160 + 22;
  if ((uint64_t)(v160 + 22) > (uint64_t)(v223 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v223 > 1), v160 + 22, 1, v158);
  }
  *((void *)v158 + 2) = v224;
  long long v225 = &v158[32 * v221];
  *((_OWORD *)v225 + 2) = xmmword_25E75EC70;
  *((void *)v225 + 6) = 0;
  *((void *)v225 + 7) = 0;
  unint64_t v226 = *((void *)v158 + 3);
  unint64_t v227 = v160 + 23;
  if ((uint64_t)(v160 + 23) > (uint64_t)(v226 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v226 > 1), v160 + 23, 1, v158);
  }
  *((void *)v158 + 2) = v227;
  uint64_t v228 = &v158[32 * v224];
  *((_OWORD *)v228 + 2) = xmmword_25E75EC80;
  *((void *)v228 + 6) = 0;
  *((void *)v228 + 7) = 0;
  unint64_t v229 = *((void *)v158 + 3);
  unint64_t v230 = v160 + 24;
  if ((uint64_t)(v160 + 24) > (uint64_t)(v229 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v229 > 1), v160 + 24, 1, v158);
  }
  *((void *)v158 + 2) = v230;
  long long v231 = &v158[32 * v227];
  *((_OWORD *)v231 + 2) = xmmword_25E75EC90;
  *((void *)v231 + 6) = 0;
  *((void *)v231 + 7) = 0;
  unint64_t v232 = *((void *)v158 + 3);
  unint64_t v233 = v160 + 25;
  if ((uint64_t)(v160 + 25) > (uint64_t)(v232 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v232 > 1), v160 + 25, 1, v158);
  }
  *((void *)v158 + 2) = v233;
  long long v234 = &v158[32 * v230];
  *((_OWORD *)v234 + 2) = xmmword_25E75ECA0;
  *((void *)v234 + 6) = 0;
  *((void *)v234 + 7) = 0;
  unint64_t v235 = *((void *)v158 + 3);
  unint64_t v236 = v160 + 26;
  if ((uint64_t)(v160 + 26) > (uint64_t)(v235 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v235 > 1), v160 + 26, 1, v158);
  }
  *((void *)v158 + 2) = v236;
  long long v237 = &v158[32 * v233];
  *((_OWORD *)v237 + 2) = xmmword_25E75ECB0;
  *((void *)v237 + 6) = 0;
  *((void *)v237 + 7) = 0;
  unint64_t v238 = *((void *)v158 + 3);
  unint64_t v239 = v160 + 27;
  if ((uint64_t)(v160 + 27) > (uint64_t)(v238 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v238 > 1), v160 + 27, 1, v158);
  }
  *((void *)v158 + 2) = v239;
  long long v240 = &v158[32 * v236];
  *((_OWORD *)v240 + 2) = xmmword_25E75ECC0;
  *((void *)v240 + 6) = 0;
  *((void *)v240 + 7) = 0;
  unint64_t v241 = *((void *)v158 + 3);
  unint64_t v242 = v160 + 28;
  if ((uint64_t)(v160 + 28) > (uint64_t)(v241 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v241 > 1), v160 + 28, 1, v158);
  }
  *((void *)v158 + 2) = v242;
  v243 = &v158[32 * v239];
  *((_OWORD *)v243 + 2) = xmmword_25E75ECD0;
  *((void *)v243 + 6) = 0;
  *((void *)v243 + 7) = 0;
  unint64_t v244 = *((void *)v158 + 3);
  unint64_t v245 = v160 + 29;
  if ((uint64_t)(v160 + 29) > (uint64_t)(v244 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v244 > 1), v160 + 29, 1, v158);
  }
  *((void *)v158 + 2) = v245;
  long long v246 = &v158[32 * v242];
  *((_OWORD *)v246 + 2) = xmmword_25E75ECE0;
  *((void *)v246 + 6) = 0;
  *((void *)v246 + 7) = 0;
  unint64_t v247 = *((void *)v158 + 3);
  unint64_t v248 = v160 + 30;
  if ((uint64_t)(v160 + 30) > (uint64_t)(v247 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v247 > 1), v160 + 30, 1, v158);
  }
  *((void *)v158 + 2) = v248;
  long long v249 = &v158[32 * v245];
  *((_OWORD *)v249 + 2) = xmmword_25E75ECF0;
  *((void *)v249 + 6) = 0;
  *((void *)v249 + 7) = 0;
  unint64_t v250 = *((void *)v158 + 3);
  unint64_t v251 = v160 + 31;
  if ((uint64_t)(v160 + 31) > (uint64_t)(v250 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v250 > 1), v160 + 31, 1, v158);
  }
  *((void *)v158 + 2) = v251;
  uint64_t v252 = &v158[32 * v248];
  *((_OWORD *)v252 + 2) = xmmword_25E75ED00;
  *((void *)v252 + 6) = 0;
  *((void *)v252 + 7) = 0;
  unint64_t v253 = *((void *)v158 + 3);
  unint64_t v254 = v160 + 32;
  if ((uint64_t)(v160 + 32) > (uint64_t)(v253 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v253 > 1), v160 + 32, 1, v158);
  }
  *((void *)v158 + 2) = v254;
  long long v255 = &v158[32 * v251];
  *((_OWORD *)v255 + 2) = xmmword_25E75ED10;
  *((void *)v255 + 6) = 0;
  *((void *)v255 + 7) = 0;
  unint64_t v256 = *((void *)v158 + 3);
  unint64_t v257 = v160 + 33;
  if ((uint64_t)(v160 + 33) > (uint64_t)(v256 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v256 > 1), v160 + 33, 1, v158);
  }
  *((void *)v158 + 2) = v257;
  long long v258 = &v158[32 * v254];
  *((_OWORD *)v258 + 2) = xmmword_25E75ED20;
  *((void *)v258 + 6) = 0;
  *((void *)v258 + 7) = 0;
  unint64_t v259 = *((void *)v158 + 3);
  unint64_t v260 = v160 + 34;
  if ((uint64_t)(v160 + 34) > (uint64_t)(v259 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v259 > 1), v160 + 34, 1, v158);
  }
  *((void *)v158 + 2) = v260;
  long long v261 = &v158[32 * v257];
  *((_OWORD *)v261 + 2) = xmmword_25E75ED30;
  *((void *)v261 + 6) = 0;
  *((void *)v261 + 7) = 0;
  unint64_t v262 = *((void *)v158 + 3);
  unint64_t v263 = v160 + 35;
  if ((uint64_t)(v160 + 35) > (uint64_t)(v262 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v262 > 1), v160 + 35, 1, v158);
  }
  *((void *)v158 + 2) = v263;
  long long v264 = &v158[32 * v260];
  *((_OWORD *)v264 + 2) = xmmword_25E75ED40;
  *((void *)v264 + 6) = 0;
  *((void *)v264 + 7) = 0;
  unint64_t v265 = *((void *)v158 + 3);
  unint64_t v266 = v160 + 36;
  if ((uint64_t)(v160 + 36) > (uint64_t)(v265 >> 1)) {
    double v158 = sub_25E7443D8((char *)(v265 > 1), v160 + 36, 1, v158);
  }
  *((void *)v158 + 2) = v266;
  uint64_t v267 = (uint64_t)&v158[32 * v263 + 32];
  *(_OWORD *)uint64_t v267 = xmmword_25E75ED50;
  *(void *)(v267 + 16) = 0;
  *(void *)(v267 + 24) = 0;
  uint64_t v268 = *((void *)v0 + 2);
  sub_25E75BEB0();
  id v269 = objc_allocWithZone(MEMORY[0x263F15830]);
  long long v270 = (void *)sub_25E75BEA0();
  swift_bridgeObjectRelease();
  id v271 = objc_msgSend(v269, sel_initWithVertexCount_vertices_faceCount_faces_depthNormalization_, v268, v0 + 32, v266, v158 + 32, v270);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  objc_msgSend(v271, sel_setReplicatesEdges_, 1);
  return v271;
}

void destroy for ScanwaveInputModel(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  unint64_t v2 = *(void **)(a1 + 1224);
}

uint64_t initializeWithCopy for ScanwaveInputModel(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  memcpy((void *)(a1 + 80), (const void *)(a2 + 80), 0x150uLL);
  long long v6 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v6;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  long long v7 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v7;
  long long v8 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v8;
  long long v9 = *(_OWORD *)(a2 + 536);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(_OWORD *)(a1 + 536) = v9;
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  long long v10 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v10;
  long long v11 = *(_OWORD *)(a2 + 640);
  long long v12 = *(_OWORD *)(a2 + 656);
  long long v13 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v13;
  *(_OWORD *)(a1 + 640) = v11;
  *(_OWORD *)(a1 + 656) = v12;
  long long v14 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v14;
  long long v15 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 720) = v15;
  long long v16 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v16;
  long long v17 = *(_OWORD *)(a2 + 800);
  long long v18 = *(_OWORD *)(a2 + 816);
  long long v19 = *(_OWORD *)(a2 + 832);
  long long v20 = *(_OWORD *)(a2 + 848);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(_OWORD *)(a1 + 832) = v19;
  *(_OWORD *)(a1 + 848) = v20;
  *(_OWORD *)(a1 + 800) = v17;
  *(_OWORD *)(a1 + 816) = v18;
  *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
  long long v21 = *(_OWORD *)(a2 + 904);
  *(_OWORD *)(a1 + 888) = *(_OWORD *)(a2 + 888);
  *(_OWORD *)(a1 + 904) = v21;
  long long v22 = *(_OWORD *)(a2 + 920);
  long long v23 = *(_OWORD *)(a2 + 936);
  long long v24 = *(_OWORD *)(a2 + 968);
  *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 952);
  *(_OWORD *)(a1 + 968) = v24;
  *(_OWORD *)(a1 + 920) = v22;
  *(_OWORD *)(a1 + 936) = v23;
  long long v25 = *(_OWORD *)(a2 + 984);
  long long v26 = *(_OWORD *)(a2 + 1000);
  long long v27 = *(_OWORD *)(a2 + 1048);
  *(_OWORD *)(a1 + 1032) = *(_OWORD *)(a2 + 1032);
  *(_OWORD *)(a1 + 1048) = v27;
  long long v28 = *(_OWORD *)(a2 + 1016);
  *(_OWORD *)(a1 + 1000) = v26;
  *(_OWORD *)(a1 + 1016) = v28;
  *(_OWORD *)(a1 + 984) = v25;
  int64x2_t v29 = *(void **)(a2 + 1064);
  *(void *)(a1 + 1064) = v29;
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(_WORD *)(a1 + 1136) = *(_WORD *)(a2 + 1136);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(unsigned char *)(a1 + 1138) = *(unsigned char *)(a2 + 1138);
  unint64_t v30 = *(void **)(a2 + 1144);
  *(void *)(a1 + 1144) = v30;
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  long long v31 = *(_OWORD *)(a2 + 1168);
  long long v32 = *(_OWORD *)(a2 + 1184);
  long long v33 = *(_OWORD *)(a2 + 1200);
  *(_WORD *)(a1 + 1216) = *(_WORD *)(a2 + 1216);
  *(_OWORD *)(a1 + 1200) = v33;
  *(_OWORD *)(a1 + 1184) = v32;
  *(_OWORD *)(a1 + 1168) = v31;
  *(unsigned char *)(a1 + 1218) = *(unsigned char *)(a2 + 1218);
  unint64_t v34 = *(void **)(a2 + 1224);
  *(void *)(a1 + 1224) = v34;
  *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
  long long v35 = *(_OWORD *)(a2 + 1248);
  long long v36 = *(_OWORD *)(a2 + 1264);
  long long v37 = *(_OWORD *)(a2 + 1280);
  *(unsigned char *)(a1 + 1296) = *(unsigned char *)(a2 + 1296);
  *(_OWORD *)(a1 + 1280) = v37;
  *(_OWORD *)(a1 + 1264) = v36;
  *(_OWORD *)(a1 + 1248) = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v38 = v29;
  id v39 = v30;
  id v40 = v34;
  return a1;
}

uint64_t assignWithCopy for ScanwaveInputModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  long long v4 = *(_OWORD *)(a2 + 104);
  long long v5 = *(_OWORD *)(a2 + 120);
  long long v6 = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_OWORD *)(a1 + 136) = v6;
  *(_OWORD *)(a1 + 120) = v5;
  *(_OWORD *)(a1 + 104) = v4;
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  long long v7 = *(_OWORD *)(a2 + 184);
  long long v8 = *(_OWORD *)(a2 + 200);
  long long v9 = *(_OWORD *)(a2 + 216);
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = v9;
  *(_OWORD *)(a1 + 200) = v8;
  *(_OWORD *)(a1 + 184) = v7;
  *(unsigned char *)(a1 + 234) = *(unsigned char *)(a2 + 234);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  long long v10 = *(_OWORD *)(a2 + 272);
  long long v11 = *(_OWORD *)(a2 + 288);
  long long v12 = *(_OWORD *)(a2 + 304);
  *(_WORD *)(a1 + 320) = *(_WORD *)(a2 + 320);
  *(_OWORD *)(a1 + 288) = v11;
  *(_OWORD *)(a1 + 304) = v12;
  *(_OWORD *)(a1 + 272) = v10;
  *(unsigned char *)(a1 + 322) = *(unsigned char *)(a2 + 322);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  long long v13 = *(_OWORD *)(a2 + 352);
  long long v14 = *(_OWORD *)(a2 + 368);
  long long v15 = *(_OWORD *)(a2 + 384);
  *(_WORD *)(a1 + 400) = *(_WORD *)(a2 + 400);
  *(_OWORD *)(a1 + 368) = v14;
  *(_OWORD *)(a1 + 384) = v15;
  *(_OWORD *)(a1 + 352) = v13;
  *(unsigned char *)(a1 + 402) = *(unsigned char *)(a2 + 402);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  long long v16 = *(_OWORD *)(a2 + 432);
  long long v17 = *(_OWORD *)(a2 + 448);
  long long v18 = *(_OWORD *)(a2 + 464);
  *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
  *(_OWORD *)(a1 + 448) = v17;
  *(_OWORD *)(a1 + 464) = v18;
  *(_OWORD *)(a1 + 432) = v16;
  *(unsigned char *)(a1 + 482) = *(unsigned char *)(a2 + 482);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  long long v19 = *(_OWORD *)(a2 + 640);
  long long v20 = *(_OWORD *)(a2 + 656);
  long long v21 = *(_OWORD *)(a2 + 672);
  *(_WORD *)(a1 + 688) = *(_WORD *)(a2 + 688);
  *(_OWORD *)(a1 + 656) = v20;
  *(_OWORD *)(a1 + 672) = v21;
  *(_OWORD *)(a1 + 640) = v19;
  *(unsigned char *)(a1 + 690) = *(unsigned char *)(a2 + 690);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  long long v22 = *(_OWORD *)(a2 + 720);
  long long v23 = *(_OWORD *)(a2 + 736);
  long long v24 = *(_OWORD *)(a2 + 752);
  *(_WORD *)(a1 + 768) = *(_WORD *)(a2 + 768);
  *(_OWORD *)(a1 + 736) = v23;
  *(_OWORD *)(a1 + 752) = v24;
  *(_OWORD *)(a1 + 720) = v22;
  *(unsigned char *)(a1 + 770) = *(unsigned char *)(a2 + 770);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  long long v25 = *(_OWORD *)(a2 + 800);
  long long v26 = *(_OWORD *)(a2 + 816);
  long long v27 = *(_OWORD *)(a2 + 832);
  *(_WORD *)(a1 + 848) = *(_WORD *)(a2 + 848);
  *(_OWORD *)(a1 + 816) = v26;
  *(_OWORD *)(a1 + 832) = v27;
  *(_OWORD *)(a1 + 800) = v25;
  *(unsigned char *)(a1 + 850) = *(unsigned char *)(a2 + 850);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  *(void *)(a1 + 864) = *(void *)(a2 + 864);
  *(void *)(a1 + 872) = *(void *)(a2 + 872);
  *(void *)(a1 + 880) = *(void *)(a2 + 880);
  *(void *)(a1 + 888) = *(void *)(a2 + 888);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  long long v28 = *(_OWORD *)(a2 + 912);
  long long v29 = *(_OWORD *)(a2 + 928);
  long long v30 = *(_OWORD *)(a2 + 944);
  *(_WORD *)(a1 + 960) = *(_WORD *)(a2 + 960);
  *(_OWORD *)(a1 + 928) = v29;
  *(_OWORD *)(a1 + 944) = v30;
  *(_OWORD *)(a1 + 912) = v28;
  *(unsigned char *)(a1 + 962) = *(unsigned char *)(a2 + 962);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  long long v31 = *(_OWORD *)(a2 + 992);
  long long v32 = *(_OWORD *)(a2 + 1008);
  long long v33 = *(_OWORD *)(a2 + 1024);
  *(_WORD *)(a1 + 1040) = *(_WORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1008) = v32;
  *(_OWORD *)(a1 + 1024) = v33;
  *(_OWORD *)(a1 + 992) = v31;
  *(unsigned char *)(a1 + 1042) = *(unsigned char *)(a2 + 1042);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  unint64_t v34 = *(void **)(a2 + 1064);
  long long v35 = *(void **)(a1 + 1064);
  *(void *)(a1 + 1064) = v34;
  id v36 = v34;

  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  long long v37 = *(_OWORD *)(a2 + 1088);
  long long v38 = *(_OWORD *)(a2 + 1104);
  long long v39 = *(_OWORD *)(a2 + 1120);
  *(_WORD *)(a1 + 1136) = *(_WORD *)(a2 + 1136);
  *(_OWORD *)(a1 + 1120) = v39;
  *(_OWORD *)(a1 + 1104) = v38;
  *(_OWORD *)(a1 + 1088) = v37;
  *(unsigned char *)(a1 + 1138) = *(unsigned char *)(a2 + 1138);
  id v40 = *(void **)(a2 + 1144);
  long long v41 = *(void **)(a1 + 1144);
  *(void *)(a1 + 1144) = v40;
  id v42 = v40;

  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  long long v43 = *(_OWORD *)(a2 + 1168);
  long long v44 = *(_OWORD *)(a2 + 1184);
  long long v45 = *(_OWORD *)(a2 + 1200);
  *(_WORD *)(a1 + 1216) = *(_WORD *)(a2 + 1216);
  *(_OWORD *)(a1 + 1200) = v45;
  *(_OWORD *)(a1 + 1184) = v44;
  *(_OWORD *)(a1 + 1168) = v43;
  *(unsigned char *)(a1 + 1218) = *(unsigned char *)(a2 + 1218);
  unint64_t v46 = *(void **)(a2 + 1224);
  long long v47 = *(void **)(a1 + 1224);
  *(void *)(a1 + 1224) = v46;
  id v48 = v46;

  *(void *)(a1 + 1232) = *(void *)(a2 + 1232);
  *(void *)(a1 + 1240) = *(void *)(a2 + 1240);
  *(void *)(a1 + 1248) = *(void *)(a2 + 1248);
  *(void *)(a1 + 1256) = *(void *)(a2 + 1256);
  *(void *)(a1 + 1264) = *(void *)(a2 + 1264);
  *(void *)(a1 + 1272) = *(void *)(a2 + 1272);
  *(_DWORD *)(a1 + 1280) = *(_DWORD *)(a2 + 1280);
  *(_DWORD *)(a1 + 1284) = *(_DWORD *)(a2 + 1284);
  *(_DWORD *)(a1 + 1288) = *(_DWORD *)(a2 + 1288);
  int v49 = *(_DWORD *)(a2 + 1292);
  *(unsigned char *)(a1 + 1296) = *(unsigned char *)(a2 + 1296);
  *(_DWORD *)(a1 + 1292) = v49;
  return a1;
}

void *__swift_memcpy1297_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x511uLL);
}

uint64_t assignWithTake for ScanwaveInputModel(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 154) = *(unsigned char *)(a2 + 154);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_WORD *)(a1 + 232) = *(_WORD *)(a2 + 232);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(unsigned char *)(a1 + 234) = *(unsigned char *)(a2 + 234);
  long long v6 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v6;
  *(_WORD *)(a1 + 320) = *(_WORD *)(a2 + 320);
  long long v7 = *(_OWORD *)(a2 + 304);
  long long v8 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v7;
  *(_OWORD *)(a1 + 272) = v8;
  *(unsigned char *)(a1 + 322) = *(unsigned char *)(a2 + 322);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  long long v9 = *(_OWORD *)(a2 + 336);
  long long v10 = *(_OWORD *)(a2 + 352);
  long long v11 = *(_OWORD *)(a2 + 368);
  long long v12 = *(_OWORD *)(a2 + 384);
  *(_WORD *)(a1 + 400) = *(_WORD *)(a2 + 400);
  *(_OWORD *)(a1 + 368) = v11;
  *(_OWORD *)(a1 + 384) = v12;
  *(_OWORD *)(a1 + 336) = v9;
  *(_OWORD *)(a1 + 352) = v10;
  *(unsigned char *)(a1 + 402) = *(unsigned char *)(a2 + 402);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  long long v13 = *(_OWORD *)(a2 + 416);
  long long v14 = *(_OWORD *)(a2 + 432);
  long long v15 = *(_OWORD *)(a2 + 448);
  long long v16 = *(_OWORD *)(a2 + 464);
  *(_WORD *)(a1 + 480) = *(_WORD *)(a2 + 480);
  *(_OWORD *)(a1 + 448) = v15;
  *(_OWORD *)(a1 + 464) = v16;
  *(_OWORD *)(a1 + 416) = v13;
  *(_OWORD *)(a1 + 432) = v14;
  *(unsigned char *)(a1 + 482) = *(unsigned char *)(a2 + 482);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  long long v17 = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 512) = v17;
  long long v18 = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 544) = v18;
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRelease();
  long long v19 = *(_OWORD *)(a2 + 656);
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 656) = v19;
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_WORD *)(a1 + 688) = *(_WORD *)(a2 + 688);
  long long v20 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v20;
  *(unsigned char *)(a1 + 690) = *(unsigned char *)(a2 + 690);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  long long v21 = *(_OWORD *)(a2 + 704);
  long long v22 = *(_OWORD *)(a2 + 720);
  long long v23 = *(_OWORD *)(a2 + 736);
  long long v24 = *(_OWORD *)(a2 + 752);
  *(_WORD *)(a1 + 768) = *(_WORD *)(a2 + 768);
  *(_OWORD *)(a1 + 736) = v23;
  *(_OWORD *)(a1 + 752) = v24;
  *(_OWORD *)(a1 + 704) = v21;
  *(_OWORD *)(a1 + 720) = v22;
  *(unsigned char *)(a1 + 770) = *(unsigned char *)(a2 + 770);
  *(void *)(a1 + 776) = *(void *)(a2 + 776);
  long long v25 = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 832) = v25;
  *(_WORD *)(a1 + 848) = *(_WORD *)(a2 + 848);
  long long v26 = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 800) = v26;
  *(unsigned char *)(a1 + 850) = *(unsigned char *)(a2 + 850);
  *(void *)(a1 + 856) = *(void *)(a2 + 856);
  long long v27 = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 880) = v27;
  *(_WORD *)(a1 + 960) = *(_WORD *)(a2 + 960);
  long long v28 = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 928) = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 944) = v28;
  long long v29 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v29;
  *(unsigned char *)(a1 + 962) = *(unsigned char *)(a2 + 962);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  long long v30 = *(_OWORD *)(a2 + 976);
  long long v31 = *(_OWORD *)(a2 + 992);
  long long v32 = *(_OWORD *)(a2 + 1008);
  long long v33 = *(_OWORD *)(a2 + 1024);
  *(_WORD *)(a1 + 1040) = *(_WORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1008) = v32;
  *(_OWORD *)(a1 + 1024) = v33;
  *(_OWORD *)(a1 + 976) = v30;
  *(_OWORD *)(a1 + 992) = v31;
  *(unsigned char *)(a1 + 1042) = *(unsigned char *)(a2 + 1042);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  unint64_t v34 = *(void **)(a1 + 1064);
  *(void *)(a1 + 1064) = *(void *)(a2 + 1064);

  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(_WORD *)(a1 + 1136) = *(_WORD *)(a2 + 1136);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(unsigned char *)(a1 + 1138) = *(unsigned char *)(a2 + 1138);
  long long v35 = *(void **)(a1 + 1144);
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);

  *(_OWORD *)(a1 + 1168) = *(_OWORD *)(a2 + 1168);
  *(_OWORD *)(a1 + 1184) = *(_OWORD *)(a2 + 1184);
  *(_OWORD *)(a1 + 1200) = *(_OWORD *)(a2 + 1200);
  *(_WORD *)(a1 + 1216) = *(_WORD *)(a2 + 1216);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(unsigned char *)(a1 + 1218) = *(unsigned char *)(a2 + 1218);
  id v36 = *(void **)(a1 + 1224);
  *(void *)(a1 + 1224) = *(void *)(a2 + 1224);

  *(_OWORD *)(a1 + 1232) = *(_OWORD *)(a2 + 1232);
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(_OWORD *)(a1 + 1264) = *(_OWORD *)(a2 + 1264);
  *(void *)(a1 + 1280) = *(void *)(a2 + 1280);
  *(_DWORD *)(a1 + 1288) = *(_DWORD *)(a2 + 1288);
  *(_DWORD *)(a1 + 1292) = *(_DWORD *)(a2 + 1292);
  *(unsigned char *)(a1 + 1296) = *(unsigned char *)(a2 + 1296);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScanwaveInputModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 1297)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 560);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScanwaveInputModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 1288) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 1296) = 0;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1297) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 560) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1297) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveInputModel()
{
  return &type metadata for ScanwaveInputModel;
}

uint64_t sub_25E757C3C(CGFloat *a1, CGFloat *a2)
{
  CGFloat v3 = *a1;
  CGFloat v4 = a1[1];
  CGFloat v5 = a1[2];
  CGFloat v6 = a1[3];
  CGFloat v19 = a1[5];
  CGFloat v20 = a1[4];
  CGFloat v17 = a1[6];
  CGFloat v18 = a1[7];
  memcpy(__dst, a1 + 8, 0x4D1uLL);
  CGFloat v7 = *a2;
  CGFloat v8 = a2[1];
  CGFloat v9 = a2[2];
  CGFloat v10 = a2[3];
  CGFloat v15 = a2[5];
  CGFloat v16 = a2[4];
  CGFloat v13 = a2[6];
  CGFloat v14 = a2[7];
  memcpy(v22, a2 + 8, 0x4D1uLL);
  v23.origin.x = v3;
  v23.origin.y = v4;
  v23.size.width = v5;
  v23.size.height = v6;
  v25.origin.x = v7;
  v25.origin.y = v8;
  v25.size.width = v9;
  v25.size.height = v10;
  int v11 = CGRectEqualToRect(v23, v25);
  if (v11)
  {
    v24.origin.y = v19;
    v24.origin.x = v20;
    v24.size.width = v17;
    v24.size.height = v18;
    v26.origin.y = v15;
    v26.origin.x = v16;
    v26.size.width = v13;
    v26.size.height = v14;
    int v11 = CGRectEqualToRect(v24, v26);
    if (v11) {
      LOBYTE(v11) = sub_25E7102C0((uint64_t)__dst, (uint64_t)v22);
    }
  }
  return v11 & 1;
}

void *sub_25E757D34(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_25E75BE40();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_25E757E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_25E757E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_25E757EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_25E757F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_25E75BE40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_25E757FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E758008);
}

uint64_t sub_25E758008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ExternalRequestID(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_25E7580D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E7580EC);
}

uint64_t sub_25E7580EC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ExternalRequestID(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for ScanwaveActivateResponse(uint64_t a1)
{
  return sub_25E7355D0(a1, (uint64_t *)&unk_26A704B70);
}

uint64_t sub_25E7581C8()
{
  uint64_t result = sub_25E75BE40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScanwaveActivateResult(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScanwaveActivateResult(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E7583C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScanwaveActivateResult()
{
  return &type metadata for ScanwaveActivateResult;
}

uint64_t sub_25E758400(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_25E758414);
}

uint64_t sub_25E758414(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExternalRequestID(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_25E758480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_25E758494);
}

uint64_t sub_25E758494(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExternalRequestID(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ScanwaveActivateRequest(uint64_t a1)
{
  return sub_25E7355D0(a1, (uint64_t *)&unk_26A704B80);
}

uint64_t sub_25E758524()
{
  return sub_25E7585B4(&qword_26A7046C0, (void (*)(uint64_t))type metadata accessor for ExternalRequestID);
}

uint64_t sub_25E75856C()
{
  return sub_25E7585B4(&qword_26A704988, (void (*)(uint64_t))type metadata accessor for ScanwaveActivateResponse);
}

uint64_t sub_25E7585B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_25E758600()
{
  unint64_t result = qword_26A704B90;
  if (!qword_26A704B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704B90);
  }
  return result;
}

uint64_t sub_25E758654(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25E7585B4(&qword_26A704B98, (void (*)(uint64_t))type metadata accessor for ScanwaveActivateRequest);
  uint64_t result = sub_25E7585B4(&qword_26A704BA0, (void (*)(uint64_t))type metadata accessor for ScanwaveActivateRequest);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_25E7586D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_25E75BE20()) {
    char v6 = *(unsigned char *)(a1 + *(int *)(a3 + 20)) ^ *(unsigned char *)(a2 + *(int *)(a3 + 20)) ^ 1;
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_25E758738(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_25E7585B4(&qword_26A704BA8, (void (*)(uint64_t))type metadata accessor for ScanwaveActivateResponse);
  uint64_t result = sub_25E7585B4(&qword_26A704BB0, (void (*)(uint64_t))type metadata accessor for ScanwaveActivateResponse);
  *(void *)(a1 + 16) = result;
  return result;
}

Swift::Bool __swiftcall SUIARadialGradientView._shouldAnimateProperty(withKey:)(Swift::String_optional withKey)
{
  object = withKey.value._object;
  uint64_t countAndFlagsBits = withKey.value._countAndFlagsBits;
  if (!qword_270B4DF68)
  {
    if (!withKey.value._object) {
      return 1;
    }
    goto LABEL_10;
  }
  if (withKey.value._object)
  {
    BOOL v4 = *(void *)aColors_3 == withKey.value._countAndFlagsBits && (void *)qword_270B4DF68 == withKey.value._object;
    if (v4 || (sub_25E75C190() & 1) != 0) {
      return 1;
    }
LABEL_10:
    if (*(void *)&aLocations_3[8])
    {
      BOOL v5 = *(void *)aLocations_3 == countAndFlagsBits && *(void *)&aLocations_3[8] == (void)object;
      if (v5 || (sub_25E75C190() & 1) != 0) {
        return 1;
      }
    }
    goto LABEL_18;
  }
  if (!*(void *)&aLocations_3[8]) {
    return 1;
  }
LABEL_18:
  if (*(void *)&aLayerColors[8])
  {
    if (!object)
    {
      if (qword_270B4DF98) {
        goto LABEL_33;
      }
      return 1;
    }
    BOOL v6 = *(void *)aLayerColors == countAndFlagsBits && *(void *)&aLayerColors[8] == (void)object;
    if (v6 || (sub_25E75C190() & 1) != 0) {
      return 1;
    }
  }
  else if (!object)
  {
    return 1;
  }
  if (!qword_270B4DF98)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A704488);
    swift_arrayDestroy();
    goto LABEL_36;
  }
  if ((qword_270B4DF90 != countAndFlagsBits || (void *)qword_270B4DF98 != object) && (sub_25E75C190() & 1) == 0)
  {
LABEL_33:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A704488);
    swift_arrayDestroy();
    if (!object)
    {
      uint64_t v9 = 0;
LABEL_39:
      v10.receiver = v1;
      v10.super_class = (Class)SUIARadialGradientView;
      unsigned __int8 v7 = objc_msgSendSuper2(&v10, sel__shouldAnimatePropertyWithKey_, v9);

      return v7;
    }
LABEL_36:
    uint64_t v9 = (void *)sub_25E75BEA0();
    goto LABEL_39;
  }
  return 1;
}

uint64_t static SUIARadialGradientView.layerClass.getter()
{
  return sub_25E711DB8(0, &qword_26A704BB8);
}

id sub_25E758A9C()
{
  v5.super_class = (Class)SUIARadialGradientView;
  id v0 = objc_msgSendSuper2(&v5, sel_initWithFrame_);
  id v1 = objc_msgSend(v0, sel_layer);
  self;
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setType_, *MEMORY[0x263F15DE0]);

  id v2 = objc_msgSend(v0, sel_layer);
  self;
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setStartPoint_, 0.5, 0.5);

  id v3 = objc_msgSend(v0, sel_layer);
  self;
  objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_setEndPoint_, 1.0, 1.0);

  return v0;
}

void __swiftcall SUIARadialGradientView.init(coder:)(SUIARadialGradientView_optional *__return_ptr retstr, NSCoder coder)
{
}

void SUIARadialGradientView.init(coder:)()
{
}

uint64_t SUIARadialGradientView.colors.getter()
{
  id v1 = objc_msgSend(v0, sel_layer);
  self;
  id v2 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_colors);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_25E75BF30();

  unint64_t v4 = sub_25E759208(v3);
  swift_bridgeObjectRelease();
  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_25E75C130();
  swift_bridgeObjectRelease();
  if (!v5)
  {
LABEL_13:
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
LABEL_4:
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t result = sub_25E75C0E0();
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v7 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x2611E1C70](v7, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * v7 + 32);
      }
      uint64_t v9 = v8;
      ++v7;
      objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithCGColor_, v8);

      sub_25E75C0C0();
      sub_25E75C0F0();
      sub_25E75C100();
      sub_25E75C0D0();
    }
    while (v5 != v7);
    uint64_t v10 = v11;
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void SUIARadialGradientView.colors.setter(unint64_t a1)
{
  id v3 = objc_msgSend(v1, sel_layer);
  self;
  unint64_t v4 = (void *)swift_dynamicCastObjCClassUnconditional();
  if (!a1) {
    goto LABEL_16;
  }
  if (!(a1 >> 62))
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_14:
    swift_bridgeObjectRelease();
LABEL_15:
    a1 = sub_25E75BF20();
    swift_bridgeObjectRelease();
LABEL_16:
    objc_msgSend(v4, sel_setColors_, a1);

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_25E75C130();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_14;
  }
LABEL_4:
  uint64_t v16 = MEMORY[0x263F8EE78];
  sub_25E75A4E0(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    uint64_t v7 = v16;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)MEMORY[0x2611E1C70](v6, a1);
      }
      else {
        id v8 = *(id *)(a1 + 8 * v6 + 32);
      }
      uint64_t v9 = v8;
      id v10 = objc_msgSend(v8, sel_CGColor);
      type metadata accessor for CGColor(0);
      uint64_t v15 = v11;

      *(void *)&long long v14 = v10;
      uint64_t v16 = v7;
      unint64_t v13 = *(void *)(v7 + 16);
      unint64_t v12 = *(void *)(v7 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_25E75A4E0((char *)(v12 > 1), v13 + 1, 1);
        uint64_t v7 = v16;
      }
      ++v6;
      *(void *)(v7 + 16) = v13 + 1;
      sub_25E7136C0(&v14, (_OWORD *)(v7 + 32 * v13 + 32));
    }
    while (v5 != v6);
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_25E759208(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v6 = MEMORY[0x263F8EE78];
    sub_25E75C0E0();
    uint64_t v4 = a1 + 32;
    do
    {
      sub_25E74A3F4(v4, (uint64_t)&v5);
      type metadata accessor for CGColor(0);
      swift_dynamicCast();
      sub_25E75C0C0();
      sub_25E75C0F0();
      sub_25E75C100();
      sub_25E75C0D0();
      v4 += 32;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t SUIARadialGradientView.locations.getter()
{
  id v1 = objc_msgSend(v0, sel_layer);
  self;
  id v2 = objc_msgSend((id)swift_dynamicCastObjCClassUnconditional(), sel_locations);

  if (!v2) {
    return 0;
  }
  sub_25E711DB8(0, &qword_26A703FF8);
  uint64_t v3 = sub_25E75BF30();

  return v3;
}

void SUIARadialGradientView.locations.setter(uint64_t a1)
{
  id v2 = v1;
  id v4 = objc_msgSend(v2, sel_layer);
  self;
  uint64_t v5 = (void *)swift_dynamicCastObjCClassUnconditional();
  if (a1)
  {
    sub_25E711DB8(0, &qword_26A703FF8);
    id v6 = (id)sub_25E75BF20();
    swift_bridgeObjectRelease();
  }
  else
  {
    id v6 = 0;
  }
  objc_msgSend(v5, sel_setLocations_, v6);
}

void sub_25E759680(id *a1@<X0>, SEL *a2@<X3>, unint64_t *a3@<X4>, uint64_t *a4@<X8>)
{
  id v6 = [*a1 *a2];
  if (v6)
  {
    uint64_t v7 = v6;
    sub_25E711DB8(0, a3);
    uint64_t v8 = sub_25E75BF30();
  }
  else
  {
    uint64_t v8 = 0;
  }
  *a4 = v8;
}

void sub_25E7596FC(void *a1, void **a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, SEL *a7)
{
  uint64_t v8 = *a2;
  if (*a1)
  {
    sub_25E711DB8(0, a5);
    uint64_t v9 = sub_25E75BF20();
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = (id)v9;
  [v8 *a7];
}

void static SUIARadialGradientView.calculateDescription(forGradientMajorDiameter:ringWidth:blurRadius:numberOfSamples:completion:)(uint64_t a1, void (*a2)(uint64_t, uint64_t, id, double), double a3, double a4, double a5)
{
  uint64_t v93 = *MEMORY[0x263EF8340];
  uint64_t v7 = 2;
  if (a1 > 2) {
    uint64_t v7 = a1;
  }
  uint64_t v83 = v7;
  double v8 = a5 * 6.0 + a3;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, v8, v8);
  id v10 = self;
  id v11 = objc_msgSend(v10, sel_whiteColor);
  objc_msgSend(v9, sel_setBackgroundColor_, v11);

  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, a3, a3);
  objc_msgSend(v9, sel_addSubview_, v12);
  objc_msgSend(v9, sel_center);
  objc_msgSend(v12, sel_setCenter_);
  sub_25E75BEB0();
  id v13 = objc_allocWithZone(MEMORY[0x263F157C8]);
  long long v14 = (void *)sub_25E75BEA0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithType_, v14);

  uint64_t v16 = (void *)sub_25E75BE50();
  objc_msgSend(v15, sel_setValue_forKey_, v16, *MEMORY[0x263F15C80]);

  CGFloat v17 = (void *)sub_25E75BF70();
  objc_msgSend(v15, sel_setValue_forKey_, v17, *MEMORY[0x263F15C68]);

  id v18 = objc_msgSend(v9, sel_layer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_25E75FB40;
  *(void *)(v19 + 56) = sub_25E711DB8(0, &qword_26A704928);
  *(void *)(v19 + 32) = v15;
  id v75 = v15;
  CGFloat v20 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setFilters_, v20);

  id v21 = objc_msgSend(v12, sel_layer);
  objc_msgSend(v21, sel_setCornerRadius_, a3 * 0.5);

  if (a4 == 0.0)
  {
    id v22 = objc_msgSend(v10, sel_blackColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v22);
  }
  else
  {
    id v23 = objc_msgSend(v10, sel_whiteColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v23);

    id v24 = objc_msgSend(v12, sel_layer);
    id v25 = objc_msgSend(v10, sel_blackColor);
    id v26 = objc_msgSend(v25, sel_CGColor);

    objc_msgSend(v24, sel_setBorderColor_, v26);
    id v22 = objc_msgSend(v12, sel_layer);
    objc_msgSend(v22, sel_setBorderWidth_, a4);
  }
  long long v27 = v12;

  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
  objc_msgSend(v28, sel_setPreferredRange_, 2);
  objc_msgSend(v9, sel_bounds);
  id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v28, v29, v30);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v9;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_25E75A538;
  *(void *)(v33 + 24) = v32;
  unint64_t v91 = sub_25E75A54C;
  uint64_t v92 = v33;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v88 = 1107296256;
  long long v89 = sub_25E75A1BC;
  unint64_t v90 = &block_descriptor_4;
  unint64_t v34 = _Block_copy(&aBlock);
  id v35 = v9;
  swift_retain();
  swift_release();
  id v36 = objc_msgSend(v31, sel_imageWithActions_, v34);
  _Block_release(v34);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_70;
  }
  unint64_t v74 = v35;
  int64_t v38 = sub_25E75A208();
  unint64_t v42 = v39;
  uint64_t v43 = MEMORY[0x263F8EE78];
  uint64_t v85 = MEMORY[0x263F8EE78];
  uint64_t v86 = MEMORY[0x263F8EE78];
  uint64_t v44 = MEMORY[0x263F8EE78];
  if (v39 >> 60 != 15)
  {
    double v45 = (double)v40 * 0.5;
    if ((~*(void *)&v45 & 0x7FF0000000000000) == 0)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    if (v45 <= -9.22337204e18)
    {
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    if (v45 >= 9.22337204e18)
    {
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    if (__OFSUB__(v40, (uint64_t)v45))
    {
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    double v46 = 1.0 / (double)(v83 - 1);
    if (v46 == 0.0)
    {
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
    }
    id v71 = v36;
    id v72 = v28;
    unint64_t v73 = v27;
    char v47 = 0;
    uint64_t v48 = 0;
    double v49 = (double)(v40 - (uint64_t)v45);
    if (v41 >= 0) {
      uint64_t v50 = v41;
    }
    else {
      uint64_t v50 = v41 + 1;
    }
    uint64_t v51 = v50 >> 1;
    uint64_t v52 = v40 * v51;
    double v53 = (double)(uint64_t)v45;
    BOOL v84 = (unsigned __int128)(v40 * (__int128)v51) >> 64 != (v40 * v51) >> 63;
    uint64_t v80 = v38 >> 32;
    uint64_t v81 = (int)v38;
    unint64_t v54 = v39 >> 62;
    unint64_t v78 = HIDWORD(v38);
    uint64_t v79 = BYTE6(v39);
    unint64_t v82 = v39;
    unint64_t v77 = HIDWORD(v39);
    double v55 = 0.0;
    int64_t v56 = v38;
    if (v46 > 0.0)
    {
LABEL_20:
      if (v55 >= 1.0)
      {
        double v57 = 1.0;
        if ((v55 != 1.0) | v47 & 1 || v48 == 0x8000000000000000) {
          goto LABEL_55;
        }
LABEL_25:
        char v47 = 1;
        goto LABEL_26;
      }
    }
    else
    {
LABEL_17:
      if (v55 <= 1.0)
      {
        double v57 = 1.0;
        if ((v55 != 1.0) | v47 & 1)
        {
LABEL_55:
          uint64_t v43 = v85;
          uint64_t v44 = v86;
          id v28 = v72;
          long long v27 = v73;
          id v36 = v71;
          unint64_t v42 = v82;
          goto LABEL_56;
        }
        goto LABEL_25;
      }
    }
    if (__OFADD__(v48++, 1)) {
      goto LABEL_63;
    }
    double v57 = (double)v48 * v46 + 0.0;
LABEL_26:
    double v59 = v55 * v49 + v53;
    if ((~*(void *)&v59 & 0x7FF0000000000000) != 0)
    {
      if (v59 > -9.22337204e18)
      {
        if (v59 < 9.22337204e18)
        {
          if (!v84)
          {
            uint64_t v60 = v52 + (uint64_t)v59;
            if (!__OFADD__(v52, (uint64_t)v59))
            {
              if ((unint64_t)(v60 - 0x2000000000000000) >> 62 == 3)
              {
                uint64_t v61 = 4 * v60;
                switch(v54)
                {
                  case 1uLL:
                    if (v61 < v81 || v61 >= v80) {
                      goto LABEL_65;
                    }
                    uint64_t v64 = sub_25E75BD50();
                    if (!v64) {
                      goto LABEL_77;
                    }
                    uint64_t v65 = v64;
                    uint64_t v66 = sub_25E75BD60();
                    uint64_t v67 = v61 - v66;
                    if (!__OFSUB__(v61, v66)) {
                      goto LABEL_48;
                    }
                    goto LABEL_67;
                  case 2uLL:
                    if (v61 < *(void *)(v38 + 16)) {
                      goto LABEL_66;
                    }
                    if (v61 >= *(void *)(v38 + 24)) {
                      goto LABEL_68;
                    }
                    uint64_t v68 = sub_25E75BD50();
                    if (!v68) {
                      goto LABEL_78;
                    }
                    uint64_t v65 = v68;
                    uint64_t v69 = sub_25E75BD60();
                    uint64_t v67 = v61 - v69;
                    if (__OFSUB__(v61, v69)) {
                      goto LABEL_69;
                    }
LABEL_48:
                    unsigned int v62 = *(unsigned __int8 *)(v65 + v67);
LABEL_49:
                    objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v55);
                    MEMORY[0x2611E1AD0]();
                    if (*(void *)((v86 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v86 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
                      sub_25E75BF50();
                    sub_25E75BF60();
                    sub_25E75BF40();
                    objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 0.0, (double)v62 / -255.0 + 1.0);
                    MEMORY[0x2611E1AD0]();
                    if (*(void *)((v85 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v85 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
                      sub_25E75BF50();
                    sub_25E75BF60();
                    sub_25E75BF40();
                    double v55 = v57;
                    int64_t v38 = v56;
                    if (v46 > 0.0) {
                      goto LABEL_20;
                    }
                    goto LABEL_17;
                  case 3uLL:
                    goto LABEL_76;
                  default:
                    if (v61 >= v79) {
                      goto LABEL_64;
                    }
                    LOBYTE(aBlock) = v38;
                    BYTE4(aBlock) = v78;
                    LOBYTE(v88) = v82;
                    BYTE4(v88) = v77;
                    unsigned int v62 = *((unsigned __int8 *)&aBlock + 4 * v60);
                    goto LABEL_49;
                }
              }
              goto LABEL_62;
            }
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_59;
  }
LABEL_56:
  uint64_t v70 = v38;
  a2(v44, v43, v36, v8);

  sub_25E74B680(v70, v42);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

void sub_25E75A1BC(uint64_t a1, void *a2)
{
  id v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

int64_t sub_25E75A208()
{
  id v1 = (CGImage *)objc_msgSend(v0, sel_CGImage);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t Width = CGImageGetWidth(v1);
  int64_t result = CGImageGetHeight(v2);
  if ((unint64_t)(Width - 0x2000000000000000) >> 62 != 3)
  {
    __break(1u);
    goto LABEL_16;
  }
  int64_t v5 = result;
  uint64_t v6 = 4 * Width * result;
  if ((unsigned __int128)(4 * Width * (__int128)result) >> 64 != v6 >> 63)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  int64_t result = CGImageGetColorSpace(v2);
  if (result)
  {
    uint64_t v7 = (CGColorSpace *)result;
    double v8 = malloc(v6);
    if (v8)
    {
      id v9 = v8;
      CGContextRef v10 = CGBitmapContextCreate(v8, Width, v5, 8uLL, 4 * Width, v7, 1u);
      if (v10)
      {
        id v11 = v10;
        id v12 = objc_msgSend(self, sel_whiteColor);
        id v13 = (CGColor *)objc_msgSend(v12, sel_CGColor);

        CGContextSetFillColorWithColor(v11, v13);
        v16.origin.x = 0.0;
        v16.origin.y = 0.0;
        v16.size.width = (double)Width;
        v16.size.height = (double)v5;
        CGContextFillRect(v11, v16);
        sub_25E75BFD0();
        Data = CGBitmapContextGetData(v11);
        if (Data)
        {
          uint64_t v15 = sub_25E75AD9C(Data, v6);
          free(v9);

          id v2 = v7;
          uint64_t v7 = v11;
LABEL_13:

          return v15;
        }
      }
      else
      {
        free(v9);
      }
    }
    uint64_t v15 = 0;
    goto LABEL_13;
  }
LABEL_17:
  __break(1u);
  return result;
}

char *sub_25E75A480(char *a1, int64_t a2, char a3)
{
  int64_t result = sub_25E75A6D0(a1, a2, a3, *v3);
  void *v3 = result;
  return result;
}

char *sub_25E75A4A0(char *a1, int64_t a2, char a3)
{
  int64_t result = sub_25E75A7CC(a1, a2, a3, *v3);
  void *v3 = result;
  return result;
}

char *sub_25E75A4C0(char *a1, int64_t a2, char a3)
{
  int64_t result = sub_25E75A8C8(a1, a2, a3, *v3);
  void *v3 = result;
  return result;
}

char *sub_25E75A4E0(char *a1, int64_t a2, char a3)
{
  int64_t result = sub_25E75A9CC(a1, a2, a3, *v3);
  void *v3 = result;
  return result;
}

uint64_t sub_25E75A500()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_25E75A53C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_25E75A54C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

void sub_25E75A58C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E75A5BC(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

void sub_25E75A5EC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_25E75A61C(void *a1, void **a2, uint64_t a3, uint64_t a4)
{
}

uint64_t type metadata accessor for SUIARadialGradientView(uint64_t a1)
{
  return sub_25E711DB8(a1, &qword_26A704BC0);
}

char *sub_25E75A660(char *a1, int64_t a2, char a3)
{
  int64_t result = sub_25E75AAD4(a1, a2, a3, *v3);
  void *v3 = result;
  return result;
}

char *sub_25E75A680(char *a1, int64_t a2, char a3)
{
  int64_t result = sub_25E75ABE0(a1, a2, a3, *v3, &qword_26A704BC8);
  void *v3 = result;
  return result;
}

char *sub_25E75A6A8(char *a1, int64_t a2, char a3)
{
  int64_t result = sub_25E75ABE0(a1, a2, a3, *v3, &qword_26A7048D8);
  void *v3 = result;
  return result;
}

char *sub_25E75A6D0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A704BD0);
    CGContextRef v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    CGContextRef v10 = (char *)MEMORY[0x263F8EE78];
  }
  id v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

char *sub_25E75A7CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A704BD8);
    CGContextRef v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    CGContextRef v10 = (char *)MEMORY[0x263F8EE78];
  }
  id v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 8 * v8);
  }
  swift_release();
  return v10;
}

char *sub_25E75A8C8(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A7040F0);
    CGContextRef v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    CGContextRef v10 = (char *)MEMORY[0x263F8EE78];
  }
  id v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_25E75A9CC(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
    CGContextRef v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    CGContextRef v10 = (char *)MEMORY[0x263F8EE78];
  }
  id v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_25E75AAD4(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26A704998);
    CGContextRef v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    CGContextRef v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  id v13 = a4 + 32;
  size_t v14 = 24 * v8;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v14);
  }
  swift_release();
  return v10;
}

char *sub_25E75ABE0(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = _swift_stdlib_malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  size_t v14 = v11 + 32;
  uint64_t v15 = a4 + 32;
  if (v6)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v9);
  }
  swift_release();
  return v11;
}

uint64_t sub_25E75ACD8(unsigned char *__src, unsigned char *a2)
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_25E75AD9C(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_25E75ACD8(__src, &__src[a2]);
  }
  sub_25E75BD70();
  swift_allocObject();
  sub_25E75BD40();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_25E75BDC0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

void sub_25E75AE50(uint64_t a1, uint64_t a2, double a3, double a4, double a5)
{
  uint64_t v96 = *MEMORY[0x263EF8340];
  uint64_t v7 = 2;
  if (a1 > 2) {
    uint64_t v7 = a1;
  }
  uint64_t v86 = v7;
  double v8 = a5 * 6.0 + a3;
  id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, v8, v8);
  uint64_t v10 = self;
  id v11 = objc_msgSend(v10, sel_whiteColor);
  objc_msgSend(v9, sel_setBackgroundColor_, v11);

  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F82E00]), sel_initWithFrame_, 0.0, 0.0, a3, a3);
  objc_msgSend(v9, sel_addSubview_, v12);
  objc_msgSend(v9, sel_center);
  objc_msgSend(v12, sel_setCenter_);
  sub_25E75BEB0();
  id v13 = objc_allocWithZone(MEMORY[0x263F157C8]);
  size_t v14 = (void *)sub_25E75BEA0();
  swift_bridgeObjectRelease();
  id v15 = objc_msgSend(v13, sel_initWithType_, v14);

  CGRect v16 = (void *)sub_25E75BE50();
  objc_msgSend(v15, sel_setValue_forKey_, v16, *MEMORY[0x263F15C80]);

  CGFloat v17 = (void *)sub_25E75BF70();
  objc_msgSend(v15, sel_setValue_forKey_, v17, *MEMORY[0x263F15C68]);

  id v18 = objc_msgSend(v9, sel_layer);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A704920);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_25E75FB40;
  *(void *)(v19 + 56) = sub_25E711DB8(0, &qword_26A704928);
  *(void *)(v19 + 32) = v15;
  id v20 = v15;
  id v21 = (void *)sub_25E75BF20();
  swift_bridgeObjectRelease();
  objc_msgSend(v18, sel_setFilters_, v21);

  id v22 = objc_msgSend(v12, sel_layer);
  objc_msgSend(v22, sel_setCornerRadius_, a3 * 0.5);

  if (a4 == 0.0)
  {
    id v23 = objc_msgSend(v10, sel_blackColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v23);
  }
  else
  {
    id v24 = objc_msgSend(v10, sel_whiteColor);
    objc_msgSend(v12, sel_setBackgroundColor_, v24);

    id v25 = objc_msgSend(v12, sel_layer);
    id v26 = objc_msgSend(v10, sel_blackColor);
    id v27 = objc_msgSend(v26, sel_CGColor);

    objc_msgSend(v25, sel_setBorderColor_, v27);
    id v23 = objc_msgSend(v12, sel_layer);
    objc_msgSend(v23, sel_setBorderWidth_, a4);
  }

  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827B0]), sel_init);
  objc_msgSend(v28, sel_setPreferredRange_, 2);
  objc_msgSend(v9, sel_bounds);
  id v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F827A0]), sel_initWithSize_format_, v28, v29, v30);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v9;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_25E75A538;
  *(void *)(v33 + 24) = v32;
  unint64_t v94 = sub_25E75B958;
  uint64_t v95 = v33;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v91 = 1107296256;
  uint64_t v92 = sub_25E75A1BC;
  uint64_t v93 = &block_descriptor_16;
  unint64_t v34 = _Block_copy(&aBlock);
  id v78 = v9;
  swift_retain();
  swift_release();
  id v35 = objc_msgSend(v31, sel_imageWithActions_, v34);
  _Block_release(v34);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_70;
  }
  int64_t v37 = sub_25E75A208();
  uint64_t v41 = v37;
  uint64_t v88 = MEMORY[0x263F8EE78];
  uint64_t v89 = MEMORY[0x263F8EE78];
  unint64_t v42 = v35;
  unint64_t v77 = v12;
  if (v38 >> 60 != 15)
  {
    double v43 = (double)v39 * 0.5;
    if ((~*(void *)&v43 & 0x7FF0000000000000) == 0)
    {
LABEL_71:
      __break(1u);
      goto LABEL_72;
    }
    if (v43 <= -9.22337204e18)
    {
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    if (v43 >= 9.22337204e18)
    {
LABEL_73:
      __break(1u);
      goto LABEL_74;
    }
    if (__OFSUB__(v39, (uint64_t)v43))
    {
LABEL_74:
      __break(1u);
      goto LABEL_75;
    }
    double v44 = 1.0 / (double)(v86 - 1);
    if (v44 == 0.0)
    {
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
    }
    id v73 = v35;
    id v74 = v31;
    id v75 = v28;
    id v76 = v20;
    uint64_t v45 = 0;
    double v46 = (double)(v39 - (uint64_t)v43);
    if (v40 >= 0) {
      uint64_t v47 = v40;
    }
    else {
      uint64_t v47 = v40 + 1;
    }
    uint64_t v48 = v47 >> 1;
    uint64_t v49 = v39 * v48;
    double v50 = (double)(uint64_t)v43;
    BOOL v85 = (unsigned __int128)(v39 * (__int128)v48) >> 64 != (v39 * v48) >> 63;
    char v87 = 0;
    uint64_t v83 = v37 >> 32;
    uint64_t v84 = (int)v37;
    unint64_t v51 = v38 >> 62;
    unint64_t v81 = HIDWORD(v37);
    uint64_t v82 = BYTE6(v38);
    unint64_t v80 = HIDWORD(v38);
    double v52 = 0.0;
    int64_t v53 = v37;
    unint64_t v54 = v38;
    if (v44 <= 0.0)
    {
LABEL_21:
      if (v52 <= 1.0)
      {
        double v55 = 1.0;
        if ((v52 != 1.0) | v87 & 1)
        {
LABEL_55:
          id v28 = v75;
          id v20 = v76;
          unint64_t v42 = v73;
          id v31 = v74;
          goto LABEL_56;
        }
        goto LABEL_25;
      }
    }
    else
    {
LABEL_17:
      if (v52 >= 1.0)
      {
        double v55 = 1.0;
        if ((v52 != 1.0) | v87 & 1 || v45 == 0x8000000000000000) {
          goto LABEL_55;
        }
LABEL_25:
        char v87 = 1;
        goto LABEL_26;
      }
    }
    if (__OFADD__(v45++, 1)) {
      goto LABEL_63;
    }
    double v55 = (double)v45 * v44 + 0.0;
LABEL_26:
    double v57 = v52 * v46 + v50;
    if ((~*(void *)&v57 & 0x7FF0000000000000) != 0)
    {
      if (v57 > -9.22337204e18)
      {
        if (v57 < 9.22337204e18)
        {
          if (!v85)
          {
            uint64_t v58 = v49 + (uint64_t)v57;
            if (!__OFADD__(v49, (uint64_t)v57))
            {
              if ((unint64_t)(v58 - 0x2000000000000000) >> 62 == 3)
              {
                uint64_t v59 = 4 * v58;
                switch(v51)
                {
                  case 1uLL:
                    if (v59 < v84 || v59 >= v83) {
                      goto LABEL_65;
                    }
                    uint64_t v62 = sub_25E75BD50();
                    if (!v62) {
                      goto LABEL_77;
                    }
                    uint64_t v63 = v62;
                    uint64_t v64 = sub_25E75BD60();
                    uint64_t v65 = v59 - v64;
                    if (!__OFSUB__(v59, v64)) {
                      goto LABEL_48;
                    }
                    goto LABEL_67;
                  case 2uLL:
                    if (v59 < *(void *)(v41 + 16)) {
                      goto LABEL_66;
                    }
                    if (v59 >= *(void *)(v41 + 24)) {
                      goto LABEL_68;
                    }
                    uint64_t v66 = sub_25E75BD50();
                    if (!v66) {
                      goto LABEL_78;
                    }
                    uint64_t v63 = v66;
                    uint64_t v67 = sub_25E75BD60();
                    uint64_t v65 = v59 - v67;
                    if (__OFSUB__(v59, v67)) {
                      goto LABEL_69;
                    }
LABEL_48:
                    unsigned int v60 = *(unsigned __int8 *)(v63 + v65);
LABEL_49:
                    objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithDouble_, v52);
                    MEMORY[0x2611E1AD0]();
                    if (*(void *)((v89 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v89 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
                      sub_25E75BF50();
                    sub_25E75BF60();
                    sub_25E75BF40();
                    objc_msgSend(objc_allocWithZone(MEMORY[0x263F825C8]), sel_initWithWhite_alpha_, 0.0, (double)v60 / -255.0 + 1.0);
                    MEMORY[0x2611E1AD0]();
                    if (*(void *)((v88 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v88 & 0xFFFFFFFFFFFFFF8)
                                                                                      + 0x18) >> 1)
                      sub_25E75BF50();
                    sub_25E75BF60();
                    sub_25E75BF40();
                    double v52 = v55;
                    uint64_t v41 = v53;
                    unint64_t v38 = v54;
                    if (v44 > 0.0) {
                      goto LABEL_17;
                    }
                    goto LABEL_21;
                  case 3uLL:
                    goto LABEL_76;
                  default:
                    if (v59 >= v82) {
                      goto LABEL_64;
                    }
                    LOBYTE(aBlock) = v41;
                    BYTE4(aBlock) = v81;
                    LOBYTE(v91) = v38;
                    BYTE4(v91) = v80;
                    unsigned int v60 = *((unsigned __int8 *)&aBlock + 4 * v58);
                    goto LABEL_49;
                }
              }
              goto LABEL_62;
            }
LABEL_61:
            __break(1u);
LABEL_62:
            __break(1u);
LABEL_63:
            __break(1u);
LABEL_64:
            __break(1u);
LABEL_65:
            __break(1u);
LABEL_66:
            __break(1u);
LABEL_67:
            __break(1u);
LABEL_68:
            __break(1u);
LABEL_69:
            __break(1u);
LABEL_70:
            __break(1u);
            goto LABEL_71;
          }
LABEL_60:
          __break(1u);
          goto LABEL_61;
        }
LABEL_59:
        __break(1u);
        goto LABEL_60;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_59;
  }
LABEL_56:
  uint64_t v68 = v20;
  unint64_t v69 = v38;
  sub_25E711DB8(0, &qword_26A703FF8);
  uint64_t v70 = (void *)sub_25E75BF20();
  sub_25E711DB8(0, (unint64_t *)&unk_26A704940);
  id v71 = v31;
  id v72 = (void *)sub_25E75BF20();
  (*(void (**)(uint64_t, void *, void *, void *, double))(a2 + 16))(a2, v70, v72, v42, v8);

  sub_25E74B680(v41, v69);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

id sub_25E75B8EC()
{
  id v1 = *(void **)(v0 + 16);
  objc_msgSend(v1, sel_bounds);
  return objc_msgSend(v1, sel_drawViewHierarchyInRect_afterScreenUpdates_, 1);
}

uint64_t sub_25E75B93C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t SUIAFrameRateRange.caFrameRateRange.getter()
{
  return sub_25E75BFF0();
}

uint64_t SUIAFrameRateReason.caHighFrameRateReason.getter(uint64_t a1, uint64_t a2)
{
  int v2 = (*(uint64_t (**)(void))(a2 + 16))();
  sub_25E75BF00();
  return v4 | (v2 << 16);
}

BOOL static SUIAFrameRateRange.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t SUIAFrameRateRange.hash(into:)()
{
  return sub_25E75C1F0();
}

uint64_t SUIAFrameRateRange.hashValue.getter()
{
  return sub_25E75C200();
}

BOOL sub_25E75BAE4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

Swift::UInt32 __swiftcall SUIAHighFrameRateReasonMake(componentID:reason:)(Swift::UInt32 componentID, Swift::UInt32 reason)
{
  return (unsigned __int16)reason | ((unsigned __int16)componentID << 16);
}

unint64_t sub_25E75BB08()
{
  unint64_t result = qword_26A704BE0;
  if (!qword_26A704BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A704BE0);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SUIAFrameRateRange(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SUIAFrameRateRange(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x25E75BCB8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_25E75BCE0(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SUIAFrameRateRange()
{
  return &type metadata for SUIAFrameRateRange;
}

uint64_t dispatch thunk of static SUIAFrameRateReason.componentID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_25E75BD0C()
{
  return MEMORY[0x270FA0228](v0, 16, 7);
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

uint64_t sub_25E75BD40()
{
  return MEMORY[0x270EEE628]();
}

uint64_t sub_25E75BD50()
{
  return MEMORY[0x270EEE638]();
}

uint64_t sub_25E75BD60()
{
  return MEMORY[0x270EEE670]();
}

uint64_t sub_25E75BD70()
{
  return MEMORY[0x270EEE688]();
}

uint64_t sub_25E75BD80()
{
  return MEMORY[0x270EEFC10]();
}

uint64_t sub_25E75BD90()
{
  return MEMORY[0x270EEFE20]();
}

uint64_t sub_25E75BDA0()
{
  return MEMORY[0x270EEFF40]();
}

uint64_t sub_25E75BDB0()
{
  return MEMORY[0x270EEFF68]();
}

uint64_t sub_25E75BDC0()
{
  return MEMORY[0x270EF0070]();
}

uint64_t sub_25E75BDD0()
{
  return MEMORY[0x270EF0178]();
}

uint64_t sub_25E75BDE0()
{
  return MEMORY[0x270EF01C0]();
}

uint64_t sub_25E75BDF0()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_25E75BE00()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_25E75BE10()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_25E75BE20()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_25E75BE30()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_25E75BE40()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_25E75BE50()
{
  return MEMORY[0x270EF17B0]();
}

uint64_t sub_25E75BE60()
{
  return MEMORY[0x270F9D088]();
}

uint64_t sub_25E75BE70()
{
  return MEMORY[0x270F9D320]();
}

uint64_t sub_25E75BE80()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_25E75BE90()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_25E75BEA0()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_25E75BEB0()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_25E75BEC0()
{
  return MEMORY[0x270EF1A50]();
}

uint64_t sub_25E75BED0()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_25E75BEE0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_25E75BEF0()
{
  return MEMORY[0x270F9D7C0]();
}

uint64_t sub_25E75BF00()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_25E75BF10()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_25E75BF20()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_25E75BF30()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_25E75BF40()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_25E75BF50()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_25E75BF60()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_25E75BF70()
{
  return MEMORY[0x270EF1BD8]();
}

uint64_t sub_25E75BF80()
{
  return MEMORY[0x270EF1C18]();
}

uint64_t sub_25E75BF90()
{
  return MEMORY[0x270F9DD60]();
}

uint64_t sub_25E75BFA0()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_25E75BFB0()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_25E75BFC0()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_25E75BFD0()
{
  return MEMORY[0x270EE5848]();
}

uint64_t sub_25E75BFE0()
{
  return MEMORY[0x270FA1280]();
}

uint64_t sub_25E75BFF0()
{
  return MEMORY[0x270FA1288]();
}

uint64_t sub_25E75C000()
{
  return MEMORY[0x270EF20B8]();
}

uint64_t sub_25E75C010()
{
  return MEMORY[0x270EF2170]();
}

uint64_t sub_25E75C020()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_25E75C040()
{
  return MEMORY[0x270F9E398]();
}

uint64_t sub_25E75C050()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_25E75C060()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_25E75C070()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_25E75C080()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_25E75C090()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_25E75C0A0()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_25E75C0B0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_25E75C0C0()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_25E75C0D0()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_25E75C0E0()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_25E75C0F0()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_25E75C100()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_25E75C110()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_25E75C120()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_25E75C130()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_25E75C140()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_25E75C150()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_25E75C160()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_25E75C170()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_25E75C180()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_25E75C190()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_25E75C1A0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_25E75C1B0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_25E75C1C0()
{
  return MEMORY[0x270F9FC40]();
}

uint64_t sub_25E75C1D0()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_25E75C1E0()
{
  return MEMORY[0x270F9FC50]();
}

uint64_t sub_25E75C1F0()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_25E75C200()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t BSFloatApproximatelyEqualToFloat()
{
  return MEMORY[0x270F107D0]();
}

uint64_t BSFloatEqualToFloat()
{
  return MEMORY[0x270F107E8]();
}

uint64_t BSFloatIsOne()
{
  return MEMORY[0x270F10808]();
}

uint64_t BSFloatIsZero()
{
  return MEMORY[0x270F10810]();
}

uint64_t BSRectCenteredAboutPoint()
{
  return MEMORY[0x270F108B0]();
}

uint64_t BSRectWithSize()
{
  return MEMORY[0x270F108D8]();
}

BOOL CAFrameRateRangeIsEqualToRange(CAFrameRateRange range, CAFrameRateRange other)
{
  return MEMORY[0x270EFB7A8](*(__n128 *)&range.minimum, *(__n128 *)&range.maximum, *(__n128 *)&range.preferred, *(__n128 *)&other.minimum, *(__n128 *)&other.maximum, *(__n128 *)&other.preferred);
}

CGAffineTransform *__cdecl CATransform3DGetAffineTransform(CGAffineTransform *__return_ptr retstr, CATransform3D *t)
{
  return (CGAffineTransform *)MEMORY[0x270EFB908](retstr, t);
}

CATransform3D *__cdecl CATransform3DMakeRotation(CATransform3D *__return_ptr retstr, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return (CATransform3D *)MEMORY[0x270EFB938](retstr, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DMakeScale(CATransform3D *__return_ptr retstr, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x270EFB948](retstr, sx, sy, sz);
}

CATransform3D *__cdecl CATransform3DRotate(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat angle, CGFloat x, CGFloat y, CGFloat z)
{
  return (CATransform3D *)MEMORY[0x270EFB960](retstr, t, angle, x, y, z);
}

CATransform3D *__cdecl CATransform3DScale(CATransform3D *__return_ptr retstr, CATransform3D *t, CGFloat sx, CGFloat sy, CGFloat sz)
{
  return (CATransform3D *)MEMORY[0x270EFB970](retstr, t, sx, sy, sz);
}

void CFRunLoopPerformBlock(CFRunLoopRef rl, CFTypeRef mode, void *block)
{
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x270EE59E8](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

void *__cdecl CGBitmapContextGetData(CGContextRef context)
{
  return (void *)MEMORY[0x270EE5A48](context);
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

CGColorSpaceRef CGImageGetColorSpace(CGImageRef image)
{
  return (CGColorSpaceRef)MEMORY[0x270EE67D8](image);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x270EE6800](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x270EE6868](image);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x270EE71A0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  MEMORY[0x270EE71A8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x270EE71C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x270EE71D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x270EE71D8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  MEMORY[0x270EE71F0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x270EE71F8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x270EE7210]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetWidth(CGRect rect)
{
  MEMORY[0x270EE7218]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

uint64_t UIAnimationDragCoefficient()
{
  return MEMORY[0x270F82CA0]();
}

uint64_t UIDistanceBetweenPoints()
{
  return MEMORY[0x270F82CF0]();
}

NSData *__cdecl UIImagePNGRepresentation(UIImage *image)
{
  return (NSData *)MEMORY[0x270F82DD8](image);
}

uint64_t UIRectGetCenter()
{
  return MEMORY[0x270F82EB8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _UIUpdateRequestActivate()
{
  return MEMORY[0x270F83020]();
}

void bzero(void *a1, size_t a2)
{
}

void dispatch_after(dispatch_time_t when, dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x270ED95A8](when, delta);
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_enumerationMutation(id obj)
{
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x270F9A688](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x270F9A6B0](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x270F9A728]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x270F9A898](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastObjCClassUnconditional()
{
  return MEMORY[0x270FA0290]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x270FA0410]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x270FA0648]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x270FA0650]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x270FA0658]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

void uuid_generate(uuid_t out)
{
}

void uuid_unparse_upper(const uuid_t uu, uuid_string_t out)
{
}