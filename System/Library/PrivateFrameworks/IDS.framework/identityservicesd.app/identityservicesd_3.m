uint64_t sub_1004FFC98(void *a1)
{
  void *v1;
  id v3;
  id v4;
  void *v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  os_unfair_lock_s *v21;
  uint64_t v23;

  v3 = v1;
  v4 = a1;
  v5 = v3;
  v6 = v4;
  v7 = sub_100725EB0();
  v8 = sub_1007266E0();
  if (os_log_type_enabled(v7, v8))
  {
    v9 = swift_slowAlloc();
    v10 = (void *)swift_slowAlloc();
    v23 = swift_slowAlloc();
    *(_DWORD *)v9 = 136315394;
    v11 = *(void *)((char *)v5 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id);
    v12 = *(void *)((char *)v5 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8);
    swift_bridgeObjectRetain();
    sub_10043E578(v11, v12, &v23);
    sub_100726830();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    v13 = v6;
    sub_100726830();
    *v10 = v6;

    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Group %s: removeParticipant: removing participant %@", (uint8_t *)v9, 0x16u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  v17 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *v5) + 0x158))(v14, v15, v16);
  v19 = __chkstk_darwin(v17, v18);
  v21 = (os_unfair_lock_s *)(__chkstk_darwin(v19, v20) + 16);
  os_unfair_lock_lock(v21);
  sub_100482E74();
  os_unfair_lock_unlock(v21);
  return swift_release();
}

void sub_1004FFFD4()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2D8))();
  if (v1)
  {
    id v2 = (id)v1;
    (*(void (**)(void))((swift_isaMask & *v0) + 0x300))();
  }
}

uint64_t sub_10050018C()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x158))() + 16);
  os_unfair_lock_lock(v1);
  sub_100482E74();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

uint64_t sub_10050023C(uint64_t a1)
{
  unint64_t v2 = sub_1004F76EC((uint64_t)_swiftEmptyArrayStorage, &qword_100A47488, (uint64_t (*)(id))sub_1004F2D60);
  v3 = (unint64_t *)(a1
                          + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsByPushToken);
  swift_beginAccess();
  unint64_t *v3 = v2;
  swift_bridgeObjectRelease();
  unint64_t v4 = sub_10050C5A8(_swiftEmptyArrayStorage);
  v5 = (unint64_t *)(a1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsByID);
  swift_beginAccess();
  unint64_t *v5 = v4;
  swift_bridgeObjectRelease();
  unint64_t v6 = sub_10050C5A8(_swiftEmptyArrayStorage);
  v7 = (unint64_t *)(a1
                          + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_formerlyActiveParticipantsByID);
  swift_beginAccess();
  unint64_t *v7 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100500400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if ((*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x128))())
  {
    uint64_t v6 = v5;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void, uint64_t, uint64_t))(v6 + 8))(*(void *)(a1 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken), ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v9 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v10(a2, 1, 1, v9);
  }
}

uint64_t sub_100500514()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x390))();
}

uint64_t sub_100500550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100500568(a1, a2, a3, a4, a5, a6, 0);
}

uint64_t sub_100500560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100500568(a1, a2, a3, a4, a5, a6, 1);
}

uint64_t sub_100500568(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((swift_isaMask & *v7)
                                                                                                  + 0x338))(a1, a7, a2, a3, a4, a5, a6);
}

id sub_1005005C8(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13 = sub_100726390();
  uint64_t v14 = sub_100726430();
  uint64_t v16 = v15;
  v17 = *(uint64_t (**)(uint64_t, uint64_t, id, id, uint64_t, uint64_t, uint64_t))((swift_isaMask & *a1) + 0x338);
  id v18 = a4;
  id v19 = a5;
  v20 = a1;
  v21 = (void *)v17(v13, a8, v18, v19, v14, v16, a7);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v21;
}

uint64_t sub_10050070C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v217 = a7;
  uint64_t v218 = a6;
  uint64_t v219 = a5;
  uint64_t v220 = a3;
  uint64_t v10 = sub_100431F80(&qword_100A44D30);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  unint64_t v214 = (unint64_t)&v209 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  v17 = (char *)&v209 - v16;
  uint64_t v19 = __chkstk_darwin(v15, v18);
  v21 = (char *)&v209 - v20;
  __chkstk_darwin(v19, v22);
  uint64_t v222 = (uint64_t)&v209 - v23;
  uint64_t v24 = sub_100725D30();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v223 = v24;
  uint64_t v224 = v25;
  uint64_t v27 = __chkstk_darwin(v24, v26);
  unint64_t v215 = (unint64_t)&v209 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  uint64_t v216 = (uint64_t)&v209 - v30;
  v221 = v7;
  v31 = (char *)v7 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_l;
  swift_bridgeObjectRetain_n();
  v32 = sub_100725EB0();
  os_log_type_t v33 = sub_1007266E0();
  BOOL v34 = os_log_type_enabled(v32, v33);
  v213 = v21;
  if (v34)
  {
    uint64_t v35 = swift_slowAlloc();
    v210 = (void (*)(void))swift_slowAlloc();
    *(void *)&long long v227 = v210;
    *(_DWORD *)uint64_t v35 = 136315394;
    v212 = v17;
    uint64_t v225 = sub_10043E578(0xD000000000000051, 0x80000001008C4D00, (uint64_t *)&v227);
    LODWORD(v211) = a2;
    sub_100726830();
    *(_WORD *)(v35 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_1007263A0();
    v37 = v31;
    unint64_t v39 = v38;
    swift_bridgeObjectRelease();
    uint64_t v225 = sub_10043E578(v36, v39, (uint64_t *)&v227);
    char v40 = v211;
    v17 = v212;
    sub_100726830();
    swift_bridgeObjectRelease_n();
    v31 = v37;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "%s: dict: %s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if (v40)
    {
LABEL_3:
      uint64_t v41 = sub_100726430();
      if (*(void *)(a1 + 16) && (unint64_t v43 = sub_10045C784(v41, v42), (v44 & 1) != 0))
      {
        sub_10044C6FC(*(void *)(a1 + 56) + 32 * v43, (uint64_t)&v227);
      }
      else
      {
        long long v227 = 0u;
        long long v228 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v228 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v50 = v225;
          unint64_t v49 = v226;
          uint64_t v51 = sub_100726430();
          if (*(void *)(a1 + 16) && (unint64_t v53 = sub_10045C784(v51, v52), (v54 & 1) != 0))
          {
            sub_10044C6FC(*(void *)(a1 + 56) + 32 * v53, (uint64_t)&v227);
          }
          else
          {
            long long v227 = 0u;
            long long v228 = 0u;
          }
          swift_bridgeObjectRelease();
          if (*((void *)&v228 + 1))
          {
            if (swift_dynamicCast())
            {
              uint64_t v71 = v225;
              unint64_t v72 = v226;
              switch(v226 >> 62)
              {
                case 1uLL:
                  LODWORD(v73) = HIDWORD(v225) - v225;
                  if (__OFSUB__(HIDWORD(v225), v225))
                  {
                    __break(1u);
LABEL_198:
                    __break(1u);
LABEL_199:
                    __break(1u);
LABEL_200:
                    __break(1u);
                  }
                  uint64_t v73 = (int)v73;
LABEL_46:
                  if (v73 == 16)
                  {
                    uint64_t v80 = sub_100726430();
                    if (*(void *)(a1 + 16) && (unint64_t v82 = sub_10045C784(v80, v81), (v83 & 1) != 0))
                    {
                      sub_10044C6FC(*(void *)(a1 + 56) + 32 * v82, (uint64_t)&v227);
                    }
                    else
                    {
                      long long v227 = 0u;
                      long long v228 = 0u;
                    }
                    swift_bridgeObjectRelease();
                    if (*((void *)&v228 + 1))
                    {
                      if (swift_dynamicCast())
                      {
                        uint64_t v216 = a1;
                        uint64_t v89 = v225;
                        unint64_t v90 = v226 >> 62;
                        switch(v226 >> 62)
                        {
                          case 1uLL:
                            LODWORD(v91) = HIDWORD(v225) - v225;
                            if (__OFSUB__(HIDWORD(v225), v225))
                            {
                              __break(1u);
LABEL_202:
                              __break(1u);
LABEL_203:
                              __break(1u);
LABEL_204:
                              __break(1u);
LABEL_205:
                              __break(1u);
                              goto LABEL_206;
                            }
                            uint64_t v91 = (int)v91;
LABEL_84:
                            if (v91 == 16)
                            {
                              v209 = v31;
                              v212 = (char *)v72;
                              v213 = (char *)v226;
                              uint64_t v222 = v71;
                              if (v90)
                              {
                                if (v90 == 1)
                                {
                                  if ((int)v225 <= v225 >> 32)
                                  {
                                    sub_100441FD4(v225, v226);
                                    uint64_t v107 = sub_100725910();
                                    if (!v107)
                                    {
LABEL_91:
                                      sub_100725930();
                                      sub_100502540(v107, (uint64_t)v17);
                                      sub_100442248(v89, (unint64_t)v213);
                                      uint64_t v109 = v223;
                                      goto LABEL_129;
                                    }
                                    uint64_t v108 = sub_100725940();
                                    if (!__OFSUB__((int)v89, v108))
                                    {
                                      v107 += (int)v89 - v108;
                                      goto LABEL_91;
                                    }
                                    goto LABEL_209;
                                  }
                                  goto LABEL_205;
                                }
                                uint64_t v129 = *(void *)(v225 + 16);
                                uint64_t v130 = *(void *)(v225 + 24);
                                swift_retain();
                                swift_retain();
                                uint64_t v131 = sub_100725910();
                                if (v131)
                                {
                                  uint64_t v132 = sub_100725940();
                                  if (__OFSUB__(v129, v132))
                                  {
LABEL_211:
                                    __break(1u);
                                    goto LABEL_212;
                                  }
                                  v131 += v129 - v132;
                                }
                                if (__OFSUB__(v130, v129)) {
                                  goto LABEL_207;
                                }
                                sub_100725930();
                                sub_100502540(v131, (uint64_t)v17);
                                swift_release();
                                swift_release();
                                uint64_t v109 = v223;
                              }
                              else
                              {
                                unint64_t v211 = v49;
                                LODWORD(v227) = v225;
                                WORD2(v227) = WORD2(v225);
                                *(_DWORD *)((char *)&v227 + 6) = __PAIR32__(v226, HIWORD(v225));
                                *(_DWORD *)((char *)&v227 + 10) = *(_DWORD *)((char *)&v226 + 2);
                                id v121 = objc_allocWithZone((Class)NSUUID);
                                id v122 = objc_msgSend(v121, "initWithUUIDBytes:", &v227, v209);
                                uint64_t v123 = v224;
                                v124 = *(void (**)(void))(v224 + 56);
                                v210 = v124;
                                if (v122)
                                {
                                  v125 = v122;
                                  uint64_t v126 = 1;
                                  unint64_t v127 = v214;
                                  uint64_t v109 = v223;
                                  ((void (*)(unint64_t, uint64_t, uint64_t, uint64_t))v124)(v214, 1, 1, v223);
                                  sub_10050DC4C(&qword_100A47438, (void (*)(uint64_t))&type metadata accessor for UUID);
                                  sub_100726C00();

                                  int v128 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v123 + 48))(v127, 1, v109);
                                  unint64_t v49 = v211;
                                  if (v128 != 1)
                                  {
                                    (*(void (**)(char *, unint64_t, uint64_t))(v224 + 32))(v17, v127, v109);
                                    uint64_t v126 = 0;
                                  }
                                }
                                else
                                {
                                  uint64_t v126 = 1;
                                  uint64_t v109 = v223;
                                  unint64_t v49 = v211;
                                }
                                ((void (*)(char *, uint64_t, uint64_t, uint64_t))v210)(v17, v126, 1, v109);
                                unint64_t v72 = (unint64_t)v212;
                              }
                              uint64_t v71 = v222;
LABEL_129:
                              uint64_t v145 = v224;
                              if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48))(v17, 1, v109) == 1)
                              {
                                sub_10044C150((uint64_t)v17, &qword_100A44D30);
                                v84 = sub_100725EB0();
                                os_log_type_t v146 = sub_1007266C0();
                                if (os_log_type_enabled(v84, v146))
                                {
                                  v147 = (uint8_t *)swift_slowAlloc();
                                  *(void *)&long long v227 = swift_slowAlloc();
                                  *(_DWORD *)v147 = 136315138;
                                  uint64_t v225 = sub_10043E578(0xD000000000000051, 0x80000001008C4D00, (uint64_t *)&v227);
                                  sub_100726830();
                                  _os_log_impl((void *)&_mh_execute_header, v84, v146, "%s: failed to parse SKI", v147, 0xCu);
                                  swift_arrayDestroy();
                                  swift_slowDealloc();
                                  swift_slowDealloc();
                                  sub_100442248(v89, (unint64_t)v213);
                                  sub_100442248(v222, (unint64_t)v212);
                                  goto LABEL_53;
                                }
                                sub_100442248(v89, (unint64_t)v213);
                                goto LABEL_140;
                              }
                              (*(void (**)(unint64_t, char *, uint64_t))(v145 + 32))(v215, v17, v109);
                              uint64_t v148 = sub_100726430();
                              uint64_t v150 = v216;
                              if (*(void *)(v216 + 16) && (unint64_t v151 = sub_10045C784(v148, v149), (v152 & 1) != 0))
                              {
                                sub_10044C6FC(*(void *)(v150 + 56) + 32 * v151, (uint64_t)&v227);
                              }
                              else
                              {
                                long long v227 = 0u;
                                long long v228 = 0u;
                              }
                              swift_bridgeObjectRelease();
                              if (*((void *)&v228 + 1))
                              {
                                if (swift_dynamicCast())
                                {
                                  uint64_t v153 = v225;
LABEL_143:
                                  unsigned int v154 = sub_1005350CC(v153);
                                  if (v154 == 3) {
                                    uint64_t v155 = 1;
                                  }
                                  else {
                                    uint64_t v155 = v154;
                                  }
                                  uint64_t v156 = sub_100726430();
                                  sub_1004FC050(v156, v157, v216, &v227);
                                  swift_bridgeObjectRelease();
                                  if (*((void *)&v228 + 1))
                                  {
                                    int v158 = swift_dynamicCast();
                                    if (v158) {
                                      uint64_t v159 = v225;
                                    }
                                    else {
                                      uint64_t v159 = 0;
                                    }
                                    char v160 = v158 ^ 1;
                                  }
                                  else
                                  {
                                    sub_10044C150((uint64_t)&v227, &qword_100A44F00);
                                    uint64_t v159 = 0;
                                    char v160 = 1;
                                  }
                                  uint64_t v161 = sub_100726430();
                                  sub_1004FC050(v161, v162, v216, &v227);
                                  swift_bridgeObjectRelease();
                                  if (*((void *)&v228 + 1))
                                  {
                                    int v163 = swift_dynamicCast();
                                    uint64_t v164 = v225;
                                    unsigned __int8 v165 = v163 ^ 1;
                                    if (!v163) {
                                      uint64_t v164 = 0;
                                    }
                                  }
                                  else
                                  {
                                    sub_10044C150((uint64_t)&v227, &qword_100A44F00);
                                    uint64_t v164 = 0;
                                    unsigned __int8 v165 = 1;
                                  }
                                  v166 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, char *, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char, unint64_t, _WORD))((swift_isaMask & *v221) + 0x340);
                                  LOBYTE(v227) = v165;
                                  char v206 = v160;
                                  uint64_t v205 = v159;
                                  unint64_t v167 = v215;
                                  uint64_t v168 = v222;
                                  unint64_t v169 = (unint64_t)v212;
                                  uint64_t v100 = v166(1, v215, v222, v212, v50, v49, v155, v220, v219, v218, v205, v206, v164 | ((unint64_t)v165 << 32), v217 & 1);
                                  sub_100442248(v89, (unint64_t)v213);
                                  sub_100442248(v168, v169);
                                  sub_100442248(v50, v49);
                                  (*(void (**)(unint64_t, uint64_t))(v224 + 8))(v167, v223);
                                  return v100;
                                }
                              }
                              else
                              {
                                sub_10044C150((uint64_t)&v227, &qword_100A44F00);
                              }
                              uint64_t v153 = -1;
                              goto LABEL_143;
                            }
LABEL_92:
                            sub_100442248(v225, v226);
                            break;
                          case 2uLL:
                            uint64_t v106 = *(void *)(v225 + 16);
                            uint64_t v105 = *(void *)(v225 + 24);
                            BOOL v79 = __OFSUB__(v105, v106);
                            uint64_t v91 = v105 - v106;
                            if (!v79) {
                              goto LABEL_84;
                            }
                            goto LABEL_202;
                          case 3uLL:
                            goto LABEL_92;
                          default:
                            uint64_t v91 = BYTE6(v226);
                            goto LABEL_84;
                        }
                      }
                    }
                    else
                    {
                      sub_10044C150((uint64_t)&v227, &qword_100A44F00);
                    }
                    v84 = sub_100725EB0();
                    os_log_type_t v110 = sub_1007266C0();
                    if (os_log_type_enabled(v84, v110))
                    {
                      uint64_t v111 = swift_slowAlloc();
                      uint64_t v112 = swift_slowAlloc();
                      uint64_t v222 = v71;
                      *(void *)&long long v227 = v112;
                      *(_DWORD *)uint64_t v111 = 136315394;
                      uint64_t v225 = sub_10043E578(0xD000000000000051, 0x80000001008C4D00, (uint64_t *)&v227);
                      sub_100726830();
                      *(_WORD *)(v111 + 12) = 1024;
                      LODWORD(v225) = 16;
                      sub_100726830();
                      _os_log_impl((void *)&_mh_execute_header, v84, v110, "%s: ski not %d bytes", (uint8_t *)v111, 0x12u);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();
                      sub_100442248(v222, v72);
LABEL_53:
                      uint64_t v87 = v50;
                      unint64_t v88 = v49;
LABEL_71:
                      sub_100442248(v87, v88);

                      return 0;
                    }
LABEL_140:
                    sub_100442248(v71, v72);
                    goto LABEL_53;
                  }
LABEL_50:
                  sub_100442248(v225, v226);
                  break;
                case 2uLL:
                  uint64_t v78 = *(void *)(v225 + 16);
                  uint64_t v77 = *(void *)(v225 + 24);
                  BOOL v79 = __OFSUB__(v77, v78);
                  uint64_t v73 = v77 - v78;
                  if (!v79) {
                    goto LABEL_46;
                  }
                  goto LABEL_198;
                case 3uLL:
                  goto LABEL_50;
                default:
                  uint64_t v73 = BYTE6(v226);
                  goto LABEL_46;
              }
            }
          }
          else
          {
            sub_10044C150((uint64_t)&v227, &qword_100A44F00);
          }
          v84 = sub_100725EB0();
          os_log_type_t v85 = sub_1007266C0();
          if (os_log_type_enabled(v84, v85))
          {
            uint64_t v86 = swift_slowAlloc();
            *(void *)&long long v227 = swift_slowAlloc();
            *(_DWORD *)uint64_t v86 = 136315394;
            uint64_t v225 = sub_10043E578(0xD000000000000051, 0x80000001008C4D00, (uint64_t *)&v227);
            sub_100726830();
            *(_WORD *)(v86 + 12) = 1024;
            LODWORD(v225) = 16;
            sub_100726830();
            _os_log_impl((void *)&_mh_execute_header, v84, v85, "%s: sks not %d bytes", (uint8_t *)v86, 0x12u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          goto LABEL_53;
        }
      }
      else
      {
        sub_10044C150((uint64_t)&v227, &qword_100A44F00);
      }
      swift_bridgeObjectRetain_n();
      v61 = sub_100725EB0();
      os_log_type_t v62 = sub_1007266C0();
      if (os_log_type_enabled(v61, v62))
      {
        uint64_t v63 = swift_slowAlloc();
        *(void *)&long long v227 = swift_slowAlloc();
        *(_DWORD *)uint64_t v63 = 136315394;
        uint64_t v225 = sub_10043E578(0xD000000000000051, 0x80000001008C4D00, (uint64_t *)&v227);
        sub_100726830();
        *(_WORD *)(v63 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v64 = sub_1007263A0();
        unint64_t v66 = v65;
        swift_bridgeObjectRelease();
        uint64_t v225 = sub_10043E578(v64, v66, (uint64_t *)&v227);
        sub_100726830();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        v67 = "%s: no skm data in %s";
LABEL_28:
        _os_log_impl((void *)&_mh_execute_header, v61, v62, v67, (uint8_t *)v63, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
LABEL_30:

        return 0;
      }
      goto LABEL_29;
    }
  }
  else
  {
    swift_bridgeObjectRelease_n();

    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v45 = sub_100726430();
  if (*(void *)(a1 + 16) && (unint64_t v47 = sub_10045C784(v45, v46), (v48 & 1) != 0))
  {
    sub_10044C6FC(*(void *)(a1 + 56) + 32 * v47, (uint64_t)&v227);
  }
  else
  {
    long long v227 = 0u;
    long long v228 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v228 + 1))
  {
    sub_10044C150((uint64_t)&v227, &qword_100A44F00);
LABEL_26:
    swift_bridgeObjectRetain_n();
    v61 = sub_100725EB0();
    os_log_type_t v62 = sub_1007266C0();
    if (os_log_type_enabled(v61, v62))
    {
      uint64_t v63 = swift_slowAlloc();
      *(void *)&long long v227 = swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 136315394;
      uint64_t v225 = sub_10043E578(0xD000000000000051, 0x80000001008C4D00, (uint64_t *)&v227);
      sub_100726830();
      *(_WORD *)(v63 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_1007263A0();
      unint64_t v70 = v69;
      swift_bridgeObjectRelease();
      uint64_t v225 = sub_10043E578(v68, v70, (uint64_t *)&v227);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      v67 = "%s: no mkm data in %s";
      goto LABEL_28;
    }
LABEL_29:
    swift_bridgeObjectRelease_n();
    goto LABEL_30;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_26;
  }
  uint64_t v55 = v225;
  unint64_t v56 = v226;
  uint64_t v57 = sub_100726430();
  if (*(void *)(a1 + 16) && (unint64_t v59 = sub_10045C784(v57, v58), (v60 & 1) != 0))
  {
    sub_10044C6FC(*(void *)(a1 + 56) + 32 * v59, (uint64_t)&v227);
  }
  else
  {
    long long v227 = 0u;
    long long v228 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v228 + 1))
  {
    sub_10044C150((uint64_t)&v227, &qword_100A44F00);
    goto LABEL_67;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_67;
  }
  uint64_t v74 = v225;
  unint64_t v75 = v226;
  switch(v226 >> 62)
  {
    case 1uLL:
      LODWORD(v76) = HIDWORD(v225) - v225;
      if (__OFSUB__(HIDWORD(v225), v225)) {
        goto LABEL_199;
      }
      uint64_t v76 = (int)v76;
LABEL_62:
      if (v76 != 16)
      {
LABEL_66:
        sub_100442248(v225, v226);
LABEL_67:
        v84 = sub_100725EB0();
        os_log_type_t v98 = sub_1007266C0();
        if (os_log_type_enabled(v84, v98))
        {
          uint64_t v99 = swift_slowAlloc();
          *(void *)&long long v227 = swift_slowAlloc();
          *(_DWORD *)uint64_t v99 = 136315394;
          uint64_t v225 = sub_10043E578(0xD000000000000051, 0x80000001008C4D00, (uint64_t *)&v227);
          sub_100726830();
          *(_WORD *)(v99 + 12) = 1024;
          LODWORD(v225) = 16;
          sub_100726830();
          _os_log_impl((void *)&_mh_execute_header, v84, v98, "%s: mks not %d", (uint8_t *)v99, 0x12u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        goto LABEL_69;
      }
      uint64_t v94 = sub_100726430();
      if (*(void *)(a1 + 16) && (unint64_t v96 = sub_10045C784(v94, v95), (v97 & 1) != 0))
      {
        sub_10044C6FC(*(void *)(a1 + 56) + 32 * v96, (uint64_t)&v227);
      }
      else
      {
        long long v227 = 0u;
        long long v228 = 0u;
      }
      swift_bridgeObjectRelease();
      if (!*((void *)&v228 + 1))
      {
        sub_10044C150((uint64_t)&v227, &qword_100A44F00);
        goto LABEL_107;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_107;
      }
      unint64_t v215 = v75;
      uint64_t v102 = v225;
      unint64_t v103 = v226 >> 62;
      switch(v226 >> 62)
      {
        case 1uLL:
          LODWORD(v104) = HIDWORD(v225) - v225;
          if (__OFSUB__(HIDWORD(v225), v225)) {
            goto LABEL_203;
          }
          uint64_t v104 = (int)v104;
LABEL_98:
          if (v104 != 16)
          {
LABEL_106:
            sub_100442248(v225, v226);
            unint64_t v75 = v215;
LABEL_107:
            v84 = sub_100725EB0();
            os_log_type_t v119 = sub_1007266C0();
            if (os_log_type_enabled(v84, v119))
            {
              uint64_t v120 = swift_slowAlloc();
              *(void *)&long long v227 = swift_slowAlloc();
              *(_DWORD *)uint64_t v120 = 136315394;
              unint64_t v215 = v75;
              uint64_t v225 = sub_10043E578(0xD000000000000051, 0x80000001008C4D00, (uint64_t *)&v227);
              sub_100726830();
              *(_WORD *)(v120 + 12) = 1024;
              LODWORD(v225) = 16;
              sub_100726830();
              _os_log_impl((void *)&_mh_execute_header, v84, v119, "%s: mki not %d bytes", (uint8_t *)v120, 0x12u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              sub_100442248(v74, v215);
            }
            else
            {
              sub_100442248(v74, v75);
            }
LABEL_69:
            uint64_t v87 = v55;
LABEL_70:
            unint64_t v88 = v56;
            goto LABEL_71;
          }
          v209 = v31;
          v212 = (char *)v55;
          unint64_t v214 = v226;
          if (v103)
          {
            if (v103 == 1)
            {
              uint64_t v115 = v224;
              if ((int)v225 > v225 >> 32)
              {
LABEL_206:
                __break(1u);
LABEL_207:
                __break(1u);
LABEL_208:
                __break(1u);
LABEL_209:
                __break(1u);
                goto LABEL_210;
              }
              sub_100441FD4(v225, v226);
              uint64_t v116 = sub_100725910();
              if (v116)
              {
                uint64_t v117 = sub_100725940();
                if (__OFSUB__((int)v102, v117))
                {
LABEL_210:
                  __break(1u);
                  goto LABEL_211;
                }
                v116 += (int)v102 - v117;
              }
              sub_100725930();
              uint64_t v118 = v222;
              sub_100502540(v116, v222);
              sub_100442248(v102, v214);
            }
            else
            {
              uint64_t v140 = *(void *)(v225 + 16);
              uint64_t v141 = *(void *)(v225 + 24);
              swift_retain();
              swift_retain();
              uint64_t v142 = sub_100725910();
              uint64_t v115 = v224;
              if (v142)
              {
                uint64_t v143 = sub_100725940();
                if (__OFSUB__(v140, v143))
                {
LABEL_212:
                  __break(1u);
                  JUMPOUT(0x100502500);
                }
                v142 += v140 - v143;
              }
              if (__OFSUB__(v141, v140)) {
                goto LABEL_208;
              }
              sub_100725930();
              uint64_t v144 = v222;
              sub_100502540(v142, v222);
              uint64_t v118 = v144;
              swift_release();
              swift_release();
            }
          }
          else
          {
            unint64_t v211 = v56;
            LODWORD(v227) = v225;
            WORD2(v227) = WORD2(v225);
            *(_DWORD *)((char *)&v227 + 6) = __PAIR32__(v226, HIWORD(v225));
            *(_DWORD *)((char *)&v227 + 10) = *(_DWORD *)((char *)&v226 + 2);
            id v133 = objc_allocWithZone((Class)NSUUID);
            id v134 = objc_msgSend(v133, "initWithUUIDBytes:", &v227, v209);
            uint64_t v135 = v224;
            v136 = *(void (**)(void))(v224 + 56);
            v210 = v136;
            if (v134)
            {
              v137 = v134;
              unint64_t v138 = (unint64_t)v213;
              uint64_t v139 = v223;
              ((void (*)(char *, uint64_t, uint64_t, uint64_t))v136)(v213, 1, 1, v223);
              sub_10050DC4C(&qword_100A47438, (void (*)(uint64_t))&type metadata accessor for UUID);
              sub_100726C00();

              uint64_t v115 = v135;
              if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v135 + 48))(v138, 1, v139) != 1) {
                (*(void (**)(uint64_t, unint64_t, uint64_t))(v135 + 32))(v222, v138, v139);
              }
            }
            else
            {
              uint64_t v115 = v224;
            }
            uint64_t v118 = v222;
            v210();
            unint64_t v56 = v211;
          }
          uint64_t v170 = v223;
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v118, 1, v223) == 1)
          {
            sub_10044C150(v118, &qword_100A44D30);
            v84 = sub_100725EB0();
            os_log_type_t v171 = sub_1007266C0();
            if (os_log_type_enabled(v84, v171))
            {
              v172 = (uint8_t *)swift_slowAlloc();
              *(void *)&long long v227 = swift_slowAlloc();
              *(_DWORD *)v172 = 136315138;
              uint64_t v225 = sub_10043E578(0xD000000000000051, 0x80000001008C4D00, (uint64_t *)&v227);
              sub_100726830();
              _os_log_impl((void *)&_mh_execute_header, v84, v171, "%s: failed to parse MKI", v172, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            sub_100442248(v102, v214);
            sub_100442248(v74, v215);
            uint64_t v87 = (uint64_t)v212;
            goto LABEL_70;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v115 + 32))(v216, v118, v170);
          uint64_t v173 = sub_100726430();
          if (*(void *)(a1 + 16) && (unint64_t v175 = sub_10045C784(v173, v174), (v176 & 1) != 0))
          {
            sub_10044C6FC(*(void *)(a1 + 56) + 32 * v175, (uint64_t)&v227);
          }
          else
          {
            long long v227 = 0u;
            long long v228 = 0u;
          }
          swift_bridgeObjectRelease();
          if (!*((void *)&v228 + 1))
          {
            sub_10044C150((uint64_t)&v227, &qword_100A44F00);
            goto LABEL_172;
          }
          if (!swift_dynamicCast())
          {
LABEL_172:
            uint64_t v177 = -1;
            goto LABEL_173;
          }
          uint64_t v177 = v225;
LABEL_173:
          int v178 = sub_1005350CC(v177);
          if (v178 == 3) {
            int v179 = 1;
          }
          else {
            int v179 = v178;
          }
          uint64_t v180 = sub_100726430();
          uint64_t v182 = *(void *)(a1 + 16);
          LODWORD(v222) = v179;
          if (v182 && (unint64_t v183 = sub_10045C784(v180, v181), (v184 & 1) != 0))
          {
            sub_10044C6FC(*(void *)(a1 + 56) + 32 * v183, (uint64_t)&v227);
          }
          else
          {
            long long v227 = 0u;
            long long v228 = 0u;
          }
          unint64_t v185 = v56;
          swift_bridgeObjectRelease();
          if (*((void *)&v228 + 1))
          {
            if (swift_dynamicCast()) {
              char v186 = v225;
            }
            else {
              char v186 = 0;
            }
          }
          else
          {
            sub_10044C150((uint64_t)&v227, &qword_100A44F00);
            char v186 = 0;
          }
          uint64_t v187 = sub_100726430();
          uint64_t v188 = a1;
          sub_1004FC050(v187, v189, a1, &v227);
          swift_bridgeObjectRelease();
          if (*((void *)&v228 + 1))
          {
            int v190 = swift_dynamicCast();
            if (v190) {
              uint64_t v191 = v225;
            }
            else {
              uint64_t v191 = 0;
            }
            char v192 = v190 ^ 1;
          }
          else
          {
            sub_10044C150((uint64_t)&v227, &qword_100A44F00);
            uint64_t v191 = 0;
            char v192 = 1;
          }
          uint64_t v193 = sub_100726430();
          sub_1004FC050(v193, v194, v188, &v227);
          swift_bridgeObjectRelease();
          if (*((void *)&v228 + 1))
          {
            int v195 = swift_dynamicCast();
            uint64_t v196 = v225;
            unsigned __int8 v197 = v195 ^ 1;
            if (!v195) {
              uint64_t v196 = 0;
            }
          }
          else
          {
            sub_10044C150((uint64_t)&v227, &qword_100A44F00);
            uint64_t v196 = 0;
            unsigned __int8 v197 = 1;
          }
          uint64_t v198 = v224;
          v199 = *(uint64_t (**)(void, uint64_t, uint64_t, unint64_t, char *, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, char, unint64_t, __int16))((swift_isaMask & *v221) + 0x340);
          LOBYTE(v227) = v197;
          HIBYTE(v208) = v186;
          LOBYTE(v208) = v217 & 1;
          char v207 = v192;
          uint64_t v200 = v216;
          uint64_t v201 = v74;
          uint64_t v202 = v74;
          unint64_t v203 = v215;
          uint64_t v204 = (uint64_t)v212;
          uint64_t v100 = v199(0, v216, v201, v215, v212, v185, v222, v220, v219, v218, v191, v207, v196 | ((unint64_t)v197 << 32), v208);
          sub_100442248(v102, v214);
          sub_100442248(v202, v203);
          sub_100442248(v204, v185);
          (*(void (**)(uint64_t, uint64_t))(v198 + 8))(v200, v223);
          return v100;
        case 2uLL:
          uint64_t v114 = *(void *)(v225 + 16);
          uint64_t v113 = *(void *)(v225 + 24);
          BOOL v79 = __OFSUB__(v113, v114);
          uint64_t v104 = v113 - v114;
          if (!v79) {
            goto LABEL_98;
          }
          goto LABEL_204;
        case 3uLL:
          goto LABEL_106;
        default:
          uint64_t v104 = BYTE6(v226);
          goto LABEL_98;
      }
    case 2uLL:
      uint64_t v93 = *(void *)(v225 + 16);
      uint64_t v92 = *(void *)(v225 + 24);
      BOOL v79 = __OFSUB__(v92, v93);
      uint64_t v76 = v92 - v93;
      if (!v79) {
        goto LABEL_62;
      }
      goto LABEL_200;
    case 3uLL:
      goto LABEL_66;
    default:
      uint64_t v76 = BYTE6(v226);
      goto LABEL_62;
  }
}

uint64_t sub_100502540@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100431F80(&qword_100A44D30);
  __chkstk_darwin(v4 - 8, v5);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [objc_allocWithZone((Class)NSUUID) initWithUUIDBytes:a1];
  uint64_t v9 = sub_100725D30();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  if (v8)
  {
    uint64_t v12 = *(void *)(v9 - 8);
    v16[0] = *(void *)(v10 + 56);
    v16[1] = v10 + 56;
    v11(v7, 1, 1, v9);
    sub_10050DC4C(&qword_100A47438, (void (*)(uint64_t))&type metadata accessor for UUID);
    sub_100726C00();

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v7, 1, v9) == 1)
    {
      uint64_t v13 = a2;
      uint64_t v14 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a2, v7, v9);
      uint64_t v13 = a2;
      uint64_t v14 = 0;
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v16[0])(v13, v14, 1, v9);
  }
  else
  {
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v11)(a2, 1, 1, v9);
  }
}

uint64_t sub_100502744(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, unint64_t a13, __int16 a14)
{
  uint64_t v17 = a1 & 1;
  uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v14) + 0x3B0))(a9, a10);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, _BYTE, unint64_t, __int16))((swift_isaMask & *v18) + 0x1E0))(v17, a2, a3, a4, a5, a6, a7, a8, a11, a12 & 1, a13 | ((HIDWORD(a13) & 1) << 32), a14);

  return v19;
}

void sub_100502890(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v4 = sub_100431F80(&qword_100A451F0);
  __chkstk_darwin(v4 - 8, v5);
  v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (*(uint64_t (**)(unint64_t, unint64_t))((swift_isaMask & *v2) + 0x408))(0xD000000000000028, 0x80000001008C4D60);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)((char *)v2
                                                                 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_identityController))
                                  + 0x130))(v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10044C150((uint64_t)v7, &qword_100A451F0);
    uint64_t v14 = sub_100725EB0();
    os_log_type_t v15 = sub_1007266C0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "send(keyRecoveryRequest): cannot send keyRecoveryRequest because we don't have our own public identity", v16, 2u);
      swift_slowDealloc();
    }

    return;
  }
  uint64_t v17 = sub_10050E714((uint64_t)v7, (uint64_t)v12, type metadata accessor for IDSGroupEncryptionFullIdentity);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x140))(v17);
  uint64_t v19 = v18;
  int64_t v20 = 0;
  uint64_t v21 = v18 + 64;
  uint64_t v22 = 1 << *(unsigned char *)(v18 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & *(void *)(v18 + 64);
  int64_t v25 = (unint64_t)(v22 + 63) >> 6;
  while (1)
  {
    if (v24)
    {
      unint64_t v26 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      unint64_t v27 = v26 | (v20 << 6);
      goto LABEL_9;
    }
    int64_t v31 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v25) {
      goto LABEL_25;
    }
    unint64_t v32 = *(void *)(v21 + 8 * v31);
    ++v20;
    if (!v32)
    {
      int64_t v20 = v31 + 1;
      if (v31 + 1 >= v25) {
        goto LABEL_25;
      }
      unint64_t v32 = *(void *)(v21 + 8 * v20);
      if (!v32)
      {
        int64_t v20 = v31 + 2;
        if (v31 + 2 >= v25) {
          goto LABEL_25;
        }
        unint64_t v32 = *(void *)(v21 + 8 * v20);
        if (!v32) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v24 = (v32 - 1) & v32;
    unint64_t v27 = __clz(__rbit64(v32)) + (v20 << 6);
LABEL_9:
    uint64_t v28 = *(void **)(*(void *)(v19 + 56) + 8 * v27);
    uint64_t v29 = *(void (**)(uint64_t, uint64_t, char *))((swift_isaMask & *v28) + 0x200);
    uint64_t v30 = v28;
    v29(a1, v35, v12);
  }
  int64_t v33 = v31 + 3;
  if (v33 >= v25)
  {
LABEL_25:
    swift_release();
    sub_10050E240((uint64_t)v12, type metadata accessor for IDSGroupEncryptionFullIdentity);
    return;
  }
  unint64_t v32 = *(void *)(v21 + 8 * v33);
  if (v32)
  {
    int64_t v20 = v33;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v20 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v20 >= v25) {
      goto LABEL_25;
    }
    unint64_t v32 = *(void *)(v21 + 8 * v20);
    ++v33;
    if (v32) {
      goto LABEL_24;
    }
  }
LABEL_28:
  __break(1u);
}

id sub_100502CD4()
{
  uint64_t v1 = sub_100725EF0();
  unint64_t v2 = *(void (***)(unsigned char *, void))(v1 - 8);
  __chkstk_darwin(v1, v3);
  unint64_t v169 = &v151[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v170 = sub_100725F20();
  uint64_t v168 = *(void *)(v170 - 8);
  __chkstk_darwin(v170, v5);
  unint64_t v167 = &v151[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int64_t i = sub_100725F50();
  unint64_t v8 = *(void *)(i - 8);
  uint64_t v10 = __chkstk_darwin(i, v9);
  uint64_t v162 = &v151[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10, v12);
  uint64_t v14 = &v151[-v13];
  uint64_t v181 = sub_100725CC0();
  unint64_t v185 = *(char **)(v181 - 8);
  uint64_t v16 = __chkstk_darwin(v181, v15);
  uint64_t v161 = &v151[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v174 = &v151[-v20];
  __chkstk_darwin(v19, v21);
  unint64_t v23 = (unint64_t)&v151[-v22];
  unint64_t v186 = type metadata accessor for IDSGroupEncryptionControllerParticipantPreKeyState(0);
  uint64_t v25 = __chkstk_darwin(v186, v24);
  char v176 = &v151[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25, v27);
  uint64_t v182 = &v151[-v28];
  uint64_t v29 = sub_100431F80(&qword_100A453F8);
  __chkstk_darwin(v29 - 8, v30);
  unint64_t v32 = &v151[-((v31 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v184 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  int64_t v33 = *(void *)(v184 - 8);
  uint64_t v35 = __chkstk_darwin(v184, v34);
  int v178 = &v151[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v37 = *(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v0) + 0x140);
  int v179 = v0;
  uint64_t v38 = v37(v35);
  sub_100504524(v38);
  uint64_t v40 = v39;
  id v165 = v41;
  id result = (id)swift_bridgeObjectRelease();
  if (!v40) {
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v157 = v14;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
    goto LABEL_123;
  }
LABEL_3:
  unint64_t v43 = &_swiftEmptySetSingleton;
  while (2)
  {
    int v163 = v2;
    uint64_t v197 = (uint64_t)v43;
    uint64_t v44 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v179) + 0x258))();
    uint64_t v46 = v44;
    unint64_t v47 = v176;
    uint64_t v164 = v1;
    int64_t v159 = i;
    unint64_t v158 = v8;
    if ((v44 & 0xC000000000000001) != 0)
    {
      sub_1007268E0();
      type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
      sub_10050DC4C((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
      sub_100726680();
      uint64_t v46 = (uint64_t)v198;
      uint64_t v177 = v199;
      uint64_t v48 = v200;
      int64_t i = v201;
      unint64_t v2 = v202;
    }
    else
    {
      int64_t i = 0;
      uint64_t v49 = -1 << *(unsigned char *)(v44 + 32);
      uint64_t v50 = *(void *)(v44 + 56);
      uint64_t v177 = v44 + 56;
      uint64_t v48 = ~v49;
      uint64_t v51 = -v49;
      if (v51 < 64) {
        uint64_t v52 = ~(-1 << v51);
      }
      else {
        uint64_t v52 = -1;
      }
      unint64_t v2 = (void (**)(unsigned char *, void))(v52 & v50);
    }
    uint64_t v173 = v46 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v160 = v48;
    int64_t v175 = (unint64_t)(v48 + 64) >> 6;
    unint64_t v183 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v33 + 48);
    os_log_type_t v171 = v185 + 32;
    uint64_t v180 = (uint64_t *)(v185 + 8);
    uint64_t v166 = 1;
    double v53 = 0.0;
    *(void *)&long long v45 = 138412546;
    long long v156 = v45;
    v172 = (char *)&type metadata for Swift.AnyObject + 8;
    unint64_t v185 = (char *)v46;
LABEL_11:
    int64_t v33 = i;
    unint64_t v8 = (unint64_t)v2;
    while (v46 < 0)
    {
      uint64_t v56 = sub_100726950();
      if (!v56) {
        goto LABEL_66;
      }
      unint64_t v203 = (void *)v56;
      type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v57 = aBlock;
      uint64_t v58 = (void *)swift_unknownObjectRelease();
      int64_t i = v33;
      unint64_t v2 = (void (**)(unsigned char *, void))v8;
      if (!v57) {
        goto LABEL_66;
      }
LABEL_36:
      (*(void (**)(void *))((swift_isaMask & *v57) + 0x108))(v58);
      if ((*v183)(v32, 1, v184) == 1)
      {
        uint64_t v62 = sub_10044C150((uint64_t)v32, &qword_100A453F8);
      }
      else
      {
        uint64_t v63 = v178;
        sub_10050E714((uint64_t)v32, (uint64_t)v178, type metadata accessor for IDSGroupEncryptionPublicIdentity);
        if ((sub_1005354B0() & 1) == 0)
        {
          char v54 = v182;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(unsigned char *))((swift_isaMask & *v57) + 0xD8))(v54);

          sub_10050E240((uint64_t)v63, type metadata accessor for IDSGroupEncryptionPublicIdentity);
LABEL_13:
          int64_t v33 = i;
          unint64_t v8 = (unint64_t)v2;
          goto LABEL_14;
        }
        uint64_t v62 = sub_10050E240((uint64_t)v63, type metadata accessor for IDSGroupEncryptionPublicIdentity);
      }
      uint64_t v64 = v181;
      uint64_t v1 = (uint64_t)v180;
      (*(void (**)(uint64_t))((swift_isaMask & *v57) + 0xD0))(v62);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload)
      {
        if (EnumCaseMultiPayload != 2)
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))v171)(v161, v47, v64);
          uint64_t v73 = v174;
          sub_100725CB0();
          sub_100725BC0();
          double v75 = v74;
          uint64_t v1 = *v180;
          ((void (*)(unsigned char *, uint64_t))*v180)(v73, v64);
          uint64_t v76 = *(void *)&v179[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_config];
          uint64_t v77 = OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_preKeyRequestTimeout;
          if (*(double *)(v76
                         + OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_preKeyRequestTimeout) >= v75)
          {

            if (v166) {
              double v85 = *(double *)(v76 + v77) - v75;
            }
            else {
              double v85 = v53;
            }
            if (*(double *)(v76 + v77) - v75 >= v85) {
              double v53 = v85;
            }
            else {
              double v53 = *(double *)(v76 + v77) - v75;
            }
            uint64_t v166 = 0;
          }
          else
          {
            uint64_t v153 = v179;
            uint64_t v155 = v57;
            uint64_t v78 = sub_100725EB0();
            os_log_type_t v79 = sub_1007266C0();
            unsigned int v154 = v78;
            int v152 = v79;
            if (os_log_type_enabled(v78, v79))
            {
              uint64_t v80 = swift_slowAlloc();
              uint64_t v81 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v80 = v156;
              *(void *)(v80 + 4) = v155;
              *uint64_t v81 = v57;
              *(_WORD *)(v80 + 12) = 2048;
              *(void *)(v80 + 14) = *(void *)(v76 + v77);
              unint64_t v82 = v153;

              char v83 = v154;
              _os_log_impl((void *)&_mh_execute_header, v154, (os_log_type_t)v152, "checkRemotePreKeys(): timeout requesting preKey for participant %@ (timeout: %f)", (uint8_t *)v80, 0x16u);
              sub_100431F80(&qword_100A44F10);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              uint64_t v86 = v153;
              char v83 = v155;
            }
          }
          uint64_t v46 = (uint64_t)v185;
          ((void (*)(unsigned char *, uint64_t))v1)(v161, v181);
          goto LABEL_11;
        }
        sub_100508E0C(&aBlock, v57, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerParticipant, (uint64_t *)&unk_100A45420, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerParticipant);

        goto LABEL_13;
      }
      (*(void (**)(unint64_t, unsigned char *, uint64_t))v171)(v23, v47, v64);
      unint64_t v66 = v174;
      sub_100725CB0();
      sub_100725BC0();
      double v68 = v67;
      unint64_t v69 = *(void (**)(unint64_t, uint64_t))v1;
      (*(void (**)(unsigned char *, uint64_t))v1)(v66, v64);
      uint64_t v70 = *(void *)&v179[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_config];
      uint64_t v71 = v64;
      uint64_t v72 = OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_preKeyRequestDelayDuration;
      if (*(double *)(v70
                     + OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_preKeyRequestDelayDuration) >= v68)
      {

        if (v166) {
          double v84 = *(double *)(v70 + v72) - v68;
        }
        else {
          double v84 = v53;
        }
        if (*(double *)(v70 + v72) - v68 >= v84) {
          double v53 = v84;
        }
        else {
          double v53 = *(double *)(v70 + v72) - v68;
        }
        v69(v23, v71);
        uint64_t v166 = 0;
        unint64_t v47 = v176;
        uint64_t v46 = (uint64_t)v185;
        goto LABEL_11;
      }
      sub_100508E0C(&aBlock, v57, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerParticipant, (uint64_t *)&unk_100A45420, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerParticipant);

      v69(v23, v71);
      int64_t v33 = i;
      unint64_t v8 = (unint64_t)v2;
      unint64_t v47 = v176;
LABEL_14:
      uint64_t v46 = (uint64_t)v185;
    }
    if (v8)
    {
      unint64_t v2 = (void (**)(unsigned char *, void))((v8 - 1) & v8);
      unint64_t v55 = __clz(__rbit64(v8)) | (v33 << 6);
      int64_t i = v33;
      goto LABEL_35;
    }
    int64_t v59 = v33 + 1;
    if (__OFADD__(v33, 1))
    {
      __break(1u);
LABEL_122:
      __break(1u);
LABEL_123:
      if (sub_100726BA0())
      {
        sub_1004614E8((unint64_t)_swiftEmptyArrayStorage);
        continue;
      }
      goto LABEL_3;
    }
    break;
  }
  if (v59 >= v175) {
    goto LABEL_65;
  }
  unint64_t v60 = *(void *)(v177 + 8 * v59);
  int64_t i = v33 + 1;
  if (v60) {
    goto LABEL_34;
  }
  int64_t i = v33 + 2;
  if (v33 + 2 >= v175) {
    goto LABEL_65;
  }
  unint64_t v60 = *(void *)(v177 + 8 * i);
  if (v60) {
    goto LABEL_34;
  }
  int64_t i = v33 + 3;
  if (v33 + 3 >= v175) {
    goto LABEL_65;
  }
  unint64_t v60 = *(void *)(v177 + 8 * i);
  if (v60) {
    goto LABEL_34;
  }
  int64_t i = v33 + 4;
  if (v33 + 4 >= v175) {
    goto LABEL_65;
  }
  unint64_t v60 = *(void *)(v177 + 8 * i);
  if (v60)
  {
LABEL_34:
    unint64_t v2 = (void (**)(unsigned char *, void))((v60 - 1) & v60);
    unint64_t v55 = __clz(__rbit64(v60)) + (i << 6);
LABEL_35:
    uint64_t v58 = *(id *)(*(void *)(v46 + 48) + 8 * v55);
    uint64_t v57 = v58;
    if (!v58) {
      goto LABEL_66;
    }
    goto LABEL_36;
  }
  int64_t v61 = v33 + 5;
  while (v175 != v61)
  {
    unint64_t v60 = *(void *)(v177 + 8 * v61++);
    if (v60)
    {
      int64_t i = v61 - 1;
      uint64_t v46 = (uint64_t)v185;
      goto LABEL_34;
    }
  }
LABEL_65:
  unint64_t v8 = 0;
LABEL_66:
  sub_100462C48();
  if ((v166 & 1) == 0)
  {
    id v87 = v179;
    unint64_t v185 = *(char **)&v179[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_q];
    unint64_t v88 = v162;
    sub_100725F30();
    uint64_t v89 = v157;
    sub_100725FA0();
    unint64_t v8 = v158 + 8;
    unint64_t v2 = *(void (***)(unsigned char *, void))(v158 + 8);
    int64_t v90 = v159;
    ((void (*)(unsigned char *, int64_t))v2)(v88, v159);
    uint64_t v91 = swift_allocObject();
    *(void *)(v91 + 16) = v87;
    uint64_t v191 = sub_10050EA08;
    char v192 = (void *)v91;
    aBlock = _NSConcreteStackBlock;
    uint64_t v188 = 1107296256;
    uint64_t v189 = sub_100435714;
    int v190 = &unk_10098F830;
    uint64_t v92 = _Block_copy(&aBlock);
    id v93 = v87;
    uint64_t v94 = v167;
    sub_100725F00();
    unint64_t v203 = _swiftEmptyArrayStorage;
    sub_10050DC4C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004413A8((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    uint64_t v95 = v169;
    uint64_t v96 = v164;
    sub_100726890();
    sub_100726710();
    _Block_release(v92);
    v163[1](v95, v96);
    (*(void (**)(unsigned char *, uint64_t))(v168 + 8))(v94, v170);
    ((void (*)(unsigned char *, int64_t))v2)(v89, v90);
    swift_release();
  }
  int64_t v33 = v197;
  if ((v197 & 0xC000000000000001) == 0)
  {
    if (!*(void *)(v197 + 16)) {
      goto LABEL_99;
    }
    uint64_t v100 = -1 << *(unsigned char *)(v197 + 32);
    uint64_t v98 = v197 + 56;
    uint64_t v99 = ~v100;
    uint64_t v101 = -v100;
    if (v101 < 64) {
      uint64_t v102 = ~(-1 << v101);
    }
    else {
      uint64_t v102 = -1;
    }
    unint64_t v23 = v102 & *(void *)(v197 + 56);
    swift_bridgeObjectRetain();
    uint64_t v1 = 0;
LABEL_76:
    unint64_t v32 = (unsigned char *)(v33 & 0x7FFFFFFFFFFFFFFFLL);
    unint64_t v185 = (char *)v99;
    for (i = (unint64_t)(v99 + 64) >> 6; (v33 & 0x8000000000000000) == 0; unint64_t v23 = (unint64_t)v2)
    {
      if (v23)
      {
        unint64_t v2 = (void (**)(unsigned char *, void))((v23 - 1) & v23);
        unint64_t v105 = __clz(__rbit64(v23)) | (v1 << 6);
        unint64_t v8 = v1;
      }
      else
      {
        int64_t v106 = v1 + 1;
        if (__OFADD__(v1, 1)) {
          goto LABEL_122;
        }
        if (v106 >= i) {
          goto LABEL_100;
        }
        unint64_t v107 = *(void *)(v98 + 8 * v106);
        unint64_t v8 = v1 + 1;
        if (!v107)
        {
          unint64_t v8 = v1 + 2;
          if (v1 + 2 >= i) {
            goto LABEL_100;
          }
          unint64_t v107 = *(void *)(v98 + 8 * v8);
          if (!v107)
          {
            unint64_t v8 = v1 + 3;
            if (v1 + 3 >= i) {
              goto LABEL_100;
            }
            unint64_t v107 = *(void *)(v98 + 8 * v8);
            if (!v107)
            {
              unint64_t v8 = v1 + 4;
              if (v1 + 4 >= i) {
                goto LABEL_100;
              }
              unint64_t v107 = *(void *)(v98 + 8 * v8);
              if (!v107)
              {
                uint64_t v108 = v1 + 5;
                while (i != v108)
                {
                  unint64_t v107 = *(void *)(v98 + 8 * v108++);
                  if (v107)
                  {
                    unint64_t v8 = v108 - 1;
                    goto LABEL_95;
                  }
                }
                goto LABEL_100;
              }
            }
          }
        }
LABEL_95:
        unint64_t v2 = (void (**)(unsigned char *, void))((v107 - 1) & v107);
        unint64_t v105 = __clz(__rbit64(v107)) + (v8 << 6);
      }
      uint64_t v104 = *(id *)(*(void *)(v33 + 48) + 8 * v105);
      if (!v104) {
        goto LABEL_100;
      }
LABEL_97:
      uint64_t v109 = v182;
      sub_100725CB0();
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *))((swift_isaMask & *v104) + 0xD8))(v109);

      uint64_t v1 = v8;
    }
    unint64_t v103 = (void *)sub_100726950();
    if (v103)
    {
      uint64_t v193 = v103;
      type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v104 = aBlock;
      swift_unknownObjectRelease();
      unint64_t v8 = v1;
      unint64_t v2 = (void (**)(unsigned char *, void))v23;
      if (v104) {
        goto LABEL_97;
      }
    }
LABEL_100:
    sub_100462C48();
    uint64_t v110 = v197;
    unint64_t v186 = v197 & 0xC000000000000001;
    if ((v197 & 0xC000000000000001) != 0)
    {
      uint64_t v111 = v197 & 0xFFFFFFFFFFFFFF8;
      swift_bridgeObjectRetain();
      uint64_t v112 = sub_100726920();
      if (!v112) {
        goto LABEL_117;
      }
      uint64_t v113 = v112;
      uint64_t v196 = _swiftEmptyArrayStorage;
      sub_100726A60();
      uint64_t v193 = (void *)sub_1007268D0();
      uint64_t v194 = v114;
      char v195 = 1;
      if ((v113 & 0x8000000000000000) == 0) {
        goto LABEL_106;
      }
      __break(1u);
    }
    uint64_t v113 = *(void *)(v110 + 16);
    swift_bridgeObjectRetain();
    if (v113)
    {
      uint64_t v196 = _swiftEmptyArrayStorage;
      sub_100726A60();
      uint64_t v193 = (void *)sub_1004805BC(v110);
      uint64_t v194 = v115;
      char v195 = v116 & 1;
      uint64_t v111 = v110 & 0xFFFFFFFFFFFFFF8;
LABEL_106:
      unint64_t v185 = (char *)self;
      if (v110 < 0) {
        uint64_t v117 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))v110;
      }
      else {
        uint64_t v117 = (unsigned int (**)(unsigned char *, uint64_t, uint64_t))v111;
      }
      unint64_t v183 = v117;
      uint64_t v184 = v110;
      while (1)
      {
        while (1)
        {
          int64_t v123 = (int64_t)v193;
          uint64_t v124 = v194;
          char v125 = v195;
          sub_1004EC194((uint64_t)v193, v194, v195, v110);
          unint64_t v127 = v126;
          int v128 = *(void **)&v126[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken];
          swift_bridgeObjectRetain();
          id v129 = [v128 rawToken];
          uint64_t v130 = sub_100725B50();
          unint64_t v132 = v131;

          NSString v133 = sub_100726420();
          swift_bridgeObjectRelease();
          Class isa = sub_100725B20().super.isa;
          [v185 destinationWithAlias:v133 pushToken:isa];
          sub_100442248(v130, v132);

          sub_100726A40();
          sub_100726A70();
          sub_100726A80();
          id result = (id)sub_100726A50();
          if (v186) {
            break;
          }
          uint64_t v110 = v184;
          uint64_t v118 = (void *)sub_1004801D0(v123, v124, v125, v184);
          uint64_t v120 = v119;
          char v122 = v121;
          sub_100482640(v123, v124, v125);
          uint64_t v193 = v118;
          uint64_t v194 = v120;
          char v195 = v122 & 1;
          if (!--v113) {
            goto LABEL_116;
          }
        }
        uint64_t v110 = v184;
        if ((v125 & 1) == 0) {
          break;
        }
        if (sub_1007268F0()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100431F80(&qword_100A473B0);
        uint64_t v135 = (void (*)(void ***, void))sub_100726670();
        sub_100726970();
        v135(&aBlock, 0);
        if (!--v113)
        {
LABEL_116:
          sub_100482640((uint64_t)v193, v194, v195);
          v136 = v196;
          swift_bridgeObjectRelease();
          goto LABEL_118;
        }
      }
      __break(1u);
      goto LABEL_126;
    }
LABEL_117:
    swift_bridgeObjectRelease();
    v136 = _swiftEmptyArrayStorage;
LABEL_118:
    uint64_t v137 = sub_100481658((unint64_t)v136, &qword_100A46860, (uint64_t)IDSDestination_ptr, &qword_100A46868, &qword_100A46D80);
    swift_bridgeObjectRelease();
    sub_1005045B0(v137);
    swift_bridgeObjectRelease();
    Class v138 = sub_100726630().super.isa;
    swift_bridgeObjectRelease();
    id v139 = [self destinationWithDestinations:v138];

    id result = (id)im_primary_queue();
    if (result)
    {
      uint64_t v140 = result;
      swift_bridgeObjectRelease();
      uint64_t v141 = (void *)swift_allocObject();
      id v142 = v179;
      id v143 = v165;
      v141[2] = v179;
      v141[3] = v143;
      v141[4] = v139;
      uint64_t v191 = sub_10050E870;
      char v192 = v141;
      aBlock = _NSConcreteStackBlock;
      uint64_t v188 = 1107296256;
      uint64_t v189 = sub_100435714;
      int v190 = &unk_10098F7E0;
      uint64_t v144 = _Block_copy(&aBlock);
      id v145 = v142;
      id v146 = v143;
      id v147 = v139;
      uint64_t v148 = v167;
      sub_100725F00();
      uint64_t v193 = _swiftEmptyArrayStorage;
      sub_10050DC4C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100431F80((uint64_t *)&unk_100A454C0);
      sub_1004413A8((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
      uint64_t v149 = v169;
      uint64_t v150 = v164;
      sub_100726890();
      sub_100726750();
      _Block_release(v144);

      v163[1](v149, v150);
      (*(void (**)(unsigned char *, uint64_t))(v168 + 8))(v148, v170);
      return (id)swift_release();
    }
LABEL_126:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v97 = sub_100726920();
  swift_bridgeObjectRelease();
  if (v97)
  {
    swift_bridgeObjectRetain();
    sub_1007268E0();
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    sub_10050DC4C((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
    sub_100726680();
    int64_t v33 = (int64_t)v203;
    uint64_t v98 = v204;
    uint64_t v99 = v205;
    uint64_t v1 = v206;
    unint64_t v23 = v207;
    goto LABEL_76;
  }
LABEL_99:

  return (id)swift_bridgeObjectRelease();
}

void *sub_100504524(uint64_t a1)
{
  id result = (void *)sub_10050C490(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (void *)(1 << *(unsigned char *)(a1 + 32))) {
    return 0;
  }
  else {
    return sub_10050C518(&v5, (uint64_t)result, v3, 0, a1);
  }
}

uint64_t sub_1005045B0(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_100726920()) {
      goto LABEL_3;
    }
LABEL_6:
    int v3 = &_swiftEmptySetSingleton;
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v30 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_100431F80(&qword_100A47478);
  int v3 = (void *)sub_1007269E0();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_1007268E0();
  sub_100462C50(0, &qword_100A46860);
  sub_100480C20(&qword_100A46868, &qword_100A46860);
  uint64_t result = sub_100726680();
  uint64_t v1 = v34;
  uint64_t v30 = v35;
  uint64_t v5 = v36;
  uint64_t v6 = v37;
  unint64_t v7 = v38;
LABEL_11:
  int64_t v29 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = (char *)(v3 + 7);
  while (v1 < 0)
  {
    uint64_t v16 = sub_100726950();
    if (!v16) {
      goto LABEL_45;
    }
    *(void *)&long long v31 = v16;
    sub_100462C50(0, &qword_100A46860);
    swift_dynamicCast();
LABEL_36:
    sub_100462C50(0, &qword_100A46860);
    swift_dynamicCast();
    uint64_t result = sub_100726980(v3[5]);
    uint64_t v22 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)&v11[8 * (v23 >> 6)]) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)&v11[8 * (v23 >> 6)])) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)&v11[8 * v24];
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)&v11[(v12 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v12;
    uint64_t v13 = v3[6] + 40 * v12;
    *(_OWORD *)uint64_t v13 = v31;
    *(_OWORD *)(v13 + 16) = v32;
    *(void *)(v13 + 32) = v33;
    ++v3[2];
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    id v21 = *(id *)(*(void *)(v1 + 48) + 8 * v15);
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v29) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v29) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v30 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v29) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v30 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v29) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v30 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v29) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v30 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v29 != v20)
              {
                unint64_t v18 = *(void *)(v30 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_100462C48();
              return (uint64_t)v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

void sub_1005049F0()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x140))();
  uint64_t v2 = v1;
  int64_t v3 = 0;
  uint64_t v4 = v1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void **)(*(void *)(v2 + 56) + 8 * v10);
    unint64_t v12 = *(void (**)(void))((swift_isaMask & *v11) + 0x1C8);
    uint64_t v13 = v11;
    v12();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v8)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v3 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_27;
        }
        if (v3 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        ++v16;
        if (v15) {
          goto LABEL_22;
        }
      }
    }
    int64_t v3 = v16;
    goto LABEL_22;
  }
LABEL_23:

  swift_release();
}

uint64_t sub_100504C10()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))() + 16);
  os_unfair_lock_lock(v1);
  sub_100482E74();
  os_unfair_lock_unlock(v1);
  uint64_t v2 = swift_release();
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x378))(v2);
}

uint64_t sub_100504D20(void *a1)
{
  uint64_t v2 = sub_100725CC0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v7 - 8, v8);
  unint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100725CB0();
  sub_100725CA0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v10, 0, 1, v2);
  return (*(uint64_t (**)(char *))((swift_isaMask & *a1) + 0x238))(v10);
}

void sub_100504FE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x140))();
  uint64_t v3 = v2;
  int64_t v4 = 0;
  uint64_t v5 = v2 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v2 + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
    if (v15 >= v9) {
      goto LABEL_23;
    }
    unint64_t v16 = *(void *)(v5 + 8 * v15);
    ++v4;
    if (!v16)
    {
      int64_t v4 = v15 + 1;
      if (v15 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v16 = *(void *)(v5 + 8 * v4);
      if (!v16)
      {
        int64_t v4 = v15 + 2;
        if (v15 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v4);
        if (!v16)
        {
          int64_t v4 = v15 + 3;
          if (v15 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v16 = *(void *)(v5 + 8 * v4);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v4 << 6);
LABEL_5:
    uint64_t v12 = *(void **)(*(void *)(v3 + 56) + 8 * v11);
    uint64_t v13 = *(void (**)(void))((swift_isaMask & *v12) + 0x1D8);
    int64_t v14 = v12;
    v13();
  }
  int64_t v17 = v15 + 4;
  if (v17 < v9)
  {
    unint64_t v16 = *(void *)(v5 + 8 * v17);
    if (!v16)
    {
      while (1)
      {
        int64_t v4 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_27;
        }
        if (v4 >= v9) {
          goto LABEL_23;
        }
        unint64_t v16 = *(void *)(v5 + 8 * v4);
        ++v17;
        if (v16) {
          goto LABEL_22;
        }
      }
    }
    int64_t v4 = v17;
    goto LABEL_22;
  }
LABEL_23:
  swift_release();
  unint64_t v18 = *(void (**)(void))((swift_isaMask & *v1) + 0x220);

  v18(0);
}

uint64_t sub_100505244()
{
  uint64_t v1 = v0;
  uint64_t v2 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))() + 16);
  os_unfair_lock_lock(v2);
  sub_1004ED04C(&v5);
  os_unfair_lock_unlock(v2);
  int v3 = v5;
  uint64_t result = swift_release();
  if (v3 == 1) {
    return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x370))(result);
  }
  return result;
}

uint64_t sub_100505348@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v3 = sub_100725EF0();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  __chkstk_darwin(v3, v4);
  uint64_t v52 = (char *)v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100725F20();
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v6);
  uint64_t v50 = (char *)v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100725EE0();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  __chkstk_darwin(v8, v9);
  unint64_t v11 = (void *)((char *)v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = sub_100725F50();
  uint64_t v49 = *(void *)(v57 - 8);
  uint64_t v13 = __chkstk_darwin(v57, v12);
  int64_t v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v56 = (char *)v46 - v17;
  uint64_t v18 = sub_100431F80(&qword_100A47D80);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  uint64_t v22 = (char *)v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v23);
  char v25 = (char *)v46 - v24;
  uint64_t v26 = sub_100725CC0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  long long v31 = (char *)v46 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0x230))(v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26) == 1)
  {
    uint64_t result = sub_10044C150((uint64_t)v25, &qword_100A47D80);
LABEL_9:
    char v35 = 0;
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v31, v25, v26);
  sub_100725C30();
  double v34 = v33;
  if (v33 < 1.0)
  {
    char v35 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v22, 1, 1, v26);
    (*(void (**)(char *))((swift_isaMask & *a1) + 0x238))(v22);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v31, v26);
LABEL_10:
    *uint64_t v58 = v35;
    return result;
  }
  uint64_t v36 = *(void *)((char *)a1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_q);
  uint64_t result = sub_100725F30();
  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v34 < 9.22337204e18)
  {
    *unint64_t v11 = (uint64_t)v34;
    uint64_t v38 = v47;
    uint64_t v37 = v48;
    (*(void (**)(void *, void, uint64_t))(v47 + 104))(v11, enum case for DispatchTimeInterval.seconds(_:), v48);
    v46[1] = v36;
    sub_100725F40();
    (*(void (**)(void *, uint64_t))(v38 + 8))(v11, v37);
    uint64_t v49 = *(void *)(v49 + 8);
    ((void (*)(char *, uint64_t))v49)(v15, v57);
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = a1;
    aBlock[4] = sub_10050E7B4;
    aBlock[5] = v39;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100435714;
    aBlock[3] = &unk_10098F790;
    uint64_t v40 = _Block_copy(aBlock);
    uint64_t v41 = a1;
    uint64_t v42 = v50;
    sub_100725F00();
    int64_t v59 = _swiftEmptyArrayStorage;
    sub_10050DC4C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004413A8((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    unint64_t v43 = v52;
    uint64_t v44 = v55;
    sub_100726890();
    long long v45 = v56;
    sub_100726710();
    _Block_release(v40);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v43, v44);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v53);
    ((void (*)(char *, uint64_t))v49)(v45, v57);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v31, v26);
    uint64_t result = swift_release();
    goto LABEL_9;
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_100505A68()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))() + 16);
  os_unfair_lock_lock(v1);
  sub_100482E74();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

uint64_t sub_100505B18(void *a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100725CC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  return (*(uint64_t (**)(char *))((swift_isaMask & *a1) + 0x238))(v5);
}

void *sub_100505CD8()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v3 = __chkstk_darwin(v1, v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v6);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = sub_100431F80(&qword_100A451F0);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v28 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v21 = (char *)&v28 - v20;
  uint64_t v23 = __chkstk_darwin(v19, v22);
  char v25 = (char *)&v28 - v24;
  uint64_t v29 = &_swiftEmptySetSingleton;
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_identityController))
                                  + 0x130))(v23);
  uint64_t v26 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48))(v12, 1, v26) == 1)
  {
    sub_10044C150((uint64_t)v12, &qword_100A451F0);
    return &_swiftEmptySetSingleton;
  }
  else
  {
    sub_10050E6AC((uint64_t)v12, (uint64_t)v21, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_10050E240((uint64_t)v12, type metadata accessor for IDSGroupEncryptionFullIdentity);
    sub_10050E714((uint64_t)v21, (uint64_t)v25, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_10050E6AC((uint64_t)v25, (uint64_t)v17, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_10044E968((uint64_t)v17, (uint64_t)v5);
    swift_storeEnumTagMultiPayload();
    sub_10045FA4C((uint64_t)v8, (uint64_t)v5);
    sub_10050E240((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_10050E240((uint64_t)v25, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    return v29;
  }
}

void sub_100505FE8()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x140))();
  uint64_t v2 = v1;
  int64_t v3 = 0;
  uint64_t v4 = v1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return;
    }
    if (v14 >= v8) {
      goto LABEL_21;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_21;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_21;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void **)(*(void *)(v2 + 56) + 8 * v10);
    uint64_t v12 = *(void (**)(void))((swift_isaMask & *v11) + 0x218);
    uint64_t v13 = v11;
    v12();
  }
  int64_t v16 = v14 + 3;
  if (v16 < v8)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v3 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_25;
        }
        if (v3 >= v8) {
          goto LABEL_21;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        ++v16;
        if (v15) {
          goto LABEL_20;
        }
      }
    }
    int64_t v3 = v16;
    goto LABEL_20;
  }
LABEL_21:

  swift_release();
}

void sub_1005061F4()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x140))();
  uint64_t v2 = v1;
  int64_t v3 = 0;
  uint64_t v4 = v1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void **)(*(void *)(v2 + 56) + 8 * v10);
    uint64_t v12 = *(void (**)(void))((swift_isaMask & *v11) + 0x220);
    uint64_t v13 = v11;
    v12();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v8)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v3 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_27;
        }
        if (v3 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        ++v16;
        if (v15) {
          goto LABEL_22;
        }
      }
    }
    int64_t v3 = v16;
    goto LABEL_22;
  }
LABEL_23:

  swift_release();
}

void sub_100506414()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x140))();
  uint64_t v2 = v1;
  int64_t v3 = 0;
  uint64_t v4 = v1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void **)(*(void *)(v2 + 56) + 8 * v10);
    uint64_t v12 = *(void (**)(void))((swift_isaMask & *v11) + 0x1D0);
    uint64_t v13 = v11;
    v12();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v8)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v3 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_27;
        }
        if (v3 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        ++v16;
        if (v15) {
          goto LABEL_22;
        }
      }
    }
    int64_t v3 = v16;
    goto LABEL_22;
  }
LABEL_23:

  swift_release();
}

void sub_100506634()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x140))();
  uint64_t v2 = v1;
  int64_t v3 = 0;
  uint64_t v4 = v1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(v1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    uint64_t v11 = *(void **)(*(void *)(v2 + 56) + 8 * v10);
    uint64_t v12 = *(void (**)(void))((swift_isaMask & *v11) + 0x268);
    uint64_t v13 = v11;
    v12();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v8)
  {
    unint64_t v15 = *(void *)(v4 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v3 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_27;
        }
        if (v3 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        ++v16;
        if (v15) {
          goto LABEL_22;
        }
      }
    }
    int64_t v3 = v16;
    goto LABEL_22;
  }
LABEL_23:

  swift_release();
}

void sub_100506854(uint64_t a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v6 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x140);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = v6(v7);
  if (*(void *)(v8 + 16))
  {
    unint64_t v9 = sub_10045C784(a1, a2);
    if (v10)
    {
      *(id *)(*(void *)(v8 + 56) + 8 * v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
  }
  uint64_t v66 = a1;
  uint64_t v67 = a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for IDSGroupEncryptionKeyMaterialController(0);
  uint64_t v12 = *(void *)((char *)v3 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id);
  uint64_t v11 = *(void *)((char *)v3 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8);
  uint64_t v13 = (uint64_t)v3 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_cryptoHandler;
  sub_1004407E0((uint64_t)v3 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_cryptoHandler, (uint64_t)v69);
  int64_t v14 = *(unsigned char **)((char *)v3 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_config);
  uint64_t v15 = *(void *)&v14[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_mkmRollDuration];
  int64_t v16 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x3D8);
  uint64_t v17 = swift_bridgeObjectRetain();
  char v18 = v16(v17);
  uint64_t v19 = OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_isRatchetEnabled;
  uint64_t v20 = v12;
  id v21 = sub_100434940(0, 0, v12, v11, (uint64_t)v69, v15, v15, 0, 1, 3, v18 & 1, v14[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_isRatchetEnabled]);
  id v22 = [self sharedInstance];
  if (v22)
  {
    uint64_t v23 = v22;
    id v24 = [v22 persistenceManager];

    if (!v24)
    {
      __break(1u);
      return;
    }
    sub_1005655DC();
  }
  sub_1004407E0(v13, (uint64_t)v69);
  char v25 = v14[v19];
  swift_bridgeObjectRetain();
  uint64_t v64 = v20;
  id v26 = sub_100434940(0, 0, v20, v11, (uint64_t)v69, 0, 0, 1, 0, 4, 0, v25);
  type metadata accessor for IDSGroupEncryptionControllerGroupSession();
  uint64_t v27 = *(void **)((char *)v3 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_identityController);
  uint64_t v28 = *(void *)((char *)v3 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_pushHandler);
  sub_1004407E0(v13, (uint64_t)v69);
  uint64_t v29 = v11;
  uint64_t v30 = *(void *)((char *)v3 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_sessionProvider);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v31 = v14;
  id v32 = v27;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v33 = v21;
  id v34 = v26;
  char v35 = v3;
  unint64_t v65 = v33;
  uint64_t v36 = sub_1004E0DAC(v31, v64, v29, v66, v67, v32, v28, (uint64_t)v69, v30, (uint64_t)v35, (uint64_t)&off_10098F720, v33, v34);
  uint64_t v37 = (*(uint64_t (**)(void))((swift_isaMask & *v35) + 0x1E8))();
  (*(void (**)(uint64_t))((swift_isaMask & *(void *)v36) + 0x1A0))(v37);
  uint64_t v38 = *(uint64_t (**)(unsigned char *))((swift_isaMask & *(void *)v36) + 0x130);
  uint64_t v39 = v35;
  uint64_t v40 = (void (*)(unsigned char *, void))v38(v69);
  uint64_t v42 = v41;
  unint64_t v43 = *v41;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v42 = v43;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v43 = sub_10045C52C(0, v43[2] + 1, 1, v43);
    *uint64_t v42 = v43;
  }
  unint64_t v46 = v43[2];
  unint64_t v45 = v43[3];
  if (v46 >= v45 >> 1)
  {
    unint64_t v43 = sub_10045C52C((void *)(v45 > 1), v46 + 1, 1, v43);
    *uint64_t v42 = v43;
  }
  v43[2] = v46 + 1;
  uint64_t v47 = &v43[2 * v46];
  v47[4] = v39;
  v47[5] = &off_10098F710;
  v40(v69, 0);
  type metadata accessor for IDSDSessionBlobProvider();
  uint64_t v48 = swift_unknownObjectRetain();
  uint64_t v49 = sub_100517560(v48);
  uint64_t v50 = (void (*)(unsigned char *, void))v38(v69);
  uint64_t v52 = v51;
  uint64_t v53 = *v51;
  char v54 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v52 = v53;
  if ((v54 & 1) == 0)
  {
    uint64_t v53 = sub_10045C52C(0, v53[2] + 1, 1, v53);
    *uint64_t v52 = v53;
  }
  unint64_t v56 = v53[2];
  unint64_t v55 = v53[3];
  if (v56 >= v55 >> 1)
  {
    uint64_t v53 = sub_10045C52C((void *)(v55 > 1), v56 + 1, 1, v53);
    *uint64_t v52 = v53;
  }
  v53[2] = v56 + 1;
  uint64_t v57 = &v53[2 * v56];
  v57[4] = v49;
  v57[5] = &off_10098FB80;
  v50(v69, 0);
  uint64_t v58 = *(uint64_t (**)(unsigned char *))((swift_isaMask & *v39) + 0x150);
  swift_bridgeObjectRetain();
  int64_t v59 = v36;
  unint64_t v60 = (void (*)(unsigned char *, void))v58(v69);
  uint64_t v62 = v61;
  char v63 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v68 = *v62;
  *uint64_t v62 = 0x8000000000000000;
  sub_10050C320((uint64_t)v59, v66, v67, v63);
  *uint64_t v62 = v68;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v60(v69, 0);
}

uint64_t sub_100506F6C(uint64_t a1, uint64_t a2)
{
  int64_t v3 = v2;
  uint64_t v6 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x140);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = v6(v7);
  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_10045C784(a1, a2), (v10 & 1) != 0))
  {
    uint64_t v11 = *(id *)(*(void *)(v8 + 56) + 8 * v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(void *))((swift_isaMask & *v11) + 0x128))(_swiftEmptyArrayStorage);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v12 = *(uint64_t (**)(unsigned char *))((swift_isaMask & *v3) + 0x150);
  swift_bridgeObjectRetain();
  uint64_t v13 = (uint64_t (*)(unsigned char *, void))v12(v16);
  int64_t v14 = (void *)sub_10050ABEC(a1, a2);
  swift_bridgeObjectRelease();

  return v13(v16, 0);
}

uint64_t sub_100507190()
{
  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup__shortMKIEnabled);
}

void sub_1005071F4(char a1)
{
  char v2 = a1 & 1;
  uint64_t v3 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup__shortMKIEnabled;
  if (*((unsigned char *)v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup__shortMKIEnabled) == (a1 & 1))
  {
LABEL_25:
    *((unsigned char *)v1 + v3) = v2;
    return;
  }
  uint64_t v23 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup__shortMKIEnabled;
  char v24 = a1 & 1;
  char v25 = v1;
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x140))();
  int64_t v5 = 0;
  uint64_t v26 = v4 + 64;
  uint64_t v6 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(v4 + 64);
  int64_t v27 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v9 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v10 = v9 | (v5 << 6);
      goto LABEL_6;
    }
    int64_t v20 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v27) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v26 + 8 * v20);
    ++v5;
    if (!v21)
    {
      int64_t v5 = v20 + 1;
      if (v20 + 1 >= v27) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v26 + 8 * v5);
      if (!v21)
      {
        int64_t v5 = v20 + 2;
        if (v20 + 2 >= v27) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v26 + 8 * v5);
        if (!v21)
        {
          int64_t v5 = v20 + 3;
          if (v20 + 3 >= v27) {
            goto LABEL_24;
          }
          unint64_t v21 = *(void *)(v26 + 8 * v5);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v21 - 1) & v21;
    unint64_t v10 = __clz(__rbit64(v21)) + (v5 << 6);
LABEL_6:
    uint64_t v11 = *(char **)(*(void *)(v4 + 56) + 8 * v10);
    uint64_t v12 = OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController;
    uint64_t v13 = *(void **)&v11[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController];
    int64_t v14 = *(void (**)(void))((swift_isaMask & *v13) + 0xB8);
    uint64_t v15 = v11;
    int64_t v16 = v13;
    v14(a1 & 1);

    uint64_t v17 = *(void **)&v11[v12];
    char v18 = *(void (**)(void))((swift_isaMask & *v17) + 0x1F8);
    uint64_t v19 = v17;
    v18();
  }
  int64_t v22 = v20 + 4;
  if (v22 >= v27)
  {
LABEL_24:
    swift_release();
    uint64_t v1 = v25;
    char v2 = v24;
    uint64_t v3 = v23;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v26 + 8 * v22);
  if (v21)
  {
    int64_t v5 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v5 >= v27) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v26 + 8 * v5);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
}

void (*sub_1005074AC(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(v1
                                + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup__shortMKIEnabled);
  return sub_1005074E0;
}

void sub_1005074E0(uint64_t a1)
{
}

uint64_t sub_100507508()
{
  return sub_100507514();
}

uint64_t sub_100507514()
{
  return swift_retain();
}

uint64_t sub_10050755C(uint64_t a1)
{
  return sub_10050757C(a1, &OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_logStateLock, (uint64_t (*)(uint64_t))&_swift_release);
}

uint64_t sub_10050757C(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = (uint64_t *)(v3 + *a2);
  swift_beginAccess();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  return a3(v7);
}

uint64_t (*sub_1005075DC())()
{
  return j__swift_endAccess;
}

uint64_t sub_100507638()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x3F0))() + 16);
  os_unfair_lock_lock(v1);
  sub_100482E74();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

uint64_t sub_1005076F4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  swift_bridgeObjectRetain_n();
  uint64_t v7 = v3;
  uint64_t v115 = a1;
  unint64_t v8 = sub_100725EB0();
  os_log_type_t v9 = sub_1007266E0();
  unint64_t v10 = v8;
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v118 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    swift_bridgeObjectRetain();
    char v116 = (void *)sub_10043E578(a2, a3, (uint64_t *)&v118);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v11 + 12) = 2080;
    uint64_t v13 = *(void *)&v7[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id];
    unint64_t v12 = *(void *)&v7[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8];
    swift_bridgeObjectRetain();
    char v116 = (void *)sub_10043E578(v13, v12, (uint64_t *)&v118);
    sub_100726830();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v9, "%sGroup %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  int64_t v14 = v7;
  uint64_t v15 = sub_100725EB0();
  os_log_type_t v16 = sub_1007266E0();
  uint64_t v111 = v14;
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v118 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 136315394;
    swift_bridgeObjectRetain();
    char v116 = (void *)sub_10043E578(a2, a3, (uint64_t *)&v118);
    sub_100726830();
    uint64_t v18 = swift_bridgeObjectRelease_n();
    *(_WORD *)(v17 + 12) = 2048;
    uint64_t v19 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v14) + 0x1E8))(v18);

    char v116 = (void *)v19;
    sub_100726830();

    _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s    localParticipantID: %llu", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  int64_t v20 = sub_100725EB0();
  os_log_type_t v21 = sub_1007266E0();
  if (os_log_type_enabled(v20, v21))
  {
    int64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v118 = (void *)swift_slowAlloc();
    *(_DWORD *)int64_t v22 = 136315138;
    swift_bridgeObjectRetain();
    char v116 = (void *)sub_10043E578(a2, a3, (uint64_t *)&v118);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s    Members:", v22, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v23 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v14) + 0x110))();
  uint64_t v25 = __chkstk_darwin(v23, v24);
  int64_t v27 = (os_unfair_lock_s *)(__chkstk_darwin(v25, v26) + 16);
  os_unfair_lock_lock(v27);
  sub_10050C748(&v118);
  os_unfair_lock_unlock(v27);
  unint64_t v28 = (unint64_t)v118;
  uint64_t result = swift_release();
  if ((v28 & 0xC000000000000001) != 0)
  {
    uint64_t result = sub_100726AB0();
    unint64_t v113 = 0;
    uint64_t v30 = 0;
    unint64_t v31 = 0;
    unint64_t v28 = result | 0x8000000000000000;
  }
  else
  {
    uint64_t v32 = -1 << *(unsigned char *)(v28 + 32);
    unint64_t v113 = v28 + 64;
    uint64_t v30 = ~v32;
    uint64_t v33 = -v32;
    if (v33 < 64) {
      uint64_t v34 = ~(-1 << v33);
    }
    else {
      uint64_t v34 = -1;
    }
    unint64_t v31 = v34 & *(void *)(v28 + 64);
  }
  uint64_t v35 = 0;
  int64_t v112 = (unint64_t)(v30 + 64) >> 6;
  uint64_t v114 = a2;
  if ((v28 & 0x8000000000000000) != 0) {
    goto LABEL_19;
  }
  while (1)
  {
    if (v31)
    {
      uint64_t v36 = (v31 - 1) & v31;
      unint64_t v37 = __clz(__rbit64(v31)) | (v35 << 6);
      uint64_t v38 = v35;
      goto LABEL_36;
    }
    int64_t v43 = v35 + 1;
    if (__OFADD__(v35, 1))
    {
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
    if (v43 >= v112) {
      goto LABEL_39;
    }
    unint64_t v44 = *(void *)(v113 + 8 * v43);
    uint64_t v38 = v35 + 1;
    if (!v44)
    {
      uint64_t v38 = v35 + 2;
      if (v35 + 2 >= v112) {
        goto LABEL_39;
      }
      unint64_t v44 = *(void *)(v113 + 8 * v38);
      if (!v44)
      {
        uint64_t v38 = v35 + 3;
        if (v35 + 3 >= v112) {
          goto LABEL_39;
        }
        unint64_t v44 = *(void *)(v113 + 8 * v38);
        if (!v44)
        {
          uint64_t v38 = v35 + 4;
          if (v35 + 4 >= v112) {
            goto LABEL_39;
          }
          unint64_t v44 = *(void *)(v113 + 8 * v38);
          if (!v44) {
            break;
          }
        }
      }
    }
LABEL_35:
    uint64_t v36 = (v44 - 1) & v44;
    unint64_t v37 = __clz(__rbit64(v44)) + (v38 << 6);
LABEL_36:
    uint64_t v46 = 8 * v37;
    uint64_t v47 = *(void **)(*(void *)(v28 + 56) + v46);
    id v41 = *(id *)(*(void *)(v28 + 48) + v46);
    uint64_t v42 = v47;
    a2 = v114;
    if (!v41) {
      goto LABEL_39;
    }
    while (1)
    {

      uint64_t v118 = (void *)a2;
      unint64_t v119 = a3;
      swift_bridgeObjectRetain();
      v123._countAndFlagsBits = 0x2020202020202020;
      v123._object = (void *)0xE800000000000000;
      sub_1007264C0(v123);
      (*(void (**)(uint64_t, void *, unint64_t))((swift_isaMask & *v42) + 0x98))(v115, v118, v119);

      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v35 = v38;
      unint64_t v31 = v36;
      if ((v28 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_19:
      if (sub_100726B50())
      {
        uint64_t v40 = v39;
        sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v41 = v118;
        swift_unknownObjectRelease();
        char v116 = (void *)v40;
        type metadata accessor for IDSGroupEncryptionControllerMember();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v42 = v118;
        swift_unknownObjectRelease();
        uint64_t v38 = v35;
        uint64_t v36 = v31;
        if (v41) {
          continue;
        }
      }
      goto LABEL_39;
    }
  }
  uint64_t v45 = v35 + 5;
  while (v112 != v45)
  {
    unint64_t v44 = *(void *)(v113 + 8 * v45++);
    if (v44)
    {
      uint64_t v38 = v45 - 1;
      goto LABEL_35;
    }
  }
LABEL_39:
  sub_100462C48();
  swift_bridgeObjectRetain_n();
  uint64_t v48 = sub_100725EB0();
  os_log_type_t v49 = sub_1007266E0();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = (uint8_t *)swift_slowAlloc();
    uint64_t v118 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136315138;
    swift_bridgeObjectRetain();
    char v116 = (void *)sub_10043E578(a2, a3, (uint64_t *)&v118);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "%s    ", v50, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  uint64_t v51 = sub_100725EB0();
  os_log_type_t v52 = sub_1007266E0();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v118 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 136315138;
    swift_bridgeObjectRetain();
    char v116 = (void *)sub_10043E578(a2, a3, (uint64_t *)&v118);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s    Participants:", v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v111) + 0x258))();
  uint64_t v54 = result;
  if ((result & 0xC000000000000001) != 0)
  {
    sub_1007268E0();
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    sub_10050DC4C((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
    uint64_t result = sub_100726680();
    uint64_t v54 = (uint64_t)v118;
    uint64_t v55 = v119;
    uint64_t v56 = v120;
    uint64_t v57 = v121;
    unint64_t v58 = v122;
  }
  else
  {
    uint64_t v57 = 0;
    uint64_t v59 = -1 << *(unsigned char *)(result + 32);
    uint64_t v55 = result + 56;
    uint64_t v56 = ~v59;
    uint64_t v60 = -v59;
    if (v60 < 64) {
      uint64_t v61 = ~(-1 << v60);
    }
    else {
      uint64_t v61 = -1;
    }
    unint64_t v58 = v61 & *(void *)(result + 56);
  }
  int64_t v62 = (unint64_t)(v56 + 64) >> 6;
  if (v54 < 0) {
    goto LABEL_54;
  }
LABEL_52:
  if (v58)
  {
    uint64_t v63 = (v58 - 1) & v58;
    unint64_t v64 = __clz(__rbit64(v58)) | (v57 << 6);
    uint64_t v65 = v57;
LABEL_71:
    uint64_t v66 = *(id *)(*(void *)(v54 + 48) + 8 * v64);
    if (!v66) {
      goto LABEL_74;
    }
    while (1)
    {
      char v116 = (void *)v114;
      unint64_t v117 = a3;
      swift_bridgeObjectRetain();
      v124._countAndFlagsBits = 0x2020202020202020;
      v124._object = (void *)0xE800000000000000;
      sub_1007264C0(v124);
      (*(void (**)(uint64_t, uint64_t, unint64_t))((swift_isaMask & *v66) + 0x150))(v115, v114, a3);

      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v57 = v65;
      unint64_t v58 = v63;
      if ((v54 & 0x8000000000000000) == 0) {
        goto LABEL_52;
      }
LABEL_54:
      if (sub_100726950())
      {
        type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        uint64_t v66 = v116;
        swift_unknownObjectRelease();
        uint64_t v65 = v57;
        uint64_t v63 = v58;
        if (v116) {
          continue;
        }
      }
      goto LABEL_74;
    }
  }
  int64_t v67 = v57 + 1;
  if (__OFADD__(v57, 1)) {
    goto LABEL_127;
  }
  if (v67 < v62)
  {
    unint64_t v68 = *(void *)(v55 + 8 * v67);
    uint64_t v65 = v57 + 1;
    if (!v68)
    {
      uint64_t v65 = v57 + 2;
      if (v57 + 2 >= v62) {
        goto LABEL_74;
      }
      unint64_t v68 = *(void *)(v55 + 8 * v65);
      if (!v68)
      {
        uint64_t v65 = v57 + 3;
        if (v57 + 3 >= v62) {
          goto LABEL_74;
        }
        unint64_t v68 = *(void *)(v55 + 8 * v65);
        if (!v68)
        {
          uint64_t v65 = v57 + 4;
          if (v57 + 4 >= v62) {
            goto LABEL_74;
          }
          unint64_t v68 = *(void *)(v55 + 8 * v65);
          if (!v68)
          {
            uint64_t v69 = v57 + 5;
            do
            {
              if (v62 == v69) {
                goto LABEL_74;
              }
              unint64_t v68 = *(void *)(v55 + 8 * v69++);
            }
            while (!v68);
            uint64_t v65 = v69 - 1;
          }
        }
      }
    }
    uint64_t v63 = (v68 - 1) & v68;
    unint64_t v64 = __clz(__rbit64(v68)) + (v65 << 6);
    goto LABEL_71;
  }
LABEL_74:
  sub_100462C48();
  swift_bridgeObjectRetain_n();
  uint64_t v70 = sub_100725EB0();
  os_log_type_t v71 = sub_1007266E0();
  if (os_log_type_enabled(v70, v71))
  {
    uint64_t v72 = (uint8_t *)swift_slowAlloc();
    char v116 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v72 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v73 = v114;
    sub_10043E578(v114, a3, (uint64_t *)&v116);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v70, v71, "%s    ", v72, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v73 = v114;
  }
  uint64_t v74 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v111) + 0x158))();
  uint64_t v76 = __chkstk_darwin(v74, v75);
  uint64_t v78 = (os_unfair_lock_s *)(__chkstk_darwin(v76, v77) + 16);
  os_unfair_lock_lock(v78);
  sub_10050C748(&v116);
  os_unfair_lock_unlock(v78);
  uint64_t v79 = (uint64_t)v116;
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v80 = sub_100725EB0();
  os_log_type_t v81 = sub_1007266E0();
  if (os_log_type_enabled(v80, v81))
  {
    unint64_t v82 = (uint8_t *)swift_slowAlloc();
    char v116 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v82 = 136315138;
    swift_bridgeObjectRetain();
    sub_10043E578(v73, a3, (uint64_t *)&v116);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v80, v81, "%s    Formerly Active Participants:", v82, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v83 = v79 + 64;
  uint64_t v84 = 1 << *(unsigned char *)(v79 + 32);
  uint64_t v85 = -1;
  if (v84 < 64) {
    uint64_t v85 = ~(-1 << v84);
  }
  unint64_t v86 = v85 & *(void *)(v79 + 64);
  int64_t v87 = (unint64_t)(v84 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v88 = 0;
  while (2)
  {
    if (v86)
    {
      unint64_t v89 = __clz(__rbit64(v86));
      v86 &= v86 - 1;
      unint64_t v90 = v89 | (v88 << 6);
LABEL_84:
      uint64_t v91 = *(void **)(*(void *)(v79 + 56) + 8 * v90);
      char v116 = (void *)v73;
      unint64_t v117 = a3;
      swift_bridgeObjectRetain();
      uint64_t v92 = v91;
      v125._countAndFlagsBits = 0x2020202020202020;
      v125._object = (void *)0xE800000000000000;
      sub_1007264C0(v125);
      (*(void (**)(uint64_t, void *, unint64_t))((swift_isaMask & *v92) + 0x150))(v115, v116, v117);

      uint64_t result = swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  int64_t v93 = v88 + 1;
  if (__OFADD__(v88, 1))
  {
    __break(1u);
LABEL_124:
    __break(1u);
LABEL_125:
    __break(1u);
    goto LABEL_126;
  }
  if (v93 >= v87) {
    goto LABEL_102;
  }
  unint64_t v94 = *(void *)(v83 + 8 * v93);
  ++v88;
  if (v94) {
    goto LABEL_101;
  }
  int64_t v88 = v93 + 1;
  if (v93 + 1 >= v87) {
    goto LABEL_102;
  }
  unint64_t v94 = *(void *)(v83 + 8 * v88);
  if (v94) {
    goto LABEL_101;
  }
  int64_t v88 = v93 + 2;
  if (v93 + 2 >= v87) {
    goto LABEL_102;
  }
  unint64_t v94 = *(void *)(v83 + 8 * v88);
  if (v94) {
    goto LABEL_101;
  }
  int64_t v88 = v93 + 3;
  if (v93 + 3 >= v87) {
    goto LABEL_102;
  }
  unint64_t v94 = *(void *)(v83 + 8 * v88);
  if (v94)
  {
LABEL_101:
    unint64_t v86 = (v94 - 1) & v94;
    unint64_t v90 = __clz(__rbit64(v94)) + (v88 << 6);
    goto LABEL_84;
  }
  int64_t v95 = v93 + 4;
  if (v95 >= v87)
  {
LABEL_102:
    uint64_t v96 = swift_release();
    uint64_t result = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v111) + 0x140))(v96);
    uint64_t v97 = result;
    int64_t v98 = 0;
    uint64_t v99 = result + 64;
    uint64_t v100 = 1 << *(unsigned char *)(result + 32);
    uint64_t v101 = -1;
    if (v100 < 64) {
      uint64_t v101 = ~(-1 << v100);
    }
    unint64_t v102 = v101 & *(void *)(result + 64);
    int64_t v103 = (unint64_t)(v100 + 63) >> 6;
    while (1)
    {
      if (v102)
      {
        unint64_t v104 = __clz(__rbit64(v102));
        v102 &= v102 - 1;
        unint64_t v105 = v104 | (v98 << 6);
      }
      else
      {
        int64_t v108 = v98 + 1;
        if (__OFADD__(v98, 1)) {
          goto LABEL_124;
        }
        if (v108 >= v103)
        {
LABEL_122:
          swift_bridgeObjectRelease();
          return swift_release();
        }
        unint64_t v109 = *(void *)(v99 + 8 * v108);
        ++v98;
        if (!v109)
        {
          int64_t v98 = v108 + 1;
          if (v108 + 1 >= v103) {
            goto LABEL_122;
          }
          unint64_t v109 = *(void *)(v99 + 8 * v98);
          if (!v109)
          {
            int64_t v98 = v108 + 2;
            if (v108 + 2 >= v103) {
              goto LABEL_122;
            }
            unint64_t v109 = *(void *)(v99 + 8 * v98);
            if (!v109)
            {
              int64_t v110 = v108 + 3;
              if (v110 >= v103) {
                goto LABEL_122;
              }
              unint64_t v109 = *(void *)(v99 + 8 * v110);
              if (!v109)
              {
                while (1)
                {
                  int64_t v98 = v110 + 1;
                  if (__OFADD__(v110, 1)) {
                    goto LABEL_125;
                  }
                  if (v98 >= v103) {
                    goto LABEL_122;
                  }
                  unint64_t v109 = *(void *)(v99 + 8 * v98);
                  ++v110;
                  if (v109) {
                    goto LABEL_121;
                  }
                }
              }
              int64_t v98 = v110;
            }
          }
        }
LABEL_121:
        unint64_t v102 = (v109 - 1) & v109;
        unint64_t v105 = __clz(__rbit64(v109)) + (v98 << 6);
      }
      int64_t v106 = *(void **)(*(void *)(v97 + 56) + 8 * v105);
      char v116 = (void *)v114;
      unint64_t v117 = a3;
      swift_bridgeObjectRetain();
      unint64_t v107 = v106;
      v126._countAndFlagsBits = 538976288;
      v126._object = (void *)0xE400000000000000;
      sub_1007264C0(v126);
      (*(void (**)(uint64_t, void *, unint64_t))((swift_isaMask & *v107) + 0x270))(v115, v116, v117);

      uint64_t result = swift_bridgeObjectRelease();
    }
  }
  unint64_t v94 = *(void *)(v83 + 8 * v95);
  if (v94)
  {
    int64_t v88 = v95;
    goto LABEL_101;
  }
  while (1)
  {
    int64_t v88 = v95 + 1;
    if (__OFADD__(v95, 1)) {
      break;
    }
    if (v88 >= v87) {
      goto LABEL_102;
    }
    unint64_t v94 = *(void *)(v83 + 8 * v88);
    ++v95;
    if (v94) {
      goto LABEL_101;
    }
  }
LABEL_128:
  __break(1u);
  return result;
}

uint64_t sub_100508B38()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x318))();
}

uint64_t sub_100508B74()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2C0))();
}

uint64_t sub_100508BB0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x350))();
}

uint64_t sub_100508BEC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x320))();
}

uint64_t sub_100508C28()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x388))();
}

uint64_t sub_100508C64()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x258))();
}

uint64_t sub_100508CA0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x260))();
}

uint64_t sub_100508CDC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x268))();
}

uint64_t sub_100508D18()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2D8))();
}

uint64_t sub_100508D54()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x410))();
}

uint64_t sub_100508DB0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x408))();
}

uint64_t sub_100508E0C(void *a1, void *a2, void (*a3)(void), uint64_t *a4, void (*a5)(void))
{
  os_log_type_t v9 = v5;
  uint64_t v12 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v12 < 0) {
      uint64_t v13 = *v5;
    }
    else {
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v14 = a2;
    uint64_t v15 = sub_100726930();

    if (v15)
    {
      swift_bridgeObjectRelease();

      a3(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v38;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_100726920();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v28 = sub_1005090C8(v13, result + 1, a4, a5);
    uint64_t v39 = (void *)v28;
    unint64_t v29 = *(void *)(v28 + 16);
    if (*(void *)(v28 + 24) <= v29)
    {
      uint64_t v34 = v29 + 1;
      id v35 = v14;
      sub_10047E014(v34, a4);
      uint64_t v30 = v39;
    }
    else
    {
      uint64_t v30 = (void *)v28;
      id v31 = v14;
    }
    sub_10046A394((uint64_t)v14, v30);
    *os_log_type_t v9 = (uint64_t)v30;
    swift_bridgeObjectRelease();
    *a1 = v14;
  }
  else
  {
    Swift::Int v17 = *(void *)(v12 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v18 = sub_1007267E0(v17);
    uint64_t v19 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v20 = v18 & ~v19;
    if ((*(void *)(v12 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
    {
      a3(0);
      id v21 = *(id *)(*(void *)(v12 + 48) + 8 * v20);
      char v22 = sub_1007267F0();

      if (v22)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v26 = *(void **)(*(void *)(*v9 + 48) + 8 * v20);
        *a1 = v26;
        id v27 = v26;
        return 0;
      }
      uint64_t v23 = ~v19;
      while (1)
      {
        unint64_t v20 = (v20 + 1) & v23;
        if (((*(void *)(v12 + 56 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          break;
        }
        id v24 = *(id *)(*(void *)(v12 + 48) + 8 * v20);
        char v25 = sub_1007267F0();

        if (v25) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v40 = *v9;
    *os_log_type_t v9 = 0x8000000000000000;
    id v33 = a2;
    sub_100509548((uint64_t)v33, v20, isUniquelyReferenced_nonNull_native, a4, a5);
    *os_log_type_t v9 = v40;
    swift_bridgeObjectRelease();
    *a1 = v33;
  }
  return 1;
}

Swift::Int sub_1005090C8(uint64_t a1, uint64_t a2, uint64_t *a3, void (*a4)(void))
{
  if (a2)
  {
    sub_100431F80(a3);
    uint64_t v6 = sub_1007269D0();
    uint64_t v19 = v6;
    sub_1007268E0();
    if (sub_100726950())
    {
      a4(0);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_10047E014(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = sub_1007267E0(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_100726950());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

uint64_t sub_1005092C4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100431F80(&qword_100A47490);
  uint64_t result = sub_1007269C0();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    id v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  *uint64_t v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_100726DC0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

void sub_100509548(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, void (*a5)(void))
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_10047E014(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_10047EBF0(a4);
      goto LABEL_14;
    }
    sub_10047F044(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = sub_1007267E0(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    a5(0);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_1007267F0();

    if (v16)
    {
LABEL_13:
      sub_100726D30();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_1007267F0();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_1005096D4(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1005092C4();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1005097F8();
      goto LABEL_14;
    }
    sub_100509990();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_100726DC0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_100726D30();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_1005097F8()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A47490);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1007269B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_100509990()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100431F80(&qword_100A47490);
  uint64_t result = sub_1007269C0();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_100726DC0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_100509BF4(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = a2((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    unint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = a2((char *)v9, v6, v4);
    swift_release();
    swift_slowDealloc();
  }
  return v8;
}

void sub_100509D6C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = 0;
  int64_t v4 = 0;
  uint64_t v23 = a3 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a3 + 56);
  int64_t v24 = (unint64_t)(v5 + 63) >> 6;
LABEL_4:
  uint64_t v22 = v3;
  while (1)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v9 = v8 | (v4 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v4++, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v4 >= v24) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v23 + 8 * v4);
    if (!v11) {
      break;
    }
LABEL_18:
    unint64_t v7 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v4 << 6);
LABEL_19:
    unint64_t v13 = *(void **)(*(void *)(a3 + 48) + 8 * v9);
    unint64_t v14 = *(uint64_t (**)(void))((swift_isaMask & *v13) + 0xB8);
    int64_t v15 = v13;
    char v16 = v14();
    if (sub_100450980(v16 & 1, 1)
      || (int64_t v17 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v15) + 0xB0))()) == 0)
    {
    }
    else
    {
      uint64_t v18 = v17;
      char v19 = (*(uint64_t (**)(void))((swift_isaMask & *v17) + 0x80))();

      if ((v19 & 1) == 0)
      {
        *(unint64_t *)((char *)a1 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
        uint64_t v3 = v22 + 1;
        if (!__OFADD__(v22, 1)) {
          goto LABEL_4;
        }
        __break(1u);
LABEL_30:
        swift_retain();
        sub_10050A2A0(a1, a2, v22, a3, (uint64_t *)&unk_100A45420);
        return;
      }
    }
  }
  int64_t v12 = v4 + 1;
  if (v4 + 1 >= v24) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v23 + 8 * v12);
  if (v11) {
    goto LABEL_17;
  }
  int64_t v12 = v4 + 2;
  if (v4 + 2 >= v24) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v23 + 8 * v12);
  if (v11) {
    goto LABEL_17;
  }
  int64_t v12 = v4 + 3;
  if (v4 + 3 >= v24) {
    goto LABEL_30;
  }
  unint64_t v11 = *(void *)(v23 + 8 * v12);
  if (v11)
  {
LABEL_17:
    int64_t v4 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v24) {
      goto LABEL_30;
    }
    unint64_t v11 = *(void *)(v23 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_18;
    }
  }
LABEL_32:
  __break(1u);
}

void sub_10050A008(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v26 = 0;
  int64_t v3 = 0;
  uint64_t v6 = *(void *)(a3 + 56);
  uint64_t v4 = a3 + 56;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v4 - 24);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v5;
  uint64_t v27 = v4;
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v11 = v10 | (v3 << 6);
LABEL_21:
    int64_t v15 = *(void **)(*(void *)(a3 + 48) + 8 * v11);
    char v16 = *(uint64_t (**)(void *))((swift_isaMask & *v15) + 0xB8);
    int64_t v17 = v15;
    char v18 = v16(v17);
    BOOL v19 = sub_100450980(v18 & 1, 1);
    if (v19)
    {

LABEL_26:
      *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_29:
        swift_retain();
        sub_10050A2A0(a1, a2, v26, a3, (uint64_t *)&unk_100A45420);
        return;
      }
    }
    else
    {
      unint64_t v20 = (void *)(*(uint64_t (**)(BOOL))((swift_isaMask & *v17) + 0xB0))(v19);
      if (v20)
      {
        unint64_t v21 = v20;
        char v22 = (*(uint64_t (**)(void *))((swift_isaMask & *v20) + 0x80))(v20);

        if (v22) {
          goto LABEL_26;
        }
      }
      else
      {
      }
    }
  }
  int64_t v12 = v3 + 1;
  if (__OFADD__(v3, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v12 >= v28) {
    goto LABEL_29;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v12);
  ++v3;
  if (v13) {
    goto LABEL_20;
  }
  int64_t v3 = v12 + 1;
  if (v12 + 1 >= v28) {
    goto LABEL_29;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v3);
  if (v13) {
    goto LABEL_20;
  }
  int64_t v3 = v12 + 2;
  if (v12 + 2 >= v28) {
    goto LABEL_29;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v3);
  if (v13)
  {
LABEL_20:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_21;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v28) {
    goto LABEL_29;
  }
  unint64_t v13 = *(void *)(v27 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v28) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v27 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_20;
    }
  }
LABEL_31:
  __break(1u);
}

uint64_t sub_10050A2A0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a4;
  if (!a3)
  {
    unint64_t v10 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v10;
  }
  uint64_t v6 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v5;
  }
  sub_100431F80(a5);
  uint64_t result = sub_1007269E0();
  unint64_t v10 = (void *)result;
  uint64_t v30 = a1;
  if (a2 < 1) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = *a1;
  }
  uint64_t v12 = 0;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    uint64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      goto LABEL_39;
    }
    if (v16 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v30[v16];
    ++v12;
    if (!v17)
    {
      uint64_t v12 = v16 + 1;
      if (v16 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v17 = v30[v12];
      if (!v17)
      {
        uint64_t v12 = v16 + 2;
        if (v16 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v17 = v30[v12];
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = v10[5];
    id v20 = *(id *)(*(void *)(v5 + 48) + 8 * v15);
    uint64_t result = sub_1007267E0(v19);
    uint64_t v21 = -1 << *((unsigned char *)v10 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v13 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v13 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    *(void *)(v10[6] + 8 * v24) = v20;
    ++v10[2];
    if (__OFSUB__(v6--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v6) {
      goto LABEL_36;
    }
  }
  uint64_t v18 = v16 + 3;
  if (v18 >= a2) {
    goto LABEL_36;
  }
  unint64_t v17 = v30[v18];
  if (v17)
  {
    uint64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= a2) {
      goto LABEL_36;
    }
    unint64_t v17 = v30[v12];
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10050A4FC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = sub_100726960();

    if (v6)
    {
      uint64_t v7 = sub_10050A6CC();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = sub_1007267E0(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = sub_1007267F0();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = sub_1007267F0();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10047EBF0((uint64_t *)&unk_100A45420);
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_10047F2BC(v11);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10050A6CC()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_100726920();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_1005090C8(v3, v2, (uint64_t *)&unk_100A45420, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerParticipant);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = sub_1007267E0(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = sub_1007267F0();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_10047F2BC(v8);
      if (sub_1007267F0())
      {
        *uint64_t v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = sub_1007267F0();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10050A874(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_10047B0C4((uint64_t)a1);
    char v15 = v14;
    swift_bridgeObjectRelease();
    if (v15)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v2;
      uint64_t v19 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_10:

        uint64_t v13 = *(void *)(*(void *)(v17 + 56) + 8 * v9);
        sub_10047CCC4(v9, v17);
        *uint64_t v2 = v17;
        goto LABEL_11;
      }
LABEL_16:
      sub_10050B930(&qword_100A47498);
      uint64_t v17 = v19;
      goto LABEL_10;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = *v2;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = a1;
  uint64_t v7 = sub_100726B40();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_100726B10();
  unint64_t v9 = sub_10050ACBC(v5, v8, &qword_100A47498, (unint64_t *)&unk_100A47EC0, (uint64_t)IDSURI_ptr, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerMember);
  swift_retain();
  unint64_t v10 = sub_10047B0C4((uint64_t)v6);
  char v12 = v11;
  swift_release();
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }

  uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  sub_10047CCC4(v10, v9);
  *uint64_t v2 = v9;
LABEL_11:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10050AA30(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  if ((*v2 & 0xC000000000000001) == 0)
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = sub_1004F2D60((uint64_t)a1);
    char v15 = v14;
    swift_bridgeObjectRelease();
    if (v15)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v2;
      uint64_t v19 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (isUniquelyReferenced_nonNull_native)
      {
LABEL_10:

        uint64_t v13 = *(void *)(*(void *)(v17 + 56) + 8 * v9);
        sub_10047CCC4(v9, v17);
        *uint64_t v2 = v17;
        goto LABEL_11;
      }
LABEL_16:
      sub_10050B930(&qword_100A47488);
      uint64_t v17 = v19;
      goto LABEL_10;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = *v2;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = a1;
  uint64_t v7 = sub_100726B40();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_100726B10();
  unint64_t v9 = sub_10050ACBC(v5, v8, &qword_100A47488, (unint64_t *)&qword_100A47A80, (uint64_t)IDSPushToken_ptr, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerParticipant);
  swift_retain();
  unint64_t v10 = sub_1004F2D60((uint64_t)v6);
  char v12 = v11;
  swift_release();
  if ((v12 & 1) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }

  uint64_t v13 = *(void *)(*(void *)(v9 + 56) + 8 * v10);
  sub_10047CCC4(v10, v9);
  *uint64_t v2 = v9;
LABEL_11:
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_10050ABEC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10045C784(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10050BC74();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1004F41E4(v6, v9);
  uint64_t *v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

Swift::Int sub_10050ACBC(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(void))
{
  if (a2)
  {
    sub_100431F80(a3);
    uint64_t v9 = sub_100726BD0();
    uint64_t v25 = v9;
    sub_100726AB0();
    uint64_t v10 = sub_100726B50();
    if (v10)
    {
      uint64_t v11 = v10;
      sub_100462C50(0, a4);
      do
      {
        swift_dynamicCast();
        a6(0);
        swift_dynamicCast();
        uint64_t v9 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        if (*(void *)(v25 + 24) <= v19)
        {
          sub_10050AF04(v19 + 1, 1, a3);
          uint64_t v9 = v25;
        }
        Swift::Int result = sub_1007267E0(*(void *)(v9 + 40));
        uint64_t v13 = v9 + 64;
        uint64_t v14 = -1 << *(unsigned char *)(v9 + 32);
        unint64_t v15 = result & ~v14;
        unint64_t v16 = v15 >> 6;
        if (((-1 << v15) & ~*(void *)(v9 + 64 + 8 * (v15 >> 6))) != 0)
        {
          unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v9 + 64 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v20 = 0;
          unint64_t v21 = (unint64_t)(63 - v14) >> 6;
          do
          {
            if (++v16 == v21 && (v20 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v22 = v16 == v21;
            if (v16 == v21) {
              unint64_t v16 = 0;
            }
            v20 |= v22;
            uint64_t v23 = *(void *)(v13 + 8 * v16);
          }
          while (v23 == -1);
          unint64_t v17 = __clz(__rbit64(~v23)) + (v16 << 6);
        }
        *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
        uint64_t v18 = 8 * v17;
        *(void *)(*(void *)(v9 + 48) + v18) = v24;
        *(void *)(*(void *)(v9 + 56) + v18) = v11;
        ++*(void *)(v9 + 16);
        uint64_t v11 = sub_100726B50();
      }
      while (v11);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v9;
}

uint64_t sub_10050AF04(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_100431F80(a3);
  uint64_t v7 = sub_100726BC0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  unint64_t v37 = v3;
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v12) {
      break;
    }
    uint64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v38 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v38 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v12)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v38 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v12) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v38 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    id v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((a2 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    uint64_t result = sub_1007267E0(*(void *)(v8 + 40));
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  uint64_t v24 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_10050B1D4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A47480);
  uint64_t result = sub_100726BC0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
    id v34 = v3;
    int64_t v35 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v21 >= v35) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v35)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_40;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v35);
              }
              else {
                *uint64_t v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void **)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        id v31 = v30;
      }
      uint64_t result = sub_100726DC0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_10050B488(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A47470);
  char v38 = a2;
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_100726DD0();
    sub_100726490();
    uint64_t result = sub_100726E30();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_10050B798(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1007268A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        uint64_t result = sub_100726DC0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            unint64_t v16 = (void *)(v15 + 8 * v3);
            unint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *unint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *uint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

id sub_10050B930(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100431F80(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_100726BB0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    uint64_t v19 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    *(void *)(*(void *)(v5 + 56) + v17) = v19;
    id v20 = v18;
    id result = v19;
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10050BAD0()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A47480);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_10050BC74()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A47470);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_10050BE28(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_100726B10();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int *v3 = sub_10050ACBC(v7, result + 1, &qword_100A47498, (unint64_t *)&unk_100A47EC0, (uint64_t)IDSURI_ptr, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerMember);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  Swift::Int v10 = *v3;
  Swift::Int *v3 = 0x8000000000000000;
  sub_10050C040(a1, a2, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void *))sub_10047B0C4, &qword_100A47498, (unint64_t *)&unk_100A47EC0);
  Swift::Int *v3 = v10;

  return swift_bridgeObjectRelease();
}

uint64_t sub_10050BF34(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_100726B10();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int *v3 = sub_10050ACBC(v7, result + 1, &qword_100A47488, (unint64_t *)&qword_100A47A80, (uint64_t)IDSPushToken_ptr, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerParticipant);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  Swift::Int v10 = *v3;
  Swift::Int *v3 = 0x8000000000000000;
  sub_10050C040(a1, a2, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void *))sub_1004F2D60, &qword_100A47488, (unint64_t *)&qword_100A47A80);
  Swift::Int *v3 = v10;

  return swift_bridgeObjectRelease();
}

void sub_10050C040(uint64_t a1, void *a2, char a3, uint64_t (*a4)(void *), uint64_t *a5, unint64_t *a6)
{
  Swift::Int v10 = v6;
  uint64_t v13 = *v6;
  unint64_t v15 = a4(a2);
  uint64_t v16 = *(void *)(v13 + 16);
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v19 = v14;
  uint64_t v20 = *(void *)(v13 + 24);
  if (v20 >= v18 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v20 >= v18 && (a3 & 1) == 0)
  {
    sub_10050B930(a5);
LABEL_7:
    int64_t v21 = (void *)*v10;
    if (v19)
    {
LABEL_8:
      uint64_t v22 = v21[7];

      *(void *)(v22 + 8 * v15) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10050AF04(v18, a3 & 1, a5);
  uint64_t v23 = a4(a2);
  if ((v19 & 1) != (v24 & 1))
  {
LABEL_17:
    sub_100462C50(0, a6);
    sub_100726D40();
    __break(1u);
    return;
  }
  unint64_t v15 = v23;
  int64_t v21 = (void *)*v10;
  if (v19) {
    goto LABEL_8;
  }
LABEL_11:
  v21[(v15 >> 6) + 8] |= 1 << v15;
  uint64_t v25 = 8 * v15;
  *(void *)(v21[6] + v25) = a2;
  *(void *)(v21[7] + v25) = a1;
  uint64_t v26 = v21[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v21[2] = v28;

  id v29 = a2;
}

void sub_10050C1E4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10045C7FC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_10050BAD0();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];

      *(void *)(v17 + 8 * v10) = a1;
      return;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v20 = 8 * v10;
    *(void *)(v16[6] + v20) = a2;
    *(void *)(v16[7] + v20) = a1;
    uint64_t v21 = v16[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      void v16[2] = v23;
      return;
    }
    goto LABEL_14;
  }
  sub_10050B1D4(v13, a3 & 1);
  unint64_t v18 = sub_10045C7FC(a2);
  if ((v14 & 1) == (v19 & 1))
  {
    unint64_t v10 = v18;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_100726D40();
  __break(1u);
}

void sub_10050C320(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10045C784(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_10050BC74();
LABEL_7:
    unint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_10050B488(v15, a4 & 1);
  unint64_t v20 = sub_10045C784(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_100726D40();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  unint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v22 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_10050C490(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  char v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_10050C518(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    unsigned int v6 = *(void **)(*(void *)(a5 + 56) + 8 * a2);
    *uint64_t result = v6;
    swift_bridgeObjectRetain();
    id v7 = v6;
    return (void *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

unint64_t sub_10050C5A8(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100431F80(&qword_100A47480);
  uint64_t v3 = (void *)sub_100726BE0();
  uint64_t v4 = a1[4];
  uint64_t v5 = (void *)a1[5];
  unint64_t result = sub_10045C7FC(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v17 = v5;
    return (unint64_t)v3;
  }
  unint64_t v8 = (void **)(a1 + 7);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v4;
    *(void *)(v3[7] + v9) = v5;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v4 = (uint64_t)*(v8 - 1);
    BOOL v14 = *v8;
    id v15 = v5;
    unint64_t result = sub_10045C7FC(v4);
    unint64_t v8 = v13;
    uint64_t v5 = v14;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_10050C6A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10050C708@<X0>(uint64_t *a1@<X8>)
{
  return sub_1004F8BBC((uint64_t (*)(uint64_t))sub_10046FDF4, a1);
}

void *sub_10050C748@<X0>(void *a1@<X8>)
{
  return sub_10046C520(a1);
}

uint64_t sub_10050C760@<X0>(uint64_t *a1@<X8>)
{
  return sub_1004F8BBC((uint64_t (*)(uint64_t))sub_1004F84E8, a1);
}

uint64_t sub_10050C7A0@<X0>(void *a1@<X8>)
{
  return sub_10050E494(&OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsByID, a1);
}

id sub_10050C7C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v51 = a6;
  uint64_t v52 = a8;
  uint64_t v49 = a4;
  uint64_t v50 = a5;
  uint64_t v47 = a1;
  uint64_t v48 = a3;
  uint64_t v46 = a2;
  uint64_t v53 = a9;
  uint64_t v54 = a7;
  uint64_t v45 = sub_100726740();
  uint64_t v10 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v11);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100726700();
  __chkstk_darwin(v14, v15);
  uint64_t v16 = sub_100725F20();
  __chkstk_darwin(v16 - 8, v17);
  unint64_t v18 = v9;
  sub_1004DFE9C(0);
  sub_1004DFE9C(1);
  uint64_t v44 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_q;
  sub_100462C50(0, (unint64_t *)&qword_100A45480);
  sub_100725F00();
  uint64_t v56 = _swiftEmptyArrayStorage;
  sub_10050DC4C(&qword_100A44A68, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100431F80((uint64_t *)&unk_100A45490);
  sub_1004413A8((unint64_t *)&qword_100A44A70, (uint64_t *)&unk_100A45490);
  sub_100726890();
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v13, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v45);
  *(void *)&v18[v44] = sub_100726760();
  uint64_t v19 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_lock;
  sub_100431F80((uint64_t *)&unk_100A454B0);
  uint64_t v20 = swift_allocObject();
  *(_DWORD *)(v20 + 16) = 0;
  *(void *)&v18[v19] = v20;
  char v21 = &v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_delegate];
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v22 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_sessionsByID;
  *(void *)&v18[v22] = sub_1004F75D0((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v23 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsLock;
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + 16) = 0;
  *(void *)&v18[v23] = v24;
  uint64_t v25 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsByID;
  *(void *)&v18[v25] = sub_10050C5A8(_swiftEmptyArrayStorage);
  uint64_t v26 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsByPushToken;
  *(void *)&v18[v26] = sub_1004F76EC((uint64_t)_swiftEmptyArrayStorage, &qword_100A47488, (uint64_t (*)(id))sub_1004F2D60);
  uint64_t v27 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_formerlyActiveParticipantsByID;
  *(void *)&v18[v27] = sub_10050C5A8(_swiftEmptyArrayStorage);
  uint64_t v28 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_membersByURI;
  *(void *)&v18[v28] = sub_1004F76EC((uint64_t)_swiftEmptyArrayStorage, &qword_100A47498, (uint64_t (*)(id))sub_10047B0C4);
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_preKeyAckCount] = 0;
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_localParticipantID] = 0;
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_endpointSubscription] = 0;
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_encryptionSequenceNumber] = 0;
  id v29 = &v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_needsKMCacheResetAfter];
  uint64_t v30 = sub_100725CC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup__shortMKIEnabled] = 0;
  uint64_t v31 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_logStateLock;
  uint64_t v32 = swift_allocObject();
  *(_DWORD *)(v32 + 16) = 0;
  *(void *)&v18[v31] = v32;
  swift_beginAccess();
  *((void *)v21 + 1) = v46;
  swift_unknownObjectWeakAssign();
  id v33 = &v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id];
  uint64_t v34 = v49;
  int64_t v35 = v50;
  *id v33 = v48;
  v33[1] = v34;
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_config] = v35;
  uint64_t v37 = v51;
  uint64_t v36 = v52;
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_identityController] = v51;
  sub_1004407E0(v36, (uint64_t)&v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_cryptoHandler]);
  uint64_t v38 = v53;
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_pushHandler] = v54;
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_sessionProvider] = v38;
  id v39 = v35;
  id v40 = v37;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();

  id v41 = (objc_class *)type metadata accessor for IDSGroupEncryptionControllerGroup();
  v55.receiver = v18;
  v55.super_class = v41;
  id v42 = objc_msgSendSuper2(&v55, "init");
  sub_10044C6AC(v36);
  return v42;
}

uint64_t type metadata accessor for IDSGroupEncryptionControllerGroup()
{
  uint64_t result = qword_100A517C8;
  if (!qword_100A517C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10050CD3C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = sub_1004F76EC((uint64_t)_swiftEmptyArrayStorage, &qword_100A47498, (uint64_t (*)(id))sub_10047B0C4);
  uint64_t v3 = (unint64_t *)(v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_membersByURI);
  swift_beginAccess();
  unint64_t *v3 = v2;
  return swift_bridgeObjectRelease();
}

void sub_10050CDCC()
{
  uint64_t v1 = *(void **)(v0 + 24);
  unint64_t v2 = *(void **)(v0 + 32);
  swift_beginAccess();
  id v3 = v1;
  sub_10050BE28((uint64_t)v2, v3);
  swift_endAccess();
}

uint64_t sub_10050CE48@<X0>(uint64_t *a1@<X8>)
{
  id v3 = *(void **)(v1 + 24);
  swift_beginAccess();
  *a1 = sub_10050A874(v3);
  return swift_endAccess();
}

uint64_t sub_10050CEBC(void *a1)
{
  id v3 = *(void **)(v1 + 16);
  sub_100462C50(0, (unint64_t *)&qword_100A44F08);
  id v4 = [v3 tokenFreeURI];
  id v5 = [a1 tokenFreeURI];
  LOBYTE(v3) = sub_1007267F0();

  return v3 & 1;
}

void sub_10050CF60(unint64_t a1, uint64_t (*a2)(id, id))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    unint64_t v21 = 0;
    uint64_t v3 = 0;
    unint64_t v4 = 0;
    unint64_t v5 = sub_100726AB0() | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v3 = ~v6;
    unint64_t v21 = a1 + 64;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v4 = v8 & *(void *)(a1 + 64);
    unint64_t v5 = a1;
  }
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  int64_t v20 = (unint64_t)(v3 + 64) >> 6;
  if ((v5 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v10 = (v4 - 1) & v4;
    unint64_t v11 = __clz(__rbit64(v4)) | (v9 << 6);
    uint64_t v12 = v9;
    goto LABEL_29;
  }
  int64_t v15 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v15 < v20)
    {
      unint64_t v16 = *(void *)(v21 + 8 * v15);
      uint64_t v12 = v9 + 1;
      if (v16) {
        goto LABEL_28;
      }
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v20) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v12);
      if (v16) {
        goto LABEL_28;
      }
      uint64_t v12 = v9 + 3;
      if (v9 + 3 >= v20) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v12);
      if (v16) {
        goto LABEL_28;
      }
      uint64_t v12 = v9 + 4;
      if (v9 + 4 >= v20) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v21 + 8 * v12);
      if (v16)
      {
LABEL_28:
        uint64_t v10 = (v16 - 1) & v16;
        unint64_t v11 = __clz(__rbit64(v16)) + (v12 << 6);
LABEL_29:
        uint64_t v18 = 8 * v11;
        uint64_t v19 = *(void **)(*(void *)(v5 + 56) + v18);
        id v13 = *(id *)(*(void *)(v5 + 48) + v18);
        id v14 = v19;
        if (v13)
        {
          do
          {
            if (a2(v13, v14)) {
              break;
            }

            uint64_t v9 = v12;
            unint64_t v4 = v10;
            if ((v5 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!sub_100726B50()) {
              break;
            }
            sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v13 = v22;
            swift_unknownObjectRelease();
            type metadata accessor for IDSGroupEncryptionControllerMember();
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v14 = v22;
            swift_unknownObjectRelease();
            uint64_t v12 = v9;
            uint64_t v10 = v4;
          }
          while (v22);
        }
        goto LABEL_33;
      }
      uint64_t v12 = v9 + 5;
      if (v9 + 5 < v20)
      {
        unint64_t v16 = *(void *)(v21 + 8 * v12);
        if (!v16)
        {
          uint64_t v17 = v9 + 6;
          while (v20 != v17)
          {
            unint64_t v16 = *(void *)(v21 + 8 * v17++);
            if (v16)
            {
              uint64_t v12 = v17 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    sub_100462C48();
    return;
  }
  __break(1u);
}

uint64_t sub_10050D274@<X0>(void *a1@<X8>)
{
  return sub_10050E494(&OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_membersByURI, a1);
}

void sub_10050D294(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1007268E0();
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    sub_10050DC4C((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
    sub_100726680();
    uint64_t v1 = v17;
    uint64_t v16 = v18;
    uint64_t v2 = v19;
    uint64_t v3 = v20;
    unint64_t v4 = v21;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v15 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
LABEL_8:
  if (v4)
  {
    uint64_t v8 = (v4 - 1) & v4;
    unint64_t v9 = __clz(__rbit64(v4)) | (v3 << 6);
    uint64_t v10 = v3;
    goto LABEL_29;
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 < v15)
    {
      unint64_t v13 = *(void *)(v16 + 8 * v12);
      uint64_t v10 = v3 + 1;
      if (v13) {
        goto LABEL_28;
      }
      uint64_t v10 = v3 + 2;
      if (v3 + 2 >= v15) {
        goto LABEL_33;
      }
      unint64_t v13 = *(void *)(v16 + 8 * v10);
      if (v13) {
        goto LABEL_28;
      }
      uint64_t v10 = v3 + 3;
      if (v3 + 3 >= v15) {
        goto LABEL_33;
      }
      unint64_t v13 = *(void *)(v16 + 8 * v10);
      if (v13) {
        goto LABEL_28;
      }
      uint64_t v10 = v3 + 4;
      if (v3 + 4 >= v15) {
        goto LABEL_33;
      }
      unint64_t v13 = *(void *)(v16 + 8 * v10);
      if (v13)
      {
LABEL_28:
        uint64_t v8 = (v13 - 1) & v13;
        unint64_t v9 = __clz(__rbit64(v13)) + (v10 << 6);
LABEL_29:
        id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
        if (v11)
        {
          do
          {
            sub_100462C50(0, (unint64_t *)&qword_100A44F08);
            if (sub_1007267F0()) {
              break;
            }

            uint64_t v3 = v10;
            unint64_t v4 = v8;
            if ((v1 & 0x8000000000000000) == 0) {
              goto LABEL_8;
            }
LABEL_10:
            if (!sub_100726950()) {
              break;
            }
            type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
            swift_unknownObjectRetain();
            swift_dynamicCast();
            id v11 = v22;
            swift_unknownObjectRelease();
            uint64_t v10 = v3;
            uint64_t v8 = v4;
          }
          while (v22);
        }
        goto LABEL_33;
      }
      uint64_t v10 = v3 + 5;
      if (v3 + 5 < v15)
      {
        unint64_t v13 = *(void *)(v16 + 8 * v10);
        if (!v13)
        {
          uint64_t v14 = v3 + 6;
          while (v15 != v14)
          {
            unint64_t v13 = *(void *)(v16 + 8 * v14++);
            if (v13)
            {
              uint64_t v10 = v14 - 1;
              goto LABEL_28;
            }
          }
          goto LABEL_33;
        }
        goto LABEL_28;
      }
    }
LABEL_33:
    sub_100462C48();
    return;
  }
  __break(1u);
}

void sub_10050D5B0(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v24 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v26 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v10 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v11 = v10 | (v5 << 6);
LABEL_18:
    int64_t v15 = *(void **)(*(void *)(a3 + 48) + 8 * v11);
    uint64_t v16 = *(uint64_t (**)(void))((swift_isaMask & *v15) + 0xB0);
    uint64_t v17 = v15;
    uint64_t v18 = v16();
    if (v18)
    {
      uint64_t v19 = (void *)v18;
      type metadata accessor for IDSGroupEncryptionControllerMember();
      id v20 = a4;
      char v21 = sub_1007267F0();

      if (v21)
      {
        *(unint64_t *)((char *)a1 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
        BOOL v12 = __OFADD__(v24++, 1);
        if (v12) {
          goto LABEL_30;
        }
      }
    }
    else
    {
    }
  }
  BOOL v12 = __OFADD__(v5++, 1);
  if (v12)
  {
    __break(1u);
    goto LABEL_29;
  }
  if (v5 >= v26) {
    goto LABEL_27;
  }
  unint64_t v13 = *(void *)(v6 + 8 * v5);
  if (v13)
  {
LABEL_17:
    unint64_t v9 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v5 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v5 + 1;
  if (v5 + 1 >= v26) {
    goto LABEL_27;
  }
  unint64_t v13 = *(void *)(v6 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v5 + 2;
  if (v5 + 2 >= v26) {
    goto LABEL_27;
  }
  unint64_t v13 = *(void *)(v6 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v5 + 3;
  if (v5 + 3 >= v26)
  {
LABEL_27:
    swift_retain();
    sub_10050A2A0(a1, a2, v24, a3, (uint64_t *)&unk_100A45420);
    return;
  }
  unint64_t v13 = *(void *)(v6 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v5 = v14;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v5 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v5 >= v26) {
      goto LABEL_27;
    }
    unint64_t v13 = *(void *)(v6 + 8 * v5);
    ++v14;
    if (v13) {
      goto LABEL_17;
    }
  }
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
}

uint64_t sub_10050D7F4(uint64_t a1, void *a2)
{
  char v4 = *(unsigned char *)(a1 + 32);
  unsigned int v5 = v4 & 0x3F;
  unint64_t v6 = (unint64_t)((1 << v4) + 63) >> 6;
  uint64_t isStackAllocationSafe = a2;
  unint64_t v9 = (void *)isStackAllocationSafe;
  if (v5 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v8);
    unint64_t v10 = (char *)&v18 - ((8 * v6 + 15) & 0x3FFFFFFFFFFFFFF0);
    bzero(v10, 8 * v6);
    id v11 = v9;
    sub_10050D5B0((unint64_t *)v10, v6, a1, v11);
    uint64_t v13 = v12;
    swift_release();

    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v14 = (void *)swift_slowAlloc();
    bzero(v14, 8 * v6);
    id v15 = v9;
    sub_10050D5B0((unint64_t *)v14, v6, a1, v15);
    uint64_t v13 = v16;
    swift_release();

    swift_slowDealloc();
  }
  return v13;
}

Swift::Int sub_10050D9A8(uint64_t a1, void *a2)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_10050D7F4(a1, a2);
  }
  id v2 = a2;
  sub_1007268E0();
  if (sub_100726950())
  {
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    do
    {
      uint64_t v3 = swift_dynamicCast();
      uint64_t v4 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v19) + 0xB0))(v3);
      if (v4
        && (unsigned int v5 = (void *)v4,
            type metadata accessor for IDSGroupEncryptionControllerMember(),
            id v6 = v2,
            char v7 = sub_1007267F0(),
            v5,
            v6,
            (v7 & 1) != 0))
      {
        unint64_t v8 = *((void *)&_swiftEmptySetSingleton + 2);
        if (*((void *)&_swiftEmptySetSingleton + 3) <= v8) {
          sub_10047E014(v8 + 1, (uint64_t *)&unk_100A45420);
        }
        Swift::Int result = sub_1007267E0(*((void *)&_swiftEmptySetSingleton + 5));
        unint64_t v10 = (char *)&_swiftEmptySetSingleton + 56;
        uint64_t v11 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*((void *)&_swiftEmptySetSingleton + (v12 >> 6) + 7)) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*((void *)&_swiftEmptySetSingleton + (v12 >> 6) + 7))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v15 = 0;
          unint64_t v16 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v16 && (v15 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v17 = v13 == v16;
            if (v13 == v16) {
              unint64_t v13 = 0;
            }
            v15 |= v17;
            uint64_t v18 = *(void *)&v10[8 * v13];
          }
          while (v18 == -1);
          unint64_t v14 = __clz(__rbit64(~v18)) + (v13 << 6);
        }
        *(void *)&v10[(v14 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v14;
        *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v14) = v19;
        ++*((void *)&_swiftEmptySetSingleton + 2);
      }
      else
      {
      }
    }
    while (sub_100726950());
  }

  swift_release();
  return (Swift::Int)&_swiftEmptySetSingleton;
}

unint64_t sub_10050DC20@<X0>(void *a1@<X8>)
{
  return sub_1004FC8A4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10050DC4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10050DC94@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  id v4 = [*(id *)(v1 + 24) participantIdentifier];
  unsigned int v5 = (uint64_t *)(v3
                 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_formerlyActiveParticipantsByID);
  unint64_t result = swift_beginAccess();
  uint64_t v7 = *v5;
  if (*(void *)(v7 + 16) && (unint64_t result = sub_10045C7FC((uint64_t)v4), (v8 & 1) != 0))
  {
    unint64_t v9 = *(void **)(*(void *)(v7 + 56) + 8 * result);
    unint64_t result = v9;
  }
  else
  {
    unint64_t v9 = 0;
  }
  *a1 = v9;
  return result;
}

void sub_10050DD38()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v2 = *(void **)(v0 + 32);
  uint64_t v3 = *(void **)(v0 + 40);
  id v4 = [*(id *)(v0 + 24) participantIdentifier];
  unsigned int v5 = (uint64_t *)(v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsByID);
  swift_beginAccess();
  id v6 = v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v5;
  uint64_t *v5 = 0x8000000000000000;
  sub_10050C1E4((uint64_t)v6, (uint64_t)v4, isUniquelyReferenced_nonNull_native);
  uint64_t *v5 = v10;
  swift_bridgeObjectRelease();
  swift_endAccess();
  swift_beginAccess();
  id v8 = v6;
  id v9 = v3;
  sub_10050BF34((uint64_t)v8, v9);
  swift_endAccess();
}

uint64_t sub_10050DE48()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(char **)(v0 + 24);
  uint64_t v3 = *(void *)&v1[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID];
  id v4 = (uint64_t *)(v2 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsByID);
  swift_beginAccess();
  unsigned int v5 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v4;
  *id v4 = 0x8000000000000000;
  sub_10050C1E4((uint64_t)v5, v3, isUniquelyReferenced_nonNull_native);
  *id v4 = v18;
  swift_bridgeObjectRelease();
  swift_endAccess();
  uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken];
  swift_beginAccess();
  id v8 = v5;
  id v9 = v7;
  sub_10050BF34((uint64_t)v8, v9);
  swift_endAccess();

  uint64_t v10 = (uint64_t *)(v2
                  + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_formerlyActiveParticipantsByID);
  swift_beginAccess();
  unint64_t v11 = sub_10045C7FC(v3);
  if (v12)
  {
    unint64_t v13 = v11;
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v10;
    uint64_t v19 = *v10;
    *uint64_t v10 = 0x8000000000000000;
    if ((v14 & 1) == 0)
    {
      sub_10050BAD0();
      uint64_t v15 = v19;
    }
    unint64_t v16 = *(void **)(*(void *)(v15 + 56) + 8 * v13);
    sub_10050B798(v13, v15);
    *uint64_t v10 = v15;
    swift_bridgeObjectRelease();
  }
  return swift_endAccess();
}

uint64_t sub_10050DFEC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v1 = *(char **)(v0 + 24);
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken];
  swift_beginAccess();
  id v4 = v3;
  unsigned int v5 = (void *)sub_10050AA30(v4);
  swift_endAccess();

  uint64_t v6 = *(void *)&v1[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID];
  uint64_t v7 = (uint64_t *)(v2 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsByID);
  swift_beginAccess();
  unint64_t v8 = sub_10045C7FC(v6);
  if (v9)
  {
    unint64_t v10 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *v7;
    uint64_t v18 = *v7;
    uint64_t *v7 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10050BAD0();
      uint64_t v12 = v18;
    }
    unint64_t v13 = *(void **)(*(void *)(v12 + 56) + 8 * v10);
    sub_10050B798(v10, v12);
    uint64_t *v7 = v12;
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  char v14 = (uint64_t *)(v2
                  + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_formerlyActiveParticipantsByID);
  swift_beginAccess();
  uint64_t v15 = v1;
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v19 = *v14;
  *char v14 = 0x8000000000000000;
  sub_10050C1E4((uint64_t)v15, v6, v16);
  *char v14 = v19;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_10050E18C()
{
  return sub_10050023C(*(void *)(v0 + 16));
}

uint64_t sub_10050E1B8()
{
  return sub_100504D20(*(void **)(v0 + 16));
}

uint64_t sub_10050E1E8@<X0>(char *a1@<X8>)
{
  return sub_100505348(*(void **)(v1 + 16), a1);
}

uint64_t sub_10050E214()
{
  return sub_100505B18(*(void **)(v0 + 16));
}

uint64_t sub_10050E240(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10050E2A0()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[3];
  unint64_t v3 = v0[4];
  id v4 = (char *)v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_stateLogger;
  swift_bridgeObjectRetain_n();
  unsigned int v5 = sub_100725EB0();
  os_log_type_t v6 = sub_1007266E0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    sub_10043E578(v2, v3, &v9);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Event: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, void, unint64_t))((swift_isaMask & *v1) + 0x410))(v4, 0, 0xE000000000000000);
}

uint64_t sub_10050E474@<X0>(void *a1@<X8>)
{
  return sub_10050E494(&OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_formerlyActiveParticipantsByID, a1);
}

uint64_t sub_10050E494@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = (void *)(*(void *)(v2 + 16) + *a1);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_10050E4F8()
{
  return type metadata accessor for IDSGroupEncryptionControllerGroup();
}

void sub_10050E500()
{
  sub_100725ED0();
  if (v0 <= 0x3F)
  {
    sub_10050E654();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_10050E654()
{
  if (!qword_100A47468)
  {
    sub_100725CC0();
    unint64_t v0 = sub_100726810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100A47468);
    }
  }
}

uint64_t sub_10050E6AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10050E714(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10050E77C()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10050E7B4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0x378))();
}

uint64_t sub_10050E810(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10050E820()
{
  return swift_release();
}

uint64_t sub_10050E828()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_10050E870()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  id v4 = *(void **)(v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_pushHandler);
  sub_100431F80(&qword_100A45660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100794E70;
  *(void *)(inited + 32) = sub_100726430();
  *(void *)(inited + 40) = v6;
  uint64_t v7 = v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id;
  uint64_t v8 = *(void *)(v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id);
  uint64_t v9 = *(void *)(v7 + 8);
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 56) = v9;
  *(void *)(inited + 80) = sub_100726430();
  *(void *)(inited + 88) = v10;
  uint64_t v11 = v2 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_sessionID;
  uint64_t v12 = *(void *)(v2 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_sessionID);
  uint64_t v13 = *(void *)(v11 + 8);
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v12;
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 128) = sub_100726430();
  *(void *)(inited + 136) = v14;
  *(void *)(inited + 168) = &type metadata for Bool;
  *(unsigned char *)(inited + 144) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10046ECE8(inited);
  Class isa = sub_100726380().super.isa;
  swift_bridgeObjectRelease();
  NSString v16 = sub_100726420();
  NSString v17 = sub_100726420();
  [v4 sendPreKeyRequestMessage:isa toDestination:v3 forGroup:v16 sessionID:v17];
}

uint64_t sub_10050EA08()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0x348))();
}

uint64_t sub_10050EA64()
{
  return sub_10050E214();
}

uint64_t sub_10050EA7C()
{
  return sub_10050E18C();
}

uint64_t sub_10050EA94@<X0>(uint64_t *a1@<X8>)
{
  return sub_10050C760(a1);
}

uint64_t sub_10050EAAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_10050C708(a1);
}

uint64_t sub_10050EAD8()
{
  return sub_10050E1B8();
}

unint64_t sub_10050EAF0@<X0>(void *a1@<X8>)
{
  return sub_10050DC20(a1);
}

id sub_10050EB08(void *a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  sub_1004DFE9C(11);
  *(void *)&v3[OBJC_IVAR___IDSSenderKeyEncryptionController_persistenceManager] = a1;
  id v4 = a1;

  v7.receiver = v3;
  v7.super_class = v1;
  id v5 = objc_msgSendSuper2(&v7, "init");

  return v5;
}

id sub_10050EC34(unint64_t a1, uint64_t a2, id a3, NSObject *a4)
{
  id v5 = v4;
  uint64_t v142 = a1;
  id v143 = a2;
  uint64_t v8 = sub_100725EA0();
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100431F80((uint64_t *)&unk_100A468B0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for SenderKeyAndState(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v18);
  id v20 = (uint64_t *)((char *)&v123 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v141 = OBJC_IVAR___IDSSenderKeyEncryptionController_persistenceManager;
  id v21 = *(id *)&v4[OBJC_IVAR___IDSSenderKeyEncryptionController_persistenceManager];
  sub_10055E8DC(a3, a4, (uint64_t)v15);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_10050FCA0((uint64_t)v15);
LABEL_5:
    uint64_t v34 = a4;
    id v35 = a3;
    uint64_t v36 = v34;
    id v37 = v35;
    uint64_t v38 = sub_100725EB0();
    os_log_type_t v39 = sub_1007266E0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      id v41 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v40 = 138412546;
      v144[0] = (uint64_t)v37;
      id v42 = v37;
      id v143 = v38;
      id v43 = v42;
      sub_100726830();
      *id v41 = v37;

      *(_WORD *)(v40 + 12) = 2112;
      v144[0] = (uint64_t)v36;
      uint64_t v44 = v36;
      uint64_t v38 = v143;
      sub_100726830();
      v41[1] = v36;

      _os_log_impl((void *)&_mh_execute_header, v38, v39, "Missing sender key to encrypt to: %@ from: %@", (uint8_t *)v40, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_100431F80(&qword_100A45660);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100794E30;
    *(void *)(inited + 32) = sub_100726430();
    *(void *)(inited + 40) = v46;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000017;
    *(void *)(inited + 56) = 0x80000001008C5210;
    sub_10046ECE8(inited);
    id v47 = objc_allocWithZone((Class)NSError);
    NSString v48 = sub_100726420();
    Class isa = sub_100726380().super.isa;
    swift_bridgeObjectRelease();
    id v50 = [v47 initWithDomain:v48 code:1 userInfo:isa];

    id v51 = objc_allocWithZone((Class)IDSOffGridCryptionResult);
    uint64_t v52 = (void *)sub_100725A10();

    id v53 = [v51 initWithEncryptedData:0 keyIndex:0 key:0 keyID:0 authTag:0 error:v52];
    return v53;
  }
  uint64_t v140 = v5;
  Class v138 = v11;
  sub_1005116D4((uint64_t)v15, (uint64_t)v20);
  type metadata accessor for SenderKeyUtils();
  id v22 = [a4 prefixedURI];
  uint64_t v23 = sub_100726430();
  uint64_t v25 = v24;

  id v139 = a3;
  id v26 = [a3 prefixedURI];
  uint64_t v27 = sub_100726430();
  uint64_t v28 = v20;
  uint64_t v30 = v29;

  uint64_t v31 = sub_1005299CC(v23, v25, v27, v30);
  unint64_t v33 = v32;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v33 >> 60 == 15)
  {
    sub_10051179C((uint64_t)v28, type metadata accessor for SenderKeyAndState);
    a3 = v139;
    goto LABEL_5;
  }
  int v128 = a4;
  uint64_t v54 = *v28;
  unint64_t v55 = v28[1];
  uint64_t v57 = v28[2];
  unint64_t v56 = v28[3];
  unint64_t v58 = (uint64_t *)((char *)v28 + *(int *)(v16 + 20));
  uint64_t v59 = *v58;
  unint64_t v60 = v58[1];
  sub_100441FD4(*v58, v60);
  sub_100441FD4(v59, v60);
  unint64_t v134 = v55;
  uint64_t v135 = v54;
  sub_100441FD4(v54, v55);
  unint64_t v136 = v56;
  uint64_t v137 = v57;
  sub_100441FD4(v57, v56);
  sub_100482480(v31, v33);
  uint64_t v61 = (uint64_t)v138;
  unint64_t v62 = v60;
  sub_100725E80();
  uint64_t v132 = v31;
  NSString v133 = v28;
  unint64_t v129 = v60;
  unint64_t v130 = v33;
  uint64_t v131 = v59;
  uint64_t v64 = sub_100725E90();
  unint64_t v66 = v65;
  unsigned int v125 = v67;
  sub_100441FD4(v64, v65);
  sub_10050FD00(16, v64, v66, v144);
  uint64_t v142 = v144[1];
  id v143 = v144[0];
  uint64_t v68 = sub_100725E40();
  uint64_t v70 = v69;
  id v71 = *(id *)&v140[v141];
  uint64_t v126 = v64;
  unint64_t v127 = v66;
  unint64_t v72 = v70;
  unint64_t v73 = v136;
  uint64_t v141 = v68;
  char v74 = sub_10055E09C(v137, v136, 1, v68, v70);

  if (v74)
  {
    unint64_t v124 = v72;
    uint64_t v75 = v137;
    sub_100441FD4(v137, v73);
    uint64_t v76 = v128;
    id v77 = v139;
    sub_100441FD4(v75, v73);
    uint64_t v78 = v76;
    id v79 = v77;
    uint64_t v80 = sub_100725EB0();
    os_log_type_t v81 = sub_1007266E0();
    int v82 = v81;
    if (os_log_type_enabled(v80, v81))
    {
      uint64_t v83 = swift_slowAlloc();
      uint64_t v84 = swift_slowAlloc();
      LODWORD(v139) = v82;
      uint64_t v85 = (void *)v84;
      uint64_t v140 = (char *)swift_slowAlloc();
      v144[0] = (uint64_t)v140;
      *(_DWORD *)uint64_t v83 = 136315906;
      uint64_t v86 = sub_100725B30(0);
      uint64_t v145 = sub_10043E578(v86, v87, v144);
      sub_100726830();
      swift_bridgeObjectRelease();
      sub_100442248(v137, v136);
      sub_100442248(v137, v136);
      *(_WORD *)(v83 + 12) = 1024;
      LODWORD(v145) = v125;
      sub_100726830();
      int v128 = v80;
      *(_WORD *)(v83 + 18) = 2112;
      uint64_t v145 = (uint64_t)v78;
      int64_t v88 = v78;
      sub_100726830();
      *uint64_t v85 = v78;

      unint64_t v73 = v136;
      *(_WORD *)(v83 + 28) = 2112;
      uint64_t v145 = (uint64_t)v79;
      id v89 = v79;
      uint64_t v75 = v137;
      sub_100726830();
      v85[1] = v79;

      unint64_t v90 = v128;
      _os_log_impl((void *)&_mh_execute_header, v128, (os_log_type_t)v139, "Successfully encrypted data using keyID: %s current keyIndex: %u from: %@ to: %@", (uint8_t *)v83, 0x26u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100442248(v75, v73);
      sub_100442248(v75, v73);
    }
    unint64_t v103 = v142;
    uint64_t v102 = (uint64_t)v143;
    uint64_t v104 = v135;
    sub_100441FD4(v135, v134);
    sub_100441FD4(v75, v73);
    unint64_t v105 = v73;
    uint64_t v106 = v75;
    uint64_t v107 = v126;
    unint64_t v108 = v127;
    sub_100441FD4(v126, v127);
    uint64_t v109 = sub_10050FEA4(v106, v105);
    unint64_t v111 = v110;
    sub_100441FD4(v102, v103);
    uint64_t v112 = sub_10050FEA4(v102, v103);
    unint64_t v114 = v113;
    uint64_t v140 = (char *)objc_allocWithZone((Class)IDSOffGridCryptionResult);
    Class v115 = sub_100725B20().super.isa;
    sub_100442248(v107, v108);
    unint64_t v116 = v134;
    Class v117 = sub_100725B20().super.isa;
    uint64_t v118 = v104;
    unint64_t v119 = v116;
    sub_100442248(v118, v116);
    unint64_t v120 = v105;
    Class v121 = sub_100725B20().super.isa;
    sub_100442248(v109, v111);
    Class v122 = sub_100725B20().super.isa;
    sub_100442248(v112, v114);
    id v53 = [v140 initWithEncryptedData:v115 keyIndex:v125 key:v117 keyID:v121 authTag:v122 error:0];

    sub_100442248(v141, v124);
    sub_100442248((uint64_t)v143, v142);
    sub_100442248(v135, v119);
    sub_100442248(v137, v120);
    sub_100442248(v126, v127);
    sub_10044CE88(v132, v130);
    sub_100442248(v131, v129);
    uint64_t v101 = (uint64_t)v138;
  }
  else
  {
    sub_100431F80(&qword_100A45660);
    uint64_t v91 = swift_initStackObject();
    *(_OWORD *)(v91 + 16) = xmmword_100794E30;
    *(void *)(v91 + 32) = sub_100726430();
    *(void *)(v91 + 40) = v92;
    *(void *)(v91 + 72) = &type metadata for String;
    *(void *)(v91 + 48) = 0xD00000000000001CLL;
    *(void *)(v91 + 56) = 0x80000001008C5250;
    sub_10046ECE8(v91);
    unint64_t v93 = v72;
    id v94 = objc_allocWithZone((Class)NSError);
    NSString v95 = sub_100726420();
    Class v96 = sub_100726380().super.isa;
    swift_bridgeObjectRelease();
    id v97 = [v94 initWithDomain:v95 code:3 userInfo:v96];

    id v98 = objc_allocWithZone((Class)IDSOffGridCryptionResult);
    id v99 = v97;
    uint64_t v100 = (void *)sub_100725A10();

    id v53 = [v98 initWithEncryptedData:0 keyIndex:0 key:0 keyID:0 authTag:0 error:v100];
    sub_100442248(v141, v93);
    sub_100442248((uint64_t)v143, v142);
    sub_100442248(v135, v134);
    sub_100442248(v137, v73);

    sub_100442248(v126, v127);
    sub_10044CE88(v132, v130);
    sub_100442248(v131, v62);
    uint64_t v101 = v61;
  }
  sub_10051179C(v101, (uint64_t (*)(void))&type metadata accessor for PaddyOutgoingSymmetricRatchet);
  sub_10051179C((uint64_t)v133, type metadata accessor for SenderKeyAndState);
  return v53;
}

uint64_t sub_10050FCA0(uint64_t a1)
{
  uint64_t v2 = sub_100431F80((uint64_t *)&unk_100A468B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10050FD00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = a2 >> 32;
      uint64_t v8 = (int)a2;
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v8 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v10 = -a1;
  uint64_t v11 = sub_100511878(v9, v8, a2, a3);
  if (v11 <= 0 && v11 > v10)
  {
    uint64_t v12 = v5;
    switch((int)v5)
    {
      case 1:
        uint64_t v12 = (int)a2;
        goto LABEL_12;
      case 2:
        uint64_t v12 = *(void *)(a2 + 16);
        goto LABEL_14;
      case 3:
        goto LABEL_16;
      default:
        goto LABEL_11;
    }
  }
  uint64_t v12 = sub_1005117FC(v9, v10, a2, a3);
  uint64_t v13 = 0;
  switch((int)v5)
  {
    case 1:
LABEL_12:
      uint64_t v13 = a2 >> 32;
      break;
    case 2:
LABEL_14:
      uint64_t v13 = *(void *)(a2 + 24);
      break;
    case 3:
      break;
    default:
LABEL_11:
      uint64_t v13 = BYTE6(a3);
      break;
  }
  if (v13 < v12)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x10050FE74);
  }
LABEL_16:
  uint64_t v14 = sub_100725B00();
  uint64_t v16 = v15;
  uint64_t result = sub_100442248(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

uint64_t sub_10050FEA4(uint64_t a1, unint64_t a2)
{
  v28[3] = &type metadata for Data;
  v28[4] = &protocol witness table for Data;
  v28[0] = a1;
  v28[1] = a2;
  id v4 = sub_10044C0F4(v28, (uint64_t)&type metadata for Data);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5)
      {
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_100441FD4(a1, a2);
      sub_100441FD4(v5, v6);
      uint64_t v8 = (unsigned char *)sub_100725910();
      if (v8)
      {
        uint64_t v9 = sub_100725940();
        if (!__OFSUB__((int)v5, v9))
        {
          v8 += (int)v5 - v9;
          goto LABEL_7;
        }
LABEL_31:
        __break(1u);
      }
LABEL_7:
      uint64_t v10 = sub_100725930();
      if (v10 >= (v5 >> 32) - (int)v5) {
        uint64_t v11 = (v5 >> 32) - (int)v5;
      }
      else {
        uint64_t v11 = v10;
      }
      uint64_t v12 = &v8[v11];
      if (v8) {
        uint64_t v13 = v12;
      }
      else {
        uint64_t v13 = 0;
      }
      sub_10044D424(v8, v13, &v27);
      sub_100442248(v5, v6);
LABEL_27:
      sub_100442248(a1, a2);
      uint64_t v24 = v27;
      sub_10044C6AC((uint64_t)v28);
      return v24;
    case 2uLL:
      uint64_t v14 = *(void *)(v5 + 16);
      uint64_t v15 = *(void *)(v5 + 24);
      sub_100441FD4(a1, a2);
      swift_retain();
      swift_retain();
      uint64_t v16 = (unsigned char *)sub_100725910();
      if (!v16) {
        goto LABEL_17;
      }
      uint64_t v17 = sub_100725940();
      if (__OFSUB__(v14, v17)) {
        goto LABEL_30;
      }
      v16 += v14 - v17;
LABEL_17:
      BOOL v18 = __OFSUB__(v15, v14);
      uint64_t v19 = v15 - v14;
      if (v18) {
        goto LABEL_29;
      }
      uint64_t v20 = sub_100725930();
      if (v20 >= v19) {
        uint64_t v21 = v19;
      }
      else {
        uint64_t v21 = v20;
      }
      id v22 = &v16[v21];
      if (v16) {
        uint64_t v23 = v22;
      }
      else {
        uint64_t v23 = 0;
      }
      sub_10044D424(v16, v23, &v27);
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v26, 0, 14);
      sub_100441FD4(a1, a2);
      objc_super v7 = v26;
      goto LABEL_26;
    default:
      v26[0] = *v4;
      LOWORD(v26[1]) = v6;
      BYTE2(v26[1]) = BYTE2(v6);
      BYTE3(v26[1]) = BYTE3(v6);
      BYTE4(v26[1]) = BYTE4(v6);
      BYTE5(v26[1]) = BYTE5(v6);
      sub_100441FD4(a1, a2);
      objc_super v7 = (char *)v26 + BYTE6(v6);
LABEL_26:
      sub_10044D424(v26, v7, &v27);
      goto LABEL_27;
  }
}

id sub_10051020C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, unint64_t a5, void *a6, void *a7)
{
  uint64_t v8 = v7;
  id v155 = a7;
  uint64_t v156 = a1;
  int v166 = a3;
  uint64_t v157 = a2;
  uint64_t v12 = sub_100725E30();
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v168 = (uint64_t)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = type metadata accessor for SenderKeyAndState(0);
  uint64_t v15 = *(void *)(v167 - 8);
  __chkstk_darwin(v167, v16);
  BOOL v18 = (unint64_t *)((char *)&v148 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v150 = OBJC_IVAR___IDSSenderKeyEncryptionController_persistenceManager;
  id v19 = *(id *)(v7 + OBJC_IVAR___IDSSenderKeyEncryptionController_persistenceManager);
  uint64_t v20 = sub_10055E39C(a4, a5, (uint64_t)a6);

  unint64_t v21 = v20[2];
  if (v21)
  {
    unint64_t v152 = a5;
    id v153 = a6;
    uint64_t v151 = a4;
    os_log_t v175 = (os_log_t)type metadata accessor for SenderKeyUtils();
    uint64_t v176 = v8 + OBJC_IVAR___IDSSenderKeyEncryptionController_logger;
    uint64_t v22 = *(unsigned __int8 *)(v15 + 80);
    unsigned int v154 = v20;
    uint64_t v23 = (uint64_t)v20 + ((v22 + 32) & ~v22);
    unint64_t v24 = *(void *)(v15 + 72);
    uint64_t v173 = 0;
    unint64_t v174 = v24;
    *(void *)&long long v25 = 136315394;
    long long v160 = v25;
    int64_t v159 = (void *)((char *)&type metadata for Any + 8);
    *(void *)&long long v25 = 138412290;
    long long v158 = v25;
    uint64_t v161 = v18;
    uint64_t v149 = v8;
    while (1)
    {
      sub_100511738(v23, (uint64_t)v18);
      id v26 = (void *)((char *)v18 + *(int *)(type metadata accessor for SenderKeyInfo(0) + 28));
      uint64_t v27 = *v26;
      uint64_t v28 = v26[1];
      uint64_t v30 = v26[2];
      uint64_t v29 = v26[3];
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1005299CC(v27, v28, v30, v29);
      if (v32 >> 60 == 15)
      {
        sub_10051179C((uint64_t)v18, type metadata accessor for SenderKeyAndState);
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v33 = v32;
        unint64_t v169 = v21;
        uint64_t v170 = v29;
        uint64_t v34 = *v18;
        uint64_t v163 = v30;
        uint64_t v164 = v34;
        uint64_t v35 = v18[2];
        unint64_t v165 = v18[1];
        unint64_t v36 = v18[3];
        id v37 = (char *)v18 + *(int *)(v167 + 20);
        id v38 = *(id *)v37;
        id v171 = (id)*((void *)v37 + 1);
        uint64_t v172 = v31;
        sub_100441FD4(v35, v36);
        sub_100441FD4(v35, v36);
        os_log_type_t v39 = sub_100725EB0();
        os_log_type_t v40 = sub_1007266B0();
        if (os_log_type_enabled(v39, v40))
        {
          uint64_t v41 = swift_slowAlloc();
          uint64_t v42 = swift_slowAlloc();
          id v162 = v38;
          uint64_t v178 = v42;
          *(_DWORD *)uint64_t v41 = v160;
          uint64_t v43 = sub_100725B30(0);
          *(void *)(v41 + 4) = sub_10043E578(v43, v44, &v178);
          swift_bridgeObjectRelease();
          sub_100442248(v35, v36);
          unint64_t v45 = v36;
          sub_100442248(v35, v36);
          *(_WORD *)(v41 + 12) = 1024;
          *(_DWORD *)(v41 + 14) = v166;
          _os_log_impl((void *)&_mh_execute_header, v39, v40, "Trying keyID: %s keyIndex: %u", (uint8_t *)v41, 0x12u);
          swift_arrayDestroy();
          id v38 = v162;
          swift_slowDealloc();
          BOOL v18 = v161;
          swift_slowDealloc();
        }
        else
        {

          sub_100442248(v35, v36);
          unint64_t v45 = v36;
          sub_100442248(v35, v36);
        }
        sub_100441FD4((uint64_t)v38, (unint64_t)v171);
        uint64_t v46 = v172;
        sub_100482480(v172, v33);
        id v47 = v173;
        sub_100725E00();
        if (!v47)
        {
          NSString v48 = sub_100725E10();
          unint64_t v103 = v102;
          os_log_t v175 = v48;
          swift_bridgeObjectRelease();
          uint64_t v104 = (void *)sub_100725DF0();
          uint64_t v106 = v105;
          id v107 = *(id *)(v149 + v150);
          unint64_t v174 = v106;
          LOBYTE(v106) = sub_10055E09C(v35, v45, 0, (uint64_t)v104, v106);

          if (v106)
          {
            id v108 = v153;
            id v109 = v155;
            sub_100441FD4(v35, v45);
            id v171 = v108;
            id v110 = v109;
            sub_100441FD4(v35, v45);
            unint64_t v111 = sub_100725EB0();
            os_log_type_t v112 = sub_1007266E0();
            LODWORD(v176) = v112;
            BOOL v113 = os_log_type_enabled(v111, v112);
            unint64_t v148 = v33;
            uint64_t v173 = v104;
            if (v113)
            {
              uint64_t v114 = swift_slowAlloc();
              id v162 = v110;
              uint64_t v115 = v114;
              int64_t v159 = (void *)swift_slowAlloc();
              uint64_t v167 = swift_slowAlloc();
              uint64_t v178 = v167;
              *(_DWORD *)uint64_t v115 = 136315906;
              uint64_t v116 = sub_100725B30(0);
              *(void *)&long long v160 = v111;
              id v117 = v171;
              uint64_t v177 = sub_10043E578(v116, v118, &v178);
              unint64_t v169 = v103;
              sub_100726830();
              swift_bridgeObjectRelease();
              sub_100442248(v35, v45);
              sub_100442248(v35, v45);
              *(_WORD *)(v115 + 12) = 1024;
              LODWORD(v177) = v166;
              sub_100726830();
              *(_WORD *)(v115 + 18) = 2112;
              uint64_t v177 = (uint64_t)v117;
              id v119 = v117;
              sub_100726830();
              unint64_t v120 = v159;
              *int64_t v159 = v117;

              *(_WORD *)(v115 + 28) = 2112;
              id v121 = v162;
              uint64_t v177 = (uint64_t)v162;
              id v122 = v162;
              unint64_t v103 = v169;
              sub_100726830();
              v120[1] = v121;

              uint64_t v123 = (void *)v160;
              _os_log_impl((void *)&_mh_execute_header, (os_log_t)v160, (os_log_type_t)v176, "Successfully decrypted data using keyID: %s current keyIndex: %u from: %@ to: %@", (uint8_t *)v115, 0x26u);
              sub_100431F80(&qword_100A44F10);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              sub_100442248(v35, v45);
              sub_100442248(v35, v45);

              id v138 = v171;
            }
            uint64_t v139 = v164;
            id v140 = objc_allocWithZone((Class)IDSURI);
            os_log_t v141 = v175;
            sub_100441FD4((uint64_t)v175, v103);
            unint64_t v142 = v165;
            sub_100441FD4(v139, v165);
            NSString v143 = sub_100726420();
            swift_bridgeObjectRelease();
            id v144 = [v140 initWithPrefixedURI:v143];

            id v145 = objc_allocWithZone((Class)IDSOffGridCryptionResult);
            Class isa = sub_100725B20().super.isa;
            sub_100442248((uint64_t)v141, v103);
            Class v147 = sub_100725B20().super.isa;
            sub_100442248(v139, v142);
            id v100 = [v145 initWithDecryptedData:isa key:v147 originalRecipientURI:v144 error:0];

            sub_100442248((uint64_t)v173, v174);
            sub_100442248((uint64_t)v141, v103);
            uint64_t v136 = v172;
            unint64_t v137 = v148;
          }
          else
          {
            swift_bridgeObjectRelease();
            sub_100431F80(&qword_100A45660);
            uint64_t inited = swift_initStackObject();
            *(_OWORD *)(inited + 16) = xmmword_100794E30;
            *(void *)(inited + 32) = sub_100726430();
            *(void *)(inited + 40) = v125;
            *(void *)(inited + 72) = &type metadata for String;
            *(void *)(inited + 48) = 0xD00000000000001CLL;
            *(void *)(inited + 56) = 0x80000001008C5250;
            sub_10046ECE8(inited);
            uint64_t v126 = (uint64_t)v104;
            unint64_t v127 = v33;
            id v128 = objc_allocWithZone((Class)NSError);
            uint64_t v129 = v46;
            NSString v130 = sub_100726420();
            Class v131 = sub_100726380().super.isa;
            swift_bridgeObjectRelease();
            id v132 = [v128 initWithDomain:v130 code:3 userInfo:v131];

            id v133 = objc_allocWithZone((Class)IDSOffGridCryptionResult);
            id v134 = v132;
            uint64_t v135 = (void *)sub_100725A10();

            id v100 = [v133 initWithDecryptedData:0 key:0 originalRecipientURI:0 error:v135];
            sub_100442248(v126, v174);
            sub_100442248((uint64_t)v175, v103);

            uint64_t v136 = v129;
            unint64_t v137 = v127;
          }
          sub_10044CE88(v136, v137);
          sub_10051179C(v168, (uint64_t (*)(void))&type metadata accessor for PaddyIncomingSymmetricRatchet);
          sub_10051179C((uint64_t)v18, type metadata accessor for SenderKeyAndState);
          return v100;
        }
        sub_10044CE88(v46, v33);
        swift_bridgeObjectRelease();
        uint64_t v173 = 0;
        unint64_t v21 = v169;
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v49 = sub_100725EB0();
        os_log_type_t v50 = sub_1007266E0();
        if (os_log_type_enabled(v49, v50))
        {
          uint64_t v51 = swift_slowAlloc();
          uint64_t v52 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v51 = v158;
          swift_errorRetain();
          uint64_t v53 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v51 + 4) = v53;
          *uint64_t v52 = v53;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v49, v50, "Decryption attempt failed with error: %@ - trying next", (uint8_t *)v51, 0xCu);
          sub_100431F80(&qword_100A44F10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();

          swift_errorRelease();
          swift_errorRelease();
        }
        sub_10051179C((uint64_t)v18, type metadata accessor for SenderKeyAndState);
      }
      v23 += v174;
      if (!--v21)
      {
        swift_bridgeObjectRelease();
        id v54 = v153;
        id v55 = v155;
        uint64_t v57 = v151;
        unint64_t v56 = v152;
        sub_100441FD4(v151, v152);
        id v58 = v54;
        id v59 = v55;
        sub_100441FD4(v57, v56);
        unint64_t v60 = sub_100725EB0();
        os_log_type_t v61 = sub_1007266C0();
        int v62 = v61;
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v63 = swift_slowAlloc();
          LODWORD(v175) = v62;
          uint64_t v64 = v63;
          unint64_t v174 = swift_slowAlloc();
          uint64_t v176 = swift_slowAlloc();
          uint64_t v178 = v176;
          *(_DWORD *)uint64_t v64 = 136315650;
          uint64_t v65 = sub_100725B30(0);
          uint64_t v177 = sub_10043E578(v65, v66, &v178);
          sub_100726830();
          swift_bridgeObjectRelease();
          sub_100442248(v57, v56);
          sub_100442248(v57, v56);
          *(_WORD *)(v64 + 12) = 2112;
          uint64_t v177 = (uint64_t)v58;
          id v67 = v58;
          sub_100726830();
          unint64_t v68 = v174;
          *(void *)unint64_t v174 = v58;

          *(_WORD *)(v64 + 22) = 2112;
          uint64_t v177 = (uint64_t)v59;
          id v69 = v59;
          sub_100726830();
          *(void *)(v68 + 8) = v59;

          _os_log_impl((void *)&_mh_execute_header, v60, (os_log_type_t)v175, "All decryption attempts using keyIDByte: %s failed for message from: %@ to: %@", (uint8_t *)v64, 0x20u);
          sub_100431F80(&qword_100A44F10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          sub_100442248(v57, v56);
          sub_100442248(v57, v56);
        }
        sub_100431F80(&qword_100A45660);
        uint64_t v88 = swift_initStackObject();
        *(_OWORD *)(v88 + 16) = xmmword_100794E30;
        *(void *)(v88 + 32) = sub_100726430();
        *(void *)(v88 + 40) = v89;
        *(void *)(v88 + 72) = &type metadata for String;
        *(void *)(v88 + 48) = 0xD000000000000012;
        *(void *)(v88 + 56) = 0x80000001008C5270;
        sub_10046ECE8(v88);
        id v90 = objc_allocWithZone((Class)NSError);
        NSString v91 = sub_100726420();
        v92.super.Class isa = sub_100726380().super.isa;
        swift_bridgeObjectRelease();
        id v93 = [v90 initWithDomain:v91 code:5 userInfo:v92.super.isa];
        goto LABEL_24;
      }
    }
  }
  swift_bridgeObjectRelease();
  id v70 = a6;
  id v71 = v155;
  sub_100441FD4(a4, a5);
  id v72 = v70;
  id v73 = v71;
  sub_100441FD4(a4, a5);
  char v74 = sub_100725EB0();
  os_log_type_t v75 = sub_1007266C0();
  int v76 = v75;
  uint64_t v77 = a4;
  if (os_log_type_enabled(v74, v75))
  {
    uint64_t v78 = swift_slowAlloc();
    os_log_t v175 = v74;
    uint64_t v79 = v78;
    uint64_t v173 = (void *)swift_slowAlloc();
    uint64_t v176 = swift_slowAlloc();
    uint64_t v177 = (uint64_t)v72;
    uint64_t v178 = v176;
    *(_DWORD *)uint64_t v79 = 138413058;
    LODWORD(v174) = v76;
    unint64_t v80 = a5;
    uint64_t v81 = v77;
    id v82 = v72;
    sub_100726830();
    uint64_t v83 = v173;
    *uint64_t v173 = v72;

    *(_WORD *)(v79 + 12) = 2112;
    uint64_t v177 = (uint64_t)v73;
    id v84 = v73;
    sub_100726830();
    v83[1] = v73;

    *(_WORD *)(v79 + 22) = 2080;
    uint64_t v85 = sub_100725B30(0);
    uint64_t v177 = sub_10043E578(v85, v86, &v178);
    sub_100726830();
    swift_bridgeObjectRelease();
    sub_100442248(v81, v80);
    sub_100442248(v81, v80);
    *(_WORD *)(v79 + 32) = 1024;
    LODWORD(v177) = v166;
    sub_100726830();
    os_log_t v87 = v175;
    _os_log_impl((void *)&_mh_execute_header, v175, (os_log_type_t)v174, "No matching keys found for decrypting from: %@ to: %@ keyIDByte: %s keyIndex: %u", (uint8_t *)v79, 0x26u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_100442248(a4, a5);
    sub_100442248(a4, a5);
  }
  sub_100431F80(&qword_100A45660);
  uint64_t v94 = swift_initStackObject();
  *(_OWORD *)(v94 + 16) = xmmword_100794E30;
  *(void *)(v94 + 32) = sub_100726430();
  *(void *)(v94 + 40) = v95;
  *(void *)(v94 + 72) = &type metadata for String;
  *(void *)(v94 + 48) = 0xD000000000000017;
  *(void *)(v94 + 56) = 0x80000001008C5290;
  sub_10046ECE8(v94);
  id v96 = objc_allocWithZone((Class)NSError);
  NSString v91 = sub_100726420();
  v92.super.Class isa = sub_100726380().super.isa;
  swift_bridgeObjectRelease();
  id v93 = [v96 initWithDomain:v91 code:2 userInfo:v92.super.isa];
LABEL_24:
  id v97 = v93;

  id v98 = objc_allocWithZone((Class)IDSOffGridCryptionResult);
  id v99 = (void *)sub_100725A10();

  id v100 = [v98 initWithDecryptedData:0 key:0 originalRecipientURI:0 error:v99];
  return v100;
}

id sub_100511598()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100511650@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100511964(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_10051167C(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100511C64();
  unint64_t v5 = sub_1004D0834();

  return Error<>._code.getter(a1, a2, v4, v5);
}

uint64_t sub_1005116D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SenderKeyAndState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100511738(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SenderKeyAndState(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10051179C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005117FC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < result || result < v7)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x100511868);
  }
  return result;
}

uint64_t sub_100511878(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a3;
      uint64_t v4 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v4 < a1 || v5 > a1)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < a2 || v7 > a2) {
    goto LABEL_16;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v8)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x100511944);
  }
  return result;
}

uint64_t sub_100511964(unint64_t a1)
{
  if (a1 >= 6) {
    return 5;
  }
  else {
    return (0x40302010005uLL >> (8 * a1));
  }
}

unint64_t sub_10051198C()
{
  unint64_t result = qword_100A474A0;
  if (!qword_100A474A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A474A0);
  }
  return result;
}

uint64_t sub_1005119E0()
{
  return type metadata accessor for SenderKeyEncryptionController();
}

uint64_t type metadata accessor for SenderKeyEncryptionController()
{
  uint64_t result = qword_100A519F0;
  if (!qword_100A519F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100511A34()
{
  uint64_t result = sub_100725ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SenderKeyEncryptionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SenderKeyEncryptionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100511C2CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SenderKeyEncryptionError()
{
  return &type metadata for SenderKeyEncryptionError;
}

unint64_t sub_100511C64()
{
  unint64_t result = qword_100A474D0;
  if (!qword_100A474D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A474D0);
  }
  return result;
}

uint64_t sub_100511CB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionMaterialData();
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_100487DEC(v1, (uint64_t)v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = v5[1];
      break;
    case 2u:
      unsigned int v6 = (uint64_t *)&unk_100A44F58;
      goto LABEL_4;
    case 3u:
      uint64_t v9 = *v5;
      break;
    default:
      unsigned int v6 = (uint64_t *)&unk_100A474D8;
LABEL_4:
      uint64_t v7 = sub_100431F80(v6);
      int v8 = (char *)v5 + *(int *)(v7 + 48);
      uint64_t v9 = *(uint64_t *)((char *)v5 + *(int *)(v7 + 64));
      uint64_t v10 = sub_100725D30();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
      break;
  }
  return v9;
}

uint64_t type metadata accessor for IDSGroupEncryptionMaterialData()
{
  uint64_t result = qword_100A51E00;
  if (!qword_100A51E00) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100511E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionMaterialData();
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100487DEC(v2, (uint64_t)v7);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = (uint64_t *)&unk_100A44F58;
    goto LABEL_5;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v9 = (uint64_t *)&unk_100A474D8;
LABEL_5:
    uint64_t v10 = sub_100431F80(v9);
    uint64_t v11 = &v7[*(int *)(v10 + 48)];
    sub_100442248(*(void *)&v7[*(int *)(v10 + 64)], *(void *)&v7[*(int *)(v10 + 64) + 8]);
    uint64_t v12 = sub_100725D30();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, v11, v12);
  }
  sub_100725D20();
  return sub_100487E94((uint64_t)v7);
}

uint64_t sub_100511F64()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionMaterialData();
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100487DEC(v0, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload())
  {
    sub_100487E94((uint64_t)v4);
    return 0;
  }
  else
  {
    uint64_t v6 = (int *)sub_100431F80(&qword_100A474D8);
    uint64_t v7 = &v4[v6[12]];
    sub_100442248(*(void *)&v4[v6[16]], *(void *)&v4[v6[16] + 8]);
    uint64_t v5 = *(unsigned int *)&v4[v6[20]];
    uint64_t v8 = sub_100725D30();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  return v5;
}

uint64_t sub_100512070()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionMaterialData();
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (unsigned __int8 *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100487DEC(v1, (uint64_t)v5);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      int v14 = *v5;
      sub_100442248(*((void *)v5 + 1), *((void *)v5 + 2));
      if (v14) {
        uint64_t v10 = 6;
      }
      else {
        uint64_t v10 = 12;
      }
      break;
    case 2u:
      uint64_t v10 = *(unsigned int *)v5;
      uint64_t v11 = sub_100431F80(&qword_100A44F58);
      uint64_t v12 = &v5[*(int *)(v11 + 48)];
      sub_100442248(*(void *)&v5[*(int *)(v11 + 64)], *(void *)&v5[*(int *)(v11 + 64) + 8]);
      uint64_t v13 = sub_100725D30();
      (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
      break;
    case 3u:
      sub_100487E94((uint64_t)v5);
      uint64_t v10 = 11;
      break;
    default:
      int v6 = *v5;
      uint64_t v7 = sub_100431F80(&qword_100A474D8);
      uint64_t v8 = &v5[*(int *)(v7 + 48)];
      sub_100442248(*(void *)&v5[*(int *)(v7 + 64)], *(void *)&v5[*(int *)(v7 + 64) + 8]);
      uint64_t v9 = sub_100725D30();
      (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
      if (v6) {
        uint64_t v10 = 14;
      }
      else {
        uint64_t v10 = 13;
      }
      break;
  }
  return v10;
}

uint64_t sub_100512238()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725D30();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  int v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IDSGroupEncryptionMaterialData();
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (unsigned __int8 *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100487DEC(v1, (uint64_t)v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      Swift::UInt v27 = *v10;
      uint64_t v28 = *((void *)v10 + 1);
      unint64_t v29 = *((void *)v10 + 2);
      sub_100726DE0(1uLL);
      sub_100726DE0(v27);
      sub_100725B60();
      uint64_t v23 = v28;
      unint64_t v24 = v29;
      goto LABEL_6;
    case 2u:
      Swift::UInt32 v18 = *(_DWORD *)v10;
      uint64_t v19 = sub_100431F80(&qword_100A44F58);
      uint64_t v20 = (uint64_t *)&v10[*(int *)(v19 + 64)];
      uint64_t v21 = *v20;
      unint64_t v22 = v20[1];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v3 + 32))(v6, &v10[*(int *)(v19 + 48)], v2);
      sub_100726DE0(2uLL);
      sub_100726E00(v18);
      sub_100513F30(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
      sub_1007263E0();
      sub_100725B60();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      uint64_t v23 = v21;
      unint64_t v24 = v22;
      goto LABEL_6;
    case 3u:
      uint64_t v25 = *(void *)v10;
      unint64_t v26 = *((void *)v10 + 1);
      sub_100726DE0(3uLL);
      sub_100725B60();
      uint64_t v23 = v25;
      unint64_t v24 = v26;
LABEL_6:
      uint64_t result = sub_100442248(v23, v24);
      break;
    default:
      Swift::UInt v11 = *v10;
      uint64_t v12 = (int *)sub_100431F80(&qword_100A474D8);
      uint64_t v13 = (uint64_t *)&v10[v12[16]];
      uint64_t v14 = *v13;
      unint64_t v15 = v13[1];
      Swift::UInt32 v16 = *(_DWORD *)&v10[v12[20]];
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v3 + 32))(v6, &v10[v12[12]], v2);
      sub_100726DE0(0);
      sub_100726DE0(v11);
      sub_100513F30(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
      sub_1007263E0();
      sub_100725B60();
      sub_100726E00(v16);
      sub_100442248(v14, v15);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
      break;
  }
  return result;
}

Swift::Int sub_1005125AC()
{
  return sub_100726E30();
}

Swift::Int sub_1005125F0()
{
  return sub_100726E30();
}

BOOL sub_100512630(uint64_t a1, uint64_t a2)
{
  return sub_100512FE8(a1 & 0xFFFFFFFFFFLL, a2 & 0xFFFFFFFFFFLL);
}

Swift::Int sub_10051263C(uint64_t a1)
{
  sub_100726DD0();
  switch(BYTE4(a1))
  {
    case 1:
      Swift::UInt v2 = a1 & 1;
      Swift::UInt v3 = 1;
      goto LABEL_6;
    case 2:
      sub_100726DE0(2uLL);
      sub_100726E00(a1);
      return sub_100726E30();
    case 3:
      Swift::UInt v4 = 3;
      goto LABEL_7;
    default:
      Swift::UInt v2 = a1 & 1;
      Swift::UInt v3 = 0;
LABEL_6:
      sub_100726DE0(v3);
      Swift::UInt v4 = v2;
LABEL_7:
      sub_100726DE0(v4);
      return sub_100726E30();
  }
}

BOOL sub_100512700(unsigned int *a1, unsigned int *a2)
{
  return sub_100512FE8(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32));
}

Swift::Int sub_10051271C()
{
  return sub_10051263C(*v0 | ((unint64_t)*((unsigned __int8 *)v0 + 4) << 32));
}

void sub_10051272C()
{
  Swift::UInt32 v1 = *(_DWORD *)v0;
  switch(*(unsigned char *)(v0 + 4))
  {
    case 1:
      Swift::UInt v2 = v1 & 1;
      Swift::UInt v3 = 1;
      goto LABEL_6;
    case 2:
      sub_100726DE0(2uLL);
      sub_100726E00(v1);
      return;
    case 3:
      Swift::UInt v4 = 3;
      goto LABEL_7;
    default:
      Swift::UInt v2 = v1 & 1;
      Swift::UInt v3 = 0;
LABEL_6:
      sub_100726DE0(v3);
      Swift::UInt v4 = v2;
LABEL_7:
      sub_100726DE0(v4);
      return;
  }
}

Swift::Int sub_1005127C4()
{
  Swift::UInt32 v1 = *(_DWORD *)v0;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 4);
  sub_100726DD0();
  switch(v2)
  {
    case 1:
      Swift::UInt v3 = v1 & 1;
      Swift::UInt v4 = 1;
      goto LABEL_6;
    case 2:
      sub_100726DE0(2uLL);
      sub_100726E00(v1);
      return sub_100726E30();
    case 3:
      Swift::UInt v5 = 3;
      goto LABEL_7;
    default:
      Swift::UInt v3 = v1 & 1;
      Swift::UInt v4 = 0;
LABEL_6:
      sub_100726DE0(v4);
      Swift::UInt v5 = v3;
LABEL_7:
      sub_100726DE0(v5);
      return sub_100726E30();
  }
}

uint64_t sub_100512888(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100725D30();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v111 = v4;
  uint64_t v112 = v5;
  uint64_t v7 = __chkstk_darwin(v4, v6);
  id v109 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  id v110 = (unsigned __int8 *)&v102 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  unint64_t v15 = (char *)&v102 - v14;
  __chkstk_darwin(v13, v16);
  unint64_t v108 = (unint64_t)&v102 - v17;
  uint64_t v18 = type metadata accessor for IDSGroupEncryptionMaterialData();
  uint64_t v20 = __chkstk_darwin(v18, v19);
  unint64_t v22 = (uint64_t *)((char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __chkstk_darwin(v20, v23);
  unint64_t v26 = (char *)&v102 - v25;
  uint64_t v28 = __chkstk_darwin(v24, v27);
  uint64_t v30 = (unsigned __int8 *)&v102 - v29;
  __chkstk_darwin(v28, v31);
  unint64_t v33 = (unsigned __int8 *)&v102 - v32;
  uint64_t v34 = sub_100431F80(&qword_100A47598);
  uint64_t v36 = __chkstk_darwin(v34 - 8, v35);
  id v38 = (char *)&v102 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_log_type_t v39 = &v38[*(int *)(v36 + 56)];
  sub_100487DEC(a1, (uint64_t)v38);
  sub_100487DEC(a2, (uint64_t)v39);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_100487DEC((uint64_t)v38, (uint64_t)v30);
      uint64_t v48 = *((void *)v30 + 1);
      unint64_t v47 = *((void *)v30 + 2);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v82 = v48;
        unint64_t v83 = v47;
        goto LABEL_17;
      }
      int v49 = *v30;
      uint64_t v50 = *((void *)v39 + 1);
      unint64_t v51 = *((void *)v39 + 2);
      if (v49 != *v39)
      {
        sub_100442248(*((void *)v39 + 1), *((void *)v39 + 2));
        sub_100442248(v48, v47);
        goto LABEL_31;
      }
      char v74 = sub_100453588(v48, v47, *((void *)v39 + 1), *((void *)v39 + 2));
      sub_100442248(v50, v51);
      uint64_t v80 = v48;
      unint64_t v81 = v47;
      goto LABEL_22;
    case 2u:
      sub_100487DEC((uint64_t)v38, (uint64_t)v26);
      uint64_t v52 = sub_100431F80(&qword_100A44F58);
      uint64_t v53 = *(int *)(v52 + 48);
      id v54 = &v26[v53];
      uint64_t v55 = *(int *)(v52 + 64);
      uint64_t v57 = *(void *)&v26[v55];
      unint64_t v56 = *(void *)&v26[v55 + 8];
      if (swift_getEnumCaseMultiPayload() != 2)
      {
        sub_100442248(v57, v56);
        (*(void (**)(char *, uint64_t))(v112 + 8))(&v26[v53], v111);
        goto LABEL_18;
      }
      uint64_t v107 = v57;
      unint64_t v108 = v56;
      int v58 = *(_DWORD *)v26;
      int v59 = *(_DWORD *)v39;
      unint64_t v60 = (unsigned __int8 *)&v39[v53];
      unint64_t v61 = *(void *)&v39[v55];
      unint64_t v105 = *(void *)&v39[v55 + 8];
      unint64_t v106 = v61;
      uint64_t v62 = v112;
      uint64_t v63 = *(void (**)(unsigned __int8 *, char *, uint64_t))(v112 + 32);
      uint64_t v64 = v110;
      uint64_t v65 = v54;
      uint64_t v66 = v111;
      v63(v110, v65, v111);
      id v67 = v109;
      v63((unsigned __int8 *)v109, (char *)v60, v66);
      if (v58 == v59)
      {
        unint64_t v68 = v105;
        uint64_t v69 = v106;
        id v70 = v64;
        if (sub_100725CF0())
        {
          uint64_t v72 = v107;
          unint64_t v71 = v108;
          unint64_t v73 = v68;
          char v74 = sub_100453588(v107, v108, v69, v68);
          sub_100442248(v69, v73);
          sub_100442248(v72, v71);
          os_log_type_t v75 = *(void (**)(char *, uint64_t))(v112 + 8);
          v75(v67, v66);
          v75((char *)v70, v66);
          goto LABEL_23;
        }
        sub_100442248(v69, v68);
        sub_100442248(v107, v108);
        id v99 = *(void (**)(char *, uint64_t))(v112 + 8);
        v99(v67, v66);
        v99((char *)v64, v66);
      }
      else
      {
        sub_100442248(v106, v105);
        sub_100442248(v107, v108);
        id v93 = *(void (**)(char *, uint64_t))(v62 + 8);
        v93(v67, v66);
        v93((char *)v64, v66);
      }
      goto LABEL_31;
    case 3u:
      sub_100487DEC((uint64_t)v38, (uint64_t)v22);
      uint64_t v76 = *v22;
      unint64_t v77 = v22[1];
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        uint64_t v82 = v76;
        unint64_t v83 = v77;
LABEL_17:
        sub_100442248(v82, v83);
        goto LABEL_18;
      }
      uint64_t v78 = *(void *)v39;
      unint64_t v79 = *((void *)v39 + 1);
      char v74 = sub_100453588(v76, v77, *(void *)v39, v79);
      sub_100442248(v78, v79);
      uint64_t v80 = v76;
      unint64_t v81 = v77;
LABEL_22:
      sub_100442248(v80, v81);
      goto LABEL_23;
    default:
      id v109 = v15;
      sub_100487DEC((uint64_t)v38, (uint64_t)v33);
      os_log_type_t v40 = (int *)sub_100431F80(&qword_100A474D8);
      uint64_t v41 = v40[12];
      id v110 = &v33[v41];
      uint64_t v42 = v40[16];
      uint64_t v44 = *(void *)&v33[v42];
      unint64_t v43 = *(void *)&v33[v42 + 8];
      uint64_t v45 = v40[20];
      int v46 = *(_DWORD *)&v33[v45];
      if (swift_getEnumCaseMultiPayload())
      {
        sub_100442248(v44, v43);
        (*(void (**)(unsigned __int8 *, uint64_t))(v112 + 8))(v110, v111);
LABEL_18:
        sub_100513F78((uint64_t)v38);
        goto LABEL_32;
      }
      int v103 = v46;
      unint64_t v105 = v44;
      unint64_t v106 = v43;
      LODWORD(v107) = *v33;
      int v84 = *v39;
      uint64_t v85 = (unsigned __int8 *)&v39[v41];
      uint64_t v86 = *(void *)&v39[v42];
      unint64_t v87 = *(void *)&v39[v42 + 8];
      int v104 = *(_DWORD *)&v39[v45];
      uint64_t v88 = v111;
      uint64_t v89 = v112;
      id v90 = *(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v112 + 32);
      unint64_t v91 = v108;
      v90(v108, v110, v111);
      v90((unint64_t)v109, v85, v88);
      if (v107 != v84)
      {
        sub_100442248(v86, v87);
        sub_100442248(v105, v106);
        NSDictionary v92 = *(void (**)(char *, uint64_t))(v89 + 8);
        v92(v109, v88);
        v92((char *)v91, v88);
        goto LABEL_31;
      }
      int v94 = v104;
      if ((sub_100725CF0() & 1) == 0)
      {
        sub_100442248(v86, v87);
        sub_100442248(v105, v106);
        id v100 = *(void (**)(char *, uint64_t))(v112 + 8);
        v100(v109, v88);
        v100((char *)v91, v88);
        goto LABEL_31;
      }
      uint64_t v96 = v105;
      unint64_t v95 = v106;
      char v97 = sub_100453588(v105, v106, v86, v87);
      sub_100442248(v86, v87);
      sub_100442248(v96, v95);
      id v98 = *(void (**)(char *, uint64_t))(v112 + 8);
      v98(v109, v88);
      v98((char *)v91, v88);
      if ((v97 & 1) == 0)
      {
LABEL_31:
        sub_100487E94((uint64_t)v38);
LABEL_32:
        char v74 = 0;
        return v74 & 1;
      }
      char v74 = v103 == v94;
LABEL_23:
      sub_100487E94((uint64_t)v38);
      return v74 & 1;
  }
}

BOOL sub_100512FE8(uint64_t a1, uint64_t a2)
{
  switch(BYTE4(a1))
  {
    case 1:
      if (BYTE4(a2) != 1) {
        goto LABEL_14;
      }
      goto LABEL_13;
    case 2:
      if (BYTE4(a2) != 2) {
        goto LABEL_14;
      }
      BOOL result = a1 == a2;
      break;
    case 3:
      if (BYTE4(a2) != 3 || a2 != 0) {
        goto LABEL_14;
      }
      BOOL result = 1;
      break;
    default:
      if (BYTE4(a2)) {
LABEL_14:
      }
        BOOL result = 0;
      else {
LABEL_13:
      }
        BOOL result = ((a2 ^ a1) & 1) == 0;
      break;
  }
  return result;
}

unint64_t sub_100513074()
{
  unint64_t result = qword_100A474E0;
  if (!qword_100A474E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A474E0);
  }
  return result;
}

unint64_t sub_1005130CC()
{
  unint64_t result = qword_100A474E8;
  if (!qword_100A474E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A474E8);
  }
  return result;
}

uint64_t sub_100513120()
{
  return sub_100513F30(&qword_100A44ED8, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionMaterialData);
}

unint64_t sub_10051316C()
{
  unint64_t result = qword_100A474F0;
  if (!qword_100A474F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A474F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionBlobKind()
{
  return &type metadata for IDSGroupEncryptionBlobKind;
}

unsigned char *_s17identityservicesd24IDSGroupEncryptionKMKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1005132A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionKMKind()
{
  return &type metadata for IDSGroupEncryptionKMKind;
}

uint64_t *sub_1005132D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v30 = a2[1];
        unint64_t v29 = a2[2];
        sub_100441FD4(v30, v29);
        a1[1] = v30;
        a1[2] = v29;
        break;
      case 2u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v17 = sub_100431F80(&qword_100A44F58);
        uint64_t v18 = *(int *)(v17 + 48);
        uint64_t v19 = (char *)a1 + v18;
        uint64_t v20 = (char *)a2 + v18;
        uint64_t v21 = sub_100725D30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16))(v19, v20, v21);
        uint64_t v22 = *(int *)(v17 + 64);
        uint64_t v23 = (uint64_t *)((char *)a1 + v22);
        uint64_t v24 = (uint64_t *)((char *)a2 + v22);
        uint64_t v25 = *v24;
        unint64_t v26 = v24[1];
        sub_100441FD4(*v24, v26);
        *uint64_t v23 = v25;
        v23[1] = v26;
        break;
      case 3u:
        uint64_t v28 = *a2;
        unint64_t v27 = a2[1];
        sub_100441FD4(v28, v27);
        *a1 = v28;
        a1[1] = v27;
        break;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        unsigned int v6 = (int *)sub_100431F80(&qword_100A474D8);
        uint64_t v7 = v6[12];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_100725D30();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
        uint64_t v11 = v6[16];
        uint64_t v12 = (uint64_t *)((char *)a1 + v11);
        uint64_t v13 = (uint64_t *)((char *)a2 + v11);
        uint64_t v14 = *v13;
        unint64_t v15 = v13[1];
        sub_100441FD4(*v13, v15);
        *uint64_t v12 = v14;
        v12[1] = v15;
        *(_DWORD *)((char *)a1 + v6[20]) = *(_DWORD *)((char *)a2 + v6[20]);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_100513528(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      int v3 = &qword_100A474D8;
      goto LABEL_5;
    case 1:
      unsigned int v4 = (unint64_t *)(a1 + 2);
      ++a1;
      goto LABEL_7;
    case 2:
      int v3 = &qword_100A44F58;
LABEL_5:
      uint64_t v5 = sub_100431F80(v3);
      unsigned int v6 = (char *)a1 + *(int *)(v5 + 48);
      uint64_t v7 = sub_100725D30();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
      a1 = (uint64_t *)((char *)a1 + *(int *)(v5 + 64));
      goto LABEL_6;
    case 3:
LABEL_6:
      unsigned int v4 = (unint64_t *)(a1 + 1);
LABEL_7:
      uint64_t v8 = *a1;
      unint64_t v9 = *v4;
      uint64_t result = sub_100442248(v8, v9);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10051362C(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v27 = *(void *)(a2 + 8);
      unint64_t v26 = *(void *)(a2 + 16);
      sub_100441FD4(v27, v26);
      *(void *)(a1 + 8) = v27;
      *(void *)(a1 + 16) = v26;
      break;
    case 2u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      uint64_t v14 = sub_100431F80(&qword_100A44F58);
      uint64_t v15 = *(int *)(v14 + 48);
      uint64_t v16 = a1 + v15;
      uint64_t v17 = a2 + v15;
      uint64_t v18 = sub_100725D30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
      uint64_t v19 = *(int *)(v14 + 64);
      uint64_t v20 = (uint64_t *)(a1 + v19);
      uint64_t v21 = (uint64_t *)(a2 + v19);
      uint64_t v22 = *v21;
      unint64_t v23 = v21[1];
      sub_100441FD4(*v21, v23);
      uint64_t *v20 = v22;
      v20[1] = v23;
      break;
    case 3u:
      uint64_t v25 = *(void *)a2;
      unint64_t v24 = *(void *)(a2 + 8);
      sub_100441FD4(v25, v24);
      *(void *)a1 = v25;
      *(void *)(a1 + 8) = v24;
      break;
    default:
      *(unsigned char *)a1 = *(unsigned char *)a2;
      unsigned int v4 = (int *)sub_100431F80(&qword_100A474D8);
      uint64_t v5 = v4[12];
      uint64_t v6 = a1 + v5;
      uint64_t v7 = a2 + v5;
      uint64_t v8 = sub_100725D30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      uint64_t v9 = v4[16];
      uint64_t v10 = (uint64_t *)(a1 + v9);
      uint64_t v11 = (uint64_t *)(a2 + v9);
      uint64_t v12 = *v11;
      unint64_t v13 = v11[1];
      sub_100441FD4(*v11, v13);
      *uint64_t v10 = v12;
      v10[1] = v13;
      *(_DWORD *)(a1 + v4[20]) = *(_DWORD *)(a2 + v4[20]);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_10051380C(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_100487E94(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        uint64_t v15 = *(void *)(a2 + 8);
        unint64_t v14 = *(void *)(a2 + 16);
        sub_100441FD4(v15, v14);
        *(void *)(a1 + 8) = v15;
        *(void *)(a1 + 16) = v14;
        break;
      case 2u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        uint64_t v16 = sub_100431F80(&qword_100A44F58);
        uint64_t v17 = *(int *)(v16 + 48);
        uint64_t v18 = a1 + v17;
        uint64_t v19 = a2 + v17;
        uint64_t v20 = sub_100725D30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v18, v19, v20);
        uint64_t v21 = *(int *)(v16 + 64);
        uint64_t v22 = (uint64_t *)(a1 + v21);
        unint64_t v23 = (uint64_t *)(a2 + v21);
        uint64_t v24 = *v23;
        unint64_t v25 = v23[1];
        sub_100441FD4(*v23, v25);
        *uint64_t v22 = v24;
        v22[1] = v25;
        break;
      case 3u:
        uint64_t v27 = *(void *)a2;
        unint64_t v26 = *(void *)(a2 + 8);
        sub_100441FD4(v27, v26);
        *(void *)a1 = v27;
        *(void *)(a1 + 8) = v26;
        break;
      default:
        *(unsigned char *)a1 = *(unsigned char *)a2;
        unsigned int v4 = (int *)sub_100431F80(&qword_100A474D8);
        uint64_t v5 = v4[12];
        uint64_t v6 = a1 + v5;
        uint64_t v7 = a2 + v5;
        uint64_t v8 = sub_100725D30();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
        uint64_t v9 = v4[16];
        uint64_t v10 = (uint64_t *)(a1 + v9);
        uint64_t v11 = (uint64_t *)(a2 + v9);
        uint64_t v12 = *v11;
        unint64_t v13 = v11[1];
        sub_100441FD4(*v11, v13);
        *uint64_t v10 = v12;
        v10[1] = v13;
        *(_DWORD *)(a1 + v4[20]) = *(_DWORD *)(a2 + v4[20]);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_1005139FC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *a1 = *a2;
    uint64_t v12 = sub_100431F80(&qword_100A44F58);
    uint64_t v13 = *(int *)(v12 + 48);
    unint64_t v14 = (char *)a1 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = sub_100725D30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(_OWORD *)((char *)a1 + *(int *)(v12 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v12 + 64));
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = (int *)sub_100431F80(&qword_100A474D8);
    uint64_t v8 = v7[12];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100725D30();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(_OWORD *)((char *)a1 + v7[16]) = *(_OWORD *)((char *)a2 + v7[16]);
    *(_DWORD *)((char *)a1 + v7[20]) = *(_DWORD *)((char *)a2 + v7[20]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_DWORD *sub_100513B7C(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_100487E94((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      uint64_t v12 = sub_100431F80(&qword_100A44F58);
      uint64_t v13 = *(int *)(v12 + 48);
      unint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_100725D30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      *(_OWORD *)((char *)a1 + *(int *)(v12 + 64)) = *(_OWORD *)((char *)a2 + *(int *)(v12 + 64));
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v7 = (int *)sub_100431F80(&qword_100A474D8);
      uint64_t v8 = v7[12];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_100725D30();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
      *(_OWORD *)((char *)a1 + v7[16]) = *(_OWORD *)((char *)a2 + v7[16]);
      *(_DWORD *)((char *)a1 + v7[20]) = *(_DWORD *)((char *)a2 + v7[20]);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_100513D0C()
{
  v2[4] = &unk_100799100;
  uint64_t result = sub_100725D30();
  if (v1 <= 0x3F)
  {
    v2[5] = *(void *)(result - 8) + 64;
    v2[6] = &unk_100799118;
    v2[7] = (char *)&value witness table for Builtin.Int32 + 64;
    swift_getTupleTypeLayout();
    unsigned int v4 = &v3;
    uint64_t v5 = &unk_100799130;
    swift_getTupleTypeLayout3();
    uint64_t v6 = v2;
    uint64_t v7 = &unk_100799118;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for IDSGroupEncryptionDesiredMaterialKind(uint64_t result, int *a2)
{
  int v2 = *a2;
  *(unsigned char *)(result + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)uint64_t result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for IDSGroupEncryptionDesiredMaterialKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 5)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 4);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSGroupEncryptionDesiredMaterialKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 4) = 0;
    *(_DWORD *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 5) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 5) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 4) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_100513EA8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 4) <= 2u) {
    return *(unsigned __int8 *)(a1 + 4);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_100513EC0(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(_DWORD *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 4) = a2;
  return result;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionDesiredMaterialKind()
{
  return &type metadata for IDSGroupEncryptionDesiredMaterialKind;
}

uint64_t sub_100513EE8()
{
  return sub_100513F30(&qword_100A47590, (void (*)(uint64_t))type metadata accessor for IDSQRProtoMaterialInfo_MaterialType);
}

uint64_t sub_100513F30(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100513F78(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A47598);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100513FDC()
{
  return swift_retain();
}

uint64_t sub_100514028(uint64_t a1)
{
  unsigned int v3 = (void *)(v1 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_lock);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*sub_10051407C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1005140D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_previousIdentity;
  swift_beginAccess();
  return sub_10051412C(v3, a1);
}

uint64_t sub_10051412C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A451F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100514194(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_previousIdentity;
  swift_beginAccess();
  sub_1005141F0(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1005141F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A451F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_100514258())()
{
  return j__swift_endAccess;
}

double sub_1005142B4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_previousPreKeyExpirationDuration;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1005142FC(double a1)
{
  uint64_t v3 = (double *)(v1
                + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_previousPreKeyExpirationDuration);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t (*sub_100514350())()
{
  return j_j__swift_endAccess;
}

double sub_1005143AC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_preKeyExpirationDuration;
  swift_beginAccess();
  return *(double *)v1;
}

uint64_t sub_1005143F4(double a1)
{
  uint64_t v3 = (double *)(v1 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_preKeyExpirationDuration);
  uint64_t result = swift_beginAccess();
  double *v3 = a1;
  return result;
}

uint64_t (*sub_100514448())()
{
  return j_j__swift_endAccess;
}

id sub_1005144A4(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  id v4 = sub_10051663C((uint64_t)a1);

  return v4;
}

id sub_10051451C(uint64_t a1)
{
  uint64_t v3 = sub_100431F80(&qword_100A451F0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x138))(a1);
  uint64_t v7 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7) == 1)
  {
    sub_1005169CC((uint64_t)v6);
    return 0;
  }
  else
  {
    id v8 = sub_1005359BC();
    sub_1004EDCD8((uint64_t)v6, type metadata accessor for IDSGroupEncryptionFullIdentity);
  }
  return v8;
}

uint64_t sub_1005147DC()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x90))() + 16);
  os_unfair_lock_lock(v1);
  sub_100469128();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

void sub_100514894(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (id *)((char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A451F0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a1 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_identity;
  swift_beginAccess();
  sub_10051412C(v17, (uint64_t)v16);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8))
  {
    sub_1005169CC((uint64_t)v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
  }
  else
  {
    sub_1004EEA50((uint64_t)v16, (uint64_t)v12, type metadata accessor for IDSGroupEncryptionFullIdentity);
    sub_1005169CC((uint64_t)v16);
    sub_1004EEA50((uint64_t)v12, (uint64_t)v7, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_1004EDCD8((uint64_t)v12, type metadata accessor for IDSGroupEncryptionFullIdentity);
    id v18 = v7[1];
    sub_1004EDCD8((uint64_t)v7, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    id v19 = v18;
    sub_100514BB4(v18, a2);
  }
}

uint64_t sub_100514B00()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x90))() + 16);
  os_unfair_lock_lock(v1);
  sub_100482E74();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

uint64_t sub_100514BB4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v122 = a2;
  uint64_t v110 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v6 = __chkstk_darwin(v110, v5);
  uint64_t v114 = (uint64_t)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v112 = (__SecKey *)((char *)&v107 - v10);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (uint64_t *)((char *)&v107 - v12);
  uint64_t v14 = (void *)sub_100725CC0();
  id v119 = (uint64_t (*)(uint64_t))*(v14 - 1);
  uint64_t v16 = __chkstk_darwin(v14, v15);
  BOOL v113 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v111 = (char *)&v107 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  unint64_t v120 = (void (*)(char *, id))((char *)&v107 - v23);
  __chkstk_darwin(v22, v24);
  id v121 = (char *)&v107 - v25;
  uint64_t v26 = sub_100431F80(&qword_100A451F0);
  uint64_t v28 = __chkstk_darwin(v26 - 8, v27);
  uint64_t v118 = (uint64_t)&v107 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = __chkstk_darwin(v28, v30);
  unint64_t v33 = (char *)&v107 - v32;
  __chkstk_darwin(v31, v34);
  uint64_t v36 = (char *)&v107 - v35;
  uint64_t v37 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  uint64_t v39 = __chkstk_darwin(v37, v38);
  uint64_t v41 = __chkstk_darwin(v39, v40);
  uint64_t v43 = __chkstk_darwin(v41, v42);
  uint64_t v45 = (char *)&v107 - v44;
  uint64_t v47 = __chkstk_darwin(v43, v46);
  int v49 = (char *)&v107 - v48;
  __chkstk_darwin(v47, v50);
  uint64_t v55 = (char *)&v107 - v54;
  id v124 = a1;
  if (a1)
  {
    uint64_t v107 = v53;
    uint64_t v108 = v52;
    id v109 = v13;
    id v115 = v14;
    uint64_t v116 = v3;
    uint64_t v56 = (uint64_t)v3 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_identity;
    uint64_t v123 = v51;
    swift_beginAccess();
    uint64_t v117 = v56;
    sub_10051412C(v56, (uint64_t)v36);
    uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v123 + 48);
    if (v57(v36, 1, v37) == 1)
    {
      id v58 = v124;
      sub_1005169CC((uint64_t)v36);
    }
    else
    {
      sub_10051746C((uint64_t)v36, (uint64_t)v55);
      id v62 = v124;
      char v63 = sub_1005354B0();
      sub_1004EEA50((uint64_t)v55, (uint64_t)v49, type metadata accessor for IDSGroupEncryptionFullIdentity);
      if (v63)
      {
        sub_1004EDCD8((uint64_t)v49, type metadata accessor for IDSGroupEncryptionFullIdentity);
      }
      else
      {
        sub_100462C50(0, (unint64_t *)&qword_100A44F08);
        char v64 = sub_1007267F0();
        sub_1004EDCD8((uint64_t)v49, type metadata accessor for IDSGroupEncryptionFullIdentity);
        if (v64)
        {

          uint64_t v65 = v122;
          sub_10051746C((uint64_t)v55, v122);
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v123 + 56))(v65, 0, 1, v37);
        }
      }
      sub_1004EDCD8((uint64_t)v55, type metadata accessor for IDSGroupEncryptionFullIdentity);
    }
    uint64_t v66 = v122;
    sub_10051412C(v117, (uint64_t)v33);
    if (v57(v33, 1, v37) == 1)
    {
      sub_1005169CC((uint64_t)v33);
      id v68 = v115;
      id v67 = v116;
    }
    else
    {
      sub_10051746C((uint64_t)v33, (uint64_t)v45);
      uint64_t v69 = v118;
      sub_1004EEA50((uint64_t)v45, v118, type metadata accessor for IDSGroupEncryptionFullIdentity);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v123 + 56))(v69, 0, 1, v37);
      id v67 = v116;
      (*(void (**)(uint64_t))((swift_isaMask & *v116) + 0xC8))(v69);
      sub_1005158B0();
      sub_1004EDCD8((uint64_t)v45, type metadata accessor for IDSGroupEncryptionFullIdentity);
      id v68 = v115;
    }
    uint64_t v70 = (uint64_t)v120;
    unint64_t v71 = v121;
    sub_100725C80();
    id v127 = 0;
    uint64_t v72 = (__SecKey *)sub_10006DF38(0, (uint64_t)&v127);
    if (v72)
    {
      unint64_t v73 = v72;
      if (v127)
      {

        (*((void (**)(char *, id))v119 + 1))(v71, v68);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56))(v66, 1, 1, v37);
      }
      SecKeyRef v74 = SecKeyCopyPublicKey(v72);
      if (v74)
      {
        SecKeyRef v75 = v74;
        id v76 = v124;
        unint64_t v77 = v111;
        uint64_t v78 = sub_100725C80();
        (*(void (**)(uint64_t))((swift_isaMask & *v67) + 0xF0))(v78);
        sub_100725C10();
        unint64_t v79 = v119;
        uint64_t v80 = (void (*)(char *, id))*((void *)v119 + 1);
        id v124 = (char *)v119 + 8;
        unint64_t v120 = v80;
        v80(v77, v68);
        unint64_t v81 = v75;
        uint64_t v82 = v109;
        id v115 = v76;
        uint64_t v111 = (char *)v81;
        sub_100535590(0, (uint64_t)v76, v70, (uint64_t)v81, 2, v109);
        uint64_t v83 = (uint64_t)v112;
        sub_1004EEA50((uint64_t)v82, (uint64_t)v112, type metadata accessor for IDSGroupEncryptionPublicIdentity);
        int v84 = v73;
        uint64_t v85 = v108;
        uint64_t v112 = v84;
        sub_100535AF4(v83, (uint64_t)v84, v108);
        uint64_t v86 = v118;
        sub_1004EEA50(v85, v118, type metadata accessor for IDSGroupEncryptionFullIdentity);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v123 + 56))(v86, 0, 1, v37);
        uint64_t v87 = v117;
        swift_beginAccess();
        sub_1005141F0(v86, v87);
        swift_endAccess();
        uint64_t v88 = v85;
        uint64_t v89 = v107;
        sub_1004EEA50(v88, v107, type metadata accessor for IDSGroupEncryptionFullIdentity);
        uint64_t v90 = v70;
        unint64_t v91 = v113;
        (*((void (**)(char *, char *, id))v79 + 2))(v113, v121, v68);
        uint64_t v92 = v114;
        sub_1004EEA50((uint64_t)v82, v114, type metadata accessor for IDSGroupEncryptionPublicIdentity);
        id v93 = sub_100725EB0();
        os_log_type_t v94 = sub_1007266E0();
        int v95 = v94;
        if (os_log_type_enabled(v93, v94))
        {
          uint64_t v96 = swift_slowAlloc();
          uint64_t v123 = swift_slowAlloc();
          v126[0] = v123;
          *(_DWORD *)uint64_t v96 = 136315650;
          sub_100517424(&qword_100A45200, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionFullIdentity);
          LODWORD(v118) = v95;
          uint64_t v97 = sub_100726D00();
          uint64_t v125 = sub_10043E578(v97, v98, v126);
          sub_100726830();
          swift_bridgeObjectRelease();
          id v119 = type metadata accessor for IDSGroupEncryptionFullIdentity;
          sub_1004EDCD8(v89, type metadata accessor for IDSGroupEncryptionFullIdentity);
          *(_WORD *)(v96 + 12) = 2080;
          sub_100725C80();
          sub_100725BB0();
          id v99 = v120;
          v120((char *)v90, v68);
          sub_100725BB0();
          uint64_t v100 = sub_100726610();
          uint64_t v125 = sub_10043E578(v100, v101, v126);
          sub_100726830();
          swift_bridgeObjectRelease();
          v99(v91, v68);
          *(_WORD *)(v96 + 22) = 2080;
          uint64_t v102 = v114;
          sub_100517424(&qword_100A459E8, (void (*)(uint64_t))&type metadata accessor for Date);
          uint64_t v103 = sub_100726D00();
          uint64_t v125 = sub_10043E578(v103, v104, v126);
          uint64_t v105 = v122;
          sub_100726830();
          swift_bridgeObjectRelease();
          sub_1004EDCD8(v102, type metadata accessor for IDSGroupEncryptionPublicIdentity);
          _os_log_impl((void *)&_mh_execute_header, v93, (os_log_type_t)v118, "Created the full identity %s, duration %s), will expire at %s", (uint8_t *)v96, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_1004EDCD8(v108, v119);
          sub_1004EDCD8((uint64_t)v109, type metadata accessor for IDSGroupEncryptionPublicIdentity);
          v99(v121, v68);
        }
        else
        {

          sub_1004EDCD8(v92, type metadata accessor for IDSGroupEncryptionPublicIdentity);
          unint64_t v106 = v120;
          v120(v91, v68);
          sub_1004EDCD8(v89, type metadata accessor for IDSGroupEncryptionFullIdentity);

          sub_1004EDCD8(v108, type metadata accessor for IDSGroupEncryptionFullIdentity);
          sub_1004EDCD8((uint64_t)v109, type metadata accessor for IDSGroupEncryptionPublicIdentity);
          v106(v121, v68);
          uint64_t v105 = v122;
        }
        return sub_10051412C(v117, v105);
      }
      (*((void (**)(char *, id))v119 + 1))(v71, v68);
    }
    else
    {
      (*((void (**)(char *, id))v119 + 1))(v71, v68);
    }

    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v123 + 56))(v66, 1, 1, v37);
  }
  int v59 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56);
  uint64_t v60 = v122;

  return v59(v60, 1, 1, v37);
}

void sub_1005158B0()
{
  uint64_t v30 = sub_100725EF0();
  uint64_t v33 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v1);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100725F20();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  __chkstk_darwin(v4, v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100725EE0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (uint64_t *)((char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_100725F50();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16, v19);
  uint64_t v21 = (char *)&v29 - v20;
  uint64_t v29 = *(void *)((char *)v0 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_q);
  uint64_t v22 = sub_100725F30();
  double v23 = (*(double (**)(uint64_t))((swift_isaMask & *v0) + 0xF0))(v22);
  if ((~*(void *)&v23 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v23 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v23 < 9.22337204e18)
  {
    *uint64_t v12 = (uint64_t)v23;
    (*(void (**)(void *, void, uint64_t))(v9 + 104))(v12, enum case for DispatchTimeInterval.seconds(_:), v8);
    sub_100725F90();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
    uint64_t v24 = *(void (**)(char *, uint64_t))(v14 + 8);
    v24(v18, v13);
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v0;
    aBlock[4] = sub_100517334;
    aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100435714;
    aBlock[3] = &unk_10098FB58;
    uint64_t v26 = _Block_copy(aBlock);
    uint64_t v27 = v0;
    sub_100725F00();
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_100517424((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004413A8((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    uint64_t v28 = v30;
    sub_100726890();
    sub_100726710();
    _Block_release(v26);
    (*(void (**)(char *, uint64_t))(v33 + 8))(v3, v28);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v32);
    v24(v21, v13);
    swift_release();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_100515D70(void *a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A451F0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  return (*(uint64_t (**)(char *))((swift_isaMask & *a1) + 0xC8))(v5);
}

uint64_t sub_100515E54()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x90))() + 16);
  os_unfair_lock_lock(v1);
  sub_100469128();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

uint64_t sub_100515EFC(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A451F0);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = a1 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_identity;
  swift_beginAccess();
  sub_1005141F0((uint64_t)v5, v7);
  return swift_endAccess();
}

uint64_t sub_1005160A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(uint64_t (**)(void))((swift_isaMask & *v2) + 0x90);
  uint64_t v5 = (os_unfair_lock_s *)v4();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  uint64_t v15 = a2;
  swift_unknownObjectWeakInit();
  uint64_t v6 = (void **)((char *)v2 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_listeners);
  swift_beginAccess();
  uint64_t v7 = *v6;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v6 = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v7 = sub_1005164F4(0, v7[2] + 1, 1, (unint64_t)v7);
    *uint64_t v6 = v7;
  }
  unint64_t v10 = v7[2];
  unint64_t v9 = v7[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t v7 = sub_1005164F4((void *)(v9 > 1), v10 + 1, 1, (unint64_t)v7);
    *uint64_t v6 = v7;
  }
  v7[2] = v10 + 1;
  sub_100516AB4((uint64_t)v14, (uint64_t)&v7[2 * v10 + 4]);
  uint64_t v11 = swift_endAccess();
  uint64_t v12 = (os_unfair_lock_s *)((uint64_t (*)(uint64_t))v4)(v11);
  os_unfair_lock_unlock(v12 + 4);
  return swift_release();
}

uint64_t sub_100516204(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x90);
  uint64_t v4 = (os_unfair_lock_s *)v3();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  uint64_t v5 = (void *)((char *)v1 + OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_listeners);
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v6 = sub_100516BE4(v5, a1);
  uint64_t result = swift_unknownObjectRelease();
  int64_t v8 = *(void *)(*v5 + 16);
  if (v8 < v6)
  {
    __break(1u);
  }
  else
  {
    sub_100516E74(v6, v8);
    uint64_t v9 = swift_endAccess();
    unint64_t v10 = (os_unfair_lock_s *)((uint64_t (*)(uint64_t))v3)(v9);
    os_unfair_lock_unlock(v10 + 4);
    return swift_release();
  }
  return result;
}

id sub_10051634C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSGroupEncryptionIdentityController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100516444()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x130))();
}

uint64_t sub_1005164A0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xC0))();
}

void *sub_1005164F4(void *result, int64_t a2, char a3, unint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *(void *)(a4 + 16);
    if (v7 <= v8) {
      uint64_t v9 = *(void *)(a4 + 16);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100431F80(&qword_100A475D0);
      unint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      unint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if ((unint64_t)v10 < a4 || (unint64_t)v13 >= a4 + 32 + 16 * v8)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != (void *)a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(a4 + 16) = 0;
        goto LABEL_26;
      }
    }
    sub_100516AF0(0, v8, (unint64_t)v13, a4);
LABEL_26:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_100516628(unint64_t a1)
{
  return sub_1005164F4(0, *(void *)(a1 + 16), 0, a1);
}

id sub_10051663C(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t v20 = sub_100726740();
  uint64_t v2 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v3);
  char v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100726700();
  __chkstk_darwin(v6, v7);
  uint64_t v8 = sub_100725F20();
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v10 = v1;
  sub_1004DFE9C(0);
  uint64_t v19 = OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_q;
  sub_100462C50(0, (unint64_t *)&qword_100A45480);
  sub_100725F00();
  double v23 = _swiftEmptyArrayStorage;
  sub_100517424(&qword_100A44A68, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100431F80((uint64_t *)&unk_100A45490);
  sub_1004413A8((unint64_t *)&qword_100A44A70, (uint64_t *)&unk_100A45490);
  sub_100726890();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v20);
  *(void *)&v10[v19] = sub_100726760();
  uint64_t v11 = OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_lock;
  sub_100431F80((uint64_t *)&unk_100A454B0);
  uint64_t v12 = swift_allocObject();
  *(_DWORD *)(v12 + 16) = 0;
  *(void *)&v10[v11] = v12;
  uint64_t v13 = &v10[OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_identity];
  uint64_t v14 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  uint64_t v15 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v15(v13, 1, 1, v14);
  v15(&v10[OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_previousIdentity], 1, 1, v14);
  *(void *)&v10[OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_listeners] = _swiftEmptyArrayStorage;
  uint64_t v16 = v21;
  *(void *)&v10[OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_preKeyExpirationDuration] = *(void *)(v21 + OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_preKeyExpirationDuration);
  *(void *)&v10[OBJC_IVAR____TtC17identityservicesd36IDSGroupEncryptionIdentityController_previousPreKeyExpirationDuration] = *(void *)(v16 + OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_previousPreKeyExpirationDuration);

  uint64_t v17 = (objc_class *)type metadata accessor for IDSGroupEncryptionIdentityController();
  v22.receiver = v10;
  v22.super_class = v17;
  return objc_msgSendSuper2(&v22, "init");
}

uint64_t sub_1005169CC(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A451F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_100516A2C(uint64_t a1@<X8>)
{
  sub_100514894(*(void *)(v1 + 16), a1);
}

uint64_t sub_100516A58@<X0>(uint64_t a1@<X8>)
{
  return sub_100514BB4(*(void **)(v1 + 24), a1);
}

uint64_t sub_100516A88()
{
  return sub_100515EFC(*(void *)(v0 + 16));
}

uint64_t sub_100516AB4(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_100516AF0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_100516BE4(unint64_t *a1, uint64_t a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  for (uint64_t i = 48; ; i += 16)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    sub_1005174D0(v2 + i - 16, (uint64_t)v22);
    if (!Strong) {
      break;
    }
    uint64_t v9 = swift_unknownObjectWeakLoadStrong();
    if (v9)
    {
      uint64_t v10 = v9;
      swift_unknownObjectRelease();
      sub_100461218((uint64_t)v22);
      if (v10 == a2) {
        goto LABEL_11;
      }
    }
    else
    {
      sub_100461218((uint64_t)v22);
    }
    if (v3 == ++v6)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v2 + 16);
    }
  }
  sub_100461218((uint64_t)v22);
LABEL_11:
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v6, 1)) {
    goto LABEL_44;
  }
  unint64_t v12 = *(void *)(v2 + 16);
  if (v6 + 1 == v12) {
    return v6;
  }
  for (unint64_t j = v6 + 1; j < v12; ++j)
  {
    sub_1005174D0(v2 + i, (uint64_t)v22);
    uint64_t v14 = swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectRelease();
    sub_1005174D0((uint64_t)v22, (uint64_t)v21);
    if (!v14)
    {
      sub_100461218((uint64_t)v21);
      uint64_t result = sub_100461218((uint64_t)v22);
      goto LABEL_31;
    }
    uint64_t v15 = swift_unknownObjectWeakLoadStrong();
    if (v15)
    {
      uint64_t v16 = v15;
      swift_unknownObjectRelease();
      sub_100461218((uint64_t)v21);
      uint64_t result = sub_100461218((uint64_t)v22);
      if (v16 == a2) {
        goto LABEL_31;
      }
      if (j == v6) {
        goto LABEL_30;
      }
    }
    else
    {
      sub_100461218((uint64_t)v21);
      uint64_t result = sub_100461218((uint64_t)v22);
      if (j == v6) {
        goto LABEL_30;
      }
    }
    if ((v6 & 0x8000000000000000) != 0) {
      goto LABEL_39;
    }
    unint64_t v17 = *a1;
    unint64_t v18 = *(void *)(*a1 + 16);
    if (v6 >= v18) {
      goto LABEL_40;
    }
    uint64_t result = sub_1005174D0(v17 + 16 * v6 + 32, (uint64_t)v22);
    if (j >= v18) {
      goto LABEL_41;
    }
    sub_1005174D0(v17 + i, (uint64_t)v21);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    *a1 = v17;
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_100516628(v17);
      unint64_t v17 = result;
      *a1 = result;
    }
    if (v6 >= *(void *)(v17 + 16)) {
      goto LABEL_42;
    }
    uint64_t result = sub_10051750C((uint64_t)v21, v17 + 16 * v6 + 32);
    if (j >= *(void *)(*a1 + 16)) {
      goto LABEL_43;
    }
    uint64_t result = sub_10051750C((uint64_t)v22, *a1 + i);
LABEL_30:
    if (__OFADD__(v6++, 1)) {
      goto LABEL_38;
    }
LABEL_31:
    unint64_t v20 = j + 1;
    if (__OFADD__(j, 1)) {
      goto LABEL_37;
    }
    unint64_t v2 = *a1;
    unint64_t v12 = *(void *)(*a1 + 16);
    i += 16;
    if (v20 == v12) {
      return v6;
    }
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_100516E74(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1005164F4(isUniquelyReferenced_nonNull_native, v11, 1, (unint64_t)v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_22;
  }
  uint64_t v13 = v4[2];
  uint64_t v14 = v13 - a2;
  if (__OFSUB__(v13, a2)) {
    goto LABEL_28;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    if (a1 < a2 || &v4[2 * a1 + 4] >= &v4[2 * a2 + 4 + 2 * v14])
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (a1 != a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, v8);
    uint64_t v17 = v15 - v7;
    if (!v16)
    {
      v4[2] = v17;
LABEL_22:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for IDSGroupEncryptionIdentityController()
{
  uint64_t result = qword_100A51FA0;
  if (!qword_100A51FA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithCopy for IDSGroupEncryptionIdentityControllerWeakDelegate(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for IDSGroupEncryptionIdentityControllerWeakDelegate(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for IDSGroupEncryptionIdentityControllerWeakDelegate(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for IDSGroupEncryptionIdentityControllerWeakDelegate(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for IDSGroupEncryptionIdentityControllerWeakDelegate(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSGroupEncryptionIdentityControllerWeakDelegate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionIdentityControllerWeakDelegate()
{
  return &type metadata for IDSGroupEncryptionIdentityControllerWeakDelegate;
}

uint64_t sub_100517198()
{
  return type metadata accessor for IDSGroupEncryptionIdentityController();
}

void sub_1005171A0()
{
  sub_100725ED0();
  if (v0 <= 0x3F)
  {
    sub_1005172A4();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_1005172A4()
{
  if (!qword_100A475C8)
  {
    type metadata accessor for IDSGroupEncryptionFullIdentity(255);
    unint64_t v0 = sub_100726810();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100A475C8);
    }
  }
}

uint64_t sub_1005172FC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100517334()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0x90))() + 16);
  os_unfair_lock_lock(v1);
  sub_100482E74();
  os_unfair_lock_unlock(v1);
  return swift_release();
}

uint64_t sub_1005173E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1005173F0()
{
  return swift_release();
}

uint64_t sub_1005173F8()
{
  return sub_100515D70(*(void **)(v0 + 16));
}

uint64_t sub_100517424(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10051746C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1005174D0(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_10051750C(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_100517548()
{
  return sub_100516A88();
}

uint64_t sub_100517560(uint64_t a1)
{
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = a1;
  return result;
}

void *sub_100517594()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v3 = __chkstk_darwin(v1, v2);
  int64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v6);
  uint64_t v8 = (char *)&v29 - v7;
  int64_t v9 = *(void **)(v0 + 16);
  NSString v10 = sub_100726420();
  id v11 = [v9 sessionWithUniqueID:v10];

  uint64_t result = &_swiftEmptySetSingleton;
  if (v11)
  {
    uint64_t v30 = &_swiftEmptySetSingleton;
    id v13 = [v11 getEncryptedDataBlob];
    if (v13)
    {
      uint64_t v14 = v13;
      uint64_t v15 = sub_100725B50();
      unint64_t v17 = v16;

      sub_100441FD4(v15, v17);
      unint64_t v18 = sub_100487220(0);
      *(_DWORD *)int64_t v5 = v18;
      v5[4] = BYTE4(v18);
      v5[5] = BYTE5(v18) & 1;
      *((void *)v5 + 1) = v19;
      *((void *)v5 + 2) = v20;
      swift_storeEnumTagMultiPayload();
      sub_10045FA4C((uint64_t)v8, (uint64_t)v5);
      sub_100442248(v15, v17);
      sub_100517830((uint64_t)v8);
    }
    id v21 = [v11 getEncryptedMirageHandshakeBlob];
    if (v21)
    {
      objc_super v22 = v21;
      uint64_t v23 = sub_100725B50();
      unint64_t v25 = v24;

      sub_100441FD4(v23, v25);
      unint64_t v26 = sub_100487220(1);
      *(_DWORD *)int64_t v5 = v26;
      v5[4] = BYTE4(v26);
      v5[5] = BYTE5(v26) & 1;
      *((void *)v5 + 1) = v27;
      *((void *)v5 + 2) = v28;
      swift_storeEnumTagMultiPayload();
      sub_10045FA4C((uint64_t)v8, (uint64_t)v5);
      swift_unknownObjectRelease();
      sub_100442248(v23, v25);
      sub_100517830((uint64_t)v8);
    }
    else
    {
      swift_unknownObjectRelease();
    }
    return v30;
  }
  return result;
}

uint64_t sub_1005177D4()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_10051780C()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 96))();
}

uint64_t sub_100517830(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for IDSDSessionBlobProvider()
{
  return self;
}

uint64_t sub_1005178B0(unsigned __int8 a1)
{
  return a1 + 1;
}

uint64_t sub_1005178BC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_100517A7C();
  unint64_t v5 = sub_1004D0834();

  return Error<>._code.getter(a1, a2, v4, v5);
}

void *sub_100517914()
{
  return &unk_10098FB90;
}

unint64_t sub_100517924()
{
  unint64_t result = qword_100A47680;
  if (!qword_100A47680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A47680);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for IDSQuerySDError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100517A44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSQuerySDError()
{
  return &type metadata for IDSQuerySDError;
}

unint64_t sub_100517A7C()
{
  unint64_t result = qword_100A47688;
  if (!qword_100A47688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A47688);
  }
  return result;
}

uint64_t sub_100517AD0()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_100517B20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_100517B8C(void *a1))(uint64_t a1, char a2)
{
  int v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100455C48;
}

unint64_t sub_100517C14(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A47908);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  unsigned int v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A478D8);
  uint64_t v7 = sub_100726BE0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)&v6[*(int *)(v2 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1004546B8(v13, (uint64_t)v6, &qword_100A47908);
    unint64_t result = sub_10045C63C((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_100725D30();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7];
    uint64_t v21 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
    unint64_t result = sub_100527E58(v10, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v17);
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_100517E30()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v2 = (uint64_t *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_100517EF0(v2, &v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  swift_release();
  return v4;
}

uint64_t sub_100517EF0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  id v58 = a2;
  uint64_t v79 = sub_100725D30();
  uint64_t v3 = *(void *)(v79 - 8);
  __chkstk_darwin(v79, v4);
  SecKeyRef v74 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v61 = v6;
  uint64_t v62 = v7;
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v64 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v63 = (uint64_t)&v56 - v13;
  __chkstk_darwin(v12, v14);
  uint64_t v73 = (uint64_t)&v56 - v15;
  uint64_t v16 = sub_100431F80(&qword_100A478F8);
  uint64_t v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v20 = (char *)&v56 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  BOOL v23 = (char *)&v56 - v22;
  uint64_t v80 = &_swiftEmptySetSingleton;
  id v68 = a1;
  uint64_t v69 = v3;
  uint64_t v24 = *a1;
  uint64_t v25 = *(void *)(*a1 + 64);
  uint64_t v59 = *a1 + 64;
  uint64_t v26 = 1 << *(unsigned char *)(v24 + 32);
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  else {
    uint64_t v27 = -1;
  }
  unint64_t v28 = v27 & v25;
  uint64_t v77 = v3 + 16;
  uint64_t v78 = (void (**)(char *, uint64_t))(v3 + 8);
  int64_t v60 = (unint64_t)(v26 + 63) >> 6;
  int64_t v57 = v60 - 1;
  uint64_t v65 = v24;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v70 = 0;
  uint64_t v66 = v23;
  id v67 = v20;
  uint64_t v30 = v74;
  while (1)
  {
    if (v28)
    {
      unint64_t v35 = __clz(__rbit64(v28));
      uint64_t v36 = (v28 - 1) & v28;
      unint64_t v37 = v35 | (v70 << 6);
LABEL_9:
      uint64_t v38 = v65;
      (*(void (**)(char *, unint64_t, uint64_t))(v69 + 16))(v20, *(void *)(v65 + 48) + *(void *)(v69 + 72) * v37, v79);
      uint64_t v39 = *(void *)(v38 + 56) + *(void *)(v62 + 72) * v37;
      uint64_t v40 = sub_100431F80(&qword_100A47900);
      sub_1005271E4(v39, (uint64_t)&v20[*(int *)(v40 + 48)], (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v40 - 8) + 56))(v20, 0, 1, v40);
      goto LABEL_28;
    }
    int64_t v41 = v70 + 1;
    if (__OFADD__(v70, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v41 < v60)
    {
      unint64_t v42 = *(void *)(v59 + 8 * v41);
      if (v42) {
        goto LABEL_13;
      }
      int64_t v43 = v70 + 2;
      ++v70;
      if (v41 + 1 < v60)
      {
        unint64_t v42 = *(void *)(v59 + 8 * v43);
        if (v42) {
          goto LABEL_16;
        }
        int64_t v70 = v41 + 1;
        if (v41 + 2 < v60)
        {
          unint64_t v42 = *(void *)(v59 + 8 * (v41 + 2));
          if (v42)
          {
            v41 += 2;
            goto LABEL_13;
          }
          int64_t v43 = v41 + 3;
          int64_t v70 = v41 + 2;
          if (v41 + 3 < v60) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v44 = sub_100431F80(&qword_100A47900);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v20, 1, 1, v44);
    uint64_t v36 = 0;
LABEL_28:
    sub_100528810((uint64_t)v20, (uint64_t)v23);
    uint64_t v45 = sub_100431F80(&qword_100A47900);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v23, 1, v45) == 1)
    {
      uint64_t result = swift_release();
      *id v58 = v80;
      return result;
    }
    unint64_t v72 = v36;
    sub_100527E58((uint64_t)&v23[*(int *)(v45 + 48)], v73);
    uint64_t v46 = v68[3];
    uint64_t v47 = *(void *)(v46 + 16);
    uint64_t v71 = (unint64_t)v78 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    if (v47
      && (uint64_t v48 = v73 + *(int *)(v61 + 20),
          sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID),
          uint64_t v76 = v48,
          uint64_t v49 = sub_1007263D0(),
          uint64_t v50 = -1 << *(unsigned char *)(v46 + 32),
          unint64_t v51 = v49 & ~v50,
          ((*(void *)(v46 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51) & 1) != 0))
    {
      uint64_t v75 = ~v50;
      uint64_t v52 = *(void *)(v69 + 72);
      uint64_t v53 = *(void (**)(char *, unint64_t, uint64_t))(v69 + 16);
      while (1)
      {
        uint64_t v54 = v79;
        v53(v30, *(void *)(v46 + 48) + v52 * v51, v79);
        sub_100528654(&qword_100A45458, (void (*)(uint64_t))&type metadata accessor for UUID);
        char v55 = sub_100726410();
        uint64_t v34 = *v78;
        (*v78)(v30, v54);
        if (v55) {
          break;
        }
        unint64_t v51 = (v51 + 1) & v75;
        if (((*(void *)(v46 + 56 + ((v51 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v51) & 1) == 0) {
          goto LABEL_5;
        }
      }
      sub_10052724C(v73, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    }
    else
    {
LABEL_5:
      uint64_t v31 = v73;
      uint64_t v32 = v64;
      sub_1005271E4(v73, v64, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v33 = v63;
      sub_10043F7EC(v63, v32);
      sub_10052724C(v33, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10052724C(v31, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v34 = *v78;
    }
    BOOL v23 = v66;
    uint64_t v20 = v67;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v34)(v66, v79);
    unint64_t v28 = v72;
  }
  unint64_t v42 = *(void *)(v59 + 8 * v43);
  if (v42)
  {
LABEL_16:
    int64_t v41 = v43;
LABEL_13:
    uint64_t v36 = (v42 - 1) & v42;
    unint64_t v37 = __clz(__rbit64(v42)) + (v41 << 6);
    int64_t v70 = v41;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v41 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      break;
    }
    if (v41 >= v60)
    {
      int64_t v70 = v57;
      goto LABEL_27;
    }
    unint64_t v42 = *(void *)(v59 + 8 * v41);
    ++v43;
    if (v42) {
      goto LABEL_13;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1005185F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100725D30();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID),
        uint64_t v8 = sub_1007263D0(),
        uint64_t v9 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v10 = v8 & ~v9,
        uint64_t v11 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0))
  {
    uint64_t v18 = ~v9;
    uint64_t v19 = a2;
    uint64_t v12 = v4 + 16;
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
    uint64_t v14 = *(void *)(v12 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v12 - 8);
    do
    {
      v13(v7, *(void *)(v19 + 48) + v14 * v10, v3);
      sub_100528654(&qword_100A45458, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v16 = sub_100726410();
      (*v15)(v7, v3);
      if (v16) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v18;
    }
    while (((*(void *)(v11 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  else
  {
    char v16 = 0;
  }
  return v16 & 1;
}

uint64_t sub_10051880C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v2 = (uint64_t *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1005188CC(v2, &v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  swift_release();
  return v4;
}

uint64_t sub_1005188CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  id v67 = a2;
  uint64_t v3 = sub_100725D30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v75 = (char *)&v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v88 = (char *)&v66 - v9;
  uint64_t v78 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v72 = *(void *)(v78 - 8);
  uint64_t v11 = __chkstk_darwin(v78, v10);
  uint64_t v74 = (uint64_t)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v73 = (uint64_t)&v66 - v15;
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v66 - v17;
  uint64_t v19 = sub_100431F80(&qword_100A478F8);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  BOOL v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v24);
  uint64_t v26 = (char *)&v66 - v25;
  uint64_t v90 = &_swiftEmptySetSingleton;
  uint64_t v29 = *a1;
  unint64_t v28 = a1 + 3;
  uint64_t v27 = v29;
  uint64_t v30 = *(void *)(v29 + 64);
  uint64_t v68 = v29 + 64;
  uint64_t v31 = 1 << *(unsigned char *)(v29 + 32);
  if (v31 < 64) {
    uint64_t v32 = ~(-1 << v31);
  }
  else {
    uint64_t v32 = -1;
  }
  unint64_t v33 = v32 & v30;
  uint64_t v34 = (void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v79 = v4;
  uint64_t v89 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  int64_t v70 = (unint64_t)(v31 + 63) >> 6;
  int64_t v66 = v70 - 1;
  uint64_t v76 = v27;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v80 = 0;
  unint64_t v81 = v26;
  uint64_t v77 = v23;
  uint64_t v87 = (void (**)(char *, char *, uint64_t))(v4 + 16);
  uint64_t v69 = v28;
  uint64_t v71 = v18;
  uint64_t v85 = v3;
  while (1)
  {
    if (v33)
    {
      uint64_t v83 = (v33 - 1) & v33;
      unint64_t v42 = __clz(__rbit64(v33)) | (v80 << 6);
LABEL_10:
      uint64_t v43 = v76;
      (*(void (**)(char *, unint64_t, uint64_t))(v79 + 16))(v23, *(void *)(v76 + 48) + *(void *)(v79 + 72) * v42, v3);
      uint64_t v44 = *(void *)(v43 + 56) + *(void *)(v72 + 72) * v42;
      uint64_t v45 = sub_100431F80(&qword_100A47900);
      sub_1005271E4(v44, (uint64_t)&v23[*(int *)(v45 + 48)], (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v23, 0, 1, v45);
      uint64_t v26 = v81;
      goto LABEL_29;
    }
    int64_t v46 = v80 + 1;
    if (__OFADD__(v80, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v46 < v70)
    {
      unint64_t v47 = *(void *)(v68 + 8 * v46);
      if (v47) {
        goto LABEL_14;
      }
      int64_t v48 = v80 + 2;
      ++v80;
      if (v46 + 1 < v70)
      {
        unint64_t v47 = *(void *)(v68 + 8 * v48);
        if (v47) {
          goto LABEL_17;
        }
        int64_t v80 = v46 + 1;
        if (v46 + 2 < v70)
        {
          unint64_t v47 = *(void *)(v68 + 8 * (v46 + 2));
          if (v47)
          {
            v46 += 2;
            goto LABEL_14;
          }
          int64_t v48 = v46 + 3;
          int64_t v80 = v46 + 2;
          if (v46 + 3 < v70) {
            break;
          }
        }
      }
    }
LABEL_28:
    uint64_t v49 = sub_100431F80(&qword_100A47900);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v23, 1, 1, v49);
    uint64_t v83 = 0;
LABEL_29:
    sub_100528810((uint64_t)v23, (uint64_t)v26);
    uint64_t v50 = sub_100431F80(&qword_100A47900);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v26, 1, v50) == 1)
    {
      uint64_t result = swift_release();
      void *v67 = v90;
      return result;
    }
    sub_100527E58((uint64_t)&v26[*(int *)(v50 + 48)], (uint64_t)v18);
    uint64_t v51 = *v28;
    uint64_t v52 = &v18[*(int *)(v78 + 20)];
    uint64_t v53 = *(void *)(*v28 + 16);
    uint64_t v82 = (unint64_t)v89 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    if (!v53)
    {
      int64_t v57 = *v34;
      goto LABEL_6;
    }
    sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v54 = sub_1007263D0();
    uint64_t v55 = -1 << *(unsigned char *)(v51 + 32);
    unint64_t v56 = v54 & ~v55;
    uint64_t v86 = v51 + 56;
    int64_t v57 = *v34;
    if (((*(void *)(v51 + 56 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v56) & 1) == 0)
    {
LABEL_5:
      uint64_t v18 = v71;
LABEL_6:
      uint64_t v36 = v75;
      v57(v75, v52, v3);
      uint64_t v37 = (uint64_t)v88;
      sub_1005213A4((uint64_t)v88, v36);
      uint64_t v38 = *v89;
      (*v89)(v37, v3);
      uint64_t v39 = v74;
      sub_1005271E4((uint64_t)v18, v74, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v40 = (uint64_t)v18;
      uint64_t v41 = v73;
      sub_10043F7EC(v73, v39);
      sub_10052724C(v41, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      goto LABEL_7;
    }
    uint64_t v84 = ~v55;
    uint64_t v58 = *(void *)(v79 + 72);
    while (1)
    {
      uint64_t v59 = v51;
      unint64_t v60 = *(void *)(v51 + 48) + v58 * v56;
      uint64_t v61 = (uint64_t)v88;
      uint64_t v62 = v85;
      uint64_t v63 = v57;
      v57(v88, (char *)v60, v85);
      sub_100528654(&qword_100A45458, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v64 = v52;
      char v65 = sub_100726410();
      uint64_t v38 = *v89;
      (*v89)(v61, v62);
      if (v65) {
        break;
      }
      unint64_t v56 = (v56 + 1) & v84;
      uint64_t v52 = v64;
      uint64_t v51 = v59;
      int64_t v57 = v63;
      if (((*(void *)(v86 + ((v56 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v56) & 1) == 0)
      {
        unint64_t v28 = v69;
        uint64_t v3 = v85;
        goto LABEL_5;
      }
    }
    unint64_t v28 = v69;
    uint64_t v3 = v85;
    uint64_t v40 = (uint64_t)v71;
LABEL_7:
    sub_10052724C(v40, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v26 = v81;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v38)(v81, v3);
    uint64_t v18 = (char *)v40;
    BOOL v23 = v77;
    uint64_t v34 = v87;
    unint64_t v33 = v83;
  }
  unint64_t v47 = *(void *)(v68 + 8 * v48);
  if (v47)
  {
LABEL_17:
    int64_t v46 = v48;
LABEL_14:
    uint64_t v83 = (v47 - 1) & v47;
    unint64_t v42 = __clz(__rbit64(v47)) + (v46 << 6);
    int64_t v80 = v46;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v46 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v46 >= v70)
    {
      int64_t v80 = v66;
      goto LABEL_28;
    }
    unint64_t v47 = *(void *)(v68 + 8 * v46);
    ++v48;
    if (v47) {
      goto LABEL_14;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1005190A0(uint64_t a1, int a2)
{
  uint64_t v4 = swift_allocObject();
  sub_1005190F0(a1, a2);
  return v4;
}

uint64_t sub_1005190F0(uint64_t a1, int a2)
{
  int v19 = a2;
  uint64_t v20 = a1;
  uint64_t v3 = sub_100725ED0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionKeyMaterialCache2.KMCacheState(0);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (unint64_t *)&v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(void *)(v2 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  uint64_t v12 = OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state;
  *uint64_t v11 = sub_100517C14((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v13 = &_swiftEmptySetSingleton;
  v11[1] = sub_100527028(_swiftEmptyArrayStorage);
  v11[2] = (unint64_t)&_swiftEmptySetSingleton;
  v11[3] = (unint64_t)&_swiftEmptySetSingleton;
  v11[4] = (unint64_t)&_swiftEmptySetSingleton;
  sub_100725C40();
  sub_100431F80(&qword_100A47690);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + ((*(unsigned int *)(*(void *)v14 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_1005271E4((uint64_t)v11, v14 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v14 + 16), type metadata accessor for IDSGroupEncryptionKeyMaterialCache2.KMCacheState);
  sub_10052724C((uint64_t)v11, type metadata accessor for IDSGroupEncryptionKeyMaterialCache2.KMCacheState);
  *(void *)(v2 + v12) = v14;
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_100726BA0())
  {
    sub_100440398((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v13 = v17;
  }
  *(void *)(v2 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_currentMembers) = v13;
  sub_1004DFE9C(v19);
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v4 + 32))(v2 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_l, v7, v3);
  uint64_t v15 = v20;
  *(void *)(v2 + 16) = v20;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_isRatchetEnabled) = *(unsigned char *)(v15 + OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_isRatchetEnabled);
  return v2;
}

uint64_t sub_1005193B4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v2 = (uint64_t *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_100527148(v2, (char *)&v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  swift_release();
  return v4;
}

uint64_t sub_100519478@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = sub_100431F80(&qword_100A44A50);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  if (*(void *)(v10 + 16) && (unint64_t v11 = sub_10045C63C(a2), (v12 & 1) != 0))
  {
    unint64_t v13 = v11;
    uint64_t v14 = *(void *)(v10 + 56);
    uint64_t v15 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
    uint64_t v16 = *(void *)(v15 - 8);
    sub_1005271E4(v14 + *(void *)(v16 + 72) * v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    char v17 = 1;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  }
  else
  {
    uint64_t v18 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 1, 1, v18);
    char v17 = 0;
  }
  uint64_t result = sub_10044C150((uint64_t)v9, &qword_100A44A50);
  *a3 = v17;
  return result;
}

uint64_t sub_10051960C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v2 = (uint64_t *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_100527174(v2, &v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  swift_release();
  return v4;
}

uint64_t sub_1005196D0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = (int *)type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v107 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  uint64_t v112 = (uint64_t)&v107 - v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v110 = (uint64_t)&v107 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v109 = (uint64_t)&v107 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v114 = (uint64_t)&v107 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v113 = (uint64_t)&v107 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  unint64_t v28 = (char *)&v107 - v27;
  uint64_t v30 = __chkstk_darwin(v26, v29);
  uint64_t v111 = (uint64_t)&v107 - v31;
  uint64_t v33 = __chkstk_darwin(v30, v32);
  unint64_t v35 = (char *)&v107 - v34;
  __chkstk_darwin(v33, v36);
  uint64_t v115 = (uint64_t)&v107 - v37;
  uint64_t v38 = sub_100431F80(&qword_100A44A50);
  uint64_t v40 = __chkstk_darwin(v38 - 8, v39);
  unint64_t v42 = (char *)&v107 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v40, v43);
  uint64_t v45 = (char *)&v107 - v44;
  uint64_t v46 = *a1;
  if (*(void *)(v46 + 16))
  {
    uint64_t v47 = a2;
    unint64_t v48 = sub_10045C63C(a2 + v4[5]);
    if (v49)
    {
      sub_1005271E4(*(void *)(v46 + 56) + *(void *)(v5 + 72) * v48, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(v45, 0, 1, v4);
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v47 = a2;
  }
  (*(void (**)(char *, uint64_t, uint64_t, int *))(v5 + 56))(v45, 1, 1, v4);
LABEL_6:
  sub_1004546B8((uint64_t)v45, (uint64_t)v42, &qword_100A44A50);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v5 + 48))(v42, 1, v4) == 1)
  {
    sub_10044C150((uint64_t)v45, &qword_100A44A50);
    uint64_t v50 = (uint64_t)v42;
LABEL_17:
    sub_10044C150(v50, &qword_100A44A50);
    return 0;
  }
  uint64_t v107 = v9;
  uint64_t v108 = v45;
  uint64_t v51 = v115;
  sub_100527E58((uint64_t)v42, v115);
  uint64_t v52 = v4[7];
  uint64_t v53 = *(void *)(v51 + v52);
  unint64_t v54 = *(void *)(v51 + v52 + 8);
  uint64_t v55 = (uint64_t *)(v47 + v52);
  uint64_t v57 = *v55;
  unint64_t v56 = v55[1];
  sub_100441FD4(v53, v54);
  LOBYTE(v56) = sub_100453588(v53, v54, v57, v56);
  sub_100442248(v53, v54);
  if ((v56 & 1) == 0)
  {
    uint64_t v72 = sub_100725EB0();
    os_log_type_t v73 = sub_1007266C0();
    if (os_log_type_enabled(v72, v73))
    {
      uint64_t v74 = (uint8_t *)swift_slowAlloc();
      uint64_t v117 = swift_slowAlloc();
      *(_DWORD *)uint64_t v74 = 136315138;
      uint64_t v116 = sub_10043E578(0x7461747328736168, 0xEF293A79656B3A65, &v117);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v72, v73, "%s: key is in cache, but key content is different!", v74, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_10052724C(v115, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v50 = (uint64_t)v108;
    goto LABEL_17;
  }
  uint64_t v58 = v51 + v4[13];
  int v59 = *(unsigned __int8 *)(v58 + 8);
  uint64_t v60 = v47;
  sub_1005271E4(v47, (uint64_t)v35, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t v61 = v51;
  if (v59 == 1)
  {
    char v62 = v35[v4[13] + 8];
    sub_10052724C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v63 = (uint64_t)v107;
    uint64_t v64 = (uint64_t)v108;
    if ((v62 & 1) == 0)
    {
      uint64_t v65 = v111;
      sub_1005271E4(v47, v111, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      int64_t v66 = sub_100725EB0();
      os_log_type_t v67 = sub_1007266E0();
      if (os_log_type_enabled(v66, v67))
      {
        uint64_t v68 = swift_slowAlloc();
        uint64_t v117 = swift_slowAlloc();
        *(_DWORD *)uint64_t v68 = 136315394;
        uint64_t v116 = sub_10043E578(0x7461747328736168, 0xEF293A79656B3A65, &v117);
        uint64_t result = sub_100726830();
        *(_WORD *)(v68 + 12) = 2048;
        uint64_t v70 = v65 + v4[13];
        if ((*(unsigned char *)(v70 + 8) & 1) == 0)
        {
          uint64_t v71 = *(void *)v70;
          sub_10052724C(v65, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v116 = v71;
          sub_100726830();
          _os_log_impl((void *)&_mh_execute_header, v66, v67, "%s: key is in cache, but new key has a participant ID %llu and old does not", (uint8_t *)v68, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_10052724C(v115, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v50 = v64;
          goto LABEL_17;
        }
        __break(1u);
        goto LABEL_46;
      }
      uint64_t v95 = v65;
LABEL_43:
      sub_10052724C(v95, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);

      sub_10052724C(v61, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v50 = v64;
      goto LABEL_17;
    }
  }
  else
  {
    sub_10052724C((uint64_t)v35, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v63 = (uint64_t)v107;
    uint64_t v64 = (uint64_t)v108;
  }
  char v75 = *(unsigned char *)(v58 + 8);
  uint64_t v76 = v47;
  sub_1005271E4(v47, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  if (v75)
  {
    sub_10052724C((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v77 = v113;
    sub_1005271E4(v61, v113, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v78 = v60;
    uint64_t v79 = v114;
    sub_1005271E4(v78, v114, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
LABEL_22:
    sub_10052724C(v79, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_10052724C(v77, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
LABEL_23:
    int v82 = *(unsigned __int8 *)(v61 + v4[12]);
    uint64_t v83 = v112;
    sub_1005271E4(v76, v112, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    if (v82)
    {
      sub_10052724C(v83, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
LABEL_25:
      sub_10052724C(v61, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10044C150(v64, &qword_100A44A50);
      return 1;
    }
    int v84 = *(unsigned __int8 *)(v83 + v4[12]);
    sub_10052724C(v83, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    if (!v84) {
      goto LABEL_25;
    }
    sub_1005271E4(v76, v63, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    int64_t v66 = sub_100725EB0();
    os_log_type_t v85 = sub_1007266E0();
    if (!os_log_type_enabled(v66, v85))
    {
      uint64_t v95 = v63;
      goto LABEL_43;
    }
    uint64_t v86 = swift_slowAlloc();
    uint64_t v117 = swift_slowAlloc();
    *(_DWORD *)uint64_t v86 = 136315394;
    uint64_t v116 = sub_10043E578(0x7461747328736168, 0xEF293A79656B3A65, &v117);
    sub_100726830();
    *(_WORD *)(v86 + 12) = 256;
    uint64_t v87 = v64;
    char v88 = *(unsigned char *)(v63 + v4[12]);
    sub_10052724C(v63, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    LOBYTE(v116) = v88;
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v66, v85, "%s: key is in cache, but new key has a shortKI length %hhu and old does not", (uint8_t *)v86, 0xFu);
    swift_arrayDestroy();
    swift_slowDealloc();
LABEL_41:
    swift_slowDealloc();

    sub_10052724C(v115, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v50 = v87;
    goto LABEL_17;
  }
  char v80 = v28[v4[13] + 8];
  sub_10052724C((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t v77 = v113;
  sub_1005271E4(v61, v113, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t v81 = v60;
  uint64_t v79 = v114;
  sub_1005271E4(v81, v114, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  if (v80) {
    goto LABEL_22;
  }
  uint64_t v89 = v77 + v4[13];
  uint64_t v90 = *(void *)v89;
  char v91 = *(unsigned char *)(v89 + 8);
  sub_10052724C(v77, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t v92 = v79 + v4[13];
  uint64_t v93 = *(void *)v92;
  char v94 = *(unsigned char *)(v92 + 8);
  sub_10052724C(v79, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  if (v91)
  {
    uint64_t v63 = (uint64_t)v107;
    if (v94) {
      goto LABEL_23;
    }
  }
  else
  {
    if (v90 == v93) {
      char v96 = v94;
    }
    else {
      char v96 = 1;
    }
    uint64_t v63 = (uint64_t)v107;
    if ((v96 & 1) == 0) {
      goto LABEL_23;
    }
  }
  uint64_t v97 = v76;
  uint64_t v98 = v109;
  sub_1005271E4(v97, v109, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t v99 = v110;
  sub_1005271E4(v61, v110, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  int64_t v66 = sub_100725EB0();
  os_log_type_t v100 = sub_1007266E0();
  if (!os_log_type_enabled(v66, v100))
  {
    sub_10052724C(v99, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v95 = v98;
    goto LABEL_43;
  }
  uint64_t v87 = v64;
  uint64_t v101 = swift_slowAlloc();
  uint64_t v117 = swift_slowAlloc();
  *(_DWORD *)uint64_t v101 = 136315650;
  uint64_t v116 = sub_10043E578(0x7461747328736168, 0xEF293A79656B3A65, &v117);
  uint64_t result = sub_100726830();
  *(_WORD *)(v101 + 12) = 2048;
  uint64_t v102 = v98 + v4[13];
  if (*(unsigned char *)(v102 + 8))
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
  uint64_t v103 = v98;
  uint64_t v104 = *(void *)v102;
  sub_10052724C(v103, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t v116 = v104;
  sub_100726830();
  *(_WORD *)(v101 + 22) = 2048;
  uint64_t result = v110;
  uint64_t v105 = v110 + v4[13];
  if ((*(unsigned char *)(v105 + 8) & 1) == 0)
  {
    uint64_t v106 = *(void *)v105;
    sub_10052724C(v110, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v116 = v106;
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v66, v100, "%s: key is in cache, but new key has a different participant ID %llu than the old one %llu", (uint8_t *)v101, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_41;
  }
LABEL_47:
  __break(1u);
  return result;
}

uint64_t sub_10051A40C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v4 = v3 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1005271B8(v4, a1);
  os_unfair_lock_unlock(v5);
  return swift_release();
}

uint64_t sub_10051A4D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *(void *)(a1 + 8);
  if (*(void *)(v4 + 16) && (unint64_t v5 = sub_10045C7FC(a2), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(*(void *)(v4 + 56) + 8 * v5);
    swift_bridgeObjectRetain_n();
    uint64_t v8 = sub_100522460(v7);
    swift_bridgeObjectRelease();
    uint64_t v18 = v8;
    sub_1005223B8(&v18);
    swift_bridgeObjectRelease();
    uint64_t v9 = v18;
    uint64_t v10 = v18[2];
    if (v10)
    {
      uint64_t v11 = v10 - 1;
      uint64_t v12 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
      uint64_t v13 = *(void *)(v12 - 8);
      sub_1005271E4((uint64_t)v9+ ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))+ *(void *)(v13 + 72) * v11, a3, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a3, 0, 1, v12);
    }
    else
    {
      uint64_t v17 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a3, 1, 1, v17);
    }
    return swift_release();
  }
  else
  {
    uint64_t v14 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
    return v15(a3, 1, 1, v14);
  }
}

void sub_10051A6E0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100725D30();
  uint64_t v160 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  unint64_t v152 = (char *)v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_100431F80(&qword_100A47698);
  __chkstk_darwin(v156, v7);
  uint64_t v157 = (char *)v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A44D30);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v13 = (char *)v148 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v11, v14);
  uint64_t v159 = (uint64_t)v148 - v16;
  __chkstk_darwin(v15, v17);
  uint64_t v164 = (uint64_t)v148 - v18;
  uint64_t v19 = sub_100431F80(&qword_100A44A50);
  uint64_t v21 = __chkstk_darwin(v19 - 8, v20);
  uint64_t v155 = (uint64_t)v148 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v21, v23);
  uint64_t v154 = (uint64_t)v148 - v25;
  uint64_t v27 = __chkstk_darwin(v24, v26);
  uint64_t v165 = (uint64_t)v148 - v28;
  uint64_t v30 = __chkstk_darwin(v27, v29);
  uint64_t v166 = (uint64_t)v148 - v31;
  uint64_t v33 = __chkstk_darwin(v30, v32);
  uint64_t v168 = (uint64_t)v148 - v34;
  __chkstk_darwin(v33, v35);
  uint64_t v37 = (char *)v148 - v36;
  uint64_t v38 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v167 = *(void *)(v38 - 8);
  uint64_t v40 = __chkstk_darwin(v38, v39);
  uint64_t v163 = (uint64_t)v148 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v40, v42);
  uint64_t v162 = (uint64_t)v148 - v44;
  __chkstk_darwin(v43, v45);
  uint64_t v47 = (char *)v148 - v46;
  unint64_t v48 = (void *)(v1 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_l);
  uint64_t v170 = a1;
  sub_1005271E4(a1, (uint64_t)v148 - v46, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  unint64_t v169 = v48;
  char v49 = sub_100725EB0();
  os_log_type_t v50 = sub_1007266E0();
  BOOL v51 = os_log_type_enabled(v49, v50);
  uint64_t v158 = v4;
  id v153 = v13;
  uint64_t v171 = v38;
  if (v51)
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v161 = swift_slowAlloc();
    v174[0] = v161;
    *(_DWORD *)uint64_t v52 = 136315394;
    uint64_t v173 = (void *)sub_10043E578(0x2865766965636572, 0xED0000293A79656BLL, v174);
    sub_100726830();
    *(_WORD *)(v52 + 12) = 2080;
    sub_100528654(&qword_100A44D38, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v53 = sub_100726D00();
    uint64_t v173 = (void *)sub_10043E578(v53, v54, v174);
    sub_100726830();
    swift_bridgeObjectRelease();
    sub_10052724C((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s: %s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v55 = sub_10052724C((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  }
  uint64_t v57 = OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state;
  uint64_t v58 = *(void *)(v2 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  __chkstk_darwin(v55, v56);
  uint64_t v59 = v170;
  v148[-2] = v2;
  v148[-1] = v59;
  uint64_t v60 = (uint64_t *)(v58 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v58 + 16));
  uint64_t v61 = (os_unfair_lock_s *)(v58 + ((*(unsigned int *)(*(void *)v58 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v61);
  sub_1005272AC(v60, (char *)v174);
  os_unfair_lock_unlock(v61);
  int v62 = LOBYTE(v174[0]);
  uint64_t v63 = swift_release();
  if (v62 != 1)
  {
    uint64_t v161 = v57;
    uint64_t v68 = v59 + *(int *)(v171 + 52);
    if (*(unsigned char *)(v68 + 8))
    {
      uint64_t v69 = *(void *)(v2 + v161);
      __chkstk_darwin(v63, v64);
      v148[-2] = v59;
      uint64_t v70 = v69 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v69 + 16);
      uint64_t v71 = (os_unfair_lock_s *)(v69 + ((*(unsigned int *)(*(void *)v69 + 48) + 3) & 0x1FFFFFFFCLL));
      swift_retain();
      os_unfair_lock_lock(v71);
      sub_1005272D8(v70);
      os_unfair_lock_unlock(v71);
      uint64_t v72 = swift_release();
LABEL_43:
      (*(void (**)(uint64_t))(*(void *)v2 + 328))(v72);
      return;
    }
    v148[1] = v2 & 0xFFFFFFFFFFFFLL | 0x6AE1000000000000;
    uint64_t v73 = *(void *)v68;
    uint64_t v74 = (*(uint64_t (**)(void))(*(void *)v2 + 248))(*(void *)v68);
    uint64_t v75 = *(void *)(v2 + v161);
    __chkstk_darwin(v74, v76);
    v148[-2] = v73;
    unint64_t v77 = v75 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v75 + 16);
    uint64_t v78 = (os_unfair_lock_s *)(v75 + ((*(unsigned int *)(*(void *)v75 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v78);
    sub_100527304(v77, v174);
    os_unfair_lock_unlock(v78);
    uint64_t v79 = v174[0];
    swift_release();
    v174[0] = v79;
    uint64_t v80 = v163;
    sub_1005271E4(v59, v163, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v81 = v162;
    sub_10043F7EC(v162, v80);
    sub_10052724C(v81, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v82 = v174[0];
    swift_bridgeObjectRetain_n();
    uint64_t v83 = sub_100522460(v82);
    swift_bridgeObjectRelease();
    uint64_t v173 = v83;
    sub_1005223B8(&v173);
    swift_bridgeObjectRelease();
    int v84 = v173;
    swift_retain_n();
    os_log_type_t v85 = sub_100725EB0();
    os_log_type_t v86 = sub_1007266E0();
    BOOL v87 = os_log_type_enabled(v85, v86);
    uint64_t v151 = v2;
    uint64_t v149 = v37;
    uint64_t v150 = v73;
    uint64_t v170 = 0;
    if (v87)
    {
      uint64_t v88 = swift_slowAlloc();
      uint64_t v173 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v88 = 136315650;
      uint64_t v172 = sub_10043E578(0x2865766965636572, 0xED0000293A79656BLL, (uint64_t *)&v173);
      sub_100726830();
      *(_WORD *)(v88 + 12) = 2048;
      uint64_t v172 = v73;
      sub_100726830();
      *(_WORD *)(v88 + 22) = 2080;
      swift_retain();
      uint64_t v89 = sub_100726580();
      unint64_t v91 = v90;
      swift_release();
      uint64_t v172 = sub_10043E578(v89, v91, (uint64_t *)&v173);
      sub_100726830();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v85, v86, "%s: allKeys for participantID %llu: %s", (uint8_t *)v88, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    uint64_t v92 = v167;
    uint64_t v93 = v168;
    uint64_t v94 = v84[2];
    if (v94)
    {
      unint64_t v95 = (*(unsigned __int8 *)(v167 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v167 + 80);
      if (v94 == 1) {
        unint64_t v96 = 0;
      }
      else {
        unint64_t v96 = v94 - 2;
      }
      sub_1005271E4((uint64_t)v84 + v95 + *(void *)(v167 + 72) * (v94 - 1), v168, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      (*(void (**)(uint64_t, void, uint64_t))(v92 + 56))(v93, 0, 1);
      if ((v96 & 0x8000000000000000) == 0)
      {
LABEL_20:
        uint64_t v97 = (uint64_t)v84 + v95;
        uint64_t v98 = sub_100527370(v97, v96, (2 * v94) | 1);
        if (v84[2] < v96)
        {
          __break(1u);
          swift_release();
          __break(1u);
          return;
        }
        uint64_t v163 = v98;
        uint64_t v99 = (2 * v96) | 1;
        swift_retain_n();
        os_log_type_t v100 = sub_100725EB0();
        os_log_type_t v101 = sub_1007266E0();
        int v102 = v101;
        if (os_log_type_enabled(v100, v101))
        {
          uint64_t v103 = v84;
          uint64_t v104 = swift_slowAlloc();
          unint64_t v169 = (void *)swift_slowAlloc();
          uint64_t v173 = v169;
          *(_DWORD *)uint64_t v104 = 136315650;
          LODWORD(v162) = v102;
          uint64_t v172 = sub_10043E578(0x2865766965636572, 0xED0000293A79656BLL, (uint64_t *)&v173);
          sub_100726830();
          *(_WORD *)(v104 + 12) = 2048;
          uint64_t v172 = v150;
          sub_100726830();
          *(_WORD *)(v104 + 22) = 2080;
          swift_retain();
          uint64_t v105 = v99;
          uint64_t v106 = sub_100726880();
          uint64_t v107 = v97;
          unint64_t v109 = v108;
          swift_release();
          uint64_t v110 = v106;
          uint64_t v99 = v105;
          uint64_t v172 = sub_10043E578(v110, v109, (uint64_t *)&v173);
          uint64_t v93 = v168;
          sub_100726830();
          swift_release_n();
          uint64_t v97 = v107;
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v100, (os_log_type_t)v162, "%s: removedKeys for participantID %llu: %s", (uint8_t *)v104, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();

          uint64_t v103 = v84;
        }
        uint64_t v113 = (uint64_t)v149;
        uint64_t v114 = v165;
        uint64_t v115 = *(void *)(v151 + v161);
        __chkstk_darwin(v111, v112);
        uint64_t v116 = v163;
        v148[-6] = v117;
        v148[-5] = v116;
        unint64_t v169 = v103;
        v148[-4] = v103;
        v148[-3] = v97;
        v148[-2] = 0;
        v148[-1] = v99;
        uint64_t v118 = (uint64_t *)(v115 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v115 + 16));
        id v119 = (os_unfair_lock_s *)(v115 + ((*(unsigned int *)(*(void *)v115 + 48) + 3) & 0x1FFFFFFFCLL));
        swift_retain();
        os_unfair_lock_lock(v119);
        sub_100527510(v118);
        os_unfair_lock_unlock(v119);
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v120 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v167 + 48);
        uint64_t v121 = v171;
        LODWORD(v115) = v120(v113, 1, v171);
        uint64_t v122 = v166;
        sub_1004546B8(v113, v166, &qword_100A44A50);
        sub_1004546B8(v93, v114, &qword_100A44A50);
        if (v115 == 1)
        {
          uint64_t v123 = v93;
          sub_10044C150(v114, &qword_100A44A50);
          uint64_t v124 = sub_10044C150(v122, &qword_100A44A50);
          uint64_t v2 = v151;
        }
        else
        {
          uint64_t v125 = v154;
          sub_1004546B8(v122, v154, &qword_100A44A50);
          uint64_t v126 = v121;
          if (v120(v125, 1, v121) == 1)
          {
            sub_10044C150(v125, &qword_100A44A50);
            uint64_t v127 = v160;
            id v128 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v160 + 56);
            uint64_t v129 = v158;
            v128(v164, 1, 1, v158);
          }
          else
          {
            uint64_t v127 = v160;
            uint64_t v130 = v164;
            uint64_t v129 = v158;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v160 + 16))(v164, v125 + *(int *)(v121 + 20), v158);
            sub_10052724C(v125, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            id v128 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v127 + 56);
            v128(v130, 0, 1, v129);
          }
          uint64_t v2 = v151;
          uint64_t v131 = v159;
          uint64_t v132 = v155;
          sub_1004546B8(v114, v155, &qword_100A44A50);
          if (v120(v132, 1, v126) == 1)
          {
            sub_10044C150(v132, &qword_100A44A50);
            uint64_t v133 = 1;
          }
          else
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 16))(v131, v132 + *(int *)(v126 + 20), v129);
            sub_10052724C(v132, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            uint64_t v133 = 0;
          }
          uint64_t v134 = v164;
          uint64_t v136 = v156;
          uint64_t v135 = (uint64_t)v157;
          uint64_t v123 = v168;
          v128(v131, v133, 1, v129);
          uint64_t v137 = v135 + *(int *)(v136 + 48);
          sub_1004546B8(v134, v135, &qword_100A44D30);
          sub_1004546B8(v131, v137, &qword_100A44D30);
          id v138 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48);
          if (v138(v135, 1, v129) == 1)
          {
            sub_10044C150(v131, &qword_100A44D30);
            sub_10044C150(v134, &qword_100A44D30);
            sub_10044C150(v165, &qword_100A44A50);
            sub_10044C150(v166, &qword_100A44A50);
            int v139 = v138(v137, 1, v129);
            uint64_t v113 = (uint64_t)v149;
            if (v139 == 1)
            {
              sub_10044C150(v135, &qword_100A44D30);
              goto LABEL_41;
            }
          }
          else
          {
            uint64_t v140 = (uint64_t)v153;
            sub_1004546B8(v135, (uint64_t)v153, &qword_100A44D30);
            int v141 = v138(v137, 1, v129);
            uint64_t v113 = (uint64_t)v149;
            if (v141 != 1)
            {
              uint64_t v145 = v160;
              id v146 = v152;
              (*(void (**)(char *, uint64_t, uint64_t))(v160 + 32))(v152, v137, v129);
              sub_100528654(&qword_100A45458, (void (*)(uint64_t))&type metadata accessor for UUID);
              LODWORD(v171) = sub_100726410();
              Class v147 = *(void (**)(char *, uint64_t))(v145 + 8);
              v147(v146, v129);
              sub_10044C150(v159, &qword_100A44D30);
              sub_10044C150(v164, &qword_100A44D30);
              sub_10044C150(v165, &qword_100A44A50);
              sub_10044C150(v166, &qword_100A44A50);
              v147((char *)v140, v129);
              uint64_t v124 = sub_10044C150(v135, &qword_100A44D30);
              if (v171) {
                goto LABEL_41;
              }
              goto LABEL_38;
            }
            sub_10044C150(v159, &qword_100A44D30);
            sub_10044C150(v164, &qword_100A44D30);
            sub_10044C150(v165, &qword_100A44A50);
            sub_10044C150(v166, &qword_100A44A50);
            (*(void (**)(uint64_t, uint64_t))(v160 + 8))(v140, v129);
          }
          uint64_t v124 = sub_10044C150(v135, &qword_100A47698);
        }
LABEL_38:
        if ((*(uint64_t (**)(uint64_t))(*(void *)v2 + 128))(v124))
        {
          uint64_t v143 = v142;
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v143 + 16))(v2, v150, v113, v123, ObjectType, v143);
          swift_release();
          swift_unknownObjectRelease();
          sub_10044C150(v123, &qword_100A44A50);
LABEL_42:
          uint64_t v72 = sub_10044C150(v113, &qword_100A44A50);
          goto LABEL_43;
        }
LABEL_41:
        sub_10044C150(v123, &qword_100A44A50);
        swift_release();
        goto LABEL_42;
      }
      __break(1u);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 56))(v93, 1, 1);
    unint64_t v96 = 0;
    unint64_t v95 = (*(unsigned __int8 *)(v92 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v92 + 80);
    goto LABEL_20;
  }
  uint64_t v65 = sub_100725EB0();
  os_log_type_t v66 = sub_1007266E0();
  if (os_log_type_enabled(v65, v66))
  {
    os_log_type_t v67 = (uint8_t *)swift_slowAlloc();
    v174[0] = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v67 = 136315138;
    uint64_t v173 = (void *)sub_10043E578(0x2865766965636572, 0xED0000293A79656BLL, v174);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v65, v66, "%s: skipping because we already have the key", v67, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
}

uint64_t sub_10051BB90@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, char *a3@<X8>)
{
  uint64_t v6 = sub_100431F80(&qword_100A44A50);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100725D30();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v25 - v17;
  uint64_t result = sub_1005196D0(a1, a2);
  if (result)
  {
    char v20 = 1;
  }
  else
  {
    uint64_t v21 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
    uint64_t v22 = *(int *)(v21 + 20);
    uint64_t v25 = a1;
    uint64_t v26 = a3;
    uint64_t v23 = a2 + v22;
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    v24(v18, a2 + v22, v10);
    sub_1005271E4(a2, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v9, 0, 1, v21);
    sub_10051BDC8((uint64_t)v9, (uint64_t)v18);
    v24(v15, v23, v10);
    a3 = v26;
    sub_1005213A4((uint64_t)v18, v15);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v18, v10);
    char v20 = 0;
  }
  *a3 = v20;
  return result;
}

uint64_t sub_10051BDC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100431F80(&qword_100A44A50);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10044C150(a1, &qword_100A44A50);
    sub_1005244D0(a2, (uint64_t)v9);
    uint64_t v15 = sub_100725D30();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a2, v15);
    return sub_10044C150((uint64_t)v9, &qword_100A44A50);
  }
  else
  {
    sub_100527E58(a1, (uint64_t)v13);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_100525178((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v20;
    swift_bridgeObjectRelease();
    uint64_t v18 = sub_100725D30();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a2, v18);
  }
}

uint64_t sub_10051BFD4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  os_log_type_t v50 = (void *)a2;
  unint64_t v51 = a7;
  uint64_t v12 = sub_100431F80(&qword_100A44D30);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100431F80(&qword_100A44A50);
  uint64_t v18 = __chkstk_darwin(v16 - 8, v17);
  uint64_t v20 = (char *)v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  uint64_t v52 = (uint64_t)v46 - v22;
  uint64_t v53 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v23 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v24);
  uint64_t v26 = (char *)v46 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v54 = a1[1];
  a1[1] = 0x8000000000000000;
  sub_100525360(a3, (uint64_t)v50, isUniquelyReferenced_nonNull_native);
  a1[1] = v54;
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v29 = v51 >> 1;
  if (v51 >> 1 != a6)
  {
    uint64_t v30 = a5;
    uint64_t v31 = v29 - a6;
    if (v29 <= a6)
    {
      __break(1u);
    }
    else
    {
      os_log_type_t v50 = a1 + 4;
      unint64_t v51 = (unint64_t)(a1 + 2);
      char v49 = a1 + 3;
      uint64_t v32 = *(void *)(v23 + 72);
      uint64_t v47 = a1;
      unint64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
      v46[1] = a4;
      swift_unknownObjectRetain();
      uint64_t v33 = v30 + v32 * a6;
      uint64_t v34 = v53;
      do
      {
        sub_1005271E4(v33, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v36 = v52;
        sub_10047DA64(v52);
        sub_10044C150(v36, &qword_100A44A50);
        uint64_t v37 = (uint64_t)&v26[*(int *)(v34 + 20)];
        sub_100525A48(v37, (uint64_t)v15);
        sub_10044C150((uint64_t)v15, &qword_100A44D30);
        sub_100525A48(v37, (uint64_t)v15);
        sub_10044C150((uint64_t)v15, &qword_100A44D30);
        uint64_t v38 = v47;
        swift_bridgeObjectRetain();
        unint64_t v39 = sub_10045C63C(v37);
        LOBYTE(v36) = v40;
        swift_bridgeObjectRelease();
        if (v36)
        {
          int v41 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v42 = *v38;
          uint64_t v54 = *v38;
          *uint64_t v38 = 0x8000000000000000;
          if (!v41)
          {
            sub_100525578();
            uint64_t v42 = v54;
          }
          uint64_t v43 = *(void *)(v42 + 48);
          uint64_t v44 = sub_100725D30();
          (*(void (**)(unint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43 + *(void *)(*(void *)(v44 - 8) + 72) * v39, v44);
          uint64_t v45 = v54;
          sub_100527E58(*(void *)(v54 + 56) + v39 * v32, (uint64_t)v20);
          sub_100524E30(v39, v45);
          *uint64_t v38 = v45;
          swift_bridgeObjectRelease();
          uint64_t v35 = 0;
        }
        else
        {
          uint64_t v35 = 1;
        }
        uint64_t v34 = v53;
        (*v48)(v20, v35, 1, v53);
        sub_10044C150((uint64_t)v20, &qword_100A44A50);
        sub_10052724C((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        v33 += v32;
        --v31;
      }
      while (v31);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_10051C3D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v12 - v9;
  sub_1005271E4(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  sub_10043F7EC((uint64_t)v10, (uint64_t)v7);
  return sub_10052724C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
}

uint64_t sub_10051C4B4(uint64_t a1)
{
  uint64_t v3 = sub_100725D30();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a1, v3);
  uint64_t v8 = sub_100725EB0();
  os_log_type_t v9 = sub_1007266E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v22 = a1;
    uint64_t v11 = v10;
    uint64_t v21 = swift_slowAlloc();
    v24[0] = v21;
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v23 = sub_10043E578(0xD000000000000016, 0x80000001008C5480, v24);
    sub_100726830();
    *(_WORD *)(v11 + 12) = 2080;
    sub_100528654(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = sub_100726D00();
    uint64_t v23 = sub_10043E578(v12, v13, v24);
    sub_100726830();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: %s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v22;
    swift_slowDealloc();
  }
  else
  {

    uint64_t v14 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  uint64_t v16 = *(void *)(v1 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  __chkstk_darwin(v14, v15);
  *(&v20 - 2) = a1;
  uint64_t v17 = v16 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v16 + 16);
  uint64_t v18 = (os_unfair_lock_s *)(v16 + ((*(unsigned int *)(*(void *)v16 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v18);
  sub_100527544(v17);
  os_unfair_lock_unlock(v18);
  return swift_release();
}

uint64_t sub_10051C808(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100725D30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v13 - v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v8, a2, v3);
  sub_1005213A4((uint64_t)v11, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v11, v3);
}

uint64_t sub_10051C920()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v2 = v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_100527570(v2, &v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  swift_release();
  return v4;
}

uint64_t sub_10051C9E4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_10043E578(0xD000000000000017, 0x80000001008C4300, &v9);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v6 = v5 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v5 + 16);
  uint64_t v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(void *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_10051CBB0(v6);
  os_unfair_lock_unlock(v7);
  return swift_release();
}

uint64_t sub_10051CBB0(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = &_swiftEmptySetSingleton;
  return result;
}

uint64_t sub_10051CBEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_10043E578(0xD000000000000017, 0x80000001008C54A0, &v9);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v6 = v5 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v5 + 16);
  uint64_t v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(void *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_10051CDB8(v6);
  os_unfair_lock_unlock(v7);
  return swift_release();
}

uint64_t sub_10051CDB8(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = &_swiftEmptySetSingleton;
  return result;
}

uint64_t sub_10051CDF4(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_100725EB0();
  os_log_type_t v5 = sub_1007266E0();
  uint64_t v6 = &unk_100A52000;
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t type = v5;
    uint64_t v7 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    sub_10043E578(0xD000000000000017, 0x80000001008C0670, &v32);
    sub_100726830();
    *(_WORD *)(v7 + 12) = 2080;
    type metadata accessor for IDSGroupEncryptionControllerMember();
    sub_100528654((unint64_t *)&qword_100A44A78, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerMember);
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_100726650();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_10043E578(v8, v10, &v32);
    sub_100726830();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v7 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100726650();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_10043E578(v11, v13, &v32);
    uint64_t v6 = (void *)&unk_100A52000;
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, type, "%s: previous members: %s; new members: %s",
      (uint8_t *)v7,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }

  uint64_t v14 = (void (**)(void))(*v2 + 296);
  uint64_t v15 = *v14;
  (*v14)();
  uint64_t v16 = v6[55];
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_1004DD5F0(v17, a1);
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  swift_bridgeObjectRelease();
  if (sub_1004DD2F4((uint64_t)v18, v20, v22, v24))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_bridgeObjectRelease();
    ((void (*)(uint64_t))v15)(v25);
  }
  else
  {
    BOOL v26 = sub_1004DD330((uint64_t)v18, v20, v22);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v27 = swift_bridgeObjectRelease();
    if (v26)
    {
      uint64_t v28 = *(void *)((char *)v2 + v16);
      if ((v28 & 0xC000000000000001) != 0)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_100726920();
        uint64_t v27 = swift_bridgeObjectRelease();
        if (v29 < 1) {
          goto LABEL_13;
        }
      }
      else if (*(uint64_t *)(v28 + 16) < 1)
      {
        goto LABEL_13;
      }
      ((void (*)(uint64_t))v15)(v27);
      if (*((unsigned char *)v2 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_isRatchetEnabled) == 1) {
        sub_10051D224();
      }
    }
  }
LABEL_13:
  *(void *)((char *)v2 + v16) = a1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

void sub_10051D224()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(uint64_t (**)(void))(*(void *)v0 + 128);
  if (v2()
    && (uint64_t v4 = v3,
        uint64_t v5 = swift_getObjectType(),
        LOBYTE(v4) = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v5, v4),
        swift_unknownObjectRelease(),
        (v4 & 1) != 0))
  {
    uint64_t v6 = OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state;
    uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
    uint64_t v8 = v7 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v7 + 16);
    unint64_t v9 = (os_unfair_lock_s *)(v7 + ((*(unsigned int *)(*(void *)v7 + 48) + 3) & 0x1FFFFFFFCLL));
    swift_retain();
    os_unfair_lock_lock(v9);
    sub_10051D714(v8, (char *)&v26);
    os_unfair_lock_unlock(v9);
    LOBYTE(v9) = v26;
    swift_release();
    oslog = sub_100725EB0();
    os_log_type_t v10 = sub_1007266E0();
    BOOL v11 = os_log_type_enabled(oslog, v10);
    if (v9)
    {
      if (v11)
      {
        unint64_t v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)unint64_t v12 = 136315138;
        sub_10043E578(0x4B74656863746172, 0xED00002928737965, &v26);
        sub_100726830();
        _os_log_impl((void *)&_mh_execute_header, oslog, v10, "%s: ratchet (rolling)", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t v13 = *(void *)(v1 + v6);
      uint64_t v14 = v13 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v13 + 16);
      uint64_t v15 = (os_unfair_lock_s *)(v13 + ((*(unsigned int *)(*(void *)v13 + 48) + 3) & 0x1FFFFFFFCLL));
      swift_retain();
      os_unfair_lock_lock(v15);
      sub_1005287F4(v14);
      os_unfair_lock_unlock(v15);
      uint64_t v16 = swift_release();
      if (((uint64_t (*)(uint64_t))v2)(v16))
      {
        uint64_t v18 = v17;
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v1, ObjectType, v18);
        swift_unknownObjectRelease();
      }
      return;
    }
    if (v11)
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      sub_10043E578(0x4B74656863746172, 0xED00002928737965, &v26);
      sub_100726830();
      os_log_type_t v24 = v10;
      uint64_t v22 = "%s: ratchet canceled because we just ratcheted recently";
      uint64_t v23 = oslog;
      goto LABEL_10;
    }
  }
  else
  {
    oslog = sub_100725EB0();
    os_log_type_t v20 = sub_1007266E0();
    if (os_log_type_enabled(oslog, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      sub_10043E578(0x4B74656863746172, 0xED00002928737965, &v26);
      sub_100726830();
      uint64_t v22 = "%s: not ratcheting because we are not active in the session";
      uint64_t v23 = oslog;
      os_log_type_t v24 = v20;
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v23, v24, v22, v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
}

double *sub_10051D714@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_100725CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100725C80();
  uint64_t v9 = a1 + *(int *)(type metadata accessor for IDSGroupEncryptionKeyMaterialCache2.KMCacheState(0) + 36);
  sub_100725BC0();
  double v11 = v10;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  uint64_t result = (double *)sub_100431E3C();
  if (v11 <= *result)
  {
    char v13 = 0;
  }
  else
  {
    sub_100725C80();
    uint64_t result = (double *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v8, v4);
    char v13 = 1;
  }
  *a2 = v13;
  return result;
}

uint64_t sub_10051D858(uint64_t a1, void (**a2)(uint64_t, char *, uint64_t))
{
  unint64_t v214 = a2;
  uint64_t v3 = sub_100725D30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v216 = (char *)&v178 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v180 = (char *)&v178 - v10;
  __chkstk_darwin(v9, v11);
  uint64_t v202 = (uint64_t)&v178 - v12;
  uint64_t v13 = sub_100431F80(&qword_100A44A50);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  unint64_t v185 = (char *)&v178 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  unint64_t v186 = (char *)&v178 - v19;
  __chkstk_darwin(v18, v20);
  uint64_t v206 = (char *)&v178 - v21;
  uint64_t v22 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v215 = (uint64_t)&v178 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v208 = (uint64_t)&v178 - v29;
  uint64_t v31 = __chkstk_darwin(v28, v30);
  uint64_t v179 = (uint64_t)&v178 - v32;
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v178 = (uint64_t)&v178 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v181 = (uint64_t)&v178 - v38;
  uint64_t v40 = __chkstk_darwin(v37, v39);
  uint64_t v184 = (uint64_t)&v178 - v41;
  uint64_t v43 = __chkstk_darwin(v40, v42);
  uint64_t v201 = (uint64_t)&v178 - v44;
  uint64_t v46 = __chkstk_darwin(v43, v45);
  uint64_t v200 = (uint64_t)&v178 - v47;
  uint64_t v49 = __chkstk_darwin(v46, v48);
  uint64_t v199 = (char *)&v178 - v50;
  uint64_t v52 = __chkstk_darwin(v49, v51);
  uint64_t v191 = (void **)((char *)&v178 - v53);
  uint64_t v55 = __chkstk_darwin(v52, v54);
  uint64_t v196 = (uint64_t)&v178 - v56;
  uint64_t v58 = __chkstk_darwin(v55, v57);
  uint64_t v60 = (char *)&v178 - v59;
  __chkstk_darwin(v58, v61);
  uint64_t v197 = (uint64_t)&v178 - v62;
  uint64_t v63 = (void *)sub_100517C14((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v193 = (void *)sub_100527028(_swiftEmptyArrayStorage);
  uint64_t v220 = &_swiftEmptySetSingleton;
  uint64_t v187 = (void *)a1;
  uint64_t v64 = *(void *)(a1 + 16);
  uint64_t v65 = *(void *)(v64 + 56);
  uint64_t v194 = v64 + 56;
  uint64_t v66 = 1 << *(unsigned char *)(v64 + 32);
  uint64_t v67 = -1;
  if (v66 < 64) {
    uint64_t v67 = ~(-1 << v66);
  }
  unint64_t v68 = v67 & v65;
  unint64_t v203 = (char *)v214 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_l;
  int64_t v195 = (unint64_t)(v66 + 63) >> 6;
  uint64_t v212 = v23;
  uint64_t v204 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
  uint64_t v189 = (uint64_t *)&v219;
  unint64_t v214 = (void (**)(uint64_t, char *, uint64_t))(v4 + 16);
  uint64_t v205 = v4;
  unint64_t v211 = (void (**)(uint64_t, uint64_t))(v4 + 8);
  uint64_t v198 = v64;
  swift_bridgeObjectRetain();
  int64_t v69 = 0;
  *(void *)&long long v70 = 136315394;
  long long v192 = v70;
  unint64_t v183 = (char *)&type metadata for Any + 8;
  uint64_t v209 = v3;
  uint64_t v213 = v22;
  int v190 = v60;
  while (1)
  {
    if (v68)
    {
      v210 = (void *)((v68 - 1) & v68);
      unint64_t v76 = __clz(__rbit64(v68)) | (v69 << 6);
      unint64_t v77 = v206;
      uint64_t v78 = (uint64_t)v199;
      goto LABEL_23;
    }
    int64_t v79 = v69 + 1;
    unint64_t v77 = v206;
    uint64_t v78 = (uint64_t)v199;
    if (__OFADD__(v69, 1)) {
      goto LABEL_107;
    }
    if (v79 >= v195) {
      goto LABEL_31;
    }
    unint64_t v80 = *(void *)(v194 + 8 * v79);
    ++v69;
    if (!v80)
    {
      int64_t v69 = v79 + 1;
      if (v79 + 1 >= v195) {
        goto LABEL_31;
      }
      unint64_t v80 = *(void *)(v194 + 8 * v69);
      if (!v80)
      {
        int64_t v69 = v79 + 2;
        if (v79 + 2 >= v195) {
          goto LABEL_31;
        }
        unint64_t v80 = *(void *)(v194 + 8 * v69);
        if (!v80) {
          break;
        }
      }
    }
LABEL_22:
    v210 = (void *)((v80 - 1) & v80);
    unint64_t v76 = __clz(__rbit64(v80)) + (v69 << 6);
LABEL_23:
    uint64_t v82 = v197;
    sub_1005271E4(*(void *)(v198 + 48) + *(void *)(v212 + 72) * v76, v197, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_100527E58(v82, (uint64_t)v60);
    int v83 = *(_DWORD *)&v60[*(int *)(v22 + 40)];
    if (v83 == -1) {
      goto LABEL_106;
    }
    int64_t v207 = v69;
    sub_100484138(v83 + 1, v77);
    if ((*v204)((uint64_t)v77, 1, v22) == 1)
    {
      sub_10044C150((uint64_t)v77, &qword_100A44A50);
      uint64_t v84 = (uint64_t)v191;
      sub_1005271E4((uint64_t)v60, (uint64_t)v191, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      os_log_type_t v85 = sub_100725EB0();
      os_log_type_t v86 = sub_1007266E0();
      if (os_log_type_enabled(v85, v86))
      {
        uint64_t v87 = swift_slowAlloc();
        uint64_t v188 = swift_slowAlloc();
        uint64_t v219 = (void *)v188;
        *(_DWORD *)uint64_t v87 = v192;
        uint64_t v218 = (void *)sub_10043E578(0x4B74656863746172, 0xED00002928737965, (uint64_t *)&v219);
        sub_100726830();
        *(_WORD *)(v87 + 12) = 2080;
        sub_100528654(&qword_100A44D38, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v88 = sub_100726D00();
        uint64_t v218 = (void *)sub_10043E578(v88, v89, (uint64_t *)&v219);
        uint64_t v3 = v209;
        sub_100726830();
        swift_bridgeObjectRelease();
        sub_10052724C(v84, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        _os_log_impl((void *)&_mh_execute_header, v85, v86, "%s: ratchet failed for keyWithoutParticipantID: %s", (uint8_t *)v87, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v22 = v213;
        swift_slowDealloc();
      }
      else
      {

        sub_10052724C(v84, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      }
      uint64_t v71 = v202;
      (*v214)(v202, &v60[*(int *)(v22 + 20)], v3);
      uint64_t v72 = v200;
      sub_1005271E4((uint64_t)v60, v200, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v219 = v63;
      sub_100525178(v72, v71, isUniquelyReferenced_nonNull_native);
      uint64_t v63 = v219;
      swift_bridgeObjectRelease();
      (*v211)(v71, v3);
      uint64_t v74 = v201;
      sub_1005271E4((uint64_t)v60, v201, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10043F7EC(v72, v74);
      uint64_t v75 = v72;
    }
    else
    {
      uint64_t v90 = (uint64_t)v77;
      uint64_t v91 = v196;
      sub_100527E58(v90, v196);
      sub_1005271E4(v91, v78, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v92 = sub_100725EB0();
      os_log_type_t v93 = sub_1007266E0();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = swift_slowAlloc();
        uint64_t v219 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v94 = v192;
        uint64_t v218 = (void *)sub_10043E578(0x4B74656863746172, 0xED00002928737965, (uint64_t *)&v219);
        sub_100726830();
        *(_WORD *)(v94 + 12) = 2080;
        sub_100528654(&qword_100A44D38, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v95 = sub_100726D00();
        uint64_t v218 = (void *)sub_10043E578(v95, v96, (uint64_t *)&v219);
        uint64_t v3 = v209;
        sub_100726830();
        swift_bridgeObjectRelease();
        sub_10052724C(v78, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        _os_log_impl((void *)&_mh_execute_header, v92, v93, "%s: ratchet to new remote keyWithoutParticipantID: %s", (uint8_t *)v94, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v22 = v213;
        swift_slowDealloc();
      }
      else
      {

        sub_10052724C(v78, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      }
      uint64_t v97 = v196;
      uint64_t v98 = v202;
      (*v214)(v202, (char *)(v196 + *(int *)(v22 + 20)), v3);
      uint64_t v99 = v200;
      sub_1005271E4(v97, v200, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      char v100 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v219 = v63;
      sub_100525178(v99, v98, v100);
      uint64_t v63 = v219;
      swift_bridgeObjectRelease();
      (*v211)(v98, v3);
      uint64_t v101 = v201;
      sub_1005271E4(v97, v201, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10043F7EC(v99, v101);
      sub_10052724C(v99, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v75 = v97;
      uint64_t v60 = v190;
    }
    sub_10052724C(v75, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_10052724C((uint64_t)v60, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    int64_t v69 = v207;
    unint64_t v68 = (unint64_t)v210;
  }
  int64_t v81 = v79 + 3;
  if (v81 >= v195) {
    goto LABEL_31;
  }
  unint64_t v80 = *(void *)(v194 + 8 * v81);
  if (v80)
  {
    int64_t v69 = v81;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v69 = v81 + 1;
    if (__OFADD__(v81, 1)) {
      goto LABEL_110;
    }
    if (v69 >= v195) {
      break;
    }
    unint64_t v80 = *(void *)(v194 + 8 * v69);
    ++v81;
    if (v80) {
      goto LABEL_22;
    }
  }
LABEL_31:
  swift_release();
  uint64_t v102 = v187[1];
  uint64_t v103 = *(void *)(v102 + 64);
  uint64_t v194 = v102 + 64;
  uint64_t v104 = 1 << *(unsigned char *)(v102 + 32);
  if (v104 < 64) {
    uint64_t v105 = ~(-1 << v104);
  }
  else {
    uint64_t v105 = -1;
  }
  unint64_t v106 = v105 & v103;
  int64_t v195 = (unint64_t)(v104 + 63) >> 6;
  uint64_t v191 = &v218;
  int v190 = (char *)(v187 + 4);
  uint64_t v196 = v102;
  swift_bridgeObjectRetain();
  uint64_t v107 = 0;
  uint64_t v189 = (uint64_t *)((char *)&type metadata for Any + 8);
  while (2)
  {
    uint64_t v111 = (uint64_t)v186;
    if (v106)
    {
      uint64_t v198 = (v106 - 1) & v106;
      uint64_t v199 = v107;
      unint64_t v112 = __clz(__rbit64(v106)) | ((void)v107 << 6);
      goto LABEL_49;
    }
    BOOL v113 = __OFADD__(v107, 1);
    int64_t v114 = (int64_t)(v107 + 1);
    if (v113) {
      goto LABEL_109;
    }
    if (v114 >= v195) {
      goto LABEL_102;
    }
    unint64_t v115 = *(void *)(v194 + 8 * v114);
    if (!v115)
    {
      int64_t v116 = v114 + 1;
      if (v114 + 1 < v195)
      {
        unint64_t v115 = *(void *)(v194 + 8 * v116);
        if (v115) {
          goto LABEL_47;
        }
        int64_t v116 = v114 + 2;
        if (v114 + 2 < v195)
        {
          unint64_t v115 = *(void *)(v194 + 8 * v116);
          if (v115) {
            goto LABEL_47;
          }
          int64_t v116 = v114 + 3;
          if (v114 + 3 < v195)
          {
            unint64_t v115 = *(void *)(v194 + 8 * v116);
            if (v115)
            {
LABEL_47:
              int64_t v114 = v116;
              goto LABEL_48;
            }
            while (1)
            {
              int64_t v114 = v116 + 1;
              if (__OFADD__(v116, 1)) {
                goto LABEL_111;
              }
              if (v114 >= v195) {
                break;
              }
              unint64_t v115 = *(void *)(v194 + 8 * v114);
              ++v116;
              if (v115) {
                goto LABEL_48;
              }
            }
          }
        }
      }
LABEL_102:
      swift_release();
      os_log_t v175 = v187;
      swift_bridgeObjectRelease();
      *os_log_t v175 = v63;
      uint64_t v176 = v220;
      swift_bridgeObjectRelease();
      v175[2] = v176;
      uint64_t result = swift_bridgeObjectRelease();
      v175[1] = v193;
      return result;
    }
LABEL_48:
    uint64_t v198 = (v115 - 1) & v115;
    uint64_t v199 = (char *)v114;
    unint64_t v112 = __clz(__rbit64(v115)) + (v114 << 6);
LABEL_49:
    uint64_t v117 = 8 * v112;
    uint64_t v118 = *(void *)(*(void *)(v196 + 48) + v117);
    uint64_t v219 = *(void **)(*(void *)(v196 + 56) + v117);
    swift_bridgeObjectRetain();
    uint64_t v197 = v118;
    sub_10051A4D4((uint64_t)v187, v118, v111);
    id v119 = *v204;
    if ((*v204)(v111, 1, v22) == 1)
    {
      sub_10044C150(v111, &qword_100A44A50);
      goto LABEL_65;
    }
    uint64_t v120 = v184;
    sub_100527E58(v111, v184);
    int v121 = *(_DWORD *)(v120 + *(int *)(v22 + 40));
    if (v121 == -1) {
      goto LABEL_108;
    }
    uint64_t v122 = v185;
    sub_100484138(v121 + 1, v185);
    if (v119((uint64_t)v122, 1, v22) == 1)
    {
      sub_10044C150((uint64_t)v185, &qword_100A44A50);
      uint64_t v123 = v178;
      sub_1005271E4(v120, v178, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v124 = sub_100725EB0();
      os_log_type_t v125 = sub_1007266E0();
      if (os_log_type_enabled(v124, v125))
      {
        uint64_t v126 = swift_slowAlloc();
        v210 = (void *)swift_slowAlloc();
        uint64_t v218 = v210;
        *(_DWORD *)uint64_t v126 = v192;
        uint64_t v217 = sub_10043E578(0x4B74656863746172, 0xED00002928737965, (uint64_t *)&v218);
        sub_100726830();
        *(_WORD *)(v126 + 12) = 2080;
        sub_100528654(&qword_100A44D38, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v127 = v213;
        uint64_t v128 = sub_100726D00();
        uint64_t v217 = sub_10043E578(v128, v129, (uint64_t *)&v218);
        uint64_t v3 = v209;
        sub_100726830();
        swift_bridgeObjectRelease();
        sub_10052724C(v123, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        _os_log_impl((void *)&_mh_execute_header, v124, v125, "%s: cannot ratchet for key: %s", (uint8_t *)v126, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v22 = v127;
        uint64_t v130 = v184;
        goto LABEL_64;
      }
      sub_10052724C(v123, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);

      sub_10052724C(v120, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v22 = v213;
    }
    else
    {
      uint64_t v131 = v181;
      sub_100527E58((uint64_t)v185, v181);
      uint64_t v132 = v179;
      sub_1005271E4(v131, v179, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v133 = sub_100725EB0();
      os_log_type_t v134 = sub_1007266E0();
      if (os_log_type_enabled(v133, v134))
      {
        uint64_t v135 = swift_slowAlloc();
        uint64_t v218 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v135 = v192;
        uint64_t v217 = sub_10043E578(0x4B74656863746172, 0xED00002928737965, (uint64_t *)&v218);
        sub_100726830();
        *(_WORD *)(v135 + 12) = 2080;
        sub_100528654(&qword_100A44D38, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v136 = sub_100726D00();
        uint64_t v217 = sub_10043E578(v136, v137, (uint64_t *)&v218);
        uint64_t v3 = v209;
        sub_100726830();
        swift_bridgeObjectRelease();
        sub_10052724C(v132, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        _os_log_impl((void *)&_mh_execute_header, v133, v134, "%s: ratchet to new remote key: %s", (uint8_t *)v135, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_10052724C(v132, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      }
      uint64_t v138 = v181;
      uint64_t v139 = v201;
      sub_1005271E4(v181, v201, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v140 = v200;
      sub_10043F7EC(v200, v139);
      sub_10052724C(v140, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v141 = (uint64_t)v219;
      swift_bridgeObjectRetain_n();
      uint64_t v142 = sub_100522460(v141);
      swift_bridgeObjectRelease();
      uint64_t v218 = v142;
      uint64_t v143 = v182;
      sub_1005223B8(&v218);
      uint64_t v182 = v143;
      uint64_t v144 = v184;
      if (v143) {
        goto LABEL_113;
      }
      swift_bridgeObjectRelease_n();
      unint64_t v145 = v218[2];
      if (v145 >= 2) {
        uint64_t v146 = v145 - 2;
      }
      else {
        uint64_t v146 = 0;
      }
      uint64_t v147 = sub_100527370((uint64_t)v218+ ((*(unsigned __int8 *)(v212 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v212 + 80)), v146, (2 * v145) | 1);
      swift_release();
      uint64_t v219 = (void *)v147;
      uint64_t v22 = v213;
      unint64_t v148 = v180;
      (*v214)((uint64_t)v180, (char *)(v138 + *(int *)(v213 + 20)), v3);
      uint64_t v149 = v202;
      sub_1005213A4(v202, v148);
      (*v211)(v149, v3);
      sub_10052724C(v138, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v130 = v144;
LABEL_64:
      sub_10052724C(v130, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    }
LABEL_65:
    uint64_t v150 = v219[7];
    uint64_t v206 = (char *)(v219 + 7);
    uint64_t v151 = 1 << *((unsigned char *)v219 + 32);
    if (v151 < 64) {
      uint64_t v152 = ~(-1 << v151);
    }
    else {
      uint64_t v152 = -1;
    }
    unint64_t v153 = v152 & v150;
    int64_t v207 = (unint64_t)(v151 + 63) >> 6;
    v210 = v219;
    swift_bridgeObjectRetain();
    int64_t v154 = 0;
LABEL_71:
    if (v153)
    {
      unint64_t v155 = __clz(__rbit64(v153));
      v153 &= v153 - 1;
      unint64_t v156 = v155 | (v154 << 6);
    }
    else
    {
      BOOL v113 = __OFADD__(v154++, 1);
      if (v113) {
        goto LABEL_104;
      }
      if (v154 >= v207)
      {
LABEL_35:
        swift_release();
        uint64_t v108 = (uint64_t)v219;
        unint64_t v109 = v193;
        char v110 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v218 = v109;
        sub_100525360(v108, v197, v110);
        uint64_t v193 = v218;
        swift_bridgeObjectRelease();
        uint64_t v107 = v199;
        unint64_t v106 = v198;
        continue;
      }
      unint64_t v157 = *(void *)&v206[8 * v154];
      if (!v157)
      {
        int64_t v158 = v154 + 1;
        if (v154 + 1 >= v207) {
          goto LABEL_35;
        }
        unint64_t v157 = *(void *)&v206[8 * v158];
        if (!v157)
        {
          int64_t v158 = v154 + 2;
          if (v154 + 2 >= v207) {
            goto LABEL_35;
          }
          unint64_t v157 = *(void *)&v206[8 * v158];
          if (!v157)
          {
            int64_t v158 = v154 + 3;
            if (v154 + 3 >= v207) {
              goto LABEL_35;
            }
            unint64_t v157 = *(void *)&v206[8 * v158];
            if (!v157)
            {
              while (1)
              {
                int64_t v154 = v158 + 1;
                if (__OFADD__(v158, 1)) {
                  goto LABEL_105;
                }
                if (v154 >= v207) {
                  goto LABEL_35;
                }
                unint64_t v157 = *(void *)&v206[8 * v154];
                ++v158;
                if (v157) {
                  goto LABEL_83;
                }
              }
            }
          }
        }
        int64_t v154 = v158;
      }
LABEL_83:
      unint64_t v153 = (v157 - 1) & v157;
      unint64_t v156 = __clz(__rbit64(v157)) + (v154 << 6);
    }
    break;
  }
  uint64_t v159 = *(void *)(v212 + 72);
  uint64_t v160 = v208;
  sub_1005271E4(v210[6] + v159 * v156, v208, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t v161 = v160 + *(int *)(v22 + 20);
  uint64_t v162 = *v214;
  uint64_t v163 = (uint64_t)v216;
  (*v214)((uint64_t)v216, (char *)v161, v3);
  sub_100527E58(v160, v215);
  int v164 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v218 = v63;
  unint64_t v166 = sub_10045C63C(v163);
  uint64_t v167 = v63[2];
  BOOL v168 = (v165 & 1) == 0;
  uint64_t v169 = v167 + v168;
  if (__OFADD__(v167, v168))
  {
    __break(1u);
    goto LABEL_102;
  }
  char v170 = v165;
  if (v63[3] >= v169)
  {
    if ((v164 & 1) == 0) {
      sub_100525578();
    }
  }
  else
  {
    sub_100524688(v169, v164);
    unint64_t v171 = sub_10045C63C((uint64_t)v216);
    if ((v170 & 1) != (v172 & 1)) {
      goto LABEL_112;
    }
    unint64_t v166 = v171;
  }
  uint64_t v3 = v209;
  uint64_t v63 = v218;
  if (v170)
  {
    sub_100527DF4(v215, v218[7] + v166 * v159);
LABEL_70:
    swift_bridgeObjectRelease();
    (*v211)((uint64_t)v216, v3);
    uint64_t v22 = v213;
    goto LABEL_71;
  }
  v218[(v166 >> 6) + 8] |= 1 << v166;
  v162(v63[6] + *(void *)(v205 + 72) * v166, v216, v3);
  sub_100527E58(v215, v63[7] + v166 * v159);
  uint64_t v173 = v63[2];
  BOOL v113 = __OFADD__(v173, 1);
  uint64_t v174 = v173 + 1;
  if (!v113)
  {
    v63[2] = v174;
    uint64_t v63 = v218;
    goto LABEL_70;
  }
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  sub_100726D40();
  __break(1u);
LABEL_113:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10051F08C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v2 = (uint64_t *)(v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v3);
  sub_1005275B0(v2, &v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  swift_release();
  return v4;
}

uint64_t sub_10051F148@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_100431F80(&qword_100A44A50);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v80 = (uint64_t)v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100725D30();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v67 = *(void *)(v81 - 8);
  uint64_t v15 = __chkstk_darwin(v81, v14);
  uint64_t v70 = (uint64_t)v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v69 = (uint64_t)v65 - v19;
  __chkstk_darwin(v18, v20);
  uint64_t v68 = (uint64_t)v65 - v21;
  uint64_t v22 = sub_100431F80(&qword_100A44D30);
  __chkstk_darwin(v22 - 8, v23);
  uint64_t v72 = (char *)v65 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = a1;
  uint64_t v25 = swift_bridgeObjectRetain();
  uint64_t v26 = sub_1005225B4(v25);
  swift_bridgeObjectRelease();
  os_log_type_t v86 = v26;
  uint64_t result = sub_100526044();
  uint64_t v28 = v86;
  os_log_type_t v86 = &_swiftEmptySetSingleton;
  if (v28[2] >= *(void *)(*(void *)(a2 + 16)
                           + OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_numberOfCachedMKMsToBroadcast))
    uint64_t v29 = *(void *)(*(void *)(a2 + 16)
                    + OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_numberOfCachedMKMsToBroadcast);
  else {
    uint64_t v29 = v28[2];
  }
  if (v29 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v30 = (char *)v28 + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
    swift_retain_n();
    uint64_t v31 = sub_100725EB0();
    os_log_type_t v32 = sub_1007266E0();
    BOOL v33 = os_log_type_enabled(v31, v32);
    uint64_t v71 = v9;
    uint64_t v66 = a3;
    int v83 = v13;
    if (v33)
    {
      uint64_t v79 = (2 * v29) | 1;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v78 = (unsigned int (**)(void, void, void))swift_slowAlloc();
      os_log_type_t v85 = v78;
      *(_DWORD *)uint64_t v34 = 136315650;
      uint64_t v84 = sub_10043E578(0xD000000000000024, 0x80000001008C42B0, (uint64_t *)&v85);
      sub_100726830();
      *(_WORD *)(v34 + 12) = 2048;
      uint64_t v84 = v29;
      sub_100726830();
      swift_release();
      *(_WORD *)(v34 + 22) = 2080;
      unint64_t v77 = (void (**)(char *, char *, uint64_t))(v34 + 24);
      swift_retain();
      uint64_t v35 = sub_100726880();
      unint64_t v37 = v36;
      swift_release();
      uint64_t v38 = v35;
      uint64_t v9 = v71;
      uint64_t v84 = sub_10043E578(v38, v37, (uint64_t *)&v85);
      sub_100726830();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "%s: sampling %ld kis: %s", (uint8_t *)v34, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }

    v65[1] = v28;
    if (v29)
    {
      uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
      uint64_t v39 = v10 + 16;
      uint64_t v40 = v41;
      uint64_t v42 = v39 + 40;
      unint64_t v77 = (void (**)(char *, char *, uint64_t))(v39 + 16);
      uint64_t v78 = (unsigned int (**)(void, void, void))(v39 + 32);
      uint64_t v75 = (void (**)(char *, uint64_t))(v39 - 8);
      unint64_t v76 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v67 + 56);
      uint64_t v43 = v39;
      uint64_t v44 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48);
      uint64_t v79 = v43;
      uint64_t v74 = *(void *)(v43 + 56);
      swift_retain();
      v65[0] = v42 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v45 = v72;
      while (1)
      {
        v40(v45, v30, v9);
        uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))v42;
        (*(void (**)(char *, void, uint64_t, uint64_t))v42)(v45, 0, 1, v9);
        if ((*v78)(v45, 1, v9) == 1) {
          break;
        }
        uint64_t v47 = (uint64_t)v83;
        (*v77)(v83, v45, v9);
        uint64_t v48 = *v82;
        if (*(void *)(*v82 + 16) && (unint64_t v49 = sub_10045C63C(v47), (v50 & 1) != 0))
        {
          uint64_t v51 = *(void *)(v48 + 56) + *(void *)(v67 + 72) * v49;
          uint64_t v52 = v80;
          sub_1005271E4(v51, v80, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v53 = 0;
        }
        else
        {
          uint64_t v53 = 1;
          uint64_t v52 = v80;
        }
        uint64_t v54 = v81;
        (*v76)(v52, v53, 1, v81);
        (*v75)(v83, v9);
        if ((*v44)(v52, 1, v54) == 1)
        {
          sub_10044C150(v52, &qword_100A44A50);
        }
        else
        {
          uint64_t v73 = v30;
          uint64_t v55 = v29;
          uint64_t v56 = v42;
          uint64_t v57 = v44;
          uint64_t v58 = v40;
          uint64_t v59 = v68;
          sub_100527E58(v52, v68);
          uint64_t v60 = v70;
          sub_1005271E4(v59, v70, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v61 = v69;
          sub_10043F7EC(v69, v60);
          uint64_t v62 = v61;
          uint64_t v45 = v72;
          sub_10052724C(v62, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v63 = v59;
          uint64_t v40 = v58;
          uint64_t v44 = v57;
          uint64_t v42 = v56;
          uint64_t v29 = v55;
          uint64_t v30 = v73;
          uint64_t v9 = v71;
          sub_10052724C(v63, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        }
        v30 += v74;
        if (!--v29)
        {
          v46(v45, 1, 1, v9);
          break;
        }
      }
    }
    else
    {
      uint64_t v64 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      swift_retain();
      v64(v72, 1, 1, v9);
    }
    uint64_t result = swift_release_n();
    *uint64_t v66 = v86;
  }
  return result;
}

uint64_t sub_10051F878()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725CC0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100725CB0();
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v30 = v0;
  uint64_t v31 = v6;
  uint64_t v8 = (uint64_t *)(v7 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v7 + 16));
  uint64_t v9 = (os_unfair_lock_s *)(v7 + ((*(unsigned int *)(*(void *)v7 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v9);
  sub_1005275DC(v8, &v33);
  os_unfair_lock_unlock(v9);
  uint64_t v10 = v33;
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_100725EB0();
  os_log_type_t v12 = sub_1007266E0();
  int v13 = v12;
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v14 = swift_slowAlloc();
    int v29 = v13;
    uint64_t v15 = v14;
    uint64_t v28 = swift_slowAlloc();
    uint64_t v33 = v28;
    *(_DWORD *)uint64_t v15 = 136315650;
    uint64_t v32 = sub_10043E578(0xD000000000000013, 0x80000001008C54C0, &v33);
    sub_100726830();
    *(_WORD *)(v15 + 12) = 2048;
    uint64_t v32 = *(void *)(v10 + 16);
    sub_100726830();
    swift_bridgeObjectRelease();
    *(_WORD *)(v15 + 22) = 2080;
    v27[1] = v15 + 24;
    sub_100725D30();
    uint64_t v16 = v3;
    uint64_t v17 = v2;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_100726580();
    uint64_t v19 = v6;
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v22 = v18;
    uint64_t v2 = v17;
    uint64_t v3 = v16;
    uint64_t v32 = sub_10043E578(v22, v21, &v33);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    uint64_t v6 = v19;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, (os_log_type_t)v29, "%s: removing %ld expired keys: %s", (uint8_t *)v15, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (*(void *)(v10 + 16) && (*(uint64_t (**)(void))(*(void *)v1 + 128))())
  {
    uint64_t v24 = v23;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 24))(v10, v1, ObjectType, v24);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v6, v2);
}

uint64_t sub_10051FC4C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v5 = v4;
  char v110 = a4;
  uint64_t v9 = sub_100431F80(&qword_100A44D30);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v133 = (uint64_t)&v109 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100431F80(&qword_100A44A50);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v132 = (uint64_t)&v109 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v131 = (uint64_t)&v109 - v17;
  uint64_t v18 = sub_100725D30();
  uint64_t v135 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v141 = (char *)&v109 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v134 = *(void *)(v140 - 8);
  uint64_t v22 = __chkstk_darwin(v140, v21);
  uint64_t v130 = (uint64_t)&v109 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v129 = (uint64_t)&v109 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v136 = (char *)&v109 - v29;
  __chkstk_darwin(v28, v30);
  uint64_t v128 = (uint64_t)&v109 - v31;
  uint64_t v32 = *a1;
  uint64_t v126 = a2;
  uint64_t v146 = a2;
  uint64_t v147 = a3;
  swift_bridgeObjectRetain();
  uint64_t v33 = sub_100520A44((uint64_t (*)(char *))sub_100527EBC, (uint64_t)v145, v32);
  uint64_t v143 = v5;
  uint64_t v144 = sub_100527EEC(v33);
  swift_bridgeObjectRelease();
  uint64_t v34 = a1[1];
  uint64_t v35 = *(void *)(v34 + 64);
  uint64_t v137 = v34 + 64;
  uint64_t v36 = 1 << *(unsigned char *)(v34 + 32);
  uint64_t v37 = -1;
  if (v36 < 64) {
    uint64_t v37 = ~(-1 << v36);
  }
  unint64_t v38 = v37 & v35;
  int64_t v138 = (unint64_t)(v36 + 63) >> 6;
  uint64_t v139 = v34;
  swift_bridgeObjectRetain();
  int64_t v39 = 0;
  for (i = v18; ; uint64_t v18 = i)
  {
    if (v38)
    {
      unint64_t v41 = __clz(__rbit64(v38));
      v38 &= v38 - 1;
      unint64_t v42 = v41 | (v39 << 6);
      goto LABEL_19;
    }
    BOOL v43 = __OFADD__(v39++, 1);
    if (v43) {
      goto LABEL_70;
    }
    if (v39 >= v138)
    {
      uint64_t v44 = (uint64_t)v136;
      goto LABEL_34;
    }
    uint64_t v44 = (uint64_t)v136;
    unint64_t v45 = *(void *)(v137 + 8 * v39);
    if (!v45) {
      break;
    }
LABEL_18:
    unint64_t v38 = (v45 - 1) & v45;
    unint64_t v42 = __clz(__rbit64(v45)) + (v39 << 6);
LABEL_19:
    uint64_t v47 = *(void *)(*(void *)(v139 + 48) + 8 * v42);
    uint64_t v48 = v144;
    swift_bridgeObjectRetain();
    uint64_t v49 = swift_bridgeObjectRetain();
    uint64_t v50 = v143;
    uint64_t v51 = sub_100528488(v49, v48);
    uint64_t v143 = v50;
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v150 = (void *)a1[1];
    uint64_t v53 = (uint64_t)v150;
    a1[1] = 0x8000000000000000;
    unint64_t v55 = sub_10045C7FC(v47);
    uint64_t v56 = *(void *)(v53 + 16);
    BOOL v57 = (v54 & 1) == 0;
    uint64_t v58 = v56 + v57;
    if (__OFADD__(v56, v57))
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
      goto LABEL_73;
    }
    char v59 = v54;
    if (*(void *)(v53 + 24) >= v58)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1005258A4();
      }
    }
    else
    {
      sub_100524B78(v58, isUniquelyReferenced_nonNull_native);
      unint64_t v60 = sub_10045C7FC(v47);
      if ((v59 & 1) != (v61 & 1)) {
        goto LABEL_74;
      }
      unint64_t v55 = v60;
    }
    uint64_t v62 = v150;
    if (v59)
    {
      uint64_t v40 = v150[7];
      swift_bridgeObjectRelease();
      *(void *)(v40 + 8 * v55) = v51;
    }
    else
    {
      v150[(v55 >> 6) + 8] |= 1 << v55;
      *(void *)(v62[6] + 8 * v55) = v47;
      *(void *)(v62[7] + 8 * v55) = v51;
      uint64_t v63 = v62[2];
      BOOL v43 = __OFADD__(v63, 1);
      uint64_t v64 = v63 + 1;
      if (v43) {
        goto LABEL_69;
      }
      v62[2] = v64;
    }
    a1[1] = (uint64_t)v62;
    swift_bridgeObjectRelease();
  }
  int64_t v46 = v39 + 1;
  if (v39 + 1 >= v138) {
    goto LABEL_34;
  }
  unint64_t v45 = *(void *)(v137 + 8 * v46);
  if (v45) {
    goto LABEL_17;
  }
  int64_t v46 = v39 + 2;
  if (v39 + 2 >= v138) {
    goto LABEL_34;
  }
  unint64_t v45 = *(void *)(v137 + 8 * v46);
  if (v45) {
    goto LABEL_17;
  }
  int64_t v46 = v39 + 3;
  if (v39 + 3 >= v138) {
    goto LABEL_34;
  }
  unint64_t v45 = *(void *)(v137 + 8 * v46);
  if (v45)
  {
LABEL_17:
    int64_t v39 = v46;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v39 = v46 + 1;
    if (__OFADD__(v46, 1)) {
      goto LABEL_72;
    }
    if (v39 >= v138) {
      break;
    }
    unint64_t v45 = *(void *)(v137 + 8 * v39);
    ++v46;
    if (v45) {
      goto LABEL_18;
    }
  }
  uint64_t v18 = i;
LABEL_34:
  uint64_t v65 = v126;
  swift_release();
  uint64_t v67 = 0;
  uint64_t v68 = *(void *)(v144 + 56);
  uint64_t v116 = v144 + 56;
  uint64_t v69 = 1 << *(unsigned char *)(v144 + 32);
  uint64_t v70 = -1;
  if (v69 < 64) {
    uint64_t v70 = ~(-1 << v69);
  }
  unint64_t v71 = v70 & v68;
  uint64_t v126 = v65 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_l;
  int64_t v117 = (unint64_t)(v69 + 63) >> 6;
  unint64_t v115 = &v149;
  os_log_type_t v125 = (void (**)(char *, uint64_t, uint64_t))(v135 + 16);
  uint64_t v124 = v135 + 32;
  uint64_t v123 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v134 + 56);
  int64_t v114 = (void (**)(unint64_t, uint64_t))(v135 + 8);
  uint64_t v122 = a1 + 2;
  int v121 = a1 + 3;
  uint64_t v72 = _swiftEmptyArrayStorage;
  uint64_t v120 = a1 + 4;
  *(void *)&long long v66 = 136315650;
  long long v113 = v66;
  unint64_t v112 = 0x80000001008C54C0;
  uint64_t v111 = (char *)&type metadata for Any + 8;
  uint64_t v127 = a1;
  while (2)
  {
    if (v71)
    {
      int64_t v138 = (v71 - 1) & v71;
      uint64_t v139 = v67;
      unint64_t v77 = __clz(__rbit64(v71)) | (v67 << 6);
LABEL_52:
      uint64_t v81 = *(void *)(v144 + 48);
      uint64_t v137 = *(void *)(v134 + 72);
      uint64_t v82 = v128;
      sub_1005271E4(v81 + v137 * v77, v128, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_100527E58(v82, v44);
      uint64_t v83 = v129;
      sub_1005271E4(v44, v129, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v84 = v44;
      uint64_t v85 = v130;
      sub_1005271E4(v84, v130, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      os_log_type_t v86 = sub_100725EB0();
      os_log_type_t v87 = sub_1007266E0();
      if (os_log_type_enabled(v86, v87))
      {
        uint64_t v88 = swift_slowAlloc();
        uint64_t v89 = swift_slowAlloc();
        id v119 = v72;
        uint64_t v118 = v89;
        uint64_t v150 = (void *)v89;
        *(_DWORD *)uint64_t v88 = v113;
        uint64_t v148 = sub_10043E578(0xD000000000000013, v112, (uint64_t *)&v150);
        sub_100726830();
        *(_WORD *)(v88 + 12) = 2080;
        uint64_t v90 = v140;
        sub_100528654(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v91 = sub_100726D00();
        uint64_t v148 = sub_10043E578(v91, v92, (uint64_t *)&v150);
        sub_100726830();
        swift_bridgeObjectRelease();
        sub_10052724C(v83, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        *(_WORD *)(v88 + 22) = 2080;
        sub_100528654(&qword_100A44D38, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v93 = sub_100726D00();
        uint64_t v148 = sub_10043E578(v93, v94, (uint64_t *)&v150);
        sub_100726830();
        swift_bridgeObjectRelease();
        uint64_t v18 = i;
        sub_10052724C(v85, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        _os_log_impl((void *)&_mh_execute_header, v86, v87, "%s: removing expired key %s: %s", (uint8_t *)v88, 0x20u);
        swift_arrayDestroy();
        uint64_t v72 = v119;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_10052724C(v83, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        sub_10052724C(v85, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v90 = v140;
      }
      uint64_t v44 = (uint64_t)v136;
      uint64_t v95 = (uint64_t)&v136[*(int *)(v90 + 20)];
      (*v125)(v141, v95, v18);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v72 = (void *)sub_10052113C(0, v72[2] + 1, 1, (unint64_t)v72);
      }
      unint64_t v96 = v127;
      unint64_t v98 = v72[2];
      unint64_t v97 = v72[3];
      if (v98 >= v97 >> 1) {
        uint64_t v72 = (void *)sub_10052113C(v97 > 1, v98 + 1, 1, (unint64_t)v72);
      }
      v72[2] = v98 + 1;
      uint64_t v99 = v72;
      char v100 = (char *)v72
           + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
      uint64_t v101 = *(void *)(v135 + 72);
      (*(void (**)(char *, char *, uint64_t))(v135 + 32))(&v100[v101 * v98], v141, v18);
      swift_bridgeObjectRetain();
      unint64_t v102 = sub_10045C63C(v95);
      char v104 = v103;
      swift_bridgeObjectRelease();
      if (v104)
      {
        char v105 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v106 = *v96;
        uint64_t v150 = (void *)*v96;
        *unint64_t v96 = 0x8000000000000000;
        if ((v105 & 1) == 0)
        {
          sub_100525578();
          uint64_t v106 = (uint64_t)v150;
        }
        (*v114)(*(void *)(v106 + 48) + v102 * v101, v18);
        uint64_t v107 = (uint64_t)v150;
        uint64_t v74 = v131;
        sub_100527E58(v150[7] + v102 * v137, v131);
        sub_100524E30(v102, v107);
        *unint64_t v96 = v107;
        swift_bridgeObjectRelease();
        uint64_t v73 = 0;
      }
      else
      {
        uint64_t v73 = 1;
        uint64_t v74 = v131;
      }
      (*v123)(v74, v73, 1, v140);
      sub_10044C150(v74, &qword_100A44A50);
      uint64_t v75 = v132;
      sub_10047DA64(v132);
      sub_10044C150(v75, &qword_100A44A50);
      uint64_t v76 = v133;
      sub_100525A48(v95, v133);
      sub_10044C150(v76, &qword_100A44D30);
      sub_100525A48(v95, v76);
      sub_10044C150(v76, &qword_100A44D30);
      sub_10052724C(v44, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      unint64_t v71 = v138;
      uint64_t v67 = v139;
      uint64_t v72 = v99;
      continue;
    }
    break;
  }
  BOOL v43 = __OFADD__(v67, 1);
  int64_t v78 = v67 + 1;
  if (v43) {
    goto LABEL_71;
  }
  if (v78 >= v117)
  {
LABEL_67:
    uint64_t result = swift_release();
    *char v110 = v72;
    return result;
  }
  unint64_t v79 = *(void *)(v116 + 8 * v78);
  if (v79)
  {
LABEL_51:
    int64_t v138 = (v79 - 1) & v79;
    uint64_t v139 = v78;
    unint64_t v77 = __clz(__rbit64(v79)) + (v78 << 6);
    goto LABEL_52;
  }
  int64_t v80 = v78 + 1;
  if (v78 + 1 >= v117) {
    goto LABEL_67;
  }
  unint64_t v79 = *(void *)(v116 + 8 * v80);
  if (v79) {
    goto LABEL_50;
  }
  int64_t v80 = v78 + 2;
  if (v78 + 2 >= v117) {
    goto LABEL_67;
  }
  unint64_t v79 = *(void *)(v116 + 8 * v80);
  if (v79) {
    goto LABEL_50;
  }
  int64_t v80 = v78 + 3;
  if (v78 + 3 >= v117) {
    goto LABEL_67;
  }
  unint64_t v79 = *(void *)(v116 + 8 * v80);
  if (v79)
  {
LABEL_50:
    int64_t v78 = v80;
    goto LABEL_51;
  }
  while (1)
  {
    int64_t v78 = v80 + 1;
    if (__OFADD__(v80, 1)) {
      break;
    }
    if (v78 >= v117) {
      goto LABEL_67;
    }
    unint64_t v79 = *(void *)(v116 + 8 * v78);
    ++v80;
    if (v79) {
      goto LABEL_51;
    }
  }
LABEL_73:
  __break(1u);
LABEL_74:
  uint64_t result = sub_100726D40();
  __break(1u);
  return result;
}

uint64_t sub_100520930()
{
  uint64_t v0 = sub_100725CC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  sub_100725BD0();
  char v5 = sub_100725C00();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5 & 1;
}

uint64_t sub_100520A44(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a1;
  uint64_t v45 = a2;
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5 - 8, v7);
  uint64_t v40 = (uint64_t)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t result = __chkstk_darwin(v11, v14);
  uint64_t v17 = (char *)&v38 - v16;
  int64_t v18 = 0;
  uint64_t v19 = a3;
  uint64_t v20 = *(void *)(a3 + 64);
  uint64_t v42 = a3 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v41 = _swiftEmptyArrayStorage;
  int64_t v46 = _swiftEmptyArrayStorage;
  unint64_t v23 = v22 & v20;
  int64_t v43 = (unint64_t)(v21 + 63) >> 6;
  while (1)
  {
    if (v23)
    {
      unint64_t v24 = __clz(__rbit64(v23));
      v23 &= v23 - 1;
      unint64_t v25 = v24 | (v18 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v18 >= v43) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v42 + 8 * v18);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v23 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_19:
    uint64_t v29 = *(void *)(v6 + 72);
    sub_1005271E4(*(void *)(v19 + 56) + v29 * v25, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_100527E58((uint64_t)v13, (uint64_t)v17);
    char v30 = v44(v17);
    if (v3)
    {
      sub_10052724C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v37 = v41;
      swift_release();
LABEL_33:
      swift_release();
      return (uint64_t)v37;
    }
    if (v30)
    {
      sub_100527E58((uint64_t)v17, v40);
      uint64_t v31 = v41;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100526648(0, v31[2] + 1, 1);
      }
      uint64_t v32 = v46;
      unint64_t v34 = v46[2];
      unint64_t v33 = v46[3];
      uint64_t v35 = (void *)(v34 + 1);
      if (v34 >= v33 >> 1)
      {
        unint64_t v41 = (void *)(v34 + 1);
        unint64_t v39 = v34;
        sub_100526648(v33 > 1, v34 + 1, 1);
        uint64_t v35 = v41;
        unint64_t v34 = v39;
        uint64_t v32 = v46;
      }
      v32[2] = v35;
      uint64_t v36 = *(unsigned __int8 *)(v6 + 80);
      unint64_t v41 = v32;
      uint64_t result = sub_100527E58(v40, (uint64_t)v32 + ((v36 + 32) & ~v36) + v34 * v29);
    }
    else
    {
      uint64_t result = sub_10052724C((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    }
  }
  int64_t v28 = v18 + 1;
  if (v18 + 1 >= v43) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v42 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v28 = v18 + 2;
  if (v18 + 2 >= v43) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v42 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v28 = v18 + 3;
  if (v18 + 3 >= v43) {
    goto LABEL_32;
  }
  unint64_t v27 = *(void *)(v42 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v28 = v18 + 4;
  if (v18 + 4 >= v43)
  {
LABEL_32:
    uint64_t v37 = v41;
    goto LABEL_33;
  }
  unint64_t v27 = *(void *)(v42 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v18 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v18 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v18 >= v43) {
      goto LABEL_32;
    }
    unint64_t v27 = *(void *)(v42 + 8 * v18);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100520DDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_10043E578(0x29287465736572, 0xE700000000000000, &v9);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: resetting...", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_state);
  uint64_t v6 = (unint64_t *)(v5 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v5 + 16));
  uint64_t v7 = (os_unfair_lock_s *)(v5 + ((*(unsigned int *)(*(void *)v5 + 48) + 3) & 0x1FFFFFFFCLL));
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_100520FA4(v6);
  os_unfair_lock_unlock(v7);
  return swift_release();
}

uint64_t sub_100520FA4(unint64_t *a1)
{
  unint64_t v2 = sub_100517C14((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  *a1 = v2;
  unint64_t v3 = sub_100527028(_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  a1[1] = v3;
  swift_bridgeObjectRelease();
  a1[2] = (unint64_t)&_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  a1[3] = (unint64_t)&_swiftEmptySetSingleton;
  uint64_t result = swift_bridgeObjectRelease();
  a1[4] = (unint64_t)&_swiftEmptySetSingleton;
  return result;
}

uint64_t sub_100521038()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_l;
  uint64_t v2 = sub_100725ED0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_100461218(v0 + OBJC_IVAR____TtC17identityservicesd35IDSGroupEncryptionKeyMaterialCache2_delegate);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100521110()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 320))();
}

uint64_t sub_10052113C(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80(&qword_100A478E8);
  uint64_t v10 = *(void *)(sub_100725D30() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_100726B80();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100725D30() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10052869C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1005213A4(uint64_t a1, char *a2)
{
  unint64_t v3 = v2;
  uint64_t v6 = sub_100725D30();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  unint64_t v34 = a2;
  uint64_t v12 = sub_1007263D0();
  uint64_t v13 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v14 = v12 & ~v13;
  uint64_t v33 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v29 = v2;
    uint64_t v30 = a1;
    uint64_t v31 = ~v13;
    uint64_t v28 = v7;
    unint64_t v17 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v16 = v7 + 16;
    BOOL v15 = v17;
    uint64_t v32 = *(void *)(v16 + 56);
    unint64_t v18 = (void (**)(char *, uint64_t))(v16 - 8);
    v27[1] = v16 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v19 = v11;
      unint64_t v20 = v32 * v14;
      uint64_t v21 = v15;
      v15(v10, *(void *)(v11 + 48) + v32 * v14, v6);
      sub_100528654(&qword_100A45458, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v22 = sub_100726410();
      unint64_t v23 = *v18;
      (*v18)(v10, v6);
      if (v22) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v31;
      uint64_t v11 = v19;
      BOOL v15 = v21;
      if (((*(void *)(v33 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        unint64_t v3 = v29;
        a1 = v30;
        uint64_t v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v23(v34, v6);
    v21(v30, *(void *)(*v29 + 48) + v20, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    BOOL v15 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v25 = v34;
    v15(v10, v34, v6);
    uint64_t v35 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_100521AC4((uint64_t)v10, v14, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v35;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1005216C8()
{
  uint64_t v1 = v0;
  uint64_t v43 = sub_100725D30();
  uint64_t v2 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v3);
  uint64_t v42 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_100431F80(&qword_100A478E0);
  uint64_t v6 = sub_1007269C0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v38 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    uint64_t v36 = v0;
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v40 = v2;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    uint64_t v39 = v7;
    BOOL v15 = v42;
    uint64_t v16 = v43;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        int64_t v41 = v14;
        unint64_t v19 = v18 | (v14 << 6);
      }
      else
      {
        int64_t v20 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v20 >= v37) {
          goto LABEL_33;
        }
        unint64_t v21 = v38[v20];
        int64_t v22 = v14 + 1;
        if (!v21)
        {
          int64_t v22 = v14 + 2;
          if (v14 + 2 >= v37) {
            goto LABEL_33;
          }
          unint64_t v21 = v38[v22];
          if (!v21)
          {
            int64_t v22 = v14 + 3;
            if (v14 + 3 >= v37) {
              goto LABEL_33;
            }
            unint64_t v21 = v38[v22];
            if (!v21)
            {
              uint64_t v23 = v14 + 4;
              if (v14 + 4 >= v37)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v36;
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 > 63) {
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v38 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v21 = v38[v23];
              if (!v21)
              {
                while (1)
                {
                  int64_t v22 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v22 >= v37) {
                    goto LABEL_33;
                  }
                  unint64_t v21 = v38[v22];
                  ++v23;
                  if (v21) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v22 = v14 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v21 - 1) & v21;
        int64_t v41 = v22;
        unint64_t v19 = __clz(__rbit64(v21)) + (v22 << 6);
      }
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v5 + 48);
      uint64_t v26 = *(void *)(v40 + 72);
      unint64_t v27 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 32);
      v27(v15, v25 + v26 * v19, v16);
      uint64_t v7 = v39;
      sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = sub_1007263D0();
      uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v12 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v12 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v27)(*(void *)(v7 + 48) + v17 * v26, v42, v43);
      ++*(void *)(v7 + 16);
      uint64_t v5 = v24;
      int64_t v14 = v41;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

uint64_t sub_100521AC4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v32 = a1;
  uint64_t v6 = sub_100725D30();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  unint64_t v29 = v3;
  uint64_t v30 = v7;
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1005216C8();
  }
  else
  {
    if (v12 > v11)
    {
      sub_100521D64();
      goto LABEL_12;
    }
    sub_100522008();
  }
  uint64_t v13 = *v3;
  sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v14 = sub_1007263D0();
  uint64_t v15 = -1 << *(unsigned char *)(v13 + 32);
  a2 = v14 & ~v15;
  uint64_t v31 = v13;
  uint64_t v16 = v13 + 56;
  if ((*(void *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v15;
    int64_t v20 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v19 = v7 + 16;
    unint64_t v18 = v20;
    uint64_t v21 = *(void *)(v19 + 56);
    do
    {
      v18(v10, *(void *)(v31 + 48) + v21 * a2, v6);
      sub_100528654(&qword_100A45458, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v22 = sub_100726410();
      (*(void (**)(char *, uint64_t))(v19 - 8))(v10, v6);
      if (v22) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v16 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v23 = v30;
  uint64_t v24 = *v29;
  *(void *)(v24 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v23 + 32))(*(void *)(v24 + 48) + *(void *)(v23 + 72) * a2, v32, v6);
  uint64_t v26 = *(void *)(v24 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (!v27)
  {
    *(void *)(v24 + 16) = v28;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_100726D30();
  __break(1u);
  return result;
}

void *sub_100521D64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725D30();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100431F80(&qword_100A478E0);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1007269B0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    *uint64_t v1 = v9;
    return result;
  }
  uint64_t v23 = v1;
  uint64_t result = (void *)(v8 + 56);
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v7 + 56 + 8 * v11) {
    uint64_t result = memmove(result, (const void *)(v7 + 56), 8 * v11);
  }
  uint64_t v24 = v7 + 56;
  int64_t v12 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v7 + 56);
  int64_t v25 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v16 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v17 = v16 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v19 >= v25) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v12;
    if (!v20)
    {
      int64_t v12 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_25;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v12);
      if (!v20)
      {
        int64_t v12 = v19 + 2;
        if (v19 + 2 >= v25) {
          goto LABEL_25;
        }
        unint64_t v20 = *(void *)(v24 + 8 * v12);
        if (!v20) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v15 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v12 << 6);
LABEL_9:
    unint64_t v18 = *(void *)(v3 + 72) * v17;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v6, *(void *)(v7 + 48) + v18, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v9 + 48) + v18, v6, v2);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v25)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v23;
    goto LABEL_27;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v12 = v21;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v12 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v12 >= v25) {
      goto LABEL_25;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v12);
    ++v21;
    if (v20) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_100522008()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725D30();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v0;
  sub_100431F80(&qword_100A478E0);
  uint64_t v8 = sub_1007269C0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v9;
    return result;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 56);
  uint64_t v35 = v0;
  uint64_t v36 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  int64_t v37 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v38 = v3 + 16;
  uint64_t v14 = v8 + 56;
  uint64_t v39 = v3;
  unint64_t v15 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v37) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v36 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v37) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v36 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    uint64_t v24 = v7;
    uint64_t v25 = *(void *)(v7 + 48);
    uint64_t v26 = *(void *)(v39 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v39 + 16))(v6, v25 + v26 * v20, v2);
    sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_1007263D0();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v14 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v14 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v14 + 8 * v29);
      }
      while (v33 == -1);
      unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
    }
    *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = (*v15)(*(void *)(v9 + 48) + v18 * v26, v6, v2);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v24;
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v37)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v35;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v36 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v37) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v36 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

Swift::Int sub_1005223B8(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for IDSGroupEncryptionKeyMaterialContent() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100526FA0(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1005226E8(v6);
  *a1 = v3;
  return result;
}

void *sub_100522460(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100431F80(&qword_100A478D0);
  uint64_t v3 = *(void *)(type metadata accessor for IDSGroupEncryptionKeyMaterialContent() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  Swift::Int result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = sub_1005268CC(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_100462C48();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1005225B4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100431F80(&qword_100A478E8);
  uint64_t v3 = *(void *)(sub_100725D30() - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  Swift::Int result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      uint64_t v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_100526BAC(&v10, (char *)v6 + v5, v1, a1);
      sub_100462C48();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

Swift::Int sub_1005226E8(uint64_t *a1)
{
  uint64_t v216 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v2 = *(void *)(v216 - 8);
  uint64_t v4 = __chkstk_darwin(v216, v3);
  uint64_t v199 = (uint64_t)&v188 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  uint64_t v213 = (uint64_t)&v188 - v8;
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)&v188 - v11;
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v196 = (char *)&v188 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v208 = (char *)&v188 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  unint64_t v22 = (char *)&v188 - v21;
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v26 = (char *)&v188 - v25;
  uint64_t v28 = __chkstk_darwin(v24, v27);
  char v30 = (char *)&v188 - v29;
  uint64_t v32 = __chkstk_darwin(v28, v31);
  uint64_t v197 = (char *)&v188 - v33;
  uint64_t v35 = __chkstk_darwin(v32, v34);
  uint64_t v202 = (uint64_t)&v188 - v36;
  uint64_t v38 = __chkstk_darwin(v35, v37);
  uint64_t v40 = (char *)&v188 - v39;
  uint64_t v42 = __chkstk_darwin(v38, v41);
  uint64_t v44 = (char *)&v188 - v43;
  uint64_t v46 = __chkstk_darwin(v42, v45);
  uint64_t v193 = (uint64_t)&v188 - v47;
  __chkstk_darwin(v46, v48);
  uint64_t v192 = (uint64_t)&v188 - v49;
  uint64_t v217 = a1;
  Swift::Int v50 = a1[1];
  Swift::Int result = sub_100726CF0(v50);
  Swift::Int v194 = result;
  if (result >= v50)
  {
    if (v50 < 0) {
      goto LABEL_165;
    }
    if (v50) {
      return sub_1005236C8(0, v50, 1, v217);
    }
    return result;
  }
  if (v50 >= 0) {
    uint64_t v52 = v50;
  }
  else {
    uint64_t v52 = v50 + 1;
  }
  if (v50 < -1) {
    goto LABEL_173;
  }
  Swift::Int v53 = v50;
  uint64_t v205 = v2;
  int64_t v207 = v12;
  uint64_t v212 = v22;
  int64_t v195 = v26;
  if (v50 < 2)
  {
    uint64_t v58 = _swiftEmptyArrayStorage;
    unint64_t v203 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    if (v50 != 1)
    {
      unint64_t v62 = _swiftEmptyArrayStorage[2];
      unint64_t v60 = (char *)_swiftEmptyArrayStorage;
LABEL_131:
      uint64_t v180 = v60;
      uint64_t v189 = v58;
      uint64_t v181 = v206;
      if (v62 >= 2)
      {
        uint64_t v182 = *v217;
        do
        {
          unint64_t v183 = v62 - 2;
          if (v62 < 2) {
            goto LABEL_160;
          }
          if (!v182) {
            goto LABEL_172;
          }
          uint64_t v184 = *(void *)&v180[16 * v183 + 32];
          uint64_t v185 = *(void *)&v180[16 * v62 + 24];
          sub_100523AAC(v182 + *(void *)(v205 + 72) * v184, v182 + *(void *)(v205 + 72) * *(void *)&v180[16 * v62 + 16], v182 + *(void *)(v205 + 72) * v185, v203);
          if (v181) {
            break;
          }
          if (v185 < v184) {
            goto LABEL_161;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v180 = sub_1005244BC((uint64_t)v180);
          }
          if (v183 >= *((void *)v180 + 2)) {
            goto LABEL_162;
          }
          unint64_t v186 = &v180[16 * v183 + 32];
          *(void *)unint64_t v186 = v184;
          *((void *)v186 + 1) = v185;
          unint64_t v187 = *((void *)v180 + 2);
          if (v62 > v187) {
            goto LABEL_163;
          }
          memmove(&v180[16 * v62 + 16], &v180[16 * v62 + 32], 16 * (v187 - v62));
          *((void *)v180 + 2) = v187 - 1;
          unint64_t v62 = v187 - 1;
        }
        while (v187 > 2);
      }
LABEL_142:
      swift_bridgeObjectRelease();
      v189[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v57 = 1;
    uint64_t v189 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v54 = v52 >> 1;
    uint64_t v55 = sub_1007265B0();
    *(void *)(v55 + 16) = v54;
    unint64_t v56 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
    uint64_t v189 = (void *)v55;
    unint64_t v203 = v55 + v56;
    uint64_t v57 = v53;
  }
  uint64_t v59 = 0;
  unint64_t v60 = (char *)_swiftEmptyArrayStorage;
  char v61 = v208;
  uint64_t v201 = v30;
  uint64_t v204 = v40;
  uint64_t v191 = v44;
  while (2)
  {
    uint64_t v63 = v59;
    uint64_t v64 = v59 + 1;
    uint64_t v200 = v59;
    uint64_t v214 = v57;
    if (v59 + 1 >= v57) {
      goto LABEL_66;
    }
    uint64_t v65 = v59;
    uint64_t v66 = *v217;
    uint64_t v67 = *(void *)(v205 + 72);
    uint64_t v209 = v64;
    uint64_t v68 = v192;
    sub_1005271E4(v66 + v67 * v64, v192, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v210 = v66;
    uint64_t v215 = v67;
    uint64_t v69 = v66 + v67 * v65;
    uint64_t v70 = v193;
    sub_1005271E4(v69, v193, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v71 = v70;
    uint64_t v72 = *(int *)(v216 + 40);
    unsigned int v73 = *(_DWORD *)(v68 + v72);
    unsigned int v74 = *(_DWORD *)(v71 + v72);
    if (v73 >= v74)
    {
      uint64_t v76 = v68;
      uint64_t v77 = v71;
      sub_1005271E4(v76, (uint64_t)v44, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_1005271E4(v77, (uint64_t)v40, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      if (v73 == v74)
      {
        uint64_t v78 = v216;
        int v79 = *(_DWORD *)&v44[*(int *)(v216 + 44)];
        sub_10052724C((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        LODWORD(v78) = *(_DWORD *)&v40[*(int *)(v78 + 44)];
        sub_10052724C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        BOOL v161 = v79 < (int)v78;
        Swift::Int v75 = v194;
        if (v161)
        {
          LODWORD(v211) = 1;
LABEL_26:
          uint64_t v71 = v193;
          uint64_t v68 = v192;
          goto LABEL_27;
        }
      }
      else
      {
        sub_10052724C((uint64_t)v40, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        sub_10052724C((uint64_t)v44, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        Swift::Int v75 = v194;
      }
      LODWORD(v211) = 0;
      goto LABEL_26;
    }
    LODWORD(v211) = 1;
    Swift::Int v75 = v194;
LABEL_27:
    uint64_t v80 = v205;
    sub_10052724C(v71, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_10052724C(v68, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v63 = v200;
    uint64_t v64 = v200 + 2;
    uint64_t v81 = v214;
    if (v200 + 2 >= v214)
    {
      unint64_t v98 = v196;
      if (!v211) {
        goto LABEL_56;
      }
      goto LABEL_44;
    }
    int v190 = v60;
    uint64_t v82 = v210;
    uint64_t v83 = v215 * v209;
    uint64_t v84 = v215 * v64;
    uint64_t v85 = (uint64_t)v197;
    do
    {
      uint64_t v86 = v64;
      uint64_t v87 = v202;
      sub_1005271E4(v82 + v84, v202, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_1005271E4(v82 + v83, v85, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v88 = v87;
      uint64_t v89 = *(int *)(v216 + 40);
      unsigned int v90 = *(_DWORD *)(v87 + v89);
      unsigned int v91 = *(_DWORD *)(v85 + v89);
      if (v90 < v91)
      {
        int v92 = 1;
        goto LABEL_37;
      }
      sub_1005271E4(v88, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v93 = v85;
      uint64_t v94 = (uint64_t)v30;
      uint64_t v95 = (uint64_t)v195;
      sub_1005271E4(v93, (uint64_t)v195, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      if (v90 != v91)
      {
        sub_10052724C(v95, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        sub_10052724C(v94, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        char v30 = (char *)v94;
LABEL_35:
        int v92 = 0;
        goto LABEL_36;
      }
      uint64_t v96 = v216;
      int v97 = *(_DWORD *)(v94 + *(int *)(v216 + 44));
      sub_10052724C(v94, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      LODWORD(v96) = *(_DWORD *)(v95 + *(int *)(v96 + 44));
      sub_10052724C(v95, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      char v30 = (char *)v94;
      if (v97 >= (int)v96) {
        goto LABEL_35;
      }
      int v92 = 1;
LABEL_36:
      uint64_t v85 = (uint64_t)v197;
LABEL_37:
      sub_10052724C(v85, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10052724C(v202, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      if (v211 != v92)
      {
        uint64_t v40 = v204;
        uint64_t v80 = v205;
        unint64_t v98 = v196;
        unint64_t v60 = v190;
        Swift::Int v75 = v194;
        uint64_t v63 = v200;
        uint64_t v81 = v214;
        if (!v211) {
          goto LABEL_56;
        }
        goto LABEL_44;
      }
      ++v64;
      v82 += v215;
      uint64_t v81 = v214;
    }
    while (v214 != v86 + 1);
    uint64_t v64 = v214;
    uint64_t v40 = v204;
    uint64_t v80 = v205;
    unint64_t v98 = v196;
    unint64_t v60 = v190;
    Swift::Int v75 = v194;
    uint64_t v63 = v200;
    if (!v211) {
      goto LABEL_56;
    }
LABEL_44:
    if (v64 < v63) {
      goto LABEL_166;
    }
    if (v63 >= v64)
    {
LABEL_56:
      char v61 = v208;
      if (v64 < v81) {
        goto LABEL_59;
      }
LABEL_66:
      uint64_t v108 = v206;
      if (v64 < v63) {
        goto LABEL_159;
      }
      goto LABEL_82;
    }
    int v190 = v60;
    uint64_t v99 = 0;
    uint64_t v100 = v215 * (v64 - 1);
    uint64_t v101 = v64 * v215;
    uint64_t v102 = v63;
    uint64_t v103 = v63 * v215;
    do
    {
      if (v102 != v64 + v99 - 1)
      {
        uint64_t v105 = v210;
        if (!v210) {
          goto LABEL_171;
        }
        unint64_t v106 = v210 + v103;
        uint64_t v211 = v210 + v100;
        sub_100527E58(v210 + v103, v199);
        if (v103 < v100 || v106 >= v105 + v101)
        {
          uint64_t v104 = v211;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v104 = v211;
          if (v103 != v100) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_100527E58(v199, v104);
        uint64_t v40 = v204;
      }
      ++v102;
      --v99;
      v100 -= v215;
      v101 -= v215;
      v103 += v215;
    }
    while (v102 < v64 + v99);
    uint64_t v80 = v205;
    unint64_t v98 = v196;
    char v61 = v208;
    unint64_t v60 = v190;
    Swift::Int v75 = v194;
    uint64_t v63 = v200;
    if (v64 >= v214) {
      goto LABEL_66;
    }
LABEL_59:
    if (__OFSUB__(v64, v63)) {
      goto LABEL_164;
    }
    if (v64 - v63 >= v75)
    {
      uint64_t v108 = v206;
      if (v64 < v200) {
        goto LABEL_159;
      }
LABEL_82:
      uint64_t v128 = v61;
      uint64_t v59 = v64;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v60 = sub_100524280(0, *((void *)v60 + 2) + 1, 1, v60);
      }
      unint64_t v130 = *((void *)v60 + 2);
      unint64_t v129 = *((void *)v60 + 3);
      unint64_t v62 = v130 + 1;
      if (v130 >= v129 >> 1) {
        unint64_t v60 = sub_100524280((char *)(v129 > 1), v130 + 1, 1, v60);
      }
      char v61 = v128;
      uint64_t v206 = v108;
      *((void *)v60 + 2) = v62;
      uint64_t v131 = v60 + 32;
      uint64_t v132 = &v60[16 * v130 + 32];
      *(void *)uint64_t v132 = v200;
      *((void *)v132 + 1) = v59;
      if (v130)
      {
        while (1)
        {
          unint64_t v133 = v62 - 1;
          if (v62 >= 4)
          {
            int64_t v138 = &v131[16 * v62];
            uint64_t v139 = *((void *)v138 - 8);
            uint64_t v140 = *((void *)v138 - 7);
            BOOL v144 = __OFSUB__(v140, v139);
            uint64_t v141 = v140 - v139;
            if (v144) {
              goto LABEL_148;
            }
            uint64_t v143 = *((void *)v138 - 6);
            uint64_t v142 = *((void *)v138 - 5);
            BOOL v144 = __OFSUB__(v142, v143);
            uint64_t v136 = v142 - v143;
            char v137 = v144;
            if (v144) {
              goto LABEL_149;
            }
            unint64_t v145 = v62 - 2;
            uint64_t v146 = &v131[16 * v62 - 32];
            uint64_t v148 = *(void *)v146;
            uint64_t v147 = *((void *)v146 + 1);
            BOOL v144 = __OFSUB__(v147, v148);
            uint64_t v149 = v147 - v148;
            if (v144) {
              goto LABEL_151;
            }
            BOOL v144 = __OFADD__(v136, v149);
            uint64_t v150 = v136 + v149;
            if (v144) {
              goto LABEL_154;
            }
            if (v150 >= v141)
            {
              BOOL v168 = &v131[16 * v133];
              uint64_t v170 = *(void *)v168;
              uint64_t v169 = *((void *)v168 + 1);
              BOOL v144 = __OFSUB__(v169, v170);
              uint64_t v171 = v169 - v170;
              if (v144) {
                goto LABEL_158;
              }
              BOOL v161 = v136 < v171;
              goto LABEL_118;
            }
          }
          else
          {
            if (v62 != 3)
            {
              uint64_t v162 = *((void *)v60 + 4);
              uint64_t v163 = *((void *)v60 + 5);
              BOOL v144 = __OFSUB__(v163, v162);
              uint64_t v155 = v163 - v162;
              char v156 = v144;
              goto LABEL_112;
            }
            uint64_t v135 = *((void *)v60 + 4);
            uint64_t v134 = *((void *)v60 + 5);
            BOOL v144 = __OFSUB__(v134, v135);
            uint64_t v136 = v134 - v135;
            char v137 = v144;
          }
          if (v137) {
            goto LABEL_150;
          }
          unint64_t v145 = v62 - 2;
          uint64_t v151 = &v131[16 * v62 - 32];
          uint64_t v153 = *(void *)v151;
          uint64_t v152 = *((void *)v151 + 1);
          BOOL v154 = __OFSUB__(v152, v153);
          uint64_t v155 = v152 - v153;
          char v156 = v154;
          if (v154) {
            goto LABEL_153;
          }
          unint64_t v157 = &v131[16 * v133];
          uint64_t v159 = *(void *)v157;
          uint64_t v158 = *((void *)v157 + 1);
          BOOL v144 = __OFSUB__(v158, v159);
          uint64_t v160 = v158 - v159;
          if (v144) {
            goto LABEL_156;
          }
          if (__OFADD__(v155, v160)) {
            goto LABEL_157;
          }
          if (v155 + v160 >= v136)
          {
            BOOL v161 = v136 < v160;
LABEL_118:
            if (v161) {
              unint64_t v133 = v145;
            }
            goto LABEL_120;
          }
LABEL_112:
          if (v156) {
            goto LABEL_152;
          }
          int v164 = &v131[16 * v133];
          uint64_t v166 = *(void *)v164;
          uint64_t v165 = *((void *)v164 + 1);
          BOOL v144 = __OFSUB__(v165, v166);
          uint64_t v167 = v165 - v166;
          if (v144) {
            goto LABEL_155;
          }
          if (v167 < v155) {
            goto LABEL_15;
          }
LABEL_120:
          unint64_t v172 = v133 - 1;
          if (v133 - 1 >= v62)
          {
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
LABEL_167:
            __break(1u);
            goto LABEL_168;
          }
          if (!*v217) {
            goto LABEL_170;
          }
          uint64_t v173 = v60;
          uint64_t v174 = &v131[16 * v172];
          uint64_t v175 = *(void *)v174;
          uint64_t v176 = &v131[16 * v133];
          uint64_t v177 = *((void *)v176 + 1);
          uint64_t v178 = v206;
          sub_100523AAC(*v217 + *(void *)(v205 + 72) * *(void *)v174, *v217 + *(void *)(v205 + 72) * *(void *)v176, *v217 + *(void *)(v205 + 72) * v177, v203);
          uint64_t v206 = v178;
          if (v178) {
            goto LABEL_142;
          }
          if (v177 < v175) {
            goto LABEL_145;
          }
          if (v133 > *((void *)v173 + 2)) {
            goto LABEL_146;
          }
          *(void *)uint64_t v174 = v175;
          *(void *)&v131[16 * v172 + 8] = v177;
          unint64_t v179 = *((void *)v173 + 2);
          if (v133 >= v179) {
            goto LABEL_147;
          }
          unint64_t v60 = v173;
          unint64_t v62 = v179 - 1;
          memmove(&v131[16 * v133], v176 + 16, 16 * (v179 - 1 - v133));
          *((void *)v173 + 2) = v179 - 1;
          char v61 = v208;
          char v30 = v201;
          uint64_t v40 = v204;
          if (v179 <= 2) {
            goto LABEL_15;
          }
        }
      }
      unint64_t v62 = 1;
LABEL_15:
      uint64_t v57 = v217[1];
      uint64_t v44 = v191;
      if (v59 >= v57)
      {
        uint64_t v58 = v189;
        goto LABEL_131;
      }
      continue;
    }
    break;
  }
  uint64_t v63 = v200;
  if (__OFADD__(v200, v75)) {
    goto LABEL_167;
  }
  uint64_t v107 = v214;
  if (v200 + v75 < v214) {
    uint64_t v107 = v200 + v75;
  }
  if (v107 >= v200)
  {
    if (v64 == v107) {
      goto LABEL_66;
    }
    uint64_t v109 = (uint64_t)v61;
    uint64_t v110 = (uint64_t)v98;
    int v190 = v60;
    uint64_t v111 = *(void *)(v80 + 72);
    uint64_t v215 = v111 * (v64 - 1);
    uint64_t v209 = v111;
    uint64_t v112 = v64 * v111;
    uint64_t v198 = v107;
LABEL_74:
    uint64_t v116 = 0;
    uint64_t v117 = v200;
    uint64_t v210 = v112;
    uint64_t v211 = v64;
    while (1)
    {
      uint64_t v118 = *v217;
      uint64_t v214 = v112 + v116;
      uint64_t v119 = v112 + v116 + v118;
      uint64_t v114 = (uint64_t)v212;
      sub_1005271E4(v119, (uint64_t)v212, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_1005271E4(v215 + v116 + v118, v109, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v113 = v109;
      uint64_t v120 = *(int *)(v216 + 40);
      unsigned int v121 = *(_DWORD *)(v114 + v120);
      unsigned int v122 = *(_DWORD *)(v109 + v120);
      if (v121 >= v122)
      {
        sub_1005271E4(v114, v110, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v123 = (uint64_t)v207;
        sub_1005271E4(v109, (uint64_t)v207, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        if (v121 != v122)
        {
          sub_10052724C(v123, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          sub_10052724C(v110, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v113 = (uint64_t)v208;
          uint64_t v114 = (uint64_t)v212;
LABEL_72:
          uint64_t v109 = v113;
          sub_10052724C(v113, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          sub_10052724C(v114, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v112 = v210;
          uint64_t v115 = v211;
LABEL_73:
          uint64_t v64 = v115 + 1;
          v215 += v209;
          v112 += v209;
          if (v64 == v198)
          {
            uint64_t v64 = v198;
            uint64_t v108 = v206;
            unint64_t v60 = v190;
            char v30 = v201;
            uint64_t v40 = v204;
            char v61 = (char *)v109;
            if (v198 < v200) {
              goto LABEL_159;
            }
            goto LABEL_82;
          }
          goto LABEL_74;
        }
        uint64_t v124 = v216;
        int v125 = *(_DWORD *)(v110 + *(int *)(v216 + 44));
        sub_10052724C(v110, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        LODWORD(v124) = *(_DWORD *)(v123 + *(int *)(v124 + 44));
        sub_10052724C(v123, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v113 = (uint64_t)v208;
        uint64_t v114 = (uint64_t)v212;
        if (v125 >= (int)v124) {
          goto LABEL_72;
        }
      }
      uint64_t v109 = v113;
      sub_10052724C(v113, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10052724C(v114, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v126 = *v217;
      if (!*v217) {
        goto LABEL_169;
      }
      uint64_t v112 = v210;
      uint64_t v127 = v126 + v215 + v116;
      sub_100527E58(v126 + v210 + v116, v213);
      swift_arrayInitWithTakeFrontToBack();
      sub_100527E58(v213, v127);
      v116 -= v209;
      ++v117;
      uint64_t v115 = v211;
      if (v211 == v117) {
        goto LABEL_73;
      }
    }
  }
LABEL_168:
  __break(1u);
LABEL_169:
  __break(1u);
LABEL_170:
  __break(1u);
LABEL_171:
  __break(1u);
LABEL_172:
  __break(1u);
LABEL_173:
  Swift::Int result = sub_100726B80();
  __break(1u);
  return result;
}

uint64_t sub_1005236C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v52 = a4;
  uint64_t v43 = a1;
  uint64_t v51 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v7 = __chkstk_darwin(v51, v6);
  uint64_t v49 = (uint64_t)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v45 = (uint64_t)&v41 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v17 = __chkstk_darwin(v13, v16);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t result = __chkstk_darwin(v17, v20);
  uint64_t v24 = (char *)&v41 - v23;
  uint64_t v48 = a3;
  uint64_t v42 = a2;
  if (a3 != a2)
  {
    uint64_t v25 = *(void *)(v22 + 72);
    uint64_t v26 = v25 * (v48 - 1);
    uint64_t v46 = v25;
    uint64_t v53 = v25 * v48;
    uint64_t v44 = (char *)&v41 - v23;
LABEL_7:
    uint64_t v27 = 0;
    uint64_t v28 = v43;
    uint64_t v47 = v26;
    while (1)
    {
      uint64_t v29 = *v52;
      uint64_t v50 = v53 + v27;
      sub_1005271E4(v53 + v27 + v29, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_1005271E4(v26 + v27 + v29, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v30 = *(int *)(v51 + 40);
      unsigned int v31 = *(_DWORD *)&v24[v30];
      unsigned int v32 = *(_DWORD *)&v19[v30];
      if (v31 >= v32)
      {
        sub_1005271E4((uint64_t)v24, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v33 = v19;
        uint64_t v34 = (uint64_t)v19;
        uint64_t v35 = (uint64_t)v15;
        uint64_t v36 = v45;
        sub_1005271E4(v34, v45, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        if (v31 != v32)
        {
          sub_10052724C(v36, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          sub_10052724C(v35, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v15 = (char *)v35;
          uint64_t v19 = v33;
          uint64_t v24 = v44;
LABEL_5:
          sub_10052724C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t result = sub_10052724C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v26 = v47;
LABEL_6:
          v26 += v46;
          v53 += v46;
          if (++v48 == v42) {
            return result;
          }
          goto LABEL_7;
        }
        uint64_t v37 = v51;
        int v38 = *(_DWORD *)(v35 + *(int *)(v51 + 44));
        sub_10052724C(v35, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        LODWORD(v37) = *(_DWORD *)(v36 + *(int *)(v37 + 44));
        sub_10052724C(v36, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v15 = (char *)v35;
        uint64_t v19 = v33;
        uint64_t v24 = v44;
        if (v38 >= (int)v37) {
          goto LABEL_5;
        }
      }
      sub_10052724C((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t result = sub_10052724C((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v39 = *v52;
      if (!*v52) {
        break;
      }
      uint64_t v26 = v47;
      uint64_t v40 = v39 + v47 + v27;
      sub_100527E58(v39 + v53 + v27, v49);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100527E58(v49, v40);
      v27 -= v46;
      if (v48 == ++v28) {
        goto LABEL_6;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100523AAC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v88 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v11 = __chkstk_darwin(v88, v10);
  uint64_t v13 = __chkstk_darwin(v11, v12);
  uint64_t v83 = (uint64_t)&v81 - v14;
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v18 = (char *)&v81 - v17;
  __chkstk_darwin(v16, v19);
  uint64_t v22 = __chkstk_darwin((char *)&v81 - v20, v21);
  uint64_t v24 = __chkstk_darwin(v22, (char *)&v81 - v23);
  uint64_t v26 = (char *)&v81 - v25;
  uint64_t v28 = __chkstk_darwin(v24, v27);
  uint64_t v30 = (char *)&v81 - v29;
  uint64_t v32 = __chkstk_darwin(v28, v31);
  uint64_t v36 = (char *)&v81 - v35;
  uint64_t v85 = *(void *)(v37 + 72);
  if (!v85)
  {
    __break(1u);
LABEL_76:
    __break(1u);
LABEL_77:
    __break(1u);
    goto LABEL_78;
  }
  if (a2 - a1 == 0x8000000000000000 && v85 == -1) {
    goto LABEL_76;
  }
  int64_t v38 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v85 == -1) {
    goto LABEL_77;
  }
  uint64_t v39 = (uint64_t)(a2 - a1) / v85;
  unint64_t v91 = a1;
  unint64_t v90 = a4;
  uint64_t v40 = v38 / v85;
  uint64_t v81 = v5;
  if (v39 >= v38 / v85)
  {
    if (v40 < 0) {
      goto LABEL_78;
    }
    uint64_t v42 = v85;
    uint64_t v43 = v40 * v85;
    uint64_t v82 = v34;
    uint64_t v86 = v18;
    unint64_t v87 = v32;
    if (a4 < a2 || a2 + v43 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a2)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v58 = a4 + v43;
    unint64_t v89 = a4 + v43;
    unint64_t v91 = a2;
    if (v43 < 1 || a1 >= a2)
    {
LABEL_74:
      sub_10052437C(&v91, &v90, (uint64_t *)&v89);
      return 1;
    }
    uint64_t v60 = -v42;
    unint64_t v84 = a1;
    while (1)
    {
      unint64_t v61 = v87;
      sub_1005271E4(v58 + v60, v87, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      unint64_t v62 = a2 + v60;
      uint64_t v63 = (uint64_t)v86;
      sub_1005271E4(a2 + v60, (uint64_t)v86, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v64 = v63;
      uint64_t v65 = *(int *)(v88 + 40);
      unsigned int v66 = *(_DWORD *)(v61 + v65);
      unsigned int v67 = *(_DWORD *)(v64 + v65);
      if (v66 >= v67) {
        break;
      }
      char v68 = 1;
LABEL_59:
      unint64_t v77 = a3 + v60;
      sub_10052724C(v64, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10052724C(v87, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      if (v68)
      {
        if (a3 < a2 || v77 >= a2)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v78 = v84;
        }
        else
        {
          unint64_t v78 = v84;
          if (a3 != a2) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        v91 += v60;
      }
      else
      {
        unint64_t v79 = v89;
        v89 += v60;
        if (a3 < v79 || v77 >= v79)
        {
          swift_arrayInitWithTakeFrontToBack();
          unint64_t v62 = a2;
          unint64_t v78 = v84;
        }
        else
        {
          unint64_t v78 = v84;
          if (a3 != v79) {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v62 = a2;
        }
      }
      unint64_t v58 = v89;
      if (v89 > a4)
      {
        a2 = v62;
        a3 += v60;
        if (v62 > v78) {
          continue;
        }
      }
      goto LABEL_74;
    }
    uint64_t v85 = a3;
    uint64_t v69 = v64;
    uint64_t v70 = v61;
    uint64_t v71 = v83;
    sub_1005271E4(v70, v83, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v72 = v69;
    uint64_t v73 = v71;
    uint64_t v74 = v82;
    sub_1005271E4(v72, v82, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    if (v66 == v67)
    {
      uint64_t v75 = v88;
      int v76 = *(_DWORD *)(v73 + *(int *)(v88 + 44));
      sub_10052724C(v73, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      LODWORD(v75) = *(_DWORD *)(v74 + *(int *)(v75 + 44));
      sub_10052724C(v74, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      if (v76 < (int)v75)
      {
        char v68 = 1;
LABEL_58:
        a3 = v85;
        uint64_t v64 = (uint64_t)v86;
        goto LABEL_59;
      }
    }
    else
    {
      sub_10052724C(v74, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10052724C(v73, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    }
    char v68 = 0;
    goto LABEL_58;
  }
  if ((v39 & 0x8000000000000000) == 0)
  {
    uint64_t v41 = v39 * v85;
    uint64_t v86 = (char *)v33;
    if (a4 < a1 || a1 + v41 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v87 = a4 + v41;
    unint64_t v89 = a4 + v41;
    BOOL v44 = v41 < 1 || a2 >= a3;
    uint64_t v45 = (uint64_t)v26;
    uint64_t v46 = v85;
    if (!v44)
    {
      while (1)
      {
        sub_1005271E4(a2, (uint64_t)v36, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        sub_1005271E4(a4, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v47 = *(int *)(v88 + 40);
        unsigned int v48 = *(_DWORD *)&v36[v47];
        unsigned int v49 = *(_DWORD *)&v30[v47];
        if (v48 >= v49)
        {
          sub_1005271E4((uint64_t)v36, v45, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v53 = v45;
          uint64_t v54 = (uint64_t)v86;
          sub_1005271E4((uint64_t)v30, (uint64_t)v86, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          if (v48 != v49)
          {
            sub_10052724C(v54, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            sub_10052724C(v53, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            uint64_t v45 = v53;
            uint64_t v46 = v85;
LABEL_35:
            sub_10052724C((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            sub_10052724C((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            unint64_t v50 = v91;
            unint64_t v57 = v90 + v46;
            if (v91 < v90 || v91 >= v57)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v91 != v90)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v90 = v57;
            unint64_t v51 = a2;
            goto LABEL_42;
          }
          uint64_t v55 = v88;
          int v56 = *(_DWORD *)(v53 + *(int *)(v88 + 44));
          sub_10052724C(v53, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          LODWORD(v55) = *(_DWORD *)(v54 + *(int *)(v55 + 44));
          sub_10052724C(v54, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v45 = v53;
          uint64_t v46 = v85;
          if (v56 >= (int)v55) {
            goto LABEL_35;
          }
        }
        sub_10052724C((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        sub_10052724C((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        unint64_t v50 = v91;
        unint64_t v51 = a2 + v46;
        if (v91 < a2 || v91 >= v51)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v91 == a2)
        {
          unint64_t v50 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_42:
        unint64_t v91 = v50 + v46;
        a4 = v90;
        if (v90 < v87)
        {
          a2 = v51;
          if (v51 < a3) {
            continue;
          }
        }
        goto LABEL_74;
      }
    }
    goto LABEL_74;
  }
LABEL_78:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

char *sub_100524280(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100431F80(&qword_100A478C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_10052437C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_100726BF0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1005244BC(uint64_t a1)
{
  return sub_100524280(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1005244D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10045C63C(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_100525578();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_100725D30();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
    uint64_t v20 = *(void *)(v13 - 8);
    sub_100527E58(v12 + *(void *)(v20 + 72) * v6, a2);
    sub_100524E30(v6, v9);
    uint64_t *v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_100524688(uint64_t a1, int a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v51 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v56 = (uint64_t)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100725D30();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v53 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v2;
  sub_100431F80(&qword_100A478D8);
  int v52 = a2;
  uint64_t v13 = v12;
  uint64_t v14 = sub_100726BC0();
  uint64_t v15 = v14;
  if (!*(void *)(v13 + 16)) {
    goto LABEL_41;
  }
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = *(void *)(v13 + 64);
  unsigned int v48 = (void *)(v13 + 64);
  if (v16 < 64) {
    uint64_t v18 = ~(-1 << v16);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v17;
  uint64_t v46 = v2;
  int64_t v47 = (unint64_t)(v16 + 63) >> 6;
  unsigned int v49 = (void (**)(char *, unint64_t, uint64_t))(v9 + 16);
  uint64_t v54 = (void (**)(char *, unint64_t, uint64_t))(v9 + 32);
  uint64_t v55 = v8;
  uint64_t v20 = v14 + 64;
  uint64_t result = swift_retain();
  int64_t v22 = 0;
  uint64_t v50 = v13;
  uint64_t v23 = v53;
  while (1)
  {
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v26 = v25 | (v22 << 6);
      goto LABEL_22;
    }
    int64_t v27 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v27 >= v47) {
      break;
    }
    uint64_t v28 = v48;
    unint64_t v29 = v48[v27];
    ++v22;
    if (!v29)
    {
      int64_t v22 = v27 + 1;
      if (v27 + 1 >= v47) {
        goto LABEL_34;
      }
      unint64_t v29 = v48[v22];
      if (!v29)
      {
        int64_t v30 = v27 + 2;
        if (v30 >= v47)
        {
LABEL_34:
          swift_release();
          unint64_t v3 = v46;
          if ((v52 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v29 = v48[v30];
        if (!v29)
        {
          while (1)
          {
            int64_t v22 = v30 + 1;
            if (__OFADD__(v30, 1)) {
              goto LABEL_43;
            }
            if (v22 >= v47) {
              goto LABEL_34;
            }
            unint64_t v29 = v48[v22];
            ++v30;
            if (v29) {
              goto LABEL_21;
            }
          }
        }
        int64_t v22 = v30;
      }
    }
LABEL_21:
    unint64_t v19 = (v29 - 1) & v29;
    unint64_t v26 = __clz(__rbit64(v29)) + (v22 << 6);
    uint64_t v23 = v53;
LABEL_22:
    uint64_t v31 = v9;
    uint64_t v32 = *(void *)(v9 + 72);
    unint64_t v33 = *(void *)(v13 + 48) + v32 * v26;
    if (v52)
    {
      (*v54)(v23, v33, v55);
      uint64_t v34 = *(void *)(v13 + 56);
      uint64_t v35 = *(void *)(v51 + 72);
      sub_100527E58(v34 + v35 * v26, v56);
    }
    else
    {
      (*v49)(v23, v33, v55);
      uint64_t v36 = *(void *)(v13 + 56);
      uint64_t v35 = *(void *)(v51 + 72);
      sub_1005271E4(v36 + v35 * v26, v56, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    }
    sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_1007263D0();
    uint64_t v37 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v38 = result & ~v37;
    unint64_t v39 = v38 >> 6;
    if (((-1 << v38) & ~*(void *)(v20 + 8 * (v38 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v38) & ~*(void *)(v20 + 8 * (v38 >> 6)))) | v38 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v23 = v53;
    }
    else
    {
      char v40 = 0;
      unint64_t v41 = (unint64_t)(63 - v37) >> 6;
      uint64_t v23 = v53;
      do
      {
        if (++v39 == v41 && (v40 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v42 = v39 == v41;
        if (v39 == v41) {
          unint64_t v39 = 0;
        }
        v40 |= v42;
        uint64_t v43 = *(void *)(v20 + 8 * v39);
      }
      while (v43 == -1);
      unint64_t v24 = __clz(__rbit64(~v43)) + (v39 << 6);
    }
    *(void *)(v20 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    (*v54)((char *)(*(void *)(v15 + 48) + v32 * v24), (unint64_t)v23, v55);
    uint64_t result = sub_100527E58(v56, *(void *)(v15 + 56) + v35 * v24);
    ++*(void *)(v15 + 16);
    uint64_t v13 = v50;
    uint64_t v9 = v31;
  }
  swift_release();
  unint64_t v3 = v46;
  uint64_t v28 = v48;
  if ((v52 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v44 = 1 << *(unsigned char *)(v13 + 32);
  if (v44 >= 64) {
    bzero(v28, ((unint64_t)(v44 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v28 = -1 << v44;
  }
  *(void *)(v13 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v3 = v15;
  return result;
}

uint64_t sub_100524B78(uint64_t a1, char a2)
{
  unint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A478F0);
  uint64_t result = sub_100726BC0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  *uint64_t v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_100726DC0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

unint64_t sub_100524E30(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100725D30();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4, v6);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = a2 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v12 = (a1 + 1) & ~v11;
  if (((1 << v12) & *(void *)(a2 + 64 + 8 * (v12 >> 6))) != 0)
  {
    uint64_t v13 = ~v11;
    unint64_t result = sub_1007268A0();
    if ((*(void *)(v10 + 8 * (v12 >> 6)) & (1 << v12)) != 0)
    {
      unint64_t v40 = (result + 1) & v13;
      unint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v14 = v5 + 16;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v41 = v14;
      unint64_t v38 = (uint64_t (**)(char *, uint64_t))(v14 - 8);
      unint64_t v39 = v15;
      uint64_t v37 = v13;
      do
      {
        uint64_t v17 = v10;
        uint64_t v18 = v16;
        int64_t v19 = v16 * v12;
        v39(v9, *(void *)(a2 + 48) + v16 * v12, v4);
        sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v20 = sub_1007263D0();
        unint64_t result = (*v38)(v9, v4);
        unint64_t v21 = v20 & v13;
        if (a1 >= (uint64_t)v40)
        {
          if (v21 >= v40 && a1 >= (uint64_t)v21)
          {
LABEL_16:
            if (v18 * a1 < v19
              || *(void *)(a2 + 48) + v18 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v19 + v18))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v18 * a1 != v19)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v24 = *(void *)(a2 + 56);
            uint64_t v25 = *(void *)(*(void *)(type metadata accessor for IDSGroupEncryptionKeyMaterialContent() - 8) + 72);
            int64_t v26 = v25 * a1;
            unint64_t result = v24 + v25 * a1;
            int64_t v27 = v25 * v12;
            unint64_t v28 = v24 + v25 * v12 + v25;
            BOOL v29 = v26 < v27 || result >= v28;
            uint64_t v10 = v17;
            if (v29)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v12;
              uint64_t v13 = v37;
            }
            else
            {
              a1 = v12;
              uint64_t v13 = v37;
              if (v26 != v27)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v12;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v21 >= v40 || a1 >= (uint64_t)v21)
        {
          goto LABEL_16;
        }
        uint64_t v10 = v17;
LABEL_5:
        unint64_t v12 = (v12 + 1) & v13;
        uint64_t v16 = v18;
      }
      while (((*(void *)(v10 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) != 0);
    }
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v30;
    uint64_t v32 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v30 = (uint64_t *)(v10 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v32 = *v30;
    uint64_t v31 = (-1 << a1) - 1;
  }
  *uint64_t v30 = v32 & v31;
  uint64_t v33 = *(void *)(a2 + 16);
  BOOL v34 = __OFSUB__(v33, 1);
  uint64_t v35 = v33 - 1;
  if (v34)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v35;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_100525178(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_100725D30();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  unint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*v3;
  unint64_t v15 = sub_10045C63C(a2);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v19 = v14;
  uint64_t v20 = v13[3];
  if (v20 < v18 || (a3 & 1) == 0)
  {
    if (v20 >= v18 && (a3 & 1) == 0)
    {
      sub_100525578();
      goto LABEL_7;
    }
    sub_100524688(v18, a3 & 1);
    unint64_t v25 = sub_10045C63C(a2);
    if ((v19 & 1) == (v26 & 1))
    {
      unint64_t v15 = v25;
      unint64_t v21 = *v4;
      if (v19) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a2, v8);
      return sub_10052549C(v15, (uint64_t)v12, a1, v21);
    }
LABEL_15:
    uint64_t result = sub_100726D40();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v21 = *v4;
  if ((v19 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v22 = v21[7];
  uint64_t v23 = v22
      + *(void *)(*(void *)(type metadata accessor for IDSGroupEncryptionKeyMaterialContent() - 8) + 72) * v15;

  return sub_100527DF4(a1, v23);
}

uint64_t sub_100525360(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10045C7FC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1005258A4();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      void v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_100524B78(result, a3 & 1);
  uint64_t result = sub_10045C7FC(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_100726D40();
  __break(1u);
  return result;
}

uint64_t sub_10052549C(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_100725D30();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t result = sub_100527E58(a3, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

void *sub_100525578()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v31 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100725D30();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100431F80(&qword_100A478D8);
  char v26 = v0;
  uint64_t v10 = *v0;
  uint64_t v11 = sub_100726BB0();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *char v26 = v12;
    return result;
  }
  uint64_t result = (void *)(v11 + 64);
  unint64_t v14 = (unint64_t)((1 << *(unsigned char *)(v12 + 32)) + 63) >> 6;
  if (v12 != v10 || (unint64_t)result >= v10 + 64 + 8 * v14) {
    uint64_t result = memmove(result, (const void *)(v10 + 64), 8 * v14);
  }
  int64_t v15 = 0;
  *(void *)(v12 + 16) = *(void *)(v10 + 16);
  uint64_t v16 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v10 + 64);
  uint64_t v27 = v10 + 64;
  int64_t v28 = (unint64_t)(v16 + 63) >> 6;
  uint64_t v29 = v6 + 32;
  uint64_t v30 = v6 + 16;
  while (1)
  {
    if (v18)
    {
      unint64_t v19 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v20 = v19 | (v15 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v15;
    if (!v24)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v15);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v20 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_9:
    unint64_t v21 = *(void *)(v6 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v9, *(void *)(v10 + 48) + v21, v5);
    unint64_t v22 = *(void *)(v31 + 72) * v20;
    sub_1005271E4(*(void *)(v10 + 56) + v22, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(void *)(v12 + 48) + v21, v9, v5);
    uint64_t result = (void *)sub_100527E58((uint64_t)v4, *(void *)(v12 + 56) + v22);
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v28) {
    goto LABEL_23;
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v15 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v15 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v15);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1005258A4()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A478F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_100525A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_100725D30();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  int64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  uint64_t v32 = a1;
  uint64_t v11 = sub_1007263D0();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v10;
  uint64_t v31 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v27 = v2;
    uint64_t v28 = v6;
    uint64_t v29 = a2;
    uint64_t v30 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v16 = v6 + 16;
    unint64_t v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    while (1)
    {
      uint64_t v19 = v14;
      v15(v9, *(void *)(v14 + 48) + v18 * v13, v5);
      sub_100528654(&qword_100A45458, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v20 = sub_100726410();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v9, v5);
      if (v20) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v14 = v19;
      if (((*(void *)(v31 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v21 = 1;
        uint64_t v6 = v28;
        a2 = v29;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v22 = v27;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v22;
    uint64_t v33 = *v22;
    *unint64_t v22 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_100521D64();
      uint64_t v24 = v33;
    }
    uint64_t v6 = v28;
    a2 = v29;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 32))(v29, *(void *)(v24 + 48) + v18 * v13, v5);
    sub_100525D28(v13);
    *unint64_t v22 = v33;
    swift_bridgeObjectRelease();
    uint64_t v21 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v21 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v21, 1, v5);
}

uint64_t sub_100525D28(int64_t a1)
{
  uint64_t v3 = sub_100725D30();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v9 = *v1 + 56;
  uint64_t v10 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(v9 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v32 = v1;
    uint64_t v12 = ~v10;
    uint64_t v36 = result;
    swift_retain();
    uint64_t v13 = sub_1007268A0();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v34 = (v13 + 1) & v12;
      unint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v14 = v4 + 16;
      uint64_t v33 = v15;
      uint64_t v16 = *(void *)(v14 + 56);
      uint64_t v35 = v14;
      uint64_t v17 = (void (**)(char *, uint64_t))(v14 - 8);
      uint64_t v18 = v36;
      do
      {
        uint64_t v19 = v9;
        uint64_t v20 = v16;
        int64_t v21 = v16 * v11;
        v33(v7, *(void *)(v18 + 48) + v16 * v11, v3);
        sub_100528654(&qword_100A44F48, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v22 = sub_1007263D0();
        (*v17)(v7, v3);
        unint64_t v23 = v22 & v12;
        if (a1 >= (uint64_t)v34)
        {
          if (v23 < v34 || a1 < (uint64_t)v23)
          {
LABEL_4:
            uint64_t v9 = v19;
            uint64_t v16 = v20;
            uint64_t v18 = v36;
            goto LABEL_5;
          }
        }
        else if (v23 < v34 && a1 < (uint64_t)v23)
        {
          goto LABEL_4;
        }
        uint64_t v18 = v36;
        int64_t v26 = v20 * a1;
        uint64_t v9 = v19;
        if (v20 * a1 < v21
          || (uint64_t v16 = v20, *(void *)(v36 + 48) + v20 * a1 >= (unint64_t)(*(void *)(v36 + 48) + v21 + v20)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v11;
        if (v26 != v21)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v18 = v36;
          uint64_t v16 = v20;
          a1 = v11;
        }
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v32;
  }
  else
  {
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v27 = *v1;
  uint64_t v28 = *(void *)(*v1 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v27 + 16) = v30;
    ++*(_DWORD *)(v27 + 36);
  }
  return result;
}

uint64_t sub_100526044()
{
  uint64_t v1 = sub_100725D30();
  uint64_t v31 = *(void *)(v1 - 8);
  uint64_t v3 = __chkstk_darwin(v1, v2);
  uint64_t v35 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v3, v5);
  unint64_t v34 = (char *)&v27 - v7;
  uint64_t v8 = (char *)*v0;
  unint64_t v9 = *(void *)(*v0 + 16);
  unint64_t v10 = v9 - 2;
  if (v9 >= 2)
  {
    unint64_t v11 = 0;
    unint64_t v28 = v9 - 2;
    BOOL v29 = v0;
    uint64_t v30 = (uint64_t (**)(unint64_t, char *, uint64_t))(v31 + 40);
    while (1)
    {
      unint64_t v36 = 0;
      uint64_t result = swift_stdlib_random();
      uint64_t v13 = (v36 * (unsigned __int128)v9) >> 64;
      if (v9 > v36 * v9)
      {
        unint64_t v14 = -(uint64_t)v9 % v9;
        if (v14 > v36 * v9)
        {
          do
          {
            unint64_t v36 = 0;
            uint64_t result = swift_stdlib_random();
          }
          while (v14 > v36 * v9);
          uint64_t v13 = (v36 * (unsigned __int128)v9) >> 64;
        }
      }
      unint64_t v15 = v11 + v13;
      if (__OFADD__(v11, v13)) {
        break;
      }
      if (v11 != v15)
      {
        unint64_t v16 = *((void *)v8 + 2);
        if (v11 >= v16) {
          goto LABEL_20;
        }
        uint64_t v17 = v1;
        unint64_t v33 = (*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
        uint64_t v18 = &v8[v33];
        uint64_t v19 = *(void *)(v31 + 72);
        uint64_t v32 = v19 * v11;
        uint64_t v20 = *(uint64_t (**)(char *, char *, uint64_t))(v31 + 16);
        uint64_t result = v20(v34, &v8[v33 + v19 * v11], v17);
        if (v15 >= v16) {
          goto LABEL_21;
        }
        uint64_t v21 = v19 * v15;
        v20(v35, &v18[v19 * v15], v17);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v23 = v29;
        *BOOL v29 = (uint64_t)v8;
        uint64_t v1 = v17;
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v24 = v30;
          uint64_t result = (uint64_t)v8;
        }
        else
        {
          uint64_t result = sub_100526FE4(v8);
          *unint64_t v23 = result;
          uint64_t v24 = v30;
        }
        unint64_t v25 = v33;
        if (v11 >= *(void *)(result + 16)) {
          goto LABEL_22;
        }
        int64_t v26 = *v24;
        uint64_t result = (*v24)(result + v33 + v32, v35, v1);
        if (v15 >= *(void *)(*v23 + 16)) {
          goto LABEL_23;
        }
        uint64_t result = v26(*v23 + v25 + v21, v34, v1);
        uint64_t v8 = (char *)*v23;
        unint64_t v10 = v28;
      }
      --v9;
      if (v11++ == v10) {
        return result;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
LABEL_23:
    __break(1u);
  }
  return result;
}

uint64_t sub_1005262FC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v35 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  unint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_100431F80(&qword_100A44D28);
  uint64_t result = sub_1007269E0();
  uint64_t v12 = result;
  unint64_t v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 56;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_40;
      }
      if (v19 >= v34)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      unint64_t v20 = v33[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v34) {
          goto LABEL_37;
        }
        unint64_t v20 = v33[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v34) {
            goto LABEL_37;
          }
          unint64_t v20 = v33[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v34) {
              goto LABEL_37;
            }
            unint64_t v20 = v33[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v15 >= v34) {
                  goto LABEL_37;
                }
                unint64_t v20 = v33[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = *(void *)(v35 + 72);
    sub_1005271E4(*(void *)(a4 + 48) + v22 * v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_100528654(&qword_100A44D18, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t result = sub_1007263D0();
    uint64_t v23 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v16 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v16 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v16 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v16 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = sub_100527E58((uint64_t)v11, *(void *)(v12 + 48) + v26 * v22);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100526648(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100526684(a1, a2, a3, (void *)*v3, &qword_100A478D0, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100526684(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  void v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  unint64_t v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_1005268CC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8 - 8, v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11, v14);
  size_t v17 = (char *)&v32 - v16;
  uint64_t v37 = a4;
  uint64_t v20 = *(void *)(a4 + 56);
  uint64_t v19 = a4 + 56;
  uint64_t v18 = v20;
  uint64_t v21 = -1 << *(unsigned char *)(v19 - 24);
  if (-v21 < 64) {
    uint64_t v22 = ~(-1 << -(char)v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v23 = v22 & v18;
  if (!a2)
  {
    int64_t v24 = 0;
    a3 = 0;
LABEL_38:
    *a1 = v37;
    a1[1] = v19;
    a1[2] = ~v21;
    a1[3] = v24;
    a1[4] = v23;
    return a3;
  }
  if (!a3)
  {
    int64_t v24 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v34 = -1 << *(unsigned char *)(v19 - 24);
  uint64_t v35 = a1;
  int64_t v24 = 0;
  uint64_t v25 = 0;
  int64_t v36 = (unint64_t)(63 - v21) >> 6;
  int64_t v33 = v36 - 1;
  if (!v23) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v26 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  unint64_t v27 = v26 | (v24 << 6);
  while (1)
  {
    ++v25;
    uint64_t v31 = *(void *)(v9 + 72);
    sub_1005271E4(*(void *)(v37 + 48) + v31 * v27, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_100527E58((uint64_t)v13, (uint64_t)v17);
    uint64_t result = sub_100527E58((uint64_t)v17, a2);
    if (v25 == a3) {
      goto LABEL_37;
    }
    a2 += v31;
    if (v23) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v28 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v28 >= v36) {
      goto LABEL_32;
    }
    unint64_t v29 = *(void *)(v19 + 8 * v28);
    if (!v29) {
      break;
    }
LABEL_18:
    unint64_t v23 = (v29 - 1) & v29;
    unint64_t v27 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v24 = v28;
  }
  v24 += 2;
  if (v28 + 1 >= v36)
  {
    unint64_t v23 = 0;
    int64_t v24 = v28;
    goto LABEL_36;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v24);
  if (v29) {
    goto LABEL_14;
  }
  int64_t v30 = v28 + 2;
  if (v28 + 2 >= v36) {
    goto LABEL_32;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v30);
  if (v29) {
    goto LABEL_17;
  }
  int64_t v24 = v28 + 3;
  if (v28 + 3 >= v36)
  {
    unint64_t v23 = 0;
    int64_t v24 = v28 + 2;
    goto LABEL_36;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v24);
  if (v29)
  {
LABEL_14:
    int64_t v28 = v24;
    goto LABEL_18;
  }
  int64_t v30 = v28 + 4;
  if (v28 + 4 >= v36)
  {
LABEL_32:
    unint64_t v23 = 0;
LABEL_36:
    a3 = v25;
LABEL_37:
    uint64_t v21 = v34;
    a1 = v35;
    goto LABEL_38;
  }
  unint64_t v29 = *(void *)(v19 + 8 * v30);
  if (v29)
  {
LABEL_17:
    int64_t v28 = v30;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v36)
    {
      unint64_t v23 = 0;
      int64_t v24 = v33;
      goto LABEL_36;
    }
    unint64_t v29 = *(void *)(v19 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_100526BAC(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100431F80(&qword_100A44D30);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100725D30();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t result = __chkstk_darwin(v12, v13);
  BOOL v42 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = a4;
  uint64_t v17 = a4 + 56;
  uint64_t v16 = *(void *)(a4 + 56);
  uint64_t v34 = -1 << *(unsigned char *)(a4 + 32);
  if (-v34 < 64) {
    uint64_t v18 = ~(-1 << -(char)v34);
  }
  else {
    uint64_t v18 = -1;
  }
  unint64_t v19 = v18 & v16;
  if (!a2)
  {
    int64_t v20 = 0;
    a3 = 0;
LABEL_39:
    uint64_t v30 = ~v34;
    *a1 = v44;
    a1[1] = v17;
    a1[2] = v30;
    a1[3] = v20;
    a1[4] = v19;
    return a3;
  }
  if (!a3)
  {
    int64_t v20 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v38 = a3;
  int64_t v20 = 0;
  a3 = 0;
  uint64_t v21 = v42;
  uint64_t v40 = v43 + 16;
  uint64_t v41 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56);
  uint64_t v39 = v43 + 48;
  uint64_t v37 = (uint64_t (**)(char *, char *, uint64_t))(v43 + 32);
  uint64_t v35 = v17;
  int64_t v36 = (unint64_t)(63 - v34) >> 6;
  int64_t v32 = v36 - 1;
  int64_t v33 = a1;
  if (!v19) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v22 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  unint64_t v23 = v22 | (v20 << 6);
  while (1)
  {
    uint64_t v27 = v43;
    uint64_t v28 = *(void *)(v43 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v43 + 16))(v11, *(void *)(v44 + 48) + v28 * v23, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v11, 0, 1, v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v11, 1, v12) == 1)
    {
      uint64_t v17 = v35;
      goto LABEL_38;
    }
    ++a3;
    unint64_t v29 = *v37;
    (*v37)(v21, v11, v12);
    uint64_t result = v29(a2, v21, v12);
    if (a3 == v38)
    {
      a3 = v38;
      a1 = v33;
      uint64_t v17 = v35;
      goto LABEL_39;
    }
    a2 += v28;
    if (v19) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    uint64_t v17 = v35;
    if (v24 >= v36) {
      goto LABEL_37;
    }
    unint64_t v25 = *(void *)(v35 + 8 * v24);
    if (!v25)
    {
      int64_t v26 = v20 + 2;
      ++v20;
      if (v24 + 1 >= v36) {
        goto LABEL_37;
      }
      unint64_t v25 = *(void *)(v35 + 8 * v26);
      if (v25) {
        goto LABEL_14;
      }
      int64_t v20 = v24 + 1;
      if (v24 + 2 >= v36) {
        goto LABEL_37;
      }
      unint64_t v25 = *(void *)(v35 + 8 * (v24 + 2));
      if (v25)
      {
        v24 += 2;
      }
      else
      {
        int64_t v20 = v24 + 2;
        if (v24 + 3 >= v36) {
          goto LABEL_37;
        }
        unint64_t v25 = *(void *)(v35 + 8 * (v24 + 3));
        if (!v25)
        {
          int64_t v26 = v24 + 4;
          int64_t v20 = v24 + 3;
          if (v24 + 4 < v36)
          {
            unint64_t v25 = *(void *)(v35 + 8 * v26);
            if (!v25)
            {
              while (1)
              {
                int64_t v24 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_42;
                }
                if (v24 >= v36)
                {
                  int64_t v20 = v32;
                  goto LABEL_37;
                }
                unint64_t v25 = *(void *)(v35 + 8 * v24);
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
LABEL_14:
            int64_t v24 = v26;
            goto LABEL_21;
          }
LABEL_37:
          (*v41)(v11, 1, 1, v12);
          unint64_t v19 = 0;
LABEL_38:
          sub_10044C150((uint64_t)v11, &qword_100A44D30);
          a1 = v33;
          goto LABEL_39;
        }
        v24 += 3;
      }
    }
LABEL_21:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v24 << 6);
    int64_t v20 = v24;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_100526FA0(void *a1)
{
  return sub_100526684(0, a1[2], 0, a1, &qword_100A478D0, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
}

uint64_t sub_100526FE4(void *a1)
{
  return sub_100526684(0, a1[2], 0, a1, &qword_100A478E8, (uint64_t (*)(void))&type metadata accessor for UUID);
}

unint64_t sub_100527028(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100431F80(&qword_100A478F0);
  uint64_t v3 = (void *)sub_100726BE0();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_10045C7FC(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10045C7FC(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for IDSGroupEncryptionKeyMaterialCache2.KMCacheState(uint64_t a1)
{
  return sub_100440FD0(a1, qword_100A521D0);
}

uint64_t sub_100527148@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_100519478(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100527174@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1005196D0(a1, *(void *)(v2 + 24));
  *a2 = result & 1;
  return result;
}

uint64_t sub_1005271B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10051A4D4(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1005271E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10052724C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1005272AC@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_10051BB90(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1005272D8(uint64_t a1)
{
  return sub_10051C3D8(a1, *(void *)(v1 + 16));
}

unint64_t sub_100527304@<X0>(unint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(result + 8);
  if (*(void *)(v5 + 16) && (uint64_t result = sub_10045C7FC(*(void *)(v3 + 16)), (v6 & 1) != 0))
  {
    *a2 = *(void *)(*(void *)(v5 + 56) + 8 * result);
    return swift_bridgeObjectRetain();
  }
  else
  {
    *a2 = &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_100527370(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  BOOL v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9, v12);
  char v15 = (char *)&v20 - v14;
  int64_t v16 = a3 >> 1;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_100528654(&qword_100A44D18, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t result = sub_100726660();
  uint64_t v21 = result;
  uint64_t v17 = v16 - a2;
  if (v16 == a2) {
    return result;
  }
  if (v16 <= a2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v18 = *(void *)(v7 + 72);
  uint64_t v19 = a1 + v18 * a2;
  do
  {
    sub_1005271E4(v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_10043F7EC((uint64_t)v15, (uint64_t)v11);
    sub_10052724C((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    v19 += v18;
    --v17;
  }
  while (v17);
  return v21;
}

uint64_t sub_100527510(uint64_t *a1)
{
  return sub_10051BFD4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_100527544(uint64_t a1)
{
  return sub_10051C808(a1, *(void *)(v1 + 16));
}

uint64_t sub_100527570@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1005185F8(*(void *)(v2 + 16), *(void *)(a1 + 24));
  *a2 = result & 1;
  return result;
}

uint64_t sub_1005275B0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10051F148(a1, v2, a2);
}

uint64_t sub_1005275DC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_10051FC4C(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1005275F8()
{
  return type metadata accessor for IDSGroupEncryptionKeyMaterialCache2(0);
}

uint64_t type metadata accessor for IDSGroupEncryptionKeyMaterialCache2(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A521C0);
}

uint64_t sub_100527620()
{
  uint64_t result = sub_100725ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1005276F0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = a2[4];
    a1[3] = a2[3];
    a1[4] = v7;
    uint64_t v8 = *(int *)(a3 + 36);
    uint64_t v13 = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    uint64_t v10 = sub_100725CC0();
    BOOL v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v13, v9, v10);
  }
  return v5;
}

uint64_t sub_100527818(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = sub_100725CC0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1005278B0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  uint64_t v6 = *(int *)(a3 + 36);
  BOOL v11 = (char *)a1 + v6;
  uint64_t v7 = (char *)a2 + v6;
  uint64_t v8 = sub_100725CC0();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v11, v7, v8);
  return a1;
}

void *sub_10052798C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_100527A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(int *)(a3 + 36);
  uint64_t v6 = a1 + v5;
  uint64_t v7 = a2 + v5;
  uint64_t v8 = sub_100725CC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

void *sub_100527B04(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 36);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_100527BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100527BE4);
}

uint64_t sub_100527BE4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100725CC0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    BOOL v11 = (char *)a1 + *(int *)(a3 + 36);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100527C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100527CA8);
}

void *sub_100527CA8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100725CC0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 36);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100527D50()
{
  uint64_t result = sub_100725CC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100527DF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_100527E58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100527EBC()
{
  return sub_100520930() & 1;
}

uint64_t sub_100527EEC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  sub_100528654(&qword_100A44D18, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t result = sub_100726660();
  uint64_t v16 = result;
  if (v11)
  {
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v14 = *(void *)(v3 + 72);
    do
    {
      sub_1005271E4(v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10043F7EC((uint64_t)v10, (uint64_t)v7);
      sub_10052724C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      v13 += v14;
      --v11;
    }
    while (v11);
    return v16;
  }
  return result;
}

uint64_t sub_100528078(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a2;
  uint64_t v39 = a1;
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8, v11);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v43 = a3;
  uint64_t v44 = 0;
  int64_t v15 = 0;
  uint64_t v18 = *(void *)(a3 + 56);
  uint64_t v17 = a3 + 56;
  uint64_t v16 = v18;
  uint64_t v19 = 1 << *(unsigned char *)(v17 - 24);
  if (v19 < 64) {
    uint64_t v20 = ~(-1 << v19);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v16;
  uint64_t v40 = v17;
  int64_t v41 = (unint64_t)(v19 + 63) >> 6;
  uint64_t v22 = a4;
  uint64_t v48 = a4 + 56;
  while (1)
  {
    if (v21)
    {
      uint64_t v46 = (v21 - 1) & v21;
      int64_t v47 = v15;
      unint64_t v23 = __clz(__rbit64(v21)) | (v15 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v41) {
      goto LABEL_30;
    }
    unint64_t v25 = *(void *)(v40 + 8 * v24);
    int64_t v26 = v15 + 1;
    if (!v25)
    {
      int64_t v26 = v15 + 2;
      if (v15 + 2 >= v41) {
        goto LABEL_30;
      }
      unint64_t v25 = *(void *)(v40 + 8 * v26);
      if (!v25)
      {
        int64_t v26 = v15 + 3;
        if (v15 + 3 >= v41) {
          goto LABEL_30;
        }
        unint64_t v25 = *(void *)(v40 + 8 * v26);
        if (!v25) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v46 = (v25 - 1) & v25;
    int64_t v47 = v26;
    unint64_t v23 = __clz(__rbit64(v25)) + (v26 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v43 + 48);
    uint64_t v29 = *(void *)(v42 + 72);
    unint64_t v45 = v23;
    sub_1005271E4(v28 + v29 * v23, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    if (*(void *)(v22 + 16)
      && (sub_100528654(&qword_100A44D18, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent), uint64_t v30 = sub_1007263D0(), v31 = -1 << *(unsigned char *)(v22 + 32), v32 = v30 & ~v31, ((*(void *)(v48 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) != 0))
    {
      uint64_t v33 = ~v31;
      while (1)
      {
        sub_1005271E4(*(void *)(v22 + 48) + v32 * v29, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        sub_100528654(&qword_100A44D20, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        char v34 = sub_100726410();
        sub_10052724C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        if (v34) {
          break;
        }
        unint64_t v32 = (v32 + 1) & v33;
        if (((*(void *)(v48 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0) {
          goto LABEL_27;
        }
      }
      uint64_t result = sub_10052724C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      unint64_t v21 = v46;
      int64_t v15 = v47;
    }
    else
    {
LABEL_27:
      uint64_t result = sub_10052724C((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      *(unint64_t *)((char *)v39 + ((v45 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v45;
      BOOL v35 = __OFADD__(v44++, 1);
      unint64_t v21 = v46;
      int64_t v15 = v47;
      if (v35)
      {
        __break(1u);
LABEL_30:
        uint64_t v36 = v43;
        swift_retain();
        return sub_1005262FC(v39, v38, v44, v36);
      }
    }
  }
  uint64_t v27 = v15 + 4;
  if (v15 + 4 >= v41) {
    goto LABEL_30;
  }
  unint64_t v25 = *(void *)(v40 + 8 * v27);
  if (v25)
  {
    int64_t v26 = v15 + 4;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v26 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v26 >= v41) {
      goto LABEL_30;
    }
    unint64_t v25 = *(void *)(v40 + 8 * v26);
    ++v27;
    if (v25) {
      goto LABEL_21;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_100528488(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v10);
    bzero((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100528078((unint64_t *)((char *)&v14 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v8);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100528078((unint64_t *)v12, v7, a1, a2);
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v11;
}

uint64_t sub_100528654(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10052869C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100725D30() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_1005287F4(uint64_t a1)
{
  return sub_10051D858(a1, v1);
}

uint64_t sub_100528810(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A478F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100528878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  sub_100528984();
  char v5 = sub_100726410();
  Class isa = sub_100725B20().super.isa;
  id v7 = sub_10006D6A4(isa, *(void *)(a3 + *(int *)(v4 + 28)), (v5 & 1) == 0);

  if (v7)
  {
    uint64_t v8 = sub_100725B50();
  }
  else
  {
    sub_1005289D8();
    uint64_t v8 = swift_allocError();
    *uint64_t v9 = 1;
  }
  return v8;
}

unint64_t sub_100528984()
{
  unint64_t result = qword_100A47910;
  if (!qword_100A47910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A47910);
  }
  return result;
}

unint64_t sub_1005289D8()
{
  unint64_t result = qword_100A47918;
  if (!qword_100A47918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A47918);
  }
  return result;
}

uint64_t sub_100528A2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  Class isa = sub_100725B20().super.isa;
  id v7 = sub_10006D854(isa, a3, a4 & 1);

  if (v7)
  {
    uint64_t v8 = sub_100725B50();
  }
  else
  {
    sub_1005289D8();
    uint64_t v8 = swift_allocError();
    *uint64_t v9 = 2;
  }
  return v8;
}

uint64_t sub_100528AD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Class isa = sub_100725B20().super.isa;
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  id v6 = sub_10006DA04(isa, *(void *)(a3 + *(int *)(v5 + 28)));

  if (v6)
  {
    uint64_t v7 = sub_100725B50();
  }
  else
  {
    sub_1005289D8();
    uint64_t v7 = swift_allocError();
    *uint64_t v8 = 1;
  }
  return v7;
}

uint64_t sub_100528B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  Class isa = sub_100725B20().super.isa;
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  id v6 = sub_10006DBAC(isa, *(void *)(a3 + *(int *)(v5 + 20)));

  if (v6)
  {
    uint64_t v7 = sub_100725B50();
  }
  else
  {
    sub_1005289D8();
    uint64_t v7 = swift_allocError();
    *uint64_t v8 = 2;
  }
  return v7;
}

uint64_t sub_100528C34()
{
  return sub_100528C64((uint64_t (*)(void))sub_10006D2F4);
}

uint64_t sub_100528C4C()
{
  return sub_100528C64((uint64_t (*)(void))sub_10006D4CC);
}

uint64_t sub_100528C64(uint64_t (*a1)(void))
{
  id v1 = (id)a1(0);
  if (v1)
  {
    uint64_t v2 = sub_100725B50();
  }
  else
  {
    sub_1005289D8();
    uint64_t v2 = swift_allocError();
    unsigned char *v3 = 0;
  }
  return v2;
}

uint64_t sub_100528CF8()
{
  sub_100431F80(&qword_100A47920);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007955E0;
  *(void *)(inited + 32) = kSecAttrKeyType;
  *(void *)(inited + 40) = kSecAttrKeyTypeECSECPrimeRandom;
  *(void *)(inited + 48) = kSecAttrKeyClass;
  *(void *)(inited + 56) = kSecAttrKeyClassPublic;
  CFStringRef v1 = (id)kSecAttrKeyType;
  CFStringRef v2 = (id)kSecAttrKeyTypeECSECPrimeRandom;
  CFStringRef v3 = (id)kSecAttrKeyClass;
  CFStringRef v4 = (id)kSecAttrKeyClassPublic;
  sub_100528E5C(inited);
  type metadata accessor for CFString();
  sub_100529840(&qword_100A47928);
  v5.super.Class isa = sub_100726380().super.isa;
  swift_bridgeObjectRelease();
  Class isa = sub_100725B20().super.isa;
  uint64_t v7 = sub_10006DD54(isa, (uint64_t)v5.super.isa);

  uint64_t v8 = v7;
  if (!v7)
  {
    sub_1005289D8();
    uint64_t v8 = swift_allocError();
    *uint64_t v9 = 3;
  }

  return v8;
}

unint64_t sub_100528E5C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    CFStringRef v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A47970);
  CFStringRef v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  CFStringRef v4 = (void **)(a1 + 40);
  while (1)
  {
    NSDictionary v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_1005297A0((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

void type metadata accessor for CFString()
{
  if (!qword_100A47960)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_100A47960);
    }
  }
}

uint64_t sub_100528FC0()
{
  id v0 = [self sharedInstance];
  if (!v0) {
    __break(1u);
  }
  uint64_t v1 = v0;
  Class isa = sub_100725B20().super.isa;
  NSString v3 = sub_100726420();
  id v9 = 0;
  id v4 = [v1 publicKeySignData:isa withSignatureType:0 service:v3 priority:300 error:&v9];

  id v5 = v9;
  if (v4)
  {
    uint64_t v6 = sub_100725B50();
  }
  else
  {
    id v7 = v5;
    uint64_t v6 = sub_100725A20();

    swift_willThrow();
  }
  return v6;
}

uint64_t type metadata accessor for IDSGroupEncryptionDefaultCryptoHandler()
{
  return self;
}

id sub_100529170()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSGroupEncryptionDefaultCryptoHandler();
  return objc_msgSendSuper2(&v2, "dealloc");
}

unint64_t sub_1005291A8()
{
  unint64_t result = qword_100A47930;
  if (!qword_100A47930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A47930);
  }
  return result;
}

uint64_t sub_1005291FC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x50))();
}

uint64_t sub_100529254()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x58))();
}

uint64_t sub_1005292AC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x60))();
}

uint64_t sub_100529304()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x68))();
}

uint64_t sub_10052935C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x70))();
}

uint64_t sub_1005293B4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x78))();
}

uint64_t sub_10052940C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x80))();
}

uint64_t sub_100529464()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x88))();
}

unsigned char *storeEnumTagSinglePayload for IDSGroupEncryptionDefaultCryptoHandler.CryptoError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100529588);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionDefaultCryptoHandler.CryptoError()
{
  return &type metadata for IDSGroupEncryptionDefaultCryptoHandler.CryptoError;
}

uint64_t sub_1005295C0()
{
  return sub_100725DE0();
}

uint64_t sub_10052960C()
{
  return sub_100725DD0();
}

Swift::Int sub_100529664()
{
  return sub_100726E30();
}

uint64_t sub_1005296CC()
{
  swift_getWitnessTable();

  return sub_100725DC0();
}

uint64_t sub_100529738()
{
  return sub_100529840(&qword_100A47928);
}

uint64_t sub_10052976C()
{
  return sub_100529840(&qword_100A47968);
}

unint64_t sub_1005297A0(uint64_t a1)
{
  sub_100726DD0();
  type metadata accessor for CFString();
  sub_100529840(&qword_100A47978);
  sub_100725DD0();
  Swift::Int v2 = sub_100726E30();

  return sub_100529884(a1, v2);
}

uint64_t sub_100529840(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CFString();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100529884(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    type metadata accessor for CFString();
    unsigned int v6 = *(void **)(*(void *)(v2 + 48) + 8 * i);
    sub_100529840(&qword_100A47978);
    id v7 = v6;
    char v8 = sub_100725DC0();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v4;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v11 = sub_100725DC0();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_1005299CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = sub_100726470();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1007264A0();
  sub_100529F44(v10, 4);
  uint64_t v12 = v11;
  unint64_t v14 = v13;
  uint64_t v39 = a4;
  uint64_t v15 = sub_1007264A0();
  sub_100529F44(v15, 4);
  uint64_t v17 = v16;
  unint64_t v19 = v18;
  sub_100726460();
  uint64_t v40 = sub_100726440();
  unint64_t v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  v22(v9, v5);
  if (v21 >> 60 == 15)
  {
    sub_100442248(v17, v19);
    sub_100442248(v12, v14);
    return 0;
  }
  uint64_t v37 = v17;
  unint64_t v38 = v19;
  sub_100726460();
  uint64_t v23 = sub_100726440();
  unint64_t v25 = v24;
  v22(v9, v5);
  if (v25 >> 60 == 15)
  {
    sub_100442248(v37, v38);
    sub_100442248(v12, v14);
    sub_10044CE88(v40, v21);
    return 0;
  }
  uint64_t v27 = v12;
  uint64_t v43 = v12;
  unint64_t v44 = v14;
  unint64_t v36 = v14;
  sub_100441FD4(v12, v14);
  uint64_t v28 = v40;
  sub_100482480(v40, v21);
  sub_10049E48C(v28, v21);
  sub_10044CE88(v28, v21);
  uint64_t v29 = v43;
  unint64_t v30 = v44;
  uint64_t v41 = v43;
  unint64_t v42 = v44;
  sub_100441FD4(v43, v44);
  uint64_t v32 = v37;
  unint64_t v31 = v38;
  sub_100441FD4(v37, v38);
  sub_10049E48C(v32, v31);
  sub_100442248(v32, v31);
  sub_100442248(v29, v30);
  uint64_t v33 = v41;
  unint64_t v34 = v42;
  uint64_t v43 = v41;
  unint64_t v44 = v42;
  sub_100441FD4(v41, v42);
  sub_100482480(v23, v25);
  sub_10049E48C(v23, v25);
  sub_10044CE88(v23, v25);
  sub_100442248(v32, v31);
  sub_100442248(v27, v36);
  sub_10044CE88(v28, v21);
  sub_100442248(v33, v34);
  sub_10044CE88(v23, v25);
  return v43;
}

void sub_100529CBC(uint64_t *a1, int __c)
{
  unint64_t v2 = a1[1];
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t __b = *a1;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100529EB0((int *)&__b, __c);
      uint64_t v5 = __b;
      unint64_t v6 = v19 | 0x4000000000000000;
      goto LABEL_4;
    case 2uLL:
      uint64_t __b = *a1;
      uint64_t v19 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100725A80();
      uint64_t v7 = v19;
      uint64_t v8 = *(void *)(__b + 16);
      uint64_t v9 = *(void *)(__b + 24);
      uint64_t v10 = sub_100725910();
      if (!v10)
      {
        __break(1u);
        JUMPOUT(0x100529EA0);
      }
      uint64_t v11 = v10;
      uint64_t v12 = sub_100725940();
      uint64_t v13 = v8 - v12;
      if (__OFSUB__(v8, v12))
      {
        __break(1u);
LABEL_14:
        __break(1u);
      }
      BOOL v14 = __OFSUB__(v9, v8);
      int64_t v15 = v9 - v8;
      if (v14) {
        goto LABEL_14;
      }
      uint64_t v16 = sub_100725930();
      if (v16 >= v15) {
        size_t v17 = v15;
      }
      else {
        size_t v17 = v16;
      }
      memset((void *)(v11 + v13), __c, v17);
      *a1 = __b;
      a1[1] = v7 | 0x8000000000000000;
      return;
    case 3uLL:
      return;
    default:
      uint64_t __b = *a1;
      LOWORD(v19) = v2;
      BYTE2(v19) = BYTE2(v2);
      BYTE3(v19) = BYTE3(v2);
      BYTE4(v19) = BYTE4(v2);
      BYTE5(v19) = BYTE5(v2);
      BYTE6(v19) = BYTE6(v2);
      memset(&__b, __c, BYTE6(v2));
      uint64_t v5 = __b;
      unint64_t v6 = v19 | ((unint64_t)BYTE4(v19) << 32) | ((unint64_t)BYTE5(v19) << 40) | ((unint64_t)BYTE6(v19) << 48);
LABEL_4:
      *a1 = v5;
      a1[1] = v6;
      return;
  }
}

void sub_100529EB0(int *a1, int a2)
{
  sub_100725A90();
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  if ((int)v5 < (int)v4)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v6 = sub_100725910();
  if (!v6)
  {
LABEL_12:
    __break(1u);
    return;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_100725940();
  uint64_t v9 = v4 - v8;
  if (__OFSUB__(v4, v8))
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  int64_t v10 = v5 - v4;
  uint64_t v11 = sub_100725930();
  if (v11 >= v10) {
    size_t v12 = v10;
  }
  else {
    size_t v12 = v11;
  }

  memset((void *)(v7 + v9), a2, v12);
}

void sub_100529F44(uint64_t a1, uint64_t a2)
{
  if (a1 <= 1) {
    uint64_t v2 = 1;
  }
  else {
    uint64_t v2 = a1;
  }
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  double v6 = ceil(log2((double)v4) * 0.125);
  if ((~*(void *)&v6 & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v6 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v6 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = (uint64_t)v6;
  v14[0] = sub_10044D628(a2);
  v14[1] = v8;
  sub_100529CBC(v14, 0);
  if (__OFSUB__(a2, v7))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v9 = a2 - 1;
  if (__OFSUB__(a2, 1))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (v9 >= a2 - v7)
  {
    uint64_t v10 = -v7;
    while (1)
    {
      uint64_t v11 = a2 + v10;
      if (__OFSUB__(v9, a2 + v10)) {
        break;
      }
      if ((0xEFFFFFFFFFFFFFFFLL - v10) >> 61 != 7) {
        goto LABEL_23;
      }
      BOOL v13 = __CFADD__(v10++, 1);
      sub_100725B10();
      if (v13) {
        return;
      }
      if (__OFADD__(v11, 1))
      {
        __break(1u);
        return;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
LABEL_30:
  __break(1u);
}

uint64_t type metadata accessor for SenderKeyUtils()
{
  return self;
}

uint64_t sub_10052A108()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_10052A154(uint64_t a1)
{
  BOOL v3 = (void *)(v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_exchangeControllers);
  swift_beginAccess();
  void *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_10052A1A8())()
{
  return j__swift_endAccess;
}

uint64_t sub_10052A204()
{
  return sub_10046EF48();
}

uint64_t sub_10052A210(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_materialProvider;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_10052A27C(void *a1))(uint64_t a1, char a2)
{
  BOOL v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_materialProvider;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100455C48;
}

uint64_t sub_10052A304()
{
  return sub_10046EF48();
}

void sub_10052A310(void *a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_delegate;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
}

void (*sub_10052A378(void *a1))(id **a1, char a2)
{
  BOOL v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100462DE8;
}

id sub_10052A400(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  id v12 = sub_10052BFA0(a2, a3, a4, a5);

  return v12;
}

void sub_10052A46C()
{
  uint64_t v1 = (os_unfair_lock_s *)(*(void *)(v0
                                      + OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_lock)
                          + 16);
  os_unfair_lock_lock(v1);
  sub_100469128();
  os_unfair_lock_unlock(v1);
}

void sub_10052A4E0(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1007268E0();
    sub_1004D962C();
    sub_10052C804((unint64_t *)&qword_100A48110, (void (*)(uint64_t))sub_1004D962C);
    sub_100726680();
    unint64_t v1 = (unint64_t)v17[1];
    uint64_t v16 = v17[2];
    uint64_t v2 = (uint64_t)v17[3];
    id v3 = v17[4];
    unint64_t v4 = (unint64_t)v17[5];
  }
  else
  {
    id v3 = 0;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = (void *)(a1 + 56);
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
  }
  int64_t v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v9 = (v4 - 1) & v4;
      unint64_t v10 = __clz(__rbit64(v4)) | ((void)v3 << 6);
      id v11 = (char *)v3;
      goto LABEL_29;
    }
    uint64_t v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v13 >= v8) {
      goto LABEL_32;
    }
    unint64_t v14 = v16[v13];
    id v11 = (char *)v3 + 1;
    if (!v14)
    {
      id v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8) {
        goto LABEL_32;
      }
      unint64_t v14 = v16[(void)v11];
      if (!v14)
      {
        id v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8) {
          goto LABEL_32;
        }
        unint64_t v14 = v16[(void)v11];
        if (!v14)
        {
          id v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8) {
            goto LABEL_32;
          }
          unint64_t v14 = v16[(void)v11];
          if (!v14)
          {
            id v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8) {
              goto LABEL_32;
            }
            unint64_t v14 = v16[(void)v11];
            if (!v14)
            {
              int64_t v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                unint64_t v14 = v16[(void)v15++];
                if (v14)
                {
                  id v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_100462C48();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v9 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + ((void)v11 << 6);
LABEL_29:
    id v12 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v12) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_10046B420(v17, v12);

      id v3 = v11;
      unint64_t v4 = v9;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_100726950())
      {
        sub_1004D962C();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v12 = v17[0];
        swift_unknownObjectRelease();
        id v11 = (char *)v3;
        uint64_t v9 = v4;
        if (v12) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_10052A794(uint64_t a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x88))();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 32;
    do
    {
      sub_1004407E0(v5, (uint64_t)v9);
      uint64_t v6 = v10;
      uint64_t v7 = v11;
      sub_10044C0F4(v9, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, v6, v7);
      sub_10044C6AC((uint64_t)v9);
      v5 += 40;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void *sub_10052A8A4(uint64_t a1)
{
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_100726BA0())
  {
    sub_10046BA4C((unint64_t)_swiftEmptyArrayStorage);
    uint64_t v3 = v11;
  }
  else
  {
    uint64_t v3 = &_swiftEmptySetSingleton;
  }
  int64_t v15 = v3;
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x88))();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4 + 32;
    do
    {
      sub_1004407E0(v6, (uint64_t)v12);
      uint64_t v7 = v13;
      uint64_t v8 = v14;
      sub_10044C0F4(v12, v13);
      unint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, v7, v8);
      sub_10052A4E0(v9);
      sub_10044C6AC((uint64_t)v12);
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    return v15;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_10052A9E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x88))();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = v7 + 32;
    do
    {
      sub_1004407E0(v9, (uint64_t)v13);
      uint64_t v10 = v14;
      uint64_t v11 = v15;
      sub_10044C0F4(v13, v14);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 32))(a1, a2, a3, v10, v11);
      sub_10044C6AC((uint64_t)v13);
      v9 += 40;
      --v8;
    }
    while (v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10052AB0C(uint64_t a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x88))();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 32;
    do
    {
      sub_1004407E0(v5, (uint64_t)v9);
      uint64_t v6 = v10;
      uint64_t v7 = v11;
      sub_10044C0F4(v9, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, v6, v7);
      sub_10044C6AC((uint64_t)v9);
      v5 += 40;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10052AC1C(uint64_t a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x88))();
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v3 + 32;
    do
    {
      sub_1004407E0(v5, (uint64_t)v9);
      uint64_t v6 = v10;
      uint64_t v7 = v11;
      sub_10044C0F4(v9, v10);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v6, v7);
      sub_10044C6AC((uint64_t)v9);
      v5 += 40;
      --v4;
    }
    while (v4);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_10052AD2C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x88))();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v7 = v5 + 32;
    uint64_t v8 = a2 & 0xFFFFFFFFFFLL;
    do
    {
      sub_1004407E0(v7, (uint64_t)v12);
      uint64_t v9 = v13;
      uint64_t v10 = v14;
      sub_10044C0F4(v12, v13);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, v8, v9, v10);
      sub_10044C6AC((uint64_t)v12);
      v7 += 40;
      --v6;
    }
    while (v6);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

void sub_10052AE48(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xB8))();
  if (v5)
  {
    uint64_t v7 = v6;
    id v9 = (id)v5;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, a2, ObjectType, v7);
  }
}

uint64_t sub_10052AF10(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v7 = (*(uint64_t (**)(void))((swift_isaMask & *v3) + 0x88))();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    uint64_t v9 = v7 + 32;
    do
    {
      sub_1004407E0(v9, (uint64_t)v17);
      uint64_t v11 = v18;
      uint64_t v10 = v19;
      sub_10044C0F4(v17, v18);
      (*(void (**)(uint64_t, uint64_t, unint64_t, uint64_t))(*(void *)(v10 + 8) + 8))(a1, a2, a3, v11);
      swift_bridgeObjectRetain_n();
      id v12 = sub_100725EB0();
      os_log_type_t v13 = sub_1007266E0();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v16 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v14 + 4) = sub_10043E578(a2, a3, &v16);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s", (uint8_t *)v14, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      sub_10044C6AC((uint64_t)v17);
      v9 += 40;
      --v8;
    }
    while (v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

id sub_10052B170()
{
  return sub_10052BE2C(type metadata accessor for IDSGroupRootMaterialExchangeController);
}

uint64_t sub_10052B260()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xE0))();
}

uint64_t sub_10052B2B4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xE8))();
}

uint64_t sub_10052B308()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xF0))();
}

uint64_t sub_10052B35C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0xF8))();
}

uint64_t sub_10052B3B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **v2) + 0x108))(a1, a2 & 0xFFFFFFFFFFLL);
}

uint64_t sub_10052B410()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x100))();
}

uint64_t sub_10052B46C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))();
}

uint64_t sub_10052B4A8()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x118))();
}

uint64_t sub_10052B538(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionDefaultCryptoHandler();
  id v9 = v5;
  id v10 = IDSDSessionKeyValueDelivery.__allocating_init()();
  uint64_t ObjectType = swift_getObjectType();

  uint64_t v13 = *(void *)(a2 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_groupID);
  uint64_t v12 = *(void *)(a2 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_groupID + 8);
  v22[3] = v8;
  v22[4] = &off_10098FC40;
  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_sessionID);
  uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_sessionID + 8);
  v22[0] = v10;
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _UNKNOWN **, uint64_t, void *))(ObjectType + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = v16(a1, v13, v12, v14, v15, a3, a4, a2, &off_10098F508, a5, v22);
  swift_deallocPartialClassInstance();
  return v17;
}

id sub_10052B71C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, long long a9, uint64_t a10)
{
  id v19 = objc_allocWithZone(v10);
  return sub_10052B7C8(a1, a2, a3, a4, a5, a6, a7, a8, a9, *((uint64_t *)&a9 + 1), a10);
}

id sub_10052B7C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v12 = v11;
  uint64_t v19 = type metadata accessor for IDSGroupQUICMaterialExchangeController();
  sub_1004407E0(a11, (uint64_t)&v61);
  unint64_t v20 = v12;
  swift_bridgeObjectRetain();
  uint64_t v54 = v19;
  id v21 = sub_100462E6C((uint64_t)&v61, a6, a7, a4, a5);
  *(void *)&v20[OBJC_IVAR____TtC17identityservicesd45IDSGroupDefaultRootMaterialExchangeController_quicMaterialExchangeProvider] = v21;
  unint64_t v58 = v21;

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v22 = sub_10052BFA0(a2, a3, a4, a5);
  uint64_t v23 = type metadata accessor for IDSGroupPushMaterialExchangeController(0);
  sub_1004407E0(a11, (uint64_t)&v61);
  id v24 = v22;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  unint64_t v25 = sub_10046F088(a2, a3, a4, a5, a8, a9, a10, (uint64_t)&v61);
  int64_t v26 = a1;
  uint64_t v27 = sub_100725EB0();
  os_log_type_t v28 = sub_1007266E0();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    *(void *)&long long v61 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136315650;
    v60[0] = sub_10043E578(0xD000000000000064, 0x80000001008C5640, (uint64_t *)&v61);
    sub_100726830();
    *(_WORD *)(v29 + 12) = 1024;
    LODWORD(v60[0]) = v26[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_allowPushMaterialExchange];
    sub_100726830();
    *(_WORD *)(v29 + 18) = 1024;
    LODWORD(v60[0]) = v26[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_allowQUICMaterialExchange];
    sub_100726830();

    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: allowPushMaterialExchange: %{BOOL}d; allowQUICMaterialExchange: %{BOOL}d",
      (uint8_t *)v29,
      0x18u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  if (v26[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_allowPushMaterialExchange] == 1)
  {
    unint64_t v30 = *(void (**)(id, _UNKNOWN **))((swift_isaMask & *v25) + 0xB0);
    unint64_t v31 = v24;
    v30(v24, &off_10098FD88);
    uint64_t v32 = *(uint64_t (**)(void *))((swift_isaMask & *v31) + 0x98);
    uint64_t v33 = v31;
    unint64_t v34 = v25;
    uint64_t v56 = (void (*)(void *, void))v32(v60);
    unint64_t v36 = v35;
    uint64_t v37 = *v35;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *unint64_t v36 = v37;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v37 = sub_10052BE7C(0, v37[2] + 1, 1, v37);
      *unint64_t v36 = v37;
    }
    unint64_t v40 = v37[2];
    unint64_t v39 = v37[3];
    if (v40 >= v39 >> 1)
    {
      uint64_t v37 = sub_10052BE7C((void *)(v39 > 1), v40 + 1, 1, v37);
      *unint64_t v36 = v37;
    }
    uint64_t v62 = v23;
    uint64_t v63 = &off_10098E138;
    *(void *)&long long v61 = v34;
    v37[2] = v40 + 1;
    sub_10048712C(&v61, (uint64_t)&v37[5 * v40 + 4]);
    v56(v60, 0);
  }
  if (v26[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_allowQUICMaterialExchange] == 1)
  {
    uint64_t v41 = *(void (**)(id, _UNKNOWN **))((swift_isaMask & *v58) + 0xC0);
    unint64_t v42 = v24;
    v41(v24, &off_10098FD88);
    uint64_t v43 = *(uint64_t (**)(void *))((swift_isaMask & *v42) + 0x98);
    unint64_t v44 = v58;
    uint64_t v59 = v42;
    unint64_t v45 = (void (*)(void *, void))v43(v60);
    int64_t v47 = v46;
    uint64_t v48 = *v46;
    char v49 = swift_isUniquelyReferenced_nonNull_native();
    *int64_t v47 = v48;
    if ((v49 & 1) == 0)
    {
      uint64_t v48 = sub_10052BE7C(0, v48[2] + 1, 1, v48);
      *int64_t v47 = v48;
    }
    unint64_t v51 = v48[2];
    unint64_t v50 = v48[3];
    if (v51 >= v50 >> 1)
    {
      uint64_t v48 = sub_10052BE7C((void *)(v50 > 1), v51 + 1, 1, v48);
      *int64_t v47 = v48;
    }
    uint64_t v62 = v54;
    uint64_t v63 = &off_10098DEB0;
    *(void *)&long long v61 = v44;
    v48[2] = v51 + 1;
    sub_10048712C(&v61, (uint64_t)&v48[5 * v51 + 4]);
    v45(v60, 0);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    int v52 = v59;
    unint64_t v25 = v59;
  }
  else
  {

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    int v52 = v58;
  }

  sub_10044C6AC(a11);
  return v24;
}

void sub_10052BDD4()
{
}

uint64_t sub_10052BE04()
{
  return swift_unknownObjectRelease();
}

id sub_10052BE14()
{
  return sub_10052BE2C(type metadata accessor for IDSGroupDefaultRootMaterialExchangeController);
}

id sub_10052BE2C(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, "dealloc");
}

void *sub_10052BE7C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100431F80(&qword_100A47A70);
      id v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_10052C6F4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

id sub_10052BFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4;
  sub_1004DFE9C(2);
  *(void *)&v9[OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_exchangeControllers] = _swiftEmptyArrayStorage;
  *(void *)&v9[OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_materialProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v9[OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v10 = OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_lock;
  sub_100431F80((uint64_t *)&unk_100A454B0);
  uint64_t v11 = swift_allocObject();
  *(_DWORD *)(v11 + 16) = 0;
  *(void *)&v9[v10] = v11;
  uint64_t v12 = &v9[OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_groupID];
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = a2;
  uint64_t v13 = &v9[OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_sessionID];
  *(void *)uint64_t v13 = a3;
  *((void *)v13 + 1) = a4;

  v15.receiver = v9;
  v15.super_class = (Class)type metadata accessor for IDSGroupRootMaterialExchangeController(0);
  return objc_msgSendSuper2(&v15, "init");
}

uint64_t sub_10052C0B0()
{
  unint64_t v1 = *(void **)(v0 + 16);
  unint64_t v31 = &_swiftEmptySetSingleton;
  if ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA0))())
  {
    uint64_t v3 = v2;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = (*(uint64_t (**)(void, void, void, void, uint64_t, uint64_t))(v3 + 8))(*(void *)((char *)v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_groupID), *(void *)((char *)v1+ OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_groupID+ 8), *(void *)((char *)v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_sessionID), *(void *)((char *)v1+ OBJC_IVAR____TtC17identityservicesd38IDSGroupRootMaterialExchangeController_sessionID+ 8), ObjectType, v3);
    sub_1004E5EDC(v5);
    swift_unknownObjectRelease();
  }
  unint64_t v6 = sub_100725EB0();
  os_log_type_t v7 = sub_1007266E0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    v28[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_10043E578(0xD000000000000018, 0x80000001008C42E0, v28);
    sub_100726830();
    *(_WORD *)(v8 + 12) = 2080;
    swift_beginAccess();
    type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
    sub_10052C804((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100726650();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v27[0] = sub_10043E578(v9, v11, v28);
    sub_100726830();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: materials: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v12 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x88))();
  uint64_t v13 = *(void *)(v12 + 16);
  if (v13)
  {
    uint64_t v14 = v12 + 32;
    swift_beginAccess();
    do
    {
      sub_1004407E0(v14, (uint64_t)v28);
      sub_1004407E0((uint64_t)v28, (uint64_t)v27);
      uint64_t v19 = sub_100725EB0();
      os_log_type_t v20 = sub_1007266E0();
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v21 = swift_slowAlloc();
        uint64_t v26 = swift_slowAlloc();
        *(_DWORD *)uint64_t v21 = 136315394;
        *(void *)(v21 + 4) = sub_10043E578(0xD000000000000018, 0x80000001008C42E0, &v26);
        *(_WORD *)(v21 + 12) = 2080;
        sub_1004407E0((uint64_t)v27, (uint64_t)v25);
        sub_100431F80(&qword_100A47A78);
        uint64_t v22 = sub_100726480();
        *(void *)(v21 + 14) = sub_10043E578(v22, v23, &v26);
        swift_bridgeObjectRelease();
        sub_10044C6AC((uint64_t)v27);
        _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s: calling ExchangeController %s", (uint8_t *)v21, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        sub_10044C6AC((uint64_t)v27);
      }
      uint64_t v15 = v29;
      uint64_t v16 = v30;
      sub_10044C0F4(v28, v29);
      uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16);
      uint64_t v18 = swift_bridgeObjectRetain();
      v17(v18, v15, v16);
      swift_bridgeObjectRelease();
      sub_10044C6AC((uint64_t)v28);
      v14 += 40;
      --v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for IDSGroupRootMaterialExchangeController(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A524E0);
}

uint64_t type metadata accessor for IDSGroupDefaultRootMaterialExchangeController(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A524F0);
}

uint64_t sub_10052C5DC()
{
  return type metadata accessor for IDSGroupRootMaterialExchangeController(0);
}

uint64_t sub_10052C5E4()
{
  uint64_t result = sub_100725ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10052C6A8()
{
  return type metadata accessor for IDSGroupDefaultRootMaterialExchangeController(0);
}

uint64_t sub_10052C6B0()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10052C6F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      sub_100431F80(&qword_100A47A78);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_10052C804(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10052C84C()
{
  return swift_unknownObjectWeakLoadStrong();
}

void sub_10052C89C(void *a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_delegate;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
}

void (*sub_10052C904(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100462DE8;
}

id sub_10052C98C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (char *)objc_allocWithZone(v7);
  sub_1004DFE9C(6);
  uint64_t v16 = &v15[OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_delegate];
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  *((void *)v16 + 1) = a2;
  swift_unknownObjectWeakAssign();
  uint64_t v17 = &v15[OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_sessionID];
  *(void *)uint64_t v17 = a3;
  *((void *)v17 + 1) = a4;
  *(_DWORD *)&v15[OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_localCounter] = a5;
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_localIdentities] = a6;
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_remoteIdentities] = a7;

  v20.receiver = v15;
  v20.super_class = v7;
  id v18 = objc_msgSendSuper2(&v20, "init");

  return v18;
}

uint64_t type metadata accessor for IDSGlobalLinkP2PKeyNegotiation()
{
  uint64_t result = qword_100A52500;
  if (!qword_100A52500) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10052CB5C()
{
  sub_1007269F0(100);
  v5._countAndFlagsBits = 0xD00000000000002DLL;
  v5._object = (void *)0x80000001008C5860;
  sub_1007264C0(v5);
  uint64_t v4 = *(unsigned int *)(v0 + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_localCounter);
  v6._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0x6E6F697373657320;
  v7._object = (void *)0xEB000000003D4449;
  sub_1007264C0(v7);
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_sessionID);
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_sessionID + 8);
  swift_bridgeObjectRetain();
  v8._countAndFlagsBits = v1;
  v8._object = v2;
  sub_1007264C0(v8);
  swift_bridgeObjectRelease();
  v9._object = (void *)0x80000001008C5890;
  v9._countAndFlagsBits = 0xD000000000000011;
  sub_1007264C0(v9);
  swift_bridgeObjectRetain();
  v10._countAndFlagsBits = sub_100726580();
  sub_1007264C0(v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0xD000000000000012;
  v11._object = (void *)0x80000001008C58B0;
  sub_1007264C0(v11);
  type metadata accessor for SecKey();
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = sub_100726580();
  sub_1007264C0(v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 62;
  v13._object = (void *)0xE100000000000000;
  sub_1007264C0(v13);
  return HIDWORD(v4);
}

uint64_t sub_10052CDB8()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_localIdentities);
  uint64_t v24 = *(void *)(v1 + 16);
  if (v24)
  {
    unint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_remoteIdentities);
    if (v2 >> 62)
    {
LABEL_22:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v3 = sub_100726BA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    unint64_t v4 = 0;
    uint64_t v5 = v0 + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_logger;
    uint64_t v20 = v1 + 32;
    uint64_t v21 = OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_localCounter;
    unint64_t v27 = v2;
    v2 &= 0xC000000000000001;
    uint64_t v22 = v1;
    uint64_t v23 = v0;
    do
    {
      if (v4 >= *(void *)(v1 + 16))
      {
        __break(1u);
LABEL_21:
        __break(1u);
        goto LABEL_22;
      }
      if (v3)
      {
        if (v3 < 1) {
          goto LABEL_21;
        }
        unint64_t v26 = v4;
        uint64_t v6 = v20 + 16 * v4;
        Swift::String v7 = *(void **)v6;
        Swift::String v8 = *(void **)(v6 + 8);
        unsigned int v9 = *(_DWORD *)(v0 + v21);
        unint64_t v10 = v27;
        swift_bridgeObjectRetain();
        Swift::String v11 = v7;
        id v25 = v8;
        for (uint64_t i = 0; i != v3; ++i)
        {
          if (v2) {
            Swift::String v13 = (__SecKey *)sub_100726A10();
          }
          else {
            Swift::String v13 = (__SecKey *)*(id *)(v10 + 8 * i + 32);
          }
          uint64_t v14 = v13;
          uint64_t v15 = sub_10052FC50(v5, v9, v11, v13);
          if (v16 >> 60 == 15)
          {
          }
          else
          {
            uint64_t v17 = v15;
            unint64_t v18 = v16;
            sub_100725B70();
            unint64_t v10 = v27;

            sub_10044CE88(v17, v18);
          }
        }

        swift_bridgeObjectRelease();
        uint64_t v1 = v22;
        uint64_t v0 = v23;
        unint64_t v4 = v26;
      }
      ++v4;
    }
    while (v4 != v24);
    swift_bridgeObjectRelease();
  }
  return 0;
}

id sub_10052D04C(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = (void *)sub_100726470();
  uint64_t v6 = *(v5 - 1);
  __chkstk_darwin(v5, v7);
  unsigned int v9 = (char *)&v182 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A47AA0);
  __chkstk_darwin(v10 - 8, v11);
  unint64_t v187 = (char *)&v182 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = sub_100726000();
  uint64_t v189 = *(void *)(v188 - 8);
  __chkstk_darwin(v188, v13);
  uint64_t v186 = (uint64_t)&v182 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A47AA8);
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v192 = (char *)&v182 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v18 = (__SecKey *)sub_100726070();
  unint64_t v194 = *((void *)v18 - 1);
  __chkstk_darwin(v18, v19);
  int v190 = (char *)&v182 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100431F80((uint64_t *)&unk_100A47AB0);
  __chkstk_darwin(v21 - 8, v22);
  uint64_t v196 = (char *)&v182 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v197 = sub_1007260A0();
  unint64_t v198 = *(void *)(v197 - 8);
  __chkstk_darwin(v197, v24);
  int64_t v195 = (char *)&v182 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = v2;
  unint64_t v26 = ((char *)v2 + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_logger);
  unint64_t v226 = (void *)(a2 >> 62);
  sub_100441FD4(a1, a2);
  sub_100441FD4(a1, a2);
  long long v228 = v26;
  unint64_t v27 = sub_100725EB0();
  os_log_type_t v28 = sub_1007266E0();
  uint64_t v29 = v28;
  BOOL v30 = os_log_type_enabled((os_log_t)v27, v28);
  uint64_t v193 = v18;
  uint64_t v185 = v5;
  uint64_t v184 = v6;
  unint64_t v183 = v9;
  if (v30)
  {
    uint64_t v31 = swift_slowAlloc();
    unint64_t v18 = (__SecKey *)swift_slowAlloc();
    v235 = v18;
    *(_DWORD *)uint64_t v31 = 136315394;
    *(void *)&long long v232 = sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v235);
    sub_100726830();
    *(_WORD *)(v31 + 12) = 2080;
    uint64_t v5 = (void *)(v31 + 14);
    sub_100441FD4(a1, a2);
    uint64_t v32 = sub_100725AA0();
    unint64_t v34 = v33;
    sub_100442248(a1, a2);
    *(void *)&long long v232 = sub_10043E578(v32, v34, (uint64_t *)&v235);
    sub_100726830();
    swift_bridgeObjectRelease();
    sub_100442248(a1, a2);
    sub_100442248(a1, a2);
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v27, (os_log_type_t)v29, "%s: receiving compound blob %s...", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_100442248(a1, a2);
    sub_100442248(a1, a2);
  }
  uint64_t v35 = 0;
  unsigned int v230 = 0;
  char v231 = 1;
  BOOL v36 = __OFSUB__(HIDWORD(a1), a1);
  LODWORD(v227) = v36;
  unint64_t v37 = HIDWORD(a1) - (int)a1;
  LODWORD(v38) = BYTE6(a2);
  unint64_t v39 = _swiftEmptyArrayStorage;
  uint64_t v40 = v226;
  while (2)
  {
    uint64_t v41 = 0;
    switch(v40)
    {
      case 1:
        uint64_t v41 = HIDWORD(a1) - (int)a1;
        if ((v227 & 1) == 0) {
          goto LABEL_13;
        }
        __break(1u);
        goto LABEL_91;
      case 2:
        uint64_t v43 = *(void *)(a1 + 16);
        uint64_t v42 = *(void *)(a1 + 24);
        BOOL v44 = __OFSUB__(v42, v43);
        uint64_t v41 = v42 - v43;
        if (!v44) {
          goto LABEL_13;
        }
LABEL_91:
        __break(1u);
        goto LABEL_92;
      case 3:
        goto LABEL_13;
      default:
        uint64_t v41 = BYTE6(a2);
LABEL_13:
        BOOL v44 = __OFSUB__(v41, 12);
        uint64_t v45 = v41 - 12;
        if (v44)
        {
          __break(1u);
LABEL_78:
          __break(1u);
LABEL_79:
          __break(1u);
          goto LABEL_80;
        }
        if (v45 >= v35)
        {
          if (__OFADD__(v35, 12)) {
            goto LABEL_78;
          }
          uint64_t v29 = v35 + 12;
          if (v35 + 12 <= v35) {
            goto LABEL_79;
          }
          unint64_t v18 = (__SecKey *)sub_100725B80();
          uint64_t v5 = v46;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v39 = sub_1004BE840(0, v39[2] + 1, 1, v39);
          }
          unint64_t v27 = v39[2];
          unint64_t v47 = v39[3];
          uint64_t v48 = v39;
          if (v27 >= v47 >> 1) {
            uint64_t v48 = sub_1004BE840((void *)(v47 > 1), v27 + 1, 1, v39);
          }
          v48[2] = v27 + 1;
          unint64_t v39 = v48;
          char v49 = &v48[2 * v27];
          v49[4] = v18;
          v49[5] = v5;
          uint64_t v35 = v29;
          continue;
        }
        uint64_t v50 = *(void *)((char *)v211
                        + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_localIdentities);
        uint64_t v205 = *(void *)(v50 + 16);
        if (!v205)
        {
          uint64_t v5 = 0;
          unint64_t v37 = 0;
          unint64_t v38 = 0;
          goto LABEL_59;
        }
        unint64_t v51 = *(__SecKey **)((char *)v211
                           + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_remoteIdentities);
        if ((unint64_t)v51 >> 62) {
          goto LABEL_103;
        }
        uint64_t v204 = (unint64_t)v51 & 0xFFFFFFFFFFFFFF8;
        id v52 = *(id *)(((unint64_t)v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        while (1)
        {
          uint64_t v5 = 0;
          uint64_t v54 = 0;
          a2 = 0;
          unint64_t v55 = 0;
          uint64_t v56 = v50 + 32;
          unint64_t v18 = (__SecKey *)((unint64_t)v51 & 0xC000000000000001);
          uint64_t v203 = (uint64_t)v51 + 32;
          id v215 = (char *)&v232 + 8;
          uint64_t v210 = v39 + 5;
          *(void *)&long long v53 = 136315906;
          long long v214 = v53;
          uint64_t v213 = (char *)&type metadata for Any + 8;
          *(void *)&long long v53 = 136315394;
          long long v216 = v53;
          v221 = v39;
          uint64_t v209 = v50;
          uint64_t v208 = v51;
          id v200 = v52;
          uint64_t v191 = v50 + 32;
          unint64_t v199 = (unint64_t)v51 & 0xC000000000000001;
LABEL_26:
          if (v55 < *(void *)(v50 + 16)) {
            break;
          }
          __break(1u);
LABEL_102:
          __break(1u);
LABEL_103:
          uint64_t v204 = (unint64_t)v51 & 0xFFFFFFFFFFFFFF8;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v52 = (id)sub_100726BA0();
          swift_bridgeObjectRelease();
        }
        unint64_t v206 = v55;
        long long v217 = *(_OWORD *)(v56 + 16 * v55);
        unint64_t v37 = (unint64_t)(id)v217;
        unint64_t v38 = (unint64_t)*((id *)&v217 + 1);
        sub_100530518(v54, (void *)a2);
        if (!v52) {
          goto LABEL_47;
        }
        swift_bridgeObjectRetain();
        id v223 = (id)v37;
        id v222 = (id)v38;
        unint64_t v57 = 0;
        unint64_t v202 = v37;
        unint64_t v201 = v38;
        while (1)
        {
          if (v18)
          {
            unint64_t v58 = (void *)sub_100726A10();
          }
          else
          {
            if (v57 >= *(void *)(v204 + 16)) {
              goto LABEL_102;
            }
            unint64_t v58 = *(id *)(v203 + 8 * v57);
          }
          uint64_t v212 = v58;

          BOOL v44 = __OFADD__(v57++, 1);
          if (v44)
          {
            __break(1u);
            goto LABEL_99;
          }
          if (v39[2]) {
            break;
          }
LABEL_30:
          uint64_t v5 = v212;
          if ((id)v57 == v52)
          {
            uint64_t v5 = v212;

            swift_bridgeObjectRelease();
LABEL_47:
            unint64_t v55 = v206 + 1;
            uint64_t v54 = (void *)v37;
            a2 = v38;
            uint64_t v56 = v191;
            if (v206 + 1 == v205)
            {
              swift_bridgeObjectRelease();
LABEL_59:
              swift_bridgeObjectRelease();
              unint64_t v27 = sub_100725EB0();
              os_log_type_t v105 = sub_1007266C0();
              if (os_log_type_enabled((os_log_t)v27, v105))
              {
                unint64_t v106 = (uint8_t *)swift_slowAlloc();
                *(void *)&long long v232 = swift_slowAlloc();
                *(_DWORD *)unint64_t v106 = 136315138;
                CFErrorRef error = (CFErrorRef)sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v232);
                sub_100726830();
                _os_log_impl((void *)&_mh_execute_header, (os_log_t)v27, v105, "%s: remoteCounter is nil", v106, 0xCu);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }

              sub_100530518((void *)v37, (void *)v38);
LABEL_83:

              return 0;
            }
            goto LABEL_26;
          }
        }
        *(void *)&long long v227 = v39[2];
        unint64_t v207 = v57;
        uint64_t v224 = v212;
        swift_bridgeObjectRetain();
        swift_beginAccess();
        uint64_t v59 = v210;
        while (2)
        {
          uint64_t v61 = *(v59 - 1);
          unint64_t v60 = *v59;
          sub_100441FD4(v61, *v59);
          id v62 = v223;
          a2 = (unint64_t)v222;
          uint64_t v63 = v224;
          sub_100441FD4(v61, v60);
          id v64 = v62;
          id v65 = (id)a2;
          unsigned int v66 = v63;
          sub_100441FD4(v61, v60);
          unsigned int v67 = sub_100725EB0();
          os_log_type_t v68 = sub_1007266E0();
          int v69 = v68;
          BOOL v70 = os_log_type_enabled(v67, v68);
          id v225 = v64;
          unint64_t v226 = v66;
          id v220 = v65;
          if (v70)
          {
            a2 = swift_slowAlloc();
            uint64_t v219 = (__CFError *)swift_slowAlloc();
            CFErrorRef error = v219;
            *(_DWORD *)a2 = v214;
            LODWORD(v218) = v69;
            *(void *)&long long v232 = sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&error);
            sub_100726830();
            *(_WORD *)(a2 + 12) = 2080;
            long long v232 = v217;
            sub_1005319A4();
            uint64_t v71 = sub_100726D00();
            *(void *)&long long v232 = sub_10043E578(v71, v72, (uint64_t *)&error);
            unsigned int v66 = v226;
            sub_100726830();

            swift_bridgeObjectRelease();
            *(_WORD *)(a2 + 22) = 2080;
            *(void *)&long long v232 = v66;
            type metadata accessor for SecKey();
            uint64_t v73 = v66;
            uint64_t v74 = sub_100726480();
            *(void *)&long long v232 = sub_10043E578(v74, v75, (uint64_t *)&error);
            sub_100726830();

            swift_bridgeObjectRelease();
            *(_WORD *)(a2 + 32) = 2080;
            sub_100441FD4(v61, v60);
            uint64_t v76 = sub_100725AA0();
            unint64_t v78 = v77;
            sub_100442248(v61, v60);
            *(void *)&long long v232 = sub_10043E578(v76, v78, (uint64_t *)&error);
            sub_100726830();
            id v64 = v225;
            swift_bridgeObjectRelease();
            sub_100442248(v61, v60);
            sub_100442248(v61, v60);
            _os_log_impl((void *)&_mh_execute_header, v67, (os_log_type_t)v218, "%s: attempting with localIdentity:%s remoteIdentity:%s blob:%s", (uint8_t *)a2, 0x2Au);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_100442248(v61, v60);
            sub_100442248(v61, v60);
          }
          unint64_t v38 = sub_100530558((uint64_t)v228, v61, v60, (__SecKey *)v64, (__SecKey *)v66);
          unsigned int v230 = v38;
          char v231 = BYTE4(v38) & 1;
          unint64_t v79 = sub_100725EB0();
          os_log_type_t v80 = sub_1007266E0();
          if (!os_log_type_enabled(v79, v80))
          {
            sub_100442248(v61, v60);

            unint64_t v39 = v221;
            if ((v38 & 0x100000000) == 0) {
              break;
            }
            goto LABEL_39;
          }
          a2 = swift_slowAlloc();
          *(void *)&long long v232 = swift_slowAlloc();
          *(_DWORD *)a2 = v216;
          *(void *)(a2 + 4) = sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v232);
          *(_WORD *)(a2 + 12) = 2080;
          unint64_t v38 = v230;
          char v81 = v231;
          LODWORD(error) = v230;
          BYTE4(error) = v231;
          sub_100431F80(&qword_100A47AD0);
          uint64_t v82 = sub_100726480();
          *(void *)(a2 + 14) = sub_10043E578(v82, v83, (uint64_t *)&v232);
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v79, v80, "%s: result: %s", (uint8_t *)a2, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          sub_100442248(v61, v60);

          unint64_t v39 = v221;
          if (v81)
          {
LABEL_39:
            v59 += 2;
            *(void *)&long long v227 = v227 - 1;
            if (!(void)v227)
            {

              swift_bridgeObjectRelease();
              unint64_t v37 = v202;
              uint64_t v50 = v209;
              unint64_t v38 = v201;
              unint64_t v51 = v208;
              id v52 = v200;
              unint64_t v18 = (__SecKey *)v199;
              unint64_t v57 = v207;
              goto LABEL_30;
            }
            continue;
          }
          break;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        id v84 = v220;

        id v85 = v225;
        id v86 = v226;

        unint64_t v87 = *(uint64_t (**)(void))((swift_isaMask & *v211) + 0x80);
        unint64_t v27 = (unint64_t)v86;
        unint64_t v39 = v85;
        unint64_t v18 = (__SecKey *)v84;
        uint64_t v88 = v87();
        if (v88)
        {
          unint64_t v90 = (void *)v88;
          uint64_t v91 = v89;
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(unint64_t, uint64_t, uint64_t))(v91 + 8))(v38, ObjectType, v91);
        }
        CFErrorRef error = 0;
        CFDataRef v93 = SecKeyCopyExternalRepresentation(v18, &error);
        if (!v93
          || (CFDataRef v94 = v93,
              long long v227 = xmmword_100795A50,
              long long v232 = xmmword_100795A50,
              sub_100725B40(),
              v94,
              uint64_t v5 = (void *)*((void *)&v232 + 1),
              *((void *)&v232 + 1) >> 60 == 15))
        {
          CFErrorRef v95 = error;
          if (error)
          {
            uint64_t v96 = sub_100725EB0();
            os_log_type_t v97 = sub_1007266C0();
            if (os_log_type_enabled(v96, v97))
            {
              uint64_t v98 = swift_slowAlloc();
              uint64_t v99 = swift_slowAlloc();
              *(void *)&long long v227 = v18;
              *(void *)&long long v232 = v99;
              *(_DWORD *)uint64_t v98 = v216;
              v233 = (__CFError *)sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v232);
              sub_100726830();
              *(_WORD *)(v98 + 12) = 2080;
              long long v228 = (v98 + 14);
              uint64_t v100 = v39;
              uint64_t v101 = v95;
              v233 = v101;
              type metadata accessor for CFError(0);
              sub_100531AC0((unint64_t *)&qword_100A47168, type metadata accessor for CFError);
              uint64_t v102 = sub_100726D50();
              unint64_t v104 = v103;

              unint64_t v39 = v100;
              v233 = (__CFError *)sub_10043E578(v102, v104, (uint64_t *)&v232);
              sub_100726830();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v96, v97, "%s: failed importing local private key: %s", (uint8_t *)v98, 0x16u);
              swift_arrayDestroy();
              unint64_t v18 = (__SecKey *)v227;
              swift_slowDealloc();
              swift_slowDealloc();
            }
          }
          goto LABEL_83;
        }
        uint64_t v29 = v232;
        CFDataRef v107 = SecKeyCopyExternalRepresentation((SecKeyRef)v39, &error);
        if (!v107
          || (CFDataRef v108 = v107,
              long long v232 = v227,
              sub_100725B40(),
              v108,
              unint64_t v37 = *((void *)&v232 + 1),
              *((void *)&v232 + 1) >> 60 == 15))
        {
          CFErrorRef v109 = error;
          if (error)
          {
            uint64_t v110 = sub_100725EB0();
            os_log_type_t v111 = sub_1007266C0();
            if (os_log_type_enabled(v110, v111))
            {
              uint64_t v112 = swift_slowAlloc();
              unint64_t v226 = (void *)v29;
              uint64_t v113 = v112;
              uint64_t v114 = swift_slowAlloc();
              *(void *)&long long v227 = v18;
              long long v228 = v114;
              *(void *)&long long v232 = v114;
              *(_DWORD *)uint64_t v113 = v216;
              v233 = (__CFError *)sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v232);
              sub_100726830();
              *(_WORD *)(v113 + 12) = 2080;
              id v225 = (id)(v113 + 14);
              uint64_t v115 = v5;
              uint64_t v116 = v39;
              uint64_t v117 = v109;
              v233 = v117;
              type metadata accessor for CFError(0);
              sub_100531AC0((unint64_t *)&qword_100A47168, type metadata accessor for CFError);
              uint64_t v118 = sub_100726D50();
              unint64_t v120 = v119;

              unint64_t v39 = v116;
              uint64_t v5 = v115;
              v233 = (__CFError *)sub_10043E578(v118, v120, (uint64_t *)&v232);
              sub_100726830();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v110, v111, "%s: failed importing local public key: %s", (uint8_t *)v113, 0x16u);
              swift_arrayDestroy();
              unint64_t v18 = (__SecKey *)v227;
              swift_slowDealloc();
              uint64_t v29 = (uint64_t)v226;
              swift_slowDealloc();
            }

            unsigned int v121 = v109;
            uint64_t v122 = v29;
            unint64_t v123 = (unint64_t)v5;
            goto LABEL_74;
          }

          uint64_t v138 = v29;
          unint64_t v139 = (unint64_t)v5;
LABEL_81:
          sub_10044CE88(v138, v139);
LABEL_82:

          goto LABEL_83;
        }
        a2 = v232;
        CFDataRef v124 = SecKeyCopyExternalRepresentation((SecKeyRef)v27, &error);
        if (!v124
          || (CFDataRef v125 = v124, v232 = v227, sub_100725B40(), v125, *((void *)&v232 + 1) >> 60 == 15))
        {
          CFErrorRef v126 = error;
          if (error)
          {
            id v225 = (id)a2;
            uint64_t v127 = sub_100725EB0();
            os_log_type_t v128 = sub_1007266C0();
            if (os_log_type_enabled(v127, v128))
            {
              uint64_t v129 = swift_slowAlloc();
              unint64_t v226 = (void *)v29;
              uint64_t v130 = v129;
              uint64_t v131 = swift_slowAlloc();
              *(void *)&long long v227 = v18;
              long long v228 = v131;
              *(void *)&long long v232 = v131;
              *(_DWORD *)uint64_t v130 = v216;
              v233 = (__CFError *)sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v232);
              sub_100726830();
              *(_WORD *)(v130 + 12) = 2080;
              id v223 = (id)(v130 + 14);
              uint64_t v132 = v5;
              unint64_t v133 = v39;
              uint64_t v134 = v126;
              v233 = v134;
              type metadata accessor for CFError(0);
              uint64_t v224 = (void *)v37;
              sub_100531AC0((unint64_t *)&qword_100A47168, type metadata accessor for CFError);
              uint64_t v135 = sub_100726D50();
              unint64_t v137 = v136;

              unint64_t v39 = v133;
              uint64_t v5 = v132;
              v233 = (__CFError *)sub_10043E578(v135, v137, (uint64_t *)&v232);
              sub_100726830();
              unint64_t v37 = (unint64_t)v224;
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v127, v128, "%s: failed importing remote public key: %s", (uint8_t *)v130, 0x16u);
              swift_arrayDestroy();
              unint64_t v18 = (__SecKey *)v227;
              swift_slowDealloc();
              uint64_t v29 = (uint64_t)v226;
              swift_slowDealloc();
            }

            unsigned int v121 = v126;
            sub_10044CE88(v29, (unint64_t)v5);
            uint64_t v122 = (uint64_t)v225;
            unint64_t v123 = v37;
LABEL_74:
            sub_10044CE88(v122, v123);

            goto LABEL_82;
          }
LABEL_80:

          sub_10044CE88(v29, (unint64_t)v5);
          uint64_t v138 = a2;
          unint64_t v139 = v37;
          goto LABEL_81;
        }
        uint64_t v224 = (void *)v37;
        id v225 = (id)a2;
        unint64_t v37 = v27;
        id v222 = (id)*((void *)&v232 + 1);
        id v223 = (id)v232;
        *(void *)&long long v232 = v29;
        *((void *)&v232 + 1) = v5;
        sub_100441FD4(v29, (unint64_t)v5);
        a1 = (uint64_t)v196;
        a2 = 0;
        sub_100726090();
        unint64_t v27 = v198;
        uint64_t v40 = v197;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v198 + 56))(a1, 0, 1, v197);
        int v142 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 48))(a1, 1, v40);
        if (v142 == 1)
        {
          uint64_t v143 = v29;
          sub_10044C150(a1, (uint64_t *)&unk_100A47AB0);
          BOOL v144 = sub_100725EB0();
          os_log_type_t v145 = sub_1007266C0();
          if (os_log_type_enabled(v144, v145))
          {
            v221 = v5;
            uint64_t v146 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long v232 = swift_slowAlloc();
            *(_DWORD *)uint64_t v146 = 136315138;
            v233 = (__CFError *)sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v232);
            sub_100726830();
            _os_log_impl((void *)&_mh_execute_header, v144, v145, "%s: failed to make private key", v146, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            sub_10044CE88(v143, (unint64_t)v221);
          }
          else
          {

            sub_10044CE88(v143, (unint64_t)v5);
          }
          sub_10044CE88((uint64_t)v223, (unint64_t)v222);
          sub_10044CE88((uint64_t)v225, (unint64_t)v224);

          return 0;
        }
LABEL_92:
        unint64_t v226 = (void *)v29;
        (*(void (**)(char *, uint64_t, uint64_t))(v27 + 32))(v195, a1, v40);
        id v52 = v222;
        *(void *)&long long v232 = v223;
        *((void *)&v232 + 1) = v222;
        sub_100441FD4((uint64_t)v223, (unint64_t)v222);
        uint64_t v50 = (uint64_t)v192;
        sub_100726060();
        if (a2)
        {
          swift_errorRelease();
          (*(void (**)(uint64_t, uint64_t, uint64_t, __SecKey *))(v194 + 56))(v50, 1, 1, v193);
LABEL_95:
          sub_10044C150(v50, &qword_100A47AA8);
          uint64_t v147 = sub_100725EB0();
          os_log_type_t v148 = sub_1007266C0();
          if (os_log_type_enabled(v147, v148))
          {
            v221 = v5;
            uint64_t v149 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long v232 = swift_slowAlloc();
            *(_DWORD *)uint64_t v149 = 136315138;
            v233 = (__CFError *)sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v232);
            sub_100726830();
            _os_log_impl((void *)&_mh_execute_header, v147, v148, "%s: failed to make public key", v149, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            sub_10044CE88((uint64_t)v225, (unint64_t)v224);

            sub_10044CE88((uint64_t)v223, (unint64_t)v52);
            sub_10044CE88((uint64_t)v226, (unint64_t)v221);
          }
          else
          {

            sub_10044CE88((uint64_t)v226, (unint64_t)v5);
            sub_10044CE88((uint64_t)v223, (unint64_t)v52);
            sub_10044CE88((uint64_t)v225, (unint64_t)v224);
          }
LABEL_110:
          (*(void (**)(char *, uint64_t))(v198 + 8))(v195, v197);
          return 0;
        }
        unint64_t v57 = v194;
        unint64_t v51 = v193;
        (*(void (**)(uint64_t, void, uint64_t, __SecKey *))(v194 + 56))(v50, 0, 1, v193);
        if ((*(unsigned int (**)(uint64_t, uint64_t, __SecKey *))(v57 + 48))(v50, 1, v51) == 1) {
          goto LABEL_95;
        }
LABEL_99:
        (*(void (**)(char *, uint64_t, __SecKey *))(v57 + 32))(v190, v50, v51);
        uint64_t v150 = (uint64_t)v187;
        sub_100726080();
        if (a2)
        {
          swift_errorRelease();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v189 + 56))(v150, 1, 1, v188);
          goto LABEL_105;
        }
        uint64_t v151 = v189;
        uint64_t v152 = v188;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v189 + 56))(v150, 0, 1, v188);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v151 + 48))(v150, 1, v152) == 1)
        {
LABEL_105:
          sub_10044C150(v150, &qword_100A47AA0);
          uint64_t v153 = sub_100725EB0();
          os_log_type_t v154 = sub_1007266C0();
          if (os_log_type_enabled(v153, v154))
          {
            v221 = v5;
            uint64_t v155 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long v232 = swift_slowAlloc();
            *(_DWORD *)uint64_t v155 = 136315138;
            v233 = (__CFError *)sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v232);
            sub_100726830();
            _os_log_impl((void *)&_mh_execute_header, v153, v154, "%s: failed key agreement", v155, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            sub_10044CE88((uint64_t)v225, (unint64_t)v224);

            sub_10044CE88((uint64_t)v223, (unint64_t)v52);
            sub_10044CE88((uint64_t)v226, (unint64_t)v221);
          }
          else
          {
            sub_10044CE88((uint64_t)v225, (unint64_t)v224);

            sub_10044CE88((uint64_t)v223, (unint64_t)v52);
            sub_10044CE88((uint64_t)v226, (unint64_t)v5);
          }

LABEL_109:
          (*(void (**)(char *, __SecKey *))(v194 + 8))(v190, v193);
          goto LABEL_110;
        }
        v221 = v5;
        *(void *)&long long v227 = v18;
        id v218 = v39;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v151 + 32))(v186, v150, v152);
        char v156 = v183;
        sub_100726460();
        uint64_t v219 = (__CFError *)sub_100726440();
        unint64_t v158 = v157;
        (*(void (**)(char *, void *))(v184 + 8))(v156, v185);
        id v220 = (id)v158;
        if (v158 >> 60 == 15)
        {
          uint64_t v159 = sub_100725EB0();
          os_log_type_t v160 = sub_1007266C0();
          if (os_log_type_enabled(v159, v160))
          {
            BOOL v161 = (uint8_t *)swift_slowAlloc();
            *(void *)&long long v232 = swift_slowAlloc();
            *(_DWORD *)BOOL v161 = 136315138;
            v233 = (__CFError *)sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v232);
            sub_100726830();
            _os_log_impl((void *)&_mh_execute_header, v159, v160, "%s: failed to convert sessionID to data", v161, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          sub_10044CE88((uint64_t)v225, (unint64_t)v224);
          uint64_t v162 = (void *)v227;

          id v163 = v218;
          sub_10044CE88((uint64_t)v223, (unint64_t)v222);
          sub_10044CE88((uint64_t)v226, (unint64_t)v221);

          (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v186, v188);
          goto LABEL_109;
        }
        char v164 = sub_10052F5DC((uint64_t)v223, (unint64_t)v52, (uint64_t)v225, (unint64_t)v224);
        long long v232 = xmmword_100794E40;
        sub_100431F80((uint64_t *)&unk_100A47AC0);
        uint64_t v165 = swift_allocObject();
        uint64_t v166 = v165;
        *(_OWORD *)(v165 + 16) = xmmword_1007955E0;
        if (v164)
        {
          *(_DWORD *)(v165 + 32) = *(_DWORD *)((char *)v211
                                             + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_localCounter);
          *(_DWORD *)(v165 + 36) = v38;
        }
        else
        {
          int v167 = *(_DWORD *)((char *)v211
                           + OBJC_IVAR____TtC17identityservicesd30IDSGlobalLinkP2PKeyNegotiation_localCounter);
          *(_DWORD *)(v165 + 32) = v38;
          *(_DWORD *)(v165 + 36) = v167;
        }
        swift_bridgeObjectRetain();
        sub_100725B70();
        sub_100725B70();
        swift_bridgeObjectRelease();
        sub_100725B70();
        long long v168 = v232;
        sub_100441FD4(v232, *((unint64_t *)&v232 + 1));
        uint64_t v169 = v186;
        id v170 = sub_10053151C(v186, 6518369, 0xE300000000000000, v168, *((uint64_t *)&v168 + 1), v166);
        sub_100442248(v168, *((unint64_t *)&v168 + 1));
        sub_100441FD4(v168, *((unint64_t *)&v168 + 1));
        id v171 = sub_10053151C(v169, 7562345, 0xE300000000000000, v168, *((uint64_t *)&v168 + 1), v166);
        swift_bridgeObjectRelease();
        sub_100442248(v168, *((unint64_t *)&v168 + 1));
        type metadata accessor for IDSGlobalLinkP2PNegotiatedKeys();
        id v172 = v170;
        id v173 = v171;
        id v215 = v172;
        *(void *)&long long v217 = v173;
        id v140 = sub_10045509C(v164 & 1, (uint64_t)v172, (uint64_t)v173);
        uint64_t v174 = sub_100725EB0();
        os_log_type_t v175 = sub_1007266E0();
        long long v228 = v174;
        if (os_log_type_enabled(v174, v175))
        {
          uint64_t v176 = swift_slowAlloc();
          uint64_t v177 = (void *)swift_slowAlloc();
          v233 = (__CFError *)swift_slowAlloc();
          *(_DWORD *)uint64_t v176 = v216;
          uint64_t v229 = sub_10043E578(0x2865766965636572, 0xEE00293A626F6C62, (uint64_t *)&v233);
          sub_100726830();
          *(_WORD *)(v176 + 12) = 2112;
          uint64_t v229 = (uint64_t)v140;
          id v178 = v140;
          sub_100726830();
          *uint64_t v177 = v140;

          unint64_t v179 = v228;
          _os_log_impl((void *)&_mh_execute_header, v228, v175, "%s: keys: %@", (uint8_t *)v176, 0x16u);
          sub_100431F80(&qword_100A44F10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          sub_10044CE88((uint64_t)v219, (unint64_t)v220);
          sub_10044CE88((uint64_t)v225, (unint64_t)v224);

          uint64_t v180 = (void *)v227;
          id v181 = v218;
        }
        else
        {
          sub_10044CE88((uint64_t)v219, (unint64_t)v220);
          sub_10044CE88((uint64_t)v225, (unint64_t)v224);

          uint64_t v180 = (void *)v227;
          id v181 = v218;
        }
        sub_10044CE88((uint64_t)v223, (unint64_t)v222);
        sub_10044CE88((uint64_t)v226, (unint64_t)v221);

        sub_100442248(v232, *((unint64_t *)&v232 + 1));
        (*(void (**)(uint64_t, uint64_t))(v189 + 8))(v186, v188);
        (*(void (**)(char *, __SecKey *))(v194 + 8))(v190, v193);
        (*(void (**)(char *, uint64_t))(v198 + 8))(v195, v197);
        return v140;
    }
  }
}

uint64_t sub_10052F5DC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_100725B90();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = &v23[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11, v14);
  uint64_t v16 = &v23[-v15];
  switch(a4 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_100441FD4(a3, a4);
      sub_100441FD4(a3, a4);
      break;
    default:
      break;
  }
  sub_100725BA0();
  sub_100442248(a3, a4);
  switch(a2 >> 62)
  {
    case 1uLL:
    case 2uLL:
      sub_100441FD4(a1, a2);
      sub_100441FD4(a1, a2);
      break;
    default:
      break;
  }
  sub_100725BA0();
  sub_100442248(a1, a2);
  sub_100531AC0((unint64_t *)&unk_100A47B88, (void (*)(uint64_t))&type metadata accessor for Data.Iterator);
  while (1)
  {
    sub_100726820();
    if (v28)
    {
      uint64_t v20 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
      v20(v16, v8);
      sub_100726820();
      v20(v13, v8);
      char v19 = v26 ^ 1;
      return v19 & 1;
    }
    unsigned int v17 = v27;
    sub_100726820();
    if (v25) {
      goto LABEL_10;
    }
    if (v17 < v24) {
      break;
    }
    if (v24 < v17)
    {
LABEL_10:
      unint64_t v18 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
      v18(v13, v8);
      v18(v16, v8);
      char v19 = 0;
      return v19 & 1;
    }
  }
  uint64_t v21 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v21(v13, v8);
  v21(v16, v8);
  char v19 = 1;
  return v19 & 1;
}

uint64_t sub_10052F980@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_1004BCFA8(a1, a2, a3);
}

id sub_10052F9C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSGlobalLinkP2PKeyNegotiation();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10052FAB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_100511878(v10, v9, a2, a3);
  if (a1 && (v11 & 0x8000000000000000) == 0 && v11 < a1)
  {
    switch((int)v5)
    {
      case 1:
        uint64_t v12 = a2 >> 32;
        goto LABEL_12;
      case 2:
        uint64_t v12 = *(void *)(a2 + 24);
        goto LABEL_14;
      default:
        goto LABEL_16;
    }
  }
  uint64_t v12 = sub_1005117FC(v10, a1, a2, a3);
  uint64_t v13 = 0;
  switch((int)v5)
  {
    case 1:
LABEL_12:
      uint64_t v13 = (int)a2;
      break;
    case 2:
LABEL_14:
      uint64_t v13 = *(void *)(a2 + 16);
      break;
    default:
      break;
  }
  if (v12 < v13)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x10052FC20);
  }
LABEL_16:
  uint64_t v14 = sub_100725B00();
  uint64_t v16 = v15;
  uint64_t result = sub_100442248(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

uint64_t sub_10052FC50(uint64_t a1, unsigned int a2, __SecKey *a3, __SecKey *a4)
{
  uint64_t v7 = sub_1007260B0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100725FE0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int __src = bswap32(a2);
  uint64_t v63 = sub_10044D6EC(&__src, v65);
  uint64_t v18 = v17 & 0xFFFFFFFFFFFFFFLL;
  CFErrorRef error = 0;
  CFDataRef v19 = SecKeyCopyExternalRepresentation(a3, &error);
  if (!v19
    || (CFDataRef v20 = v19,
        long long v62 = xmmword_100795A50,
        long long v66 = xmmword_100795A50,
        sub_100725B40(),
        v20,
        unint64_t v21 = *((void *)&v66 + 1),
        *((void *)&v66 + 1) >> 60 == 15))
  {
    unint64_t v22 = v18;
    CFErrorRef v23 = error;
    if (error)
    {
      unsigned __int8 v24 = sub_100725EB0();
      os_log_type_t v25 = sub_1007266C0();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        *(void *)&long long v66 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136315394;
        uint64_t v69 = sub_10043E578(0xD000000000000054, 0x80000001008C5A20, (uint64_t *)&v66);
        sub_100726830();
        *(_WORD *)(v26 + 12) = 2080;
        uint64_t v69 = (uint64_t)v23;
        sub_100431F80(&qword_100A47B98);
        uint64_t v27 = sub_100726480();
        uint64_t v69 = sub_10043E578(v27, v28, (uint64_t *)&v66);
        sub_100726830();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s: could not get external representation of local identity: %s", (uint8_t *)v26, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      uint64_t v29 = v63;
      unint64_t v30 = v22;
LABEL_13:
      sub_100442248(v29, v30);

      return 0;
    }
    uint64_t v42 = v63;
    unint64_t v43 = v22;
    goto LABEL_18;
  }
  unint64_t v61 = v18;
  uint64_t v31 = v66;
  CFDataRef v32 = SecKeyCopyExternalRepresentation(a4, &error);
  if (!v32
    || (CFDataRef v33 = v32,
        long long v66 = v62,
        sub_100725B40(),
        v33,
        unint64_t v34 = *((void *)&v66 + 1),
        *((void *)&v66 + 1) >> 60 == 15))
  {
    uint64_t v35 = v31;
    CFErrorRef v36 = error;
    if (error)
    {
      unint64_t v37 = v21;
      unsigned __int8 v24 = sub_100725EB0();
      os_log_type_t v38 = sub_1007266C0();
      if (os_log_type_enabled(v24, v38))
      {
        uint64_t v39 = swift_slowAlloc();
        *(void *)&long long v66 = swift_slowAlloc();
        *(_DWORD *)uint64_t v39 = 136315394;
        uint64_t v69 = sub_10043E578(0xD000000000000054, 0x80000001008C5A20, (uint64_t *)&v66);
        sub_100726830();
        *(_WORD *)(v39 + 12) = 2080;
        uint64_t v69 = (uint64_t)v36;
        sub_100431F80(&qword_100A47B98);
        uint64_t v40 = sub_100726480();
        uint64_t v69 = sub_10043E578(v40, v41, (uint64_t *)&v66);
        sub_100726830();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v24, v38, "%s: could not get external representation of remote identity: %s", (uint8_t *)v39, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      sub_10044CE88(v35, v37);
      uint64_t v29 = v63;
      unint64_t v30 = v61;
      goto LABEL_13;
    }
    sub_10044CE88(v35, v21);
    uint64_t v42 = v63;
    unint64_t v43 = v61;
LABEL_18:
    sub_100442248(v42, v43);
    return 0;
  }
  uint64_t v57 = v13;
  uint64_t v44 = v66;
  uint64_t v69 = v31;
  unint64_t v70 = v21;
  uint64_t v60 = v31;
  *(void *)&long long v62 = v21;
  sub_100441FD4(v31, v21);
  uint64_t v58 = v44;
  unint64_t v59 = v34;
  sub_100725B70();
  uint64_t v46 = v69;
  unint64_t v45 = v70;
  sub_100441FD4(v69, v70);
  sub_100531AC0((unint64_t *)&qword_100A44D60, (void (*)(uint64_t))&type metadata accessor for SHA256);
  sub_100725FD0();
  switch(v45 >> 62)
  {
    case 1uLL:
      if (v46 >> 32 < (int)v46) {
        __break(1u);
      }
      unint64_t v56 = v45 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100441FD4(v46, v45);
      sub_10044D49C((int)v46, v46 >> 32);
      goto LABEL_24;
    case 2uLL:
      uint64_t v48 = *(void *)(v46 + 16);
      unint64_t v56 = *(void *)(v46 + 24);
      sub_100441FD4(v46, v45);
      swift_retain();
      swift_retain();
      sub_10044D49C(v48, v56);
      swift_release();
      swift_release();
LABEL_24:
      sub_100442248(v46, v45);
      goto LABEL_27;
    case 3uLL:
      *(void *)((char *)&v66 + 6) = 0;
      *(void *)&long long v66 = 0;
      goto LABEL_26;
    default:
      *(void *)&long long v66 = v46;
      WORD4(v66) = v45;
      BYTE10(v66) = BYTE2(v45);
      BYTE11(v66) = BYTE3(v45);
      BYTE12(v66) = BYTE4(v45);
      BYTE13(v66) = BYTE5(v45);
LABEL_26:
      sub_100725FB0();
      sub_100442248(v46, v45);
LABEL_27:
      sub_100725FC0();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      sub_100442248(v46, v45);
      uint64_t v67 = v12;
      uint64_t v68 = sub_100531AC0(&qword_100A47BA0, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
      char v49 = sub_10044D5C4((uint64_t *)&v66);
      uint64_t v50 = v57;
      (*(void (**)(uint64_t *, char *, uint64_t))(v57 + 16))(v49, v16, v12);
      sub_10044C0F4(&v66, v67);
      sub_100725960();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v12);
      uint64_t v51 = v65[0];
      unint64_t v52 = v65[1];
      sub_10044C6AC((uint64_t)&v66);
      sub_10052FAB4(8, v51, v52, (uint64_t *)&v66);
      long long v53 = v66;
      long long v66 = xmmword_100794E40;
      uint64_t v54 = v63;
      unint64_t v55 = v61;
      sub_100725B70();
      sub_100725B70();
      sub_100442248(v53, *((unint64_t *)&v53 + 1));
      sub_10044CE88(v58, v59);
      sub_100442248(v54, v55);
      sub_10044CE88(v60, v62);
      sub_100442248(v69, v70);
      uint64_t result = v66;
      break;
  }
  return result;
}

void sub_100530518(void *a1, void *a2)
{
  if (a1)
  {
  }
}

unint64_t sub_100530558(uint64_t a1, uint64_t a2, unint64_t a3, __SecKey *a4, __SecKey *a5)
{
  uint64_t v102 = 0;
  uint64_t v10 = sub_1007260B0();
  uint64_t v101 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100725FE0();
  __chkstk_darwin(v14, v15);
  uint64_t v18 = (char *)&v91 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a3 >> 62)
  {
    case 1uLL:
      LODWORD(v19) = HIDWORD(a2) - a2;
      if (__OFSUB__(HIDWORD(a2), a2))
      {
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        __break(1u);
LABEL_65:
        __break(1u);
      }
      uint64_t v19 = (int)v19;
LABEL_6:
      if (v19 == 12)
      {
        uint64_t v97 = v16;
        uint64_t v99 = a1;
        uint64_t v103 = sub_100725B80();
        unint64_t v24 = v23;
        uint64_t v100 = sub_100725B80();
        unint64_t v26 = v25;
        unsigned int v27 = 0;
        switch(v24 >> 62)
        {
          case 1uLL:
            *(void *)&long long v98 = v25;
            uint64_t v34 = (int)v103;
            if ((int)v103 > v103 >> 32) {
              goto LABEL_60;
            }
            sub_100441FD4(v103, v24);
            uint64_t v35 = sub_100725910();
            if (!v35)
            {
              sub_100725930();
              __break(1u);
LABEL_67:
              sub_100725930();
              __break(1u);
              JUMPOUT(0x1005314DCLL);
            }
            uint64_t v36 = v35;
            uint64_t v37 = sub_100725940();
            BOOL v22 = __OFSUB__(v34, v37);
            uint64_t v38 = v34 - v37;
            if (v22) {
              goto LABEL_62;
            }
            sub_100725930();
            unsigned int v39 = *(_DWORD *)(v36 + v38);
            sub_100442248(v103, v24);
            unsigned int v27 = bswap32(v39);
            break;
          case 2uLL:
            *(void *)&long long v98 = v25;
            unint64_t v95 = v24;
            uint64_t v40 = *(void *)(v103 + 16);
            swift_retain();
            swift_retain();
            uint64_t v41 = sub_100725910();
            if (!v41) {
              goto LABEL_67;
            }
            uint64_t v42 = v41;
            uint64_t v43 = sub_100725940();
            BOOL v22 = __OFSUB__(v40, v43);
            uint64_t v44 = v40 - v43;
            if (v22) {
              goto LABEL_61;
            }
            sub_100725930();
            unsigned int v45 = *(_DWORD *)(v42 + v44);
            swift_release();
            swift_release();
            unsigned int v27 = bswap32(v45);
            unint64_t v24 = v95;
            break;
          case 3uLL:
            goto LABEL_21;
          default:
            unsigned int v27 = bswap32(v103);
            goto LABEL_21;
        }
        unint64_t v26 = v98;
LABEL_21:
        CFErrorRef error = 0;
        CFDataRef v46 = SecKeyCopyExternalRepresentation(a4, &error);
        if (!v46
          || (CFDataRef v47 = v46,
              long long v98 = xmmword_100795A50,
              long long v106 = xmmword_100795A50,
              sub_100725B40(),
              v47,
              unint64_t v48 = *((void *)&v106 + 1),
              *((void *)&v106 + 1) >> 60 == 15))
        {
          CFErrorRef v49 = error;
          if (error)
          {
            unint64_t v50 = v24;
            uint64_t v51 = sub_100725EB0();
            os_log_type_t v52 = sub_1007266C0();
            BOOL v53 = os_log_type_enabled(v51, v52);
            uint64_t v54 = v100;
            if (v53)
            {
              uint64_t v55 = swift_slowAlloc();
              *(void *)&long long v106 = swift_slowAlloc();
              *(_DWORD *)uint64_t v55 = 136315394;
              *(void *)&long long v109 = sub_10043E578(0xD00000000000004FLL, 0x80000001008C59D0, (uint64_t *)&v106);
              sub_100726830();
              *(_WORD *)(v55 + 12) = 2080;
              *(void *)&long long v109 = v49;
              sub_100431F80(&qword_100A47B98);
              uint64_t v56 = sub_100726480();
              *(void *)&long long v109 = sub_10043E578(v56, v57, (uint64_t *)&v106);
              sub_100726830();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s: could not get external representation of local identity: %s", (uint8_t *)v55, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              uint64_t v58 = v54;
              unint64_t v59 = v26;
LABEL_42:
              sub_100442248(v58, v59);
              sub_100442248(v103, v50);

              goto LABEL_43;
            }
            goto LABEL_41;
          }
LABEL_38:
          sub_100442248(v100, v26);
          uint64_t v32 = v103;
          unint64_t v33 = v24;
          goto LABEL_39;
        }
        uint64_t v96 = v106;
        CFDataRef v60 = SecKeyCopyExternalRepresentation(a5, &error);
        if (!v60 || (v61 = v60, long long v106 = v98, sub_100725B40(), v61, *((void *)&v106 + 1) >> 60 == 15))
        {
          CFErrorRef v62 = error;
          if (error)
          {
            unint64_t v50 = v24;
            uint64_t v51 = sub_100725EB0();
            os_log_type_t v63 = sub_1007266C0();
            BOOL v64 = os_log_type_enabled(v51, v63);
            uint64_t v54 = v100;
            if (v64)
            {
              uint64_t v65 = swift_slowAlloc();
              uint64_t v66 = swift_slowAlloc();
              *(void *)&long long v98 = v26;
              *(void *)&long long v106 = v66;
              *(_DWORD *)uint64_t v65 = 136315394;
              *(void *)&long long v109 = sub_10043E578(0xD00000000000004FLL, 0x80000001008C59D0, (uint64_t *)&v106);
              sub_100726830();
              *(_WORD *)(v65 + 12) = 2080;
              *(void *)&long long v109 = v62;
              sub_100431F80(&qword_100A47B98);
              uint64_t v67 = sub_100726480();
              *(void *)&long long v109 = sub_10043E578(v67, v68, (uint64_t *)&v106);
              sub_100726830();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v51, v63, "%s: could not get external representation of remote identity: %s", (uint8_t *)v65, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
              sub_10044CE88(v96, v48);
              uint64_t v58 = v54;
              unint64_t v59 = v98;
              goto LABEL_42;
            }
            sub_10044CE88(v96, v48);
LABEL_41:
            uint64_t v58 = v54;
            unint64_t v59 = v26;
            goto LABEL_42;
          }
          sub_10044CE88(v96, v48);
          goto LABEL_38;
        }
        *(void *)&long long v98 = v26;
        unint64_t v95 = v24;
        long long v109 = v106;
        long long v93 = v106;
        sub_100441FD4(v106, *((unint64_t *)&v106 + 1));
        unint64_t v94 = v48;
        sub_100725B70();
        unint64_t v73 = *((void *)&v109 + 1);
        uint64_t v72 = v109;
        sub_100441FD4(v109, *((unint64_t *)&v109 + 1));
        sub_100531AC0((unint64_t *)&qword_100A44D60, (void (*)(uint64_t))&type metadata accessor for SHA256);
        sub_100725FD0();
        switch(v73 >> 62)
        {
          case 1uLL:
            if (v72 >> 32 < (int)v72) {
              goto LABEL_65;
            }
            unint64_t v92 = v73 & 0x3FFFFFFFFFFFFFFFLL;
            sub_100441FD4(v72, v73);
            sub_10044D49C((int)v72, v72 >> 32);
LABEL_48:
            sub_100442248(v72, v73);
            break;
          case 2uLL:
            uint64_t v75 = *(void *)(v72 + 16);
            unint64_t v92 = *(void *)(v72 + 24);
            sub_100441FD4(v72, v73);
            swift_retain();
            swift_retain();
            sub_10044D49C(v75, v92);
            swift_release();
            swift_release();
            goto LABEL_48;
          case 3uLL:
            *(void *)((char *)&v106 + 6) = 0;
            *(void *)&long long v106 = 0;
            goto LABEL_50;
          default:
            *(void *)&long long v106 = v72;
            WORD4(v106) = v73;
            BYTE10(v106) = BYTE2(v73);
            BYTE11(v106) = BYTE3(v73);
            BYTE12(v106) = BYTE4(v73);
            BYTE13(v106) = BYTE5(v73);
LABEL_50:
            sub_100725FB0();
            sub_100442248(v72, v73);
            break;
        }
        sub_100725FC0();
        (*(void (**)(char *, uint64_t))(v101 + 8))(v13, v10);
        sub_100442248(v72, v73);
        uint64_t v107 = v14;
        uint64_t v108 = sub_100531AC0(&qword_100A47BA0, (void (*)(uint64_t))&type metadata accessor for SHA256Digest);
        uint64_t v76 = sub_10044D5C4((uint64_t *)&v106);
        uint64_t v77 = v97;
        (*(void (**)(uint64_t *, char *, uint64_t))(v97 + 16))(v76, v18, v14);
        sub_10044C0F4(&v106, v107);
        sub_100725960();
        (*(void (**)(char *, uint64_t))(v77 + 8))(v18, v14);
        uint64_t v78 = v105[0];
        unint64_t v79 = v105[1];
        sub_10044C6AC((uint64_t)&v106);
        sub_10052FAB4(8, v78, v79, (uint64_t *)&v106);
        long long v80 = v106;
        uint64_t v81 = v100;
        LOBYTE(v77) = sub_100453588(v106, *((unint64_t *)&v106 + 1), v100, v98);
        uint64_t v82 = sub_100725EB0();
        os_log_type_t v83 = sub_1007266E0();
        BOOL v84 = os_log_type_enabled(v82, v83);
        if ((v77 & 1) == 0)
        {
          if (v84)
          {
            uint64_t v86 = swift_slowAlloc();
            v105[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v86 = 136315394;
            *(void *)&long long v106 = sub_10043E578(0xD00000000000004FLL, 0x80000001008C59D0, v105);
            sub_100726830();
            *(_WORD *)(v86 + 12) = 2080;
            uint64_t v102 = v86 + 14;
            swift_beginAccess();
            long long v87 = v109;
            sub_100441FD4(v109, *((unint64_t *)&v109 + 1));
            uint64_t v88 = sub_100725AA0();
            unint64_t v90 = v89;
            sub_100442248(v87, *((unint64_t *)&v87 + 1));
            uint64_t v104 = sub_10043E578(v88, v90, v105);
            sub_100726830();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v82, v83, "%s: sha bytes do not match (concatenatedData: %s)", (uint8_t *)v86, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            sub_10044CE88(v93, *((unint64_t *)&v93 + 1));
            sub_100442248(v80, *((unint64_t *)&v80 + 1));
            sub_10044CE88(v96, v94);
            sub_100442248(v100, v98);
            sub_100442248(v103, v95);

            unint64_t v33 = *((void *)&v87 + 1);
            uint64_t v32 = v87;
          }
          else
          {
            sub_10044CE88(v93, *((unint64_t *)&v93 + 1));
            sub_100442248(v80, *((unint64_t *)&v80 + 1));
            sub_10044CE88(v96, v94);
            sub_100442248(v81, v98);
            sub_100442248(v103, v95);

            unint64_t v33 = *((void *)&v109 + 1);
            uint64_t v32 = v109;
          }
          goto LABEL_39;
        }
        if (v84)
        {
          id v85 = (uint8_t *)swift_slowAlloc();
          *(void *)&long long v106 = swift_slowAlloc();
          *(_DWORD *)id v85 = 136315138;
          v105[0] = sub_10043E578(0xD00000000000004FLL, 0x80000001008C59D0, (uint64_t *)&v106);
          sub_100726830();
          _os_log_impl((void *)&_mh_execute_header, v82, v83, "%s: sha bytes match", v85, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        sub_10044CE88(v93, *((unint64_t *)&v93 + 1));
        sub_100442248(v80, *((unint64_t *)&v80 + 1));
        sub_10044CE88(v96, v94);
        sub_100442248(v81, v98);
        sub_100442248(v103, v95);

        sub_100442248(v109, *((unint64_t *)&v109 + 1));
        unsigned __int8 v71 = 0;
      }
      else
      {
LABEL_9:
        sub_100441FD4(a2, a3);
        unint64_t v28 = sub_100725EB0();
        os_log_type_t v29 = sub_1007266C0();
        if (!os_log_type_enabled(v28, v29))
        {

          uint64_t v32 = a2;
          unint64_t v33 = a3;
LABEL_39:
          sub_100442248(v32, v33);
LABEL_43:
          unsigned int v27 = 0;
          unsigned __int8 v71 = 1;
          goto LABEL_44;
        }
        uint64_t v30 = swift_slowAlloc();
        *(void *)&long long v106 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315394;
        *(void *)&long long v109 = sub_10043E578(0xD00000000000004FLL, 0x80000001008C59D0, (uint64_t *)&v106);
        sub_100726830();
        *(_WORD *)(v30 + 12) = 2048;
        uint64_t v31 = 0;
        switch(a3 >> 62)
        {
          case 0uLL:
            uint64_t v31 = BYTE6(a3);
            goto LABEL_34;
          case 1uLL:
            LODWORD(v31) = HIDWORD(a2) - a2;
            if (__OFSUB__(HIDWORD(a2), a2)) {
              goto LABEL_63;
            }
            uint64_t v31 = (int)v31;
LABEL_34:
            *(void *)&long long v109 = v31;
            sub_100726830();
            sub_100442248(a2, a3);
            _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s: unexpected number of bytes: %ld; expected 12",
              (uint8_t *)v30,
              0x16u);
            unsigned __int8 v71 = 1;
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            unsigned int v27 = 0;
            break;
          case 2uLL:
            uint64_t v70 = *(void *)(a2 + 16);
            uint64_t v69 = *(void *)(a2 + 24);
            BOOL v22 = __OFSUB__(v69, v70);
            uint64_t v31 = v69 - v70;
            if (!v22) {
              goto LABEL_34;
            }
            goto LABEL_64;
          case 3uLL:
            goto LABEL_34;
          default:
            JUMPOUT(0);
        }
      }
LABEL_44:
      LOBYTE(v109) = v71;
      return v27 | ((unint64_t)v71 << 32);
    case 2uLL:
      uint64_t v21 = *(void *)(a2 + 16);
      uint64_t v20 = *(void *)(a2 + 24);
      BOOL v22 = __OFSUB__(v20, v21);
      uint64_t v19 = v20 - v21;
      if (!v22) {
        goto LABEL_6;
      }
      goto LABEL_59;
    case 3uLL:
      goto LABEL_9;
    default:
      uint64_t v19 = BYTE6(a3);
      goto LABEL_6;
  }
}

id sub_10053151C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v38 = a6;
  uint64_t v47 = a1;
  uint64_t v10 = sub_100726470();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100726030();
  uint64_t v45 = *(void *)(v15 - 8);
  uint64_t v46 = v15;
  uint64_t v17 = __chkstk_darwin(v15, v16);
  uint64_t v37 = (char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v19);
  uint64_t v21 = (char *)v36 - v20;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v50 = a4;
  uint64_t v51 = a5;
  uint64_t v48 = 0;
  unint64_t v49 = 0xE000000000000000;
  sub_1007269F0(36);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v42 = a2;
  uint64_t v48 = a2;
  unint64_t v49 = a3;
  v52._object = (void *)0x80000001008C5970;
  v52._countAndFlagsBits = 0xD000000000000022;
  sub_1007264C0(v52);
  sub_100726460();
  uint64_t v22 = sub_100726440();
  unint64_t v24 = v23;
  swift_bridgeObjectRelease();
  unint64_t v25 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  uint64_t v43 = v11 + 8;
  uint64_t v44 = v10;
  unsigned int v39 = v25;
  id result = (id)v25(v14, v10);
  if (v24 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    sub_1007260B0();
    uint64_t v48 = v22;
    unint64_t v49 = v24;
    uint64_t v27 = sub_100531AC0((unint64_t *)&qword_100A44D60, (void (*)(uint64_t))&type metadata accessor for SHA256);
    sub_10048700C();
    v36[1] = v27;
    sub_100725FF0();
    sub_10044CE88(v22, v24);
    sub_100726010();
    unint64_t v28 = *(void (**)(char *, uint64_t))(v45 + 8);
    v28(v21, v46);
    uint64_t v45 = v50;
    v36[0] = v51;
    uint64_t v50 = v40;
    uint64_t v51 = v41;
    uint64_t v48 = 0;
    unint64_t v49 = 0xE000000000000000;
    sub_1007269F0(36);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v48 = v42;
    unint64_t v49 = a3;
    v53._object = (void *)0x80000001008C59A0;
    v53._countAndFlagsBits = 0xD000000000000022;
    sub_1007264C0(v53);
    sub_100726460();
    uint64_t v29 = sub_100726440();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    id result = (id)v39(v14, v44);
    if (v31 >> 60 != 15)
    {
      uint64_t v48 = v29;
      unint64_t v49 = v31;
      uint64_t v32 = v37;
      sub_100725FF0();
      sub_10044CE88(v29, v31);
      sub_100726010();
      v28(v32, v46);
      uint64_t v33 = v50;
      uint64_t v34 = v51;
      type metadata accessor for IDSGlobalLinkP2PNegotiatedKeySet();
      uint64_t v35 = v38;
      swift_bridgeObjectRetain();
      return sub_1004547EC(v45, v36[0], v33, v34, v35);
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_1005319A4()
{
  unint64_t result = qword_100A47AD8;
  if (!qword_100A47AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A47AD8);
  }
  return result;
}

uint64_t sub_1005319F8()
{
  return type metadata accessor for IDSGlobalLinkP2PKeyNegotiation();
}

uint64_t sub_100531A00()
{
  uint64_t result = sub_100725ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100531AC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet()
{
  uint64_t result = qword_100A527A0;
  if (!qword_100A527A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100531B54()
{
  uint64_t v0 = sub_100725ED0();
  sub_10045091C(v0, qword_100A53628);
  sub_10044DB64(v0, (uint64_t)qword_100A53628);
  return sub_1004DFE9C(2);
}

uint64_t sub_100531BA4()
{
  uint64_t v1 = v0;
  sub_100726E40();
  char v2 = *(unsigned char *)(v0 + 4);
  LODWORD(v8) = *(_DWORD *)v0;
  BYTE4(v8) = v2;
  sub_10044F12C();
  sub_1007263E0();
  uint64_t v3 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  sub_100534288(v6, v3);
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  sub_100535084(&qword_100A44E10, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionPublicIdentity);
  sub_1007263E0();
  sub_100726E10(*(void *)(v1 + *(int *)(v4 + 28)));
  sub_100726E10(*(void *)(v1 + *(int *)(v4 + 32)));
  long long v10 = v6[2];
  long long v11 = v6[3];
  uint64_t v12 = v7;
  long long v8 = v6[0];
  long long v9 = v6[1];
  sub_100726E20();
  sub_1007269F0(95);
  v13._countAndFlagsBits = 0x726574614D79654BLL;
  v13._object = (void *)0xEF207465536C6169;
  sub_1007264C0(v13);
  v14._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v14);
  swift_bridgeObjectRelease();
  v15._object = (void *)0x80000001008C0FD0;
  v15._countAndFlagsBits = 0xD000000000000012;
  sub_1007264C0(v15);
  v16._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v16);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0xD000000000000013;
  v17._object = (void *)0x80000001008C0FF0;
  sub_1007264C0(v17);
  sub_100535084(&qword_100A44E00, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionPublicIdentity);
  v18._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 0xD000000000000015;
  v19._object = (void *)0x80000001008C5A80;
  sub_1007264C0(v19);
  v20._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0x6169726574616D20;
  v21._object = (void *)0xEB000000003A736CLL;
  sub_1007264C0(v21);
  v22._countAndFlagsBits = sub_100531ED0();
  sub_1007264C0(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 62;
  v23._object = (void *)0xE100000000000000;
  sub_1007264C0(v23);
  return 0;
}

uint64_t sub_100531ED0()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v35 = *(void *)(v1 - 8);
  uint64_t v36 = v1;
  uint64_t v3 = __chkstk_darwin(v1, v2);
  unint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v6);
  uint64_t v34 = (uint64_t)v29 - v7;
  uint64_t v8 = sub_100725D30();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v0 + 8);
  int64_t v14 = *(void *)(v13 + 16);
  if (v14)
  {
    uint64_t v37 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100534028(0, v14, 0);
    uint64_t result = sub_100480130(v13);
    int64_t v16 = result;
    int v18 = v17;
    char v20 = v19 & 1;
    uint64_t v32 = v8;
    uint64_t v33 = v13 + 56;
    v29[1] = v9 + 32;
    unint64_t v30 = (void (**)(char *, char *, uint64_t))(v9 + 16);
    unint64_t v31 = v12;
    while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *(unsigned char *)(v13 + 32))
    {
      if (((*(void *)(v33 + (((unint64_t)v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(v13 + 36) != v18) {
        goto LABEL_16;
      }
      uint64_t v21 = v34;
      sub_10053454C(*(void *)(v13 + 48) + *(void *)(v35 + 72) * v16, v34, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_1005346C0(v21, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      (*v30)(v12, &v5[*(int *)(v36 + 20)], v8);
      sub_1005345B4((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      Swift::String v22 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100534028(0, v22[2] + 1, 1);
        Swift::String v22 = v37;
      }
      unint64_t v24 = v22[2];
      unint64_t v23 = v22[3];
      if (v24 >= v23 >> 1)
      {
        sub_100534028(v23 > 1, v24 + 1, 1);
        Swift::String v22 = v37;
      }
      v22[2] = v24 + 1;
      unint64_t v25 = (unint64_t)v22
          + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))
          + *(void *)(v9 + 72) * v24;
      uint64_t v12 = v31;
      uint64_t v8 = v32;
      (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v25, v31, v32);
      uint64_t v37 = v22;
      uint64_t result = sub_1004801D0(v16, v18, v20 & 1, v13);
      int64_t v16 = result;
      int v18 = v26;
      char v20 = v27 & 1;
      if (!--v14)
      {
        sub_100482640(result, v26, v27 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
  }
  else
  {
LABEL_13:
    uint64_t v28 = sub_100726580();
    swift_bridgeObjectRelease();
    return v28;
  }
  return result;
}

uint64_t sub_100532260(void *a1)
{
  uint64_t v112 = a1;
  uint64_t v94 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v3 = __chkstk_darwin(v94, v2);
  unint64_t v5 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v6);
  uint64_t v8 = (char *)&v90 - v7;
  uint64_t v9 = type metadata accessor for IDSGroupEncryptionMaterialData();
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v102 = (uint64_t)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v101 = (uint64_t)&v90 - v15;
  __chkstk_darwin(v14, v16);
  uint64_t v110 = (uint64_t)&v90 - v17;
  uint64_t v114 = sub_100431F80(&qword_100A47BA8);
  uint64_t v19 = __chkstk_darwin(v114, v18);
  uint64_t v21 = (unint64_t *)((char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v19, v22);
  unint64_t v24 = (uint64_t *)((char *)&v90 - v23);
  uint64_t v99 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v113 = *(void *)(v99 - 8);
  uint64_t v26 = __chkstk_darwin(v99, v25);
  uint64_t v28 = (char *)&v90 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __chkstk_darwin(v26, v29);
  uint64_t v32 = (char *)&v90 - v31;
  uint64_t v34 = __chkstk_darwin(v30, v33);
  uint64_t v100 = (uint64_t)&v90 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  unsigned int v39 = (char *)&v90 - v38;
  __chkstk_darwin(v37, v40);
  uint64_t v111 = (uint64_t)&v90 - v41;
  unsigned int v121 = &_swiftEmptySetSingleton;
  uint64_t v118 = v1;
  uint64_t v42 = *(void *)(v1 + 8);
  uint64_t v43 = *(void *)(v42 + 56);
  uint64_t v103 = v42 + 56;
  uint64_t v44 = 1 << *(unsigned char *)(v42 + 32);
  uint64_t v45 = -1;
  if (v44 < 64) {
    uint64_t v45 = ~(-1 << v44);
  }
  unint64_t v46 = v45 & v43;
  int64_t v104 = (unint64_t)(v44 + 63) >> 6;
  long long v93 = &v120;
  uint64_t v115 = v42;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v48 = 0;
  *(void *)&long long v49 = 136315394;
  long long v92 = v49;
  uint64_t v91 = (char *)&type metadata for Any + 8;
  *(void *)&long long v49 = 136315906;
  long long v90 = v49;
  uint64_t v116 = v5;
  uint64_t v50 = (uint64_t)v8;
  uint64_t v108 = v24;
  long long v109 = v8;
  unint64_t v51 = v46;
  os_log_type_t v105 = v32;
  long long v106 = v21;
  long long v98 = v28;
  if (v46) {
    goto LABEL_7;
  }
LABEL_8:
  int64_t v54 = v48 + 1;
  if (!__OFADD__(v48, 1))
  {
    if (v54 < v104)
    {
      unint64_t v55 = *(void *)(v103 + 8 * v54);
      ++v48;
      if (v55) {
        goto LABEL_21;
      }
      int64_t v48 = v54 + 1;
      if (v54 + 1 >= v104) {
        goto LABEL_34;
      }
      unint64_t v55 = *(void *)(v103 + 8 * v48);
      if (v55) {
        goto LABEL_21;
      }
      int64_t v48 = v54 + 2;
      if (v54 + 2 >= v104) {
        goto LABEL_34;
      }
      unint64_t v55 = *(void *)(v103 + 8 * v48);
      if (v55)
      {
LABEL_21:
        unint64_t v51 = (v55 - 1) & v55;
        for (unint64_t i = __clz(__rbit64(v55)) + (v48 << 6); ; unint64_t i = v52 | (v48 << 6))
        {
          uint64_t v57 = v111;
          sub_10053454C(*(void *)(v115 + 48) + *(void *)(v113 + 72) * i, v111, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          sub_1005346C0(v57, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          sub_100532EE8((uint64_t)v39, v112, v24);
          sub_1004546B8((uint64_t)v24, (uint64_t)v21, &qword_100A47BA8);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            unint64_t v58 = *v21;
            if (qword_100A52510 != -1) {
              swift_once();
            }
            uint64_t v59 = sub_100725ED0();
            sub_10044DB64(v59, (uint64_t)qword_100A53628);
            sub_10053454C((uint64_t)v39, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            sub_100452A44(v58);
            sub_100452A44(v58);
            CFDataRef v60 = sub_100725EB0();
            uint64_t v61 = (uint64_t)v28;
            os_log_type_t v62 = sub_1007266C0();
            if (os_log_type_enabled(v60, v62))
            {
              uint64_t v63 = swift_slowAlloc();
              uint64_t v64 = swift_slowAlloc();
              unint64_t v117 = v51;
              uint64_t v120 = v64;
              *(_DWORD *)uint64_t v63 = v92;
              sub_100535084(&qword_100A44D38, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
              uint64_t v65 = sub_100726D00();
              *(void *)(v63 + 4) = sub_10043E578(v65, v66, &v120);
              swift_bridgeObjectRelease();
              sub_1005345B4(v61, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
              *(_WORD *)(v63 + 12) = 2080;
              uint64_t v119 = v58;
              sub_100452A44(v58);
              uint64_t v67 = sub_100726480();
              *(void *)(v63 + 14) = sub_10043E578(v67, v68, &v120);
              uint64_t v50 = (uint64_t)v109;
              swift_bridgeObjectRelease();
              sub_100452A54(v58);
              sub_100452A54(v58);
              _os_log_impl((void *)&_mh_execute_header, v60, v62, "materialData: could not get material data for material %s: %s", (uint8_t *)v63, 0x16u);
              swift_arrayDestroy();
              unint64_t v51 = v117;
              swift_slowDealloc();
              uint64_t v21 = v106;
              swift_slowDealloc();
            }
            else
            {

              sub_100452A54(v58);
              sub_100452A54(v58);
              sub_1005345B4(v61, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            }
            sub_100452A54(v58);
            unint64_t v24 = v108;
            sub_1005344EC((uint64_t)v108);
            uint64_t result = sub_1005345B4((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            uint64_t v28 = (char *)v61;
            uint64_t v32 = v105;
            if (!v51) {
              goto LABEL_8;
            }
          }
          else
          {
            unint64_t v117 = v51;
            int64_t v107 = v48;
            uint64_t v69 = v110;
            sub_1005346C0((uint64_t)v21, v110, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionMaterialData);
            uint64_t v70 = v69;
            uint64_t v71 = v102;
            sub_10053454C(v70, v102, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionMaterialData);
            uint64_t v72 = v101;
            sub_10044EDC8(v101, v71);
            sub_1005345B4(v72, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionMaterialData);
            if (qword_100A52510 != -1) {
              swift_once();
            }
            uint64_t v73 = sub_100725ED0();
            sub_10044DB64(v73, (uint64_t)qword_100A53628);
            uint64_t v74 = (uint64_t)v39;
            uint64_t v75 = (uint64_t)v39;
            uint64_t v76 = v100;
            sub_10053454C(v74, v100, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            uint64_t v77 = v118;
            sub_10053454C(v118, v50, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
            sub_10053454C(v77, (uint64_t)v116, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
            sub_10053454C(v75, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            uint64_t v78 = sub_100725EB0();
            os_log_type_t v79 = sub_1007266A0();
            int v80 = v79;
            if (os_log_type_enabled(v78, v79))
            {
              uint64_t v81 = swift_slowAlloc();
              uint64_t v97 = swift_slowAlloc();
              uint64_t v120 = v97;
              *(_DWORD *)uint64_t v81 = v90;
              int v96 = v80;
              sub_100535084(&qword_100A44D38, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
              uint64_t v82 = sub_100726D00();
              uint64_t v119 = sub_10043E578(v82, v83, &v120);
              sub_100726830();
              swift_bridgeObjectRelease();
              unint64_t v95 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent;
              sub_1005345B4(v76, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
              *(_WORD *)(v81 + 12) = 2048;
              uint64_t v84 = *(void *)&v109[*(int *)(v94 + 28)];
              sub_1005345B4((uint64_t)v109, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
              uint64_t v119 = v84;
              sub_100726830();
              *(_WORD *)(v81 + 22) = 2080;
              type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
              sub_100535084(&qword_100A44E00, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionPublicIdentity);
              uint64_t v85 = sub_100726D00();
              uint64_t v119 = sub_10043E578(v85, v86, &v120);
              uint64_t v32 = v105;
              sub_100726830();
              swift_bridgeObjectRelease();
              sub_1005345B4((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
              *(_WORD *)(v81 + 32) = 2080;
              sub_100725D30();
              sub_100535084(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v87 = sub_100726D00();
              uint64_t v119 = sub_10043E578(v87, v88, &v120);
              uint64_t v50 = (uint64_t)v109;
              sub_100726830();
              swift_bridgeObjectRelease();
              unint64_t v89 = v95;
              sub_1005345B4((uint64_t)v32, (uint64_t (*)(void))v95);
              _os_log_impl((void *)&_mh_execute_header, v78, (os_log_type_t)v96, "materialData: encrypted key %sfor participantID: %llu; for public identity: %s, mki: %s",
                (uint8_t *)v81,
                0x2Au);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {
              sub_1005345B4(v50, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);

              unint64_t v89 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent;
              sub_1005345B4((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
              sub_1005345B4((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
              sub_1005345B4(v76, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            }
            sub_1005345B4(v110, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionMaterialData);
            unint64_t v24 = v108;
            sub_1005344EC((uint64_t)v108);
            uint64_t result = sub_1005345B4(v75, (uint64_t (*)(void))v89);
            uint64_t v28 = v98;
            unsigned int v39 = (char *)v75;
            uint64_t v21 = v106;
            int64_t v48 = v107;
            unint64_t v51 = v117;
            if (!v117) {
              goto LABEL_8;
            }
          }
LABEL_7:
          unint64_t v52 = __clz(__rbit64(v51));
          v51 &= v51 - 1;
        }
      }
      int64_t v56 = v54 + 3;
      if (v56 < v104)
      {
        unint64_t v55 = *(void *)(v103 + 8 * v56);
        if (v55)
        {
          int64_t v48 = v56;
          goto LABEL_21;
        }
        while (1)
        {
          int64_t v48 = v56 + 1;
          if (__OFADD__(v56, 1)) {
            goto LABEL_36;
          }
          if (v48 >= v104) {
            break;
          }
          unint64_t v55 = *(void *)(v103 + 8 * v48);
          ++v56;
          if (v55) {
            goto LABEL_21;
          }
        }
      }
    }
LABEL_34:
    swift_release();
    return (uint64_t)v121;
  }
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

void sub_100532EE8(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = a2[3];
  uint64_t v8 = a2[4];
  sub_10044C0F4(a2, v7);
  uint64_t v9 = (int *)type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v10 = (uint64_t *)(a1 + v9[7]);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  uint64_t v13 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 8))(v11, v12, (uint64_t)v3 + *(int *)(v13 + 24), v7, v8);
  uint64_t v16 = v14;
  if (v17)
  {
    *a3 = v14;
    goto LABEL_5;
  }
  unint64_t v18 = v15;
  if (!*((unsigned char *)v3 + 4))
  {
    int v19 = *v3;
    uint64_t v87 = (int *)sub_100431F80(&qword_100A474D8);
    unint64_t v88 = v18;
    uint64_t v20 = (char *)a3 + v87[12];
    if (v19)
    {
      *(unsigned char *)a3 = 1;
      uint64_t v55 = a1 + v9[5];
      uint64_t v56 = sub_100725D30();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v20, v55, v56);
      sub_100431F80((uint64_t *)&unk_100A45610);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_100795AA0;
      sub_100726430();
      sub_10044C138(v16, v18, 0);
      swift_bridgeObjectRetain();
      sub_1007269A0();
      uint64_t v89 = sub_100725D10();
      LOWORD(v90) = v58;
      BYTE2(v90) = v59;
      BYTE3(v90) = v60;
      BYTE4(v90) = v61;
      BYTE5(v90) = v62;
      BYTE6(v90) = v63;
      HIBYTE(v90) = v64;
      uint64_t v65 = sub_100466C6C((uint64_t)&v89, (uint64_t)v91);
      unint64_t v67 = v66;
      swift_bridgeObjectRelease();
      uint64_t v68 = sub_10050FEA4(v65, v67);
      *(void *)(inited + 96) = &type metadata for Data;
      *(void *)(inited + 72) = v68;
      *(void *)(inited + 80) = v69;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v70;
      sub_1007269A0();
      *(void *)(inited + 168) = &type metadata for Data;
      *(void *)(inited + 144) = v16;
      *(void *)(inited + 152) = v88;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v71;
      sub_100441FD4(v16, v88);
      sub_1007269A0();
      uint64_t v72 = (uint64_t *)(a1 + v9[6]);
      uint64_t v73 = *v72;
      unint64_t v74 = v72[1];
      *(void *)(inited + 240) = &type metadata for Data;
      *(void *)(inited + 216) = v73;
      *(void *)(inited + 224) = v74;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v75;
      sub_100441FD4(v73, v74);
      sub_1007269A0();
      int v76 = *(_DWORD *)(a1 + v9[10]);
      *(void *)(inited + 312) = &type metadata for UInt32;
      *(_DWORD *)(inited + 288) = v76;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v77;
      sub_1007269A0();
      *(void *)(inited + 384) = &type metadata for Int;
      *(void *)(inited + 360) = 1;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v78;
      sub_1007269A0();
      uint64_t v79 = *(void *)((char *)v4 + *(int *)(v13 + 32));
      *(void *)(inited + 456) = &type metadata for UInt64;
      *(void *)(inited + 432) = v79;
      sub_10044E7C0(inited);
      Class isa = sub_100726380().super.isa;
      swift_bridgeObjectRelease();
      id v81 = (id)JWEncodeDictionary();

      if (v81)
      {
        uint64_t v82 = (uint64_t *)((char *)a3 + v87[16]);
        uint64_t v83 = v87[20];
        uint64_t v84 = sub_100725B50();
        uint64_t v86 = v85;

        sub_10044C144(v16, v88, 0);
        sub_10044C144(v16, v88, 0);
        *uint64_t v82 = v84;
        v82[1] = v86;
        *(_DWORD *)((char *)a3 + v83) = 0;
        goto LABEL_13;
      }
    }
    else
    {
      *(unsigned char *)a3 = 0;
      uint64_t v21 = a1 + v9[5];
      uint64_t v22 = sub_100725D30();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 16))(v20, v21, v22);
      sub_100431F80((uint64_t *)&unk_100A45610);
      uint64_t v23 = swift_allocObject();
      *(_OWORD *)(v23 + 16) = xmmword_100795A70;
      sub_100726430();
      swift_bridgeObjectRetain();
      sub_10044C138(v16, v18, 0);
      sub_1007269A0();
      uint64_t v89 = sub_100725D10();
      LOWORD(v90) = v24;
      BYTE2(v90) = v25;
      BYTE3(v90) = v26;
      BYTE4(v90) = v27;
      BYTE5(v90) = v28;
      BYTE6(v90) = v29;
      HIBYTE(v90) = v30;
      uint64_t v31 = sub_100466C6C((uint64_t)&v89, (uint64_t)v91);
      unint64_t v33 = v32;
      swift_bridgeObjectRelease();
      uint64_t v34 = sub_10050FEA4(v31, v33);
      *(void *)(v23 + 96) = &type metadata for Data;
      *(void *)(v23 + 72) = v34;
      *(void *)(v23 + 80) = v35;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v36;
      sub_1007269A0();
      *(void *)(v23 + 168) = &type metadata for Data;
      *(void *)(v23 + 144) = v16;
      *(void *)(v23 + 152) = v88;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v37;
      sub_100441FD4(v16, v88);
      sub_1007269A0();
      uint64_t v38 = (uint64_t *)(a1 + v9[6]);
      uint64_t v39 = *v38;
      unint64_t v40 = v38[1];
      *(void *)(v23 + 240) = &type metadata for Data;
      *(void *)(v23 + 216) = v39;
      *(void *)(v23 + 224) = v40;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v41;
      sub_100441FD4(v39, v40);
      sub_1007269A0();
      int v42 = *(_DWORD *)(a1 + v9[10]);
      *(void *)(v23 + 312) = &type metadata for UInt32;
      *(_DWORD *)(v23 + 288) = v42;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v43;
      sub_1007269A0();
      *(void *)(v23 + 384) = &type metadata for Int;
      *(void *)(v23 + 360) = 1;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v44;
      sub_1007269A0();
      uint64_t v45 = *(void *)((char *)v4 + *(int *)(v13 + 32));
      *(void *)(v23 + 456) = &type metadata for UInt64;
      *(void *)(v23 + 432) = v45;
      uint64_t v89 = sub_100726430();
      uint64_t v90 = v46;
      sub_1007269A0();
      int v47 = *(unsigned __int8 *)(a1 + v9[12]);
      *(void *)(v23 + 528) = &type metadata for UInt8;
      *(unsigned char *)(v23 + 504) = v47;
      sub_10044E7C0(v23);
      Class v48 = sub_100726380().super.isa;
      swift_bridgeObjectRelease();
      id v49 = (id)JWEncodeDictionary();

      if (v49)
      {
        uint64_t v50 = (uint64_t *)((char *)a3 + v87[16]);
        uint64_t v51 = v87[20];
        uint64_t v52 = sub_100725B50();
        uint64_t v54 = v53;
        sub_10044C144(v16, v88, 0);
        sub_10044C144(v16, v88, 0);

        *uint64_t v50 = v52;
        v50[1] = v54;
        *(_DWORD *)((char *)a3 + v51) = v47;
LABEL_13:
        type metadata accessor for IDSGroupEncryptionMaterialData();
        swift_storeEnumTagMultiPayload();
        sub_100431F80(&qword_100A47BA8);
        swift_storeEnumTagMultiPayload();
        return;
      }
      __break(1u);
    }
    __break(1u);
    return;
  }
  sub_10044C144(v14, v15, 0);
  *a3 = 0;
LABEL_5:
  sub_100431F80(&qword_100A47BA8);

  swift_storeEnumTagMultiPayload();
}

uint64_t sub_100533850(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v6, v9);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t result = __chkstk_darwin(v10, v13);
  char v17 = (char *)&v35 - v15;
  if (a1 == a2) {
    return 1;
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v18 = 0;
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v38 = a1;
  uint64_t v39 = a1 + 56;
  uint64_t v20 = 1 << *(unsigned char *)(a1 + 32);
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v22 = v21 & v19;
  int64_t v40 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v23 = a2 + 56;
  uint64_t v36 = (char *)&v35 - v15;
  uint64_t v37 = v16;
  if (!v22) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v41 = (v22 - 1) & v22;
  int64_t v42 = v18;
  for (unint64_t i = __clz(__rbit64(v22)) | (v18 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v27 << 6))
  {
    uint64_t v29 = *(void *)(v16 + 72);
    sub_10053454C(*(void *)(a1 + 48) + v29 * i, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_1005346C0((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_100535084(&qword_100A44D18, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v30 = sub_1007263D0();
    uint64_t v31 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v32 = v30 & ~v31;
    if (((*(void *)(v23 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0)
    {
LABEL_29:
      sub_1005345B4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      return 0;
    }
    uint64_t v33 = ~v31;
    while (1)
    {
      sub_10053454C(*(void *)(a2 + 48) + v32 * v29, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_100535084(&qword_100A44D20, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      char v34 = sub_100726410();
      sub_1005345B4((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      if (v34) {
        break;
      }
      unint64_t v32 = (v32 + 1) & v33;
      if (((*(void *)(v23 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v32) & 1) == 0) {
        goto LABEL_29;
      }
    }
    uint64_t result = sub_1005345B4((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v16 = v37;
    a1 = v38;
    char v17 = v36;
    unint64_t v22 = v41;
    int64_t v18 = v42;
    if (v41) {
      goto LABEL_7;
    }
LABEL_9:
    int64_t v25 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v25 >= v40) {
      return 1;
    }
    unint64_t v26 = *(void *)(v39 + 8 * v25);
    int64_t v27 = v18 + 1;
    if (!v26)
    {
      int64_t v27 = v25 + 1;
      if (v25 + 1 >= v40) {
        return 1;
      }
      unint64_t v26 = *(void *)(v39 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v25 + 2;
        if (v25 + 2 >= v40) {
          return 1;
        }
        unint64_t v26 = *(void *)(v39 + 8 * v27);
        if (!v26)
        {
          int64_t v27 = v25 + 3;
          if (v25 + 3 >= v40) {
            return 1;
          }
          unint64_t v26 = *(void *)(v39 + 8 * v27);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_24:
    uint64_t v41 = (v26 - 1) & v26;
    int64_t v42 = v27;
  }
  int64_t v28 = v25 + 4;
  if (v28 >= v40) {
    return 1;
  }
  unint64_t v26 = *(void *)(v39 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v28;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v40) {
      return 1;
    }
    unint64_t v26 = *(void *)(v39 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_24;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

Swift::Int sub_100533C74()
{
  uint64_t v1 = v0;
  sub_100726DD0();
  sub_10044F12C();
  sub_1007263E0();
  uint64_t v2 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  sub_100534288(v5, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  sub_100535084(&qword_100A44E10, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionPublicIdentity);
  sub_1007263E0();
  sub_100726E10(*(void *)(v1 + *(int *)(v3 + 28)));
  sub_100726E10(*(void *)(v1 + *(int *)(v3 + 32)));
  return sub_100726E30();
}

uint64_t sub_100533D88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(_DWORD *)a6 = a1;
  *(unsigned char *)(a6 + 4) = BYTE4(a1);
  *(void *)(a6 + 8) = a2;
  uint64_t v10 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t result = sub_1005346C0(a3, a6 + v10[6], type metadata accessor for IDSGroupEncryptionPublicIdentity);
  *(void *)(a6 + v10[7]) = a4;
  *(void *)(a6 + v10[8]) = a5;
  return result;
}

void sub_100533E20(long long *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_10044F12C();
  sub_1007263E0();
  uint64_t v6 = *(void *)(v2 + 8);
  swift_bridgeObjectRetain();
  sub_100534288(a1, v6);
  swift_bridgeObjectRelease();
  type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  sub_100535084(&qword_100A44E10, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionPublicIdentity);
  sub_1007263E0();
  sub_100726E10(*(void *)(v4 + *(int *)(a2 + 28)));
  sub_100726E10(*(void *)(v4 + *(int *)(a2 + 32)));
}

Swift::Int sub_100533F20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_100726DD0();
  sub_10044F12C();
  sub_1007263E0();
  uint64_t v5 = *(void *)(v2 + 8);
  swift_bridgeObjectRetain();
  sub_100534288(v7, v5);
  swift_bridgeObjectRelease();
  type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  sub_100535084(&qword_100A44E10, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionPublicIdentity);
  sub_1007263E0();
  sub_100726E10(*(void *)(v4 + *(int *)(a2 + 28)));
  sub_100726E10(*(void *)(v4 + *(int *)(a2 + 32)));
  return sub_100726E30();
}

uint64_t sub_100534028(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100534048(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100534048(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80(&qword_100A478E8);
  uint64_t v10 = *(void *)(sub_100725D30() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100725D30() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  int64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

void sub_100534288(long long *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v5);
  int64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *((void *)a1 + 8);
  long long v9 = a1[1];
  long long v27 = *a1;
  long long v28 = v9;
  long long v10 = a1[2];
  long long v11 = a1[3];
  int64_t v25 = a1;
  long long v29 = v10;
  long long v30 = v11;
  uint64_t v31 = v8;
  sub_100726E30();
  uint64_t v12 = a2 + 56;
  uint64_t v13 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(a2 + 56);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v17 = 0;
  int64_t v18 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v19 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v20 = v19 | (v18 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v18++, 1)) {
      goto LABEL_19;
    }
    if (v18 >= v16)
    {
LABEL_17:
      swift_release();
      sub_100726DE0(v17);
      return;
    }
    unint64_t v23 = *(void *)(v12 + 8 * v18);
    if (!v23) {
      break;
    }
LABEL_16:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v18 << 6);
LABEL_5:
    sub_10053454C(*(void *)(a2 + 48) + *(void *)(v26 + 72) * v20, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_100535084(&qword_100A44D18, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v21 = sub_1007263D0();
    sub_1005345B4((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    v17 ^= v21;
  }
  int64_t v24 = v18 + 1;
  if (v18 + 1 >= v16) {
    goto LABEL_17;
  }
  unint64_t v23 = *(void *)(v12 + 8 * v24);
  if (v23)
  {
    ++v18;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v18 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v18 >= v16) {
      goto LABEL_17;
    }
    unint64_t v23 = *(void *)(v12 + 8 * v18);
    ++v24;
    if (v23) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

uint64_t sub_1005344EC(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A47BA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10053454C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1005345B4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_100534614(unsigned int *a1, unsigned int *a2)
{
  if (sub_100512630(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32))&& (sub_100533850(*((void *)a1 + 1), *((void *)a2 + 1)) & 1) != 0&& (uint64_t v4 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet(), (sub_1005351F4((char *)a1 + v4[6], (char *)a2 + v4[6]) & 1) != 0)&& *(void *)((char *)a1 + v4[7]) == *(void *)((char *)a2 + v4[7]))
  {
    return *(void *)((char *)a1 + v4[8]) == *(void *)((char *)a2 + v4[8]);
  }
  else
  {
    return 0;
  }
}

uint64_t sub_1005346C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100534728(uint64_t a1)
{
  uint64_t result = sub_100535084(&qword_100A47250, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_100534780()
{
  return sub_100535084(&qword_100A45638, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
}

void *sub_1005347C8(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
    *(void *)(a1 + 8) = a2[1];
    uint64_t v7 = a3[6];
    uint64_t v8 = (void *)(a1 + v7);
    uint64_t v9 = (uint64_t)a2 + v7;
    long long v10 = *(void **)((char *)a2 + v7);
    long long v11 = *(void **)((char *)a2 + v7 + 8);
    *uint64_t v8 = v10;
    v8[1] = v11;
    uint64_t v12 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    uint64_t v13 = v12[6];
    uint64_t v24 = v9 + v13;
    int64_t v25 = (char *)v8 + v13;
    uint64_t v14 = sub_100725CC0();
    unint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    id v15 = v10;
    id v16 = v11;
    v23(v25, v24, v14);
    uint64_t v17 = v12[7];
    int64_t v18 = *(void **)(v9 + v17);
    *(void *)((char *)v8 + v17) = v18;
    *((unsigned char *)v8 + v12[8]) = *(unsigned char *)(v9 + v12[8]);
    uint64_t v19 = a3[8];
    *(void *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(void *)((char *)v4 + v19) = *(uint64_t *)((char *)a2 + v19);
    id v20 = v18;
  }
  return v4;
}

void sub_100534934(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (id *)(a1 + *(int *)(a2 + 24));

  uint64_t v5 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v6 = (char *)v4 + *(int *)(v5 + 24);
  uint64_t v7 = sub_100725CC0();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = *(id *)((char *)v4 + *(int *)(v5 + 28));
}

uint64_t sub_1005349E4(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v5 = a3[6];
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = a2 + v5;
  uint64_t v8 = *(void **)(a2 + v5);
  uint64_t v9 = *(void **)(a2 + v5 + 8);
  *uint64_t v6 = v8;
  v6[1] = v9;
  long long v10 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v11 = v10[6];
  uint64_t v21 = v7 + v11;
  unint64_t v22 = (char *)v6 + v11;
  uint64_t v12 = sub_100725CC0();
  id v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  id v13 = v8;
  id v14 = v9;
  v20(v22, v21, v12);
  uint64_t v15 = v10[7];
  id v16 = *(void **)(v7 + v15);
  *(void *)((char *)v6 + v15) = v16;
  *((unsigned char *)v6 + v10[8]) = *(unsigned char *)(v7 + v10[8]);
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  id v18 = v16;
  return a1;
}

uint64_t sub_100534B08(uint64_t a1, int *a2, int *a3)
{
  int v6 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v6;
  *(void *)(a1 + 8) = *((void *)a2 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t)a2 + v7;
  long long v10 = *(void **)(a1 + v7);
  uint64_t v11 = *(void **)((char *)a2 + v7);
  *uint64_t v8 = v11;
  id v12 = v11;

  id v13 = *(void **)(v9 + 8);
  id v14 = (void *)v8[1];
  v8[1] = v13;
  id v15 = v13;

  id v16 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v17 = v16[6];
  id v18 = (char *)v8 + v17;
  uint64_t v19 = v9 + v17;
  uint64_t v20 = sub_100725CC0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  uint64_t v21 = v16[7];
  unint64_t v22 = *(void **)(v9 + v21);
  unint64_t v23 = *(void **)((char *)v8 + v21);
  *(void *)((char *)v8 + v21) = v22;
  id v24 = v22;

  *((unsigned char *)v8 + v16[8]) = *(unsigned char *)(v9 + v16[8]);
  *(void *)(a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *(void *)(a1 + a3[8]) = *(void *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100534C38(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  uint64_t v9 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v10 = v9[6];
  uint64_t v11 = v7 + v10;
  uint64_t v12 = v8 + v10;
  uint64_t v13 = sub_100725CC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(void *)(v7 + v9[7]) = *(void *)(v8 + v9[7]);
  *(unsigned char *)(v7 + v9[8]) = *(unsigned char *)(v8 + v9[8]);
  uint64_t v14 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  return a1;
}

uint64_t sub_100534D28(uint64_t a1, uint64_t a2, int *a3)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = *(void **)(a1 + v6);
  void *v7 = *v8;

  uint64_t v10 = (void *)v7[1];
  v7[1] = v8[1];

  uint64_t v11 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v12 = v11[6];
  uint64_t v13 = (char *)v7 + v12;
  uint64_t v14 = (char *)v8 + v12;
  uint64_t v15 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 40))(v13, v14, v15);
  uint64_t v16 = v11[7];
  uint64_t v17 = *(void **)((char *)v7 + v16);
  *(void *)((char *)v7 + v16) = *(void *)((char *)v8 + v16);

  *((unsigned char *)v7 + v11[8]) = *((unsigned char *)v8 + v11[8]);
  uint64_t v18 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  return a1;
}

uint64_t sub_100534E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100534E54);
}

uint64_t sub_100534E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100534F04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100534F18);
}

uint64_t sub_100534F18(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100534FC0()
{
  uint64_t result = type metadata accessor for IDSGroupEncryptionPublicIdentity(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet.DataError()
{
  return &type metadata for IDSGroupEncryptionDesiredKeyMaterialSet.DataError;
}

uint64_t sub_100535084(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005350CC(uint64_t a1)
{
  if ((unint64_t)(a1 + 1) < 3) {
    return a1 + 1;
  }
  else {
    return 3;
  }
}

uint64_t sub_1005350E0(unsigned __int8 a1)
{
  return a1 - 1;
}

Swift::Int sub_1005350EC()
{
  uint64_t v1 = *v0;
  sub_100726DD0();
  sub_100726DE0(v1 - 1);
  return sub_100726E30();
}

void sub_100535134()
{
  sub_100726DE0(*v0 - 1);
}

Swift::Int sub_100535164()
{
  uint64_t v1 = *v0;
  sub_100726DD0();
  sub_100726DE0(v1 - 1);
  return sub_100726E30();
}

void *sub_1005351A8@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  if ((unint64_t)(*result + 1) < 3) {
    uint64_t v2 = *result + 1;
  }
  else {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1005351C4(void *a1@<X8>)
{
  *a1 = *v1 - 1;
}

uint64_t type metadata accessor for IDSGroupEncryptionPublicIdentity(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A52B30);
}

uint64_t sub_1005351F8()
{
  sub_100726E40();
  uint64_t v1 = *v0;
  if (*v0)
  {
    sub_100726DF0(1u);
    id v2 = v1;
    sub_100726800();
  }
  else
  {
    sub_100726DF0(0);
    id v2 = 0;
  }
  sub_100726800();
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  sub_100725C90();
  sub_100726DE0(*((unsigned __int8 *)v0 + *(int *)(v3 + 32)) - 1);
  sub_100726E20();
  sub_1007269F0(23);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 32;
  v9._object = (void *)0xE100000000000000;
  sub_1007264C0(v9);
  id v4 = v2;
  sub_100431F80(&qword_100A45650);
  v10._countAndFlagsBits = sub_100726480();
  sub_1007264C0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 32;
  v11._object = (void *)0xE100000000000000;
  sub_1007264C0(v11);
  uint64_t v5 = *(void **)((char *)v0 + *(int *)(v3 + 28));
  type metadata accessor for SecKey();
  id v6 = v5;
  v12._countAndFlagsBits = sub_100726480();
  sub_1007264C0(v12);
  swift_bridgeObjectRelease();
  return 0x644963696C627550;
}

void *sub_1005353E4()
{
  id v5 = 0;
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  id v2 = SecKeyCopyExternalRepresentation(*(SecKeyRef *)(v0 + *(int *)(v1 + 28)), (CFErrorRef *)&v5);
  if (v5) {

  }
  if (v2)
  {
    if (v5)
    {

      return 0;
    }
    else
    {
      id v3 = v2;
      id v2 = (void *)sub_100725B50();
    }
  }
  return v2;
}

uint64_t sub_1005354B0()
{
  uint64_t v0 = sub_100725CC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  id v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100725C80();
  type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  char v5 = sub_100725BF0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  return v5 & 1;
}

uint64_t sub_100535590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  *a6 = a1;
  a6[1] = a2;
  Swift::String v10 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  Swift::String v11 = (char *)a6 + v10[6];
  uint64_t v12 = sub_100725CC0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v11, a3, v12);
  *(void *)((char *)a6 + v10[7]) = a4;
  *((unsigned char *)a6 + v10[8]) = a5;
  return result;
}

id sub_100535630()
{
  uint64_t v1 = (id *)v0;
  id v2 = [objc_allocWithZone((Class)IDSRealTimeEncryptionIdentity) init];
  [v2 setPushToken:*(void *)(v0 + 8)];
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  [v2 setPublicIdentity:*(void *)(v0 + *(int *)(v3 + 28))];
  id v4 = sub_1005353E4();
  Class isa = 0;
  if (v5 >> 60 != 15)
  {
    uint64_t v7 = (uint64_t)v4;
    unint64_t v8 = v5;
    Class isa = sub_100725B20().super.isa;
    sub_10044CE88(v7, v8);
  }
  [v2 setPublicIdentityData:isa];

  [v2 setWrapMode:*((unsigned __int8 *)v1 + *(int *)(v3 + 32)) == 2];
  Class v9 = sub_100725BE0().super.isa;
  [v2 setExpirationDate:v9];

  if (*v1)
  {
    id v10 = [*v1 prefixedURI];
    sub_100726430();

    NSString v11 = sub_100726420();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  [v2 setFromID:v11];

  return v2;
}

Swift::Int sub_1005357AC()
{
  uint64_t v1 = v0;
  sub_100726DD0();
  id v2 = *v0;
  if (*v0)
  {
    sub_100726DF0(1u);
    id v3 = v2;
    sub_100726800();
  }
  else
  {
    sub_100726DF0(0);
  }
  sub_100726800();
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  sub_100725C90();
  sub_100726DE0(*((unsigned __int8 *)v1 + *(int *)(v4 + 32)) - 1);
  return sub_100726E30();
}

void sub_100535868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  unint64_t v5 = *v2;
  if (*v2)
  {
    sub_100726DF0(1u);
    id v6 = v5;
    sub_100726800();
  }
  else
  {
    sub_100726DF0(0);
  }
  sub_100726800();
  sub_100725C90();
  sub_100726DE0(*((unsigned __int8 *)v4 + *(int *)(a2 + 32)) - 1);
}

Swift::Int sub_100535908(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  sub_100726DD0();
  unint64_t v5 = *v2;
  if (*v2)
  {
    sub_100726DF0(1u);
    id v6 = v5;
    sub_100726800();
  }
  else
  {
    sub_100726DF0(0);
  }
  sub_100726800();
  sub_100725C90();
  sub_100726DE0(*((unsigned __int8 *)v4 + *(int *)(a2 + 32)) - 1);
  return sub_100726E30();
}

id sub_1005359BC()
{
  id v1 = sub_100535630();
  [v1 setFullIdentity:*(void *)(v0 + *(int *)(type metadata accessor for IDSGroupEncryptionFullIdentity(0) + 20))];
  return v1;
}

uint64_t sub_100535A04()
{
  sub_1007269F0(24);
  v1._countAndFlagsBits = 0x797469746E656449;
  v1._object = (void *)0xE900000000000020;
  sub_1007264C0(v1);
  type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  type metadata accessor for SecKey();
  sub_100726A90();
  v2._countAndFlagsBits = 0x63696C6275702820;
  v2._object = (void *)0xEA0000000000203ALL;
  sub_1007264C0(v2);
  v3._countAndFlagsBits = sub_1005351F8();
  sub_1007264C0(v3);
  swift_bridgeObjectRelease();
  v4._countAndFlagsBits = 41;
  v4._object = (void *)0xE100000000000000;
  sub_1007264C0(v4);
  return 0;
}

uint64_t sub_100535AF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1004F6B60(a1, a3);
  uint64_t result = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t sub_100535B34()
{
  swift_getWitnessTable();

  return sub_100725DC0();
}

uint64_t sub_100535BA0()
{
  return sub_100725DE0();
}

uint64_t sub_100535BEC()
{
  return sub_100725DD0();
}

Swift::Int sub_100535C44()
{
  return sub_100726E30();
}

id sub_100535CAC(id *a1, char *a2)
{
  uint64_t v4 = sub_100725CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4, v6);
  Class v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v10);
  uint64_t v12 = (char *)&v19 - v11;
  uint64_t v13 = *(void *)a2;
  if (*a1)
  {
    if (!v13 || (objc_msgSend(*a1, "isEqualToURI:") & 1) == 0) {
      return 0;
    }
  }
  else if (v13)
  {
    return 0;
  }
  id result = [a1[1] isEqualToPushToken:*((void *)a2 + 1)];
  if (!result) {
    return result;
  }
  uint64_t v15 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v12, (char *)a1 + *(int *)(v15 + 24), v4);
  v16(v9, &a2[*(int *)(v15 + 24)], v4);
  sub_100536F44(&qword_100A47D68, (void (*)(uint64_t))&type metadata accessor for Date);
  char v17 = sub_100726410();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v5 + 8);
  v18(v9, v4);
  v18(v12, v4);
  if (v17)
  {
    type metadata accessor for SecKey();
    sub_100536F44((unint64_t *)&unk_100A47D70, (void (*)(uint64_t))type metadata accessor for SecKey);
    if (sub_100725DC0()) {
      return (id)(*((unsigned __int8 *)a1 + *(int *)(v15 + 32)) == a2[*(int *)(v15 + 32)]);
    }
  }
  return 0;
}

uint64_t type metadata accessor for IDSGroupEncryptionFullIdentity(uint64_t a1)
{
  return sub_100440FD0(a1, qword_100A52B40);
}

uint64_t sub_100535F3C()
{
  return sub_100536F44(&qword_100A47C40, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionPublicIdentity);
}

unsigned char *storeEnumTagSinglePayload for IDSGroupEncryptionPublicIdentityWrapMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *id result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100536050);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionPublicIdentityWrapMode()
{
  return &type metadata for IDSGroupEncryptionPublicIdentityWrapMode;
}

char *sub_100536088(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  unsigned int v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[1];
    *((void *)a1 + 1) = v8;
    uint64_t v9 = a3[6];
    uint64_t v10 = &a1[v9];
    uint64_t v11 = (uint64_t)a2 + v9;
    uint64_t v12 = sub_100725CC0();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v4;
    uint64_t v15 = v8;
    v13(v10, v11, v12);
    uint64_t v16 = a3[7];
    uint64_t v17 = a3[8];
    uint64_t v18 = *(char **)((char *)a2 + v16);
    *(void *)&v7[v16] = v18;
    v7[v17] = *((unsigned char *)a2 + v17);
    id v19 = v18;
  }
  return v7;
}

void sub_10053619C(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100725CC0();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  unsigned int v6 = *(id *)((char *)a1 + *(int *)(a2 + 28));
}

void *sub_100536230(void *a1, uint64_t a2, int *a3)
{
  unsigned int v6 = *(void **)a2;
  uint64_t v7 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100725CC0();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v6;
  id v14 = v7;
  v12(v9, v10, v11);
  uint64_t v15 = a3[7];
  uint64_t v16 = a3[8];
  uint64_t v17 = *(void **)(a2 + v15);
  *(void *)((char *)a1 + v15) = v17;
  *((unsigned char *)a1 + v16) = *(unsigned char *)(a2 + v16);
  id v18 = v17;
  return a1;
}

uint64_t sub_1005362F0(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = a3[6];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  uint64_t v15 = sub_100725CC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 24))(v13, v14, v15);
  uint64_t v16 = a3[7];
  uint64_t v17 = *(void **)(a2 + v16);
  id v18 = *(void **)(a1 + v16);
  *(void *)(a1 + v16) = v17;
  id v19 = v17;

  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  return a1;
}

_OWORD *sub_1005363C0(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(void *)((char *)a1 + a3[7]) = *(void *)((char *)a2 + a3[7]);
  *((unsigned char *)a1 + v10) = *((unsigned char *)a2 + v10);
  return a1;
}

uint64_t sub_100536460(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_100725CC0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 40))(v9, v10, v11);
  uint64_t v12 = a3[7];
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)((char *)a2 + v12);

  *(unsigned char *)(a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_100536524(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100536538);
}

uint64_t sub_100536538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100725CC0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1005365E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1005365FC);
}

uint64_t sub_1005365FC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100725CC0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1005366A4()
{
  uint64_t result = sub_100725CC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_100536754(char *a1, char **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a2[1];
    *((void *)a1 + 1) = v8;
    uint64_t v9 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    uint64_t v10 = v9[6];
    unint64_t v23 = &v7[v10];
    uint64_t v11 = (uint64_t)a2 + v10;
    uint64_t v12 = sub_100725CC0();
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
    uint64_t v14 = v4;
    uint64_t v15 = v8;
    v13(v23, v11, v12);
    uint64_t v16 = v9[7];
    uint64_t v17 = *(char **)((char *)a2 + v16);
    *(void *)&v7[v16] = v17;
    v7[v9[8]] = *((unsigned char *)a2 + v9[8]);
    uint64_t v18 = *(int *)(a3 + 20);
    id v19 = *(char **)((char *)a2 + v18);
    *(void *)&v7[v18] = v19;
    id v20 = v17;
    id v21 = v19;
  }
  return v7;
}

void sub_100536894(id *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v5 = (char *)a1 + *(int *)(v4 + 24);
  uint64_t v6 = sub_100725CC0();
  (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  uint64_t v7 = *(id *)((char *)a1 + *(int *)(a2 + 20));
}

void *sub_100536940(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void **)a2;
  uint64_t v6 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v8 = v7[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_100725CC0();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  id v13 = v5;
  id v14 = v6;
  v12(v9, v10, v11);
  uint64_t v15 = v7[7];
  uint64_t v16 = *(void **)(a2 + v15);
  *(void *)((char *)a1 + v15) = v16;
  *((unsigned char *)a1 + v7[8]) = *(unsigned char *)(a2 + v7[8]);
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = *(void **)(a2 + v17);
  *(void *)((char *)a1 + v17) = v18;
  id v19 = v16;
  id v20 = v18;
  return a1;
}

uint64_t sub_100536A2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  uint64_t v9 = *(void **)(a2 + 8);
  uint64_t v10 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v9;
  id v11 = v9;

  uint64_t v12 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v13 = v12[6];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_100725CC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  uint64_t v17 = v12[7];
  uint64_t v18 = *(void **)(a2 + v17);
  id v19 = *(void **)(a1 + v17);
  *(void *)(a1 + v17) = v18;
  id v20 = v18;

  *(unsigned char *)(a1 + v12[8]) = *(unsigned char *)(a2 + v12[8]);
  uint64_t v21 = *(int *)(a3 + 20);
  unint64_t v22 = *(void **)(a2 + v21);
  unint64_t v23 = *(void **)(a1 + v21);
  *(void *)(a1 + v21) = v22;
  id v24 = v22;

  return a1;
}

_OWORD *sub_100536B20(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v7 = v6[6];
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)((char *)a1 + v6[7]) = *(void *)((char *)a2 + v6[7]);
  *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
  *(void *)((char *)a1 + *(int *)(a3 + 20)) = *(void *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100536BDC(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = a2[1];

  id v8 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v9 = v8[6];
  uint64_t v10 = a1 + v9;
  id v11 = (char *)a2 + v9;
  uint64_t v12 = sub_100725CC0();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  uint64_t v13 = v8[7];
  uint64_t v14 = *(void **)(a1 + v13);
  *(void *)(a1 + v13) = *(void *)((char *)a2 + v13);

  *(unsigned char *)(a1 + v8[8]) = *((unsigned char *)a2 + v8[8]);
  uint64_t v15 = *(int *)(a3 + 20);
  uint64_t v16 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = *(void *)((char *)a2 + v15);

  return a1;
}

uint64_t sub_100536CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100536CD4);
}

uint64_t sub_100536CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    id v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_100536D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100536DA8);
}

uint64_t sub_100536DA8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_100536E64()
{
  uint64_t result = type metadata accessor for IDSGroupEncryptionPublicIdentity(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100536EFC()
{
  return sub_100536F44(&qword_100A47D58, (void (*)(uint64_t))type metadata accessor for SecKey);
}

uint64_t sub_100536F44(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100536F8C()
{
  return sub_100536F44(&qword_100A47D60, (void (*)(uint64_t))type metadata accessor for SecKey);
}

void *sub_100536FD4()
{
  return &unk_100799D50;
}

void *sub_100536FE0()
{
  return &unk_100799D58;
}

id sub_100536FEC()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for RegistrationRequestTracker()) init];
  qword_100A53640 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for RegistrationRequestTracker()
{
  return self;
}

uint64_t sub_1005371F8()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

Swift::Int sub_100537230(unint64_t *a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for IDSRegistrationEventStruct() - 8);
  unint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1005393B8(v3);
  }
  uint64_t v4 = *(void *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1005381C8(v6);
  *a1 = v3;
  return result;
}

void sub_100537328()
{
  uint64_t v0 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v0 - 8, v1);
  unint64_t v3 = (char *)&v68 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100725CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  int v80 = (char *)&v68 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IDSRegistrationEventStruct();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v11, v14);
  uint64_t v17 = (char *)&v68 - v16;
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v94 = (uint64_t)&v68 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v89 = (char *)&v68 - v23;
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v68 - v25;
  uint64_t v73 = sub_100725ED0();
  uint64_t v72 = *(void *)(v73 - 8);
  __chkstk_darwin(v73, v27);
  uint64_t v91 = (char *)&v68 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  id v71 = Strong;
  id v30 = [self sharedInstance];
  if (!v30)
  {
LABEL_23:

    return;
  }
  uint64_t v31 = v30;
  id v32 = [v30 persistenceManager];
  if (!v32)
  {

    goto LABEL_23;
  }
  id v70 = v31;
  uint64_t v86 = v17;
  uint64_t v79 = v13;
  uint64_t v33 = v32;
  sub_1004DFEFC(13);
  id v69 = v33;
  uint64_t v100 = sub_100561044();
  sub_100537230((unint64_t *)&v100);
  uint64_t v35 = v100[2];
  if (v35)
  {
    unint64_t v36 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v68 = v100;
    uint64_t v37 = (uint64_t)v100 + v36;
    uint64_t v85 = (unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v78 = (void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v77 = (void (**)(char *, uint64_t))(v5 + 8);
    uint64_t v87 = &v98;
    uint64_t v84 = *(void *)(v9 + 72);
    *(void *)&long long v34 = 136316162;
    long long v76 = v34;
    uint64_t v75 = (char *)&type metadata for Any + 8;
    *(void *)&long long v34 = 136315394;
    long long v74 = v34;
    uint64_t v82 = v3;
    uint64_t v81 = v4;
    uint64_t v88 = v8;
    uint64_t v38 = (uint64_t)v86;
    uint64_t v39 = v94;
    uint64_t v40 = (uint64_t)v89;
    do
    {
      uint64_t v92 = v37;
      uint64_t v93 = v35;
      sub_10053AF6C(v37, (uint64_t)v26);
      uint64_t v98 = 0x6E776F6E6B6E75;
      unint64_t v99 = 0xE700000000000000;
      sub_1004A3E5C((uint64_t)&v26[*(int *)(v8 + 24)], (uint64_t)v3);
      if ((*v85)(v3, 1, v4) == 1)
      {
        sub_1004A3D04((uint64_t)v3);
      }
      else
      {
        uint64_t v41 = v80;
        (*v78)(v80, v3, v4);
        uint64_t v95 = 0;
        unint64_t v96 = 0xE000000000000000;
        sub_100725BC0();
        sub_100726620();
        uint64_t v42 = v95;
        unint64_t v43 = v96;
        uint64_t v44 = v41;
        uint64_t v39 = v94;
        (*v77)(v44, v4);
        swift_beginAccess();
        uint64_t v98 = v42;
        unint64_t v99 = v43;
        swift_bridgeObjectRelease();
      }
      uint64_t v45 = sub_10053B090();
      unint64_t v47 = v46;
      sub_10053AF6C((uint64_t)v26, v40);
      sub_10053AF6C((uint64_t)v26, v39);
      sub_10053AF6C((uint64_t)v26, v38);
      swift_bridgeObjectRetain();
      Class v48 = sub_100725EB0();
      LODWORD(v90) = sub_1007266E0();
      if (os_log_type_enabled(v48, (os_log_type_t)v90))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v83 = swift_slowAlloc();
        uint64_t v95 = v83;
        *(_DWORD *)uint64_t v49 = v76;
        uint64_t v50 = *(void *)(v40 + 8);
        unint64_t v51 = *(void *)(v40 + 16);
        swift_bridgeObjectRetain();
        uint64_t v97 = sub_10043E578(v50, v51, &v95);
        sub_100726830();
        swift_bridgeObjectRelease();
        sub_10053AFD0(v40);
        *(_WORD *)(v49 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v97 = sub_10043E578(v45, v47, &v95);
        sub_100726830();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v49 + 22) = 2080;
        swift_beginAccess();
        uint64_t v52 = v98;
        unint64_t v53 = v99;
        swift_bridgeObjectRetain();
        uint64_t v97 = sub_10043E578(v52, v53, &v95);
        sub_100726830();
        uint64_t v54 = v88;
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 32) = 2048;
        uint64_t v55 = *(void *)(v94 + *(int *)(v54 + 32));
        sub_10053AFD0(v94);
        uint64_t v97 = v55;
        uint64_t v38 = (uint64_t)v86;
        sub_100726830();
        *(_WORD *)(v49 + 42) = 2080;
        uint64_t v56 = (uint64_t *)(v38 + *(int *)(v54 + 40));
        if (v56[1])
        {
          uint64_t v57 = *v56;
          unint64_t v58 = v56[1];
        }
        else
        {
          uint64_t v57 = 0;
          unint64_t v58 = 0xE000000000000000;
        }
        unint64_t v3 = v82;
        uint64_t v4 = v81;
        uint64_t v40 = (uint64_t)v89;
        swift_bridgeObjectRetain();
        uint64_t v97 = sub_10043E578(v57, v58, &v95);
        sub_100726830();
        swift_bridgeObjectRelease();
        sub_10053AFD0(v38);
        _os_log_impl((void *)&_mh_execute_header, v48, (os_log_type_t)v90, "Registration Event: %s { time: %s, timeElapsed: %s, result: %ld, splunkHint: %s }", (uint8_t *)v49, 0x34u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v8 = v88;
        uint64_t v39 = v94;
      }
      else
      {
        sub_10053AFD0(v39);

        sub_10053AFD0(v40);
        swift_bridgeObjectRelease_n();
        sub_10053AFD0(v38);
      }
      char v59 = (uint64_t *)&v26[*(int *)(v8 + 44)];
      unint64_t v60 = v59[1];
      if (v60)
      {
        uint64_t v61 = *v59;
        uint64_t v62 = (uint64_t)v79;
        sub_10053AF6C((uint64_t)v26, (uint64_t)v79);
        swift_bridgeObjectRetain_n();
        char v63 = sub_100725EB0();
        os_log_type_t v64 = sub_1007266E0();
        if (os_log_type_enabled(v63, v64))
        {
          uint64_t v65 = swift_slowAlloc();
          uint64_t v95 = swift_slowAlloc();
          *(_DWORD *)uint64_t v65 = v74;
          uint64_t v90 = v61;
          uint64_t v67 = *(void *)(v62 + 8);
          unint64_t v66 = *(void *)(v62 + 16);
          swift_bridgeObjectRetain();
          uint64_t v97 = sub_10043E578(v67, v66, &v95);
          uint64_t v8 = v88;
          sub_100726830();
          swift_bridgeObjectRelease();
          sub_10053AFD0(v62);
          *(_WORD *)(v65 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v97 = sub_10043E578(v90, v60, &v95);
          unint64_t v3 = v82;
          sub_100726830();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v63, v64, "%s baa signing digest : %s", (uint8_t *)v65, 0x16u);
          swift_arrayDestroy();
          uint64_t v4 = v81;
          swift_slowDealloc();
          uint64_t v39 = v94;
          swift_slowDealloc();
        }
        else
        {
          sub_10053AFD0(v62);

          swift_bridgeObjectRelease_n();
        }
        sub_10053AFD0((uint64_t)v26);
        swift_bridgeObjectRelease();
        uint64_t v38 = (uint64_t)v86;
        uint64_t v40 = (uint64_t)v89;
      }
      else
      {
        sub_10053AFD0((uint64_t)v26);
        swift_bridgeObjectRelease();
      }
      uint64_t v37 = v92 + v84;
      uint64_t v35 = v93 - 1;
    }
    while (v93 != 1);
  }
  swift_bridgeObjectRelease();

  (*(void (**)(char *, uint64_t))(v72 + 8))(v91, v73);
}

id sub_100537DAC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for RegistrationRequestTracker();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100537DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v16 = (int *)type metadata accessor for IDSRegistrationEventStruct();
  uint64_t v17 = (uint64_t)&a9[v16[6]];
  uint64_t v18 = sub_100725CC0();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  uint64_t v20 = &a9[v16[10]];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  uint64_t v21 = &a9[v16[11]];
  *(void *)uint64_t v21 = 0;
  *((void *)v21 + 1) = 0;
  *((void *)a9 + 1) = a1;
  *((void *)a9 + 2) = a2;
  sub_10050C6A0(a3, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 32))(&a9[v16[7]], a4, v18);
  *(void *)&a9[v16[8]] = a5;
  *(void *)&a9[v16[9]] = a6;
  swift_bridgeObjectRelease();
  *(void *)uint64_t v20 = a7;
  *((void *)v20 + 1) = a8;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)uint64_t v21 = a10;
  *((void *)v21 + 1) = a11;
  *(void *)a9 = a12;
  return result;
}

uint64_t sub_100537F60(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80((uint64_t *)&unk_100A47EB0);
  uint64_t v10 = *(void *)(type metadata accessor for IDSRegistrationEventStruct() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_100726B80();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for IDSRegistrationEventStruct() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_100539A6C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

Swift::Int sub_1005381C8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IDSRegistrationEventStruct();
  uint64_t v136 = *(void *)(v4 - 8);
  uint64_t v137 = v4;
  uint64_t v6 = __chkstk_darwin(v4, v5);
  uint64_t v133 = (uint64_t)&v127 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v143 = (uint64_t)&v127 - v10;
  uint64_t v12 = __chkstk_darwin(v9, v11);
  id v140 = (unint64_t *)((char *)&v127 - v13);
  __chkstk_darwin(v12, v14);
  unint64_t v139 = (unint64_t *)((char *)&v127 - v15);
  Swift::Int v16 = a1[1];
  Swift::Int result = sub_100726CF0(v16);
  if (result >= v16)
  {
    if (v16 < 0) {
      goto LABEL_142;
    }
    if (v16) {
      return sub_100538B98(0, v16, 1, a1);
    }
    return result;
  }
  if (v16 >= 0) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v16 + 1;
  }
  if (v16 < -1) {
    goto LABEL_150;
  }
  Swift::Int v129 = result;
  if (v16 < 2)
  {
    uint64_t v22 = (char *)_swiftEmptyArrayStorage;
    unint64_t v135 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v136 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v136 + 80));
    os_log_type_t v128 = _swiftEmptyArrayStorage;
    if (v16 != 1)
    {
      unint64_t v24 = _swiftEmptyArrayStorage[2];
LABEL_108:
      if (v24 >= 2)
      {
        uint64_t v121 = *a1;
        do
        {
          unint64_t v122 = v24 - 2;
          if (v24 < 2) {
            goto LABEL_137;
          }
          if (!v121) {
            goto LABEL_149;
          }
          uint64_t v123 = *(void *)&v22[16 * v122 + 32];
          uint64_t v124 = *(void *)&v22[16 * v24 + 24];
          sub_100538DF0(v121 + *(void *)(v136 + 72) * v123, v121 + *(void *)(v136 + 72) * *(void *)&v22[16 * v24 + 16], v121 + *(void *)(v136 + 72) * v124, v135);
          if (v2) {
            break;
          }
          if (v124 < v123) {
            goto LABEL_138;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v22 = sub_1005244BC((uint64_t)v22);
          }
          if (v122 >= *((void *)v22 + 2)) {
            goto LABEL_139;
          }
          CFDataRef v125 = &v22[16 * v122 + 32];
          *(void *)CFDataRef v125 = v123;
          *((void *)v125 + 1) = v124;
          unint64_t v126 = *((void *)v22 + 2);
          if (v24 > v126) {
            goto LABEL_140;
          }
          memmove(&v22[16 * v24 + 16], &v22[16 * v24 + 32], 16 * (v126 - v24));
          *((void *)v22 + 2) = v126 - 1;
          unint64_t v24 = v126 - 1;
        }
        while (v126 > 2);
      }
LABEL_119:
      swift_bridgeObjectRelease();
      v128[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v19 = v18 >> 1;
    uint64_t v20 = sub_1007265B0();
    *(void *)(v20 + 16) = v19;
    uint64_t v21 = *(unsigned __int8 *)(v136 + 80);
    os_log_type_t v128 = (void *)v20;
    unint64_t v135 = v20 + ((v21 + 32) & ~v21);
  }
  unint64_t v23 = 0;
  uint64_t v22 = (char *)_swiftEmptyArrayStorage;
  int v142 = a1;
  while (1)
  {
    Swift::Int v25 = v23;
    Swift::Int v26 = v23 + 1;
    if ((uint64_t)(v23 + 1) >= v16) {
      goto LABEL_39;
    }
    uint64_t v131 = v2;
    uint64_t v27 = *a1;
    unint64_t v28 = *(void *)(v136 + 72);
    long long v29 = v139;
    sub_10053AF6C(*a1 + v28 * v26, (uint64_t)v139);
    uint64_t v30 = v27 + v28 * v25;
    Swift::Int v134 = v25;
    uint64_t v31 = v140;
    sub_10053AF6C(v30, (uint64_t)v140);
    unint64_t v144 = *v29;
    unint64_t v141 = *v31;
    uint64_t v32 = (uint64_t)v31;
    Swift::Int v25 = v134;
    sub_10053AFD0(v32);
    sub_10053AFD0((uint64_t)v29);
    Swift::Int v33 = v25 + 2;
    uint64_t v138 = v27;
    unint64_t v145 = v28;
    if (v25 + 2 >= v16)
    {
      Swift::Int v36 = v25 + 2;
      unint64_t v43 = v28;
    }
    else
    {
      uint64_t v130 = v22;
      Swift::Int v34 = v28 * v26;
      uint64_t v35 = v27;
      Swift::Int v36 = v33;
      uint64_t v37 = v28 * v33;
      while (1)
      {
        Swift::Int v38 = v16;
        int v39 = v144 < v141;
        uint64_t v40 = v139;
        sub_10053AF6C(v35 + v37, (uint64_t)v139);
        uint64_t v41 = v140;
        sub_10053AF6C(v35 + v34, (uint64_t)v140);
        int v42 = *v40 >= *v41;
        sub_10053AFD0((uint64_t)v41);
        sub_10053AFD0((uint64_t)v40);
        if (v39 == v42) {
          break;
        }
        unint64_t v43 = v145;
        v35 += v145;
        ++v36;
        Swift::Int v16 = v38;
        if (v38 == v36)
        {
          Swift::Int v36 = v38;
          a1 = v142;
          uint64_t v22 = v130;
          Swift::Int v25 = v134;
          goto LABEL_23;
        }
      }
      a1 = v142;
      uint64_t v22 = v130;
      Swift::Int v25 = v134;
      Swift::Int v16 = v38;
      unint64_t v43 = v145;
    }
LABEL_23:
    if (v144 >= v141) {
      break;
    }
    if (v36 < v25) {
      goto LABEL_143;
    }
    Swift::Int v26 = v36;
    if (v25 >= v36)
    {
      uint64_t v2 = v131;
LABEL_39:
      if (v26 >= v16) {
        goto LABEL_59;
      }
      goto LABEL_40;
    }
    unint64_t v144 = v16;
    uint64_t v130 = v22;
    uint64_t v44 = 0;
    uint64_t v45 = v43 * (v36 - 1);
    Swift::Int v46 = v36 * v43;
    uint64_t v47 = v25 * v43;
    do
    {
      if (v25 != v26 + v44 - 1)
      {
        uint64_t v48 = v138;
        if (!v138) {
          goto LABEL_148;
        }
        unint64_t v49 = v138 + v47;
        sub_10053B02C(v138 + v47, v133);
        if (v47 < v45 || v49 >= v48 + v46)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v47 != v45)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_10053B02C(v133, v48 + v45);
        Swift::Int v26 = v36;
        unint64_t v43 = v145;
      }
      ++v25;
      --v44;
      v45 -= v43;
      v46 -= v43;
      v47 += v43;
    }
    while (v25 < v26 + v44);
    a1 = v142;
    uint64_t v22 = v130;
    uint64_t v2 = v131;
    Swift::Int v25 = v134;
    Swift::Int v16 = v144;
    if (v26 < (uint64_t)v144) {
      goto LABEL_40;
    }
LABEL_59:
    if (v26 < v25) {
      goto LABEL_136;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v141 = v26;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v22 = sub_100524280(0, *((void *)v22 + 2) + 1, 1, v22);
    }
    unint64_t v70 = *((void *)v22 + 2);
    unint64_t v69 = *((void *)v22 + 3);
    unint64_t v24 = v70 + 1;
    if (v70 >= v69 >> 1) {
      uint64_t v22 = sub_100524280((char *)(v69 > 1), v70 + 1, 1, v22);
    }
    *((void *)v22 + 2) = v24;
    id v71 = v22 + 32;
    uint64_t v72 = &v22[16 * v70 + 32];
    unint64_t v73 = v141;
    *(void *)uint64_t v72 = v25;
    *((void *)v72 + 1) = v73;
    if (v70)
    {
      while (1)
      {
        unint64_t v74 = v24 - 1;
        if (v24 >= 4)
        {
          uint64_t v79 = &v71[16 * v24];
          uint64_t v80 = *((void *)v79 - 8);
          uint64_t v81 = *((void *)v79 - 7);
          BOOL v85 = __OFSUB__(v81, v80);
          uint64_t v82 = v81 - v80;
          if (v85) {
            goto LABEL_125;
          }
          uint64_t v84 = *((void *)v79 - 6);
          uint64_t v83 = *((void *)v79 - 5);
          BOOL v85 = __OFSUB__(v83, v84);
          uint64_t v77 = v83 - v84;
          char v78 = v85;
          if (v85) {
            goto LABEL_126;
          }
          unint64_t v86 = v24 - 2;
          uint64_t v87 = &v71[16 * v24 - 32];
          uint64_t v89 = *(void *)v87;
          uint64_t v88 = *((void *)v87 + 1);
          BOOL v85 = __OFSUB__(v88, v89);
          uint64_t v90 = v88 - v89;
          if (v85) {
            goto LABEL_128;
          }
          BOOL v85 = __OFADD__(v77, v90);
          uint64_t v91 = v77 + v90;
          if (v85) {
            goto LABEL_131;
          }
          if (v91 >= v82)
          {
            long long v109 = &v71[16 * v74];
            uint64_t v111 = *(void *)v109;
            uint64_t v110 = *((void *)v109 + 1);
            BOOL v85 = __OFSUB__(v110, v111);
            uint64_t v112 = v110 - v111;
            if (v85) {
              goto LABEL_135;
            }
            BOOL v102 = v77 < v112;
            goto LABEL_96;
          }
        }
        else
        {
          if (v24 != 3)
          {
            uint64_t v103 = *((void *)v22 + 4);
            uint64_t v104 = *((void *)v22 + 5);
            BOOL v85 = __OFSUB__(v104, v103);
            uint64_t v96 = v104 - v103;
            char v97 = v85;
            goto LABEL_90;
          }
          uint64_t v76 = *((void *)v22 + 4);
          uint64_t v75 = *((void *)v22 + 5);
          BOOL v85 = __OFSUB__(v75, v76);
          uint64_t v77 = v75 - v76;
          char v78 = v85;
        }
        if (v78) {
          goto LABEL_127;
        }
        unint64_t v86 = v24 - 2;
        uint64_t v92 = &v71[16 * v24 - 32];
        uint64_t v94 = *(void *)v92;
        uint64_t v93 = *((void *)v92 + 1);
        BOOL v95 = __OFSUB__(v93, v94);
        uint64_t v96 = v93 - v94;
        char v97 = v95;
        if (v95) {
          goto LABEL_130;
        }
        uint64_t v98 = &v71[16 * v74];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v85 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v85) {
          goto LABEL_133;
        }
        if (__OFADD__(v96, v101)) {
          goto LABEL_134;
        }
        if (v96 + v101 >= v77)
        {
          BOOL v102 = v77 < v101;
LABEL_96:
          if (v102) {
            unint64_t v74 = v86;
          }
          goto LABEL_98;
        }
LABEL_90:
        if (v97) {
          goto LABEL_129;
        }
        os_log_type_t v105 = &v71[16 * v74];
        uint64_t v107 = *(void *)v105;
        uint64_t v106 = *((void *)v105 + 1);
        BOOL v85 = __OFSUB__(v106, v107);
        uint64_t v108 = v106 - v107;
        if (v85) {
          goto LABEL_132;
        }
        if (v108 < v96) {
          goto LABEL_14;
        }
LABEL_98:
        unint64_t v113 = v74 - 1;
        if (v74 - 1 >= v24)
        {
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
          goto LABEL_145;
        }
        uint64_t v114 = *a1;
        if (!*a1) {
          goto LABEL_147;
        }
        uint64_t v115 = v22;
        uint64_t v116 = &v71[16 * v113];
        uint64_t v117 = *(void *)v116;
        uint64_t v118 = &v71[16 * v74];
        uint64_t v119 = *((void *)v118 + 1);
        sub_100538DF0(v114 + *(void *)(v136 + 72) * *(void *)v116, v114 + *(void *)(v136 + 72) * *(void *)v118, v114 + *(void *)(v136 + 72) * v119, v135);
        if (v2) {
          goto LABEL_119;
        }
        if (v119 < v117) {
          goto LABEL_122;
        }
        if (v74 > *((void *)v115 + 2)) {
          goto LABEL_123;
        }
        *(void *)uint64_t v116 = v117;
        *(void *)&v71[16 * v113 + 8] = v119;
        unint64_t v120 = *((void *)v115 + 2);
        if (v74 >= v120) {
          goto LABEL_124;
        }
        uint64_t v22 = v115;
        unint64_t v24 = v120 - 1;
        memmove(&v71[16 * v74], v118 + 16, 16 * (v120 - 1 - v74));
        *((void *)v115 + 2) = v120 - 1;
        a1 = v142;
        if (v120 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v24 = 1;
LABEL_14:
    Swift::Int v16 = a1[1];
    unint64_t v23 = v141;
    if ((uint64_t)v141 >= v16) {
      goto LABEL_108;
    }
  }
  Swift::Int v26 = v36;
  uint64_t v2 = v131;
  if (v26 >= v16) {
    goto LABEL_59;
  }
LABEL_40:
  if (__OFSUB__(v26, v25)) {
    goto LABEL_141;
  }
  if (v26 - v25 >= v129) {
    goto LABEL_59;
  }
  if (__OFADD__(v25, v129)) {
    goto LABEL_144;
  }
  if (v25 + v129 >= v16) {
    Swift::Int v50 = v16;
  }
  else {
    Swift::Int v50 = v25 + v129;
  }
  if (v50 >= v25)
  {
    if (v26 != v50)
    {
      Swift::Int v134 = v25;
      uint64_t v130 = v22;
      uint64_t v131 = v2;
      uint64_t v51 = *(void *)(v136 + 72);
      uint64_t v52 = v51 * (v26 - 1);
      uint64_t v138 = v51;
      Swift::Int v53 = v26 * v51;
      Swift::Int v132 = v50;
      do
      {
        uint64_t v55 = 0;
        unint64_t v56 = v134;
        unint64_t v141 = v26;
        while (1)
        {
          unint64_t v144 = v56;
          uint64_t v57 = v142;
          uint64_t v58 = *v142;
          Swift::Int v59 = v53;
          uint64_t v60 = v53 + v55 + *v142;
          uint64_t v61 = v139;
          sub_10053AF6C(v60, (uint64_t)v139);
          uint64_t v62 = v52;
          uint64_t v63 = v52 + v55 + v58;
          os_log_type_t v64 = v140;
          sub_10053AF6C(v63, (uint64_t)v140);
          unint64_t v145 = *v61;
          unint64_t v65 = *v64;
          sub_10053AFD0((uint64_t)v64);
          sub_10053AFD0((uint64_t)v61);
          if (v145 >= v65) {
            break;
          }
          uint64_t v66 = *v57;
          if (!*v57) {
            goto LABEL_146;
          }
          Swift::Int v53 = v59;
          uint64_t v52 = v62;
          uint64_t v67 = v66 + v62 + v55;
          sub_10053B02C(v66 + v59 + v55, v143);
          swift_arrayInitWithTakeFrontToBack();
          sub_10053B02C(v143, v67);
          v55 -= v138;
          unint64_t v56 = v144 + 1;
          unint64_t v54 = v141;
          if (v141 == v144 + 1) {
            goto LABEL_50;
          }
        }
        unint64_t v54 = v141;
        uint64_t v52 = v62;
        Swift::Int v53 = v59;
LABEL_50:
        Swift::Int v26 = v54 + 1;
        v52 += v138;
        v53 += v138;
      }
      while (v26 != v132);
      Swift::Int v26 = v132;
      uint64_t v22 = v130;
      uint64_t v2 = v131;
      a1 = v142;
      Swift::Int v25 = v134;
    }
    goto LABEL_59;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
LABEL_150:
  Swift::Int result = sub_100726B80();
  __break(1u);
  return result;
}

uint64_t sub_100538B98(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v31 = a1;
  uint64_t v32 = type metadata accessor for IDSRegistrationEventStruct();
  uint64_t v8 = __chkstk_darwin(v32, v7);
  uint64_t v35 = (uint64_t)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v13 = (unint64_t *)((char *)&v29 - v12);
  uint64_t result = __chkstk_darwin(v11, v14);
  uint64_t v18 = (unint64_t *)((char *)&v29 - v17);
  uint64_t v34 = a3;
  uint64_t v30 = a2;
  if (a3 != a2)
  {
    uint64_t v19 = *(void *)(v16 + 72);
    uint64_t v37 = v19 * (v34 - 1);
    uint64_t v33 = v19;
    uint64_t v36 = v19 * v34;
LABEL_5:
    uint64_t v20 = 0;
    uint64_t v21 = v31;
    while (1)
    {
      uint64_t v22 = a4;
      uint64_t v23 = *a4;
      sub_10053AF6C(v36 + v20 + v23, (uint64_t)v18);
      sub_10053AF6C(v37 + v20 + v23, (uint64_t)v13);
      unint64_t v24 = *v18;
      unint64_t v25 = *v13;
      sub_10053AFD0((uint64_t)v13);
      uint64_t result = sub_10053AFD0((uint64_t)v18);
      BOOL v26 = v24 >= v25;
      a4 = v22;
      if (v26)
      {
LABEL_4:
        v37 += v33;
        v36 += v33;
        if (++v34 == v30) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v27 = *v22;
      if (!*v22) {
        break;
      }
      uint64_t v28 = v27 + v37 + v20;
      sub_10053B02C(v27 + v36 + v20, v35);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_10053B02C(v35, v28);
      v20 -= v33;
      ++v21;
      a4 = v22;
      if (v34 == v21) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100538DF0(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v51 = type metadata accessor for IDSRegistrationEventStruct();
  uint64_t v9 = __chkstk_darwin(v51, v8);
  uint64_t v52 = (unint64_t *)((char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (unint64_t *)((char *)&v48 - v12);
  uint64_t v15 = *(void *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_71;
  }
  int64_t v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_72;
  }
  uint64_t v17 = (uint64_t)(a2 - a1) / v15;
  unint64_t v55 = a1;
  unint64_t v54 = a4;
  uint64_t v18 = v16 / v15;
  if (v17 >= v16 / v15)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      uint64_t v20 = v18 * v15;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v31 = a4 + v20;
      unint64_t v53 = a4 + v20;
      unint64_t v55 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        uint64_t v33 = -v15;
        unint64_t v49 = a4;
        unint64_t v50 = a1;
        do
        {
          unint64_t v34 = a3 + v33;
          sub_10053AF6C(v31 + v33, (uint64_t)v13);
          unint64_t v35 = a2 + v33;
          unint64_t v36 = a3;
          uint64_t v37 = v13;
          Swift::Int v38 = v52;
          sub_10053AF6C(a2 + v33, (uint64_t)v52);
          unint64_t v39 = *v37;
          unint64_t v40 = *v38;
          uint64_t v41 = (uint64_t)v38;
          uint64_t v13 = v37;
          sub_10053AFD0(v41);
          sub_10053AFD0((uint64_t)v37);
          if (v39 >= v40)
          {
            unint64_t v45 = v53;
            v53 += v33;
            if (v36 < v45 || v34 >= v45)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v35 = a2;
              unint64_t v43 = v49;
              unint64_t v44 = v50;
            }
            else
            {
              unint64_t v44 = v50;
              if (v36 != v45) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v35 = a2;
              unint64_t v43 = v49;
            }
          }
          else
          {
            if (v36 < a2 || v34 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v43 = v49;
              unint64_t v44 = v50;
            }
            else
            {
              BOOL v42 = v36 == a2;
              unint64_t v43 = v49;
              unint64_t v44 = v50;
              if (!v42) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v55 += v33;
          }
          unint64_t v31 = v53;
          if (v53 <= v43) {
            break;
          }
          a2 = v35;
          a3 = v34;
        }
        while (v35 > v44);
      }
      goto LABEL_69;
    }
  }
  else if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v17 * v15;
    if (a4 < a1 || a1 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v21 = a4 + v19;
    unint64_t v53 = a4 + v19;
    if (v19 >= 1 && a2 < a3)
    {
      uint64_t v23 = v52;
      do
      {
        sub_10053AF6C(a2, (uint64_t)v13);
        sub_10053AF6C(a4, (uint64_t)v23);
        unint64_t v24 = *v13;
        unint64_t v25 = *v23;
        sub_10053AFD0((uint64_t)v23);
        sub_10053AFD0((uint64_t)v13);
        unint64_t v26 = v55;
        if (v24 >= v25)
        {
          unint64_t v29 = v54 + v15;
          if (v55 < v54 || v55 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v55 != v54)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v54 = v29;
          unint64_t v27 = a2;
        }
        else
        {
          unint64_t v27 = a2 + v15;
          if (v55 < a2 || v55 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v55 == a2)
          {
            unint64_t v26 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v55 = v26 + v15;
        a4 = v54;
        if (v54 >= v21) {
          break;
        }
        a2 = v27;
      }
      while (v27 < a3);
    }
LABEL_69:
    sub_100539278(&v55, &v54, (uint64_t *)&v53);
    return 1;
  }
LABEL_73:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_100539278(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = type metadata accessor for IDSRegistrationEventStruct();
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_100726BF0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

uint64_t sub_1005393B8(unint64_t a1)
{
  return sub_100537F60(0, *(void *)(a1 + 16), 0, a1);
}

void sub_1005393CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, NSString a8, uint64_t a9, uint64_t a10)
{
  uint64_t v27 = a6;
  uint64_t v13 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v13 - 8, v14);
  int64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = [self sharedInstance];
  if (v17)
  {
    uint64_t v18 = v17;
    id v19 = [v17 persistenceManager];

    if (v19)
    {
      NSString v20 = sub_100726420();
      sub_1004A3E5C(a3, (uint64_t)v16);
      uint64_t v21 = sub_100725CC0();
      uint64_t v22 = *(void *)(v21 - 8);
      Class isa = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v16, 1, v21) != 1)
      {
        Class isa = sub_100725BE0().super.isa;
        (*(void (**)(char *, uint64_t))(v22 + 8))(v16, v21);
      }
      v24.super.Class isa = sub_100725BE0().super.isa;
      if (a8) {
        a8 = sub_100726420();
      }
      if (a10) {
        NSString v25 = sub_100726420();
      }
      else {
        NSString v25 = 0;
      }
      [v19 saveRegistrationEventWithBagKey:v20 requestStart:isa completionTime:v24.super.isa resultCode:a5 interface:v27 splunkHint:a8 baaSigningDigest:v25];
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_1005395EC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100725CC0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v54 - v13;
  uint64_t v15 = sub_100431F80(&qword_100A47D80);
  uint64_t v17 = __chkstk_darwin(v15 - 8, v16);
  id v19 = (char *)&v54 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v20);
  uint64_t v22 = (char *)&v54 - v21;
  if (!a1) {
    return;
  }
  id v57 = a1;
  id v23 = [v57 bagKey];
  if (v23)
  {
    NSDate v24 = v23;
    uint64_t v56 = v7;
    uint64_t v25 = a2;
    uint64_t v26 = a3;
    uint64_t v27 = sub_100726430();
    uint64_t v29 = v28;

    if (([v57 wantsBagKey] & 1) != 0
      && sub_1007264A0() >= 1
      && CUTIsInternalInstall())
    {
      uint64_t v54 = v29;
      uint64_t v55 = v27;
      id v30 = [v57 requestStart];
      if (v30)
      {
        unint64_t v31 = v30;
        sub_100725C70();

        uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
        uint64_t v33 = v22;
        uint64_t v34 = 0;
      }
      else
      {
        uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56);
        uint64_t v33 = v22;
        uint64_t v34 = 1;
      }
      unint64_t v36 = v32;
      v32(v33, v34, 1, v6);
      uint64_t v37 = v26;
      uint64_t v38 = v25;
      id v39 = [v57 responseReceived];
      if (v39)
      {
        unint64_t v40 = v39;
        sub_100725C70();

        uint64_t v41 = v56;
        BOOL v42 = v11;
        unint64_t v43 = *(void (**)(char *, char *, uint64_t))(v56 + 32);
        v43(v19, v42, v6);
        v36(v19, 0, 1, v6);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v19, 1, v6) != 1)
        {
          v43(v14, v19, v6);
LABEL_20:
          id v44 = [v57 splunkHint];
          if (v44)
          {
            unint64_t v45 = v44;
            uint64_t v46 = sub_100726430();
            uint64_t v48 = v47;
          }
          else
          {
            uint64_t v46 = 0;
            uint64_t v48 = 0;
          }
          id v49 = [v57 baaSigningDigest];
          if (v49)
          {
            unint64_t v50 = v49;
            uint64_t v51 = sub_100726430();
            uint64_t v53 = v52;
          }
          else
          {
            uint64_t v51 = 0;
            uint64_t v53 = 0;
          }
          sub_1005393CC(v55, v54, (uint64_t)v22, (uint64_t)v14, v38, v37, v46, v48, v51, v53);
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v56 + 8))(v14, v6);
          sub_1004A3D04((uint64_t)v22);
          return;
        }
      }
      else
      {
        v36(v19, 1, 1, v6);
      }
      sub_100725CB0();
      sub_1004A3D04((uint64_t)v19);
      goto LABEL_20;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    id v35 = v57;
  }
}

uint64_t sub_100539A6C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for IDSRegistrationEventStruct() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

id sub_100539BC4(int a1)
{
  int v45 = a1;
  uint64_t v44 = sub_100725D60();
  uint64_t v1 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v2);
  unint64_t v43 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for IDSRegistrationEventStruct();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [self sharedInstance];
  if (!result)
  {
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  id v11 = [result persistenceManager];

  if (!v11) {
    return 0;
  }
  uint64_t v52 = sub_100561044();
  sub_100537230((unint64_t *)&v52);
  uint64_t v50 = 0;
  unint64_t v51 = 0xE000000000000000;
  uint64_t v12 = v52[2];
  if (!v12)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v37 = v52;
  id v38 = v11;
  uint64_t v13 = (uint64_t)v52 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v14 = *(void *)(v5 + 72);
  uint64_t v41 = (void (**)(char *, uint64_t))(v1 + 8);
  uint64_t v42 = v14;
  id v39 = (void *)0x80000001008C5B70;
  unint64_t v40 = 0x80000001008C5B50;
  do
  {
    sub_10053AF6C(v13, (uint64_t)v8);
    if (*(void *)&v8[*(int *)(v4 + 32)])
    {
      uint64_t v48 = *(void *)&v8[*(int *)(v4 + 32)];
      v49._uint64_t countAndFlagsBits = 0x6F72726520746968;
      v49._object = (void *)0xEA00000000002072;
      v53._uint64_t countAndFlagsBits = sub_100726D00();
      sub_1007264C0(v53);
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = v49._countAndFlagsBits;
      object = v49._object;
    }
    else
    {
      object = (void *)0xE900000000000064;
      uint64_t countAndFlagsBits = 0x6564656563637573;
    }
    uint64_t v47 = countAndFlagsBits;
    uint64_t v17 = (uint64_t *)&v8[*(int *)(v4 + 40)];
    uint64_t v18 = (void *)v17[1];
    if (v18)
    {
      uint64_t v19 = *v17;
      v49._uint64_t countAndFlagsBits = 0x756C7053203E3D20;
      v49._object = (void *)0xEB00000000206B6ELL;
      swift_bridgeObjectRetain();
      v54._uint64_t countAndFlagsBits = v19;
      v54._object = v18;
      sub_1007264C0(v54);
      swift_bridgeObjectRelease();
      uint64_t v20 = v49._object;
      uint64_t v46 = v49._countAndFlagsBits;
    }
    else
    {
      uint64_t v46 = 0;
      uint64_t v20 = (void *)0xE000000000000000;
    }
    id v21 = objc_allocWithZone((Class)NSDateFormatter);
    id v22 = objc_msgSend(v21, "init", v37);
    uint64_t v23 = v4;
    NSDate v24 = v43;
    sub_100725D50();
    Class isa = sub_100725D40().super.isa;
    (*v41)(v24, v44);
    [v22 setLocale:isa];

    NSString v26 = sub_100726420();
    [v22 setDateFormat:v26];

    Class v27 = sub_100725BE0().super.isa;
    id v28 = [v22 stringFromDate:v27];

    uint64_t v29 = sub_100726430();
    unint64_t v31 = v30;

    v49._uint64_t countAndFlagsBits = v29;
    v49._object = v31;
    uint64_t v4 = v23;
    v55._uint64_t countAndFlagsBits = 8250;
    v55._object = (void *)0xE200000000000000;
    sub_1007264C0(v55);
    uint64_t v33 = *((void *)v8 + 1);
    uint64_t v32 = (void *)*((void *)v8 + 2);
    swift_bridgeObjectRetain();
    v56._uint64_t countAndFlagsBits = v33;
    v56._object = v32;
    sub_1007264C0(v56);
    swift_bridgeObjectRelease();
    v57._uint64_t countAndFlagsBits = 32;
    v57._object = (void *)0xE100000000000000;
    sub_1007264C0(v57);
    v58._uint64_t countAndFlagsBits = v47;
    v58._object = object;
    sub_1007264C0(v58);
    swift_bridgeObjectRelease();
    v59._uint64_t countAndFlagsBits = v46;
    v59._object = v20;
    sub_1007264C0(v59);
    swift_bridgeObjectRelease();
    v60._uint64_t countAndFlagsBits = 10;
    v60._object = (void *)0xE100000000000000;
    sub_1007264C0(v60);
    sub_1007264C0(v49);
    swift_bridgeObjectRelease();
    if (v45)
    {
      uint64_t v34 = (uint64_t *)&v8[*(int *)(v23 + 44)];
      id v35 = (void *)v34[1];
      if (v35)
      {
        uint64_t v36 = *v34;
        v49._uint64_t countAndFlagsBits = 0;
        v49._object = (void *)0xE000000000000000;
        swift_bridgeObjectRetain();
        sub_1007269F0(27);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v49._uint64_t countAndFlagsBits = v33;
        v49._object = v32;
        v61._uint64_t countAndFlagsBits = 0xD000000000000016;
        v61._object = v39;
        sub_1007264C0(v61);
        v62._uint64_t countAndFlagsBits = v36;
        v62._object = v35;
        sub_1007264C0(v62);
        swift_bridgeObjectRelease();
        v63._uint64_t countAndFlagsBits = 10;
        v63._object = (void *)0xE100000000000000;
        sub_1007264C0(v63);
        sub_1007264C0(v49);
        swift_bridgeObjectRelease();
      }
    }
    sub_10053AFD0((uint64_t)v8);
    v13 += v42;
    --v12;
  }
  while (v12);

  swift_bridgeObjectRelease();
  return (id)v50;
}

uint64_t type metadata accessor for IDSRegistrationEventStruct()
{
  uint64_t result = qword_100A52CD8;
  if (!qword_100A52CD8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

char *sub_10053A160(char *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)uint64_t v4 = *(void *)a2;
    uint64_t v4 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((void *)a1 + 2) = *((void *)a2 + 2);
    uint64_t v7 = a3[6];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_100725CC0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = sub_100431F80(&qword_100A47D80);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(&v4[a3[7]], &a2[a3[7]], v10);
    }
    else
    {
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
      v15(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      v15(&v4[a3[7]], &a2[a3[7]], v10);
    }
    uint64_t v16 = a3[9];
    *(void *)&v4[a3[8]] = *(void *)&a2[a3[8]];
    *(void *)&v4[v16] = *(void *)&a2[v16];
    uint64_t v17 = a3[10];
    uint64_t v18 = a3[11];
    uint64_t v19 = &v4[v17];
    uint64_t v20 = &a2[v17];
    uint64_t v21 = *((void *)v20 + 1);
    *(void *)uint64_t v19 = *(void *)v20;
    *((void *)v19 + 1) = v21;
    id v22 = &v4[v18];
    uint64_t v23 = &a2[v18];
    uint64_t v24 = *((void *)v23 + 1);
    *(void *)id v22 = *(void *)v23;
    *((void *)v22 + 1) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_10053A358(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100725CC0();
  uint64_t v6 = *(void *)(v5 - 8);
  int v7 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v7) {
    v8(v4, v5);
  }
  v8(a1 + *(int *)(a2 + 28), v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10053A454(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  int v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100725CC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100431F80(&qword_100A47D80);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a1 + a3[7], a2 + a3[7], v9);
  }
  else
  {
    uint64_t v13 = *(void (**)(void *, const void *, uint64_t))(v10 + 16);
    v13(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    v13((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v9);
  }
  uint64_t v14 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v14) = *(void *)(a2 + v14);
  uint64_t v15 = a3[10];
  uint64_t v16 = a3[11];
  uint64_t v17 = (void *)(a1 + v15);
  uint64_t v18 = (void *)(a2 + v15);
  uint64_t v19 = v18[1];
  void *v17 = *v18;
  v17[1] = v19;
  uint64_t v20 = (void *)(a1 + v16);
  uint64_t v21 = (void *)(a2 + v16);
  uint64_t v22 = v21[1];
  void *v20 = *v21;
  v20[1] = v22;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_10053A5FC(char *a1, char *a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  int v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_100725CC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100431F80(&qword_100A47D80);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(&a1[a3[7]], &a2[a3[7]], v9);
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v15 = a3[10];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = *((void *)v17 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = a3[11];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = &a2[v18];
  *(void *)uint64_t v19 = *(void *)v20;
  *((void *)v19 + 1) = *((void *)v20 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10053A83C(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  int v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_100725CC0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100431F80(&qword_100A47D80);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32))(a1 + a3[7], a2 + a3[7], v9);
  }
  else
  {
    int v12 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
    v12(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    v12((void *)(a1 + a3[7]), (const void *)(a2 + a3[7]), v9);
  }
  uint64_t v13 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  return a1;
}

uint64_t sub_10053A9C0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[6];
  int v7 = (void *)(a1 + v6);
  uint64_t v8 = (void *)(a2 + v6);
  uint64_t v9 = sub_100725CC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = sub_100431F80(&qword_100A47D80);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40))(a1 + a3[7], a2 + a3[7], v9);
  uint64_t v15 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  *(void *)(a1 + v15) = *(void *)(a2 + v15);
  uint64_t v16 = a3[10];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (uint64_t *)(a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  void *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[11];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (uint64_t *)(a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10053ABCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10053ABE0);
}

uint64_t sub_10053ABE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100431F80(&qword_100A47D80);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100725CC0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10053AD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10053AD24);
}

uint64_t sub_10053AD24(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100431F80(&qword_100A47D80);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      int v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100725CC0();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_10053AE54()
{
  sub_10050E654();
  if (v0 <= 0x3F)
  {
    sub_100725CC0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_10053AF48()
{
  return 0;
}

uint64_t sub_10053AF6C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSRegistrationEventStruct();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053AFD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IDSRegistrationEventStruct();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10053B02C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSRegistrationEventStruct();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10053B090()
{
  uint64_t v0 = sub_100725D60();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [objc_allocWithZone((Class)NSDateFormatter) init];
  sub_100725D50();
  Class isa = sub_100725D40().super.isa;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v4, v0);
  [v5 setLocale:isa];

  NSString v7 = sub_100726420();
  [v5 setDateFormat:v7];

  Class v8 = sub_100725BE0().super.isa;
  id v9 = [v5 stringFromDate:v8];

  uint64_t v10 = sub_100726430();
  return v10;
}

void sub_10053B220()
{
  unk_100A53655 = 0;
  unk_100A53656 = -5120;
}

uint64_t sub_10053B24C()
{
  return swift_retain();
}

uint64_t sub_10053B298(uint64_t a1)
{
  return sub_10053B494(a1, &OBJC_IVAR___IDSQuerySDPersistenceManager_container, (uint64_t (*)(uint64_t))&_swift_release);
}

uint64_t (*sub_10053B2B8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10053B314()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___IDSQuerySDPersistenceManager_filePath);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_10053B36C(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + OBJC_IVAR___IDSQuerySDPersistenceManager_filePath);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_10053B3CC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10053B428()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_10053B474(uint64_t a1)
{
  return sub_10053B494(a1, &OBJC_IVAR___IDSQuerySDPersistenceManager_cleanupTimer, (uint64_t (*)(uint64_t))&_swift_unknownObjectRelease);
}

uint64_t sub_10053B494(uint64_t a1, void *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v6 = (uint64_t *)(v3 + *a2);
  swift_beginAccess();
  uint64_t v7 = *v6;
  *uint64_t v6 = a1;
  return a3(v7);
}

uint64_t (*sub_10053B4F4())()
{
  return j__swift_endAccess;
}

id sub_10053B550(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_10053B594(a1, a2);
}

id sub_10053B594(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v35 = a2;
  uint64_t v3 = sub_100726700();
  __chkstk_darwin(v3, v4);
  uint64_t v5 = sub_100726740();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  id v9 = (char *)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100725F20();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v12 = v2;
  sub_1004DFE9C(7);
  uint64_t v13 = OBJC_IVAR___IDSQuerySDPersistenceManager_queue;
  sub_100462C50(0, (unint64_t *)&qword_100A45480);
  sub_100725F10();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v5);
  id v38 = _swiftEmptyArrayStorage;
  sub_10057998C(&qword_100A44A68, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100431F80((uint64_t *)&unk_100A45490);
  sub_1004D10A4((unint64_t *)&qword_100A44A70, (uint64_t *)&unk_100A45490);
  sub_100726890();
  uint64_t v14 = v34;
  *(void *)&v12[v13] = sub_100726760();
  uint64_t v15 = v35;
  *(void *)&v12[OBJC_IVAR___IDSQuerySDPersistenceManager_container] = 0;
  uint64_t v16 = (uint64_t *)&v12[OBJC_IVAR___IDSQuerySDPersistenceManager_filePath];
  *uint64_t v16 = 0;
  v16[1] = 0;
  *(void *)&v12[OBJC_IVAR___IDSQuerySDPersistenceManager_cleanupTimer] = 0;
  swift_beginAccess();
  *uint64_t v16 = v14;
  v16[1] = v15;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRelease();
  uint64_t v17 = (objc_class *)type metadata accessor for SDPersistenceManager();
  v37.receiver = v12;
  v37.super_class = v17;
  id v18 = objc_msgSendSuper2(&v37, "init");
  uint64_t v19 = self;
  id v20 = v18;
  id v21 = [v19 standardUserDefaults];
  NSString v22 = sub_100726420();
  id v23 = [v21 integerForKey:v22];

  if (v23 == (id)3)
  {
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_100725EB0();
    os_log_type_t v25 = sub_1007266E0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 134218240;
      uint64_t v36 = 3;
      sub_100726830();
      *(_WORD *)(v26 + 12) = 2048;
      uint64_t v36 = 3;
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Version matches loading forceDeleteVersion: %ld persistedVersion: %ld", (uint8_t *)v26, 0x16u);
      swift_slowDealloc();
    }
  }
  else
  {
    char v27 = sub_100578F2C(v14, v15);
    swift_bridgeObjectRelease();
    id v28 = sub_100725EB0();
    os_log_type_t v29 = sub_1007266E0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 67109632;
      LODWORD(v36) = v27 & 1;
      sub_100726830();
      *(_WORD *)(v30 + 8) = 2048;
      uint64_t v36 = 3;
      sub_100726830();
      *(_WORD *)(v30 + 18) = 2048;
      uint64_t v36 = (uint64_t)v23;
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "Did purge existing ids-query.db files: %{BOOL}d forceDeleteVersion: %ld persistedVersion: %ld", (uint8_t *)v30, 0x1Cu);
      swift_slowDealloc();
    }

    id v31 = [v19 standardUserDefaults];
    Class isa = sub_100726690().super.super.isa;
    uint64_t v24 = sub_100726420();
    [v31 setValue:isa forKey:v24];
  }
  sub_10053BB94();

  return v20;
}

void sub_10053BB94()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100726280();
  uint64_t v3 = *(char **)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = ((char *)&v73 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100431F80(&qword_100A48B38);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v11 = ((char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v73 - v13;
  uint64_t v15 = sub_100726300();
  uint64_t v17 = __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v0) + 0x78))(v17);
  swift_release();
  if (!v18)
  {
    os_log_t v79 = v11;
    sub_100431F80(&qword_100A48B40);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100795A60;
    uint64_t v23 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
    uint64_t v24 = sub_10057998C(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
    *(void *)(v22 + 32) = v23;
    *(void *)(v22 + 40) = v24;
    uint64_t v25 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
    uint64_t v26 = sub_10057998C((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
    *(void *)(v22 + 48) = v25;
    *(void *)(v22 + 56) = v26;
    uint64_t v27 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
    uint64_t v28 = sub_10057998C(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
    *(void *)(v22 + 64) = v27;
    *(void *)(v22 + 72) = v28;
    uint64_t v29 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(0);
    uint64_t v30 = sub_10057998C(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
    *(void *)(v22 + 80) = v29;
    *(void *)(v22 + 88) = v30;
    uint64_t v31 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
    uint64_t v32 = sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
    *(void *)(v22 + 96) = v31;
    *(void *)(v22 + 104) = v32;
    uint64_t v33 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0);
    uint64_t v34 = sub_10057998C(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
    *(void *)(v22 + 112) = v33;
    *(void *)(v22 + 120) = v34;
    uint64_t v35 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0);
    uint64_t v36 = sub_10057998C(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
    *(void *)(v22 + 128) = v35;
    *(void *)(v22 + 136) = v36;
    uint64_t v37 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(0);
    uint64_t v38 = sub_10057998C((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
    *(void *)(v22 + 144) = v37;
    *(void *)(v22 + 152) = v38;
    uint64_t v39 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent(0);
    uint64_t v40 = sub_10057998C(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
    *(void *)(v22 + 160) = v39;
    *(void *)(v22 + 168) = v40;
    uint64_t v41 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount(0);
    uint64_t v42 = sub_10057998C(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
    *(void *)(v22 + 176) = v41;
    *(void *)(v22 + 184) = v42;
    sub_100726310();
    sub_100726360();
    swift_allocObject();
    uint64_t v43 = sub_100726370();
    uint64_t v44 = &v1[OBJC_IVAR___IDSQuerySDPersistenceManager_logger];
    int v45 = v1;
    char v78 = v44;
    uint64_t v46 = sub_100725EB0();
    os_log_type_t v47 = sub_1007266E0();
    if (os_log_type_enabled(v46, v47))
    {
      os_log_t v74 = v46;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v76 = (void *)v2;
      Swift::String v49 = (uint8_t *)v48;
      uint64_t v75 = swift_slowAlloc();
      v81[0] = v75;
      uint64_t v77 = v43;
      *(_DWORD *)Swift::String v49 = 136315138;
      uint64_t v50 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v45) + 0x90))();
      if (v51)
      {
        unint64_t v52 = v51;
      }
      else
      {
        uint64_t v50 = 7104878;
        unint64_t v52 = 0xE300000000000000;
      }
      uint64_t v80 = sub_10043E578(v50, v52, v81);
      uint64_t v43 = v77;
      sub_100726830();

      swift_bridgeObjectRelease();
      os_log_t v53 = v74;
      _os_log_impl((void *)&_mh_execute_header, v74, v47, "File path provided for model configuration: %s", v49, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v2 = (uint64_t)v76;
      swift_slowDealloc();
    }
    else
    {
    }
    sub_10053C7A0(v45, (uint64_t)v14);
    os_log_t v54 = v79;
    sub_1004546B8((uint64_t)v14, (uint64_t)v79, &qword_100A48B38);
    if ((*((unsigned int (**)(os_log_t, uint64_t, uint64_t))v3 + 6))(v54, 1, v2) == 1)
    {
      sub_10044C150((uint64_t)v54, &qword_100A48B38);
      sub_10053CAF4(0, v43, v45);
    }
    else
    {
      uint64_t v76 = v45;
      (*((void (**)(NSObject *, os_log_t, uint64_t))v3 + 4))(v6, v54, v2);
      sub_100726190();
      sub_100431F80((uint64_t *)&unk_100A48B48);
      Swift::String v55 = v6;
      unint64_t v56 = (v3[80] + 32) & ~(unint64_t)v3[80];
      uint64_t v57 = swift_allocObject();
      *(_OWORD *)(v57 + 16) = xmmword_100794E30;
      Swift::String v58 = (void (*)(unint64_t, NSObject *, uint64_t))*((void *)v3 + 2);
      os_log_t v79 = v55;
      v58(v57 + v56, v55, v2);
      swift_retain();
      sub_100726180();
      Swift::String v59 = v76;
      Swift::String v60 = *(void (**)(void))((swift_isaMask & *v76) + 0x80);
      uint64_t v75 = swift_retain();
      v60();
      Swift::String v61 = v59;
      Swift::String v62 = sub_100725EB0();
      os_log_type_t v63 = sub_1007266E0();
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = swift_slowAlloc();
        uint64_t v77 = v43;
        unint64_t v65 = (uint8_t *)v64;
        v81[0] = swift_slowAlloc();
        char v78 = v3;
        *(_DWORD *)unint64_t v65 = 136315138;
        uint64_t v66 = (*(uint64_t (**)(void))((swift_isaMask & *v61) + 0x90))();
        if (v67)
        {
          unint64_t v68 = v67;
        }
        else
        {
          uint64_t v66 = 7104878;
          unint64_t v68 = 0xE300000000000000;
        }
        uint64_t v80 = sub_10043E578(v66, v68, v81);
        uint64_t v3 = v78;
        sub_100726830();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v62, v63, "Successfully initialized ModelContainer {filePath: %s}", v65, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      unint64_t v69 = [objc_allocWithZone((Class)type metadata accessor for ContainerLoadMetric()) init];
      v69[OBJC_IVAR____TtC17identityservicesdP33_534A9A00092BF767A56A700BAD85BE0F19ContainerLoadMetric_containerType] = 2;
      id v70 = [self defaultLogger];
      os_log_t v71 = v79;
      if (!v70)
      {
        __break(1u);
        return;
      }
      uint64_t v72 = v70;
      [v70 logMetric:v69];
      swift_release();

      (*((void (**)(os_log_t, uint64_t))v3 + 1))(v71, v2);
    }
    sub_10053D61C();
    swift_release();
    sub_10044C150((uint64_t)v14, &qword_100A48B38);
    return;
  }
  os_log_t v79 = (os_log_t)sub_100725EB0();
  os_log_type_t v19 = sub_1007266B0();
  if (os_log_type_enabled(v79, v19))
  {
    id v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v79, v19, "Container already loaded.", v20, 2u);
    swift_slowDealloc();
  }
  os_log_t v21 = v79;
}

uint64_t sub_10053C7A0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100726270();
  __chkstk_darwin(v4 - 8, v5);
  v32[1] = (char *)v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100725A70();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v16 = (char *)v32 - v15;
  uint64_t v18 = __chkstk_darwin(v14, v17);
  id v20 = (char *)v32 - v19;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a1) + 0x90))(v18);
  if (v22)
  {
    uint64_t v23 = v21;
    uint64_t v24 = v22;
    v32[0] = a2;
    uint64_t v25 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *a1) + 0x98);
    swift_bridgeObjectRetain();
    v25(v23, v24);
    sub_100725A30();
    swift_bridgeObjectRelease();
    if (qword_100A52CF0 != -1) {
      swift_once();
    }
    sub_100725A60();
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v12, v16, v7);
    sub_100726260();
    uint64_t v26 = v32[0];
    sub_1007262A0();
    uint64_t v27 = *(void (**)(char *, uint64_t))(v8 + 8);
    v27(v16, v7);
    v27(v20, v7);
    uint64_t v28 = sub_100726280();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v26, 0, 1, v28);
  }
  else
  {
    uint64_t v30 = sub_100726280();
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
    return v31(a2, 1, 1, v30);
  }
}

uint64_t sub_10053CAF4(char a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_100726250();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v7 = sub_100726270();
  __chkstk_darwin(v7 - 8, v8);
  uint64_t v9 = sub_100726280();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100726260();
  sub_100726240();
  sub_100726290();
  sub_100726190();
  sub_100431F80((uint64_t *)&unk_100A48B48);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_100794E30;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 16))(v15 + v14, v13, v9);
  swift_retain();
  sub_100726180();
  uint64_t v16 = *(void (**)(uint64_t))((swift_isaMask & *a3) + 0x80);
  uint64_t v17 = swift_retain();
  v16(v17);
  uint64_t v18 = sub_100725EB0();
  os_log_type_t v19 = sub_1007266E0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  if (a1)
  {
    if (!v20) {
      goto LABEL_7;
    }
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    os_log_type_t v22 = v19;
    uint64_t v23 = "Successfully initialized fallback in-memory ModelContainer";
  }
  else
  {
    if (!v20) {
      goto LABEL_7;
    }
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    os_log_type_t v22 = v19;
    uint64_t v23 = "Successfully initialized in-memory ModelContainer";
  }
  _os_log_impl((void *)&_mh_execute_header, v18, v22, v23, v21, 2u);
  swift_slowDealloc();
LABEL_7:

  uint64_t v24 = [objc_allocWithZone((Class)type metadata accessor for ContainerLoadMetric()) init];
  v24[OBJC_IVAR____TtC17identityservicesdP33_534A9A00092BF767A56A700BAD85BE0F19ContainerLoadMetric_containerType] = 1;
  uint64_t v25 = [self defaultLogger];
  if (v25)
  {
    uint64_t v26 = v25;
    [v25 logMetric:v24];
  }
  else
  {
    uint64_t v26 = sub_100725EB0();
    os_log_type_t v27 = sub_1007266C0();
    if (!os_log_type_enabled(v26, v27))
    {

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    }
    uint64_t v28 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v28 = 0;
    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Error initializing core analytics logger.", v28, 2u);
    swift_slowDealloc();
  }
  swift_release();

  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
}

void sub_10053D04C()
{
  id v0 = [self sharedInstance];
  if (v0)
  {
    uint64_t v1 = v0;
    NSString v2 = sub_100726420();
    id v3 = [v1 registeredLocalURIsOnService:v2];

    if (v3)
    {
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      sub_100726570();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

id sub_10053D114()
{
  id result = [self sharedInstance];
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10053D150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_100725EF0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100725F20();
  uint64_t v14 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v15);
  uint64_t v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[1] = *(void *)&v4[OBJC_IVAR___IDSQuerySDPersistenceManager_queue];
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v4;
  v18[3] = a3;
  unsigned char v18[4] = a4;
  v18[5] = a1;
  v18[6] = a2;
  aBlock[4] = sub_1005796C4;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100435714;
  aBlock[3] = &unk_10098FF30;
  os_log_type_t v19 = _Block_copy(aBlock);
  BOOL v20 = v4;
  swift_retain();
  swift_retain();
  sub_100725F00();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_10057998C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100431F80((uint64_t *)&unk_100A454C0);
  sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
  sub_100726890();
  sub_100726750();
  _Block_release(v19);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v23);
  return swift_release();
}

unint64_t sub_10053D438(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    NSString v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A485A8);
  NSString v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_10047B0C4((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10053D544(uint64_t a1, void (*a2)(uint64_t))
{
  if (a1)
  {
    uint64_t v4 = swift_retain();
    a2(v4);
    if (v2)
    {
      sub_100726120();
      swift_willThrow();
    }
    return swift_release();
  }
  else
  {
    __chkstk_darwin(0, a2);
    return sub_100726730();
  }
}

uint64_t sub_10053D61C()
{
  uint64_t v48 = sub_100725EF0();
  __chkstk_darwin(v48, v1);
  Swift::String v49 = (char *)v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100726770();
  uint64_t v50 = *(void *)(v3 - 8);
  uint64_t v51 = v3;
  __chkstk_darwin(v3, v4);
  id v6 = (char *)v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100725EE0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  os_log_type_t v47 = (void *)((char *)v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (void *)((char *)v44 - v13);
  uint64_t v15 = sub_100725F50();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  BOOL v20 = (char *)v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  Swift::String v55 = (char *)v44 - v22;
  sub_10053DD64();
  unint64_t v56 = v0;
  uint64_t v23 = sub_100725EB0();
  os_log_type_t v24 = sub_1007266E0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v25 = 0;
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Starting SD database cleanup timer.", v25, 2u);
    swift_slowDealloc();
  }

  sub_100725F30();
  *uint64_t v14 = 10;
  int v45 = *(void (**)(void *, void, uint64_t))(v8 + 104);
  v45(v14, enum case for DispatchTimeInterval.seconds(_:), v7);
  uint64_t v26 = v55;
  sub_100725F90();
  os_log_type_t v27 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
  v44[1] = v8 + 8;
  uint64_t v46 = v27;
  v27((uint64_t)v14, v7);
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t))(v16 + 8);
  uint64_t v53 = v16 + 8;
  uint64_t v54 = v15;
  unint64_t v52 = v28;
  v28(v20, v15);
  sub_100462C50(0, (unint64_t *)&unk_100A46DC0);
  v44[0] = v14;
  uint64_t v29 = v56;
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10057998C((unint64_t *)&unk_100A48030, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_100431F80((uint64_t *)&unk_100A46DD0);
  sub_1004D10A4(&qword_100A48040, (uint64_t *)&unk_100A46DD0);
  uint64_t v30 = v51;
  sub_100726890();
  uint64_t v31 = sub_100726780();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v6, v30);
  uint64_t v32 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v29) + 0xB0))(v31);
  uint64_t v33 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v29) + 0xA8);
  uint64_t v34 = v33(v32);
  if (v34)
  {
    swift_getObjectType();
    uint64_t v35 = v44[0];
    uint64_t v36 = v45;
    v45((void *)v44[0], enum case for DispatchTimeInterval.never(_:), v7);
    uint64_t v37 = v47;
    *os_log_type_t v47 = 0;
    v36(v37, enum case for DispatchTimeInterval.nanoseconds(_:), v7);
    sub_1007267D0();
    swift_unknownObjectRelease();
    uint64_t v38 = v46;
    v46((uint64_t)v37, v7);
    uint64_t v34 = v38(v35, v7);
  }
  uint64_t v39 = v56;
  uint64_t v40 = v33(v34);
  if (v40)
  {
    swift_getObjectType();
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v39;
    aBlock[4] = sub_10057FDE8;
    aBlock[5] = v41;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100435714;
    aBlock[3] = &unk_1009909E0;
    _Block_copy(aBlock);
    uint64_t v57 = _swiftEmptyArrayStorage;
    sub_10057998C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    id v42 = v39;
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    sub_100726890();
    sub_100725F80();
    swift_allocObject();
    sub_100725F60();
    swift_release();
    sub_1007267A0();
    uint64_t v26 = v55;
    swift_release();
    uint64_t v40 = swift_unknownObjectRelease();
  }
  if (v33(v40))
  {
    swift_getObjectType();
    sub_1007267C0();
    swift_unknownObjectRelease();
  }
  return v52(v26, v54);
}

uint64_t sub_10053DD64()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Canceling cleanup timer.", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA8))();
  if (result)
  {
    swift_getObjectType();
    sub_1007267B0();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_10053DE70()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Cleanup timer fired.", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x78))();
  swift_release();
  oslog = sub_100725EB0();
  os_log_type_t v6 = sub_1007266E0();
  BOOL v7 = os_log_type_enabled(oslog, v6);
  if (v5)
  {
    if (v7)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "Closing our SD database.", v8, 2u);
      swift_slowDealloc();
    }

    uint64_t v9 = *(void (**)(void))((swift_isaMask & *v1) + 0x80);
    v9(0);
  }
  else
  {
    if (v7)
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, oslog, v6, "SD database is already closed.", v10, 2u);
      swift_slowDealloc();
    }
  }
}

id sub_10053E108()
{
  return sub_100571C2C(0, type metadata accessor for SDPersistenceManager);
}

uint64_t sub_10053E1D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100431F80(&qword_100A48798);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100431F80(&qword_100A47EE8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v15[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(0);
  sub_100725D70();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v8, v13, v9);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
  sub_10057998C(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100726130();
  sub_10044C150((uint64_t)v8, &qword_100A48798);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
}

uint64_t sub_10053E3F0@<X0>(uint64_t *a1@<X0>, void (*a2)(char *, void, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v71 = a3;
  uint64_t v72 = a4;
  uint64_t v66 = a2;
  uint64_t v5 = sub_1007259E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v73 = v5;
  uint64_t v74 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100431F80(&qword_100A48198);
  uint64_t v76 = *(void *)(v68 - 8);
  __chkstk_darwin(v68, v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A487C0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100431F80(&qword_100A487B0);
  uint64_t v75 = *(void *)(v61 - 8);
  __chkstk_darwin(v61, v18);
  BOOL v20 = (char *)&v50 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100431F80(&qword_100A487B8);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v69 = v21;
  uint64_t v70 = v22;
  uint64_t v24 = __chkstk_darwin(v21, v23);
  unint64_t v67 = (char *)&v50 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v26);
  uint64_t v64 = *a1;
  unint64_t v65 = (char *)&v50 - v27;
  uint64_t v59 = sub_1004D10A4(&qword_100A487D8, &qword_100A487C0);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v57 = v17;
  uint64_t v58 = v13;
  sub_100725980();
  swift_release();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v14 + 8);
  uint64_t v62 = v14 + 8;
  os_log_type_t v63 = v28;
  v28(v17, v13);
  uint64_t v60 = sub_100725CC0();
  uint64_t v29 = v12;
  sub_1007259F0();
  uint64_t v30 = v74;
  uint64_t v66 = *(void (**)(char *, void, uint64_t))(v74 + 104);
  uint64_t v51 = v9;
  uint64_t v31 = v73;
  v66(v9, enum case for PredicateExpressions.ComparisonOperator.lessThanOrEqual(_:), v73);
  uint64_t v56 = sub_1004D10A4(&qword_100A487E8, &qword_100A487B0);
  uint64_t v55 = sub_1004D10A4(&qword_100A481E8, &qword_100A48198);
  uint64_t v54 = sub_10057998C((unint64_t *)&unk_100A480F0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v32 = v20;
  uint64_t v33 = v61;
  uint64_t v34 = v68;
  sub_1007259B0();
  uint64_t v35 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v74 = v30 + 8;
  uint64_t v53 = v35;
  v35(v9, v31);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v76 + 8);
  v76 += 8;
  unint64_t v52 = v36;
  v36(v29, v34);
  uint64_t v37 = *(void (**)(char *, uint64_t))(v75 + 8);
  v75 += 8;
  uint64_t v38 = v32;
  v37(v32, v33);
  uint64_t v40 = v57;
  uint64_t v39 = v58;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v63(v40, v39);
  sub_1007259F0();
  uint64_t v41 = v51;
  uint64_t v42 = v73;
  v66(v51, enum case for PredicateExpressions.ComparisonOperator.greaterThanOrEqual(_:), v73);
  uint64_t v43 = v67;
  sub_1007259B0();
  v53(v41, v42);
  v52(v29, v34);
  v37(v38, v33);
  uint64_t v44 = sub_100431F80(&qword_100A48B28);
  int v45 = v72;
  v72[3] = v44;
  v45[4] = sub_100580D5C(&qword_100A48B30, &qword_100A48B28, (void (*)(void))sub_1005825A0);
  sub_10044D5C4(v45);
  sub_1004D10A4(&qword_100A48830, &qword_100A487B8);
  uint64_t v46 = v65;
  uint64_t v47 = v69;
  sub_1007259D0();
  uint64_t v48 = *(void (**)(char *, uint64_t))(v70 + 8);
  v48(v43, v47);
  return ((uint64_t (*)(char *, uint64_t))v48)(v46, v47);
}

uint64_t sub_10053EE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100431F80(&qword_100A48478);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v29[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100431F80(&qword_100A48540);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = &v29[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_100431F80(&qword_100A48470);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = &v29[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v34 = v18;
  sub_100725D70();
  uint64_t v19 = sub_100431F80(&qword_100A47ED0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
  sub_10057998C(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726130();
  uint64_t result = sub_10044C150((uint64_t)v17, &qword_100A48470);
  if (!v3)
  {
    uint64_t v21 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
    uint64_t v23 = __chkstk_darwin(v21, v22);
    *(void *)&v29[-16] = a2;
    *(void *)&v29[-8] = a3;
    uint64_t v33 = v23;
    sub_100725D70();
    uint64_t v24 = sub_100431F80(&qword_100A47EE0);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v13, 0, 1, v24);
    sub_10057998C((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
    sub_100726130();
    sub_10044C150((uint64_t)v13, &qword_100A48540);
    uint64_t v25 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
    uint64_t v27 = __chkstk_darwin(v25, v26);
    *(void *)&v29[-16] = a2;
    *(void *)&v29[-8] = a3;
    uint64_t v32 = v27;
    sub_100725D70();
    uint64_t v28 = sub_100431F80(&qword_100A47ED8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v9, 0, 1, v28);
    sub_10057998C(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
    sub_100726130();
    return sub_10044C150((uint64_t)v9, &qword_100A48478);
  }
  return result;
}

uint64_t sub_10053F240@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v4 = sub_100431F80(&qword_100A48060);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48498);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A484A0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A484B0, &qword_100A48498);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_1007259F0();
  a3[3] = sub_100431F80(&qword_100A484A8);
  a3[4] = sub_100580F1C();
  sub_10044D5C4(a3);
  sub_1004D10A4(&qword_100A484B8, &qword_100A484A0);
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v19 = v23;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_10053F584@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v4 = sub_100431F80(&qword_100A48060);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48978);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A489B8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A48988, &qword_100A48978);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_1007259F0();
  a3[3] = sub_100431F80(&qword_100A489C0);
  a3[4] = sub_100582CEC();
  sub_10044D5C4(a3);
  sub_1004D10A4(&qword_100A489C8, &qword_100A489B8);
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v19 = v23;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_10053F8C8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v4 = sub_100431F80(&qword_100A48060);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A484F0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A48890);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A48500, &qword_100A484F0);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_1007259F0();
  a3[3] = sub_100431F80(&qword_100A48898);
  a3[4] = sub_100582838();
  sub_10044D5C4(a3);
  sub_1004D10A4(&qword_100A488A8, &qword_100A48890);
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v19 = v23;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_10053FD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v28 = a6;
  uint64_t v29 = a7;
  uint64_t v12 = sub_100431F80(&qword_100A48478);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100431F80(&qword_100A48470);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v35 = v20;
  sub_100725D70();
  uint64_t v21 = sub_100431F80(&qword_100A47ED0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v19, 0, 1, v21);
  sub_10057998C(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726130();
  uint64_t result = sub_10044C150((uint64_t)v19, &qword_100A48470);
  if (!v7)
  {
    uint64_t v23 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
    uint64_t v25 = __chkstk_darwin(v23, v24);
    *(&v28 - 6) = a2;
    *(&v28 - 5) = a3;
    uint64_t v26 = v29;
    *(&v28 - 4) = v28;
    *(&v28 - 3) = v26;
    *(&v28 - 2) = a4;
    *(&v28 - 1) = a5;
    uint64_t v34 = v25;
    sub_100725D70();
    uint64_t v27 = sub_100431F80(&qword_100A47ED8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v15, 0, 1, v27);
    sub_10057998C(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
    sub_100726130();
    return sub_10044C150((uint64_t)v15, &qword_100A48478);
  }
  return result;
}

uint64_t sub_100540274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v10 = sub_100431F80(&qword_100A48478);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A48470);
  __chkstk_darwin(v14 - 8, v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v30 = a4;
  uint64_t v32 = v18;
  sub_100725D70();
  uint64_t v19 = sub_100431F80(&qword_100A47ED0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
  sub_10057998C(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726130();
  uint64_t result = sub_10044C150((uint64_t)v17, &qword_100A48470);
  if (!v6)
  {
    uint64_t v21 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
    uint64_t v23 = __chkstk_darwin(v21, v22);
    uint64_t v24 = v26;
    *(&v26 - 6) = a2;
    *(&v26 - 5) = v24;
    *(&v26 - 4) = v27;
    *(&v26 - 3) = a3;
    *(&v26 - 2) = a4;
    uint64_t v31 = v23;
    sub_100725D70();
    uint64_t v25 = sub_100431F80(&qword_100A47ED8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v13, 0, 1, v25);
    sub_10057998C(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
    sub_100726130();
    return sub_10044C150((uint64_t)v13, &qword_100A48478);
  }
  return result;
}

uint64_t sub_100540568@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v59 = a5;
  uint64_t v7 = sub_100431F80(&qword_100A48060);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  uint64_t v58 = v8;
  __chkstk_darwin(v7, v9);
  uint64_t v54 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100431F80(&qword_100A484A8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  uint64_t v61 = v12;
  __chkstk_darwin(v11, v13);
  uint64_t v53 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A48498);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100431F80(&qword_100A484A0);
  uint64_t v62 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v20);
  uint64_t v22 = (char *)v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100431F80(&qword_100A48318);
  uint64_t v49 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v23);
  uint64_t v25 = (char *)v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100431F80(&qword_100A48AC8);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v51 = v26;
  uint64_t v52 = v27;
  __chkstk_darwin(v26, v28);
  uint64_t v48 = (char *)v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *a1;
  uint64_t v63 = a2;
  sub_100431F80(&qword_100A468E0);
  sub_1007259F0();
  sub_1004D10A4(&qword_100A484B0, &qword_100A48498);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v16 + 8);
  v43[1] = v16 + 8;
  uint64_t v44 = v30;
  v30(v19, v15);
  uint64_t v46 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  sub_1004D10A4(&qword_100A48340, &qword_100A48318);
  sub_1004D10A4(&qword_100A484B8, &qword_100A484A0);
  sub_1004D10A4(&qword_100A48350, &qword_100A468E0);
  uint64_t v31 = v47;
  uint64_t v32 = v50;
  sub_1007259A0();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v62 + 8);
  v62 += 8;
  v33(v22, v32);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v31);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v44(v19, v15);
  uint64_t v34 = v54;
  uint64_t v63 = v55;
  uint64_t v64 = v56;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v35 = v53;
  uint64_t v36 = v57;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v36);
  v33(v22, v32);
  uint64_t v37 = sub_100431F80(&qword_100A48B18);
  uint64_t v38 = v59;
  v59[3] = v37;
  v38[4] = sub_1005835CC();
  sub_10044D5C4(v38);
  sub_1004D10A4(&qword_100A48AE8, &qword_100A48AC8);
  sub_1004D10A4(&qword_100A484E8, &qword_100A484A8);
  uint64_t v39 = v48;
  uint64_t v40 = v51;
  uint64_t v41 = v60;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v39, v40);
}

uint64_t sub_100540C34@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v60 = a5;
  uint64_t v61 = a6;
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v62 = a7;
  uint64_t v69 = sub_100431F80(&qword_100A48060);
  uint64_t v71 = *(void *)(v69 - 8);
  __chkstk_darwin(v69, v9);
  uint64_t v54 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100431F80(&qword_100A48898);
  uint64_t v72 = *(void *)(v58 - 8);
  __chkstk_darwin(v58, v11);
  uint64_t v53 = (char *)v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A484F0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100431F80(&qword_100A48890);
  uint64_t v73 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v18);
  uint64_t v20 = (char *)v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100431F80(&qword_100A48318);
  uint64_t v50 = *(void (***)(char *, uint64_t))(v21 - 8);
  __chkstk_darwin(v21, v22);
  uint64_t v24 = (char *)v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100431F80(&qword_100A48AA0);
  uint64_t v52 = *(void *)(v51 - 8);
  __chkstk_darwin(v51, v25);
  uint64_t v68 = (char *)v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100431F80(&qword_100A48AF0);
  uint64_t v59 = *(void *)(v57 - 8);
  __chkstk_darwin(v57, v27);
  uint64_t v70 = (char *)v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = *a1;
  uint64_t v74 = a2;
  sub_100431F80(&qword_100A468E0);
  sub_1007259F0();
  uint64_t v63 = sub_1004D10A4(&qword_100A48500, &qword_100A484F0);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v64 = *(void (**)(char *, uint64_t))(v14 + 8);
  v64(v17, v13);
  v49[2] = v14 + 8;
  v49[0] = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  sub_1004D10A4(&qword_100A48340, &qword_100A48318);
  uint64_t v29 = sub_1004D10A4(&qword_100A488A8, &qword_100A48890);
  sub_1004D10A4(&qword_100A48350, &qword_100A468E0);
  uint64_t v30 = v65;
  v49[1] = v29;
  sub_1007259A0();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v73 + 8);
  v73 += 8;
  uint64_t v66 = v31;
  v31(v20, v30);
  v50[1](v24, v21);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v32 = v13;
  v64(v17, v13);
  uint64_t v74 = v55;
  uint64_t v75 = v56;
  uint64_t v33 = v54;
  sub_1007259F0();
  uint64_t v55 = sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v34 = v53;
  uint64_t v35 = v69;
  sub_100725970();
  uint64_t v36 = *(void (***)(char *, uint64_t))(v71 + 8);
  v71 += 8;
  uint64_t v50 = v36;
  ((void (*)(char *, uint64_t))v36)(v33, v35);
  v66(v20, v30);
  sub_1004D10A4(&qword_100A48AC0, &qword_100A48AA0);
  uint64_t v56 = sub_1004D10A4(&qword_100A488B0, &qword_100A48898);
  uint64_t v37 = v68;
  uint64_t v38 = v51;
  uint64_t v39 = v58;
  sub_1007259C0();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v72 + 8);
  v72 += 8;
  v40(v34, v39);
  (*(void (**)(char *, uint64_t))(v52 + 8))(v37, v38);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v64(v17, v32);
  uint64_t v74 = v60;
  uint64_t v75 = v61;
  sub_1007259F0();
  uint64_t v41 = v33;
  uint64_t v42 = v65;
  uint64_t v43 = v69;
  sub_100725970();
  ((void (*)(char *, uint64_t))v50)(v41, v43);
  v66(v20, v42);
  uint64_t v44 = sub_100431F80(&qword_100A48AF8);
  uint64_t v45 = v62;
  v62[3] = v44;
  v45[4] = sub_1005834D4();
  sub_10044D5C4(v45);
  sub_1004D10A4(&qword_100A48B10, &qword_100A48AF0);
  uint64_t v46 = v70;
  uint64_t v47 = v57;
  sub_1007259C0();
  v40(v34, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v59 + 8))(v46, v47);
}

uint64_t sub_100541778(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100726BA0();
    uint64_t v9 = result;
  }
  else
  {
    uint64_t v9 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  uint64_t v26 = a4;
  uint64_t v25 = a3;
  if (v9)
  {
    if (v9 < 1)
    {
      __break(1u);
      return result;
    }
    uint64_t v11 = 0;
    uint64_t v12 = _swiftEmptyArrayStorage;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v13 = (id)sub_100726A10();
      }
      else {
        id v13 = *(id *)(a2 + 8 * v11 + 32);
      }
      uint64_t v14 = v13;
      id v15 = objc_msgSend(v13, "prefixedURI", v25);
      uint64_t v16 = sub_100726430();
      uint64_t v18 = v17;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v12 = sub_1004BEBB8(0, v12[2] + 1, 1, v12);
      }
      unint64_t v20 = v12[2];
      unint64_t v19 = v12[3];
      if (v20 >= v19 >> 1) {
        uint64_t v12 = sub_1004BEBB8((void *)(v19 > 1), v20 + 1, 1, v12);
      }
      ++v11;
      v12[2] = v20 + 1;
      uint64_t v21 = &v12[2 * v20];
      v21[4] = v16;
      v21[5] = v18;
    }
    while (v9 != v11);
  }
  else
  {
    uint64_t v12 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a1;
  *(void *)(v22 + 24) = v12;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v25;
  *(void *)(v23 + 24) = v26;
  uint64_t v24 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, id (*)(uint64_t), uint64_t))((swift_isaMask & *v4) + 0xE0);
  swift_bridgeObjectRetain();
  swift_retain();
  v24(sub_100579C1C, v22, sub_100579C38, v23);
  swift_release();

  return swift_release();
}

uint64_t sub_1005419DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100431F80(&qword_100A48478);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = &v21[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100431F80(&qword_100A48470);
  __chkstk_darwin(v10 - 8, v11);
  id v13 = &v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v25 = v14;
  sub_100725D70();
  uint64_t v15 = sub_100431F80(&qword_100A47ED0);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 0, 1, v15);
  sub_10057998C(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726130();
  uint64_t result = sub_10044C150((uint64_t)v13, &qword_100A48470);
  if (!v3)
  {
    uint64_t v17 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
    uint64_t v19 = __chkstk_darwin(v17, v18);
    *(void *)&v21[-16] = a2;
    *(void *)&v21[-8] = a3;
    uint64_t v24 = v19;
    sub_100725D70();
    uint64_t v20 = sub_100431F80(&qword_100A47ED8);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v9, 0, 1, v20);
    sub_10057998C(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
    sub_100726130();
    return sub_10044C150((uint64_t)v9, &qword_100A48478);
  }
  return result;
}

uint64_t sub_100541CAC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v52 = a4;
  uint64_t v6 = sub_100431F80(&qword_100A48498);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100431F80(&qword_100A484A0);
  uint64_t v54 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v11);
  id v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A48318);
  uint64_t v53 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100431F80(&qword_100A48AC8);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v50 = v18;
  uint64_t v51 = v19;
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v48 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  uint64_t v46 = (char *)v40 - v24;
  uint64_t v44 = *a1;
  uint64_t v55 = a2;
  uint64_t v45 = sub_100431F80(&qword_100A468E0);
  sub_1007259F0();
  sub_1004D10A4(&qword_100A484B0, &qword_100A48498);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v41 = v6;
  sub_100725980();
  swift_release();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v42 = v7 + 8;
  uint64_t v43 = v25;
  v25(v10, v6);
  v40[2] = sub_1004D10A4(&qword_100A48340, &qword_100A48318);
  v40[1] = sub_1004D10A4(&qword_100A484B8, &qword_100A484A0);
  sub_1004D10A4(&qword_100A48350, &qword_100A468E0);
  uint64_t v26 = v14;
  v40[0] = v14;
  uint64_t v27 = v47;
  sub_1007259A0();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v54 + 8);
  v54 += 8;
  uint64_t v29 = v27;
  v28(v13, v27);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v53 + 8);
  v53 += 8;
  v30(v17, v26);
  uint64_t v55 = v49;
  sub_1007259F0();
  uint64_t v31 = v41;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v43(v10, v31);
  uint64_t v32 = v48;
  uint64_t v33 = v40[0];
  sub_1007259A0();
  v28(v13, v29);
  v30(v17, v33);
  uint64_t v34 = sub_100431F80(&qword_100A48AD0);
  uint64_t v35 = v52;
  v52[3] = v34;
  v35[4] = sub_100580D5C(&qword_100A48AD8, &qword_100A48AD0, (void (*)(void))sub_1005833F8);
  sub_10044D5C4(v35);
  sub_1004D10A4(&qword_100A48AE8, &qword_100A48AC8);
  uint64_t v36 = v46;
  uint64_t v37 = v50;
  sub_1007259C0();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v51 + 8);
  v38(v32, v37);
  return ((uint64_t (*)(char *, uint64_t))v38)(v36, v37);
}

uint64_t sub_100542294@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v49 = a3;
  uint64_t v52 = a4;
  uint64_t v6 = sub_100431F80(&qword_100A484F0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100431F80(&qword_100A48890);
  uint64_t v54 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v11);
  id v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A48318);
  uint64_t v53 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (char *)v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100431F80(&qword_100A48AA0);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v50 = v18;
  uint64_t v51 = v19;
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v48 = (char *)v40 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21, v23);
  uint64_t v46 = (char *)v40 - v24;
  uint64_t v44 = *a1;
  uint64_t v55 = a2;
  uint64_t v45 = sub_100431F80(&qword_100A468E0);
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48500, &qword_100A484F0);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v41 = v6;
  sub_100725980();
  swift_release();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v42 = v7 + 8;
  uint64_t v43 = v25;
  v25(v10, v6);
  v40[2] = sub_1004D10A4(&qword_100A48340, &qword_100A48318);
  v40[1] = sub_1004D10A4(&qword_100A488A8, &qword_100A48890);
  sub_1004D10A4(&qword_100A48350, &qword_100A468E0);
  uint64_t v26 = v14;
  v40[0] = v14;
  uint64_t v27 = v47;
  sub_1007259A0();
  uint64_t v28 = *(void (**)(char *, uint64_t))(v54 + 8);
  v54 += 8;
  uint64_t v29 = v27;
  v28(v13, v27);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v53 + 8);
  v53 += 8;
  v30(v17, v26);
  uint64_t v55 = v49;
  sub_1007259F0();
  uint64_t v31 = v41;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v43(v10, v31);
  uint64_t v32 = v48;
  uint64_t v33 = v40[0];
  sub_1007259A0();
  v28(v13, v29);
  v30(v17, v33);
  uint64_t v34 = sub_100431F80(&qword_100A48AA8);
  uint64_t v35 = v52;
  v52[3] = v34;
  v35[4] = sub_100580D5C(&qword_100A48AB0, &qword_100A48AA8, (void (*)(void))sub_10058335C);
  sub_10044D5C4(v35);
  sub_1004D10A4(&qword_100A48AC0, &qword_100A48AA0);
  uint64_t v36 = v46;
  uint64_t v37 = v50;
  sub_1007259C0();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v51 + 8);
  v38(v32, v37);
  return ((uint64_t (*)(char *, uint64_t))v38)(v36, v37);
}

uint64_t sub_10054296C()
{
  uint64_t v1 = sub_100431F80(&qword_100A48798);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A48478);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48540);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A48470);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  uint64_t v17 = sub_100431F80(&qword_100A47ED0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  sub_10057998C(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726130();
  uint64_t result = sub_10044C150((uint64_t)v16, &qword_100A48470);
  if (!v0)
  {
    type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
    uint64_t v19 = sub_100431F80(&qword_100A47EE0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v12, 1, 1, v19);
    sub_10057998C((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
    sub_100726130();
    sub_10044C150((uint64_t)v12, &qword_100A48540);
    type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
    uint64_t v20 = sub_100431F80(&qword_100A47ED8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 1, 1, v20);
    sub_10057998C(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
    sub_100726130();
    sub_10044C150((uint64_t)v8, &qword_100A48478);
    type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(0);
    uint64_t v21 = sub_100431F80(&qword_100A47EE8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v4, 1, 1, v21);
    sub_10057998C(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
    sub_100726130();
    return sub_10044C150((uint64_t)v4, &qword_100A48798);
  }
  return result;
}

uint64_t sub_100542EC4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, void *a6, uint64_t a7, unint64_t a8)
{
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(0);
  swift_bridgeObjectRetain();
  sub_100441FD4(a4, a5);
  id v15 = [a6 prefixedURI];
  uint64_t v16 = sub_100726430();
  uint64_t v18 = v17;

  sub_100441FD4(a7, a8);
  sub_1004902E4(a2, a3, a4, a5, v16, v18, a7, a8);
  sub_10057998C(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100726150();

  return swift_release();
}

void sub_10054323C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7)
{
  id v142 = a7;
  id v146 = a5;
  uint64_t v156 = a3;
  unint64_t v157 = (void (*)(void, void, void))a4;
  uint64_t v158 = a1;
  uint64_t v141 = sub_100725CC0();
  uint64_t v9 = *(void *)(v141 - 8);
  uint64_t v11 = __chkstk_darwin(v141, v10);
  id v140 = (char *)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  unint64_t v139 = (char *)&v132 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v138 = (char *)&v132 - v18;
  __chkstk_darwin(v17, v19);
  uint64_t v137 = (char *)&v132 - v20;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_100726BA0();
    if (v21) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    uint64_t v23 = 0;
    goto LABEL_9;
  }
  uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v21) {
    goto LABEL_8;
  }
LABEL_3:
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v22 = (id)sub_100726A10();
  }
  else
  {
    if (!*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_58;
    }
    id v22 = *(id *)(a2 + 32);
  }
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
LABEL_9:
  id v24 = [v146 prefixedURI];
  uint64_t v25 = sub_100726430();
  uint64_t v27 = v26;

  unint64_t v144 = a2;
  uint64_t v145 = v21;
  id v132 = v23;
  uint64_t v167 = v9;
  if (v23)
  {
    id v28 = [v23 senderCorrelationIdentifier];
    if (v28)
    {
      uint64_t v29 = v28;
      uint64_t v30 = sub_100726430();
      uint64_t v32 = v31;
    }
    else
    {
      uint64_t v30 = 0;
      uint64_t v32 = 0;
    }
    id v35 = objc_msgSend(v23, "shortHandle", v132);
    if (v35)
    {
      uint64_t v36 = v35;
      uint64_t v33 = sub_100726430();
      uint64_t v34 = v37;
    }
    else
    {
      uint64_t v33 = 0;
      uint64_t v34 = 0;
    }
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v30 = 0;
    uint64_t v32 = 0;
  }
  type metadata accessor for ArchiveHelper();
  sub_100462C50(0, &qword_100A480B8);
  char v38 = sub_10044CAE8();
  uint64_t v39 = sub_10044CAF0(a6, v38 & 1);
  unint64_t v41 = v40;
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  uint64_t v42 = (uint64_t)v157;
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_1004898EC(v156, v42, v25, v27, v30, v32, v33, v34, v39, v41);
  sub_10057998C(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726150();
  uint64_t v44 = v145;
  if (!v145) {
    goto LABEL_51;
  }
  uint64_t v136 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  if (v44 < 1)
  {
LABEL_58:
    __break(1u);
    return;
  }
  uint64_t v143 = v43;
  unint64_t v45 = v144;
  unint64_t v135 = v144 & 0xC000000000000001;
  Swift::Int v134 = (void (**)(char *, char *, uint64_t))(v167 + 16);
  uint64_t v133 = (void (**)(char *, uint64_t))(v167 + 8);
  swift_bridgeObjectRetain();
  uint64_t v46 = 0;
  do
  {
    uint64_t v167 = v46;
    if (v135) {
      id v73 = (id)sub_100726A10();
    }
    else {
      id v73 = *(id *)(v45 + 8 * v46 + 32);
    }
    uint64_t v74 = v73;
    id v75 = objc_msgSend(v73, "pushTokenObject", v132);
    id v76 = [v75 rawToken];

    uint64_t v77 = sub_100725B50();
    uint64_t v165 = v78;
    uint64_t v166 = v77;

    id v164 = [v74 capabilities];
    unsigned int v154 = [v74 ngmVersion];
    LODWORD(v161) = [v74 legacyVersion];
    id v79 = [v74 KTLoggableData];
    if (v79)
    {
      uint64_t v80 = v79;
      uint64_t v155 = sub_100725B50();
      id v163 = v81;
    }
    else
    {
      uint64_t v155 = 0;
      id v163 = (void (*)(void, void, void))0xF000000000000000;
    }
    id v82 = [v74 KTDeviceSignature];
    if (v82)
    {
      uint64_t v83 = v82;
      uint64_t v160 = sub_100725B50();
      uint64_t v162 = v84;
    }
    else
    {
      uint64_t v160 = 0;
      uint64_t v162 = 0xF000000000000000;
    }
    id v85 = [v74 serializedLegacyPublicIdentity];
    if (v85)
    {
      unint64_t v86 = v85;
      uint64_t v152 = sub_100725B50();
      unint64_t v159 = v87;
    }
    else
    {
      uint64_t v152 = 0;
      unint64_t v159 = 0xF000000000000000;
    }
    id v88 = [v74 serializedNGMDeviceIdentity];
    if (v88)
    {
      uint64_t v89 = v88;
      uint64_t v90 = sub_100725B50();
      unint64_t v150 = v91;
      uint64_t v151 = v90;
    }
    else
    {
      unint64_t v150 = 0xF000000000000000;
      uint64_t v151 = 0;
    }
    id v92 = [v74 serializedNGMDevicePrekey];
    if (v92)
    {
      uint64_t v93 = v92;
      uint64_t v149 = sub_100725B50();
      unint64_t v148 = v94;
    }
    else
    {
      uint64_t v149 = 0;
      unint64_t v148 = 0xF000000000000000;
    }
    id v95 = [v74 serializedApplicationPublicKey];
    if (v95)
    {
      uint64_t v96 = v95;
      uint64_t v97 = sub_100725B50();
      unint64_t v99 = v98;
    }
    else
    {
      uint64_t v97 = 0;
      unint64_t v99 = 0xF000000000000000;
    }
    unsigned __int8 v100 = [v74 mismatchedAccountFlag];
    unsigned __int8 v101 = [v74 ktCapableFlag];
    id v102 = [v74 anonymizedSenderID];
    if (v102)
    {
      uint64_t v103 = v102;
      char v104 = sub_100726430();
      uint64_t v106 = v105;
    }
    else
    {
      char v104 = 0;
      uint64_t v106 = 0;
    }
    uint64_t v147 = v106;
    unsigned __int8 v107 = [v74 verifiedBusiness];
    id v108 = [v74 gameCenterData];
    uint64_t v153 = v74;
    id v131 = [v74 familyEndpointData];
    LOBYTE(v130) = v107;
    char v128 = v104;
    uint64_t v129 = v106;
    BYTE1(v127) = v101;
    LOBYTE(v127) = v100;
    unint64_t v109 = v148;
    uint64_t v110 = v149;
    unint64_t v111 = v150;
    *((void *)&v126 + 1) = v150;
    uint64_t v112 = v151;
    *(void *)&long long v126 = v151;
    uint64_t v113 = v152;
    uint64_t v114 = v155;
    BOOL v161 = sub_10057BAA8(v156, (uint64_t)v157, v166, (unint64_t)v165, (uint64_t)v164, v154, (char)v161, v155, (unint64_t)v163, v160, v162, v152, v159, v126, v115, v149, v148, v97, SBYTE1(v97),
             v99,
             v127,
             v128,
             v129,
             v130);

    swift_bridgeObjectRelease();
    sub_10044CE88(v97, v99);
    sub_10044CE88(v110, v109);
    sub_10044CE88(v112, v111);
    sub_10044CE88(v113, v159);
    sub_10044CE88(v160, v162);
    sub_10044CE88(v114, (unint64_t)v163);

    sub_100442248(v166, (unint64_t)v165);
    type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
    sub_10057998C((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
    sub_100726150();
    uint64_t v168 = sub_100489450();
    if (v168)
    {
      swift_retain();
      sub_100726550();
      if (*(void *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1007265A0();
      }
      sub_1007265C0();
      sub_100726590();
      sub_100489768();
    }
    else
    {
      sub_100489768();
      swift_bridgeObjectRelease();
    }
    uint64_t v47 = v153;
    ++v167;
    id v48 = [v142 prefixedURI];
    uint64_t v49 = sub_100726430();
    uint64_t v165 = v50;
    uint64_t v166 = v49;

    id v51 = [v146 prefixedURI];
    uint64_t v52 = (void *)sub_100726430();
    id v163 = v53;
    id v164 = v52;

    id v54 = [v47 pushTokenObject];
    id v55 = [v54 rawToken];

    uint64_t v162 = sub_100725B50();
    uint64_t v160 = v56;

    id v57 = [v47 sessionToken];
    uint64_t v58 = sub_100725B50();
    uint64_t v60 = v59;

    id v61 = [v47 expireDate];
    uint64_t v62 = v137;
    sub_100725C70();

    id v63 = [v47 refreshDate];
    uint64_t v64 = v138;
    sub_100725C70();

    [v47 queryTimeInterval];
    double v66 = v65;
    uint64_t v67 = *v134;
    uint64_t v68 = (uint64_t)v139;
    uint64_t v69 = v141;
    (*v134)(v139, v62, v141);
    uint64_t v70 = (uint64_t)v140;
    v67(v140, v64, v69);
    uint64_t v71 = v157;
    swift_bridgeObjectRetain();
    sub_10048ED24(v156, v71, v166, v165, (uint64_t)v164, v163, v162, v160, v66, v58, v60, v68, v70);
    uint64_t v72 = *v133;
    (*v133)(v64, v69);
    v72(v62, v69);
    sub_10057998C(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
    sub_100726150();

    uint64_t v46 = v167;
    swift_release();
    swift_release();
    unint64_t v45 = v144;
  }
  while (v145 != v46);
  swift_bridgeObjectRelease();
LABEL_51:
  id v116 = v132;
  if (v132)
  {
    id v117 = [v132 shortHandle];
    if (v117)
    {
      uint64_t v118 = v117;
      uint64_t v119 = sub_100726430();
      uint64_t v121 = v120;

      type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0);
      id v122 = [v146 prefixedURI];
      uint64_t v123 = sub_100726430();
      uint64_t v125 = v124;

      sub_10049106C(v123, v125, v119, v121);
      sub_10057998C(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
      sub_100726150();
      swift_release();
      swift_release();

      return;
    }
  }
  swift_release();
}

id sub_1005440E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v41 = a7;
  uint64_t v42 = a8;
  uint64_t v40 = a6;
  uint64_t v43 = a2;
  uint64_t v12 = sub_100725EF0();
  uint64_t v39 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v13);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100725F20();
  uint64_t v38 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = [a5 prefixedURI];
  uint64_t v21 = sub_100726430();
  uint64_t v23 = v22;

  uint64_t v24 = sub_1005444B8(a3, a4, v21, v23, a1);
  swift_bridgeObjectRelease();
  if (v24)
  {
    type metadata accessor for ArchiveHelper();
    sub_100462C50(0, &qword_100A480B8);
    char v25 = sub_10044CAE8();
    uint64_t v26 = sub_10044CAF0(v42, v25 & 1);
    sub_10048929C(v26, v27);
    return (id)swift_release();
  }
  else
  {
    uint64_t v30 = v40;
    uint64_t v29 = v41;
    uint64_t v31 = v19;
    uint64_t v32 = v38;
    uint64_t v33 = v39;
    uint64_t v43 = v16;
    id result = (id)im_primary_queue();
    if (result)
    {
      uint64_t v34 = result;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v30;
      *(void *)(v35 + 24) = v29;
      aBlock[4] = sub_10058307C;
      aBlock[5] = v35;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_100435714;
      aBlock[3] = &unk_100990D50;
      uint64_t v36 = _Block_copy(aBlock);
      swift_retain();
      sub_100725F00();
      uint64_t v44 = _swiftEmptyArrayStorage;
      sub_10057998C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100431F80((uint64_t *)&unk_100A454C0);
      sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
      sub_100726890();
      sub_100726750();
      _Block_release(v36);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v15, v12);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v31, v43);
      return (id)swift_release();
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1005444B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_100431F80(&qword_100A47ED0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  v27[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  sub_100725D70();
  v27[0] = _swiftEmptyArrayStorage;
  uint64_t v21 = v27;
  uint64_t v22 = v15;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v5) + 0xE8))(a5, sub_10057BD78, v20);
  uint64_t v16 = v27[0];
  if (v27[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100726BA0();
    uint64_t v17 = result;
    if (!result) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v27[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v17)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      swift_bridgeObjectRelease();
      return v17;
    }
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
    uint64_t v17 = sub_100726A10();
    goto LABEL_6;
  }
  if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v17 = *(void *)(v16 + 32);
    swift_retain();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100544A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v61 = a8;
  uint64_t v59 = a6;
  uint64_t v60 = a7;
  uint64_t v54 = a4;
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  uint64_t v57 = a5;
  uint64_t v58 = a10;
  uint64_t v56 = a9;
  uint64_t v12 = sub_100725CC0();
  uint64_t v49 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  id v55 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v16;
  uint64_t v51 = v16;
  __chkstk_darwin(v15, v18);
  id v20 = (char *)&v48 - v19;
  uint64_t v50 = (char *)&v48 - v19;
  uint64_t v21 = sub_100431F80(&qword_100A47D80);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(void *)(v22 + 64);
  __chkstk_darwin(v21 - 8, v24);
  uint64_t v25 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004546B8(a3, (uint64_t)v25, &qword_100A47D80);
  uint64_t v65 = v13;
  uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v53(v20, a4, v12);
  unint64_t v26 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v27 = *(unsigned __int8 *)(v13 + 80);
  unint64_t v28 = (v23 + v27 + v26) & ~v27;
  uint64_t v52 = v27 | 7;
  unint64_t v29 = (v17 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v64;
  *(void *)(v32 + 16) = v63;
  *(void *)(v32 + 24) = v33;
  sub_100462BE4((uint64_t)v25, v32 + v26, &qword_100A47D80);
  uint64_t v34 = *(void (**)(unint64_t, char *, uint64_t))(v65 + 32);
  v65 += 32;
  uint64_t v35 = v49;
  v34(v32 + v28, v50, v49);
  uint64_t v36 = v58;
  *(void *)(v32 + v29) = v57;
  uint64_t v37 = v60;
  *(void *)(v32 + v30) = v59;
  uint64_t v38 = (void *)(v32 + v31);
  uint64_t v39 = v61;
  *uint64_t v38 = v37;
  v38[1] = v39;
  uint64_t v40 = (void *)(v32 + ((v31 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v41 = v55;
  *uint64_t v40 = v56;
  v40[1] = v36;
  v53(v41, v54, v35);
  uint64_t v42 = (void *)swift_allocObject();
  uint64_t v44 = v62;
  uint64_t v43 = v63;
  v42[2] = v62;
  v42[3] = v43;
  v42[4] = v64;
  v34((unint64_t)v42 + ((v27 + 40) & ~v27), v41, v35);
  unint64_t v45 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, void (*)(uint64_t), void *))((swift_isaMask & *v44) + 0xE0);
  swift_bridgeObjectRetain();
  uint64_t v46 = v44;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  v45(sub_10057BF48, v32, sub_10057C15C, v42);
  swift_release();
  return swift_release();
}

uint64_t sub_100544DA4(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8, uint64_t a9, void *a10, uint64_t a11)
{
  uint64_t v57 = a7;
  uint64_t v58 = a8;
  uint64_t v55 = a3;
  uint64_t v56 = a6;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v54 = a2;
  uint64_t v59 = a1;
  uint64_t v11 = sub_100431F80(&qword_100A48180);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v48 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100431F80(&qword_100A48188);
  uint64_t v14 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v15);
  unint64_t v45 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100725CC0();
  uint64_t v17 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v18);
  uint64_t v51 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v20 - 8, v21);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v24 = [objc_allocWithZone((Class)IMUserDefaults) init];
  NSString v25 = sub_100726420();
  id v26 = [v24 appValueForKey:v25];

  if (v26)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v60, 0, sizeof(v60));
  }
  sub_100462BE4((uint64_t)v60, (uint64_t)v61, &qword_100A44F00);
  uint64_t v46 = v14;
  if (!v61[3])
  {
LABEL_8:
    sub_10044C150((uint64_t)v61, &qword_100A44F00);
    goto LABEL_9;
  }
  sub_100462C50(0, (unint64_t *)&unk_100A468F0);
  if (swift_dynamicCast())
  {
    id v27 = v62;
    unint64_t v28 = (char *)[v62 unsignedIntegerValue];

    unint64_t v29 = v28 + 1;
    if (v28 != (char *)-1) {
      goto LABEL_10;
    }
    __break(1u);
    goto LABEL_8;
  }
LABEL_9:
  unint64_t v29 = 0;
LABEL_10:
  id v30 = [objc_allocWithZone((Class)IMUserDefaults) init];
  id v31 = [objc_allocWithZone((Class)NSNumber) initWithUnsignedInteger:v29];
  NSString v32 = sub_100726420();
  [v30 setAppValue:v31 forKey:v32];

  uint64_t v33 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent(0);
  sub_1004546B8(v52, (uint64_t)v23, &qword_100A47D80);
  uint64_t v34 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v51, v53, v50);
  swift_bridgeObjectRetain();
  uint64_t v35 = v55;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100499918(v54, v35, (uint64_t)v23, v34, v56, v57, v58, a9, a10, a11, v29);
  sub_10057998C(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100726150();
  uint64_t v36 = sub_100536FE0();
  if ((unint64_t)v29 <= *v36) {
    return swift_release();
  }
  __chkstk_darwin(v36, v37);
  v61[0] = v33;
  uint64_t v38 = v45;
  sub_100725D70();
  uint64_t v39 = v46;
  uint64_t v40 = (uint64_t)v48;
  uint64_t v41 = v47;
  (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v48, v38, v47);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v39 + 56))(v40, 0, 1, v41);
  uint64_t v42 = v49;
  sub_100726130();
  swift_release();
  if (v42) {
    swift_errorRelease();
  }
  sub_10044C150(v40, &qword_100A48180);
  return (*(uint64_t (**)(char *, uint64_t))(v39 + 8))(v38, v41);
}

uint64_t sub_100545350@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v28 = a1;
  id v30 = a2;
  uint64_t v29 = sub_1007259E0();
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A48A40);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v31 = v5;
  uint64_t v32 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A481A0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A48A48);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A481B0, &qword_100A481A0);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v33 = v28;
  sub_1007259F0();
  uint64_t v20 = v27;
  uint64_t v21 = v29;
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v4, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v29);
  uint64_t v22 = sub_100431F80(&qword_100A48A50);
  uint64_t v23 = v30;
  v30[3] = v22;
  v23[4] = sub_100582F44();
  sub_10044D5C4(v23);
  sub_1004D10A4(&qword_100A48A70, &qword_100A48A48);
  sub_1004D10A4(&qword_100A48A78, &qword_100A48A40);
  uint64_t v24 = v31;
  sub_1007259B0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

void sub_10054575C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5)
{
  uint64_t v9 = sub_100725CC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  uint64_t v17 = (char *)&v29 - v16;
  if (a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v14, a5, v9);
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    uint64_t v18 = sub_100725EB0();
    os_log_type_t v19 = sub_1007266E0();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = swift_slowAlloc();
      uint64_t v29 = (void *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      uint64_t v32 = v30;
      *(_DWORD *)uint64_t v20 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_10043E578(a3, a4, &v32);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v20 + 12) = 2080;
      sub_10057998C(&qword_100A459E8, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v21 = sub_100726D00();
      uint64_t v31 = sub_10043E578(v21, v22, &v32);
      sub_100726830();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
      *(_WORD *)(v20 + 22) = 2112;
      swift_errorRetain();
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v31 = v23;
      sub_100726830();
      *uint64_t v29 = v23;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Failed to save registration event for bagKey: %s completionTime: %s error: %@", (uint8_t *)v20, 0x20u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v10 + 8))(v14, v9);
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v29 - v16, a5, v9);
    swift_bridgeObjectRetain_n();
    uint64_t v24 = sub_100725EB0();
    os_log_type_t v25 = sub_1007266E0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_10043E578(a3, a4, &v32);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v26 + 12) = 2080;
      sub_10057998C(&qword_100A459E8, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v27 = sub_100726D00();
      uint64_t v31 = sub_10043E578(v27, v28, &v32);
      sub_100726830();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Successfully saved registration event for bagKey: %s completionTime: %s", (uint8_t *)v26, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
    }
  }
}

uint64_t sub_100545F30(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, id a5, void *a6, char a7, void *a8)
{
  id v13 = [a5 prefixedURI];
  uint64_t v14 = sub_100726430();
  uint64_t v16 = v15;

  uint64_t v54 = a1;
  uint64_t v55 = a3;
  uint64_t v17 = sub_1005444B8(a3, a4, v14, v16, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v17) {
    return result;
  }
  uint64_t v51 = a4;
  unint64_t v19 = sub_100489450();
  if (!v19) {
    return swift_release();
  }
  unint64_t v20 = v19;
  char v50 = a7;
  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (v36)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_100726BA0();
      swift_bridgeObjectRelease();
      if (!v21)
      {
        uint64_t v48 = a2;
        uint64_t v49 = v17;
LABEL_20:
        id v37 = [a6 prefixedURI];
        uint64_t v38 = sub_100726430();
        uint64_t v40 = v39;

        id v41 = [a5 prefixedURI];
        uint64_t v42 = sub_100726430();
        uint64_t v44 = v43;

        unint64_t v45 = sub_1005462BC(v55, v51, v38, v40, v42, v44, (uint64_t)_swiftEmptyArrayStorage, v50 & 1, v54);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        id v46 = v48;
        swift_retain();
        uint64_t v47 = sub_10057B8E4(v20, v45, v49);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();

        swift_release_n();
        *a8 = v47;
        return swift_bridgeObjectRelease();
      }
      goto LABEL_5;
    }
    goto LABEL_21;
  }
  uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v21)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return swift_release();
  }
LABEL_5:
  uint64_t result = sub_1005724F0(0, v21 & ~(v21 >> 63), 0);
  if ((v21 & 0x8000000000000000) == 0)
  {
    uint64_t v48 = a2;
    uint64_t v49 = v17;
    if ((v20 & 0xC000000000000001) != 0)
    {
      uint64_t v22 = 0;
      do
      {
        sub_100726A10();
        uint64_t v23 = sub_10048A368();
        uint64_t v25 = v24;
        swift_unknownObjectRelease();
        unint64_t v27 = _swiftEmptyArrayStorage[2];
        unint64_t v26 = _swiftEmptyArrayStorage[3];
        if (v27 >= v26 >> 1) {
          sub_1005724F0(v26 > 1, v27 + 1, 1);
        }
        ++v22;
        _swiftEmptyArrayStorage[2] = v27 + 1;
        unint64_t v28 = &_swiftEmptyArrayStorage[2 * v27];
        v28[4] = v23;
        void v28[5] = v25;
      }
      while (v21 != v22);
    }
    else
    {
      unint64_t v29 = v20 + 32;
      do
      {
        swift_retain();
        uint64_t v30 = sub_10048A368();
        uint64_t v32 = v31;
        swift_release();
        unint64_t v34 = _swiftEmptyArrayStorage[2];
        unint64_t v33 = _swiftEmptyArrayStorage[3];
        if (v34 >= v33 >> 1) {
          sub_1005724F0(v33 > 1, v34 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v34 + 1;
        uint64_t v35 = &_swiftEmptyArrayStorage[2 * v34];
        v35[4] = v30;
        v35[5] = v32;
        v29 += 8;
        --v21;
      }
      while (v21);
    }
    goto LABEL_20;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005462BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  int v27 = a8;
  uint64_t v28 = a9;
  uint64_t v17 = sub_100431F80(&qword_100A47ED8);
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  __chkstk_darwin(v17, v18);
  unint64_t v20 = &v26[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = sub_100725CC0();
  uint64_t v29 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v21);
  uint64_t v23 = &v26[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100725CB0();
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v41 = a6;
  uint64_t v42 = a7;
  char v43 = v27;
  uint64_t v44 = v23;
  v45[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  sub_100725D70();
  v45[0] = _swiftEmptyArrayStorage;
  unint64_t v34 = v45;
  uint64_t v35 = v20;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), unsigned char *))((swift_isaMask & *v9) + 0xE8))(v28, sub_100583860, v33);
  uint64_t v24 = v45[0];
  (*(void (**)(unsigned char *, uint64_t))(v31 + 8))(v20, v32);
  (*(void (**)(unsigned char *, uint64_t))(v29 + 8))(v23, v30);
  return v24;
}

uint64_t sub_1005467CC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  char v50 = a6;
  uint64_t v51 = sub_100431F80(&qword_100A48060);
  uint64_t v53 = *(void *)(v51 - 8);
  __chkstk_darwin(v51, v7);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A48498);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A484A0);
  uint64_t v52 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v16);
  uint64_t v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100431F80(&qword_100A484A8);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v46 = v19;
  uint64_t v47 = v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  unint64_t v45 = (char *)v39 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22, v24);
  uint64_t v41 = *a1;
  uint64_t v42 = (char *)v39 - v25;
  sub_1004D10A4(&qword_100A484B0, &qword_100A48498);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  unint64_t v26 = *(void (**)(char *, uint64_t))(v11 + 8);
  v39[1] = v11 + 8;
  uint64_t v40 = v26;
  v26(v14, v10);
  uint64_t v54 = v43;
  uint64_t v55 = v44;
  sub_1007259F0();
  uint64_t v44 = sub_1004D10A4(&qword_100A484B8, &qword_100A484A0);
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v27 = v15;
  uint64_t v28 = v51;
  sub_100725970();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v53 + 8);
  v53 += 8;
  v29(v9, v28);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v52 + 8);
  v52 += 8;
  v30(v18, v27);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v40(v14, v10);
  uint64_t v54 = v48;
  uint64_t v55 = v49;
  sub_1007259F0();
  uint64_t v31 = v45;
  uint64_t v32 = v51;
  sub_100725970();
  v29(v9, v32);
  v30(v18, v27);
  uint64_t v33 = sub_100431F80(&qword_100A484C0);
  unint64_t v34 = v50;
  v50[3] = v33;
  v34[4] = sub_100580D5C(&qword_100A484C8, &qword_100A484C0, (void (*)(void))sub_100580F1C);
  sub_10044D5C4(v34);
  sub_1004D10A4(&qword_100A484E8, &qword_100A484A8);
  uint64_t v35 = v42;
  uint64_t v36 = v46;
  sub_1007259C0();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v47 + 8);
  v37(v31, v36);
  return ((uint64_t (*)(char *, uint64_t))v37)(v35, v36);
}

uint64_t sub_100546D68(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v5 = sub_100431F80(&qword_100A48470);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80((uint64_t *)&unk_100A48A80);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A47ED0);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a3, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  sub_10057998C(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_1007261B0();
  uint64_t v16 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (!v3)
  {
    *uint64_t v19 = v16;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100546FA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_100431F80(&qword_100A47EE0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  v27[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
  sub_100725D70();
  v27[0] = _swiftEmptyArrayStorage;
  uint64_t v21 = v27;
  uint64_t v22 = v15;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v5) + 0xE8))(a5, sub_10057C220, v20);
  uint64_t v16 = v27[0];
  if (v27[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100726BA0();
    uint64_t v17 = result;
    if (!result) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v27[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v17)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
      swift_bridgeObjectRelease();
      return v17;
    }
  }
  if ((v16 & 0xC000000000000001) != 0)
  {
    uint64_t v17 = sub_100726A10();
    goto LABEL_6;
  }
  if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v17 = *(void *)(v16 + 32);
    swift_retain();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100547340@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v68 = a5;
  uint64_t v66 = a4;
  uint64_t v74 = a6;
  uint64_t v9 = sub_100431F80(&qword_100A48670);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v70 = v9;
  uint64_t v71 = v10;
  __chkstk_darwin(v9, v11);
  uint64_t v65 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_100431F80(&qword_100A48980);
  uint64_t v69 = *(void *)(v67 - 8);
  __chkstk_darwin(v67, v13);
  uint64_t v61 = (char *)v53 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A48990);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v72 = v15;
  uint64_t v73 = v16;
  __chkstk_darwin(v15, v17);
  uint64_t v64 = (char *)v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100431F80(&qword_100A48060);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v59 = v19;
  uint64_t v60 = v20;
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)v53 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100431F80(&qword_100A48978);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v26);
  uint64_t v28 = (char *)v53 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100431F80(&qword_100A489B8);
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v56 = v29;
  uint64_t v57 = v30;
  __chkstk_darwin(v29, v31);
  uint64_t v33 = (char *)v53 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100431F80(&qword_100A489C0);
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v62 = v34;
  uint64_t v63 = v35;
  __chkstk_darwin(v34, v36);
  uint64_t v58 = (char *)v53 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = *a1;
  sub_1004D10A4(&qword_100A48988, &qword_100A48978);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v25 + 8);
  v53[1] = v25 + 8;
  uint64_t v54 = v38;
  v38(v28, v24);
  uint64_t v75 = a2;
  uint64_t v76 = a3;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A489C8, &qword_100A489B8);
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v39 = v56;
  uint64_t v40 = v59;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v23, v40);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v39);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v41 = v61;
  sub_100725980();
  swift_release();
  v54(v28, v24);
  uint64_t v42 = v65;
  uint64_t v75 = v66;
  uint64_t v76 = v68;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A489B0, &qword_100A48980);
  sub_1004D10A4(&qword_100A48680, &qword_100A48670);
  sub_1005805CC();
  uint64_t v43 = v64;
  uint64_t v44 = v67;
  uint64_t v45 = v70;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v42, v45);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v41, v44);
  uint64_t v46 = sub_100431F80(&qword_100A489D0);
  uint64_t v47 = v74;
  v74[3] = v46;
  v47[4] = sub_100582C70();
  sub_10044D5C4(v47);
  sub_1004D10A4(&qword_100A489F0, &qword_100A489C0);
  sub_1004D10A4(&qword_100A489F8, &qword_100A48990);
  uint64_t v48 = v58;
  uint64_t v49 = v43;
  uint64_t v50 = v62;
  uint64_t v51 = v72;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v49, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v48, v50);
}

uint64_t sub_100547A88(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v5 = sub_100431F80(&qword_100A48540);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48548);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A47EE0);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a3, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
  sub_10057998C((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_1007261B0();
  uint64_t v16 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (!v3)
  {
    *uint64_t v19 = v16;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100547CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100431F80(&qword_100A47EE0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  v21[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
  sub_100725D70();
  v21[0] = _swiftEmptyArrayStorage;
  uint64_t v17 = v21;
  uint64_t v18 = v11;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v3) + 0xE8))(a3, sub_100583848, v16);
  uint64_t v12 = v21[0];
  if (v21[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100726BA0();
    uint64_t v13 = result;
    if (!result) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v21[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v13)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t v13 = sub_100726A10();
    goto LABEL_6;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v13 = *(void *)(v12 + 32);
    swift_retain();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100548054@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v4 = sub_100431F80(&qword_100A48670);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48978);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A48980);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A48988, &qword_100A48978);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_1007259F0();
  a3[3] = sub_100431F80(&qword_100A48990);
  a3[4] = sub_100582BD4();
  sub_10044D5C4(a3);
  sub_1004D10A4(&qword_100A489B0, &qword_100A48980);
  sub_1004D10A4(&qword_100A48680, &qword_100A48670);
  sub_1005805CC();
  uint64_t v19 = v23;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_10054839C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, void *a8@<X7>, uint64_t *a9@<X8>, unsigned __int8 a10, uint64_t a11)
{
  id v132 = a8;
  uint64_t v129 = a7;
  char v128 = a6;
  __n128 v115 = a5;
  uint64_t v119 = a4;
  uint64_t v166 = a3;
  uint64_t v158 = a2;
  uint64_t v152 = a9;
  uint64_t v142 = a11;
  int v134 = a10;
  uint64_t v143 = sub_1007259E0();
  uint64_t v139 = *(void *)(v143 - 8);
  __chkstk_darwin(v143, v12);
  uint64_t v138 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100431F80(&qword_100A48198);
  uint64_t v149 = *(void *)(v146 - 8);
  __chkstk_darwin(v146, v14);
  uint64_t v136 = (char *)&v106 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = sub_100431F80(&qword_100A484F8);
  uint64_t v145 = *(void *)(v140 - 8);
  __chkstk_darwin(v140, v16);
  uint64_t v133 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_100431F80(&qword_100A48508);
  uint64_t v148 = *(void *)(v147 - 8);
  __chkstk_darwin(v147, v18);
  unint64_t v135 = (char *)&v106 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = sub_100431F80(&qword_100A48200);
  uint64_t v144 = *(void *)(v141 - 8);
  __chkstk_darwin(v141, v20);
  uint64_t v160 = (char *)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_100431F80(&qword_100A48900);
  uint64_t v151 = *(void *)(v150 - 8);
  __chkstk_darwin(v150, v22);
  uint64_t v137 = (char *)&v106 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = sub_100431F80(&qword_100A48908);
  uint64_t v127 = *(void *)(v125 - 8);
  __chkstk_darwin(v125, v24);
  uint64_t v120 = (char *)&v106 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_100431F80(&qword_100A48228);
  uint64_t v123 = *(void *)(v122 - 8);
  __chkstk_darwin(v122, v26);
  uint64_t v118 = (char *)&v106 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100431F80(&qword_100A48A00);
  uint64_t v126 = *(void *)(v124 - 8);
  __chkstk_darwin(v124, v28);
  uint64_t v121 = (char *)&v106 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v165 = sub_100431F80(&qword_100A48060);
  id v170 = *(void **)(v165 - 8);
  __chkstk_darwin(v165, v30);
  uint64_t v32 = (char *)&v106 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100431F80(&qword_100A484F0);
  uint64_t v34 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v35);
  uint64_t v37 = (char *)&v106 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100431F80(&qword_100A48890);
  uint64_t v164 = *(void *)(v110 - 8);
  __chkstk_darwin(v110, v38);
  uint64_t v40 = (char *)&v106 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = sub_100431F80(&qword_100A48898);
  uint64_t v167 = *(void *)(v112 - 8);
  uint64_t v42 = __chkstk_darwin(v112, v41);
  unint64_t v111 = (char *)&v106 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42, v44);
  unint64_t v109 = (char *)&v106 - v45;
  uint64_t v113 = sub_100431F80(&qword_100A488A0);
  uint64_t v114 = *(void *)(v113 - 8);
  __chkstk_darwin(v113, v46);
  uint64_t v156 = (char *)&v106 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100431F80(&qword_100A488F0);
  uint64_t v117 = *(void *)(v116 - 8);
  __chkstk_darwin(v116, v48);
  unint64_t v157 = (char *)&v106 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100431F80(&qword_100A48A08);
  uint64_t v131 = *(void *)(v130 - 8);
  __chkstk_darwin(v130, v50);
  unint64_t v159 = (char *)&v106 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = *a1;
  uint64_t v168 = sub_1004D10A4(&qword_100A48500, &qword_100A484F0);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v162 = v33;
  sub_100725980();
  swift_release();
  uint64_t v169 = *(void (**)(char *, uint64_t))(v34 + 8);
  uint64_t v163 = v34 + 8;
  v169(v37, v33);
  id v171 = v158;
  id v172 = v166;
  sub_1007259F0();
  uint64_t v158 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  uint64_t v52 = sub_1004D10A4(&qword_100A488A8, &qword_100A48890);
  uint64_t v166 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  uint64_t v154 = sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v53 = v110;
  uint64_t v54 = v165;
  uint64_t v108 = v52;
  sub_100725970();
  uint64_t v55 = (void (*)(char *, uint64_t))v170[1];
  ++v170;
  uint64_t v155 = v55;
  uint64_t v56 = v32;
  v55(v32, v54);
  uint64_t v58 = v164 + 8;
  uint64_t v57 = *(void (**)(char *, uint64_t))(v164 + 8);
  uint64_t v59 = v40;
  v57(v40, v53);
  unsigned __int8 v107 = v57;
  uint64_t v164 = v58;
  uint64_t v153 = v37;
  uint64_t v60 = v162;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v169(v37, v60);
  id v171 = v119;
  id v172 = v115;
  sub_1007259F0();
  uint64_t v61 = v111;
  uint64_t v106 = v56;
  uint64_t v62 = v165;
  sub_100725970();
  v155(v56, v62);
  uint64_t v63 = v59;
  v57(v59, v53);
  sub_1004D10A4(&qword_100A488B0, &qword_100A48898);
  uint64_t v64 = v109;
  uint64_t v65 = v112;
  sub_1007259C0();
  uint64_t v66 = *(void (**)(char *, uint64_t))(v167 + 8);
  v167 += 8;
  v66(v61, v65);
  v66(v64, v65);
  uint64_t v67 = v153;
  uint64_t v68 = v162;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v169(v67, v68);
  id v171 = v128;
  id v172 = v129;
  uint64_t v69 = v106;
  sub_1007259F0();
  uint64_t v70 = v64;
  uint64_t v71 = v165;
  sub_100725970();
  v155(v69, v71);
  v107(v63, v53);
  id v170 = &protocol conformance descriptor for PredicateExpressions.Conjunction<A, B>;
  sub_1004D10A4(&qword_100A488E0, &qword_100A488A0);
  uint64_t v72 = v156;
  uint64_t v73 = v113;
  sub_1007259C0();
  v66(v70, v65);
  (*(void (**)(char *, uint64_t))(v114 + 8))(v72, v73);
  id v171 = v132;
  sub_100431F80(&qword_100A48240);
  uint64_t v74 = v118;
  sub_1007259F0();
  uint64_t v75 = v153;
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v76 = v120;
  sub_100725980();
  swift_release();
  v169(v75, v68);
  sub_1004D10A4(&qword_100A48250, &qword_100A48228);
  sub_1004D10A4(&qword_100A48920, &qword_100A48908);
  sub_1004D10A4(&qword_100A48260, &qword_100A48240);
  sub_1005805CC();
  uint64_t v77 = v121;
  char v78 = v76;
  uint64_t v79 = v122;
  uint64_t v80 = v125;
  sub_1007259A0();
  (*(void (**)(char *, uint64_t))(v127 + 8))(v78, v80);
  (*(void (**)(char *, uint64_t))(v123 + 8))(v74, v79);
  sub_1004D10A4(&qword_100A48928, &qword_100A488F0);
  sub_1004D10A4(&qword_100A48A10, &qword_100A48A00);
  uint64_t v81 = v157;
  uint64_t v82 = v116;
  uint64_t v83 = v124;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v126 + 8))(v77, v83);
  (*(void (**)(char *, uint64_t))(v117 + 8))(v81, v82);
  LOBYTE(v171) = v134;
  sub_1007259F0();
  uint64_t v84 = v162;
  sub_100725A00();
  swift_getKeyPath();
  id v85 = v133;
  sub_100725980();
  swift_release();
  v169(v75, v84);
  sub_100725CC0();
  unint64_t v86 = v136;
  sub_1007259F0();
  uint64_t v87 = v139;
  id v88 = v138;
  uint64_t v89 = v143;
  (*(void (**)(char *, void, uint64_t))(v139 + 104))(v138, enum case for PredicateExpressions.ComparisonOperator.greaterThan(_:), v143);
  sub_1004D10A4(&qword_100A48528, &qword_100A484F8);
  sub_1004D10A4(&qword_100A481E8, &qword_100A48198);
  sub_10057998C((unint64_t *)&unk_100A480F0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v90 = v135;
  unint64_t v91 = v85;
  id v92 = v86;
  uint64_t v93 = v140;
  uint64_t v94 = v146;
  sub_1007259B0();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v89);
  (*(void (**)(char *, uint64_t))(v149 + 8))(v92, v94);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v91, v93);
  sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  sub_1004D10A4(&qword_100A488E8, &qword_100A48508);
  id v95 = v137;
  uint64_t v96 = v160;
  uint64_t v97 = v141;
  uint64_t v98 = v147;
  sub_1007259D0();
  (*(void (**)(char *, uint64_t))(v148 + 8))(v90, v98);
  (*(void (**)(char *, uint64_t))(v144 + 8))(v96, v97);
  uint64_t v99 = sub_100431F80(&qword_100A48A18);
  unsigned __int8 v100 = v152;
  v152[3] = v99;
  v100[4] = sub_100582DA8();
  sub_10044D5C4(v100);
  sub_1004D10A4(&qword_100A48A38, &qword_100A48A08);
  sub_1004D10A4(&qword_100A48970, &qword_100A48900);
  unsigned __int8 v101 = v159;
  id v102 = v95;
  uint64_t v103 = v130;
  uint64_t v104 = v150;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v151 + 8))(v102, v104);
  return (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v101, v103);
}

uint64_t sub_1005497A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, uint64_t a10)
{
  uint64_t v32 = a8;
  uint64_t v31 = a7;
  uint64_t v33 = a10;
  uint64_t v29 = sub_100431F80(&qword_100A47ED8);
  uint64_t v28 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100725CC0();
  uint64_t v30 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v20);
  uint64_t v22 = (char *)&v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100725CB0();
  uint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v42 = a6;
  uint64_t v43 = v31;
  uint64_t v44 = v32;
  char v45 = a9;
  uint64_t v46 = v22;
  v47[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  sub_100725D70();
  v47[0] = _swiftEmptyArrayStorage;
  uint64_t v35 = v47;
  uint64_t v36 = v19;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v10) + 0xE8))(v33, sub_100583860, v34);
  uint64_t v23 = v47[0];
  if (v47[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100726BA0();
    uint64_t v24 = result;
    if (!result) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v24 = *(void *)((v47[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v24)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v19, v29);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v22, v27);
      swift_bridgeObjectRelease();
      return v24;
    }
  }
  if ((v23 & 0xC000000000000001) != 0)
  {
    uint64_t v24 = sub_100726A10();
    goto LABEL_6;
  }
  if (*(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v24 = *(void *)(v23 + 32);
    swift_retain();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_100549C74@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t a7@<X6>, void *a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12)
{
  uint64_t v141 = a8;
  uint64_t v137 = a7;
  uint64_t v136 = a6;
  uint64_t v123 = a5;
  uint64_t v127 = a4;
  id v178 = a3;
  id v172 = a2;
  uint64_t v161 = a9;
  uint64_t v151 = a12;
  int v145 = a11;
  uint64_t v140 = a10;
  uint64_t v152 = sub_1007259E0();
  uint64_t v148 = *(void *)(v152 - 8);
  __chkstk_darwin(v152, v13);
  uint64_t v147 = (char *)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_100431F80(&qword_100A48198);
  uint64_t v158 = *(void *)(v155 - 8);
  __chkstk_darwin(v155, v15);
  uint64_t v144 = (char *)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_100431F80(&qword_100A484F8);
  uint64_t v154 = *(void *)(v149 - 8);
  __chkstk_darwin(v149, v17);
  uint64_t v142 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_100431F80(&qword_100A48508);
  uint64_t v157 = *(void *)(v156 - 8);
  __chkstk_darwin(v156, v19);
  uint64_t v143 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_100431F80(&qword_100A48200);
  uint64_t v153 = *(void *)(v150 - 8);
  __chkstk_darwin(v150, v21);
  uint64_t v174 = (char *)&v117 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_100431F80(&qword_100A48900);
  uint64_t v160 = *(void *)(v159 - 8);
  __chkstk_darwin(v159, v23);
  uint64_t v146 = (char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v134 = sub_100431F80(&qword_100A48670);
  uint64_t v135 = *(void *)(v134 - 8);
  __chkstk_darwin(v134, v25);
  uint64_t v129 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100431F80(&qword_100A48908);
  uint64_t v131 = *(void *)(v130 - 8);
  __chkstk_darwin(v130, v27);
  uint64_t v126 = (char *)&v117 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_100431F80(&qword_100A48910);
  uint64_t v133 = *(void *)(v132 - 8);
  __chkstk_darwin(v132, v29);
  char v128 = (char *)&v117 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_100431F80(&qword_100A48060);
  id v181 = *(void **)(v168 - 8);
  __chkstk_darwin(v168, v31);
  uint64_t v33 = (char *)&v117 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100431F80(&qword_100A484F0);
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v36);
  uint64_t v38 = (char *)&v117 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_100431F80(&qword_100A48890);
  uint64_t v176 = *(void *)(v167 - 8);
  __chkstk_darwin(v167, v39);
  uint64_t v41 = (char *)&v117 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_100431F80(&qword_100A48898);
  uint64_t v177 = *(void *)(v120 - 8);
  uint64_t v43 = __chkstk_darwin(v120, v42);
  uint64_t v119 = (char *)&v117 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43, v45);
  uint64_t v169 = (char *)&v117 - v46;
  uint64_t v121 = sub_100431F80(&qword_100A488A0);
  uint64_t v122 = *(void *)(v121 - 8);
  __chkstk_darwin(v121, v47);
  id v170 = (char *)&v117 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_100431F80(&qword_100A488F0);
  uint64_t v125 = *(void *)(v124 - 8);
  __chkstk_darwin(v124, v49);
  id v171 = (char *)&v117 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_100431F80(&qword_100A48918);
  uint64_t v139 = *(void *)(v138 - 8);
  __chkstk_darwin(v138, v51);
  id v173 = (char *)&v117 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = *a1;
  uint64_t v179 = sub_1004D10A4(&qword_100A48500, &qword_100A484F0);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v53 = *(void (**)(char *, uint64_t))(v35 + 8);
  uint64_t v175 = v35 + 8;
  uint64_t v117 = v53;
  v53(v38, v34);
  uint64_t v182 = v172;
  uint64_t v183 = (uint64_t)v178;
  uint64_t v54 = v33;
  sub_1007259F0();
  id v172 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  uint64_t v164 = sub_1004D10A4(&qword_100A488A8, &qword_100A48890);
  id v178 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  uint64_t v166 = sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v55 = v168;
  uint64_t v56 = v41;
  uint64_t v57 = v167;
  sub_100725970();
  uint64_t v58 = (void (*)(char *, uint64_t))v181[1];
  ++v181;
  uint64_t v165 = v58;
  uint64_t v59 = v55;
  v58(v33, v55);
  uint64_t v60 = v176 + 8;
  uint64_t v61 = *(void (**)(char *, uint64_t))(v176 + 8);
  uint64_t v62 = v57;
  v61(v56, v57);
  uint64_t v118 = v61;
  uint64_t v176 = v60;
  uint64_t v162 = v38;
  uint64_t v63 = v34;
  uint64_t v163 = v34;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v64 = v117;
  v117(v38, v63);
  uint64_t v182 = v127;
  uint64_t v183 = v123;
  uint64_t v65 = v54;
  sub_1007259F0();
  uint64_t v66 = v119;
  uint64_t v67 = v56;
  uint64_t v68 = v62;
  sub_100725970();
  uint64_t v69 = v65;
  v165(v65, v59);
  v61(v56, v68);
  uint64_t v127 = &protocol conformance descriptor for PredicateExpressions.Equal<A, B>;
  uint64_t v123 = sub_1004D10A4(&qword_100A488B0, &qword_100A48898);
  uint64_t v70 = v169;
  uint64_t v71 = v120;
  sub_1007259C0();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v177 + 8);
  v177 += 8;
  v72(v66, v71);
  v72(v70, v71);
  uint64_t v73 = v162;
  uint64_t v74 = v163;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v64(v73, v74);
  uint64_t v75 = v64;
  uint64_t v182 = v136;
  uint64_t v183 = v137;
  sub_1007259F0();
  uint64_t v76 = v70;
  uint64_t v78 = v167;
  uint64_t v77 = v168;
  sub_100725970();
  v165(v69, v77);
  v118(v67, v78);
  id v181 = &protocol conformance descriptor for PredicateExpressions.Conjunction<A, B>;
  sub_1004D10A4(&qword_100A488E0, &qword_100A488A0);
  uint64_t v79 = v170;
  uint64_t v80 = v121;
  sub_1007259C0();
  v72(v76, v71);
  (*(void (**)(char *, uint64_t))(v122 + 8))(v79, v80);
  uint64_t v81 = v162;
  uint64_t v82 = v163;
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v83 = v126;
  sub_100725980();
  swift_release();
  uint64_t v84 = v82;
  uint64_t v85 = v82;
  unint64_t v86 = v75;
  v75(v81, v84);
  uint64_t v182 = v141;
  uint64_t v183 = v140;
  uint64_t v87 = v129;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48920, &qword_100A48908);
  sub_1004D10A4(&qword_100A48680, &qword_100A48670);
  sub_1005805CC();
  id v88 = v128;
  uint64_t v89 = v83;
  uint64_t v90 = v87;
  uint64_t v91 = v130;
  uint64_t v92 = v134;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v135 + 8))(v90, v92);
  (*(void (**)(char *, uint64_t))(v131 + 8))(v89, v91);
  sub_1004D10A4(&qword_100A48928, &qword_100A488F0);
  sub_1004D10A4(&qword_100A48930, &qword_100A48910);
  uint64_t v93 = v171;
  uint64_t v94 = v124;
  uint64_t v95 = v132;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v133 + 8))(v88, v95);
  (*(void (**)(char *, uint64_t))(v125 + 8))(v93, v94);
  LOBYTE(v182) = v145;
  sub_1007259F0();
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v96 = v142;
  sub_100725980();
  swift_release();
  v86(v81, v85);
  sub_100725CC0();
  uint64_t v97 = v144;
  sub_1007259F0();
  uint64_t v98 = v148;
  uint64_t v99 = v147;
  uint64_t v100 = v152;
  (*(void (**)(char *, void, uint64_t))(v148 + 104))(v147, enum case for PredicateExpressions.ComparisonOperator.greaterThan(_:), v152);
  sub_1004D10A4(&qword_100A48528, &qword_100A484F8);
  sub_1004D10A4(&qword_100A481E8, &qword_100A48198);
  sub_10057998C((unint64_t *)&unk_100A480F0, (void (*)(uint64_t))&type metadata accessor for Date);
  unsigned __int8 v101 = v143;
  id v102 = v96;
  uint64_t v103 = v97;
  uint64_t v104 = v149;
  uint64_t v105 = v155;
  sub_1007259B0();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v99, v100);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v103, v105);
  (*(void (**)(char *, uint64_t))(v154 + 8))(v102, v104);
  sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  sub_1004D10A4(&qword_100A488E8, &qword_100A48508);
  uint64_t v106 = v146;
  unsigned __int8 v107 = v174;
  uint64_t v108 = v150;
  uint64_t v109 = v156;
  sub_1007259D0();
  (*(void (**)(char *, uint64_t))(v157 + 8))(v101, v109);
  (*(void (**)(char *, uint64_t))(v153 + 8))(v107, v108);
  uint64_t v110 = sub_100431F80(&qword_100A48938);
  unint64_t v111 = v161;
  v161[3] = v110;
  v111[4] = sub_1005829A4();
  sub_10044D5C4(v111);
  sub_1004D10A4(&qword_100A48968, &qword_100A48918);
  sub_1004D10A4(&qword_100A48970, &qword_100A48900);
  uint64_t v112 = v173;
  uint64_t v113 = v106;
  uint64_t v114 = v138;
  uint64_t v115 = v159;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v160 + 8))(v113, v115);
  return (*(uint64_t (**)(char *, uint64_t))(v139 + 8))(v112, v114);
}

uint64_t sub_10054B044(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v5 = sub_100431F80(&qword_100A48478);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80((uint64_t *)&unk_100A48480);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A47ED8);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a3, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  sub_10057998C(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_1007261B0();
  uint64_t v16 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (!v3)
  {
    *uint64_t v19 = v16;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10054B280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = sub_100431F80(&qword_100A47ED8);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v28 = a4;
  uint64_t v29 = a5;
  uint64_t v30 = a6;
  uint64_t v19 = &v22[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v31[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  sub_100725D70();
  v31[0] = _swiftEmptyArrayStorage;
  uint64_t v23 = v31;
  uint64_t v24 = v19;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v7) + 0xE8))(a7, sub_100583860, v22);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  return v31[0];
}

uint64_t sub_10054B5A0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v66 = a6;
  uint64_t v67 = a7;
  uint64_t v62 = a4;
  uint64_t v63 = a5;
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  uint64_t v68 = a8;
  uint64_t v9 = sub_100431F80(&qword_100A48060);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v77 = v9;
  uint64_t v78 = v10;
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A484F0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100431F80(&qword_100A48890);
  uint64_t v76 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)&v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100431F80(&qword_100A48898);
  uint64_t v79 = *(void *)(v61 - 8);
  uint64_t v24 = __chkstk_darwin(v61, v23);
  uint64_t v60 = (char *)&v53 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24, v26);
  uint64_t v59 = (char *)&v53 - v27;
  uint64_t v28 = sub_100431F80(&qword_100A488A0);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v64 = v28;
  uint64_t v65 = v29;
  __chkstk_darwin(v28, v30);
  uint64_t v75 = (char *)&v53 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = *a1;
  uint64_t v69 = sub_1004D10A4(&qword_100A48500, &qword_100A484F0);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v55 = v14;
  sub_100725980();
  swift_release();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v15 + 8);
  uint64_t v74 = v15 + 8;
  v72(v18, v14);
  uint64_t v80 = v70;
  uint64_t v81 = v71;
  uint64_t v32 = v13;
  sub_1007259F0();
  uint64_t v70 = sub_1004D10A4(&qword_100A488A8, &qword_100A48890);
  uint64_t v71 = sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v33 = v19;
  uint64_t v34 = v77;
  sub_100725970();
  uint64_t v36 = v78 + 8;
  uint64_t v35 = *(void (**)(char *, uint64_t))(v78 + 8);
  v35(v13, v34);
  uint64_t v58 = v35;
  uint64_t v78 = v36;
  uint64_t v54 = *(void (**)(char *, uint64_t))(v76 + 8);
  v76 += 8;
  v54(v22, v33);
  uint64_t v37 = v55;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v72(v18, v37);
  uint64_t v80 = v62;
  uint64_t v81 = v63;
  uint64_t v38 = v32;
  sub_1007259F0();
  uint64_t v39 = v60;
  uint64_t v56 = v32;
  uint64_t v57 = v33;
  uint64_t v40 = v77;
  sub_100725970();
  v35(v38, v40);
  uint64_t v41 = v54;
  v54(v22, v33);
  uint64_t v63 = sub_1004D10A4(&qword_100A488B0, &qword_100A48898);
  uint64_t v42 = v59;
  uint64_t v43 = v61;
  sub_1007259C0();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v79 + 8);
  v79 += 8;
  v44(v39, v43);
  v44(v42, v43);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v72(v18, v37);
  uint64_t v80 = v66;
  uint64_t v81 = v67;
  uint64_t v45 = v56;
  sub_1007259F0();
  uint64_t v46 = v57;
  uint64_t v47 = v77;
  sub_100725970();
  v58(v45, v47);
  v41(v22, v46);
  uint64_t v48 = sub_100431F80(&qword_100A488F0);
  uint64_t v49 = v68;
  v68[3] = v48;
  v49[4] = sub_1005828F4();
  sub_10044D5C4(v49);
  sub_1004D10A4(&qword_100A488E0, &qword_100A488A0);
  uint64_t v50 = v75;
  uint64_t v51 = v64;
  sub_1007259C0();
  v44(v42, v43);
  return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v50, v51);
}

uint64_t sub_10054BD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_100431F80(&qword_100A47ED8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  v25[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  sub_100725D70();
  v25[0] = _swiftEmptyArrayStorage;
  uint64_t v19 = v25;
  uint64_t v20 = v15;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v5) + 0xE8))(a5, sub_100583860, v18);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v25[0];
}

uint64_t sub_10054C068@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v47 = a6;
  uint64_t v50 = a4;
  uint64_t v51 = a5;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  uint64_t v52 = a7;
  uint64_t v53 = sub_100431F80(&qword_100A48060);
  uint64_t v55 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100431F80(&qword_100A484F0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100431F80(&qword_100A48890);
  uint64_t v54 = *(void *)(v16 - 8);
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100431F80(&qword_100A48898);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v48 = v20;
  uint64_t v49 = v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v46 = (char *)&v40 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23, v25);
  uint64_t v42 = *a1;
  uint64_t v43 = (char *)&v40 - v26;
  sub_1004D10A4(&qword_100A48500, &qword_100A484F0);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v40 = v12 + 8;
  uint64_t v41 = v27;
  v27(v15, v11);
  uint64_t v56 = v44;
  uint64_t v57 = v45;
  sub_1007259F0();
  uint64_t v45 = sub_1004D10A4(&qword_100A488A8, &qword_100A48890);
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v28 = v16;
  uint64_t v29 = v53;
  sub_100725970();
  uint64_t v30 = *(void (**)(char *, uint64_t))(v55 + 8);
  v55 += 8;
  v30(v10, v29);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v54 + 8);
  v54 += 8;
  v31(v19, v28);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v41(v15, v11);
  uint64_t v56 = v50;
  uint64_t v57 = v51;
  sub_1007259F0();
  uint64_t v32 = v46;
  uint64_t v33 = v53;
  sub_100725970();
  v30(v10, v33);
  v31(v19, v28);
  uint64_t v34 = sub_100431F80(&qword_100A488A0);
  uint64_t v35 = v52;
  v52[3] = v34;
  v35[4] = sub_100580D5C(&qword_100A488C8, &qword_100A488A0, (void (*)(void))sub_100582838);
  sub_10044D5C4(v35);
  sub_1004D10A4(&qword_100A488B0, &qword_100A48898);
  uint64_t v36 = v43;
  uint64_t v37 = v48;
  sub_1007259C0();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v49 + 8);
  v38(v32, v37);
  return ((uint64_t (*)(char *, uint64_t))v38)(v36, v37);
}

uint64_t sub_10054C604(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100431F80(&qword_100A47ED8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = a1;
  uint64_t v18 = a2;
  v19[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  sub_100725D70();
  v19[0] = _swiftEmptyArrayStorage;
  uint64_t v15 = v19;
  uint64_t v16 = v11;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v3) + 0xE8))(a3, sub_100583860, v14);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  return v19[0];
}

uint64_t sub_10054C900(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_100431F80(&qword_100A47ED8);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100725CC0();
  uint64_t v23 = *(void *)(v16 - 8);
  uint64_t v24 = v16;
  __chkstk_darwin(v16, v17);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100725CB0();
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v32 = v19;
  v33[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  sub_100725D70();
  v33[0] = _swiftEmptyArrayStorage;
  uint64_t v26 = v33;
  uint64_t v27 = v15;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v5) + 0xE8))(a5, sub_100583860, v25);
  uint64_t v20 = v33[0];
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v24);
  return v20;
}

uint64_t sub_10054CC98@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v83 = a6;
  uint64_t v73 = a5;
  uint64_t v72 = a4;
  uint64_t v68 = a3;
  uint64_t v71 = a2;
  uint64_t v89 = a7;
  uint64_t v82 = sub_1007259E0();
  uint64_t v80 = *(void *)(v82 - 8);
  __chkstk_darwin(v82, v8);
  uint64_t v79 = (char *)v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A48198);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v85 = v10;
  uint64_t v86 = v11;
  __chkstk_darwin(v10, v12);
  uint64_t v77 = (char *)v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_100431F80(&qword_100A484F8);
  uint64_t v84 = *(void *)(v81 - 8);
  __chkstk_darwin(v81, v14);
  uint64_t v74 = (char *)v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100431F80(&qword_100A48508);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v87 = v16;
  uint64_t v88 = v17;
  __chkstk_darwin(v16, v18);
  uint64_t v78 = (char *)v65 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100431F80(&qword_100A48060);
  uint64_t v95 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100431F80(&qword_100A484F0);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v26);
  uint64_t v28 = (char *)v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100431F80(&qword_100A48890);
  uint64_t v94 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v30);
  uint64_t v32 = (char *)v65 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_100431F80(&qword_100A48898);
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v34 = __chkstk_darwin(v69, v33);
  uint64_t v67 = (char *)v65 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34, v36);
  uint64_t v66 = (char *)v65 - v37;
  uint64_t v75 = sub_100431F80(&qword_100A488A0);
  uint64_t v76 = *(void *)(v75 - 8);
  __chkstk_darwin(v75, v38);
  uint64_t v92 = *a1;
  uint64_t v93 = (char *)v65 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A48500, &qword_100A484F0);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v90 = v25 + 8;
  uint64_t v91 = v40;
  v40(v28, v24);
  uint64_t v96 = v71;
  uint64_t v97 = v68;
  uint64_t v41 = v23;
  sub_1007259F0();
  uint64_t v71 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  void v65[2] = sub_1004D10A4(&qword_100A488A8, &qword_100A48890);
  uint64_t v68 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  v65[1] = sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  v65[0] = v20;
  sub_100725970();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v95 + 8);
  v95 += 8;
  v42(v23, v20);
  uint64_t v43 = *(void (**)(char *, uint64_t))(v94 + 8);
  v94 += 8;
  uint64_t v44 = v29;
  v43(v32, v29);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v91(v28, v24);
  uint64_t v96 = v72;
  uint64_t v97 = v73;
  sub_1007259F0();
  uint64_t v45 = v67;
  uint64_t v46 = v65[0];
  sub_100725970();
  v42(v41, v46);
  v43(v32, v44);
  sub_1004D10A4(&qword_100A488B0, &qword_100A48898);
  uint64_t v47 = v66;
  uint64_t v48 = v69;
  sub_1007259C0();
  uint64_t v49 = *(void (**)(char *, uint64_t))(v70 + 8);
  v49(v45, v48);
  v49(v47, v48);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v50 = v74;
  sub_100725980();
  swift_release();
  v91(v28, v24);
  sub_100725CC0();
  uint64_t v51 = v77;
  sub_1007259F0();
  uint64_t v53 = v79;
  uint64_t v52 = v80;
  uint64_t v54 = v82;
  (*(void (**)(char *, void, uint64_t))(v80 + 104))(v79, enum case for PredicateExpressions.ComparisonOperator.greaterThan(_:), v82);
  sub_1004D10A4(&qword_100A48528, &qword_100A484F8);
  sub_1004D10A4(&qword_100A481E8, &qword_100A48198);
  sub_10057998C((unint64_t *)&unk_100A480F0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v55 = v78;
  uint64_t v56 = v51;
  uint64_t v57 = v81;
  uint64_t v58 = v85;
  sub_1007259B0();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v56, v58);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v50, v57);
  uint64_t v59 = sub_100431F80(&qword_100A488B8);
  uint64_t v60 = v89;
  v89[3] = v59;
  void v60[4] = sub_100582788();
  sub_10044D5C4(v60);
  sub_1004D10A4(&qword_100A488E0, &qword_100A488A0);
  sub_1004D10A4(&qword_100A488E8, &qword_100A48508);
  uint64_t v61 = v93;
  uint64_t v62 = v75;
  uint64_t v63 = v87;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v55, v63);
  return (*(uint64_t (**)(char *, uint64_t))(v76 + 8))(v61, v62);
}

uint64_t sub_10054D770(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A48478);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100431F80((uint64_t *)&unk_100A48480);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A47ED8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  sub_10057998C(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_1007261B0();
  uint64_t v14 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (!v2)
  {
    *a2 = v14;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10054D96C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A48048);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100431F80((uint64_t *)&unk_100A48050);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A47F30);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0);
  sub_10057998C(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_1007261B0();
  uint64_t v14 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (!v2)
  {
    *a2 = v14;
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10054DB68(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, void **a6)
{
  id v10 = [a5 prefixedURI];
  uint64_t v11 = sub_100726430();
  uint64_t v13 = v12;

  uint64_t v14 = sub_1005444B8(a3, a4, v11, v13, a1);
  swift_bridgeObjectRelease();
  if (v14)
  {
    swift_retain();
    uint64_t v15 = sub_100488F34();
    unint64_t v17 = v16;
    swift_release();
  }
  else
  {
    uint64_t v15 = 0;
    unint64_t v17 = 0xF000000000000000;
  }
  type metadata accessor for ArchiveHelper();
  uint64_t v18 = sub_100462C50(0, &qword_100A480B8);
  uint64_t v19 = sub_10044CCC4(v18, v15, v17);
  swift_release();
  sub_10044CE88(v15, v17);
  uint64_t v20 = *a6;
  *a6 = (void *)v19;
}

uint64_t sub_10054DD7C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = sub_100431F80(&qword_100A47EE8);
  uint64_t v11 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v12);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [a3 prefixedURI];
  uint64_t v16 = sub_100726430();
  uint64_t v18 = v17;

  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v27 = v16;
  uint64_t v28 = v18;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v32 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(0);
  sub_100725D70();
  swift_bridgeObjectRelease();
  long long v31 = xmmword_100795A50;
  uint64_t v23 = v14;
  uint64_t v24 = &v31;
  (*(void (**)(void, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v5) + 0xE8))(0, sub_10057C35C, v22);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v21);
  return v31;
}

uint64_t sub_10054E090@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v84 = a6;
  uint64_t v85 = a7;
  uint64_t v77 = a5;
  uint64_t v76 = a4;
  uint64_t v72 = a3;
  uint64_t v75 = a2;
  uint64_t v91 = a8;
  uint64_t v9 = sub_100431F80(&qword_100A48670);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v87 = v9;
  uint64_t v88 = v10;
  __chkstk_darwin(v9, v11);
  uint64_t v82 = (char *)v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100431F80(&qword_100A48838);
  uint64_t v86 = *(void *)(v83 - 8);
  __chkstk_darwin(v83, v13);
  uint64_t v80 = (char *)v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A48840);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v89 = v15;
  uint64_t v90 = v16;
  __chkstk_darwin(v15, v17);
  uint64_t v81 = (char *)v68 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100431F80(&qword_100A48060);
  uint64_t v96 = *(void *)(v19 - 8);
  __chkstk_darwin(v19, v20);
  uint64_t v22 = (char *)v68 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100431F80(&qword_100A487C0);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)v68 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100431F80(&qword_100A487C8);
  uint64_t v95 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v29);
  long long v31 = (char *)v68 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100431F80(&qword_100A487D0);
  uint64_t v74 = *(void *)(v73 - 8);
  uint64_t v33 = __chkstk_darwin(v73, v32);
  uint64_t v70 = (char *)v68 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33, v35);
  uint64_t v69 = (char *)v68 - v36;
  uint64_t v37 = sub_100431F80(&qword_100A48848);
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v78 = v37;
  uint64_t v79 = v38;
  __chkstk_darwin(v37, v39);
  uint64_t v71 = (char *)v68 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = *a1;
  sub_1004D10A4(&qword_100A487D8, &qword_100A487C0);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v41 = *(void (**)(char *, uint64_t))(v24 + 8);
  uint64_t v92 = v24 + 8;
  uint64_t v93 = v41;
  v41(v27, v23);
  uint64_t v97 = v75;
  uint64_t v98 = v72;
  uint64_t v42 = v22;
  sub_1007259F0();
  uint64_t v75 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  v68[2] = sub_1004D10A4(&qword_100A487E0, &qword_100A487C8);
  uint64_t v72 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  v68[1] = sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  v68[0] = v28;
  uint64_t v43 = v19;
  sub_100725970();
  uint64_t v44 = *(void (**)(char *, uint64_t))(v96 + 8);
  v96 += 8;
  uint64_t v45 = v42;
  uint64_t v46 = v42;
  uint64_t v47 = v43;
  v44(v45, v43);
  uint64_t v48 = *(void (**)(char *, uint64_t))(v95 + 8);
  v95 += 8;
  v48(v31, v28);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v93(v27, v23);
  uint64_t v97 = v76;
  uint64_t v98 = v77;
  uint64_t v49 = v46;
  sub_1007259F0();
  uint64_t v50 = v70;
  uint64_t v51 = v68[0];
  sub_100725970();
  v44(v49, v47);
  v48(v31, v51);
  sub_1004D10A4(&qword_100A48828, &qword_100A487D0);
  uint64_t v52 = v71;
  uint64_t v53 = v69;
  uint64_t v54 = v50;
  uint64_t v55 = v73;
  sub_1007259C0();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v74 + 8);
  v56(v54, v55);
  v56(v53, v55);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v57 = v80;
  sub_100725980();
  swift_release();
  v93(v27, v23);
  uint64_t v97 = v84;
  uint64_t v98 = v85;
  uint64_t v58 = v82;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48850, &qword_100A48838);
  sub_1004D10A4(&qword_100A48680, &qword_100A48670);
  sub_1005805CC();
  uint64_t v59 = v81;
  uint64_t v60 = v58;
  uint64_t v61 = v83;
  uint64_t v62 = v87;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v60, v62);
  (*(void (**)(char *, uint64_t))(v86 + 8))(v57, v61);
  uint64_t v63 = sub_100431F80(&qword_100A48858);
  uint64_t v64 = v91;
  v91[3] = v63;
  v64[4] = sub_10058263C();
  sub_10044D5C4(v64);
  sub_1004D10A4(&qword_100A48880, &qword_100A48848);
  sub_1004D10A4(&qword_100A48888, &qword_100A48840);
  uint64_t v65 = v78;
  uint64_t v66 = v89;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v90 + 8))(v59, v66);
  return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v52, v65);
}

uint64_t sub_10054EA64(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v26 = a3;
  uint64_t v5 = sub_100431F80(&qword_100A48798);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80((uint64_t *)&unk_100A487A0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A47EE8);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a2, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(0);
  sub_10057998C(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_1007261B0();
  unint64_t v16 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (!v3)
  {
    uint64_t v18 = v26;
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_100726BA0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      if ((v16 & 0xC000000000000001) != 0)
      {
        sub_100726A10();
      }
      else
      {
        if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        swift_retain();
      }
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v19 = sub_10048FBE4();
      unint64_t v21 = v20;
      swift_release_n();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = 0;
    unint64_t v21 = 0xF000000000000000;
LABEL_10:
    uint64_t v23 = *v18;
    unint64_t v24 = v18[1];
    *uint64_t v18 = v19;
    v18[1] = v21;
    return sub_10044CE88(v23, v24);
  }
  return result;
}

void *sub_10054EE68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100431F80(&qword_100A47EE8);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = _swiftEmptyArrayStorage;
  uint64_t v19 = a2;
  uint64_t v20 = a3;
  uint64_t v21 = a1;
  v22[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(0);
  sub_100725D70();
  v22[0] = _swiftEmptyArrayStorage;
  unint64_t v16 = v22;
  uint64_t v17 = v11;
  uint64_t v18 = &v23;
  (*(void (**)(void, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v3) + 0xE8))(0, sub_10057C384, v15);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  uint64_t v12 = v23;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_10054F188@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v68 = a4;
  uint64_t v53 = a3;
  uint64_t v58 = a2;
  uint64_t v74 = a5;
  uint64_t v67 = sub_1007259E0();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67, v6);
  uint64_t v64 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100431F80(&qword_100A48198);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  uint64_t v71 = v9;
  __chkstk_darwin(v8, v10);
  uint64_t v61 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100431F80(&qword_100A487B0);
  uint64_t v69 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v12);
  uint64_t v59 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A487B8);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v72 = v14;
  uint64_t v73 = v15;
  __chkstk_darwin(v14, v16);
  uint64_t v62 = (char *)v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100431F80(&qword_100A48060);
  uint64_t v56 = *(void *)(v55 - 8);
  __chkstk_darwin(v55, v18);
  uint64_t v20 = (char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100431F80(&qword_100A487C0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100431F80(&qword_100A487C8);
  uint64_t v26 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v27);
  uint64_t v29 = (char *)v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100431F80(&qword_100A487D0);
  uint64_t v63 = *(void *)(v60 - 8);
  __chkstk_darwin(v60, v30);
  uint64_t v57 = (char *)v52 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52[2] = *a1;
  sub_1004D10A4(&qword_100A487D8, &qword_100A487C0);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v32 = v22 + 8;
  uint64_t v33 = *(void (**)(char *, uint64_t))(v22 + 8);
  v52[1] = v32;
  v33(v25, v21);
  uint64_t v75 = v58;
  uint64_t v76 = v53;
  sub_1007259F0();
  uint64_t v58 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  sub_1004D10A4(&qword_100A487E0, &qword_100A487C8);
  uint64_t v53 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v34 = v54;
  uint64_t v35 = v55;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v20, v35);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v34);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v36 = v59;
  sub_100725980();
  swift_release();
  v33(v25, v21);
  sub_100725CC0();
  uint64_t v37 = v61;
  sub_1007259F0();
  uint64_t v39 = v64;
  uint64_t v38 = v65;
  uint64_t v40 = v67;
  (*(void (**)(char *, void, uint64_t))(v65 + 104))(v64, enum case for PredicateExpressions.ComparisonOperator.greaterThan(_:), v67);
  sub_1004D10A4(&qword_100A487E8, &qword_100A487B0);
  sub_1004D10A4(&qword_100A481E8, &qword_100A48198);
  sub_10057998C((unint64_t *)&unk_100A480F0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v41 = v62;
  uint64_t v42 = v36;
  uint64_t v43 = v37;
  uint64_t v44 = v66;
  uint64_t v45 = v70;
  sub_1007259B0();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v40);
  (*(void (**)(char *, uint64_t))(v71 + 8))(v43, v45);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v44);
  uint64_t v46 = sub_100431F80(&qword_100A487F0);
  uint64_t v47 = v74;
  v74[3] = v46;
  v47[4] = sub_100582468();
  sub_10044D5C4(v47);
  sub_1004D10A4(&qword_100A48828, &qword_100A487D0);
  sub_1004D10A4(&qword_100A48830, &qword_100A487B8);
  uint64_t v48 = v57;
  uint64_t v49 = v60;
  uint64_t v50 = v72;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v48, v49);
}

uint64_t sub_10054F9F8(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  uint64_t v28 = a2;
  uint64_t v29 = a4;
  uint64_t v6 = sub_100431F80(&qword_100A48798);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80((uint64_t *)&unk_100A487A0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A47EE8);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, a3, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(0);
  sub_10057998C(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_1007261B0();
  uint64_t v17 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (!v4)
  {
    uint64_t v19 = v28;
    *uint64_t v28 = v17;
    swift_bridgeObjectRelease();
    unint64_t v20 = *v19;
    unint64_t v30 = (unint64_t)_swiftEmptyArrayStorage;
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t result = sub_100726BA0();
      uint64_t v21 = result;
      uint64_t v22 = v29;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain_n();
      uint64_t v22 = v29;
      if (v21)
      {
LABEL_4:
        if (v21 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v28 = 0;
        for (uint64_t i = 0; i != v21; ++i)
        {
          if ((v20 & 0xC000000000000001) != 0) {
            sub_100726A10();
          }
          else {
            swift_retain();
          }
          sub_10048F8E8();
          id v24 = objc_allocWithZone((Class)IDSURI);
          NSString v25 = sub_100726420();
          swift_bridgeObjectRelease();
          id v26 = [v24 initWithPrefixedURI:v25];
          swift_release();

          if (v26)
          {
            sub_100726550();
            if (*(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1007265A0();
            }
            sub_1007265C0();
            sub_100726590();
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v27 = (void *)v30;
        uint64_t v22 = v29;
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v27 = _swiftEmptyArrayStorage;
LABEL_17:
    swift_bridgeObjectRelease();
    *uint64_t v22 = v27;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10054FF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  uint64_t v21 = a3;
  v22[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  v22[0] = _swiftEmptyArrayStorage;
  uint64_t v17 = v22;
  uint64_t v18 = v13;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v4) + 0xE8))(a4, sub_10057C3B0, v16);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v22[0];
}

uint64_t sub_10055021C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v56 = a4;
  uint64_t v59 = a5;
  uint64_t v7 = sub_100431F80(&qword_100A48670);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  uint64_t v58 = v8;
  __chkstk_darwin(v7, v9);
  uint64_t v54 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100431F80(&qword_100A48678);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v60 = v11;
  uint64_t v61 = v12;
  __chkstk_darwin(v11, v13);
  uint64_t v53 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A48218);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100431F80(&qword_100A48220);
  uint64_t v62 = *(void *)(v50 - 8);
  __chkstk_darwin(v50, v20);
  uint64_t v22 = (char *)v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100431F80(&qword_100A48228);
  uint64_t v49 = *(void *)(v47 - 8);
  __chkstk_darwin(v47, v23);
  NSString v25 = (char *)v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100431F80(&qword_100A48230);
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v51 = v26;
  uint64_t v52 = v27;
  __chkstk_darwin(v26, v28);
  uint64_t v48 = (char *)v43 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = *a1;
  uint64_t v63 = a2;
  sub_100431F80(&qword_100A48240);
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  unint64_t v30 = *(void (**)(char *, uint64_t))(v16 + 8);
  v43[1] = v16 + 8;
  uint64_t v44 = v30;
  v30(v19, v15);
  uint64_t v46 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  sub_1004D10A4(&qword_100A48250, &qword_100A48228);
  v43[0] = sub_1004D10A4(&qword_100A48258, &qword_100A48220);
  sub_1004D10A4(&qword_100A48260, &qword_100A48240);
  sub_1005805CC();
  uint64_t v31 = v47;
  uint64_t v32 = v50;
  sub_1007259A0();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v62 + 8);
  v62 += 8;
  v33(v22, v32);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v25, v31);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v44(v19, v15);
  uint64_t v34 = v54;
  uint64_t v63 = v55;
  uint64_t v64 = v56;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48680, &qword_100A48670);
  uint64_t v35 = v53;
  uint64_t v36 = v57;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v34, v36);
  v33(v22, v32);
  uint64_t v37 = sub_100431F80(&qword_100A48788);
  uint64_t v38 = v59;
  v59[3] = v37;
  v38[4] = sub_1005823EC();
  sub_10044D5C4(v38);
  sub_1004D10A4(&qword_100A48280, &qword_100A48230);
  sub_1004D10A4(&qword_100A486B0, &qword_100A48678);
  uint64_t v39 = v48;
  uint64_t v40 = v51;
  uint64_t v41 = v60;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v35, v41);
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v39, v40);
}

uint64_t sub_1005508F8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v19 = a2;
  uint64_t v5 = sub_100431F80((uint64_t *)&unk_100A481F0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48308);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a3, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_1007261B0();
  uint64_t v16 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (!v3)
  {
    *uint64_t v19 = v16;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100550B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  v25[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  v25[0] = &_swiftEmptyArrayStorage;
  uint64_t v19 = v25;
  uint64_t v20 = v15;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v5) + 0xE8))(a5, sub_100583878, v18);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  return v25[0];
}

uint64_t sub_100550E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v16[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  v21[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  v21[0] = _swiftEmptyArrayStorage;
  uint64_t v17 = v21;
  uint64_t v18 = v11;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v3) + 0xE8))(a3, sub_100583878, v16);
  uint64_t v12 = v21[0];
  if (v21[0] >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100726BA0();
    uint64_t v13 = result;
    if (!result) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v21[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v13)
    {
LABEL_6:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    uint64_t v13 = sub_100726A10();
    goto LABEL_6;
  }
  if (*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v13 = *(void *)(v12 + 32);
    swift_retain();
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005511CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = &v20[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = a5;
  uint64_t v24 = a1;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  v28[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  v28[0] = _swiftEmptyArrayStorage;
  uint64_t v21 = v28;
  uint64_t v22 = v17;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v6) + 0xE8))(a6, sub_100583878, v20);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  return v28[0];
}

uint64_t sub_1005514E0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, void *a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v95 = a6;
  uint64_t v94 = a5;
  uint64_t v91 = a4;
  uint64_t v90 = a3;
  uint64_t v105 = a7;
  uint64_t v9 = sub_100431F80(&qword_100A48200);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v101 = v9;
  uint64_t v102 = v10;
  __chkstk_darwin(v9, v11);
  uint64_t v98 = (char *)&v75 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A48208);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v99 = v13;
  uint64_t v100 = v14;
  __chkstk_darwin(v13, v15);
  uint64_t v96 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100431F80(&qword_100A48210);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v103 = v17;
  uint64_t v104 = v18;
  __chkstk_darwin(v17, v19);
  uint64_t v97 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_100431F80(&qword_100A48060);
  uint64_t v117 = *(void *)(v111 - 8);
  __chkstk_darwin(v111, v21);
  uint64_t v110 = (char *)&v75 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100431F80(&qword_100A48310);
  uint64_t v115 = *(void *)(v86 - 8);
  __chkstk_darwin(v86, v23);
  uint64_t v83 = (char *)&v75 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100431F80(&qword_100A48628);
  uint64_t v116 = *(void *)(v89 - 8);
  __chkstk_darwin(v89, v25);
  uint64_t v85 = (char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100431F80(&qword_100A48218);
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)&v75 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = (void *)sub_100431F80(&qword_100A48220);
  uint64_t v80 = *(v79 - 1);
  __chkstk_darwin(v79, v32);
  uint64_t v34 = (char *)&v75 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_100431F80(&qword_100A48228);
  uint64_t v78 = *(void (***)(char *, uint64_t))(v77 - 8);
  __chkstk_darwin(v77, v35);
  uint64_t v37 = (char *)&v75 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_100431F80(&qword_100A48230);
  uint64_t v84 = *(void *)(v82 - 8);
  __chkstk_darwin(v82, v38);
  uint64_t v108 = (char *)&v75 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100431F80(&qword_100A48748);
  uint64_t v88 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v40);
  unsigned __int8 v107 = (char *)&v75 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100431F80(&qword_100A48750);
  uint64_t v93 = *(void *)(v92 - 8);
  __chkstk_darwin(v92, v42);
  uint64_t v44 = *a1;
  uint64_t v112 = (char *)&v75 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = v44;
  uint64_t v118 = a2;
  sub_100431F80(&qword_100A48240);
  sub_1007259F0();
  uint64_t v75 = sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v114 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v106 = v28 + 8;
  v114(v31, v27);
  uint64_t v109 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  sub_1004D10A4(&qword_100A48250, &qword_100A48228);
  uint64_t v81 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  sub_1004D10A4(&qword_100A48258, &qword_100A48220);
  sub_1004D10A4(&qword_100A48260, &qword_100A48240);
  sub_1005805CC();
  uint64_t v45 = v34;
  uint64_t v46 = v77;
  uint64_t v47 = v79;
  sub_1007259A0();
  (*(void (**)(char *, void *))(v80 + 8))(v45, v47);
  v78[1](v37, v46);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v48 = v83;
  sub_100725980();
  swift_release();
  v114(v31, v27);
  uint64_t v118 = v90;
  uint64_t v119 = v91;
  uint64_t v49 = v110;
  sub_1007259F0();
  uint64_t v90 = sub_1004D10A4(&qword_100A48348, &qword_100A48310);
  uint64_t v80 = sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v50 = v85;
  uint64_t v51 = v86;
  uint64_t v52 = v111;
  sub_100725970();
  uint64_t v53 = *(void **)(v117 + 8);
  v117 += 8;
  uint64_t v79 = v53;
  ((void (*)(char *, uint64_t))v53)(v49, v52);
  uint64_t v54 = *(void (***)(char *, uint64_t))(v115 + 8);
  v115 += 8;
  uint64_t v78 = v54;
  uint64_t v55 = v48;
  ((void (*)(char *, uint64_t))v54)(v48, v51);
  sub_1004D10A4(&qword_100A48280, &qword_100A48230);
  uint64_t v91 = &protocol conformance descriptor for PredicateExpressions.Equal<A, B>;
  uint64_t v77 = sub_1004D10A4(&qword_100A48638, &qword_100A48628);
  uint64_t v56 = v108;
  uint64_t v57 = v82;
  uint64_t v58 = v89;
  sub_1007259C0();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v116 + 8);
  v116 += 8;
  uint64_t v76 = v59;
  v59(v50, v58);
  (*(void (**)(char *, uint64_t))(v84 + 8))(v56, v57);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v114(v31, v27);
  uint64_t v118 = v94;
  uint64_t v119 = v95;
  uint64_t v60 = v110;
  sub_1007259F0();
  uint64_t v61 = v111;
  sub_100725970();
  ((void (*)(char *, uint64_t))v79)(v60, v61);
  ((void (*)(char *, uint64_t))v78)(v55, v51);
  sub_1004D10A4(&qword_100A48758, &qword_100A48748);
  uint64_t v62 = v107;
  uint64_t v63 = v87;
  sub_1007259C0();
  v76(v50, v58);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v62, v63);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v64 = v96;
  sub_100725980();
  swift_release();
  v114(v31, v27);
  LOBYTE(v118) = 1;
  uint64_t v65 = v98;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48270, &qword_100A48208);
  sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  uint64_t v66 = v97;
  uint64_t v67 = v99;
  uint64_t v68 = v101;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v102 + 8))(v65, v68);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v64, v67);
  uint64_t v69 = sub_100431F80(&qword_100A48760);
  uint64_t v70 = v105;
  v105[3] = v69;
  v70[4] = sub_100582278();
  sub_10044D5C4(v70);
  sub_1004D10A4(&qword_100A48780, &qword_100A48750);
  sub_1004D10A4(&qword_100A48288, &qword_100A48210);
  uint64_t v71 = v112;
  uint64_t v72 = v92;
  uint64_t v73 = v103;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v66, v73);
  return (*(uint64_t (**)(char *, uint64_t))(v93 + 8))(v71, v72);
}

void *sub_100552334(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = &_swiftEmptySetSingleton;
  v4[3] = a1;
  v4[4] = a2;
  v4[5] = &v5;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v2) + 0xE8))(0, sub_10057C40C, v4);
  return v5;
}

uint64_t sub_1005523C8(void *a1, void *a2)
{
  uint64_t v5 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = [a1 prefixedURI];
  uint64_t v11 = sub_100726430();
  uint64_t v13 = v12;

  id v14 = [a2 prefixedURI];
  uint64_t v15 = sub_100726430();
  uint64_t v17 = v16;

  uint64_t v23 = v15;
  uint64_t v24 = v17;
  uint64_t v25 = v11;
  uint64_t v26 = v13;
  uint64_t v28 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unsigned __int8 v27 = 0;
  uint64_t v21 = v9;
  uint64_t v22 = &v27;
  (*(void (**)(void, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v2) + 0xE8))(0, sub_10057C650, v20);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v27;
}

uint64_t sub_1005526FC@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, int a6@<W5>, uint64_t *a7@<X8>)
{
  int v86 = a6;
  uint64_t v79 = a5;
  uint64_t v78 = a4;
  uint64_t v74 = a3;
  uint64_t v77 = a2;
  uint64_t v92 = a7;
  uint64_t v8 = sub_100431F80(&qword_100A48200);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v88 = v8;
  uint64_t v89 = v9;
  __chkstk_darwin(v8, v10);
  uint64_t v84 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_100431F80(&qword_100A48208);
  uint64_t v87 = *(void *)(v85 - 8);
  __chkstk_darwin(v85, v12);
  uint64_t v82 = (char *)&v67 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A48210);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v90 = v14;
  uint64_t v91 = v15;
  __chkstk_darwin(v14, v16);
  uint64_t v83 = (char *)&v67 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100431F80(&qword_100A48060);
  uint64_t v97 = *(void *)(v18 - 8);
  __chkstk_darwin(v18, v19);
  uint64_t v21 = (char *)&v67 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100431F80(&qword_100A48218);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)&v67 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100431F80(&qword_100A48310);
  uint64_t v96 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v28);
  uint64_t v30 = (char *)&v67 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100431F80(&qword_100A48628);
  uint64_t v76 = *(void *)(v75 - 8);
  uint64_t v32 = __chkstk_darwin(v75, v31);
  uint64_t v72 = (char *)&v67 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32, v34);
  uint64_t v71 = (char *)&v67 - v35;
  uint64_t v36 = sub_100431F80(&qword_100A48630);
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v80 = v36;
  uint64_t v81 = v37;
  __chkstk_darwin(v36, v38);
  uint64_t v73 = (char *)&v67 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = *a1;
  sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v93 = v23 + 8;
  uint64_t v94 = v40;
  v40(v26, v22);
  uint64_t v98 = v77;
  uint64_t v99 = v74;
  uint64_t v41 = v21;
  sub_1007259F0();
  uint64_t v77 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  uint64_t v70 = sub_1004D10A4(&qword_100A48348, &qword_100A48310);
  uint64_t v74 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  uint64_t v69 = sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v68 = v27;
  uint64_t v42 = v18;
  sub_100725970();
  uint64_t v43 = *(void (**)(char *, uint64_t))(v97 + 8);
  v97 += 8;
  uint64_t v44 = v41;
  uint64_t v45 = v41;
  uint64_t v46 = v42;
  v43(v44, v42);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v96 + 8);
  v96 += 8;
  v47(v30, v27);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v94(v26, v22);
  uint64_t v98 = v78;
  uint64_t v99 = v79;
  uint64_t v48 = v45;
  sub_1007259F0();
  uint64_t v49 = v72;
  uint64_t v50 = v68;
  sub_100725970();
  v43(v48, v46);
  v47(v30, v50);
  sub_1004D10A4(&qword_100A48638, &qword_100A48628);
  uint64_t v51 = v73;
  uint64_t v52 = v71;
  uint64_t v53 = v49;
  uint64_t v54 = v75;
  sub_1007259C0();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v76 + 8);
  v55(v53, v54);
  v55(v52, v54);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v56 = v82;
  sub_100725980();
  swift_release();
  v94(v26, v22);
  LOBYTE(v98) = v86;
  uint64_t v57 = v84;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48270, &qword_100A48208);
  sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  uint64_t v58 = v83;
  uint64_t v59 = v57;
  uint64_t v60 = v85;
  uint64_t v61 = v88;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v59, v61);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v56, v60);
  uint64_t v62 = sub_100431F80(&qword_100A48640);
  uint64_t v63 = v92;
  v92[3] = v62;
  v63[4] = sub_1005815C0();
  sub_10044D5C4(v63);
  sub_1004D10A4(&qword_100A48660, &qword_100A48630);
  sub_1004D10A4(&qword_100A48288, &qword_100A48210);
  uint64_t v64 = v80;
  uint64_t v65 = v90;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v91 + 8))(v58, v65);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v51, v64);
}

uint64_t sub_1005530C0(uint64_t a1, uint64_t a2, BOOL *a3)
{
  uint64_t v19 = a3;
  uint64_t v5 = sub_100431F80((uint64_t *)&unk_100A481F0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48308);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a2, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_1007261B0();
  uint64_t v16 = sub_1007260E0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (!v3) {
    *uint64_t v19 = v16 > 0;
  }
  return result;
}

uint64_t sub_1005532FC(void *a1, void *a2)
{
  uint64_t v5 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v20[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = [a1 prefixedURI];
  uint64_t v11 = sub_100726430();
  uint64_t v13 = v12;

  id v14 = [a2 prefixedURI];
  uint64_t v15 = sub_100726430();
  uint64_t v17 = v16;

  uint64_t v23 = v11;
  uint64_t v24 = v13;
  uint64_t v25 = v15;
  uint64_t v26 = v17;
  v27[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v27[0] = _swiftEmptyArrayStorage;
  uint64_t v21 = v9;
  uint64_t v22 = v27;
  (*(void (**)(void, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v2) + 0xE8))(0, sub_10057C678, v20);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return v27[0];
}

uint64_t sub_100553638@<X0>(uint64_t *a1@<X0>, void (*a2)(char *, uint64_t)@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v80 = a5;
  uint64_t v79 = a4;
  uint64_t v74 = a3;
  uint64_t v77 = a2;
  uint64_t v88 = a6;
  uint64_t v87 = sub_100431F80(&qword_100A48200);
  uint64_t v102 = *(void *)(v87 - 8);
  __chkstk_darwin(v87, v7);
  uint64_t v95 = (char *)v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100431F80(&qword_100A48208);
  uint64_t v100 = *(void *)(v86 - 8);
  __chkstk_darwin(v86, v9);
  uint64_t v82 = (char *)v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_100431F80(&qword_100A48210);
  uint64_t v101 = *(void *)(v96 - 8);
  __chkstk_darwin(v96, v11);
  uint64_t v83 = (char *)v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100431F80(&qword_100A48060);
  uint64_t v99 = *(void **)(v73 - 8);
  __chkstk_darwin(v73, v13);
  uint64_t v71 = (char *)v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A48218);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)v69 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100431F80(&qword_100A48310);
  uint64_t v98 = *(void **)(v20 - 8);
  __chkstk_darwin(v20, v21);
  uint64_t v23 = (char *)v69 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_100431F80(&qword_100A48628);
  uint64_t v76 = *(void (**)(char *, uint64_t))(v75 - 8);
  uint64_t v25 = __chkstk_darwin(v75, v24);
  uint64_t v72 = (char *)v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v27);
  uint64_t v70 = (char *)v69 - v28;
  uint64_t v78 = sub_100431F80(&qword_100A48630);
  uint64_t v81 = *(void *)(v78 - 8);
  __chkstk_darwin(v78, v29);
  uint64_t v93 = (char *)v69 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100431F80(&qword_100A48640);
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v84 = v31;
  uint64_t v85 = v32;
  __chkstk_darwin(v31, v33);
  uint64_t v94 = (char *)v69 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = *a1;
  uint64_t v36 = sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  uint64_t v90 = v35;
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v97 = v15;
  sub_100725980();
  swift_release();
  uint64_t v91 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v92 = v16 + 8;
  v91(v19, v15);
  uint64_t v103 = (uint64_t)v77;
  uint64_t v104 = (uint64_t)v74;
  uint64_t v37 = v71;
  sub_1007259F0();
  uint64_t v77 = (void (*)(char *, uint64_t))&protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  v69[1] = sub_1004D10A4(&qword_100A48348, &qword_100A48310);
  uint64_t v74 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  v69[0] = sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v38 = v20;
  uint64_t v39 = v73;
  sub_100725970();
  uint64_t v40 = (void (*)(char *, uint64_t))v99[1];
  ++v99;
  v40(v37, v39);
  uint64_t v41 = (void (*)(char *, uint64_t))v98[1];
  ++v98;
  v41(v23, v38);
  uint64_t v42 = v97;
  uint64_t v89 = v36;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v43 = v91;
  v91(v19, v42);
  uint64_t v103 = v79;
  uint64_t v104 = v80;
  sub_1007259F0();
  uint64_t v44 = v72;
  sub_100725970();
  v40(v37, v39);
  v41(v23, v38);
  uint64_t v99 = &protocol conformance descriptor for PredicateExpressions.Equal<A, B>;
  sub_1004D10A4(&qword_100A48638, &qword_100A48628);
  uint64_t v45 = v70;
  uint64_t v46 = v75;
  sub_1007259C0();
  uint64_t v47 = (void (*)(char *, uint64_t))*((void *)v76 + 1);
  v47(v44, v46);
  v47(v45, v46);
  uint64_t v48 = v97;
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v49 = v82;
  sub_100725980();
  swift_release();
  uint64_t v50 = v19;
  v43(v19, v48);
  LOBYTE(v103) = 0;
  uint64_t v51 = v95;
  sub_1007259F0();
  uint64_t v80 = sub_1004D10A4(&qword_100A48270, &qword_100A48208);
  uint64_t v79 = sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  uint64_t v52 = v83;
  uint64_t v54 = v86;
  uint64_t v53 = v87;
  sub_100725970();
  uint64_t v55 = *(void (**)(char *, uint64_t))(v102 + 8);
  v102 += 8;
  uint64_t v77 = v55;
  v55(v51, v53);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v100 + 8);
  v100 += 8;
  uint64_t v76 = v56;
  v56(v49, v54);
  uint64_t v98 = &protocol conformance descriptor for PredicateExpressions.Conjunction<A, B>;
  sub_1004D10A4(&qword_100A48660, &qword_100A48630);
  uint64_t v99 = (void *)sub_1004D10A4(&qword_100A48288, &qword_100A48210);
  uint64_t v57 = v93;
  uint64_t v58 = v78;
  uint64_t v59 = v96;
  sub_1007259C0();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v101 + 8);
  v101 += 8;
  v60(v52, v59);
  (*(void (**)(char *, uint64_t))(v81 + 8))(v57, v58);
  uint64_t v61 = v97;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v91(v50, v61);
  LOBYTE(v103) = 1;
  uint64_t v62 = v95;
  sub_1007259F0();
  sub_100725970();
  v77(v62, v53);
  v76(v49, v54);
  uint64_t v63 = sub_100431F80(&qword_100A48738);
  uint64_t v64 = v88;
  v88[3] = v63;
  v64[4] = sub_1005821FC();
  sub_10044D5C4(v64);
  sub_1004D10A4(&qword_100A486A8, &qword_100A48640);
  uint64_t v65 = v94;
  uint64_t v66 = v84;
  uint64_t v67 = v96;
  sub_1007259C0();
  v60(v52, v67);
  return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v65, v66);
}

uint64_t sub_100554238(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v66 = a1;
  uint64_t v5 = sub_100725CC0();
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v71 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100431F80((uint64_t *)&unk_100A46870);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v69 = (uint64_t *)((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v68 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v61 = *(void *)(v68 - 8);
  uint64_t v12 = __chkstk_darwin(v68, v11);
  uint64_t v70 = (uint64_t)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v59 - v15;
  uint64_t v17 = sub_100431F80((uint64_t *)&unk_100A481F0);
  __chkstk_darwin(v17 - 8, v18);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100431F80(&qword_100A48308);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v27 = *(void *)(v26 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v20, a2, v26);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v20, 0, 1, v26);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_1007261B0();
  uint64_t v28 = v67;
  unint64_t v29 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  if (!v28)
  {
    uint64_t v59 = 0;
    uint64_t v60 = v16;
    if (v29 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_100726BA0();
      uint64_t v31 = result;
    }
    else
    {
      uint64_t v31 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
    }
    if (v31)
    {
      if (v31 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v32 = 0;
      uint64_t v64 = (void (**)(void *, void, uint64_t, uint64_t))(v61 + 56);
      unint64_t v65 = v29 & 0xC000000000000001;
      uint64_t v63 = (unsigned int (**)(void *, uint64_t, uint64_t))(v61 + 48);
      uint64_t v33 = _swiftEmptyArrayStorage;
      uint64_t v66 = v31;
      uint64_t v67 = a3;
      unint64_t v62 = v29;
      do
      {
        if (v65) {
          sub_100726A10();
        }
        else {
          swift_retain();
        }
        uint64_t v34 = sub_100491B94();
        uint64_t v36 = v35;
        uint64_t v37 = sub_10049188C();
        uint64_t v39 = v38;
        sub_10049279C();
        uint64_t v40 = sub_100491E9C();
        uint64_t v42 = v41;
        uint64_t v43 = sub_100492198();
        uint64_t v45 = v44;
        uint64_t v46 = v42;
        uint64_t v47 = (uint64_t)v71;
        uint64_t v48 = nullsub_37(v40, v46, v43, v45);
        uint64_t v49 = v69;
        sub_1004BD074(v34, v36, v37, v39, v47, v48, v50, v51, v69, v52);
        uint64_t v53 = v68;
        (*v64)(v49, 0, 1, v68);
        swift_release();
        if ((*v63)(v49, 1, v53) == 1)
        {
          sub_10044C150((uint64_t)v49, (uint64_t *)&unk_100A46870);
          a3 = v67;
        }
        else
        {
          uint64_t v54 = (uint64_t)v60;
          sub_100582194((uint64_t)v49, (uint64_t)v60, type metadata accessor for SenderKeyInfo);
          sub_100582194(v54, v70, type metadata accessor for SenderKeyInfo);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          a3 = v67;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v33 = (void *)sub_100571F00(0, v33[2] + 1, 1, (unint64_t)v33, (uint64_t *)&unk_100A46D40, type metadata accessor for SenderKeyInfo, type metadata accessor for SenderKeyInfo);
          }
          unint64_t v57 = v33[2];
          unint64_t v56 = v33[3];
          uint64_t v58 = v70;
          if (v57 >= v56 >> 1)
          {
            uint64_t v33 = (void *)sub_100571F00(v56 > 1, v57 + 1, 1, (unint64_t)v33, (uint64_t *)&unk_100A46D40, type metadata accessor for SenderKeyInfo, type metadata accessor for SenderKeyInfo);
            uint64_t v58 = v70;
          }
          v33[2] = v57 + 1;
          sub_100582194(v58, (uint64_t)v33+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v57, type metadata accessor for SenderKeyInfo);
        }
        ++v32;
      }
      while (v66 != v32);
    }
    else
    {
      uint64_t v33 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease_n();
    *a3 = v33;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1005548A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a6;
  uint64_t v25 = a1;
  uint64_t v26 = a2;
  uint64_t v27 = a3;
  uint64_t v9 = sub_100431F80((uint64_t *)&unk_100A468B0);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v11, v14);
  uint64_t v17 = (char *)&v24 - v16;
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v24 - v19;
  uint64_t v21 = type metadata accessor for SenderKeyAndState(0);
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v20, 1, 1, v21);
  v22(v17, 1, 1, v21);
  v22(v13, 1, 1, v21);
  unint64_t v29 = v6;
  uint64_t v30 = a4;
  uint64_t v31 = a5;
  uint64_t v32 = v24;
  uint64_t v33 = v13;
  uint64_t v34 = v20;
  uint64_t v35 = v17;
  (*(void (**)(void, uint64_t (*)(uint64_t), unsigned char *))((swift_isaMask & *v6) + 0xE8))(0, sub_10057C694, v28);
  sub_1004546B8((uint64_t)v20, v25, (uint64_t *)&unk_100A468B0);
  sub_1004546B8((uint64_t)v17, v26, (uint64_t *)&unk_100A468B0);
  sub_100462BE4((uint64_t)v13, v27, (uint64_t *)&unk_100A468B0);
  sub_10044C150((uint64_t)v17, (uint64_t *)&unk_100A468B0);
  return sub_10044C150((uint64_t)v20, (uint64_t *)&unk_100A468B0);
}

uint64_t sub_100554AB0(uint64_t a1, uint64_t a2, void *a3, void *a4, NSObject *a5, uint64_t a6, NSObject *a7, unint64_t a8)
{
  unint64_t v374 = a8;
  v371 = a7;
  uint64_t v345 = a6;
  os_log_t v379 = a5;
  uint64_t v12 = type metadata accessor for SenderKeyInfo(0);
  __chkstk_darwin(v12 - 8, v13);
  v358 = (char **)((char *)&v343 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = sub_100431F80((uint64_t *)&unk_100A468B0);
  uint64_t v17 = __chkstk_darwin(v15 - 8, v16);
  v370 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v343 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v359 = (uint64_t)&v343 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v369 = (uint64_t)&v343 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v368 = (uint64_t)&v343 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v354 = (uint64_t)&v343 - v30;
  __chkstk_darwin(v29, v31);
  uint64_t v357 = (uint64_t)&v343 - v32;
  uint64_t v33 = sub_100431F80(&qword_100A47D80);
  uint64_t v35 = __chkstk_darwin(v33 - 8, v34);
  v349 = ((char *)&v343 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = __chkstk_darwin(v35, v37);
  uint64_t v376 = (uint64_t)&v343 - v39;
  uint64_t v41 = __chkstk_darwin(v38, v40);
  v360 = ((char *)&v343 - v42);
  __chkstk_darwin(v41, v43);
  v377 = (char *)&v343 - v44;
  uint64_t v373 = sub_100725CC0();
  v352 = *(NSObject **)(v373 - 8);
  uint64_t v46 = __chkstk_darwin(v373, v45);
  v343 = (char *)&v343 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __chkstk_darwin(v46, v48);
  v347 = (char *)&v343 - v50;
  uint64_t v52 = __chkstk_darwin(v49, v51);
  v348 = ((char *)&v343 - v53);
  uint64_t v55 = __chkstk_darwin(v52, v54);
  v356 = (char *)&v343 - v56;
  uint64_t v58 = __chkstk_darwin(v55, v57);
  v344 = (char *)&v343 - v59;
  uint64_t v61 = __chkstk_darwin(v58, v60);
  v353 = (char *)&v343 - v62;
  uint64_t v64 = __chkstk_darwin(v61, v63);
  v363 = (char *)&v343 - v65;
  uint64_t v67 = __chkstk_darwin(v64, v66);
  v361 = ((char *)&v343 - v68);
  __chkstk_darwin(v67, v69);
  v366 = (char *)&v343 - v70;
  uint64_t v71 = sub_100431F80(&qword_100A48720);
  uint64_t v73 = __chkstk_darwin(v71 - 8, v72);
  v365 = (uint64_t *)((char *)&v343 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v73, v75);
  uint64_t v381 = (uint64_t)&v343 - v76;
  uint64_t v77 = sub_100431F80(&qword_100A48728);
  uint64_t v367 = *(void *)(v77 - 8);
  uint64_t v79 = __chkstk_darwin(v77, v78);
  uint64_t v364 = (uint64_t)&v343 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = __chkstk_darwin(v79, v81);
  uint64_t v355 = (uint64_t)&v343 - v83;
  uint64_t v85 = __chkstk_darwin(v82, v84);
  v351 = (char *)&v343 - v86;
  uint64_t v88 = __chkstk_darwin(v85, v87);
  v350 = (char *)&v343 - v89;
  uint64_t v91 = __chkstk_darwin(v88, v90);
  v375 = ((char *)&v343 - v92);
  __chkstk_darwin(v91, v93);
  uint64_t v362 = (uint64_t)&v343 - v94;
  uint64_t v95 = &selRef_offGridMessengerCollaborator;
  id v96 = [a3 prefixedURI];
  uint64_t v97 = sub_100726430();
  uint64_t v99 = v98;

  id v100 = [a4 prefixedURI];
  uint64_t v101 = sub_100726430();
  uint64_t v103 = v102;

  uint64_t v346 = a2;
  uint64_t v104 = sub_100550B34(v97, v99, v101, (uint64_t)v103, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&long long v382 = _swiftEmptyArrayStorage;
  if ((unint64_t)v104 >> 62) {
    goto LABEL_139;
  }
  uint64_t v105 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t v106 = v376;
  os_log_t v107 = v379;
  if (v105)
  {
    if (v105 < 1)
    {
      __break(1u);
      goto LABEL_142;
    }
    for (uint64_t i = 0; i != v105; ++i)
    {
      if ((v104 & 0xC000000000000001) != 0) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      if (sub_100493300())
      {
        sub_100726A40();
        uint64_t v103 = *(NSObject **)(v382 + 16);
        sub_100726A70();
        sub_100726A80();
        sub_100726A50();
      }
      else
      {
        swift_release();
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v109 = v382;
    uint64_t v106 = v376;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v109 = (unint64_t)_swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  if ((v109 & 0x8000000000000000) != 0 || (uint64_t v110 = (void *)v109, (v109 & 0x4000000000000000) != 0))
  {
    uint64_t v110 = sub_1005721CC(v109);
    swift_release();
  }
  *(void *)&long long v382 = v110;
  uint64_t v111 = v378;
  sub_100572EC0((uint64_t *)&v382);
  if (v111) {
    goto LABEL_156;
  }
  uint64_t v95 = 0;
  swift_release();
  uint64_t v99 = v382;
  uint64_t v112 = swift_bridgeObjectRetain();
  uint64_t v113 = sub_1004CCCD4(v112);
  swift_bridgeObjectRelease();
  uint64_t v384 = v113;
  uint64_t v114 = self;
  NSString v115 = sub_100726420();
  id v116 = [v114 sharedInstanceWithPortName:v115];

  if (!v116) {
    goto LABEL_155;
  }
  id v117 = [v116 pushToken];

  if (v117)
  {
    uint64_t v118 = sub_100725B50();
    unint64_t v120 = v119;

    sub_1004C7AF0(v118, v120, &v382);
    sub_10044CE88(v382, *((unint64_t *)&v382 + 1));
    sub_100442248(v118, v120);
  }
  Class isa = v107[2].isa;
  uint64_t v122 = ((unint64_t)v99 >> 62) & 1;
  if (v99 < 0) {
    LODWORD(v122) = 1;
  }
  os_log_t v379 = (os_log_t)v99;
  uint64_t v380 = v77;
  if (!isa)
  {
    v378 = 0;
    if (v122)
    {
      swift_retain();
      uint64_t v376 = sub_100726BA0();
    }
    else
    {
      uint64_t v376 = *(void *)(v99 + 16);
      swift_retain();
    }
    uint64_t v210 = (uint64_t)v377;
    uint64_t v211 = v381;
    uint64_t v103 = _swiftEmptyArrayStorage;
    if (v376)
    {
      if (v376 < 1)
      {
        __break(1u);
        goto LABEL_150;
      }
      uint64_t v212 = 0;
      unint64_t v374 = v99 & 0xC000000000000001;
      uint64_t v213 = v352 + 6;
      long long v214 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v367 + 56);
      id v215 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v367 + 48);
      v370 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v367 + 48);
      v371 = v352 + 4;
      uint64_t v216 = v373;
      do
      {
        if (v374)
        {
          uint64_t v217 = sub_100726A10();
        }
        else
        {
          uint64_t v217 = (uint64_t)v379[v212 + 4].isa;
          swift_retain();
        }
        sub_1004954C4();
        if (((unint64_t (*)(uint64_t, uint64_t, uint64_t))v213->isa)(v210, 1, v216) == 1)
        {
          sub_10044C150(v210, &qword_100A47D80);
          uint64_t v218 = v380;
          (*v214)(v211, 1, 1, v380);
          swift_release();
        }
        else
        {
          uint64_t v219 = (void (*)(char *, uint64_t, uint64_t))v371->isa;
          v372 = v103;
          id v220 = v366;
          v219(v366, v210, v216);
          uint64_t v218 = v380;
          v221 = (char *)(v381 + *(int *)(v380 + 48));
          *(void *)uint64_t v381 = v217;
          id v222 = v220;
          uint64_t v103 = v372;
          v219(v221, (uint64_t)v222, v216);
          id v215 = v370;
          uint64_t v211 = v381;
          (*v214)(v381, 0, 1, v218);
        }
        if ((*v215)(v211, 1, v218) == 1)
        {
          sub_10044C150(v211, &qword_100A48720);
          uint64_t v210 = (uint64_t)v377;
        }
        else
        {
          uint64_t v223 = v211;
          uint64_t v224 = v362;
          sub_100462BE4(v223, v362, &qword_100A48728);
          sub_100462BE4(v224, (uint64_t)v375, &qword_100A48728);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v210 = (uint64_t)v377;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v103 = sub_100571C90(0, (int64_t)v103[2].isa + 1, 1, (unint64_t)v103);
          }
          unint64_t v227 = (unint64_t)v103[2].isa;
          unint64_t v226 = (unint64_t)v103[3].isa;
          if (v227 >= v226 >> 1) {
            uint64_t v103 = sub_100571C90(v226 > 1, v227 + 1, 1, (unint64_t)v103);
          }
          v103[2].Class isa = (Class)(v227 + 1);
          sub_100462BE4((uint64_t)v375, (uint64_t)v103+ ((*(unsigned __int8 *)(v367 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v367 + 80))+ *(void *)(v367 + 72) * v227, &qword_100A48728);
          uint64_t v211 = v381;
        }
        ++v212;
      }
      while (v376 != v212);
    }
    swift_release_n();
    *(void *)&long long v382 = v103;
    swift_bridgeObjectRetain();
    long long v228 = v378;
    sub_100572E14((void **)&v382);
    if (v228) {
      goto LABEL_156;
    }
    uint64_t v95 = 0;
    swift_bridgeObjectRelease();
    uint64_t v229 = (char *)v382;
    uint64_t v230 = *(void *)(v382 + 16);
    if (v230)
    {
      v378 = 0;
      *(void *)&long long v382 = _swiftEmptyArrayStorage;
      sub_100726A60();
      unint64_t v231 = (*(unsigned __int8 *)(v367 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v367 + 80);
      v377 = v229;
      uint64_t v232 = (uint64_t)&v229[v231];
      uint64_t v381 = *(void *)(v367 + 72);
      os_log_t v379 = v352 + 2;
      v233 = v352 + 1;
      uint64_t v234 = v373;
      v235 = v351;
      v236 = v350;
      do
      {
        sub_1004546B8(v232, (uint64_t)v236, &qword_100A48728);
        os_log_t v237 = v379;
        uint64_t v238 = *(int *)(v380 + 48);
        v239 = (char *)v235 + v238;
        void *v235 = *v236;
        ((void (*)(char *, char *, uint64_t))v237->isa)((char *)v235 + v238, (char *)v236 + v238, v234);
        v240 = (void (*)(char *, uint64_t))v233->isa;
        swift_retain();
        v240(v239, v234);
        sub_10044C150((uint64_t)v236, &qword_100A48728);
        sub_100726A40();
        sub_100726A70();
        sub_100726A80();
        sub_100726A50();
        v232 += v381;
        --v230;
      }
      while (v230);
      unint64_t v241 = v382;
      swift_release();
      uint64_t v95 = v378;
    }
    else
    {
      swift_release();
      unint64_t v241 = (unint64_t)_swiftEmptyArrayStorage;
    }
    uint64_t v99 = v373;
    os_log_t v107 = v361;
    uint64_t v103 = v360;
    if (v241 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v339 = sub_100726BA0();
      swift_bridgeObjectRelease();
      if (!v339) {
        goto LABEL_147;
      }
    }
    else if (!*(void *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_147;
    }
    if ((v241 & 0xC000000000000001) == 0)
    {
      if (!*(void *)((v241 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_152;
      }
      swift_retain();
LABEL_111:
      swift_bridgeObjectRelease();
      uint64_t v242 = type metadata accessor for SenderKeyDistributionManager(0);
      (*(void (**)(void))(v242 + 816))();
      v243 = v363;
      sub_100725CB0();
      sub_100725BD0();
      v244 = v352;
      v245 = (void (*)(char *, uint64_t))v352[1].isa;
      v245(v243, v99);
      sub_1004954C4();
      if (((unsigned int (*)(NSObject *, uint64_t, uint64_t))v244[6].isa)(v103, 1, v99) == 1)
      {
LABEL_128:
        swift_release();
        v245((char *)v107, v99);
        swift_bridgeObjectRelease();
        return sub_10044C150((uint64_t)v103, &qword_100A47D80);
      }
      v246 = v353;
      ((void (*)(char *, NSObject *, uint64_t))v244[4].isa)(v353, v103, v99);
      if (sub_100725BF0())
      {
        uint64_t v381 = (uint64_t)v245;
        v378 = v95;
        uint64_t v247 = sub_100491B94();
        os_log_t v379 = v248;
        uint64_t v380 = v247;
        uint64_t v249 = sub_10049188C();
        uint64_t v251 = v250;
        uint64_t v252 = (uint64_t)v363;
        sub_10049279C();
        uint64_t v253 = sub_100491E9C();
        uint64_t v255 = v254;
        uint64_t v256 = sub_100492198();
        uint64_t v258 = nullsub_37(v253, v255, v256, v257);
        uint64_t v341 = v259;
        v260 = v358;
        uint64_t v261 = v251;
        uint64_t v262 = v373;
        sub_1004BD074(v380, (uint64_t)v379, v249, v261, v252, v258, v263, v264, v358, v341);
        uint64_t v265 = sub_100492B94();
        uint64_t v266 = v357;
        sub_1004B7A38((uint64_t)v260, v265, v267, v357);
        uint64_t v268 = type metadata accessor for SenderKeyAndState(0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v268 - 8) + 56))(v266, 0, 1, v268);
        sub_10046E91C(v266, v345, (uint64_t *)&unk_100A468B0);
        v269 = v344;
        ((void (*)(char *, char *, uint64_t))v244[2].isa)(v344, v353, v262);
        swift_retain_n();
        v270 = sub_100725EB0();
        os_log_type_t v271 = sub_1007266E0();
        int v272 = v271;
        if (!os_log_type_enabled(v270, v271))
        {
          swift_release_n();

          v337 = (void (*)(char *, uint64_t))v381;
          ((void (*)(char *, uint64_t))v381)(v269, v262);
          swift_release();
          v337(v353, v262);
          v337((char *)v361, v262);
          return swift_bridgeObjectRelease();
        }
        uint64_t v273 = swift_slowAlloc();
        uint64_t v380 = swift_slowAlloc();
        *(void *)&long long v382 = v380;
        *(_DWORD *)uint64_t v273 = 136315394;
        sub_10057998C(&qword_100A459E8, (void (*)(uint64_t))&type metadata accessor for Date);
        os_log_t v379 = v270;
        uint64_t v274 = sub_100726D00();
        uint64_t v383 = sub_10043E578(v274, v275, (uint64_t *)&v382);
        sub_100726830();
        swift_bridgeObjectRelease();
        LODWORD(v377) = v272;
        v276 = (void (*)(char *, uint64_t))v381;
        ((void (*)(char *, uint64_t))v381)(v269, v262);
        *(_WORD *)(v273 + 12) = 2080;
        uint64_t v376 = v273 + 14;
        uint64_t v277 = sub_100492494();
        unint64_t v279 = v278;
        uint64_t v280 = sub_100725AA0();
        unint64_t v282 = v281;
        sub_100442248(v277, v279);
        uint64_t v383 = sub_10043E578(v280, v282, (uint64_t *)&v382);
        sub_100726830();
        swift_release_n();
        swift_bridgeObjectRelease();
        os_log_t v283 = v379;
        _os_log_impl((void *)&_mh_execute_header, v379, (os_log_type_t)v377, "Last iMessaged device was seen at: %s token: %s", (uint8_t *)v273, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();

        uint64_t v284 = v373;
        v276(v353, v373);
        v285 = &v385;
        goto LABEL_132;
      }
LABEL_133:
      swift_release();
      v245(v246, v99);
      v245((char *)v107, v99);
      return swift_bridgeObjectRelease();
    }
LABEL_150:
    sub_100726A10();
    goto LABEL_111;
  }
  if (!v122)
  {
    uint64_t v104 = *(void *)(v99 + 16);
    swift_retain();
    goto LABEL_26;
  }
LABEL_142:
  swift_retain();
  uint64_t v104 = sub_100726BA0();
LABEL_26:
  uint64_t v123 = (uint64_t)v370;
  v372 = v104;
  if (v104)
  {
    unint64_t v124 = 0;
    v366 = (char *)(v99 & 0xC000000000000001);
    v353 = (char *)(v99 + 32);
    do
    {
      if (v366)
      {
        uint64_t v104 = sub_100726A10();
        BOOL v125 = __OFADD__(v124, 1);
        uint64_t v126 = (v124 + 1);
        if (v125) {
          goto LABEL_136;
        }
      }
      else
      {
        if (v124 >= *(void *)(v99 + 16)) {
          goto LABEL_138;
        }
        uint64_t v104 = *(void *)&v353[8 * v124];
        swift_retain();
        BOOL v125 = __OFADD__(v124, 1);
        uint64_t v126 = (v124 + 1);
        if (v125)
        {
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          swift_bridgeObjectRetain();
          uint64_t v105 = sub_100726BA0();
          swift_bridgeObjectRelease();
          goto LABEL_3;
        }
      }
      v375 = v126;
      swift_retain();
      swift_retain();
      unint64_t v127 = (unint64_t)sub_100579D38(v99, v104);
      v378 = v95;
      swift_release();
      v377 = (char *)v104;
      swift_release();
      if (v127 >> 62)
      {
        uint64_t v104 = sub_100726BA0();
        if (!v104)
        {
LABEL_47:
          swift_bridgeObjectRelease();
          uint64_t v129 = _swiftEmptyArrayStorage;
          goto LABEL_48;
        }
      }
      else
      {
        uint64_t v104 = *(void *)((v127 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v104) {
          goto LABEL_47;
        }
      }
      *(void *)&long long v382 = _swiftEmptyArrayStorage;
      sub_1005724F0(0, v104 & ~(v104 >> 63), 0);
      if (v104 < 0) {
        goto LABEL_137;
      }
      uint64_t v128 = 0;
      uint64_t v129 = (void *)v382;
      uint64_t v381 = v127 & 0xC000000000000001;
      do
      {
        if (v381) {
          sub_100726A10();
        }
        else {
          swift_retain();
        }
        uint64_t v103 = sub_100492494();
        uint64_t v131 = v130;
        swift_release();
        *(void *)&long long v382 = v129;
        unint64_t v133 = v129[2];
        unint64_t v132 = v129[3];
        if (v133 >= v132 >> 1)
        {
          sub_1005724F0(v132 > 1, v133 + 1, 1);
          uint64_t v129 = (void *)v382;
        }
        ++v128;
        v129[2] = v133 + 1;
        uint64_t v134 = &v129[2 * v133];
        v134[4] = v103;
        v134[5] = v131;
      }
      while (v104 != v128);
      swift_bridgeObjectRelease();
LABEL_48:
      uint64_t v135 = sub_1004CCCD4((uint64_t)v129);
      swift_bridgeObjectRelease();
      uint64_t v136 = v384;
      if (*(void *)(v384 + 16))
      {
        swift_bridgeObjectRetain();
        char v137 = sub_100572F3C(v135, v136);
        swift_bridgeObjectRelease();
        if (v137)
        {
          uint64_t v138 = v354;
          sub_1004546B8((uint64_t)v371, v354, (uint64_t *)&unk_100A468B0);
          uint64_t v139 = type metadata accessor for SenderKeyAndState(0);
          uint64_t v140 = *(void *)(v139 - 8);
          int v141 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 48))(v138, 1, v139);
          sub_10044C150(v138, (uint64_t *)&unk_100A468B0);
          if (v141 == 1)
          {
            uint64_t v381 = sub_100491B94();
            uint64_t v362 = v142;
            v361 = sub_10049188C();
            uint64_t v144 = v143;
            uint64_t v145 = (uint64_t)v363;
            sub_10049279C();
            uint64_t v103 = sub_100491E9C();
            uint64_t v147 = v146;
            uint64_t v148 = sub_100492198();
            uint64_t v150 = nullsub_37(v103, v147, v148, v149);
            uint64_t v151 = v358;
            sub_1004BD074(v381, v362, (uint64_t)v361, v144, v145, v150, v152, v153, v358, v154);
            uint64_t v155 = sub_100492B94();
            uint64_t v156 = v357;
            sub_1004B7A38((uint64_t)v151, v155, v157, v357);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v140 + 56))(v156, 0, 1, v139);
            sub_10046E91C(v156, (uint64_t)v371, (uint64_t *)&unk_100A468B0);
          }
        }
      }
      uint64_t v158 = v368;
      sub_1004546B8(v374, v368, (uint64_t *)&unk_100A468B0);
      uint64_t v77 = type metadata accessor for SenderKeyAndState(0);
      uint64_t v159 = *(void *)(v77 - 8);
      uint64_t v160 = *(unsigned int (**)(void, void, void))(v159 + 48);
      if (v160(v158, 1, v77) == 1)
      {
        sub_10044C150(v158, (uint64_t *)&unk_100A468B0);
        uint64_t v161 = swift_bridgeObjectRetain();
        uint64_t v162 = sub_100573A94(v161, v135);
        swift_bridgeObjectRelease();
        uint64_t v163 = *(void *)(v162 + 16);
        swift_release();
        if (v163)
        {
          uint64_t v381 = sub_100491B94();
          uint64_t v362 = v164;
          v361 = sub_10049188C();
          v360 = v165;
          uint64_t v166 = (uint64_t)v363;
          sub_10049279C();
          uint64_t v167 = v160;
          uint64_t v168 = sub_100491E9C();
          uint64_t v103 = v169;
          uint64_t v170 = sub_100492198();
          uint64_t v171 = v168;
          uint64_t v160 = v167;
          uint64_t v173 = nullsub_37(v171, v103, v170, v172);
          uint64_t v174 = v358;
          sub_1004BD074(v381, v362, (uint64_t)v361, (uint64_t)v360, v166, v173, v175, v176, v358, v177);
          uint64_t v178 = sub_100492B94();
          uint64_t v179 = v357;
          sub_1004B7A38((uint64_t)v174, v178, v180, v357);
          swift_release();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v159 + 56))(v179, 0, 1, v77);
          sub_10046E91C(v179, v374, (uint64_t *)&unk_100A468B0);
        }
        else
        {
          swift_release();
        }
      }
      else
      {
        swift_release();
        swift_bridgeObjectRelease();
        sub_10044C150(v158, (uint64_t *)&unk_100A468B0);
      }
      uint64_t v181 = v369;
      sub_1004546B8((uint64_t)v371, v369, (uint64_t *)&unk_100A468B0);
      unsigned int v182 = v160(v181, 1, v77);
      sub_10044C150(v181, (uint64_t *)&unk_100A468B0);
      uint64_t v123 = (uint64_t)v370;
      if (v182 != 1)
      {
        uint64_t v183 = v359;
        sub_1004546B8(v374, v359, (uint64_t *)&unk_100A468B0);
        unsigned int v184 = v160(v183, 1, v77);
        sub_10044C150(v183, (uint64_t *)&unk_100A468B0);
        if (v184 != 1)
        {
          uint64_t v99 = (uint64_t)v379;
          swift_release();
          uint64_t v95 = v378;
          uint64_t v106 = v376;
          uint64_t v104 = (uint64_t)v372;
          goto LABEL_61;
        }
      }
      uint64_t v104 = (uint64_t)v372;
      unint64_t v124 = (unint64_t)v375;
      uint64_t v106 = v376;
      uint64_t v95 = v378;
      uint64_t v99 = (uint64_t)v379;
    }
    while (v375 != v372);
  }
  swift_release();
LABEL_61:
  sub_1004546B8((uint64_t)v371, v123, (uint64_t *)&unk_100A468B0);
  uint64_t v185 = type metadata accessor for SenderKeyAndState(0);
  v370 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v185[-1].isa;
  v371 = v185;
  if (((unsigned int (*)(uint64_t, uint64_t))v370[6])(v123, 1) != 1)
  {
    swift_release();
    sub_10044C150(v123, (uint64_t *)&unk_100A468B0);
    return swift_bridgeObjectRelease();
  }
  sub_10044C150(v123, (uint64_t *)&unk_100A468B0);
  unint64_t v186 = (unint64_t)_swiftEmptyArrayStorage;
  if (!v104)
  {
    uint64_t v191 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_116;
  }
  v378 = v95;
  if (v104 < 1)
  {
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  unint64_t v187 = v99 & 0xC000000000000001;
  uint64_t v188 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))&v352[6];
  v375 = v352 + 4;
  uint64_t v189 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v367 + 56);
  uint64_t v381 = v367 + 48;
  swift_retain();
  int v190 = 0;
  uint64_t v191 = (char *)_swiftEmptyArrayStorage;
  unint64_t v374 = (unint64_t)v189;
  do
  {
    if (v187)
    {
      uint64_t v192 = sub_100726A10();
    }
    else
    {
      uint64_t v192 = *(void *)(v99 + 8 * (void)v190 + 32);
      swift_retain();
    }
    sub_100495044();
    uint64_t v193 = v373;
    if ((*v188)(v106, 1, v373) == 1)
    {
      sub_10044C150(v106, &qword_100A47D80);
      unint64_t v194 = v365;
      uint64_t v195 = v380;
      (*v189)(v365, 1, 1, v380);
      uint64_t v196 = (uint64_t)v194;
      swift_release();
    }
    else
    {
      v377 = v191;
      uint64_t v197 = (void (*)(char *, char *, uint64_t))v375->isa;
      unint64_t v198 = v188;
      unint64_t v199 = v187;
      id v200 = v356;
      ((void (*)(char *, uint64_t, uint64_t))v375->isa)(v356, v106, v193);
      uint64_t v195 = v380;
      unint64_t v201 = v365;
      unint64_t v202 = (char *)v365 + *(int *)(v380 + 48);
      uint64_t *v365 = v192;
      uint64_t v196 = (uint64_t)v201;
      uint64_t v203 = v200;
      unint64_t v187 = v199;
      uint64_t v188 = v198;
      uint64_t v189 = (void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))v374;
      v197(v202, v203, v193);
      uint64_t v191 = v377;
      (*v189)((uint64_t *)v196, 0, 1, v195);
    }
    BOOL v204 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v381)(v196, 1, v195) == 1;
    uint64_t v99 = (uint64_t)v379;
    uint64_t v205 = v196;
    if (v204)
    {
      sub_10044C150(v196, &qword_100A48720);
      uint64_t v106 = v376;
    }
    else
    {
      uint64_t v206 = v355;
      sub_100462BE4(v205, v355, &qword_100A48728);
      sub_100462BE4(v206, v364, &qword_100A48728);
      char v207 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v106 = v376;
      if ((v207 & 1) == 0) {
        uint64_t v191 = (char *)sub_100571C90(0, *((void *)v191 + 2) + 1, 1, (unint64_t)v191);
      }
      unint64_t v209 = *((void *)v191 + 2);
      unint64_t v208 = *((void *)v191 + 3);
      if (v209 >= v208 >> 1) {
        uint64_t v191 = (char *)sub_100571C90(v208 > 1, v209 + 1, 1, (unint64_t)v191);
      }
      *((void *)v191 + 2) = v209 + 1;
      sub_100462BE4(v364, (uint64_t)&v191[((*(unsigned __int8 *)(v367 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v367 + 80))+ *(void *)(v367 + 72) * v209], &qword_100A48728);
    }
    int v190 = ((char *)v190 + 1);
  }
  while (v372 != v190);
  swift_release();
  uint64_t v95 = v378;
  unint64_t v186 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_116:
  swift_release();
  *(void *)&long long v382 = v191;
  swift_bridgeObjectRetain();
  sub_100572E14((void **)&v382);
  if (!v95)
  {
    uint64_t v95 = 0;
    swift_bridgeObjectRelease();
    v286 = (char *)v382;
    uint64_t v287 = *(void *)(v382 + 16);
    if (v287)
    {
      v378 = 0;
      *(void *)&long long v382 = _swiftEmptyArrayStorage;
      sub_100726A60();
      unint64_t v288 = (*(unsigned __int8 *)(v367 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v367 + 80);
      v377 = v286;
      uint64_t v289 = (uint64_t)&v286[v288];
      uint64_t v381 = *(void *)(v367 + 72);
      os_log_t v379 = v352 + 2;
      v290 = v352 + 1;
      uint64_t v291 = v373;
      v292 = v351;
      v293 = v350;
      do
      {
        sub_1004546B8(v289, (uint64_t)v293, &qword_100A48728);
        os_log_t v294 = v379;
        uint64_t v295 = *(int *)(v380 + 48);
        v296 = (char *)v292 + v295;
        void *v292 = *v293;
        ((void (*)(char *, char *, uint64_t))v294->isa)((char *)v292 + v295, (char *)v293 + v295, v291);
        v297 = (void (*)(char *, uint64_t))v290->isa;
        swift_retain();
        v297(v296, v291);
        sub_10044C150((uint64_t)v293, &qword_100A48728);
        sub_100726A40();
        sub_100726A70();
        sub_100726A80();
        sub_100726A50();
        v289 += v381;
        --v287;
      }
      while (v287);
      unint64_t v186 = v382;
      swift_release();
      uint64_t v95 = v378;
    }
    else
    {
      swift_release();
    }
    uint64_t v99 = v373;
    uint64_t v103 = v349;
    if (v186 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v340 = sub_100726BA0();
      swift_bridgeObjectRelease();
      if (v340)
      {
LABEL_124:
        if ((v186 & 0xC000000000000001) == 0)
        {
          if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            swift_retain();
            goto LABEL_127;
          }
          __break(1u);
LABEL_155:
          __break(1u);
          goto LABEL_156;
        }
LABEL_153:
        sub_100726A10();
LABEL_127:
        swift_bridgeObjectRelease();
        uint64_t v298 = type metadata accessor for SenderKeyDistributionManager(0);
        (*(void (**)(void))(v298 + 792))();
        v299 = v363;
        sub_100725CB0();
        os_log_t v107 = v348;
        sub_100725BD0();
        v300 = v352;
        v245 = (void (*)(char *, uint64_t))v352[1].isa;
        v245(v299, v99);
        sub_100495044();
        if (((unsigned int (*)(NSObject *, uint64_t, uint64_t))v300[6].isa)(v103, 1, v99) == 1) {
          goto LABEL_128;
        }
        v246 = v347;
        ((void (*)(char *, NSObject *, uint64_t))v300[4].isa)(v347, v103, v99);
        if (sub_100725BF0())
        {
          uint64_t v381 = (uint64_t)v245;
          v378 = v95;
          uint64_t v302 = sub_100491B94();
          os_log_t v379 = v303;
          uint64_t v380 = v302;
          uint64_t v304 = sub_10049188C();
          uint64_t v306 = v305;
          uint64_t v307 = (uint64_t)v363;
          sub_10049279C();
          uint64_t v308 = sub_100491E9C();
          uint64_t v310 = v309;
          uint64_t v311 = sub_100492198();
          uint64_t v313 = nullsub_37(v308, v310, v311, v312);
          uint64_t v342 = v314;
          v315 = v358;
          uint64_t v316 = v306;
          uint64_t v317 = v373;
          sub_1004BD074(v380, (uint64_t)v379, v304, v316, v307, v313, v318, v319, v358, v342);
          uint64_t v320 = sub_100492B94();
          uint64_t v321 = v357;
          sub_1004B7A38((uint64_t)v315, v320, v322, v357);
          ((void (*)(uint64_t, void, uint64_t, NSObject *))v370[7])(v321, 0, 1, v371);
          sub_10046E91C(v321, v345, (uint64_t *)&unk_100A468B0);
          v323 = v343;
          ((void (*)(char *, char *, uint64_t))v300[2].isa)(v343, v347, v317);
          swift_retain_n();
          v324 = sub_100725EB0();
          os_log_type_t v325 = sub_1007266E0();
          int v326 = v325;
          if (!os_log_type_enabled(v324, v325))
          {
            swift_release_n();

            v338 = (void (*)(char *, uint64_t))v381;
            ((void (*)(char *, uint64_t))v381)(v323, v317);
            swift_release();
            v338(v347, v317);
            v338((char *)v348, v317);
            return swift_bridgeObjectRelease();
          }
          uint64_t v327 = swift_slowAlloc();
          uint64_t v380 = swift_slowAlloc();
          *(void *)&long long v382 = v380;
          *(_DWORD *)uint64_t v327 = 136315394;
          sub_10057998C(&qword_100A459E8, (void (*)(uint64_t))&type metadata accessor for Date);
          os_log_t v379 = v324;
          uint64_t v328 = sub_100726D00();
          uint64_t v383 = sub_10043E578(v328, v329, (uint64_t *)&v382);
          LODWORD(v377) = v326;
          sub_100726830();
          swift_bridgeObjectRelease();
          v276 = (void (*)(char *, uint64_t))v381;
          ((void (*)(char *, uint64_t))v381)(v323, v317);
          *(_WORD *)(v327 + 12) = 2080;
          uint64_t v376 = v327 + 14;
          uint64_t v330 = sub_100492494();
          unint64_t v332 = v331;
          uint64_t v333 = sub_100725AA0();
          unint64_t v335 = v334;
          sub_100442248(v330, v332);
          uint64_t v383 = sub_10043E578(v333, v335, (uint64_t *)&v382);
          sub_100726830();
          swift_release_n();
          swift_bridgeObjectRelease();
          os_log_t v336 = v379;
          _os_log_impl((void *)&_mh_execute_header, v379, (os_log_type_t)v377, "Last active offgrid device was seen at: %s token: %s", (uint8_t *)v327, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_release();

          uint64_t v284 = v373;
          v276(v347, v373);
          v285 = &v380;
LABEL_132:
          v276((char *)*(v285 - 32), v284);
          return swift_bridgeObjectRelease();
        }
        goto LABEL_133;
      }
    }
    else if (*(void *)((v186 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_124;
    }
LABEL_147:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
LABEL_156:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_100556D90@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v207 = a3;
  uint64_t v204 = sub_100725CC0();
  uint64_t v197 = *(void *)(v204 - 8);
  uint64_t v7 = __chkstk_darwin(v204, v6);
  uint64_t v203 = (char *)&v181 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7, v9);
  uint64_t v206 = (char *)&v181 - v10;
  uint64_t v11 = type metadata accessor for SenderKeyAndState(0);
  uint64_t v12 = *(void **)(v11 - 8);
  uint64_t v214 = v11;
  id v215 = v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v187 = (uint64_t)&v181 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v196 = (uint64_t)&v181 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v182 = (uint64_t)&v181 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v183 = (uint64_t)&v181 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v185 = (uint64_t)&v181 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v186 = (uint64_t)&v181 - v30;
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v194 = (uint64_t)&v181 - v33;
  __chkstk_darwin(v32, v34);
  uint64_t v195 = (uint64_t)&v181 - v35;
  uint64_t v208 = sub_100431F80((uint64_t *)&unk_100A46D70);
  uint64_t v37 = __chkstk_darwin(v208, v36);
  uint64_t v184 = (uint64_t)&v181 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __chkstk_darwin(v37, v39);
  uint64_t v193 = (uint64_t)&v181 - v41;
  uint64_t v43 = __chkstk_darwin(v40, v42);
  uint64_t v201 = (uint64_t)&v181 - v44;
  __chkstk_darwin(v43, v45);
  uint64_t v210 = (uint64_t)&v181 - v46;
  uint64_t v47 = sub_100431F80((uint64_t *)&unk_100A468B0);
  uint64_t v49 = __chkstk_darwin(v47 - 8, v48);
  uint64_t v51 = (char *)&v181 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __chkstk_darwin(v49, v52);
  id v200 = (char *)&v181 - v54;
  uint64_t v56 = __chkstk_darwin(v53, v55);
  unint64_t v199 = (char *)&v181 - v57;
  uint64_t v59 = __chkstk_darwin(v56, v58);
  unint64_t v198 = (char *)&v181 - v60;
  uint64_t v62 = __chkstk_darwin(v59, v61);
  uint64_t v211 = (uint64_t)&v181 - v63;
  uint64_t v64 = *(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v3) + 0xD8);
  uint64_t v213 = v3;
  uint64_t v65 = (void *)v64(v62);
  sub_100431F80((uint64_t *)&unk_100A46840);
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_100797A20;
  *(void *)(v66 + 32) = a2;
  uint64_t v217 = v66;
  sub_100726590();
  sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
  id v67 = a2;
  Class isa = sub_100726560().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v69 = (void *)IDSServiceNameiMessage;
  sub_100431F80((uint64_t *)&unk_100A47F00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100794E30;
  *(void *)(inited + 32) = sub_100726430();
  *(void *)(inited + 40) = v71;
  id v72 = objc_allocWithZone((Class)NSNumber);
  id v73 = v69;
  uint64_t v74 = a1;
  id v75 = v73;
  *(void *)(inited + 48) = [v72 initWithInteger:1];
  sub_1004AB984(inited);
  sub_100462C50(0, (unint64_t *)&unk_100A468F0);
  Class v76 = sub_100726380().super.isa;
  swift_bridgeObjectRelease();
  id v77 = [v65 endpointsForURIs:isa service:v75 fromURI:v74 withCapabilities:v76];

  swift_unknownObjectRelease();
  unint64_t v202 = v51;
  if (v77)
  {
    sub_100431F80((uint64_t *)&unk_100A47F10);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    uint64_t v78 = sub_100726390();

    if (*(void *)(v78 + 16))
    {
      id v79 = v67;
      unint64_t v80 = sub_10047B0C4((uint64_t)v79);
      if (v81)
      {
        unint64_t v82 = *(void *)(*(void *)(v78 + 56) + 8 * v80);
        swift_bridgeObjectRetain();
      }
      else
      {
        unint64_t v82 = (unint64_t)_swiftEmptyArrayStorage;
      }
      uint64_t v83 = v215;
    }
    else
    {
      unint64_t v82 = (unint64_t)_swiftEmptyArrayStorage;
      uint64_t v83 = v215;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v82 = (unint64_t)_swiftEmptyArrayStorage;
    uint64_t v83 = v215;
  }
  uint64_t v84 = sub_10057CD80(v82);
  uint64_t v85 = &v213[OBJC_IVAR___IDSQuerySDPersistenceManager_logger];
  id v86 = v67;
  uint64_t v87 = v74;
  id v88 = v74;
  swift_bridgeObjectRetain_n();
  id v89 = v86;
  id v90 = v88;
  swift_bridgeObjectRetain();
  unint64_t v209 = v85;
  uint64_t v91 = sub_100725EB0();
  int v92 = sub_1007266E0();
  BOOL v93 = os_log_type_enabled(v91, (os_log_type_t)v92);
  uint64_t v212 = v84;
  if (v93)
  {
    LODWORD(v191) = v92;
    uint64_t v94 = swift_slowAlloc();
    uint64_t v95 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v94 = 138413058;
    uint64_t v217 = (uint64_t)v90;
    id v205 = v90;
    id v96 = v90;
    uint64_t v97 = v87;
    id v98 = v96;
    sub_100726830();
    *uint64_t v95 = v97;

    *(_WORD *)(v94 + 12) = 2112;
    uint64_t v217 = (uint64_t)v89;
    id v99 = v89;
    sub_100726830();
    uint64_t v192 = v95;
    v95[1] = v89;

    *(_WORD *)(v94 + 22) = 2048;
    if (v82 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v100 = sub_100726BA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v100 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v101 = v214;
    swift_bridgeObjectRelease();
    uint64_t v217 = v100;
    sub_100726830();
    swift_bridgeObjectRelease();
    *(_WORD *)(v94 + 32) = 2048;
    uint64_t v102 = *(void *)(v212 + 16);
    swift_bridgeObjectRelease();
    uint64_t v217 = v102;
    sub_100726830();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v91, (os_log_type_t)v191, "Determining usable sender key for senderURI: %@ receiverURI: %@ with %ld endpoints and %ld stewieCapableTokens", (uint8_t *)v94, 0x2Au);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v83 = v215;
    id v90 = v205;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    uint64_t v101 = v214;
  }
  uint64_t v103 = v213;
  id v104 = [v213 decryptingKeyIDsWithSenderURI:v89 receiverURI:v90];
  uint64_t v105 = sub_100726570();

  uint64_t v106 = *(void *)(v105 + 16);
  swift_bridgeObjectRelease();
  if (!v106)
  {
    swift_bridgeObjectRelease();
    id v141 = v89;
    uint64_t v142 = sub_100725EB0();
    os_log_type_t v143 = sub_1007266E0();
    if (os_log_type_enabled(v142, v143))
    {
      uint64_t v144 = (uint8_t *)swift_slowAlloc();
      uint64_t v145 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v144 = 138412290;
      uint64_t v217 = (uint64_t)v141;
      id v146 = v141;
      uint64_t v83 = v215;
      sub_100726830();
      *uint64_t v145 = v141;

      _os_log_impl((void *)&_mh_execute_header, v142, v143, "We've never received a key from %@ - returning nil", v144, 0xCu);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      uint64_t v101 = v214;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v83[7])(v207, 1, 1, v101);
  }
  uint64_t v108 = v83 + 7;
  os_log_t v107 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v83[7];
  v107(v211, 1, 1, v101);
  uint64_t v109 = v208;
  uint64_t v110 = v210;
  uint64_t v192 = (void *)(v210 + *(int *)(v208 + 48));
  id v205 = (id)(v210 + *(int *)(v208 + 64));
  uint64_t v111 = (uint64_t)v198;
  v107((uint64_t)v198, 1, 1, v101);
  uint64_t v190 = (uint64_t)v89;
  uint64_t v112 = (uint64_t)v199;
  v107((uint64_t)v199, 1, 1, v101);
  uint64_t v113 = v200;
  uint64_t v189 = v107;
  uint64_t v188 = v108;
  uint64_t v114 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v107)(v200, 1, 1, v101);
  uint64_t v191 = &v181;
  __chkstk_darwin(v114, v115);
  *(&v181 - 8) = (uint64_t)v103;
  *(&v181 - 7) = (uint64_t)v90;
  uint64_t v116 = (uint64_t)v192;
  uint64_t v117 = v212;
  *(&v181 - 6) = v190;
  *(&v181 - 5) = v117;
  *(&v181 - 4) = (uint64_t)v113;
  *(&v181 - 3) = v111;
  *(&v181 - 2) = v112;
  (*(void (**)(void, uint64_t (*)(uint64_t)))((swift_isaMask & *v103) + 0xE8))(0, sub_10057C694);
  sub_1004546B8(v111, v110, (uint64_t *)&unk_100A468B0);
  sub_1004546B8(v112, v116, (uint64_t *)&unk_100A468B0);
  uint64_t v118 = (uint64_t)v113;
  uint64_t v119 = (uint64_t)v205;
  sub_100462BE4(v118, (uint64_t)v205, (uint64_t *)&unk_100A468B0);
  sub_10044C150(v112, (uint64_t *)&unk_100A468B0);
  sub_10044C150(v111, (uint64_t *)&unk_100A468B0);
  swift_bridgeObjectRelease();
  uint64_t v120 = v201;
  uint64_t v121 = v201 + *(int *)(v109 + 48);
  uint64_t v122 = v201 + *(int *)(v109 + 64);
  sub_1004546B8(v110, v201, (uint64_t *)&unk_100A468B0);
  uint64_t v123 = v116;
  sub_1004546B8(v116, v121, (uint64_t *)&unk_100A468B0);
  sub_1004546B8(v119, v122, (uint64_t *)&unk_100A468B0);
  uint64_t v124 = v214;
  uint64_t v126 = (char *)(v215 + 6);
  BOOL v125 = (void *)v215[6];
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v125)(v120, 1, v214) != 1)
  {
    id v215 = v125;
    uint64_t v147 = v195;
    sub_100582194(v120, v195, type metadata accessor for SenderKeyAndState);
    sub_10044C150(v122, (uint64_t *)&unk_100A468B0);
    sub_10044C150(v121, (uint64_t *)&unk_100A468B0);
    uint64_t v148 = v194;
    sub_10057DDD8(v147, v194, type metadata accessor for SenderKeyAndState);
    uint64_t v149 = sub_100725EB0();
    os_log_type_t v150 = sub_1007266E0();
    if (os_log_type_enabled(v149, v150))
    {
      uint64_t v151 = (uint8_t *)swift_slowAlloc();
      uint64_t v217 = swift_slowAlloc();
      *(_DWORD *)uint64_t v151 = 136315138;
      uint64_t v152 = sub_100725B30(0);
      uint64_t v216 = sub_10043E578(v152, v153, &v217);
      uint64_t v124 = v214;
      sub_100726830();
      swift_bridgeObjectRelease();
      sub_10057DE40(v148, type metadata accessor for SenderKeyAndState);
      uint64_t v154 = "We found a usable key: %s is acked by all Stewie capable devices";
LABEL_30:
      _os_log_impl((void *)&_mh_execute_header, v149, v150, v154, v151, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
LABEL_32:

      uint64_t v158 = v211;
      sub_10044C150(v211, (uint64_t *)&unk_100A468B0);
      uint64_t v138 = v204;
      uint64_t v139 = v197;
      uint64_t v159 = v206;
      uint64_t v134 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v215;
      sub_100582194(v147, v158, type metadata accessor for SenderKeyAndState);
      v189(v158, 0, 1, v124);
      goto LABEL_33;
    }
LABEL_31:
    sub_10057DE40(v148, type metadata accessor for SenderKeyAndState);
    goto LABEL_32;
  }
  sub_10044C150(v122, (uint64_t *)&unk_100A468B0);
  sub_10044C150(v121, (uint64_t *)&unk_100A468B0);
  sub_10044C150(v120, (uint64_t *)&unk_100A468B0);
  uint64_t v127 = v193;
  uint64_t v128 = v193 + *(int *)(v208 + 48);
  uint64_t v129 = v193 + *(int *)(v208 + 64);
  sub_1004546B8(v110, v193, (uint64_t *)&unk_100A468B0);
  sub_1004546B8(v123, v128, (uint64_t *)&unk_100A468B0);
  sub_1004546B8((uint64_t)v205, v129, (uint64_t *)&unk_100A468B0);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v125)(v129, 1, v124) != 1)
  {
    id v215 = v125;
    uint64_t v147 = v186;
    sub_100582194(v129, v186, type metadata accessor for SenderKeyAndState);
    sub_10044C150(v128, (uint64_t *)&unk_100A468B0);
    sub_10044C150(v127, (uint64_t *)&unk_100A468B0);
    uint64_t v148 = v185;
    sub_10057DDD8(v147, v185, type metadata accessor for SenderKeyAndState);
    uint64_t v149 = sub_100725EB0();
    os_log_type_t v150 = sub_1007266E0();
    if (os_log_type_enabled(v149, v150))
    {
      uint64_t v151 = (uint8_t *)swift_slowAlloc();
      uint64_t v217 = swift_slowAlloc();
      *(_DWORD *)uint64_t v151 = 136315138;
      uint64_t v156 = sub_100725B30(0);
      uint64_t v216 = sub_10043E578(v156, v157, &v217);
      uint64_t v124 = v214;
      sub_100726830();
      swift_bridgeObjectRelease();
      sub_10057DE40(v148, type metadata accessor for SenderKeyAndState);
      uint64_t v154 = "We found a usable key: %s is acked by recently active device";
      goto LABEL_30;
    }
    goto LABEL_31;
  }
  sub_10044C150(v129, (uint64_t *)&unk_100A468B0);
  sub_10044C150(v128, (uint64_t *)&unk_100A468B0);
  sub_10044C150(v127, (uint64_t *)&unk_100A468B0);
  uint64_t v130 = v184 + *(int *)(v208 + 48);
  uint64_t v131 = v184 + *(int *)(v208 + 64);
  uint64_t v132 = v110;
  uint64_t v133 = v184;
  sub_1004546B8(v132, v184, (uint64_t *)&unk_100A468B0);
  sub_1004546B8(v123, v130, (uint64_t *)&unk_100A468B0);
  sub_1004546B8((uint64_t)v205, v131, (uint64_t *)&unk_100A468B0);
  id v215 = v126;
  uint64_t v134 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v125;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v125)(v130, 1, v124) == 1)
  {
    sub_10044C150(v131, (uint64_t *)&unk_100A468B0);
    sub_10044C150(v130, (uint64_t *)&unk_100A468B0);
    sub_10044C150(v133, (uint64_t *)&unk_100A468B0);
    uint64_t v135 = sub_100725EB0();
    os_log_type_t v136 = sub_1007266E0();
    BOOL v137 = os_log_type_enabled(v135, v136);
    uint64_t v138 = v204;
    uint64_t v139 = v197;
    if (v137)
    {
      uint64_t v140 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v140 = 0;
      _os_log_impl((void *)&_mh_execute_header, v135, v136, "We did not find any key", v140, 2u);
      swift_slowDealloc();
    }

    goto LABEL_45;
  }
  uint64_t v174 = v183;
  sub_100582194(v130, v183, type metadata accessor for SenderKeyAndState);
  sub_10044C150(v131, (uint64_t *)&unk_100A468B0);
  sub_10044C150(v133, (uint64_t *)&unk_100A468B0);
  uint64_t v175 = v182;
  sub_10057DDD8(v174, v182, type metadata accessor for SenderKeyAndState);
  uint64_t v176 = sub_100725EB0();
  os_log_type_t v177 = sub_1007266E0();
  if (!os_log_type_enabled(v176, v177))
  {
    sub_10057DE40(v175, type metadata accessor for SenderKeyAndState);

    sub_10057DE40(v174, type metadata accessor for SenderKeyAndState);
    uint64_t v138 = v204;
    uint64_t v139 = v197;
LABEL_45:
    uint64_t v159 = v206;
    uint64_t v158 = v211;
    uint64_t v124 = v214;
    goto LABEL_33;
  }
  uint64_t v178 = (uint8_t *)swift_slowAlloc();
  uint64_t v217 = swift_slowAlloc();
  *(_DWORD *)uint64_t v178 = 136315138;
  uint64_t v179 = sub_100725B30(0);
  uint64_t v216 = sub_10043E578(v179, v180, &v217);
  sub_100726830();
  swift_bridgeObjectRelease();
  sub_10057DE40(v175, type metadata accessor for SenderKeyAndState);
  _os_log_impl((void *)&_mh_execute_header, v176, v177, "We did not find a usable key: %s is not acked by all Stewie capable devices", v178, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

  uint64_t v124 = v214;
  sub_10057DE40(v174, type metadata accessor for SenderKeyAndState);
  uint64_t v138 = v204;
  uint64_t v139 = v197;
  uint64_t v159 = v206;
  uint64_t v158 = v211;
LABEL_33:
  uint64_t v160 = type metadata accessor for SenderKeyDistributionManager(0);
  (*(void (**)(void))(v160 + 720))();
  uint64_t v161 = v203;
  sub_100725CB0();
  sub_100725BD0();
  uint64_t v162 = *(void (**)(char *, uint64_t))(v139 + 8);
  v162(v161, v138);
  uint64_t v163 = (uint64_t)v202;
  sub_1004546B8(v158, (uint64_t)v202, (uint64_t *)&unk_100A468B0);
  if (v134(v163, 1, v124) == 1)
  {
    v162(v159, v138);
    sub_10044C150(v210, (uint64_t *)&unk_100A46D70);
    uint64_t v164 = (uint64_t *)&unk_100A468B0;
    uint64_t v165 = v163;
LABEL_39:
    sub_10044C150(v165, v164);
    return sub_100462BE4(v158, v207, (uint64_t *)&unk_100A468B0);
  }
  uint64_t v166 = v163;
  uint64_t v167 = v196;
  sub_100582194(v166, v196, type metadata accessor for SenderKeyAndState);
  type metadata accessor for SenderKeyInfo(0);
  if ((sub_100725C00() & 1) == 0)
  {
    sub_10057DE40(v167, type metadata accessor for SenderKeyAndState);
    v162(v159, v138);
    uint64_t v164 = (uint64_t *)&unk_100A46D70;
    uint64_t v165 = v210;
    goto LABEL_39;
  }
  uint64_t v168 = v187;
  sub_10057DDD8(v167, v187, type metadata accessor for SenderKeyAndState);
  uint64_t v169 = sub_100725EB0();
  os_log_type_t v170 = sub_1007266E0();
  if (os_log_type_enabled(v169, v170))
  {
    uint64_t v171 = (uint8_t *)swift_slowAlloc();
    uint64_t v217 = swift_slowAlloc();
    *(_DWORD *)uint64_t v171 = 136315138;
    uint64_t v172 = sub_100725B30(0);
    uint64_t v216 = sub_10043E578(v172, v173, &v217);
    sub_100726830();
    swift_bridgeObjectRelease();
    sub_10057DE40(v168, type metadata accessor for SenderKeyAndState);
    _os_log_impl((void *)&_mh_execute_header, v169, v170, "Found key %s is expired - returning nil", v171, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v124 = v214;
    sub_10057DE40(v196, type metadata accessor for SenderKeyAndState);
    v162(v206, v204);
  }
  else
  {

    sub_10057DE40(v168, type metadata accessor for SenderKeyAndState);
    sub_10057DE40(v167, type metadata accessor for SenderKeyAndState);
    v162(v206, v138);
  }
  sub_10044C150(v210, (uint64_t *)&unk_100A46D70);
  sub_10044C150(v211, (uint64_t *)&unk_100A468B0);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v189)(v207, 1, 1, v124);
}

uint64_t sub_10055862C(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v9 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = &v16[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = a1;
  uint64_t v20 = a2;
  char v21 = a3;
  v22[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  v22[0] = _swiftEmptyArrayStorage;
  uint64_t v17 = v22;
  uint64_t v18 = v13;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v4) + 0xE8))(a4, sub_100583878, v16);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  return v22[0];
}

uint64_t sub_100558930@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, int a4@<W3>, uint64_t *a5@<X8>)
{
  int v67 = a4;
  uint64_t v55 = a3;
  id v73 = a5;
  uint64_t v7 = sub_100431F80(&qword_100A48200);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v69 = v7;
  uint64_t v70 = v8;
  __chkstk_darwin(v7, v9);
  uint64_t v65 = (char *)v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100431F80(&qword_100A48208);
  uint64_t v68 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v11);
  uint64_t v61 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A48210);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v71 = v13;
  uint64_t v72 = v14;
  __chkstk_darwin(v13, v15);
  uint64_t v64 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100431F80(&qword_100A48670);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v59 = v17;
  uint64_t v60 = v18;
  __chkstk_darwin(v17, v19);
  char v21 = (char *)v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100431F80(&qword_100A48218);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22, v24);
  uint64_t v26 = (char *)v52 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100431F80(&qword_100A48220);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v56 = v27;
  uint64_t v57 = v28;
  __chkstk_darwin(v27, v29);
  uint64_t v31 = (char *)v52 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100431F80(&qword_100A48678);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v62 = v32;
  uint64_t v63 = v33;
  __chkstk_darwin(v32, v34);
  uint64_t v58 = (char *)v52 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = *a1;
  sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v36 = *(void (**)(char *, uint64_t))(v23 + 8);
  v52[1] = v23 + 8;
  uint64_t v53 = v36;
  v36(v26, v22);
  uint64_t v74 = a2;
  id v75 = v55;
  sub_1007259F0();
  uint64_t v55 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  sub_1004D10A4(&qword_100A48258, &qword_100A48220);
  sub_1004D10A4(&qword_100A48680, &qword_100A48670);
  sub_1005805CC();
  uint64_t v37 = v56;
  uint64_t v38 = v59;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v21, v38);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v37);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v39 = v61;
  sub_100725980();
  swift_release();
  v53(v26, v22);
  LOBYTE(v74) = v67;
  uint64_t v40 = v65;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48270, &qword_100A48208);
  sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  uint64_t v41 = v64;
  uint64_t v42 = v40;
  uint64_t v43 = v66;
  uint64_t v44 = v69;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v42, v44);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v43);
  uint64_t v45 = sub_100431F80(&qword_100A48710);
  uint64_t v46 = v73;
  v73[3] = v45;
  v46[4] = sub_100582118();
  sub_10044D5C4(v46);
  sub_1004D10A4(&qword_100A486B0, &qword_100A48678);
  sub_1004D10A4(&qword_100A48288, &qword_100A48210);
  uint64_t v47 = v58;
  uint64_t v48 = v41;
  uint64_t v49 = v62;
  uint64_t v50 = v71;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v48, v50);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v47, v49);
}

void *sub_10055907C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = a3;
  uint64_t v24 = a4;
  v25[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  v25[0] = _swiftEmptyArrayStorage;
  char v21 = v25;
  uint64_t v22 = v15;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v5) + 0xE8))(a5, sub_100583878, v20);
  sub_100441FD4(a1, a2);
  unint64_t v16 = swift_bridgeObjectRetain();
  uint64_t v17 = sub_10057A2DC(v16, a1, a2);
  sub_100442248(a1, a2);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1005593C4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, uint64_t)@<X3>, int a5@<W4>, uint64_t *a6@<X8>)
{
  int v67 = a5;
  uint64_t v60 = a4;
  uint64_t v54 = a3;
  id v73 = a6;
  uint64_t v8 = sub_100431F80(&qword_100A48200);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  uint64_t v70 = v9;
  __chkstk_darwin(v8, v10);
  uint64_t v65 = (char *)v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_100431F80(&qword_100A48208);
  uint64_t v68 = *(void *)(v66 - 8);
  __chkstk_darwin(v66, v12);
  uint64_t v61 = (char *)v53 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A48210);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v71 = v14;
  uint64_t v72 = v15;
  __chkstk_darwin(v14, v16);
  uint64_t v64 = (char *)v53 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100431F80(&qword_100A48060);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v58 = v18;
  uint64_t v59 = v19;
  __chkstk_darwin(v18, v20);
  uint64_t v22 = (char *)v53 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100431F80(&qword_100A48218);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)v53 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100431F80(&qword_100A48310);
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v55 = v28;
  uint64_t v56 = v29;
  __chkstk_darwin(v28, v30);
  uint64_t v32 = (char *)v53 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100431F80(&qword_100A48628);
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v62 = v33;
  uint64_t v63 = v34;
  __chkstk_darwin(v33, v35);
  uint64_t v57 = (char *)v53 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  void v53[2] = *a1;
  sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v24 + 8);
  v53[1] = v24 + 8;
  uint64_t v60 = v37;
  v37(v27, v23);
  uint64_t v74 = a2;
  uint64_t v75 = v54;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48348, &qword_100A48310);
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v38 = v55;
  uint64_t v39 = v58;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v22, v39);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v32, v38);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v40 = v61;
  sub_100725980();
  swift_release();
  v60(v27, v23);
  LOBYTE(v74) = v67;
  uint64_t v41 = v65;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48270, &qword_100A48208);
  sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  uint64_t v42 = v64;
  uint64_t v43 = v41;
  uint64_t v44 = v66;
  uint64_t v45 = v69;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v70 + 8))(v43, v45);
  (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v44);
  uint64_t v46 = sub_100431F80(&qword_100A48700);
  uint64_t v47 = v73;
  v73[3] = v46;
  v47[4] = sub_10058209C();
  sub_10044D5C4(v47);
  sub_1004D10A4(&qword_100A48638, &qword_100A48628);
  sub_1004D10A4(&qword_100A48288, &qword_100A48210);
  uint64_t v48 = v57;
  uint64_t v49 = v42;
  uint64_t v50 = v62;
  uint64_t v51 = v71;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v49, v51);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v48, v50);
}

unint64_t sub_100559B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100431F80(&qword_100A47F20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = a1;
  v21[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0);
  sub_100725D70();
  v21[0] = &_swiftEmptyArrayStorage;
  unsigned int v19 = 0;
  char v20 = 1;
  uint64_t v15 = v21;
  uint64_t v16 = v9;
  uint64_t v17 = &v19;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v2) + 0xE8))(a2, sub_10057D0EC, v14);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  uint64_t v10 = v19;
  unsigned __int8 v11 = v20;
  swift_bridgeObjectRelease();
  return v10 | ((unint64_t)v11 << 32);
}

uint64_t sub_100559E38@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v3 = sub_100431F80(&qword_100A486C0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  uint64_t v22 = v4;
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100431F80(&qword_100A48430);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A486C8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A48440, &qword_100A48430);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  uint64_t v23 = v20;
  sub_1007259F0();
  a2[3] = sub_100431F80(&qword_100A486D0);
  a2[4] = sub_100581FE0();
  sub_10044D5C4(a2);
  sub_1004D10A4(&qword_100A486F0, &qword_100A486C8);
  sub_1004D10A4(&qword_100A486F8, &qword_100A486C0);
  uint64_t v18 = v21;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
}

uint64_t sub_10055A178(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v25 = a4;
  uint64_t v26 = a2;
  uint64_t v6 = sub_100431F80((uint64_t *)&unk_100A48420);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A486B8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A47F20);
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v9, a3, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v9, 0, 1, v15);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0);
  sub_10057998C(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_1007261B0();
  uint64_t v17 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  if (!v4)
  {
    uint64_t v19 = v25;
    uint64_t v20 = v26;
    *uint64_t v26 = v17;
    swift_bridgeObjectRelease();
    uint64_t v21 = *v20;
    if ((unint64_t)*v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_100726BA0();
      uint64_t v22 = result;
      if (result) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v22)
      {
LABEL_4:
        if ((v21 & 0xC000000000000001) != 0)
        {
          sub_100726A10();
        }
        else
        {
          if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          swift_retain();
        }
        swift_bridgeObjectRelease();
        int v23 = sub_100495F50();
        uint64_t result = swift_release();
        goto LABEL_10;
      }
    }
    uint64_t result = swift_bridgeObjectRelease();
    int v23 = 0;
LABEL_10:
    *(_DWORD *)uint64_t v19 = v23;
    *(unsigned char *)(v19 + 4) = v22 == 0;
  }
  return result;
}

void *sub_10055A478(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = _swiftEmptyArrayStorage;
  v4[2] = &v5;
  (*(void (**)(uint64_t, uint64_t, void *))((swift_isaMask & *v2) + 0xE8))(a1, a2, v4);
  return v5;
}

uint64_t sub_10055A65C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100431F80((uint64_t *)&unk_100A481F0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100431F80(&qword_100A48308);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v7, 1, 1, v13);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_1007261B0();
  uint64_t v14 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  if (!v2)
  {
    *a2 = v14;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10055A858(uint64_t a1, uint64_t a2)
{
  v4[2] = a2;
  v4[3] = a1;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v2) + 0xE8))(0, sub_10057D128, v4);
  return 1;
}

uint64_t sub_10055AA40(uint64_t a1, unint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t v78 = sub_100725CC0();
  uint64_t v9 = *(void *)(v78 - 8);
  __chkstk_darwin(v78, v10);
  id v77 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for SenderKeyAndState(0);
  __chkstk_darwin(v12, v13);
  uint64_t v76 = (uint64_t)v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100726BA0();
    if (v15)
    {
LABEL_3:
      v60[0] = v4;
      uint64_t v16 = type metadata accessor for SenderKeyInfo(0);
      uint64_t v17 = *(int *)(v16 + 28);
      uint64_t result = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
      uint64_t v75 = result;
      if (v15 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v87 = 0;
      uint64_t v71 = (uint64_t *)((char *)a3 + v17);
      uint64_t v70 = (uint64_t)a3 + *(int *)(v16 + 24);
      uint64_t v20 = *(int *)(v12 + 20);
      id v79 = a3;
      uint64_t v69 = (uint64_t *)((char *)a3 + v20);
      uint64_t v68 = a4 + OBJC_IVAR___IDSQuerySDPersistenceManager_logger;
      unint64_t v67 = a2 & 0xC000000000000001;
      uint64_t v66 = IDSRegistrationPropertySupportsStewie;
      uint64_t v62 = &v89;
      uint64_t v65 = (void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      *(void *)&long long v19 = 136315906;
      long long v61 = v19;
      v60[1] = (char *)&type metadata for Any + 8;
      unint64_t v73 = a2;
      uint64_t v74 = a1;
      uint64_t v72 = v15;
      do
      {
        if (v67) {
          id v33 = (id)sub_100726A10();
        }
        else {
          id v33 = *(id *)(a2 + 8 * v87 + 32);
        }
        uint64_t v34 = v33;
        uint64_t v35 = v79;
        id v36 = [v33 capabilities];
        id v37 = [v36 valueForCapability:v66];

        uint64_t v39 = *v71;
        unint64_t v38 = v71[1];
        uint64_t v40 = v71[2];
        unint64_t v41 = v71[3];
        uint64_t v42 = v76;
        sub_10057DDD8((uint64_t)v35, v76, type metadata accessor for SenderKeyAndState);
        unint64_t v86 = v38;
        swift_bridgeObjectRetain_n();
        unint64_t v85 = v41;
        swift_bridgeObjectRetain_n();
        id v43 = v34;
        uint64_t v44 = sub_100725EB0();
        os_log_type_t v45 = sub_1007266E0();
        int v46 = v45;
        BOOL v47 = os_log_type_enabled(v44, v45);
        uint64_t v83 = v40;
        id v84 = v43;
        uint64_t v82 = v39;
        if (v47)
        {
          uint64_t v48 = swift_slowAlloc();
          uint64_t v64 = (void *)swift_slowAlloc();
          uint64_t v81 = swift_slowAlloc();
          uint64_t v90 = v81;
          *(_DWORD *)uint64_t v48 = v61;
          LODWORD(v80) = v46;
          uint64_t v50 = *(void *)(v42 + 16);
          unint64_t v49 = *(void *)(v42 + 24);
          sub_100441FD4(v50, v49);
          uint64_t v51 = v42;
          uint64_t v52 = sub_100725AA0();
          os_log_t v63 = v44;
          id v53 = v37;
          unint64_t v55 = v54;
          sub_100442248(v50, v49);
          uint64_t v88 = sub_10043E578(v52, v55, &v90);
          sub_100726830();
          id v37 = v53;
          swift_bridgeObjectRelease();
          sub_10057DE40(v51, type metadata accessor for SenderKeyAndState);
          *(_WORD *)(v48 + 12) = 2080;
          unint64_t v56 = v86;
          swift_bridgeObjectRetain();
          uint64_t v88 = sub_10043E578(v39, v56, &v90);
          sub_100726830();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v48 + 22) = 2080;
          unint64_t v57 = v85;
          swift_bridgeObjectRetain();
          uint64_t v88 = sub_10043E578(v83, v57, &v90);
          sub_100726830();
          id v43 = v84;
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v48 + 32) = 2112;
          id v58 = [v43 pushTokenObject];
          uint64_t v88 = (uint64_t)v58;
          sub_100726830();
          *uint64_t v64 = v58;

          os_log_t v59 = v63;
          _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v80, "Saving generated sender key and state with keyID: %s senderURI: %s receiverURI: %s receiverPushToken: %@", (uint8_t *)v48, 0x2Au);
          sub_100431F80(&qword_100A44F10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v35 = v79;
          swift_slowDealloc();
        }
        else
        {

          sub_10057DE40(v42, type metadata accessor for SenderKeyAndState);
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease_n();
        }
        unint64_t v21 = v87 + 1;
        LODWORD(v81) = (uint64_t)v37 > 0;
        uint64_t v22 = v35[2];
        uint64_t v87 = v35[3];
        uint64_t v23 = *v35;
        unint64_t v24 = v35[1];
        sub_100441FD4(v22, v87);
        sub_100441FD4(v23, v24);
        id v25 = [v43 pushToken];
        uint64_t v80 = sub_100725B50();
        unint64_t v27 = v26;

        uint64_t v28 = (uint64_t)v77;
        (*v65)(v77, v70, v78);
        uint64_t v29 = *v69;
        unint64_t v30 = v69[1];
        sub_100441FD4(*v69, v30);
        char v31 = sub_100041150();
        char v32 = sub_100041150();
        sub_100495944(v22, v87, v23, v24, v82, v86, v83, v85, v80, v27, v28, v29, v30, 1u, v31 & 1, v81, v32 & 1);
        sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
        sub_100726150();

        swift_release();
        a2 = v73;
        uint64_t v87 = v21;
      }
      while (v72 != v21);
      swift_bridgeObjectRelease();
      uint64_t result = sub_1007260F0();
      if (result) {
        return sub_100726100();
      }
      return result;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t result = sub_1007260F0();
  if (result) {
    return sub_100726100();
  }
  return result;
}

uint64_t sub_10055B1B8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v4;
  void v9[3] = a2;
  v9[4] = a1;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v4;
  v10[3] = a2;
  v10[4] = a1;
  v10[5] = a3;
  v10[6] = a4;
  uint64_t v11 = *(void (**)(uint64_t (*)(uint64_t), void *, id (*)(uint64_t), void *))((swift_isaMask & *v4) + 0xE0);
  uint64_t v12 = v4;
  swift_bridgeObjectRetain_n();
  id v13 = a1;
  uint64_t v14 = v12;
  id v15 = v13;
  sub_10057D228(a3);
  v11(sub_10057D190, v9, sub_10057D218, v10);
  swift_release();

  return swift_release();
}

uint64_t sub_10055B2FC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_100431F80(&qword_100A47D80);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (char *)&v25 - v13;
  id v15 = [a4 rawToken];
  uint64_t v16 = sub_100725B50();
  unint64_t v18 = v17;

  unint64_t v19 = sub_10054FF18(a3, v16, v18, a1);
  uint64_t result = sub_100442248(v16, v18);
  if (!(v19 >> 62))
  {
    uint64_t v21 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v21) {
      goto LABEL_3;
    }
LABEL_14:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_100726BA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v21) {
    goto LABEL_14;
  }
LABEL_3:
  if (v21 >= 1)
  {
    for (uint64_t i = 0; i != v21; ++i)
    {
      if ((v19 & 0xC000000000000001) != 0) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      sub_1004935E0();
      sub_1004936B0();
      uint64_t v23 = sub_100725CC0();
      uint64_t v24 = *(void *)(v23 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v14, 1, v23) == 1)
      {
        sub_10044C150((uint64_t)v14, &qword_100A47D80);
        sub_100725C80();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v11, 0, 1, v23);
        sub_100493A5C((uint64_t)v11);
        swift_release();
      }
      else
      {
        swift_release();
        sub_10044C150((uint64_t)v14, &qword_100A47D80);
      }
    }
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_10055B5A4(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v27 = sub_100725EF0();
  uint64_t v30 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v12);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100725F20();
  uint64_t v28 = *(void *)(v15 - 8);
  uint64_t v29 = v15;
  __chkstk_darwin(v15, v16);
  unint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)im_primary_queue();
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a1;
    v21[3] = a2;
    v21[4] = a3;
    v21[5] = a4;
    v21[6] = a5;
    v21[7] = a6;
    aBlock[4] = sub_100581CEC;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100435714;
    aBlock[3] = &unk_100990CB0;
    uint64_t v22 = _Block_copy(aBlock);
    swift_errorRetain();
    id v23 = a2;
    swift_bridgeObjectRetain();
    id v24 = a4;
    sub_10057D228(a5);
    sub_100725F00();
    char v31 = _swiftEmptyArrayStorage;
    sub_10057998C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    uint64_t v25 = v27;
    sub_100726890();
    sub_100726750();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v14, v25);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v18, v29);
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10055B8B4(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v7;
  v15[3] = a1;
  v15[4] = a2;
  v15[5] = a3;
  v15[6] = a4;
  v15[7] = a5;
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v7;
  v16[3] = a3;
  v16[4] = a1;
  v16[5] = a2;
  v16[6] = a6;
  v16[7] = a7;
  id v24 = *(void (**)(uint64_t (*)(uint64_t), void *, id (*)(uint64_t), void *))((swift_isaMask & *v7) + 0xE0);
  uint64_t v17 = v7;
  id v18 = a1;
  id v19 = a2;
  swift_bridgeObjectRetain_n();
  uint64_t v20 = v17;
  id v21 = v18;
  id v22 = v19;
  swift_bridgeObjectRetain();
  sub_10057D228(a6);
  v24(sub_10057D290, v15, sub_10057D31C, v16);
  swift_release();

  return swift_release();
}

uint64_t sub_10055BA2C(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v26 = a5;
  uint64_t v8 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = [a3 prefixedURI];
  uint64_t v13 = sub_100726430();
  uint64_t v15 = v14;

  id v16 = [a4 prefixedURI];
  uint64_t v17 = sub_100726430();
  uint64_t v19 = v18;

  unint64_t v20 = sub_1005511CC(v13, v15, v17, v19, v26, a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v20 >> 62))
  {
    uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22) {
      goto LABEL_3;
    }
LABEL_11:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_100726BA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v22) {
    goto LABEL_11;
  }
LABEL_3:
  if (v22 >= 1)
  {
    uint64_t v23 = 0;
    do
    {
      if ((v20 & 0xC000000000000001) != 0) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      ++v23;
      sub_1004941B8();
      sub_100725C80();
      uint64_t v24 = sub_100725CC0();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v11, 0, 1, v24);
      sub_100494F70((uint64_t)v11);
      swift_bridgeObjectRetain();
      sub_100494AE0();
      swift_release();
    }
    while (v22 != v23);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

id sub_10055BC98(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v30 = sub_100725EF0();
  uint64_t v33 = *(void *)(v30 - 8);
  __chkstk_darwin(v30, v14);
  id v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100725F20();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  __chkstk_darwin(v17, v18);
  unint64_t v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)im_primary_queue();
  id v29 = result;
  if (result)
  {
    uint64_t v22 = (void *)swift_allocObject();
    void v22[2] = a1;
    v22[3] = a2;
    v22[4] = a3;
    void v22[5] = a4;
    v22[6] = a5;
    v22[7] = a6;
    v22[8] = a7;
    aBlock[4] = sub_100581940;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100435714;
    aBlock[3] = &unk_100990C60;
    uint64_t v23 = _Block_copy(aBlock);
    swift_errorRetain();
    id v24 = a2;
    swift_bridgeObjectRetain();
    id v25 = a4;
    id v26 = a5;
    sub_10057D228(a6);
    sub_100725F00();
    uint64_t v34 = _swiftEmptyArrayStorage;
    sub_10057998C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    uint64_t v27 = v30;
    sub_100726890();
    uint64_t v28 = v29;
    sub_100726750();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v16, v27);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v32);
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10055BFB4(void *a1, void *a2, void *a3)
{
  return sub_10055C030(a1, a2, a3, (uint64_t)&unk_1009900A8, (uint64_t)&unk_1009900D0, (uint64_t)sub_10057D330, (uint64_t)sub_10057D3AC);
}

uint64_t sub_10055BFF4(void *a1, void *a2, void *a3)
{
  return sub_10055C030(a1, a2, a3, (uint64_t)&unk_1009900F8, (uint64_t)&unk_100990120, (uint64_t)sub_10057D404, (uint64_t)sub_10057D498);
}

uint64_t sub_10055C030(void *a1, id a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v11 = [a2 prefixedURI];
  uint64_t v30 = sub_100726430();
  uint64_t v13 = v12;

  id v14 = [a3 prefixedURI];
  uint64_t v15 = sub_100726430();
  uint64_t v17 = v16;

  id v18 = [a1 rawToken];
  uint64_t v19 = sub_100725B50();
  unint64_t v21 = v20;

  uint64_t v22 = (void *)swift_allocObject();
  void v22[2] = v30;
  v22[3] = v13;
  v22[4] = v15;
  void v22[5] = v17;
  v22[6] = v19;
  v22[7] = v21;
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = v7;
  v23[3] = a1;
  v23[4] = a3;
  v23[5] = a2;
  id v24 = *(void (**)(uint64_t, void *, uint64_t, void *))((swift_isaMask & *v7) + 0xE0);
  sub_100441FD4(v19, v21);
  id v25 = v7;
  id v26 = a1;
  id v27 = a3;
  id v28 = a2;
  v24(a6, v22, a7, v23);
  swift_release();
  swift_release();

  return sub_100442248(v19, v21);
}

uint64_t sub_10055C1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(char *))
{
  uint64_t v44 = a8;
  uint64_t v46 = a1;
  uint64_t v41 = a6;
  uint64_t v42 = a7;
  uint64_t v40 = a5;
  uint64_t v12 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v15 = (char *)&v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100431F80((uint64_t *)&unk_100A481F0);
  __chkstk_darwin(v16 - 8, v17);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100431F80(&qword_100A48308);
  uint64_t v43 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v20);
  uint64_t v22 = (char *)&v40 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  id v27 = (char *)&v40 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = a2;
  uint64_t v49 = a3;
  uint64_t v50 = a4;
  uint64_t v51 = v40;
  uint64_t v52 = v41;
  uint64_t v53 = v42;
  uint64_t v54 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v19, v27, v23);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v19, 0, 1, v23);
  sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_1007261B0();
  id v28 = v47;
  unint64_t v29 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v22, v45);
  if (v28) {
    return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  }
  BOOL v47 = v27;
  uint64_t v31 = v24;
  if (v29 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = sub_100726BA0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v33 = v23;
  uint64_t v34 = v31;
  uint64_t v35 = v47;
  if (v32)
  {
    if (v32 < 1)
    {
      __break(1u);
      return result;
    }
    if ((v29 & 0xC000000000000001) != 0)
    {
      uint64_t v36 = 0;
      do
      {
        sub_100726A10();
        ++v36;
        sub_100725C80();
        uint64_t v37 = sub_100725CC0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v15, 0, 1, v37);
        a9(v15);
        swift_unknownObjectRelease();
      }
      while (v32 != v36);
    }
    else
    {
      uint64_t v38 = 0;
      do
      {
        ++v38;
        swift_retain();
        sub_100725C80();
        uint64_t v39 = sub_100725CC0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v15, 0, 1, v39);
        a9(v15);
        swift_release();
      }
      while (v32 != v38);
    }
    swift_bridgeObjectRelease();
    uint64_t v35 = v47;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v35, v33);
}

uint64_t sub_10055C684@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X2>, void *a4@<X3>, void *a5@<X4>, void *a6@<X5>, void *a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v111 = a6;
  uint64_t v112 = a7;
  uint64_t v97 = a5;
  id v96 = a4;
  uint64_t v122 = a2;
  uint64_t v123 = a3;
  uint64_t v118 = a8;
  uint64_t v9 = sub_100431F80(&qword_100A48670);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v114 = v9;
  uint64_t v115 = v10;
  __chkstk_darwin(v9, v11);
  uint64_t v109 = (char *)v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100431F80(&qword_100A48220);
  uint64_t v113 = *(void *)(v110 - 8);
  __chkstk_darwin(v110, v13);
  os_log_t v107 = (char *)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A48678);
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v116 = v15;
  uint64_t v117 = v16;
  __chkstk_darwin(v15, v17);
  uint64_t v108 = (char *)v83 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_100431F80(&qword_100A48200);
  uint64_t v105 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v19);
  id v98 = (char *)v83 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_100431F80(&qword_100A48208);
  uint64_t v100 = *(void *)(v99 - 8);
  __chkstk_darwin(v99, v21);
  uint64_t v94 = (char *)v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100431F80(&qword_100A48210);
  uint64_t v104 = *(void *)(v101 - 8);
  __chkstk_darwin(v101, v23);
  uint64_t v95 = (char *)v83 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100431F80(&qword_100A48060);
  uint64_t v127 = *(void **)(v88 - 8);
  __chkstk_darwin(v88, v25);
  id v27 = (char *)v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100431F80(&qword_100A48218);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v30);
  uint64_t v32 = (char *)v83 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100431F80(&qword_100A48310);
  uint64_t v126 = *(void *)(v33 - 8);
  __chkstk_darwin(v33, v34);
  uint64_t v36 = (char *)v83 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100431F80(&qword_100A48628);
  uint64_t v90 = *(void *)(v89 - 8);
  uint64_t v38 = __chkstk_darwin(v89, v37);
  uint64_t v87 = (char *)v83 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38, v40);
  unint64_t v85 = (char *)v83 - v41;
  uint64_t v92 = sub_100431F80(&qword_100A48630);
  uint64_t v93 = *(void *)(v92 - 8);
  __chkstk_darwin(v92, v42);
  uint64_t v124 = (char *)v83 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100431F80(&qword_100A48640);
  uint64_t v106 = *(void *)(v103 - 8);
  __chkstk_darwin(v103, v44);
  uint64_t v91 = (char *)v83 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = *a1;
  uint64_t v125 = sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v120 = *(void (**)(char *, uint64_t))(v29 + 8);
  uint64_t v121 = v29 + 8;
  uint64_t v46 = v28;
  v120(v32, v28);
  uint64_t v128 = v122;
  uint64_t v129 = v123;
  BOOL v47 = v27;
  sub_1007259F0();
  uint64_t v123 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  v83[2] = sub_1004D10A4(&qword_100A48348, &qword_100A48310);
  uint64_t v122 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  v83[1] = sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v48 = v36;
  uint64_t v49 = v33;
  uint64_t v50 = v88;
  sub_100725970();
  uint64_t v51 = (void (*)(char *, uint64_t))v127[1];
  ++v127;
  v51(v47, v50);
  uint64_t v52 = *(void (**)(char *, uint64_t))(v126 + 8);
  v126 += 8;
  v52(v36, v49);
  uint64_t v84 = v46;
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v53 = v120;
  v120(v32, v46);
  uint64_t v128 = v96;
  uint64_t v129 = v97;
  sub_1007259F0();
  uint64_t v54 = v87;
  sub_100725970();
  v51(v47, v50);
  v52(v48, v49);
  uint64_t v127 = &protocol conformance descriptor for PredicateExpressions.Equal<A, B>;
  sub_1004D10A4(&qword_100A48638, &qword_100A48628);
  unint64_t v55 = v85;
  uint64_t v56 = v89;
  sub_1007259C0();
  unint64_t v57 = *(void (**)(char *, uint64_t))(v90 + 8);
  v57(v54, v56);
  v57(v55, v56);
  id v58 = v32;
  unint64_t v86 = v32;
  uint64_t v59 = v84;
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v60 = v94;
  sub_100725980();
  swift_release();
  v53(v58, v59);
  LOBYTE(v128) = 1;
  long long v61 = v98;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48270, &qword_100A48208);
  sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  uint64_t v62 = v95;
  os_log_t v63 = v61;
  uint64_t v64 = v99;
  uint64_t v65 = v102;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v63, v65);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v60, v64);
  sub_1004D10A4(&qword_100A48660, &qword_100A48630);
  sub_1004D10A4(&qword_100A48288, &qword_100A48210);
  uint64_t v66 = v91;
  unint64_t v67 = v124;
  uint64_t v68 = v62;
  uint64_t v69 = v92;
  uint64_t v70 = v101;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v104 + 8))(v68, v70);
  (*(void (**)(char *, uint64_t))(v93 + 8))(v67, v69);
  uint64_t v71 = v86;
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v72 = v107;
  sub_100725980();
  swift_release();
  v120(v71, v59);
  uint64_t v128 = v111;
  uint64_t v129 = v112;
  unint64_t v73 = v109;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48258, &qword_100A48220);
  sub_1004D10A4(&qword_100A48680, &qword_100A48670);
  sub_1005805CC();
  uint64_t v74 = v108;
  uint64_t v75 = v73;
  uint64_t v76 = v110;
  uint64_t v77 = v114;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v115 + 8))(v75, v77);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v72, v76);
  uint64_t v78 = sub_100431F80(&qword_100A48688);
  id v79 = v118;
  v118[3] = v78;
  v79[4] = sub_100581744();
  sub_10044D5C4(v79);
  sub_1004D10A4(&qword_100A486A8, &qword_100A48640);
  sub_1004D10A4(&qword_100A486B0, &qword_100A48678);
  uint64_t v80 = v103;
  uint64_t v81 = v116;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v117 + 8))(v74, v81);
  return (*(uint64_t (**)(char *, uint64_t))(v106 + 8))(v66, v80);
}

uint64_t sub_10055D4A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = a3;
  v7[3] = v3;
  long long v7[4] = a1;
  v7[5] = a2;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v3;
  v8[3] = a3;
  v8[4] = a1;
  v8[5] = a2;
  uint64_t v9 = *(void (**)(uint64_t (*)(uint64_t), void *, void (*)(uint64_t), void *))((swift_isaMask & *v3) + 0xE0);
  swift_bridgeObjectRetain_n();
  uint64_t v10 = v3;
  id v11 = a1;
  id v12 = a2;
  uint64_t v13 = v10;
  id v14 = v11;
  id v15 = v12;
  v9(sub_10057D7B4, v7, sub_10057D834, v8);
  swift_release();

  return swift_release();
}

uint64_t sub_10055D5D8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v9 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v9 - 8, v10);
  id v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v13 = [a4 prefixedURI];
    uint64_t v14 = sub_100726430();
    uint64_t v16 = v15;

    id v17 = [a5 prefixedURI];
    uint64_t v18 = sub_100726430();
    uint64_t v20 = v19;

    unint64_t v21 = sub_1005511CC(v14, v16, v18, v20, a2, a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_100726BA0();
      swift_bridgeObjectRelease();
      if (!v22)
      {
LABEL_23:
        return swift_bridgeObjectRelease();
      }
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v22) {
        goto LABEL_23;
      }
    }
    if (v22 >= 1)
    {
      uint64_t v23 = 0;
      do
      {
        if ((v21 & 0xC000000000000001) != 0) {
          sub_100726A10();
        }
        else {
          swift_retain();
        }
        ++v23;
        sub_1004941B8();
        sub_1004935E0();
        uint64_t v24 = sub_100725CC0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 1, 1, v24);
        sub_100493A5C((uint64_t)v12);
        swift_release();
      }
      while (v22 != v23);
      return swift_bridgeObjectRelease();
    }
    __break(1u);
  }
  else
  {
    id v25 = [a4 prefixedURI];
    uint64_t v26 = sub_100726430();
    uint64_t v28 = v27;

    id v29 = [a5 prefixedURI];
    uint64_t v30 = sub_100726430();
    uint64_t v32 = v31;

    unint64_t v21 = sub_100550B34(v26, v28, v30, v32, a1);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (!(v21 >> 62))
    {
      uint64_t v34 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v34) {
        goto LABEL_23;
      }
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_100726BA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v34) {
    goto LABEL_23;
  }
LABEL_12:
  if (v34 >= 1)
  {
    uint64_t v35 = 0;
    do
    {
      if ((v21 & 0xC000000000000001) != 0) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      ++v35;
      sub_1004941B8();
      sub_1004935E0();
      uint64_t v36 = sub_100725CC0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v12, 1, 1, v36);
      sub_100493A5C((uint64_t)v12);
      swift_release();
    }
    while (v34 != v35);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10055D994(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[2] = a1;
  long long v5[4] = a2;
  v5[5] = a3;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v3) + 0xE8))(0, sub_10057DC58, v5);
  return 1;
}

uint64_t sub_10055DB7C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v60 = a1;
  unint64_t v58 = a5;
  uint64_t v59 = a4;
  uint64_t v6 = sub_100725CC0();
  uint64_t v56 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v7);
  unint64_t v57 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = type metadata accessor for SenderKeyAndState(0);
  __chkstk_darwin(v55, v9);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for SenderKeyInfo(0);
  id v12 = (uint64_t *)((char *)a2 + *(int *)(v54 + 28));
  uint64_t v14 = *v12;
  unint64_t v13 = v12[1];
  uint64_t v16 = v12[2];
  unint64_t v15 = v12[3];
  sub_10057DDD8((uint64_t)a2, (uint64_t)v11, type metadata accessor for SenderKeyAndState);
  unint64_t v63 = v13;
  swift_bridgeObjectRetain_n();
  unint64_t v62 = v15;
  swift_bridgeObjectRetain_n();
  id v17 = sub_100725EB0();
  os_log_type_t v18 = sub_1007266E0();
  int v19 = v18;
  BOOL v20 = os_log_type_enabled(v17, v18);
  uint64_t v53 = v14;
  uint64_t v61 = v16;
  if (v20)
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v52 = swift_slowAlloc();
    uint64_t v65 = v52;
    *(_DWORD *)uint64_t v21 = 136315650;
    LODWORD(v51) = v19;
    uint64_t v22 = v14;
    uint64_t v49 = v21 + 4;
    uint64_t v23 = v6;
    uint64_t v24 = *((void *)v11 + 2);
    unint64_t v25 = *((void *)v11 + 3);
    sub_100441FD4(v24, v25);
    uint64_t v26 = sub_100725AA0();
    os_log_t v50 = v17;
    unint64_t v28 = v27;
    unint64_t v29 = v25;
    uint64_t v6 = v23;
    sub_100442248(v24, v29);
    uint64_t v64 = sub_10043E578(v26, v28, &v65);
    sub_100726830();
    swift_bridgeObjectRelease();
    sub_10057DE40((uint64_t)v11, type metadata accessor for SenderKeyAndState);
    *(_WORD *)(v21 + 12) = 2080;
    unint64_t v30 = v63;
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_10043E578(v22, v30, &v65);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v21 + 22) = 2080;
    unint64_t v31 = v62;
    swift_bridgeObjectRetain();
    uint64_t v64 = sub_10043E578(v61, v31, &v65);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    os_log_t v32 = v50;
    _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v51, "Saving received sender key and state with keyID: %s senderURI: %s receiverURI: %s", (uint8_t *)v21, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_10057DE40((uint64_t)v11, type metadata accessor for SenderKeyAndState);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v33 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  unint64_t v35 = a2[3];
  uint64_t v51 = a2[2];
  uint64_t v34 = v51;
  uint64_t v52 = v33;
  unint64_t v37 = a2[1];
  uint64_t v49 = *a2;
  uint64_t v36 = v49;
  os_log_t v50 = (os_log_t)v35;
  uint64_t v38 = (uint64_t)v57;
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v57, (char *)a2 + *(int *)(v54 + 24), v6);
  uint64_t v39 = (uint64_t *)((char *)a2 + *(int *)(v55 + 20));
  uint64_t v40 = *v39;
  unint64_t v41 = v39[1];
  sub_100441FD4(v34, v35);
  sub_100441FD4(v36, v37);
  unint64_t v43 = v58;
  uint64_t v42 = v59;
  sub_100441FD4(v59, v58);
  sub_100441FD4(v40, v41);
  char v44 = sub_100041150();
  char v45 = sub_100041150();
  LOBYTE(v35) = sub_100041150();
  char v46 = sub_100041150();
  sub_100495944(v51, (unint64_t)v50, v49, v37, v53, v63, v61, v62, v42, v43, v38, v40, v41, v44 & 1, v45 & 1, v35 & 1, v46 & 1);
  sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726150();
  if (sub_1007260F0()) {
    sub_100726100();
  }
  return swift_release();
}

uint64_t sub_10055E09C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  LOBYTE(v14) = 1;
  uint64_t v8 = a1;
  uint64_t v9 = a2;
  char v10 = a3;
  uint64_t v11 = &v14;
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  (*(void (**)(void, unint64_t (*)(uint64_t), unsigned char *))((swift_isaMask & *v5) + 0xE8))(0, sub_10057DC78, v7);
  return v14;
}

void *sub_10055E39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _swiftEmptyArrayStorage;
  v5[3] = a1;
  long long v5[4] = a2;
  v5[5] = a3;
  void v5[6] = &v6;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v3) + 0xE8))(0, sub_10057DDAC, v5);
  return v6;
}

uint64_t sub_10055E434(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, unint64_t *a6)
{
  uint64_t v65 = a6;
  uint64_t v10 = sub_100725CC0();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v64 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SenderKeyInfo(0);
  __chkstk_darwin(v13 - 8, v14);
  unint64_t v63 = (uint64_t *)((char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = type metadata accessor for SenderKeyAndState(0);
  uint64_t v62 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16 - 8, v17);
  BOOL v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18, v21);
  uint64_t v23 = (char *)&v58 - v22;
  id v24 = [a5 prefixedURI];
  uint64_t v25 = sub_100726430();
  uint64_t v27 = v26;

  unint64_t v28 = (unint64_t)sub_10055907C(a3, a4, v25, v27, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (!(v28 >> 62))
  {
    uint64_t v30 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v30) {
      goto LABEL_3;
    }
LABEL_15:
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = sub_100726BA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_15;
  }
LABEL_3:
  if (v30 >= 1)
  {
    uint64_t v31 = 0;
    unint64_t v59 = v28 & 0xC000000000000001;
    unint64_t v60 = v28;
    uint64_t v61 = v20;
    uint64_t v58 = v30;
    uint64_t v32 = (uint64_t)v64;
    do
    {
      if (v59) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      uint64_t v33 = sub_100491B94();
      uint64_t v35 = v34;
      uint64_t v36 = sub_10049188C();
      uint64_t v38 = v37;
      sub_10049279C();
      uint64_t v39 = sub_100491E9C();
      uint64_t v41 = v40;
      uint64_t v42 = sub_100492198();
      uint64_t v44 = nullsub_37(v39, v41, v42, v43);
      char v45 = v63;
      sub_1004BD074(v33, v35, v36, v38, v32, v44, v46, v47, v63, v48);
      uint64_t v49 = sub_100492B94();
      sub_1004B7A38((uint64_t)v45, v49, v50, (uint64_t)v23);
      uint64_t v51 = (uint64_t)v61;
      sub_10057DDD8((uint64_t)v23, (uint64_t)v61, type metadata accessor for SenderKeyAndState);
      uint64_t v52 = v65;
      unint64_t v53 = *v65;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v52 = v53;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v53 = sub_100571F00(0, *(void *)(v53 + 16) + 1, 1, v53, &qword_100A48668, type metadata accessor for SenderKeyAndState, type metadata accessor for SenderKeyAndState);
        *uint64_t v65 = v53;
      }
      uint64_t v55 = v58;
      unint64_t v57 = *(void *)(v53 + 16);
      unint64_t v56 = *(void *)(v53 + 24);
      if (v57 >= v56 >> 1)
      {
        unint64_t v53 = sub_100571F00(v56 > 1, v57 + 1, 1, v53, &qword_100A48668, type metadata accessor for SenderKeyAndState, type metadata accessor for SenderKeyAndState);
        *uint64_t v65 = v53;
      }
      ++v31;
      *(void *)(v53 + 16) = v57 + 1;
      sub_100582194(v51, v53+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v57, type metadata accessor for SenderKeyAndState);
      swift_release();
      sub_10057DE40((uint64_t)v23, type metadata accessor for SenderKeyAndState);
    }
    while (v55 != v31);
    return swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_10055E8DC@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_100556D90(a2, a1, a3);
}

uint64_t sub_10055E8EC(uint64_t a1, uint64_t a2)
{
  unsigned __int8 v5 = 0;
  v4[3] = a1;
  void v4[4] = a2;
  void v4[5] = &v5;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v2) + 0xE8))(0, sub_10057DEA0, v4);
  return v5;
}

uint64_t *sub_10055E978(void *a1, void *a2)
{
  uint64_t v5 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v22[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = [a1 prefixedURI];
  uint64_t v11 = sub_100726430();
  uint64_t v13 = v12;

  id v14 = [a2 prefixedURI];
  uint64_t v15 = sub_100726430();
  uint64_t v17 = v16;

  uint64_t v25 = v11;
  uint64_t v26 = v13;
  uint64_t v27 = v15;
  uint64_t v28 = v17;
  v29[1] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v29[0] = &_swiftEmptySetSingleton;
  uint64_t v23 = v9;
  id v24 = v29;
  (*(void (**)(void, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v2) + 0xE8))(0, sub_10057DF88, v22);
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = sub_1005722C4(v18);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRelease();
  return v19;
}

uint64_t sub_10055ECD8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v38 = a3;
  uint64_t v5 = sub_100431F80((uint64_t *)&unk_100A481F0);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48308);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a2, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_1007261B0();
  unint64_t v16 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (!v3)
  {
    uint64_t v18 = v38;
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_100726BA0();
      uint64_t v19 = result;
    }
    else
    {
      uint64_t v19 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
    }
    BOOL v20 = v18;
    v37[1] = 0;
    if (v19)
    {
      if (v19 < 1)
      {
        __break(1u);
        return result;
      }
      if ((v16 & 0xC000000000000001) != 0)
      {
        uint64_t v21 = 0;
        uint64_t v22 = _swiftEmptyArrayStorage;
        do
        {
          sub_100726A10();
          uint64_t v23 = sub_10049188C();
          uint64_t v25 = v24;
          swift_unknownObjectRelease();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v22 = sub_1004BE840(0, v22[2] + 1, 1, v22);
          }
          unint64_t v27 = v22[2];
          unint64_t v26 = v22[3];
          if (v27 >= v26 >> 1) {
            uint64_t v22 = sub_1004BE840((void *)(v26 > 1), v27 + 1, 1, v22);
          }
          ++v21;
          void v22[2] = v27 + 1;
          uint64_t v28 = &v22[2 * v27];
          v28[4] = v23;
          void v28[5] = v25;
          BOOL v20 = v18;
        }
        while (v19 != v21);
      }
      else
      {
        unint64_t v30 = v16 + 32;
        uint64_t v22 = _swiftEmptyArrayStorage;
        do
        {
          swift_retain();
          uint64_t v31 = sub_10049188C();
          uint64_t v33 = v32;
          swift_release();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v22 = sub_1004BE840(0, v22[2] + 1, 1, v22);
          }
          unint64_t v35 = v22[2];
          unint64_t v34 = v22[3];
          if (v35 >= v34 >> 1) {
            uint64_t v22 = sub_1004BE840((void *)(v34 > 1), v35 + 1, 1, v22);
          }
          void v22[2] = v35 + 1;
          uint64_t v36 = &v22[2 * v35];
          v36[4] = v31;
          v36[5] = v33;
          v30 += 8;
          --v19;
          BOOL v20 = v18;
        }
        while (v19);
      }
    }
    else
    {
      uint64_t v22 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease_n();
    uint64_t v29 = sub_1004CCCD4((uint64_t)v22);
    swift_bridgeObjectRelease();
    uint64_t *v20 = v29;
    return swift_bridgeObjectRelease();
  }
  return result;
}

BOOL sub_10055F18C(void *a1, void *a2)
{
  uint64_t v4 = sub_100431F80((uint64_t *)&unk_100A468B0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100556D90(a2, a1, (uint64_t)v7);
  uint64_t v8 = type metadata accessor for SenderKeyAndState(0);
  BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) != 1;
  sub_10044C150((uint64_t)v7, (uint64_t *)&unk_100A468B0);
  return v9;
}

BOOL sub_10055F274(uint64_t a1)
{
  char v4 = 0;
  v3[3] = a1;
  v3[4] = &v4;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v1) + 0xE8))(0, sub_10057DFA4, v3);
  return (v4 & 1) == 0;
}

uint64_t sub_10055F308(uint64_t a1, uint64_t a2, void *a3, BOOL *a4)
{
  uint64_t v7 = sub_100725CC0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v29 - v14;
  id v16 = [a3 prefixedURI];
  uint64_t v17 = sub_100726430();
  uint64_t v19 = v18;

  uint64_t v20 = sub_100550E3C(v17, v19, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v20)
  {
    sub_100725CB0();
    sub_100725C50();
    double v23 = v22;
    uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
    v24(v15, v7);
    sub_10049279C();
    sub_100725C50();
    double v26 = v25;
    v24(v12, v7);
    double v27 = v23 - v26;
    double v28 = *(double *)sub_1004AA9C0();
    uint64_t result = swift_release();
    *a4 = v28 < v27;
  }
  return result;
}

uint64_t sub_10055F4BC(void *a1, unint64_t a2)
{
  uint64_t v4 = sub_100431F80((uint64_t *)&unk_100A468B0);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62) {
    goto LABEL_13;
  }
  uint64_t v8 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v8; uint64_t v8 = sub_100726BA0())
  {
    uint64_t v9 = 4;
    while (1)
    {
      id v10 = (a2 & 0xC000000000000001) != 0 ? (id)sub_100726A10() : *(id *)(a2 + 8 * v9);
      uint64_t v11 = v10;
      uint64_t v12 = v9 - 3;
      if (__OFADD__(v9 - 4, 1)) {
        break;
      }
      sub_100556D90(v10, a1, (uint64_t)v7);

      uint64_t v13 = type metadata accessor for SenderKeyAndState(0);
      int v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v7, 1, v13);
      sub_10044C150((uint64_t)v7, (uint64_t *)&unk_100A468B0);
      if (v14 != 1)
      {
        swift_bridgeObjectRelease();
        return 1;
      }
      ++v9;
      if (v12 == v8) {
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_13:
    swift_bridgeObjectRetain();
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_10055F6E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_100725CC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a3, 1, 1, v7);
  id v10 = v3;
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  uint64_t v13 = a3;
  return (*(uint64_t (**)(void, uint64_t (*)(uint64_t), uint64_t *))((swift_isaMask & *v3) + 0xE8))(0, sub_10057DFD4, &v9);
}

uint64_t sub_10055F7BC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5)
{
  uint64_t v30 = a5;
  uint64_t v9 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = [a3 prefixedURI];
  uint64_t v14 = sub_100726430();
  uint64_t v16 = v15;

  id v17 = [a4 prefixedURI];
  uint64_t v18 = sub_100726430();
  uint64_t v20 = v19;

  uint64_t v21 = sub_100550B34(v14, v16, v18, v20, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v21 < 0 || (v21 & 0x4000000000000000) != 0)
  {
    unint64_t v25 = swift_bridgeObjectRetain();
    uint64_t v22 = (uint64_t)sub_1005721CC(v25);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v22 = v21 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
  }
  uint64_t v31 = v22;
  sub_100572EC0(&v31);
  if (v5) {
    goto LABEL_18;
  }
  swift_bridgeObjectRelease();
  uint64_t v23 = v31;
  if (v31 < 0 || (v31 & 0x4000000000000000) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_100726BA0();
    swift_release();
    if (v26) {
      goto LABEL_8;
    }
LABEL_14:
    swift_release();
    uint64_t v27 = sub_100725CC0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v12, 1, 1, v27);
    return sub_10046E91C((uint64_t)v12, v30, &qword_100A47D80);
  }
  if (!*(void *)(v31 + 16)) {
    goto LABEL_14;
  }
LABEL_8:
  if ((v23 & 0xC000000000000001) != 0)
  {
    sub_100726A10();
    goto LABEL_11;
  }
  if (*(void *)(v23 + 16))
  {
    swift_retain();
LABEL_11:
    swift_release();
    sub_10049279C();
    swift_release();
    uint64_t v24 = sub_100725CC0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v12, 0, 1, v24);
    return sub_10046E91C((uint64_t)v12, v30, &qword_100A47D80);
  }
  __break(1u);
LABEL_18:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_10055FA50(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a5;
  uint64_t v10 = sub_100725CC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v10);
  unint64_t v14 = (*(unsigned __int8 *)(v11 + 80) + 28) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(_DWORD *)(v15 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v15 + v14, (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  uint64_t v16 = (void *)swift_allocObject();
  void v16[2] = v5;
  v16[3] = a4;
  v16[4] = v21;
  id v17 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, id (*)(uint64_t), void *))((swift_isaMask & *v5) + 0xE0);
  uint64_t v18 = v5;
  sub_10057D228(a4);
  v17(sub_10057E084, v15, sub_10057E0FC, v16);
  swift_release();
  return swift_release();
}

uint64_t sub_10055FC34(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7 = sub_100725CC0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a4, v7);
  sub_1004966C4(a2, a3, v11);
  sub_10057998C(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100726150();
  return swift_release();
}

uint64_t sub_10055FD84(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a2;
  v11[4] = a3;
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v5;
  void v12[3] = a4;
  v12[4] = a5;
  uint64_t v13 = *(void (**)(void (*)(), void *, id (*)(uint64_t), void *))((swift_isaMask & *v5)
                                                                                          + 0xE0);
  swift_bridgeObjectRetain();
  id v14 = a2;
  uint64_t v15 = v5;
  swift_retain();
  v13(sub_10057E180, v11, sub_10057E51C, v12);
  swift_release();

  return swift_release();
}

unint64_t sub_10055FEA8()
{
  uint64_t v1 = sub_100431F80(&qword_100A47F28);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = &v8[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v12 = sub_10053D438((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v11 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(0);
  sub_100725D70();
  uint64_t v9 = v5;
  uint64_t v10 = &v12;
  (*(void (**)(void, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v0) + 0xE8))(0, sub_10057E560, v8);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  return v12;
}

uint64_t sub_100560174@<X0>(uint64_t *a1@<X8>)
{
  double v28 = a1;
  uint64_t v1 = sub_1007259E0();
  uint64_t v26 = *(void *)(v1 - 8);
  uint64_t v27 = v1;
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A485B0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A485B8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  id v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A485C0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)&v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A485C8, &qword_100A485B8);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  uint64_t v31 = 0;
  sub_1007259F0();
  uint64_t v21 = v26;
  uint64_t v20 = v27;
  (*(void (**)(char *, void, uint64_t))(v26 + 104))(v4, enum case for PredicateExpressions.ComparisonOperator.greaterThan(_:), v27);
  uint64_t v22 = sub_100431F80(&qword_100A485D0);
  uint64_t v23 = v28;
  uint64_t v28[3] = v22;
  v23[4] = sub_1005810BC();
  sub_10044D5C4(v23);
  sub_1004D10A4(&qword_100A485F8, &qword_100A485C0);
  sub_1004D10A4(&qword_100A48600, &qword_100A485B0);
  uint64_t v24 = v29;
  sub_1007259B0();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v20);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_100560570(uint64_t a1, uint64_t a2, char ***a3)
{
  uint64_t v49 = a3;
  uint64_t v5 = sub_100431F80(&qword_100A48560);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48568);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A47F28);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a2, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(0);
  sub_10057998C((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_1007261B0();
  unint64_t v16 = sub_100726110();
  uint64_t v17 = v3;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (!v3)
  {
    uint64_t isUniquelyReferenced_nonNull_native = v16;
    if (v16 >> 62)
    {
LABEL_35:
      swift_bridgeObjectRetain_n();
      uint64_t v20 = sub_100726BA0();
      swift_bridgeObjectRelease();
      uint64_t v48 = v17;
      if (v20) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v20 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v48 = 0;
      if (v20)
      {
LABEL_4:
        unint64_t v53 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
        uint64_t v21 = (char **)&_swiftEmptyDictionarySingleton;
        uint64_t v22 = 4;
        uint64_t v23 = &IDSRegistrationPropertySupportsAVLess_ptr;
        uint64_t v50 = isUniquelyReferenced_nonNull_native;
        uint64_t v52 = v20;
        while (1)
        {
          uint64_t v24 = v22 - 4;
          if (v53)
          {
            uint64_t v25 = sub_100726A10();
            uint64_t v26 = v22 - 3;
            if (__OFADD__(v24, 1)) {
              goto LABEL_32;
            }
          }
          else
          {
            uint64_t v25 = swift_retain();
            uint64_t v26 = v22 - 3;
            if (__OFADD__(v24, 1))
            {
LABEL_32:
              __break(1u);
LABEL_33:
              __break(1u);
LABEL_34:
              __break(1u);
              goto LABEL_35;
            }
          }
          uint64_t v55 = v21;
          uint64_t v27 = v25;
          sub_100497074();
          id v28 = objc_allocWithZone((Class)v23[488]);
          NSString v29 = sub_100726420();
          uint64_t v17 = &selRef_identityClassA;
          swift_bridgeObjectRelease();
          id v30 = [v28 initWithPrefixedURI:v29];

          if (!v30) {
            break;
          }
          uint64_t v54 = v26;
          sub_100496D78();
          id v31 = objc_allocWithZone((Class)v23[488]);
          NSString v32 = sub_100726420();
          swift_bridgeObjectRelease();
          uint64_t v17 = (char **)[v31 initWithPrefixedURI:v32];

          if (!v17)
          {
            swift_release();

            uint64_t isUniquelyReferenced_nonNull_native = v50;
            uint64_t v23 = &IDSRegistrationPropertySupportsAVLess_ptr;
            uint64_t v26 = v54;
            goto LABEL_6;
          }
          uint64_t v51 = v27;
          id v33 = v30;
          unint64_t v34 = v17;
          uint64_t v17 = v55;
          uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v56 = v17;
          unint64_t v36 = sub_10047B0C4((uint64_t)v33);
          uint64_t v37 = v17[2];
          BOOL v38 = (v35 & 1) == 0;
          uint64_t v39 = (uint64_t)&v37[v38];
          uint64_t v26 = v54;
          if (__OFADD__(v37, v38)) {
            goto LABEL_33;
          }
          char v40 = v35;
          if ((uint64_t)v17[3] >= v39)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_10057808C();
            }
          }
          else
          {
            sub_1005777EC(v39, isUniquelyReferenced_nonNull_native);
            sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
            unint64_t v41 = sub_10047B0C4((uint64_t)v33);
            if ((v40 & 1) != (v42 & 1))
            {
              uint64_t result = sub_100726D40();
              __break(1u);
              return result;
            }
            unint64_t v36 = v41;
          }
          uint64_t v21 = v56;
          swift_bridgeObjectRelease();
          uint64_t isUniquelyReferenced_nonNull_native = v50;
          if (v40)
          {
            swift_bridgeObjectRetain();
          }
          else
          {
            v21[(v36 >> 6) + 8] = (char *)((unint64_t)v21[(v36 >> 6) + 8] | (1 << v36));
            uint64_t v43 = 8 * v36;
            *(void *)&v21[6][v43] = v33;
            *(void *)&v21[7][v43] = _swiftEmptyArrayStorage;
            uint64_t v44 = v21[2];
            char v45 = v44 + 1;
            uint64_t v17 = (char **)__OFADD__(v44, 1);
            swift_bridgeObjectRetain();
            if (v17) {
              goto LABEL_34;
            }
            void v21[2] = v45;
            id v46 = v33;
          }
          uint64_t v47 = v21[7];
          swift_bridgeObjectRelease();
          uint64_t v17 = (char **)&v47[8 * v36];
          sub_100726550();
          if (*(void *)(((unint64_t)*v17 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)*v17 & 0xFFFFFFFFFFFFFF8)
                                                                                               + 0x18) >> 1)
            sub_1007265A0();
          sub_1007265C0();
          sub_100726590();
          swift_release();

          uint64_t v23 = &IDSRegistrationPropertySupportsAVLess_ptr;
LABEL_7:
          ++v22;
          if (v26 == v52) {
            goto LABEL_37;
          }
        }
        swift_release();
LABEL_6:
        uint64_t v21 = v55;
        goto LABEL_7;
      }
    }
    uint64_t v21 = (char **)&_swiftEmptyDictionarySingleton;
LABEL_37:
    swift_bridgeObjectRelease_n();
    *uint64_t v49 = v21;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100560B18()
{
  uint64_t v0 = sub_100431F80((uint64_t *)&unk_100A481F0);
  __chkstk_darwin(v0 - 8, v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  uint64_t v4 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726130();
  return sub_10044C150((uint64_t)v3, (uint64_t *)&unk_100A481F0);
}

id sub_100560C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v22 = a5;
  uint64_t v23 = a6;
  uint64_t v9 = sub_100725EF0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100725F20();
  uint64_t v14 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v15);
  uint64_t v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)im_primary_queue();
  if (result)
  {
    uint64_t v19 = result;
    uint64_t v20 = (void *)swift_allocObject();
    v20[2] = a1;
    v20[3] = a2;
    v20[4] = a3;
    aBlock[4] = v22;
    aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100435714;
    aBlock[3] = v23;
    uint64_t v21 = _Block_copy(aBlock);
    swift_errorRetain();
    swift_retain();
    sub_100725F00();
    uint64_t v25 = _swiftEmptyArrayStorage;
    sub_10057998C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    sub_100726890();
    sub_100726750();
    _Block_release(v21);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v24);
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_100561044()
{
  uint64_t v3 = _swiftEmptyArrayStorage;
  v2[2] = &v3;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v0) + 0xE8))(0, sub_10057E5F4, v2);
  return v3;
}

uint64_t sub_100561234(uint64_t a1, void *a2)
{
  uint64_t v70 = a1;
  uint64_t v3 = sub_100725CC0();
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v68 = (uint64_t)v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A48590);
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v66 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for IDSRegistrationEventStruct();
  uint64_t v58 = *(void *)(v65 - 8);
  uint64_t v14 = __chkstk_darwin(v65, v13);
  uint64_t v67 = (uint64_t)v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)v56 - v17;
  uint64_t v19 = sub_100431F80(&qword_100A48180);
  __chkstk_darwin(v19 - 8, v20);
  uint64_t v22 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100431F80((uint64_t *)&unk_100A48598);
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)v56 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100431F80(&qword_100A48188);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v22, 1, 1, v28);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent(0);
  sub_10057998C(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_1007261B0();
  uint64_t v29 = v71;
  unint64_t v30 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v27, v23);
  if (!v29)
  {
    unint64_t v57 = v18;
    if (v30 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_100726BA0();
      uint64_t v32 = result;
    }
    else
    {
      uint64_t v32 = *(void *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
    }
    v56[1] = 0;
    if (v32)
    {
      if (v32 < 1)
      {
        __break(1u);
        return result;
      }
      uint64_t v33 = 0;
      unint64_t v60 = (void (**)(char *, void, uint64_t, uint64_t))(v58 + 56);
      unint64_t v61 = v30 & 0xC000000000000001;
      unint64_t v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
      uint64_t v69 = _swiftEmptyArrayStorage;
      unint64_t v63 = v30;
      uint64_t v64 = a2;
      uint64_t v62 = v32;
      do
      {
        if (v61) {
          sub_100726A10();
        }
        else {
          swift_retain();
        }
        uint64_t v71 = sub_100497F70();
        uint64_t v70 = v34;
        sub_10049826C();
        sub_100498618();
        uint64_t v35 = sub_100498AD0();
        uint64_t v36 = sub_100498E48();
        uint64_t v37 = (uint64_t)v9;
        uint64_t v38 = sub_1004991C0();
        uint64_t v40 = v39;
        uint64_t v41 = sub_10049950C();
        uint64_t v43 = v42;
        uint64_t v44 = sub_100497BF8();
        uint64_t v55 = v41;
        uint64_t v9 = (char *)v37;
        uint64_t v45 = v35;
        id v46 = v66;
        sub_100537DE4(v71, v70, v37, v68, v45, v36, v38, v40, v66, v55, v43, v44);
        uint64_t v47 = v65;
        (*v60)(v46, 0, 1, v65);
        swift_release();
        if ((*v59)(v46, 1, v47) == 1)
        {
          sub_10044C150((uint64_t)v46, &qword_100A48590);
          a2 = v64;
        }
        else
        {
          uint64_t v48 = (uint64_t)v57;
          sub_100582194((uint64_t)v46, (uint64_t)v57, (uint64_t (*)(void))type metadata accessor for IDSRegistrationEventStruct);
          sub_100582194(v48, v67, (uint64_t (*)(void))type metadata accessor for IDSRegistrationEventStruct);
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          a2 = v64;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            uint64_t v69 = (void *)sub_100571F00(0, v69[2] + 1, 1, (unint64_t)v69, (uint64_t *)&unk_100A47EB0, (uint64_t (*)(void))type metadata accessor for IDSRegistrationEventStruct, (uint64_t (*)(void))type metadata accessor for IDSRegistrationEventStruct);
          }
          uint64_t v50 = v58;
          unint64_t v52 = v69[2];
          unint64_t v51 = v69[3];
          uint64_t v53 = v67;
          if (v52 >= v51 >> 1)
          {
            uint64_t v69 = (void *)sub_100571F00(v51 > 1, v52 + 1, 1, (unint64_t)v69, (uint64_t *)&unk_100A47EB0, (uint64_t (*)(void))type metadata accessor for IDSRegistrationEventStruct, (uint64_t (*)(void))type metadata accessor for IDSRegistrationEventStruct);
            uint64_t v53 = v67;
          }
          uint64_t v54 = v69;
          void v69[2] = v52 + 1;
          sub_100582194(v53, (uint64_t)v54+ ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v52, (uint64_t (*)(void))type metadata accessor for IDSRegistrationEventStruct);
        }
        ++v33;
      }
      while (v62 != v33);
    }
    else
    {
      uint64_t v69 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease_n();
    *a2 = v69;
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_1005618D8(uint64_t a1)
{
  uint64_t v3 = sub_100431F80((uint64_t *)&unk_100A468B0);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v55 = 0xD00000000000002ELL;
  unint64_t v56 = 0x80000001008C5C30;
  unint64_t v54 = (unint64_t)_swiftEmptyArrayStorage;
  if (a1)
  {
    uint64_t v42 = 0;
    unint64_t v9 = swift_bridgeObjectRetain();
    uint64_t v10 = v1;
    uint64_t v11 = sub_100481658(v9, (unint64_t *)&unk_100A47EC0, (uint64_t)IDSURI_ptr, (unint64_t *)&unk_100A46850, &qword_100A459E0);
    swift_bridgeObjectRelease();
    uint64_t v12 = sub_1005723AC(v11, (unint64_t *)&unk_100A47EC0, (uint64_t)IDSURI_ptr, (unint64_t *)&unk_100A46850);
    swift_bridgeObjectRelease();
    unint64_t v54 = (unint64_t)v12;
  }
  else
  {
    __chkstk_darwin(v5, v6);
    *(&v41 - 2) = (uint64_t)v1;
    *(&v41 - 1) = (uint64_t)&v54;
    uint64_t v10 = v1;
    (*(void (**)(void, uint64_t (*)(uint64_t)))((swift_isaMask & *v1) + 0xE8))(0, sub_10057E610);
    uint64_t v42 = 0;
  }
  uint64_t v13 = sub_100726430();
  uint64_t v14 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v10) + 0xD0);
  uint64_t v50 = v10;
  uint64_t v15 = v14(v13);
  swift_bridgeObjectRelease();
  if ((unint64_t)v15 >> 62) {
    goto LABEL_32;
  }
  uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v16)
  {
    unint64_t v17 = 0;
    uint64_t v46 = v15;
    unint64_t v47 = v15 & 0xC000000000000001;
    uint64_t v43 = v15 + 32;
    uint64_t v44 = v15 & 0xFFFFFFFFFFFFFF8;
    uint64_t v49 = (void *)0x80000001008C5C60;
    uint64_t v45 = v16;
    while (1)
    {
      if (v47)
      {
        id v18 = (id)sub_100726A10();
      }
      else
      {
        if (v17 >= *(void *)(v44 + 16)) {
          goto LABEL_31;
        }
        id v18 = *(id *)(v43 + 8 * v17);
      }
      uint64_t v19 = v18;
      BOOL v20 = __OFADD__(v17, 1);
      unint64_t v21 = v17 + 1;
      if (v20) {
        break;
      }
      unint64_t v22 = v54;
      if (v54 >> 62)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v15 = sub_100726BA0();
        swift_bridgeObjectRelease();
        unint64_t v48 = v21;
        if (!v15) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v15 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        unint64_t v48 = v21;
        if (!v15) {
          goto LABEL_7;
        }
      }
      if (v15 < 1) {
        goto LABEL_30;
      }
      uint64_t v23 = 0;
      unint64_t v51 = v22 & 0xC000000000000001;
      uint64_t v52 = v15;
      unint64_t v24 = v22;
      do
      {
        if (v51) {
          id v25 = (id)sub_100726A10();
        }
        else {
          id v25 = *(id *)(v22 + 8 * v23 + 32);
        }
        uint64_t v26 = v25;
        ++v23;
        sub_100556D90(v19, v25, (uint64_t)v8);
        uint64_t v27 = type metadata accessor for SenderKeyAndState(0);
        int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v8, 1, v27);
        sub_10044C150((uint64_t)v8, (uint64_t *)&unk_100A468B0);
        v53._uint64_t countAndFlagsBits = 0;
        v53._object = (void *)0xE000000000000000;
        sub_1007269F0(39);
        swift_bridgeObjectRelease();
        v53._uint64_t countAndFlagsBits = 0x203A4D4F5246;
        v53._object = (void *)0xE600000000000000;
        id v29 = [v19 prefixedURI];
        uint64_t v30 = sub_100726430();
        uint64_t v32 = v31;

        v57._uint64_t countAndFlagsBits = v30;
        v57._object = v32;
        sub_1007264C0(v57);
        swift_bridgeObjectRelease();
        v58._uint64_t countAndFlagsBits = 0x203A4F5420;
        v58._object = (void *)0xE500000000000000;
        sub_1007264C0(v58);
        id v33 = [v26 prefixedURI];
        uint64_t v34 = sub_100726430();
        uint64_t v36 = v35;

        v59._uint64_t countAndFlagsBits = v34;
        v59._object = v36;
        sub_1007264C0(v59);
        swift_bridgeObjectRelease();
        v60._uint64_t countAndFlagsBits = 0xD000000000000015;
        v60._object = v49;
        sub_1007264C0(v60);
        if (v28 == 1) {
          v37._uint64_t countAndFlagsBits = 20302;
        }
        else {
          v37._uint64_t countAndFlagsBits = 5457241;
        }
        if (v28 == 1) {
          uint64_t v38 = (void *)0xE200000000000000;
        }
        else {
          uint64_t v38 = (void *)0xE300000000000000;
        }
        v37._object = v38;
        sub_1007264C0(v37);
        swift_bridgeObjectRelease();
        v61._uint64_t countAndFlagsBits = 10;
        v61._object = (void *)0xE100000000000000;
        sub_1007264C0(v61);
        sub_1007264C0(v53);

        swift_bridgeObjectRelease();
        unint64_t v22 = v24;
      }
      while (v52 != v23);
LABEL_7:

      swift_bridgeObjectRelease();
      uint64_t v15 = v46;
      unint64_t v17 = v48;
      if (v48 == v45) {
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_100726BA0();
    swift_bridgeObjectRelease();
  }
LABEL_33:
  swift_bridgeObjectRelease();
  unint64_t v39 = v55;
  swift_bridgeObjectRelease();
  return v39;
}

char *sub_100561E28(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v24[0] = 0xD000000000000029;
  v24[1] = 0x80000001008C5C80;
  if (!a1)
  {
    uint64_t v18 = 0;
    goto LABEL_16;
  }
  unint64_t v4 = a1;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_100726BA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v6 = _swiftEmptyArrayStorage;
  if (!v5)
  {
LABEL_14:
    uint64_t v18 = sub_1004815C0((uint64_t)v6);
    a1 = swift_bridgeObjectRelease();
LABEL_16:
    __chkstk_darwin(a1, a2);
    uint64_t v19 = v3;
    uint64_t v20 = v18;
    unint64_t v21 = v24;
    (*(void (**)(void, uint64_t (*)(uint64_t)))((swift_isaMask & *v3) + 0xE8))(0, sub_10057E874);
    swift_bridgeObjectRelease();
    return (char *)v24[0];
  }
  uint64_t v23 = _swiftEmptyArrayStorage;
  uint64_t result = sub_100455590(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v22 = v3;
    uint64_t v8 = 0;
    uint64_t v6 = v23;
    do
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v9 = (id)sub_100726A10();
      }
      else {
        id v9 = *(id *)(v4 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      id v11 = [v9 prefixedURI];
      uint64_t v12 = sub_100726430();
      uint64_t v14 = v13;

      uint64_t v23 = v6;
      unint64_t v16 = v6[2];
      unint64_t v15 = v6[3];
      if (v16 >= v15 >> 1)
      {
        sub_100455590((char *)(v15 > 1), v16 + 1, 1);
        uint64_t v6 = v23;
      }
      ++v8;
      void v6[2] = v16 + 1;
      unint64_t v17 = &v6[2 * v16];
      v17[4] = v12;
      v17[5] = v14;
    }
    while (v5 != v8);
    uint64_t v3 = v22;
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_10056205C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_100431F80(&qword_100A47D80);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  id v141 = (char *)&v118 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  os_log_type_t v136 = (char *)&v118 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t object = (uint64_t)&v118 - v14;
  __chkstk_darwin(v13, v16);
  uint64_t v132 = (char *)&v118 - v17;
  uint64_t v18 = sub_100725CC0();
  uint64_t v139 = *(char **)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18, v19);
  uint64_t v130 = (char *)&v118 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v129 = (char *)&v118 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v126 = (char *)&v118 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v127 = (char *)&v118 - v30;
  __chkstk_darwin(v29, v31);
  uint64_t v140 = (char *)&v118 - v32;
  unint64_t v33 = (unint64_t)sub_10055A478(a1, (uint64_t)sub_10057D10C);
  uint64_t countAndFlagsBits = v33;
  if (v33 >> 62) {
    goto LABEL_102;
  }
  uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  uint64_t v131 = object;
  if (!v35)
  {
    uint64_t v121 = 0;
    uint64_t v122 = &_swiftEmptyDictionarySingleton;
LABEL_28:
    swift_bridgeObjectRelease();
    int64_t v61 = 0;
    uint64_t v62 = v122;
    uint64_t v63 = v122[8];
    uint64_t v119 = (char *)(v122 + 8);
    uint64_t v64 = 1 << *((unsigned char *)v122 + 32);
    uint64_t v65 = -1;
    if (v64 < 64) {
      uint64_t v65 = ~(-1 << v64);
    }
    unint64_t v66 = v65 & v63;
    int64_t v120 = (unint64_t)(v64 + 63) >> 6;
    uint64_t v67 = v139;
    uint64_t v145 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v139 + 48);
    id v146 = (void (**)(char *, uint64_t))(v139 + 8);
    uint64_t v139 = (char *)0x80000001008C5F40;
    BOOL v137 = (void (**)(char *, uint64_t, uint64_t))(v67 + 32);
    uint64_t v138 = (void *)0x80000001008C5F60;
    uint64_t v134 = (void *)0x80000001008C5FA0;
    uint64_t v135 = (void *)0x80000001008C5F80;
    uint64_t v125 = (void *)0x80000001008C6000;
    uint64_t v133 = (void *)0x80000001008C5FC0;
    uint64_t v128 = (void *)0x80000001008C5FE0;
    while (1)
    {
      if (v66)
      {
        uint64_t v123 = (v66 - 1) & v66;
        int64_t v124 = v61;
        unint64_t v68 = __clz(__rbit64(v66)) | (v61 << 6);
      }
      else
      {
        int64_t v69 = v61 + 1;
        if (__OFADD__(v61, 1)) {
          goto LABEL_98;
        }
        if (v69 >= v120)
        {
LABEL_95:
          swift_release();
          return sub_1004D5EC8((uint64_t)v121);
        }
        unint64_t v70 = *(void *)&v119[8 * v69];
        int64_t v71 = v61 + 1;
        if (!v70)
        {
          int64_t v71 = v61 + 2;
          if (v61 + 2 >= v120) {
            goto LABEL_95;
          }
          unint64_t v70 = *(void *)&v119[8 * v71];
          if (!v70)
          {
            int64_t v71 = v61 + 3;
            if (v61 + 3 >= v120) {
              goto LABEL_95;
            }
            unint64_t v70 = *(void *)&v119[8 * v71];
            if (!v70)
            {
              uint64_t v72 = v61 + 4;
              if (v61 + 4 >= v120) {
                goto LABEL_95;
              }
              unint64_t v70 = *(void *)&v119[8 * v72];
              if (!v70)
              {
                while (1)
                {
                  int64_t v71 = v72 + 1;
                  if (__OFADD__(v72, 1)) {
                    break;
                  }
                  if (v71 >= v120) {
                    goto LABEL_95;
                  }
                  unint64_t v70 = *(void *)&v119[8 * v71];
                  ++v72;
                  if (v70) {
                    goto LABEL_47;
                  }
                }
LABEL_101:
                __break(1u);
LABEL_102:
                swift_bridgeObjectRetain();
                uint64_t v35 = sub_100726BA0();
                swift_bridgeObjectRelease();
                goto LABEL_3;
              }
              int64_t v71 = v61 + 4;
            }
          }
        }
LABEL_47:
        uint64_t v123 = (v70 - 1) & v70;
        int64_t v124 = v71;
        unint64_t v68 = __clz(__rbit64(v70)) + (v71 << 6);
      }
      unint64_t v73 = (uint64_t *)(v62[6] + 16 * v68);
      uint64_t v74 = *v73;
      uint64_t object = v73[1];
      a3 = *(void *)(v62[7] + 8 * v68);
      v147._uint64_t countAndFlagsBits = 0;
      v147._uint64_t object = (void *)0xE000000000000000;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1007269F0(25);
      swift_bridgeObjectRelease();
      strcpy((char *)&v147, "---------- ");
      HIDWORD(v147._object) = -352321536;
      v150._uint64_t countAndFlagsBits = v74;
      v150._uint64_t object = (void *)object;
      sub_1007264C0(v150);
      swift_bridgeObjectRelease();
      v151._uint64_t countAndFlagsBits = 0x2D2D2D2D2D2D2D20;
      v151._uint64_t object = (void *)0xEC0000000A2D2D2DLL;
      sub_1007264C0(v151);
      sub_1007264C0(v147);
      swift_bridgeObjectRelease();
      if (a3 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v75 = sub_100726BA0();
        swift_bridgeObjectRelease();
        if (!v75) {
          goto LABEL_31;
        }
      }
      else
      {
        uint64_t v75 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v75) {
          goto LABEL_31;
        }
      }
      if (v75 < 1)
      {
        __break(1u);
        goto LABEL_97;
      }
      uint64_t countAndFlagsBits = 0;
      unint64_t v142 = a3 & 0xC000000000000001;
      uint64_t v143 = v75;
      unint64_t v144 = a3;
      do
      {
        if (v142) {
          sub_100726A10();
        }
        else {
          swift_retain();
        }
        v154._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
        v154._uint64_t object = v139;
        sub_1007264C0(v154);
        strcpy((char *)&v147, "keyID: ");
        v147._uint64_t object = (void *)0xE700000000000000;
        uint64_t v78 = sub_10049188C();
        unint64_t v80 = v79;
        uint64_t v81 = sub_100725B30(0);
        uint64_t v83 = v82;
        sub_100442248(v78, v80);
        v155._uint64_t countAndFlagsBits = v81;
        v155._uint64_t object = v83;
        sub_1007264C0(v155);
        swift_bridgeObjectRelease();
        v156._uint64_t countAndFlagsBits = 10;
        v156._uint64_t object = (void *)0xE100000000000000;
        sub_1007264C0(v156);
        sub_1007264C0(v147);
        swift_bridgeObjectRelease();
        v147._uint64_t countAndFlagsBits = 0;
        v147._uint64_t object = (void *)0xE000000000000000;
        sub_1007269F0(23);
        swift_bridgeObjectRelease();
        v147._uint64_t countAndFlagsBits = 0xD000000000000014;
        v147._uint64_t object = v138;
        char v84 = sub_100493020();
        BOOL v85 = (v84 & 1) == 0;
        if (v84) {
          v86._uint64_t countAndFlagsBits = 1702195828;
        }
        else {
          v86._uint64_t countAndFlagsBits = 0x65736C6166;
        }
        if (v85) {
          uint64_t v87 = (void *)0xE500000000000000;
        }
        else {
          uint64_t v87 = (void *)0xE400000000000000;
        }
        v86._uint64_t object = v87;
        sub_1007264C0(v86);
        swift_bridgeObjectRelease();
        v157._uint64_t countAndFlagsBits = 10;
        v157._uint64_t object = (void *)0xE100000000000000;
        sub_1007264C0(v157);
        sub_1007264C0(v147);
        swift_bridgeObjectRelease();
        strcpy((char *)&v147, "createdAt: ");
        HIDWORD(v147._object) = -352321536;
        uint64_t v88 = v140;
        sub_10049279C();
        sub_10057998C(&qword_100A459E8, (void (*)(uint64_t))&type metadata accessor for Date);
        v158._uint64_t countAndFlagsBits = sub_100726D00();
        sub_1007264C0(v158);
        swift_bridgeObjectRelease();
        uint64_t v89 = *v146;
        (*v146)(v88, v18);
        v159._uint64_t countAndFlagsBits = 10;
        v159._uint64_t object = (void *)0xE100000000000000;
        sub_1007264C0(v159);
        uint64_t object = (uint64_t)v147._object;
        sub_1007264C0(v147);
        swift_bridgeObjectRelease();
        if (sub_100493020())
        {
          v147._uint64_t countAndFlagsBits = 0;
          v147._uint64_t object = (void *)0xE000000000000000;
          sub_1007269F0(20);
          swift_bridgeObjectRelease();
          v147._uint64_t countAndFlagsBits = 0xD000000000000011;
          v147._uint64_t object = v135;
          char v90 = sub_100493BF8();
          BOOL v91 = (v90 & 1) == 0;
          if (v90) {
            v92._uint64_t countAndFlagsBits = 1702195828;
          }
          else {
            v92._uint64_t countAndFlagsBits = 0x65736C6166;
          }
          if (v91) {
            uint64_t v93 = (void *)0xE500000000000000;
          }
          else {
            uint64_t v93 = (void *)0xE400000000000000;
          }
          v92._uint64_t object = v93;
          sub_1007264C0(v92);
          swift_bridgeObjectRelease();
          v160._uint64_t countAndFlagsBits = 10;
          v160._uint64_t object = (void *)0xE100000000000000;
          sub_1007264C0(v160);
          sub_1007264C0(v147);
          swift_bridgeObjectRelease();
          uint64_t v94 = sub_100494794();
          if (v95)
          {
            uint64_t v96 = v94;
            uint64_t v97 = v95;
            uint64_t v98 = (uint64_t)v132;
            sub_100494BC4();
            uint64_t v99 = v98;
            if ((*v145)(v98, 1, v18) == 1)
            {
              swift_bridgeObjectRelease();
              sub_10044C150(v98, &qword_100A47D80);
            }
            else
            {
              uint64_t v100 = v127;
              (*v137)(v127, v99, v18);
              strcpy((char *)&v147, "sentGUID: ");
              BYTE3(v147._object) = 0;
              HIDWORD(v147._object) = -369098752;
              v161._uint64_t countAndFlagsBits = v96;
              v161._uint64_t object = v97;
              sub_1007264C0(v161);
              swift_bridgeObjectRelease();
              v162._uint64_t countAndFlagsBits = 10;
              v162._uint64_t object = (void *)0xE100000000000000;
              sub_1007264C0(v162);
              sub_1007264C0(v147);
              swift_bridgeObjectRelease();
              strcpy((char *)&v147, "sentAt: ");
              BYTE1(v147._object) = 0;
              WORD1(v147._object) = 0;
              HIDWORD(v147._object) = -402653184;
              v163._uint64_t countAndFlagsBits = sub_100726D00();
              sub_1007264C0(v163);
              swift_bridgeObjectRelease();
              v164._uint64_t countAndFlagsBits = 10;
              v164._uint64_t object = (void *)0xE100000000000000;
              sub_1007264C0(v164);
              sub_1007264C0(v147);
              swift_bridgeObjectRelease();
              v89(v100, v18);
            }
          }
          v147._uint64_t countAndFlagsBits = 0;
          v147._uint64_t object = (void *)0xE000000000000000;
          sub_1007269F0(25);
          swift_bridgeObjectRelease();
          v147._uint64_t countAndFlagsBits = 0xD000000000000016;
          v147._uint64_t object = v134;
          char v101 = sub_100493300();
          BOOL v102 = (v101 & 1) == 0;
          if (v101) {
            v103._uint64_t countAndFlagsBits = 1702195828;
          }
          else {
            v103._uint64_t countAndFlagsBits = 0x65736C6166;
          }
          if (v102) {
            uint64_t v104 = (void *)0xE500000000000000;
          }
          else {
            uint64_t v104 = (void *)0xE400000000000000;
          }
          v103._uint64_t object = v104;
          sub_1007264C0(v103);
          swift_bridgeObjectRelease();
          v165._uint64_t countAndFlagsBits = 10;
          v165._uint64_t object = (void *)0xE100000000000000;
          sub_1007264C0(v165);
          sub_1007264C0(v147);
          swift_bridgeObjectRelease();
          if (sub_100493300())
          {
            uint64_t v105 = v131;
            sub_1004936B0();
            if ((*v145)(v105, 1, v18) == 1)
            {
              sub_10044C150(v105, &qword_100A47D80);
            }
            else
            {
              uint64_t v106 = v126;
              (*v137)(v126, v105, v18);
              v147._uint64_t countAndFlagsBits = 0;
              v147._uint64_t object = (void *)0xE000000000000000;
              sub_1007269F0(25);
              swift_bridgeObjectRelease();
              v147._uint64_t countAndFlagsBits = 0xD000000000000016;
              v147._uint64_t object = v125;
              v166._uint64_t countAndFlagsBits = sub_100726D00();
              sub_1007264C0(v166);
              swift_bridgeObjectRelease();
              v167._uint64_t countAndFlagsBits = 10;
              v167._uint64_t object = (void *)0xE100000000000000;
              sub_1007264C0(v167);
              sub_1007264C0(v147);
              swift_bridgeObjectRelease();
              v89(v106, v18);
            }
          }
          uint64_t v107 = (uint64_t)v136;
          sub_100495044();
          uint64_t v108 = *v145;
          if ((*v145)(v107, 1, v18) == 1)
          {
            sub_10044C150(v107, &qword_100A47D80);
          }
          else
          {
            uint64_t v109 = v129;
            (*v137)(v129, v107, v18);
            v147._uint64_t countAndFlagsBits = 0;
            v147._uint64_t object = (void *)0xE000000000000000;
            sub_1007269F0(17);
            swift_bridgeObjectRelease();
            strcpy((char *)&v147, "lastActiveAt: ");
            HIBYTE(v147._object) = -18;
            v168._uint64_t countAndFlagsBits = sub_100726D00();
            sub_1007264C0(v168);
            swift_bridgeObjectRelease();
            v169._uint64_t countAndFlagsBits = 10;
            v169._uint64_t object = (void *)0xE100000000000000;
            sub_1007264C0(v169);
            sub_1007264C0(v147);
            swift_bridgeObjectRelease();
            v89(v109, v18);
          }
          sub_1004954C4();
          uint64_t v110 = (uint64_t)v141;
          if (v108((uint64_t)v141, 1, v18) == 1)
          {
            sub_10044C150(v110, &qword_100A47D80);
          }
          else
          {
            uint64_t v111 = v130;
            (*v137)(v130, v110, v18);
            v147._uint64_t countAndFlagsBits = 0;
            v147._uint64_t object = (void *)0xE000000000000000;
            sub_1007269F0(20);
            swift_bridgeObjectRelease();
            v147._uint64_t countAndFlagsBits = 0xD000000000000011;
            v147._uint64_t object = v128;
            v170._uint64_t countAndFlagsBits = sub_100726D00();
            sub_1007264C0(v170);
            swift_bridgeObjectRelease();
            v171._uint64_t countAndFlagsBits = 10;
            v171._uint64_t object = (void *)0xE100000000000000;
            sub_1007264C0(v171);
            sub_1007264C0(v147);
            swift_bridgeObjectRelease();
            v89(v111, v18);
          }
          uint64_t v77 = (void *)0xE000000000000000;
          v147._uint64_t countAndFlagsBits = 0;
          v147._uint64_t object = (void *)0xE000000000000000;
          sub_1007269F0(23);
          swift_bridgeObjectRelease();
          v147._uint64_t countAndFlagsBits = 0xD000000000000013;
          v147._uint64_t object = v133;
          uint64_t v112 = sub_100492494();
          unint64_t v114 = v113;
          Class isa = sub_100725B20().super.isa;
          sub_100442248(v112, v114);
          id v116 = [(objc_class *)isa __imHexString];

          if (v116)
          {
            uint64_t object = sub_100726430();
            uint64_t v77 = v76;
          }
          else
          {
            uint64_t object = 0;
          }
          v152._uint64_t countAndFlagsBits = object;
          v152._uint64_t object = v77;
          sub_1007264C0(v152);
          swift_bridgeObjectRelease();
          v153._uint64_t countAndFlagsBits = 2601;
          v153._uint64_t object = (void *)0xE200000000000000;
          sub_1007264C0(v153);
          sub_1007264C0(v147);
          swift_bridgeObjectRelease();
        }
        ++countAndFlagsBits;
        swift_release();
        a3 = v144;
      }
      while (v143 != countAndFlagsBits);
LABEL_31:
      swift_bridgeObjectRelease();
      uint64_t v62 = v122;
      int64_t v61 = v124;
      unint64_t v66 = v123;
    }
  }
  uint64_t v121 = 0;
  uint64_t v145 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(countAndFlagsBits & 0xC000000000000001);
  uint64_t v122 = &_swiftEmptyDictionarySingleton;
  uint64_t v36 = 4;
  uint64_t v143 = countAndFlagsBits;
  unint64_t v144 = a3;
  unint64_t v142 = v35;
  while (1)
  {
    uint64_t v39 = v36 - 4;
    if (v145)
    {
      sub_100726A10();
      uint64_t object = v36 - 3;
      if (__OFADD__(v39, 1)) {
        goto LABEL_97;
      }
    }
    else
    {
      swift_retain();
      uint64_t object = v36 - 3;
      if (__OFADD__(v39, 1))
      {
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
    }
    if (!a3) {
      break;
    }
    uint64_t v40 = sub_100491E9C();
    char v42 = sub_100563204(v40, v41, a3);
    swift_bridgeObjectRelease();
    if (v42) {
      break;
    }
    uint64_t v43 = sub_100492198();
    char v45 = sub_100563204(v43, v44, a3);
    swift_bridgeObjectRelease();
    if (v45) {
      break;
    }
LABEL_6:
    swift_release();
    ++v36;
    if (object == v35) {
      goto LABEL_28;
    }
  }
  id v146 = (void (**)(char *, uint64_t))object;
  v147._uint64_t countAndFlagsBits = sub_100491E9C();
  v147._uint64_t object = v46;
  v148._uint64_t countAndFlagsBits = 2108704;
  v148._uint64_t object = (void *)0xE300000000000000;
  sub_1007264C0(v148);
  v149._uint64_t countAndFlagsBits = sub_100492198();
  sub_1007264C0(v149);
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = v147._countAndFlagsBits;
  unint64_t v47 = v147._object;
  swift_retain();
  sub_1004D5EC8((uint64_t)v121);
  uint64_t v48 = (uint64_t)v122;
  uint64_t object = swift_isUniquelyReferenced_nonNull_native();
  v147._uint64_t countAndFlagsBits = v48;
  unint64_t v50 = sub_10045C784(countAndFlagsBits, (uint64_t)v47);
  uint64_t v51 = *(void *)(v48 + 16);
  BOOL v52 = (v49 & 1) == 0;
  uint64_t v53 = v51 + v52;
  if (__OFADD__(v51, v52)) {
    goto LABEL_99;
  }
  char v54 = v49;
  if (*(void *)(v48 + 24) >= v53)
  {
    if ((object & 1) == 0)
    {
      sub_100578220();
      uint64_t v122 = (void *)v147._countAndFlagsBits;
    }
    goto LABEL_21;
  }
  sub_100577AA0(v53, object);
  uint64_t v122 = (void *)v147._countAndFlagsBits;
  unint64_t v55 = sub_10045C784(countAndFlagsBits, (uint64_t)v47);
  if ((v54 & 1) == (v56 & 1))
  {
    unint64_t v50 = v55;
LABEL_21:
    swift_bridgeObjectRelease();
    Swift::String v57 = v122;
    if ((v54 & 1) == 0)
    {
      v122[(v50 >> 6) + 8] |= 1 << v50;
      Swift::String v58 = (uint64_t *)(v57[6] + 16 * v50);
      *Swift::String v58 = countAndFlagsBits;
      v58[1] = (uint64_t)v47;
      *(void *)(v57[7] + 8 * v50) = _swiftEmptyArrayStorage;
      uint64_t v59 = v57[2];
      uint64_t v60 = v59 + 1;
      uint64_t object = __OFADD__(v59, 1);
      a3 = (unint64_t)v57;
      swift_bridgeObjectRetain();
      if (object) {
        goto LABEL_100;
      }
      *(void *)(a3 + 16) = v60;
      Swift::String v57 = (void *)a3;
    }
    Swift::String v37 = v57;
    swift_bridgeObjectRetain();
    uint64_t v38 = v37[7];
    swift_bridgeObjectRelease();
    sub_100726550();
    sub_100571C64(*(void *)((*(void *)(v38 + 8 * v50) & 0xFFFFFFFFFFFFFF8) + 0x10));
    sub_1007265C0();
    sub_100726590();
    swift_bridgeObjectRelease();
    uint64_t v121 = sub_10056333C;
    uint64_t countAndFlagsBits = v143;
    a3 = v144;
    uint64_t v35 = v142;
    uint64_t object = (uint64_t)v146;
    goto LABEL_6;
  }
  uint64_t result = sub_100726D40();
  __break(1u);
  return result;
}

uint64_t sub_100563204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_100726DD0();
    sub_100726490();
    Swift::Int v6 = sub_100726E30();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      uint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_100726D20() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          uint64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_100726D20() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

void sub_10056333C(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
}

uint64_t sub_10056334C()
{
  v3[0] = 0;
  v3[1] = 0xE000000000000000;
  v2[2] = v3;
  (*(void (**)(void, uint64_t (*)(), void *))((swift_isaMask & *v0) + 0xE8))(0, sub_10057E8A4, v2);
  return v3[0];
}

uint64_t sub_100563538()
{
  uint64_t v1 = sub_100431F80(&qword_100A48560);
  __chkstk_darwin(v1 - 8, v2);
  unint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A48568);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A47F28);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(0);
  sub_10057998C((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_1007261B0();
  unint64_t v11 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if (!v0)
  {
    v15[1] = 0;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_100726BA0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v13)
      {
LABEL_4:
        if (v13 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v14 = 0;
        do
        {
          if ((v11 & 0xC000000000000001) != 0) {
            sub_100726A10();
          }
          else {
            swift_retain();
          }
          ++v14;
          v18._uint64_t countAndFlagsBits = 0xD000000000000026;
          v18._uint64_t object = (void *)0x80000001008C5F10;
          sub_1007264C0(v18);
          v16._uint64_t countAndFlagsBits = 0x203A495255;
          v16._uint64_t object = (void *)0xE500000000000000;
          v19._uint64_t countAndFlagsBits = sub_100496D78();
          sub_1007264C0(v19);
          swift_bridgeObjectRelease();
          v20._uint64_t countAndFlagsBits = 10;
          v20._uint64_t object = (void *)0xE100000000000000;
          sub_1007264C0(v20);
          sub_1007264C0(v16);
          swift_bridgeObjectRelease();
          v16._uint64_t countAndFlagsBits = 0x3A4952556D6F7266;
          v16._uint64_t object = (void *)0xE900000000000020;
          v21._uint64_t countAndFlagsBits = sub_100497074();
          sub_1007264C0(v21);
          swift_bridgeObjectRelease();
          v22._uint64_t countAndFlagsBits = 10;
          v22._uint64_t object = (void *)0xE100000000000000;
          sub_1007264C0(v22);
          sub_1007264C0(v16);
          swift_bridgeObjectRelease();
          v16._uint64_t countAndFlagsBits = 0x797469726F697270;
          v16._uint64_t object = (void *)0xEA0000000000203ALL;
          uint64_t v17 = sub_100497370();
          v23._uint64_t countAndFlagsBits = sub_100726D00();
          sub_1007264C0(v23);
          swift_bridgeObjectRelease();
          v24._uint64_t countAndFlagsBits = 10;
          v24._uint64_t object = (void *)0xE100000000000000;
          sub_1007264C0(v24);
          sub_1007264C0(v16);
          swift_release();
          swift_bridgeObjectRelease();
        }
        while (v13 != v14);
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10056392C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    unint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Called to perform DB cleanup tasks", v4, 2u);
    swift_slowDealloc();
  }

  [v1 cleanupExpiredSessionsIfNeededWithCompletion:0];
  [v1 cleanupShortHandlesWithExpireDuration:0 completion:sub_10057EA14()];
  uint64_t v5 = (void *)swift_allocObject();
  v5[3] = 0;
  long long v5[4] = 0;
  v5[2] = v1;
  uint64_t v6 = *(void (**)(uint64_t (*)(), void, id (*)(uint64_t), void *))((swift_isaMask & *v1)
                                                                                          + 0xE0);
  uint64_t v7 = v1;
  v6(sub_10056491C, 0, sub_10057EB6C, v5);

  return swift_release();
}

uint64_t sub_100563AE8(uint64_t a1)
{
  uint64_t v87 = a1;
  uint64_t v1 = sub_100431F80(&qword_100A48470);
  __chkstk_darwin(v1 - 8, v2);
  Swift::String v86 = (char *)v74 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100431F80(&qword_100A48478);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  uint64_t v82 = (char *)v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v74 - v9;
  uint64_t v11 = sub_100431F80((uint64_t *)&unk_100A48480);
  uint64_t v83 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100725CC0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v84 = v15;
  uint64_t v85 = v16;
  __chkstk_darwin(v15, v17);
  Swift::String v19 = (char *)v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100725C80();
  char v90 = v19;
  uint64_t v20 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  uint64_t v92 = v20;
  sub_100725D70();
  uint64_t v21 = sub_100431F80(&qword_100A47ED8);
  uint64_t v22 = *(void *)(v21 - 8);
  Swift::String v23 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 56);
  uint64_t v80 = v22 + 56;
  uint64_t v81 = v23;
  v23((uint64_t)v10, 0, 1, v21);
  uint64_t v24 = sub_10057998C(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_1007261B0();
  sub_100431F80((uint64_t *)&unk_100A46840);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_100799DD0;
  *(void *)(v25 + 32) = swift_getKeyPath();
  *(void *)(v25 + 40) = swift_getKeyPath();
  BOOL v91 = (void *)v25;
  sub_100726590();
  sub_1007261A0();
  unint64_t v26 = v89;
  unint64_t v27 = sub_100726110();
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v83 + 8))(v14, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v19, v84);
  }
  uint64_t v79 = v11;
  v74[1] = v24;
  uint64_t v76 = v14;
  uint64_t v77 = v21;
  v74[2] = v20;
  uint64_t v78 = v19;
  unint64_t v89 = v27;
  if (v27 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_100726BA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v29 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v31 = v77;
  uint64_t v30 = v78;
  uint64_t v32 = v81;
  uint64_t v33 = (uint64_t)v82;
  uint64_t v34 = v79;
  uint64_t v75 = 0;
  if (v29)
  {
    BOOL v91 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100572510(0, v29 & ~(v29 >> 63), 0);
    if (v29 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v88 = v29;
    uint64_t v35 = v91;
    if ((v89 & 0xC000000000000001) != 0)
    {
      uint64_t v36 = 0;
      do
      {
        sub_100726A10();
        uint64_t v37 = sub_10048D2AC();
        uint64_t v39 = v38;
        uint64_t v40 = sub_10048D8A4();
        uint64_t v42 = v41;
        swift_unknownObjectRelease();
        BOOL v91 = v35;
        unint64_t v44 = v35[2];
        unint64_t v43 = v35[3];
        if (v44 >= v43 >> 1)
        {
          sub_100572510(v43 > 1, v44 + 1, 1);
          uint64_t v35 = v91;
        }
        ++v36;
        v35[2] = v44 + 1;
        char v45 = &v35[4 * v44];
        v45[4] = v37;
        v45[5] = v39;
        v45[6] = v40;
        v45[7] = v42;
      }
      while (v88 != v36);
    }
    else
    {
      uint64_t v48 = 0;
      do
      {
        swift_retain();
        uint64_t v49 = sub_10048D2AC();
        uint64_t v51 = v50;
        uint64_t v52 = sub_10048D8A4();
        uint64_t v54 = v53;
        swift_release();
        BOOL v91 = v35;
        unint64_t v56 = v35[2];
        unint64_t v55 = v35[3];
        if (v56 >= v55 >> 1)
        {
          sub_100572510(v55 > 1, v56 + 1, 1);
          uint64_t v35 = v91;
        }
        ++v48;
        v35[2] = v56 + 1;
        Swift::String v57 = &v35[4 * v56];
        v57[4] = v49;
        v57[5] = v51;
        v57[6] = v52;
        v57[7] = v54;
      }
      while (v88 != v48);
    }
    uint64_t v46 = swift_bridgeObjectRelease();
    uint64_t v30 = v78;
    uint64_t v34 = v79;
    uint64_t v32 = v81;
    uint64_t v33 = (uint64_t)v82;
    uint64_t v31 = v77;
  }
  else
  {
    uint64_t v46 = swift_bridgeObjectRelease();
    uint64_t v35 = _swiftEmptyArrayStorage;
  }
  unint64_t v89 = (unint64_t)v74;
  __chkstk_darwin(v46, v47);
  v74[-2] = v30;
  sub_100725D70();
  v32(v33, 0, 1, v31);
  uint64_t v58 = v75;
  sub_100726130();
  if (v58)
  {
    swift_bridgeObjectRelease();
    sub_10044C150(v33, &qword_100A48478);
    (*(void (**)(char *, uint64_t))(v83 + 8))(v76, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v85 + 8))(v30, v84);
  }
  else
  {
    sub_10044C150(v33, &qword_100A48478);
    uint64_t v59 = v35[2];
    uint64_t v60 = v85;
    if (v59)
    {
      uint64_t v61 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
      uint64_t v63 = (void *)v61;
      uint64_t v64 = v35 + 7;
      uint64_t v65 = v59 - 1;
      uint64_t v66 = (uint64_t)v86;
      while (1)
      {
        uint64_t v67 = *v64;
        uint64_t v68 = *(v64 - 2);
        __chkstk_darwin(v61, v62);
        v74[-4] = v69;
        v74[-3] = v68;
        v74[-2] = v70;
        v74[-1] = v67;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        BOOL v91 = v63;
        sub_100725D70();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v71 = sub_100431F80(&qword_100A47ED0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v71 - 8) + 56))(v66, 0, 1, v71);
        sub_10057998C(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
        sub_100726130();
        uint64_t v61 = sub_10044C150(v66, &qword_100A48470);
        if (!v65) {
          break;
        }
        v64 += 4;
        --v65;
      }
      swift_bridgeObjectRelease();
      uint64_t v73 = v84;
      uint64_t v60 = v85;
      uint64_t v30 = v78;
      uint64_t v34 = v79;
      uint64_t v72 = v83;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v72 = v83;
      uint64_t v73 = v84;
    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v76, v34);
    return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v30, v73);
  }
}

uint64_t sub_100564398@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  v26[1] = a1;
  uint64_t v28 = a2;
  uint64_t v27 = sub_1007259E0();
  v26[0] = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v2);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A48198);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A484F0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A484F8);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  Swift::String v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A48500, &qword_100A484F0);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  sub_100725CC0();
  sub_1007259F0();
  uint64_t v20 = v26[0];
  uint64_t v21 = v27;
  (*(void (**)(char *, void, uint64_t))(v26[0] + 104))(v4, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v27);
  uint64_t v22 = sub_100431F80(&qword_100A48508);
  Swift::String v23 = v28;
  uint64_t v28[3] = v22;
  v23[4] = sub_100580FD8();
  sub_10044D5C4(v23);
  sub_1004D10A4(&qword_100A48528, &qword_100A484F8);
  sub_1004D10A4(&qword_100A481E8, &qword_100A48198);
  sub_10057998C((unint64_t *)&unk_100A480F0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v24 = v29;
  sub_1007259B0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_10056491C()
{
  uint64_t v1 = sub_100431F80(&qword_100A48540);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A48548);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A47EE0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
  sub_10057998C((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_1007261B0();
  unint64_t v11 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  if (!v0)
  {
    unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_100726BA0();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v24 = 0;
      if (!v13) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v24 = 0;
      if (!v13) {
        goto LABEL_25;
      }
    }
    if (v13 < 1)
    {
      __break(1u);
      goto LABEL_38;
    }
    if ((v11 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v13; ++i)
      {
        sub_100726A10();
        unint64_t v15 = sub_10048BE40();
        if (v15
          && (v15 >> 62 ? (uint64_t v16 = sub_100726BA0()) : (uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)),
              swift_bridgeObjectRelease(),
              v16))
        {
          swift_unknownObjectRelease();
        }
        else
        {
          sub_100726A40();
          sub_100726A70();
          sub_100726A80();
          sub_100726A50();
        }
      }
    }
    else
    {
      for (uint64_t j = 0; j != v13; ++j)
      {
        swift_retain();
        unint64_t v18 = sub_10048BE40();
        if (v18
          && (v18 >> 62 ? (uint64_t v19 = sub_100726BA0()) : (uint64_t v19 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10)),
              swift_bridgeObjectRelease(),
              v19))
        {
          swift_release();
        }
        else
        {
          sub_100726A40();
          sub_100726A70();
          sub_100726A80();
          sub_100726A50();
        }
      }
    }
LABEL_25:
    uint64_t result = swift_bridgeObjectRelease();
    unint64_t v20 = v25;
    if ((v25 & 0x8000000000000000) != 0 || (v25 & 0x4000000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_100726BA0();
      uint64_t result = swift_release();
      if (v21)
      {
LABEL_28:
        if (v21 >= 1)
        {
          for (uint64_t k = 0; k != v21; ++k)
          {
            if ((v20 & 0xC000000000000001) != 0) {
              sub_100726A10();
            }
            else {
              swift_retain();
            }
            sub_100726140();
            swift_release();
          }
          return swift_release();
        }
LABEL_38:
        __break(1u);
        return result;
      }
    }
    else
    {
      uint64_t v21 = *(void *)(v25 + 16);
      if (v21) {
        goto LABEL_28;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_100564D50(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A47D80);
  uint64_t v4 = __chkstk_darwin(v2 - 8, v3);
  uint64_t v35 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v29 - v7;
  uint64_t v9 = sub_100725CC0();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9, v10);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v11, v14);
  uint64_t v17 = (char *)&v29 - v16;
  __chkstk_darwin(v15, v18);
  unint64_t v20 = (char *)&v29 - v19;
  uint64_t v31 = a1;
  unint64_t v21 = (unint64_t)sub_10055A478(a1, (uint64_t)sub_10057C310);
  sub_100725CB0();
  uint64_t v36 = v20;
  uint64_t v37 = v17;
  uint64_t result = sub_100725C20();
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_100726BA0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_3;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v30 + 8);
    v28(v37, v9);
    return ((uint64_t (*)(char *, uint64_t))v28)(v36, v9);
  }
  uint64_t v23 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v23) {
    goto LABEL_16;
  }
LABEL_3:
  if (v23 >= 1)
  {
    uint64_t v24 = 0;
    unint64_t v38 = v21 & 0xC000000000000001;
    unint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48);
    uint64_t v33 = (void (**)(char *, uint64_t))(v30 + 8);
    uint64_t v34 = (void (**)(char *, char *, uint64_t))(v30 + 32);
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v30 + 16);
    unint64_t v26 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56);
    while (1)
    {
      if (v38) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      sub_100490BEC();
      if ((*v25)(v8, 1, v9) == 1)
      {
        sub_10044C150((uint64_t)v8, &qword_100A47D80);
        uint64_t v27 = (uint64_t)v35;
        (*v32)(v35, v36, v9);
        (*v26)(v27, 0, 1, v9);
        sub_100490F98(v27);
      }
      else
      {
        (*v34)(v13, v8, v9);
        if (sub_100725C00())
        {
          type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0);
          sub_10057998C(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
          sub_100726140();
          swift_release();
          (*v33)(v13, v9);
          goto LABEL_7;
        }
        (*v33)(v13, v9);
      }
      swift_release();
LABEL_7:
      if (v23 == ++v24) {
        goto LABEL_16;
      }
    }
  }
  __break(1u);
  return result;
}

id sub_100565168(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v25 = a6;
  uint64_t v26 = a7;
  uint64_t v11 = sub_100725EF0();
  uint64_t v28 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_100725F20();
  uint64_t v15 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v16);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)im_primary_queue();
  if (result)
  {
    unint64_t v20 = result;
    unint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a1;
    v21[3] = a2;
    v21[4] = a3;
    v21[5] = a4;
    aBlock[4] = v25;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100435714;
    aBlock[3] = v26;
    uint64_t v22 = _Block_copy(aBlock);
    swift_errorRetain();
    id v23 = a2;
    sub_10057D228(a3);
    sub_100725F00();
    uint64_t v29 = &_swiftEmptyArrayStorage;
    sub_10057998C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    sub_100726890();
    sub_100726750();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v28 + 8))(v14, v11);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v27);
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1005655DC()
{
  uint64_t v1 = sub_100431F80(&qword_100A47F20);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v5 = __chkstk_darwin(v1, v4);
  uint64_t v6 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v25 - v8;
  uint64_t v10 = sub_100725CC0();
  uint64_t v26 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)&v25 - v17;
  sub_100725CB0();
  sub_100725C20();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  v25(v15, v10);
  uint64_t v27 = v18;
  uint64_t v28 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0);
  sub_100725D70();
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v6, v9, v1);
  unint64_t v19 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v20 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v20 + v19, v6, v1);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v0;
  uint64_t v22 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, void (*)(uint64_t), uint64_t))((swift_isaMask & *v0) + 0xE0);
  id v23 = v0;
  v22(sub_10057ED3C, v20, sub_10057EDE4, v21);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v1);
  return ((uint64_t (*)(char *, uint64_t))v25)(v18, v26);
}

uint64_t sub_1005658F8@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  v26[1] = a1;
  uint64_t v28 = a2;
  uint64_t v27 = sub_1007259E0();
  v26[0] = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v2);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A48198);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A48430);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A48438);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  unint64_t v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A48440, &qword_100A48430);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  sub_100725CC0();
  sub_1007259F0();
  uint64_t v20 = v26[0];
  uint64_t v21 = v27;
  (*(void (**)(char *, void, uint64_t))(v26[0] + 104))(v4, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v27);
  uint64_t v22 = sub_100431F80(&qword_100A48448);
  id v23 = v28;
  uint64_t v28[3] = v22;
  v23[4] = sub_100580E44();
  sub_10044D5C4(v23);
  sub_1004D10A4(&qword_100A48468, &qword_100A48438);
  sub_1004D10A4(&qword_100A481E8, &qword_100A48198);
  sub_10057998C((unint64_t *)&unk_100A480F0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v24 = v29;
  sub_1007259B0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

uint64_t sub_100565D34(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100431F80((uint64_t *)&unk_100A48420);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0);
  uint64_t v7 = sub_100431F80(&qword_100A47F20);
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a2, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_10057998C(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100726130();
  return sub_10044C150((uint64_t)v6, (uint64_t *)&unk_100A48420);
}

unint64_t sub_100565EB0(unint64_t result, double a2)
{
  uint64_t v3 = v2;
  unint64_t v5 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_100726BA0();
    id result = swift_bridgeObjectRelease();
    if (!v16) {
      return result;
    }
  }
  else if (!*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v6 = sub_100725EB0();
  os_log_type_t v7 = sub_1007266E0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_100726580();
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    sub_10043E578(v9, v11, &v17);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v8 + 12) = 2048;
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "Will mark sender key entries for delete - with unregisteredURIs: %s deleteAfter: %f", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v5;
  *(double *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v3;
  uint64_t v14 = *(void (**)(uint64_t (*)(unint64_t), uint64_t, void (*)(uint64_t), uint64_t))((swift_isaMask & *v3) + 0xE0);
  swift_bridgeObjectRetain();
  uint64_t v15 = v3;
  v14(sub_10057EE28, v12, sub_10057EE48, v13);
  swift_release();
  return swift_release();
}

uint64_t sub_100566188(unint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100725CC0();
  uint64_t v50 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v10);
  uint64_t v61 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100431F80((uint64_t *)&unk_100A481F0);
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v53 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A48308);
  uint64_t v54 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v16);
  uint64_t v52 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v18 = *(void *)(v60 - 8);
  __chkstk_darwin(v60, v19);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_100726BA0();
  }
  else
  {
    uint64_t v22 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v58 = v21;
  uint64_t v59 = v18;
  uint64_t v51 = v9;
  uint64_t v49 = v8;
  unint64_t v56 = a1;
  Swift::String v57 = v2;
  uint64_t v55 = v15;
  if (v22)
  {
    if (v22 < 1)
    {
      __break(1u);
      goto LABEL_30;
    }
    uint64_t v23 = 0;
    uint64_t v24 = (char *)_swiftEmptyArrayStorage;
    do
    {
      if ((a2 & 0xC000000000000001) != 0) {
        id v25 = (id)sub_100726A10();
      }
      else {
        id v25 = *(id *)(a2 + 8 * v23 + 32);
      }
      uint64_t v26 = v25;
      id v27 = objc_msgSend(v25, "prefixedURI", v49);
      uint64_t v28 = sub_100726430();
      uint64_t v30 = v29;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v24 = (char *)sub_1004BEBB8(0, *((void *)v24 + 2) + 1, 1, v24);
      }
      unint64_t v32 = *((void *)v24 + 2);
      unint64_t v31 = *((void *)v24 + 3);
      if (v32 >= v31 >> 1) {
        uint64_t v24 = (char *)sub_1004BEBB8((void *)(v31 > 1), v32 + 1, 1, v24);
      }
      ++v23;
      *((void *)v24 + 2) = v32 + 1;
      uint64_t v33 = &v24[16 * v32];
      *((void *)v33 + 4) = v28;
      *((void *)v33 + 5) = v30;
    }
    while (v22 != v23);
  }
  else
  {
    uint64_t v24 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v34 = swift_bridgeObjectRelease();
  __chkstk_darwin(v34, v35);
  *(&v49 - 2) = v24;
  uint64_t v62 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  uint64_t v21 = v58;
  sub_100725D70();
  swift_bridgeObjectRelease();
  uint64_t v18 = v59;
  uint64_t v8 = (char *)v60;
  uint64_t v36 = v53;
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v53, v21, v60);
  (*(void (**)(char *, void, uint64_t, char *))(v18 + 56))(v36, 0, 1, v8);
  sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  uint64_t v37 = v52;
  sub_1007261B0();
  unint64_t v38 = v57;
  a1 = sub_100726110();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v37, v55);
  if (v38) {
    return (*(uint64_t (**)(char *, char *))(v18 + 8))(v21, v8);
  }
  unint64_t v56 = 0;
  Swift::String v57 = &v49;
  a2 = (unint64_t)v61;
  uint64_t result = sub_100725C80();
  if (!(a1 >> 62))
  {
    uint64_t v40 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v40) {
      goto LABEL_20;
    }
LABEL_31:
    swift_bridgeObjectRelease();
LABEL_32:
    (*(void (**)(unint64_t, uint64_t))(v50 + 8))(a2, v51);
    return (*(uint64_t (**)(char *, char *))(v18 + 8))(v21, v8);
  }
LABEL_30:
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_100726BA0();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v40) {
    goto LABEL_31;
  }
LABEL_20:
  if (v40 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v41 = 0;
      uint64_t v42 = v51;
      unint64_t v43 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56);
      uint64_t v44 = (uint64_t)v49;
      do
      {
        sub_100726A10();
        ++v41;
        sub_100725BD0();
        (*v43)(v44, 0, 1, v42);
        sub_1004946C0(v44);
        a2 = (unint64_t)v61;
        swift_unknownObjectRelease();
      }
      while (v40 != v41);
    }
    else
    {
      uint64_t v45 = 0;
      uint64_t v46 = v51;
      uint64_t v47 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56);
      uint64_t v48 = (uint64_t)v49;
      do
      {
        ++v45;
        swift_retain();
        sub_100725BD0();
        (*v47)(v48, 0, 1, v46);
        sub_1004946C0(v48);
        a2 = (unint64_t)v61;
        swift_release();
      }
      while (v40 != v45);
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v59;
    uint64_t v8 = (char *)v60;
    uint64_t v21 = v58;
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_100566850@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v87 = a2;
  BOOL v91 = a3;
  uint64_t v102 = sub_100431F80(&qword_100A48200);
  uint64_t v110 = *(void *)(v102 - 8);
  __chkstk_darwin(v102, v5);
  uint64_t v100 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100431F80(&qword_100A48208);
  uint64_t v108 = *(void *)(v101 - 8);
  __chkstk_darwin(v101, v7);
  uint64_t v98 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100431F80(&qword_100A48210);
  uint64_t v109 = *(void *)(v103 - 8);
  __chkstk_darwin(v103, v9);
  uint64_t v99 = (char *)&v69 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100431F80(&qword_100A48218);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100431F80(&qword_100A48310);
  uint64_t v106 = *(void *)(v94 - 8);
  __chkstk_darwin(v94, v16);
  uint64_t v18 = (char *)&v69 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100431F80(&qword_100A48318);
  uint64_t v105 = *(void *)(v93 - 8);
  __chkstk_darwin(v93, v19);
  uint64_t v21 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_100431F80(&qword_100A48320);
  uint64_t v107 = *(void *)(v97 - 8);
  __chkstk_darwin(v97, v22);
  uint64_t v92 = (char *)&v69 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_100431F80(&qword_100A483F8);
  uint64_t v90 = *(void *)(v89 - 8);
  uint64_t v25 = __chkstk_darwin(v89, v24);
  uint64_t v88 = (char *)&v69 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25, v27);
  uint64_t v104 = (char *)&v69 - v28;
  uint64_t v96 = *a1;
  uint64_t v111 = a2;
  uint64_t v86 = sub_100431F80(&qword_100A468E0);
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v95 = v12 + 8;
  v29(v15, v11);
  uint64_t v70 = v29;
  uint64_t v79 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  uint64_t v85 = sub_1004D10A4(&qword_100A48340, &qword_100A48318);
  uint64_t v80 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  uint64_t v84 = sub_1004D10A4(&qword_100A48348, &qword_100A48310);
  uint64_t v83 = sub_1004D10A4(&qword_100A48350, &qword_100A468E0);
  uint64_t v71 = v21;
  uint64_t v30 = v18;
  uint64_t v76 = v18;
  uint64_t v32 = v93;
  uint64_t v31 = v94;
  sub_1007259A0();
  uint64_t v33 = *(void (**)(char *, uint64_t))(v106 + 8);
  v106 += 8;
  uint64_t v82 = v33;
  v33(v30, v31);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v105 + 8);
  v105 += 8;
  uint64_t v81 = v34;
  v34(v21, v32);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v35 = v98;
  sub_100725980();
  swift_release();
  v29(v15, v11);
  LOBYTE(v111) = 1;
  uint64_t v36 = v100;
  sub_1007259F0();
  uint64_t v80 = (void *)sub_1004D10A4(&qword_100A48270, &qword_100A48208);
  uint64_t v79 = (void *)sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  uint64_t v37 = v99;
  uint64_t v39 = v101;
  uint64_t v38 = v102;
  sub_100725970();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v110 + 8);
  v110 += 8;
  uint64_t v78 = v40;
  v40(v36, v38);
  uint64_t v41 = *(void (**)(char *, uint64_t))(v108 + 8);
  v108 += 8;
  uint64_t v77 = v41;
  v41(v35, v39);
  uint64_t v75 = sub_1004D10A4(&qword_100A48358, &qword_100A48320);
  uint64_t v74 = sub_1004D10A4(&qword_100A48288, &qword_100A48210);
  uint64_t v42 = v92;
  unint64_t v43 = v37;
  uint64_t v44 = v97;
  uint64_t v45 = v103;
  sub_1007259C0();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v109 + 8);
  v109 += 8;
  uint64_t v73 = v46;
  v46(v43, v45);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v107 + 8);
  v107 += 8;
  uint64_t v72 = v47;
  v47(v42, v44);
  uint64_t v111 = v87;
  uint64_t v48 = v71;
  sub_1007259F0();
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v49 = v76;
  sub_100725980();
  swift_release();
  uint64_t v50 = v70;
  v70(v15, v11);
  uint64_t v51 = v49;
  uint64_t v52 = v93;
  uint64_t v53 = v94;
  sub_1007259A0();
  v82(v51, v53);
  v81(v48, v52);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v54 = v98;
  sub_100725980();
  swift_release();
  v50(v15, v11);
  LOBYTE(v111) = 0;
  uint64_t v55 = v100;
  sub_1007259F0();
  unint64_t v56 = v99;
  uint64_t v58 = v101;
  uint64_t v57 = v102;
  sub_100725970();
  v78(v55, v57);
  v77(v54, v58);
  uint64_t v59 = v88;
  uint64_t v60 = v92;
  uint64_t v61 = v97;
  uint64_t v62 = v103;
  sub_1007259C0();
  v73(v56, v62);
  v72(v60, v61);
  uint64_t v63 = sub_100431F80(&qword_100A48400);
  uint64_t v64 = v91;
  v91[3] = v63;
  v64[4] = sub_100580D5C(&qword_100A48408, &qword_100A48400, (void (*)(void))sub_100580DC8);
  sub_10044D5C4(v64);
  sub_1004D10A4(&qword_100A48418, &qword_100A483F8);
  uint64_t v65 = v104;
  uint64_t v66 = v89;
  sub_1007259D0();
  uint64_t v67 = *(void (**)(char *, uint64_t))(v90 + 8);
  v67(v59, v66);
  return ((uint64_t (*)(char *, uint64_t))v67)(v65, v66);
}

uint64_t sub_10056746C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100726430();
  uint64_t v7 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xD0))(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v8 = sub_100725EB0();
  os_log_type_t v9 = sub_1007266E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315138;
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100726580();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_10043E578(v11, v13, &v19);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "Cleaning up invalid sender key entries - with registeredURIs: %s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v7;
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v3;
  v15[3] = a1;
  v15[4] = a2;
  uint64_t v16 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, id (*)(uint64_t), void *))((swift_isaMask & *v3) + 0xE0);
  uint64_t v17 = v3;
  swift_retain();
  v16(sub_10057EE8C, v14, sub_10057EEEC, v15);
  swift_release();
  return swift_release();
}

uint64_t sub_100567740(uint64_t a1, uint64_t a2)
{
  uint64_t v102 = a2;
  uint64_t v107 = a1;
  uint64_t v2 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v105 = (char *)&v89 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v93 = sub_100431F80(&qword_100A48308);
  uint64_t v92 = *(void *)(v93 - 8);
  __chkstk_darwin(v93, v5);
  BOOL v91 = (char *)&v89 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100431F80((uint64_t *)&unk_100A481F0);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v90 = (char *)&v89 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v94 = (char *)&v89 - v13;
  __chkstk_darwin(v12, v14);
  unint64_t v113 = (char *)&v89 - v15;
  uint64_t v104 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v109 = *(void *)(v104 - 8);
  uint64_t v17 = __chkstk_darwin(v104, v16);
  unint64_t v114 = (char *)&v89 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v22 = (char *)&v89 - v21;
  __chkstk_darwin(v20, v23);
  uint64_t v25 = (char *)&v89 - v24;
  uint64_t v26 = sub_100725CC0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v97 = (char *)&v89 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v98 = (char *)&v89 - v33;
  uint64_t v35 = __chkstk_darwin(v32, v34);
  uint64_t v37 = (char *)&v89 - v36;
  uint64_t v39 = __chkstk_darwin(v35, v38);
  uint64_t v41 = (char *)&v89 - v40;
  __chkstk_darwin(v39, v42);
  uint64_t v44 = (char *)&v89 - v43;
  uint64_t v45 = type metadata accessor for SenderKeyDistributionManager(0);
  (*(void (**)(void))(v45 + 720))();
  (*(void (**)(void))(v45 + 728))();
  sub_100725CB0();
  sub_100725BD0();
  uint64_t v89 = v27;
  uint64_t v46 = *(void (**)(char *, uint64_t))(v27 + 8);
  v46(v41, v26);
  sub_100725CB0();
  sub_100725BD0();
  uint64_t v47 = v25;
  unint64_t v48 = v102;
  uint64_t v110 = v46;
  uint64_t v111 = v27 + 8;
  v46(v41, v26);
  uint64_t v99 = v44;
  id v116 = v44;
  uint64_t v49 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  uint64_t v117 = v49;
  sub_100725D70();
  uint64_t v100 = v37;
  uint64_t v115 = v37;
  uint64_t v103 = v22;
  sub_100725D70();
  if (v48 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_100726BA0();
  }
  else
  {
    uint64_t v50 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v112 = v26;
  unint64_t v51 = (unint64_t)v113;
  uint64_t v108 = v47;
  uint64_t v106 = v49;
  if (v50)
  {
    if (v50 < 1)
    {
      __break(1u);
      goto LABEL_35;
    }
    uint64_t v52 = 0;
    unint64_t v53 = v48 & 0xC000000000000001;
    uint64_t v54 = _swiftEmptyArrayStorage;
    unint64_t v55 = v48;
    do
    {
      if (v53) {
        id v56 = (id)sub_100726A10();
      }
      else {
        id v56 = *(id *)(v48 + 8 * v52 + 32);
      }
      uint64_t v57 = v56;
      id v58 = [v56 prefixedURI];
      uint64_t v59 = sub_100726430();
      uint64_t v61 = v60;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v54 = sub_1004BEBB8(0, v54[2] + 1, 1, v54);
      }
      unint64_t v63 = v54[2];
      unint64_t v62 = v54[3];
      if (v63 >= v62 >> 1) {
        uint64_t v54 = sub_1004BEBB8((void *)(v62 > 1), v63 + 1, 1, v54);
      }
      ++v52;
      v54[2] = v63 + 1;
      uint64_t v64 = &v54[2 * v63];
      v64[4] = v59;
      v64[5] = v61;
      unint64_t v51 = (unint64_t)v113;
      unint64_t v48 = v55;
    }
    while (v50 != v52);
  }
  else
  {
    uint64_t v54 = _swiftEmptyArrayStorage;
  }
  uint64_t v65 = swift_bridgeObjectRelease();
  unint64_t v113 = (char *)&v89;
  __chkstk_darwin(v65, v66);
  *(&v89 - 2) = (uint64_t)v54;
  sub_100725D70();
  swift_bridgeObjectRelease();
  uint64_t v68 = v108;
  uint64_t v67 = v109;
  uint64_t v69 = v104;
  uint64_t v95 = *(void (**)(unint64_t, char *, uint64_t))(v109 + 16);
  v95(v51, v108, v104);
  uint64_t v96 = *(void (**)(unint64_t, void, uint64_t, uint64_t))(v67 + 56);
  v96(v51, 0, 1, v69);
  uint64_t v102 = sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  uint64_t v70 = v101;
  sub_100726130();
  if (v70)
  {
    sub_10044C150(v51, (uint64_t *)&unk_100A481F0);
    uint64_t v71 = *(void (**)(char *, uint64_t))(v67 + 8);
    v71(v114, v69);
    v71(v103, v69);
    v71(v68, v69);
    uint64_t v75 = v112;
    uint64_t v76 = (uint64_t (*)(char *, uint64_t))v110;
    v110(v100, v112);
    return v76(v99, v75);
  }
  sub_10044C150(v51, (uint64_t *)&unk_100A481F0);
  uint64_t v72 = (uint64_t)v94;
  v95((unint64_t)v94, v103, v69);
  v96(v72, 0, 1, v69);
  sub_100726130();
  uint64_t v26 = 0;
  sub_10044C150(v72, (uint64_t *)&unk_100A481F0);
  uint64_t v73 = v90;
  v95((unint64_t)v90, v114, v69);
  v96((unint64_t)v73, 0, 1, v69);
  uint64_t v74 = v91;
  sub_1007261B0();
  unint64_t v51 = sub_100726110();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v74, v93);
  uint64_t result = sub_100725C80();
  if (!(v51 >> 62))
  {
    uint64_t v78 = *(void *)((v51 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_20;
  }
LABEL_35:
  swift_bridgeObjectRetain();
  uint64_t v78 = sub_100726BA0();
  uint64_t result = swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v79 = v112;
  uint64_t v101 = v26;
  if (!v78)
  {
LABEL_32:
    swift_bridgeObjectRelease();
    uint64_t v85 = v110;
    v110(v98, v79);
    uint64_t v86 = *(void (**)(char *, uint64_t))(v109 + 8);
    uint64_t v87 = v79;
    uint64_t v88 = v104;
    v86(v114, v104);
    v86(v103, v88);
    v86(v108, v88);
    v85(v100, v87);
    return ((uint64_t (*)(char *, uint64_t))v85)(v99, v87);
  }
  if (v78 >= 1)
  {
    uint64_t v80 = 0;
    uint64_t v81 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
    uint64_t v82 = (void (**)(void))(v89 + 32);
    do
    {
      if ((v51 & 0xC000000000000001) != 0) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      uint64_t v83 = (uint64_t)v105;
      sub_100494314();
      uint64_t v79 = v112;
      if ((*v81)(v83, 1, v112) == 1)
      {
        swift_release();
        sub_10044C150(v83, &qword_100A47D80);
      }
      else
      {
        uint64_t v84 = v97;
        (*v82)();
        if (sub_100725C00())
        {
          sub_100726140();
          uint64_t v79 = v112;
          swift_release();
          v110(v84, v79);
        }
        else
        {
          v110(v84, v79);
          swift_release();
        }
      }
      ++v80;
    }
    while (v78 != v80);
    goto LABEL_32;
  }
  __break(1u);
  return result;
}

uint64_t sub_10056833C@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t *a4@<X8>)
{
  int v66 = a3;
  uint64_t v59 = a2;
  uint64_t v72 = a4;
  uint64_t v5 = sub_100431F80(&qword_100A48200);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v68 = v5;
  uint64_t v69 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v64 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_100431F80(&qword_100A48208);
  uint64_t v67 = *(void *)(v65 - 8);
  __chkstk_darwin(v65, v9);
  uint64_t v61 = (char *)v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100431F80(&qword_100A48210);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v70 = v11;
  uint64_t v71 = v12;
  __chkstk_darwin(v11, v13);
  unint64_t v63 = (char *)v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1007259E0();
  v51[0] = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  unint64_t v55 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100431F80(&qword_100A48198);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v57 = v19;
  uint64_t v58 = v20;
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)v51 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100431F80(&qword_100A48218);
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24, v26);
  uint64_t v28 = (char *)v51 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_100431F80(&qword_100A483B8);
  uint64_t v56 = *(void *)(v54 - 8);
  __chkstk_darwin(v54, v29);
  uint64_t v31 = (char *)v51 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100431F80(&qword_100A483C0);
  uint64_t v62 = *(void *)(v60 - 8);
  __chkstk_darwin(v60, v32);
  uint64_t v73 = (char *)v51 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = *a1;
  v51[2] = sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v34 = *(void (**)(char *, uint64_t))(v25 + 8);
  v51[3] = v25 + 8;
  uint64_t v52 = v34;
  v34(v28, v24);
  sub_100725CC0();
  uint64_t v35 = v23;
  sub_1007259F0();
  uint64_t v36 = v55;
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v55, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v15);
  uint64_t v59 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  sub_1004D10A4(&qword_100A483C8, &qword_100A483B8);
  v51[1] = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  sub_1004D10A4(&qword_100A481E8, &qword_100A48198);
  sub_10057998C((unint64_t *)&unk_100A480F0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v37 = v54;
  uint64_t v38 = v57;
  sub_1007259B0();
  (*(void (**)(char *, void))(v16 + 8))(v36, v51[0]);
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v38);
  (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v37);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v39 = v61;
  sub_100725980();
  swift_release();
  v52(v28, v24);
  char v74 = v66;
  uint64_t v40 = v64;
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48270, &qword_100A48208);
  sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  uint64_t v41 = v63;
  uint64_t v42 = v40;
  uint64_t v43 = v65;
  uint64_t v44 = v68;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v42, v44);
  (*(void (**)(char *, uint64_t))(v67 + 8))(v39, v43);
  uint64_t v45 = sub_100431F80(&qword_100A483D0);
  uint64_t v46 = v72;
  v72[3] = v45;
  v46[4] = sub_100580C3C();
  sub_10044D5C4(v46);
  sub_1004D10A4(&qword_100A483F0, &qword_100A483C0);
  sub_1004D10A4(&qword_100A48288, &qword_100A48210);
  uint64_t v47 = v73;
  uint64_t v48 = v60;
  uint64_t v49 = v70;
  sub_1007259C0();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v41, v49);
  return (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v47, v48);
}

uint64_t sub_100568BB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v102 = a3;
  uint64_t v114 = sub_100431F80(&qword_100A48200);
  uint64_t v123 = *(void *)(v114 - 8);
  __chkstk_darwin(v114, v5);
  uint64_t v112 = (char *)v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100431F80(&qword_100A48208);
  uint64_t v121 = *(void *)(v113 - 8);
  __chkstk_darwin(v113, v7);
  uint64_t v110 = (char *)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_100431F80(&qword_100A48210);
  uint64_t v122 = *(void *)(v115 - 8);
  __chkstk_darwin(v115, v9);
  uint64_t v111 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100431F80(&qword_100A48218);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = sub_100431F80(&qword_100A48310);
  uint64_t v119 = *(void *)(v106 - 8);
  __chkstk_darwin(v106, v16);
  uint64_t v18 = (char *)v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100431F80(&qword_100A48318);
  uint64_t v118 = *(void *)(v105 - 8);
  __chkstk_darwin(v105, v19);
  uint64_t v21 = (char *)v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_100431F80(&qword_100A48320);
  uint64_t v117 = *(void *)(v104 - 8);
  __chkstk_darwin(v104, v22);
  uint64_t v103 = (char *)v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_100431F80(&qword_100A48328);
  uint64_t v120 = *(void *)(v109 - 8);
  __chkstk_darwin(v109, v24);
  int64_t v124 = (char *)v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_100431F80((uint64_t *)&unk_100A48330);
  uint64_t v101 = *(void *)(v100 - 8);
  uint64_t v27 = __chkstk_darwin(v100, v26);
  uint64_t v99 = (char *)v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27, v29);
  id v116 = (char *)v78 - v30;
  uint64_t v108 = *a1;
  uint64_t v125 = a2;
  uint64_t v97 = sub_100431F80(&qword_100A468E0);
  sub_1007259F0();
  uint64_t v31 = v11;
  v78[1] = sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v107 = v12 + 8;
  v32(v15, v11);
  uint64_t v79 = v32;
  uint64_t v87 = &protocol conformance descriptor for PredicateExpressions.Value<A>;
  uint64_t v96 = sub_1004D10A4(&qword_100A48340, &qword_100A48318);
  uint64_t v88 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  uint64_t v95 = sub_1004D10A4(&qword_100A48348, &qword_100A48310);
  uint64_t v94 = sub_1004D10A4(&qword_100A48350, &qword_100A468E0);
  uint64_t v33 = v103;
  uint64_t v34 = v21;
  uint64_t v84 = v21;
  uint64_t v89 = v18;
  uint64_t v36 = v105;
  uint64_t v35 = v106;
  sub_1007259A0();
  uint64_t v37 = *(void (**)(char *, uint64_t))(v119 + 8);
  v119 += 8;
  uint64_t v93 = v37;
  v37(v18, v35);
  uint64_t v38 = *(void (**)(char *, uint64_t))(v118 + 8);
  v118 += 8;
  uint64_t v92 = v38;
  v38(v34, v36);
  uint64_t v91 = sub_1004D10A4(&qword_100A48358, &qword_100A48320);
  uint64_t v39 = v104;
  sub_100725990();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v117 + 8);
  v117 += 8;
  uint64_t v90 = v40;
  v40(v33, v39);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v41 = v110;
  sub_100725980();
  swift_release();
  v32(v15, v31);
  LOBYTE(v125) = 1;
  uint64_t v42 = v112;
  sub_1007259F0();
  uint64_t v88 = (void *)sub_1004D10A4(&qword_100A48270, &qword_100A48208);
  uint64_t v87 = (void *)sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  uint64_t v43 = v111;
  uint64_t v45 = v113;
  uint64_t v44 = v114;
  sub_100725970();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v123 + 8);
  v123 += 8;
  uint64_t v86 = v46;
  v46(v42, v44);
  uint64_t v47 = *(void (**)(char *, uint64_t))(v121 + 8);
  v121 += 8;
  uint64_t v85 = v47;
  v47(v41, v45);
  uint64_t v83 = sub_1004D10A4(&qword_100A48360, &qword_100A48328);
  uint64_t v82 = sub_1004D10A4(&qword_100A48288, &qword_100A48210);
  uint64_t v48 = v115;
  uint64_t v49 = v124;
  uint64_t v50 = v43;
  uint64_t v51 = v109;
  sub_1007259C0();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v122 + 8);
  v122 += 8;
  uint64_t v81 = v52;
  v52(v50, v48);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v120 + 8);
  v120 += 8;
  uint64_t v80 = v53;
  v53(v49, v51);
  uint64_t v125 = v98;
  uint64_t v54 = v84;
  sub_1007259F0();
  v78[0] = v31;
  sub_100725A00();
  swift_getKeyPath();
  unint64_t v55 = v89;
  sub_100725980();
  swift_release();
  uint64_t v56 = v79;
  v79(v15, v31);
  uint64_t v57 = v103;
  uint64_t v58 = v105;
  uint64_t v59 = v106;
  sub_1007259A0();
  v93(v55, v59);
  v92(v54, v58);
  uint64_t v60 = v104;
  sub_100725990();
  v90(v57, v60);
  uint64_t v61 = v78[0];
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v62 = v110;
  sub_100725980();
  swift_release();
  v56(v15, v61);
  LOBYTE(v125) = 0;
  unint64_t v63 = v112;
  sub_1007259F0();
  uint64_t v64 = v111;
  uint64_t v66 = v113;
  uint64_t v65 = v114;
  sub_100725970();
  v86(v63, v65);
  v85(v62, v66);
  uint64_t v67 = v99;
  uint64_t v68 = v124;
  uint64_t v69 = v64;
  uint64_t v70 = v109;
  uint64_t v71 = v115;
  sub_1007259C0();
  v81(v69, v71);
  v80(v68, v70);
  uint64_t v72 = sub_100431F80(&qword_100A48368);
  uint64_t v73 = v102;
  v102[3] = v72;
  v73[4] = sub_100580D5C(&qword_100A48370, &qword_100A48368, (void (*)(void))sub_100580A28);
  sub_10044D5C4(v73);
  sub_1004D10A4(&qword_100A483B0, (uint64_t *)&unk_100A48330);
  char v74 = v116;
  uint64_t v75 = v100;
  sub_1007259D0();
  uint64_t v76 = *(void (**)(char *, uint64_t))(v101 + 8);
  v76(v67, v75);
  return ((uint64_t (*)(char *, uint64_t))v76)(v74, v75);
}

id sub_10056994C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v26 = a6;
  uint64_t v27 = a7;
  uint64_t v25 = a3;
  uint64_t v10 = sub_100725EF0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100725F20();
  uint64_t v15 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v16);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = (id)im_primary_queue();
  if (result)
  {
    uint64_t v20 = result;
    uint64_t v21 = (void *)swift_allocObject();
    void v21[2] = a1;
    v21[3] = a2;
    v21[4] = v25;
    v21[5] = a4;
    aBlock[4] = v26;
    aBlock[5] = v21;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100435714;
    aBlock[3] = v27;
    uint64_t v22 = _Block_copy(aBlock);
    swift_errorRetain();
    id v23 = a2;
    swift_retain();
    sub_100725F00();
    uint64_t v29 = _swiftEmptyArrayStorage;
    sub_10057998C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    sub_100726890();
    sub_100726750();
    _Block_release(v22);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v28);
    return (id)swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100569CC0(uint64_t a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  uint64_t v5 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, void (*)(uint64_t), uint64_t))((swift_isaMask & *v1) + 0xE0);
  swift_bridgeObjectRetain();
  uint64_t v6 = v1;
  v5(sub_10057EF30, v3, sub_10057EF4C, v4);
  swift_release();

  return swift_release();
}

uint64_t sub_100569DB8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100431F80((uint64_t *)&unk_100A481F0);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100431F80((uint64_t *)&unk_100A47EF0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = a2;
  uint64_t v15 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  sub_100725D70();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 16))(v6, v11, v7);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  sub_10057998C(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726130();
  sub_10044C150((uint64_t)v6, (uint64_t *)&unk_100A481F0);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_100569FC4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v62 = a3;
  uint64_t v70 = sub_100431F80(&qword_100A48200);
  uint64_t v72 = *(void *)(v70 - 8);
  __chkstk_darwin(v70, v5);
  uint64_t v67 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_100431F80(&qword_100A48208);
  uint64_t v71 = *(void *)(v68 - 8);
  __chkstk_darwin(v68, v7);
  uint64_t v56 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100431F80(&qword_100A48210);
  uint64_t v73 = *(void *)(v60 - 8);
  __chkstk_darwin(v60, v9);
  uint64_t v58 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100431F80(&qword_100A48218);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11, v13);
  uint64_t v15 = (char *)&v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100431F80(&qword_100A48220);
  uint64_t v54 = *(void *)(v53 - 8);
  __chkstk_darwin(v53, v16);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = (void *)sub_100431F80(&qword_100A48228);
  uint64_t v52 = *(v51 - 1);
  __chkstk_darwin(v51, v19);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100431F80(&qword_100A48230);
  uint64_t v57 = *(void *)(v55 - 8);
  __chkstk_darwin(v55, v22);
  uint64_t v66 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100431F80(&qword_100A48238);
  uint64_t v61 = *(void *)(v59 - 8);
  __chkstk_darwin(v59, v24);
  uint64_t v69 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = *a1;
  uint64_t v76 = a2;
  sub_100431F80(&qword_100A48240);
  sub_1007259F0();
  sub_1004D10A4(&qword_100A48248, &qword_100A48218);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v64 = v12 + 8;
  uint64_t v65 = v26;
  v26(v15, v11);
  uint64_t v50 = (void (*)(char *, uint64_t))&protocol conformance descriptor for PredicateExpressions.Value<A>;
  sub_1004D10A4(&qword_100A48250, &qword_100A48228);
  uint64_t v49 = &protocol conformance descriptor for PredicateExpressions.KeyPath<A, B>;
  sub_1004D10A4(&qword_100A48258, &qword_100A48220);
  sub_1004D10A4(&qword_100A48260, &qword_100A48240);
  sub_1005805CC();
  uint64_t v27 = v18;
  uint64_t v28 = v51;
  uint64_t v29 = v53;
  sub_1007259A0();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v29);
  (*(void (**)(char *, void *))(v52 + 8))(v21, v28);
  sub_100725A00();
  swift_getKeyPath();
  uint64_t v30 = v56;
  sub_100725980();
  swift_release();
  v65(v15, v11);
  char v75 = 1;
  uint64_t v31 = v67;
  sub_1007259F0();
  uint64_t v53 = sub_1004D10A4(&qword_100A48270, &qword_100A48208);
  uint64_t v52 = sub_1004D10A4(&qword_100A48278, &qword_100A48200);
  uint64_t v32 = v58;
  uint64_t v33 = v68;
  uint64_t v34 = v70;
  sub_100725970();
  uint64_t v35 = *(void **)(v72 + 8);
  v72 += 8;
  uint64_t v51 = v35;
  ((void (*)(char *, uint64_t))v35)(v31, v34);
  uint64_t v36 = *(void (**)(char *, uint64_t))(v71 + 8);
  v71 += 8;
  uint64_t v50 = v36;
  v36(v30, v33);
  sub_1004D10A4(&qword_100A48280, &qword_100A48230);
  uint64_t v54 = sub_1004D10A4(&qword_100A48288, &qword_100A48210);
  uint64_t v37 = v66;
  uint64_t v38 = v55;
  uint64_t v39 = v60;
  sub_1007259C0();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v73 + 8);
  v73 += 8;
  v40(v32, v39);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v37, v38);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  v65(v15, v11);
  char v74 = 0;
  uint64_t v41 = v67;
  sub_1007259F0();
  uint64_t v42 = v68;
  uint64_t v43 = v70;
  sub_100725970();
  ((void (*)(char *, uint64_t))v51)(v41, v43);
  v50(v30, v42);
  uint64_t v44 = sub_100431F80(&qword_100A48290);
  uint64_t v45 = v62;
  v62[3] = v44;
  v45[4] = sub_100580620();
  sub_10044D5C4(v45);
  sub_1004D10A4(&qword_100A48300, &qword_100A48238);
  uint64_t v46 = v69;
  uint64_t v47 = v59;
  sub_1007259C0();
  v40(v32, v39);
  return (*(uint64_t (**)(char *, uint64_t))(v61 + 8))(v46, v47);
}

uint64_t sub_10056A994(uint64_t a1)
{
  v21[0] = a1;
  uint64_t v1 = sub_100431F80(&qword_100A48180);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A48188);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100725CC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13, v16);
  uint64_t v18 = (char *)v21 - v17;
  sub_100536FD4();
  sub_100725CB0();
  sub_100725BD0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v11 + 8);
  v19(v15, v10);
  v21[4] = v18;
  v21[5] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent(0);
  sub_100725D70();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v4, v9, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  sub_10057998C(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100726130();
  sub_10044C150((uint64_t)v4, &qword_100A48180);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  return ((uint64_t (*)(char *, uint64_t))v19)(v18, v10);
}

uint64_t sub_10056AC88@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  v26[1] = a1;
  uint64_t v28 = a2;
  uint64_t v27 = sub_1007259E0();
  v26[0] = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v2);
  uint64_t v4 = (char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A48198);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  uint64_t v30 = v6;
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A481A0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100431F80(&qword_100A481A8);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15, v17);
  uint64_t v19 = (char *)v26 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A481B0, &qword_100A481A0);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  sub_100725CC0();
  sub_1007259F0();
  uint64_t v20 = v26[0];
  uint64_t v21 = v27;
  (*(void (**)(char *, void, uint64_t))(v26[0] + 104))(v4, enum case for PredicateExpressions.ComparisonOperator.lessThan(_:), v27);
  uint64_t v22 = sub_100431F80(&qword_100A481B8);
  uint64_t v23 = v28;
  uint64_t v28[3] = v22;
  v23[4] = sub_100580450();
  sub_10044D5C4(v23);
  sub_1004D10A4(&qword_100A481E0, &qword_100A481A8);
  sub_1004D10A4(&qword_100A481E8, &qword_100A48198);
  sub_10057998C((unint64_t *)&unk_100A480F0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v24 = v29;
  sub_1007259B0();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v9, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v19, v15);
}

void sub_10056B198(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v41[0] = a2;
  v41[1] = a3;
  uint64_t v3 = sub_100431F80(&qword_100A48128);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100431F80(&qword_100A48130);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100431F80(&qword_100A48138);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount(0);
  sub_100725D70();
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v42 = v16;
  v17(v6, v16, v12);
  uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56);
  uint64_t v43 = v12;
  v18(v6, 0, 1, v12);
  sub_10057998C(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_1007261B0();
  uint64_t v19 = v44;
  uint64_t v20 = sub_100726110();
  if (!v19)
  {
    unint64_t v26 = v20;
    uint64_t v27 = (void **)v41[0];
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    if (v26 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_100726BA0();
      swift_bridgeObjectRelease();
      if (v40)
      {
LABEL_6:
        if ((v26 & 0xC000000000000001) != 0)
        {
          sub_100726A10();
        }
        else
        {
          if (!*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          swift_retain();
        }
        swift_bridgeObjectRelease();
        id v28 = [objc_allocWithZone((Class)IDSQualifiedContactsMetric) init];
        sub_10049A608();
        Class isa = sub_100726690().super.super.isa;
        [v28 setQualifiedHandlesCount:isa];

        sub_10049A980();
        Class v30 = sub_100726690().super.super.isa;
        [v28 setQualifiedHandlesIML:v30];

        sub_10049ACF8();
        Class v31 = sub_100726690().super.super.isa;
        [v28 setHandlesCount:v31];

        sub_10049B760();
        Class v32 = sub_100726690().super.super.isa;
        [v28 setEmergencyHandlesCount:v32];

        sub_10049B070();
        Class v33 = sub_100726690().super.super.isa;
        [v28 setQualifiedEmergencyHandles:v33];

        sub_10049B3E8();
        Class v34 = sub_100726690().super.super.isa;
        [v28 setQualifiedEmergencyHandlesIML:v34];

        sub_10049BAD8();
        Class v35 = sub_100726690().super.super.isa;
        [v28 setQualifiedPrimaryHandles:v35];

        sub_10049BE50();
        Class v36 = sub_100726690().super.super.isa;
        [v28 setQualifiedPrimaryHandlesIML:v36];

        sub_10049C1C8();
        Class v37 = sub_100726690().super.super.isa;
        [v28 setPrimaryHandlesCount:v37];

        sub_10049C540();
        Class v38 = sub_100726690().super.super.isa;
        [v28 setFamilyHandlesCount:v38];
        swift_release();

        (*(void (**)(char *, uint64_t))(v13 + 8))(v42, v43);
        uint64_t v39 = *v27;
        *uint64_t v27 = v28;

        return;
      }
    }
    else if (*(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_6;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v42, v43);
    return;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v21 = sub_100725EB0();
  os_log_type_t v22 = sub_1007266C0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 138412290;
    swift_errorRetain();
    uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v45 = v25;
    sub_100726830();
    *uint64_t v24 = v25;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "Error fetching IDSQualifiedContactsCount: %@", v23, 0xCu);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v42, v43);
}

uint64_t sub_10056B80C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100431F80(&qword_100A48060);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  uint64_t v21 = v3;
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100431F80(&qword_100A48140);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100431F80(&qword_100A48148);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A48150, &qword_100A48140);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  uint64_t v22 = sub_100726430();
  uint64_t v23 = v17;
  sub_1007259F0();
  swift_bridgeObjectRelease();
  a1[3] = sub_100431F80(&qword_100A48158);
  a1[4] = sub_1005802F8();
  sub_10044D5C4(a1);
  sub_1004D10A4(&qword_100A48178, &qword_100A48148);
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v18 = v20;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v18);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
}

uint64_t sub_10056BC0C(uint64_t a1, void *a2)
{
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount(0);
  sub_100726430();
  id v3 = [a2 qualifiedHandlesCount];
  [v3 integerValue];

  id v4 = [a2 qualifiedHandlesIML];
  [v4 integerValue];

  id v5 = [a2 handlesCount];
  [v5 integerValue];

  id v6 = [a2 qualifiedEmergencyHandles];
  [v6 integerValue];

  id v7 = [a2 qualifiedEmergencyHandlesIML];
  [v7 integerValue];

  id v8 = [a2 emergencyHandlesCount];
  [v8 integerValue];

  id v9 = [a2 qualifiedPrimaryHandles];
  [v9 integerValue];

  id v10 = [a2 qualifiedPrimaryHandlesIML];
  [v10 integerValue];

  id v11 = [a2 primaryHandlesCount];
  [v11 integerValue];

  id v12 = [a2 familyHandlesCount];
  [v12 integerValue];

  sub_10049C8B8();
  sub_10057998C(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726150();

  return swift_release();
}

void sub_10056BEB8(uint64_t a1, uint64_t a2, const char *a3)
{
  if (a1)
  {
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    id v4 = sub_100725EB0();
    os_log_type_t v5 = sub_1007266C0();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      id v7 = (void *)swift_slowAlloc();
      *(_DWORD *)id v6 = 138412290;
      swift_errorRetain();
      uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
      sub_100726830();
      void *v7 = v8;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, a3, v6, 0xCu);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10056C190(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, uint64_t *a6)
{
  id v10 = [a5 prefixedURI];
  uint64_t v11 = sub_100726430();
  uint64_t v13 = v12;

  uint64_t v14 = sub_1005444B8(a3, a4, v11, v13, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v14) {
    return result;
  }
  unint64_t v16 = sub_100489450();
  if (v16)
  {
    unint64_t v17 = v16;
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_100726BA0();
      uint64_t v18 = result;
      if (result) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v18)
      {
LABEL_5:
        if (v18 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v18; ++i)
        {
          if ((v17 & 0xC000000000000001) != 0) {
            sub_100726A10();
          }
          else {
            swift_retain();
          }
          uint64_t v20 = sub_10048A368();
          unint64_t v22 = v21;
          id v23 = objc_allocWithZone((Class)IDSPushToken);
          Class isa = sub_100725B20().super.isa;
          id v25 = [v23 initWithData:isa];
          sub_100442248(v20, v22);
          swift_release();

          if (v25)
          {
            sub_100726550();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1007265A0();
            }
            sub_1007265C0();
            sub_100726590();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_100481658((unint64_t)_swiftEmptyArrayStorage, (unint64_t *)&qword_100A47A80, (uint64_t)IDSPushToken_ptr, (unint64_t *)&qword_100A48110, (uint64_t *)&unk_100A455F0);
    swift_release();
    swift_bridgeObjectRelease();
    *a6 = v26;
    return swift_bridgeObjectRelease();
  }

  return swift_release();
}

void sub_10056C5CC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, void *a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  id v15 = [a5 prefixedURI];
  uint64_t v16 = sub_100726430();
  uint64_t v18 = v17;

  uint64_t v19 = sub_1005444B8(a3, a4, v16, v18, a1);
  swift_bridgeObjectRelease();
  if (v19)
  {
    uint64_t v20 = sub_100489450();
    if (v20)
    {
      unint64_t v21 = v20;
      id v22 = a6;
      uint64_t v23 = sub_10057C6AC(v21, v22);
      swift_bridgeObjectRelease();

      if (!v23)
      {
        swift_release();
        return;
      }
      id v24 = [a7 prefixedURI];
      id v45 = (id)sub_100726430();
      uint64_t v42 = v25;

      id v26 = [a5 prefixedURI];
      uint64_t v41 = sub_100726430();
      uint64_t v28 = v27;

      id v29 = [v22 rawToken];
      uint64_t v30 = sub_100725B50();
      unint64_t v32 = v31;

      uint64_t v33 = sub_1005497A4(a3, a4, (uint64_t)v45, v42, v41, v28, v30, v32, 0, a1);
      sub_100442248(v30, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (v33)
      {
        type metadata accessor for ArchiveHelper();
        uint64_t v34 = sub_100462C50(0, &qword_100A480C0);
        uint64_t v35 = sub_10048A670();
        unint64_t v37 = v36;
        Class v38 = (void *)sub_10044CCC4(v34, v35, v36);
        sub_100442248(v35, v37);
        if (v38)
        {
          NSString v39 = sub_100726420();
          id v40 = [v38 valueForCapability:v39];

          swift_release();
          swift_release();

          *a8 = v40;
          return;
        }
      }
      swift_release();
    }
    swift_release();
  }
}

uint64_t sub_10056C9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t *a11)
{
  uint64_t result = sub_1005497A4(a3, a4, a5, a6, a7, a8, a9, a10, 0, a1);
  if (result)
  {
    uint64_t v12 = sub_10048DEA8();
    uint64_t v14 = v13;
    swift_release();
    uint64_t v15 = *a11;
    unint64_t v16 = a11[1];
    *a11 = v12;
    a11[1] = v14;
    return sub_10044CE88(v15, v16);
  }
  return result;
}

uint64_t sub_10056CC00(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, uint64_t *a6)
{
  id v10 = [a5 prefixedURI];
  uint64_t v11 = sub_100726430();
  uint64_t v13 = v12;

  unint64_t v14 = sub_10054C900(a3, a4, v11, v13, a1);
  swift_bridgeObjectRelease();
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100726BA0();
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_15;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v15) {
      goto LABEL_15;
    }
  }
  if (v15 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0) {
      sub_100726A10();
    }
    else {
      swift_retain();
    }
    sub_10048D8A4();
    id v18 = objc_allocWithZone((Class)IDSURI);
    NSString v19 = sub_100726420();
    swift_bridgeObjectRelease();
    id v20 = [v18 initWithPrefixedURI:v19];
    swift_release();

    if (v20)
    {
      sub_100726550();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1007265A0();
      }
      sub_1007265C0();
      sub_100726590();
    }
  }
LABEL_15:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = sub_100481658((unint64_t)_swiftEmptyArrayStorage, (unint64_t *)&unk_100A47EC0, (uint64_t)IDSURI_ptr, (unint64_t *)&unk_100A46850, &qword_100A459E0);
  swift_bridgeObjectRelease();
  *a6 = v21;

  return swift_bridgeObjectRelease();
}

uint64_t sub_10056CE98(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, void *a6)
{
  id v10 = [a5 rawToken];
  uint64_t v11 = sub_100725B50();
  unint64_t v13 = v12;

  uint64_t v14 = sub_100546FA4(a3, a4, v11, v13, a1);
  uint64_t result = sub_100442248(v11, v13);
  if (!v14) {
    return result;
  }
  unint64_t v16 = sub_10048BE40();
  if (v16)
  {
    unint64_t v17 = v16;
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = sub_100726BA0();
      uint64_t v18 = result;
      uint64_t v23 = a6;
      if (result) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v18 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      uint64_t v23 = a6;
      if (v18)
      {
LABEL_5:
        if (v18 < 1)
        {
          __break(1u);
          return result;
        }
        for (uint64_t i = 0; i != v18; ++i)
        {
          if ((v17 & 0xC000000000000001) != 0) {
            sub_100726A10();
          }
          else {
            swift_retain();
          }
          sub_1004885A0();
          id v20 = objc_allocWithZone((Class)IDSURI);
          NSString v21 = sub_100726420();
          swift_bridgeObjectRelease();
          id v22 = [v20 initWithPrefixedURI:v21];
          swift_release();

          if (v22)
          {
            sub_100726550();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1007265A0();
            }
            sub_1007265C0();
            sub_100726590();
          }
        }
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    *uint64_t v23 = _swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }

  return swift_release();
}

uint64_t sub_10056D2D8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, uint64_t a6)
{
  id v10 = [a5 rawToken];
  uint64_t v11 = sub_100725B50();
  unint64_t v13 = v12;

  uint64_t v14 = sub_100546FA4(a3, a4, v11, v13, a1);
  uint64_t result = sub_100442248(v11, v13);
  if (v14)
  {
    sub_10048B9E0((uint64_t)v16);
    swift_release();
    sub_100462BE4((uint64_t)&v17, (uint64_t)v18, &qword_100A45B30);
    sub_100580298((uint64_t)v18);
    sub_10057FED0(v16);
    return sub_10046E91C((uint64_t)v18, a6, &qword_100A45B30);
  }
  return result;
}

void sub_10056D4F0(uint64_t a1, int a2, id a3, NSObject *a4)
{
  id v8 = [a3 rawToken];
  uint64_t v9 = sub_100725B50();
  unint64_t v11 = v10;

  uint64_t v12 = sub_100547CC4(v9, v11, a1);
  sub_100442248(v9, v11);
  if (v12)
  {
    sub_10048B9E0((uint64_t)v37);
    sub_100462BE4((uint64_t)&v38, (uint64_t)v47, &qword_100A45B30);
    sub_100580298((uint64_t)v47);
    sub_10057FED0(v37);
    sub_100462BE4((uint64_t)v47, (uint64_t)v48, &qword_100A45B30);
    if (v48[1] >> 60 == 15)
    {
      swift_release();
      return;
    }
    os_log_t log = a4;
    sub_10048B9E0((uint64_t)v39);
    sub_100462BE4((uint64_t)&v40, (uint64_t)v46, &qword_100A45B30);
    sub_100580298((uint64_t)v46);
    sub_10057FED0(v39);
    sub_100462BE4((uint64_t)v46, (uint64_t)v49, &qword_100A45B30);
    if (v49[1] >> 60 == 15)
    {
      swift_release();
LABEL_8:
      sub_1005802C8((uint64_t)v47);
      return;
    }
    sub_10048B9E0((uint64_t)v41);
    sub_100462BE4((uint64_t)&v42, (uint64_t)v45, &qword_100A45B30);
    sub_100580298((uint64_t)v45);
    sub_10057FED0(v41);
    sub_100462BE4((uint64_t)v45, (uint64_t)v50, &qword_100A45B30);
    if (v50[1] >> 60 == 15)
    {
      swift_release();
      sub_1005802C8((uint64_t)v46);
      goto LABEL_8;
    }
    sub_10048B9E0((uint64_t)v43);
    sub_10057FED0(v43);
    __int16 v32 = v44;
    sub_100462C50(0, &qword_100A48100);
    sub_100580298((uint64_t)v47);
    id v13 = sub_10057FF7C();
    if (v4)
    {
      sub_1005802C8((uint64_t)v47);
    }
    else
    {
      uint64_t v14 = v13;
      sub_1005802C8((uint64_t)v47);
      sub_100462C50(0, &qword_100A48108);
      sub_100580298((uint64_t)v46);
      sub_100580298((uint64_t)v45);
      id v22 = sub_100580048();
      sub_1005802C8((uint64_t)v45);
      sub_1005802C8((uint64_t)v46);
      uint64_t v23 = self;
      id v24 = objc_allocWithZone((Class)NSNumber);
      id v25 = v22;
      id v26 = [v24 initWithShort:v32];
      id v36 = 0;
      uint64_t v27 = (objc_class *)[v23 identityWithLegacyPublicIdentity:v14 ngmPublicDeviceIdentity:v25 ngmVersion:v26 error:&v36];

      id v28 = v36;
      id v29 = v14;
      if (v27)
      {
        sub_1005802C8((uint64_t)v47);
        sub_1005802C8((uint64_t)v46);
        sub_1005802C8((uint64_t)v45);
        swift_release();

        Class isa = log->isa;
        log->Class isa = v27;

        return;
      }
      unint64_t v31 = v28;
      sub_100725A20();

      swift_willThrow();
    }
    id v15 = a3;
    swift_errorRetain();
    id v16 = v15;
    swift_errorRetain();
    uint64_t v17 = sub_100725EB0();
    os_log_type_t v18 = sub_1007266E0();
    if (os_log_type_enabled(v17, v18))
    {
      os_log_type_t type = v18;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v33 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 138412546;
      id v36 = v16;
      id v20 = v16;
      sub_100726830();
      *uint64_t v33 = v16;

      *(_WORD *)(v19 + 12) = 2112;
      swift_errorRetain();
      NSString v21 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v36 = v21;
      sub_100726830();
      v33[1] = v21;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v17, type, "Error initializing IDSMPPublicDeviceIdentityContainer for pushToken %@ error: %@", (uint8_t *)v19, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_1005802C8((uint64_t)v47);
      sub_1005802C8((uint64_t)v46);
      sub_1005802C8((uint64_t)v45);
      swift_release();
      swift_errorRelease();
    }
    else
    {
      sub_1005802C8((uint64_t)v47);
      sub_1005802C8((uint64_t)v46);
      sub_1005802C8((uint64_t)v45);
      swift_release();
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10056DBA8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, uint64_t *a6)
{
  id v10 = [a5 prefixedURI];
  uint64_t v11 = sub_100726430();
  uint64_t v13 = v12;

  uint64_t v14 = sub_1005444B8(a3, a4, v11, v13, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v14)
  {
    uint64_t v16 = sub_10048889C();
    uint64_t v18 = v17;
    swift_release();
    *a6 = v16;
    a6[1] = v18;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10056DD98(uint64_t a1, uint64_t a2, void (**a3)(char *, void, uint64_t, uint64_t), unint64_t a4, void *a5, void *a6, uint64_t a7)
{
  uint64_t v46 = a7;
  uint64_t v51 = a3;
  unint64_t v52 = a4;
  uint64_t v10 = sub_100725CC0();
  uint64_t v50 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  uint64_t v49 = (char *)&v45 - v16;
  uint64_t v17 = sub_100431F80(&qword_100A47D80);
  uint64_t v19 = __chkstk_darwin(v17 - 8, v18);
  NSString v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v22);
  id v45 = (char *)&v45 - v23;
  id v24 = [a5 prefixedURI];
  uint64_t v25 = sub_100726430();
  uint64_t v27 = v26;

  id v28 = [a6 prefixedURI];
  uint64_t v29 = sub_100726430();
  uint64_t v31 = v30;

  unint64_t v32 = sub_10054B280((uint64_t)v51, v52, v25, v27, v29, v31, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v32 >> 62))
  {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v33) {
      goto LABEL_3;
    }
LABEL_17:
    uint64_t v38 = _swiftEmptyArrayStorage;
LABEL_18:
    swift_bridgeObjectRelease_n();
    __int16 v44 = v45;
    sub_10056E210((uint64_t)v38, v45);
    swift_bridgeObjectRelease();
    return sub_10046E91C((uint64_t)v44, v46, &qword_100A47D80);
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_100726BA0();
  uint64_t v33 = result;
  if (!result) {
    goto LABEL_17;
  }
LABEL_3:
  if (v33 >= 1)
  {
    uint64_t v35 = 0;
    uint64_t v51 = (void (**)(char *, void, uint64_t, uint64_t))(v50 + 56);
    unint64_t v52 = v32 & 0xC000000000000001;
    id v36 = (unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48);
    unint64_t v37 = (void (**)(char *, char *, uint64_t))(v50 + 32);
    uint64_t v38 = _swiftEmptyArrayStorage;
    unint64_t v47 = v32;
    uint64_t v48 = v14;
    do
    {
      if (v52) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      sub_10048E1B0();
      (*v51)(v21, 0, 1, v10);
      swift_release();
      if ((*v36)(v21, 1, v10) == 1)
      {
        sub_10044C150((uint64_t)v21, &qword_100A47D80);
      }
      else
      {
        NSString v39 = *v37;
        uint64_t v40 = v49;
        (*v37)(v49, v21, v10);
        v39(v14, v40, v10);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v38 = (void *)sub_100571F00(0, v38[2] + 1, 1, (unint64_t)v38, &qword_100A480E8, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
        }
        unint64_t v42 = v38[2];
        unint64_t v41 = v38[3];
        if (v42 >= v41 >> 1) {
          uint64_t v38 = (void *)sub_100571F00(v41 > 1, v42 + 1, 1, (unint64_t)v38, &qword_100A480E8, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
        }
        v38[2] = v42 + 1;
        unint64_t v43 = (unint64_t)v38
            + ((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))
            + *(void *)(v50 + 72) * v42;
        uint64_t v14 = v48;
        v39((char *)v43, v48, v10);
      }
      ++v35;
    }
    while (v33 != v35);
    goto LABEL_18;
  }
  __break(1u);
  return result;
}

uint64_t sub_10056E210@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_100431F80(&qword_100A47D80);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  id v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_100725CC0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v15 = __chkstk_darwin(v12, v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v18);
  uint64_t v20 = (char *)&v33 - v19;
  uint64_t v21 = *(void *)(a1 + 16);
  if (!v21)
  {
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
    v23(v11, 1, 1, v12);
    goto LABEL_5;
  }
  unint64_t v22 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v40 = *(void (**)(char *, unint64_t, uint64_t))(v13 + 16);
  uint64_t v41 = v13 + 16;
  v40(v11, a1 + v22, v12);
  uint64_t v35 = a1;
  unint64_t v42 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56);
  v42(v11, 0, 1, v12);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v39 = v13 + 48;
  if (v38(v11, 1, v12) == 1)
  {
    uint64_t v23 = v42;
LABEL_5:
    sub_10044C150((uint64_t)v11, &qword_100A47D80);
    return ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v23)(a2, 1, 1, v12);
  }
  uint64_t v34 = a2;
  unint64_t v37 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v37(v20, v11, v12);
  swift_bridgeObjectRetain();
  uint64_t v25 = v21 - 1;
  if (v25)
  {
    uint64_t v27 = *(void *)(v13 + 72);
    id v28 = (void (**)(char *, uint64_t))(v13 + 8);
    uint64_t v36 = v27;
    unint64_t v29 = v35 + v27 + v22;
    uint64_t v30 = v37;
    while (1)
    {
      v40(v8, v29, v12);
      v42(v8, 0, 1, v12);
      if (v38(v8, 1, v12) == 1) {
        break;
      }
      v30(v17, v8, v12);
      sub_10057998C((unint64_t *)&unk_100A480F0, (void (*)(uint64_t))&type metadata accessor for Date);
      char v31 = sub_100726400();
      unint64_t v32 = *v28;
      if (v31)
      {
        v32(v20, v12);
        v30(v20, v17, v12);
      }
      else
      {
        v32(v17, v12);
      }
      v29 += v36;
      if (!--v25) {
        goto LABEL_7;
      }
    }
  }
  else
  {
LABEL_7:
    v42(v8, 1, 1, v12);
  }
  swift_bridgeObjectRelease();
  sub_10044C150((uint64_t)v8, &qword_100A47D80);
  uint64_t v26 = v34;
  v37(v34, v20, v12);
  return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v42)(v26, 0, 1, v12);
}

void sub_10056E864(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5, void *a6, void *a7, void **a8)
{
  id v14 = [a5 prefixedURI];
  uint64_t v15 = sub_100726430();
  uint64_t v17 = v16;

  uint64_t v18 = sub_1005444B8(a3, a4, v15, v17, a1);
  swift_bridgeObjectRelease();
  if (!v18) {
    return;
  }
  uint64_t v39 = a8;
  id v19 = [a6 rawToken];
  uint64_t v20 = sub_100725B50();
  unint64_t v22 = v21;

  uint64_t v23 = sub_100546FA4(a3, a4, v20, v22, a1);
  sub_100442248(v20, v22);
  if (v23)
  {
    uint64_t v38 = v23;
    id v24 = [a7 prefixedURI];
    id v41 = (id)sub_100726430();
    uint64_t v37 = v25;

    id v26 = [a5 prefixedURI];
    uint64_t v27 = sub_100726430();
    uint64_t v29 = v28;

    id v30 = [a6 rawToken];
    uint64_t v31 = sub_100725B50();
    unint64_t v33 = v32;

    uint64_t v34 = (void *)sub_1005497A4(a3, a4, (uint64_t)v41, v37, v27, v29, v31, v33, 0, a1);
    sub_100442248(v31, v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v34)
    {
      id v35 = sub_10057B30C(v18, v38, v34);
      swift_release();
      swift_release();
      swift_release();
      uint64_t v36 = *v39;
      *uint64_t v39 = v35;

      return;
    }
    swift_release();
  }

  swift_release();
}

unint64_t sub_10056EC18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t result = sub_10054C604(a3, a4, a1);
  unint64_t v24 = result;
  if (result >> 62)
  {
    unint64_t result = sub_100726BA0();
    uint64_t v5 = result;
    if (!result) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_18;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v6 = 0;
  unint64_t v7 = v24 & 0xC000000000000001;
  id v8 = &IDSRegistrationPropertySupportsAVLess_ptr;
  uint64_t v9 = &selRef_identityClassA;
  do
  {
    if (v7) {
      sub_100726A10();
    }
    else {
      swift_retain();
    }
    sub_10048D5A8();
    id v10 = objc_allocWithZone((Class)v8[488]);
    NSString v11 = sub_100726420();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, v9[376], v11);

    if (v12)
    {
      sub_10048D8A4();
      id v13 = objc_allocWithZone((Class)v8[488]);
      NSString v14 = sub_100726420();
      swift_bridgeObjectRelease();
      id v15 = objc_msgSend(v13, v9[376], v14);

      if (v15)
      {
        uint64_t v16 = v5;
        unint64_t v17 = v7;
        sub_10048D2AC();
        id v18 = objc_allocWithZone((Class)IDSPeerIDKey);
        id v19 = v12;
        id v20 = v15;
        NSString v21 = sub_100726420();
        swift_bridgeObjectRelease();
        id v22 = [v18 initWithService:v21 fromURI:v19 toURI:v20];

        if (v22)
        {
          id v23 = v22;
          sub_10047B3D4(&v25, v23, &qword_100A48000, (uint64_t)off_10097CB58, &qword_100A480E0);

          swift_release();
        }
        else
        {
          swift_release();
        }
        unint64_t v7 = v17;
        uint64_t v5 = v16;
        id v8 = &IDSRegistrationPropertySupportsAVLess_ptr;
        uint64_t v9 = &selRef_identityClassA;
      }
      else
      {

        swift_release();
        uint64_t v9 = &selRef_identityClassA;
      }
    }
    else
    {
      swift_release();
    }
    ++v6;
  }
  while (v5 != v6);
LABEL_18:

  return swift_bridgeObjectRelease();
}

uint64_t sub_10056F010(uint64_t a1, int a2, uint64_t a3, uint64_t a4, id a5)
{
  id v8 = [a5 prefixedURI];
  uint64_t v9 = sub_100726430();
  uint64_t v11 = v10;

  unint64_t v12 = sub_10054BD60(a3, a4, v9, v11, a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_100726BA0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v14) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v14) {
      goto LABEL_18;
    }
  }
  if (v14 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v15 = 0;
  unint64_t v16 = v12 & 0xC000000000000001;
  unint64_t v17 = &IDSRegistrationPropertySupportsAVLess_ptr;
  id v18 = &selRef_identityClassA;
  do
  {
    if (v16) {
      sub_100726A10();
    }
    else {
      swift_retain();
    }
    sub_10048D5A8();
    id v19 = objc_allocWithZone((Class)v17[488]);
    NSString v20 = sub_100726420();
    swift_bridgeObjectRelease();
    id v21 = objc_msgSend(v19, v18[376], v20);

    if (v21)
    {
      sub_10048D8A4();
      id v22 = objc_allocWithZone((Class)v17[488]);
      NSString v23 = sub_100726420();
      swift_bridgeObjectRelease();
      id v24 = objc_msgSend(v22, v18[376], v23);

      if (v24)
      {
        uint64_t v25 = v14;
        unint64_t v26 = v16;
        sub_10048D2AC();
        id v27 = objc_allocWithZone((Class)IDSPeerIDKey);
        id v28 = v21;
        id v29 = v24;
        NSString v30 = sub_100726420();
        swift_bridgeObjectRelease();
        id v31 = [v27 initWithService:v30 fromURI:v28 toURI:v29];

        if (v31)
        {
          id v32 = v31;
          sub_10047B3D4(&v33, v32, &qword_100A48000, (uint64_t)off_10097CB58, &qword_100A480E0);

          swift_release();
        }
        else
        {
          swift_release();
        }
        unint64_t v16 = v26;
        uint64_t v14 = v25;
        unint64_t v17 = &IDSRegistrationPropertySupportsAVLess_ptr;
        id v18 = &selRef_identityClassA;
      }
      else
      {

        swift_release();
        id v18 = &selRef_identityClassA;
      }
    }
    else
    {
      swift_release();
    }
    ++v15;
  }
  while (v14 != v15);
LABEL_18:

  return swift_bridgeObjectRelease();
}

Class sub_10056F358(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t *a6, uint64_t a7, unint64_t *a8)
{
  unint64_t v26 = &_swiftEmptySetSingleton;
  id v21 = a1;
  uint64_t v22 = sub_100726430();
  uint64_t v23 = v13;
  id v24 = a4;
  uint64_t v25 = &v26;
  uint64_t v14 = *(void (**)(void, uint64_t, uint64_t *))((swift_isaMask & *v21) + 0xE8);
  id v15 = a4;
  unint64_t v16 = v21;
  v14(0, a5, &v20);
  uint64_t v17 = swift_bridgeObjectRetain();
  sub_1005723AC(v17, a6, a7, a8);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_100462C50(0, a6);
  v18.super.Class isa = sub_100726560().super.isa;
  swift_release();

  return v18.super.isa;
}

unint64_t sub_10056F4AC(uint64_t a1)
{
  unint64_t result = (unint64_t)sub_10055A478(a1, (uint64_t)sub_10057C2F4);
  unint64_t v21 = result;
  if (result >> 62)
  {
    unint64_t result = sub_100726BA0();
    uint64_t v2 = result;
    if (!result) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v2) {
      goto LABEL_18;
    }
  }
  if (v2 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v3 = 0;
  unint64_t v4 = v21 & 0xC000000000000001;
  uint64_t v5 = &IDSRegistrationPropertySupportsAVLess_ptr;
  uint64_t v6 = &selRef_identityClassA;
  do
  {
    if (v4) {
      sub_100726A10();
    }
    else {
      swift_retain();
    }
    sub_10048D5A8();
    id v7 = objc_allocWithZone((Class)v5[488]);
    NSString v8 = sub_100726420();
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(v7, v6[376], v8);

    if (v9)
    {
      sub_10048D8A4();
      id v10 = objc_allocWithZone((Class)v5[488]);
      NSString v11 = sub_100726420();
      swift_bridgeObjectRelease();
      id v12 = objc_msgSend(v10, v6[376], v11);

      if (v12)
      {
        uint64_t v13 = v2;
        unint64_t v14 = v4;
        sub_10048D2AC();
        id v15 = objc_allocWithZone((Class)IDSPeerIDKey);
        id v16 = v9;
        id v17 = v12;
        NSString v18 = sub_100726420();
        swift_bridgeObjectRelease();
        id v19 = [v15 initWithService:v18 fromURI:v16 toURI:v17];

        if (v19)
        {
          id v20 = v19;
          sub_10047B3D4(&v22, v20, &qword_100A48000, (uint64_t)off_10097CB58, &qword_100A480E0);

          swift_release();
        }
        else
        {
          swift_release();
        }
        unint64_t v4 = v14;
        uint64_t v2 = v13;
        uint64_t v5 = &IDSRegistrationPropertySupportsAVLess_ptr;
        uint64_t v6 = &selRef_identityClassA;
      }
      else
      {

        swift_release();
        uint64_t v6 = &selRef_identityClassA;
      }
    }
    else
    {
      swift_release();
    }
    ++v3;
  }
  while (v2 != v3);
LABEL_18:

  return swift_bridgeObjectRelease();
}

uint64_t sub_10056F894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100725CC0();
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v145 = (uint64_t)&v114 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v144 = (uint64_t)&v114 - v11;
  uint64_t v116 = a1;
  uint64_t v117 = a2;
  unint64_t v12 = (unint64_t)sub_10055A478(a1, (uint64_t)sub_10057C2F4);
  unint64_t v13 = v12;
  if (v12 >> 62) {
    goto LABEL_62;
  }
  uint64_t v14 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v14)
  {
    while (1)
    {
      uint64_t v115 = (uint64_t *)a3;
      unint64_t v15 = 0;
      unint64_t v147 = v13 & 0xC000000000000001;
      uint64_t v119 = v13 & 0xFFFFFFFFFFFFFF8;
      unint64_t v118 = v13 + 32;
      id v16 = &IDSRegistrationPropertySupportsAVLess_ptr;
      id v17 = &selRef_identityClassA;
      unint64_t v122 = v13;
      uint64_t v146 = v14;
      while (1)
      {
        while (1)
        {
          if (v147)
          {
            uint64_t v18 = sub_100726A10();
            BOOL v19 = __OFADD__(v15, 1);
            unint64_t v20 = v15 + 1;
            if (v19) {
              goto LABEL_58;
            }
          }
          else
          {
            if (v15 >= *(void *)(v119 + 16)) {
              goto LABEL_59;
            }
            uint64_t v18 = *(void *)(v118 + 8 * v15);
            swift_retain();
            BOOL v19 = __OFADD__(v15, 1);
            unint64_t v20 = v15 + 1;
            if (v19)
            {
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
              goto LABEL_60;
            }
          }
          unint64_t v154 = v20;
          a3 = sub_10048D2AC();
          uint64_t v22 = v21;
          sub_10048D5A8();
          id v23 = objc_allocWithZone((Class)v16[488]);
          NSString v24 = sub_100726420();
          swift_bridgeObjectRelease();
          id v25 = objc_msgSend(v23, v17[376], v24);

          if (!v25)
          {
            swift_bridgeObjectRelease();
            swift_release();
            goto LABEL_5;
          }
          sub_10048D8A4();
          id v26 = objc_allocWithZone((Class)v16[488]);
          NSString v27 = sub_100726420();
          swift_bridgeObjectRelease();
          id v28 = objc_msgSend(v26, v17[376], v27);

          if (v28) {
            break;
          }

          swift_bridgeObjectRelease();
          swift_release();
          unint64_t v15 = v154;
          id v16 = &IDSRegistrationPropertySupportsAVLess_ptr;
          if (v154 == v146) {
            return swift_bridgeObjectRelease();
          }
        }
        uint64_t v149 = v18;
        id v29 = objc_allocWithZone((Class)IDSPeerIDKey);
        swift_bridgeObjectRetain();
        id v30 = v25;
        id v31 = v28;
        NSString v32 = sub_100726420();
        swift_bridgeObjectRelease();
        id v33 = [v29 initWithService:v32 fromURI:v30 toURI:v31];

        uint64_t v34 = v31;
        id v16 = &IDSRegistrationPropertySupportsAVLess_ptr;
        if (!v33)
        {
          swift_release();
          swift_bridgeObjectRelease();

          goto LABEL_5;
        }
        id v120 = v34;
        id v121 = v30;
        uint64_t v35 = sub_10048D8A4();
        uint64_t v37 = sub_1005444B8(a3, v22, v35, v36, v116);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v37)
        {

LABEL_48:
          swift_release();

          goto LABEL_5;
        }
        uint64_t v38 = type metadata accessor for ArchiveHelper();
        uint64_t v39 = sub_100462C50(0, &qword_100A480B8);
        a3 = sub_100488F34();
        unint64_t v41 = v40;
        unint64_t v42 = (void *)sub_10044CCC4(v39, a3, v40);
        sub_10044CE88(a3, v41);
        if (!v42)
        {
          swift_release();

          goto LABEL_48;
        }
        id v114 = v42;
        unint64_t v157 = (unint64_t)_swiftEmptyArrayStorage;
        uint64_t v43 = sub_100489450();
        if (v43) {
          unint64_t v44 = v43;
        }
        else {
          unint64_t v44 = (unint64_t)_swiftEmptyArrayStorage;
        }
        if (!(v44 >> 62))
        {
          a3 = *(void *)((v44 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (a3) {
            break;
          }
          goto LABEL_50;
        }
        swift_bridgeObjectRetain();
        a3 = sub_100726BA0();
        swift_bridgeObjectRelease();
        if (a3) {
          break;
        }
LABEL_50:
        swift_bridgeObjectRelease();
        id v95 = objc_allocWithZone((Class)IDSPeerIDValue);
        sub_100462C50(0, (unint64_t *)&unk_100A48020);
        id v96 = v114;
        Class isa = sub_100726560().super.isa;
        swift_bridgeObjectRelease();
        a3 = (uint64_t)[v95 initWithEndpoints:isa keyTransparencyContext:v96];

        uint64_t v98 = *v115;
        if ((*v115 & 0xC000000000000001) != 0)
        {
          if (v98 >= 0) {
            v98 &= 0xFFFFFFFFFFFFFF8uLL;
          }
          id v99 = v33;
          id v100 = (id)a3;
          uint64_t v101 = sub_100726B10();
          if (__OFADD__(v101, 1)) {
            goto LABEL_61;
          }
          Swift::Int v102 = sub_100577598(v98, v101 + 1);
          uint64_t v103 = v115;
          *uint64_t v115 = v102;
        }
        else
        {
          id v104 = v33;
          id v105 = (id)a3;
          uint64_t v103 = v115;
        }
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v156 = *v103;
        *uint64_t v103 = 0x8000000000000000;
        sub_100578580(a3, v33, isUniquelyReferenced_nonNull_native);
        *uint64_t v103 = v156;
        swift_release();
        swift_release();

        swift_bridgeObjectRelease();
LABEL_5:
        unint64_t v15 = v154;
        if (v154 == v146) {
          return swift_bridgeObjectRelease();
        }
      }
      if (a3 >= 1) {
        break;
      }
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      uint64_t v14 = sub_100726BA0();
      if (!v14) {
        goto LABEL_63;
      }
    }
    uint64_t v45 = 0;
    unint64_t v153 = v44 & 0xC000000000000001;
    uint64_t v124 = v38;
    Swift::String v152 = (void *)v44;
    uint64_t v151 = a3;
    id v123 = v33;
    uint64_t v155 = v37;
    while (1)
    {
      if (v153)
      {
        uint64_t v46 = sub_100726A10();
      }
      else
      {
        uint64_t v46 = *(void *)(v44 + 8 * v45 + 32);
        swift_retain();
      }
      sub_1004885A0();
      sub_1004882A4();
      id v47 = objc_allocWithZone((Class)v16[488]);
      NSString v48 = sub_100726420();
      swift_bridgeObjectRelease();
      NSString v49 = sub_100726420();
      swift_bridgeObjectRelease();
      id v50 = [v47 initWithPrefixedURI:v48 withServiceLoggingHint:v49];

      if (v50)
      {
        uint64_t v51 = sub_10048A368();
        unint64_t v53 = v52;
        id v54 = objc_allocWithZone((Class)IDSPushToken);
        Class v55 = sub_100725B20().super.isa;
        id v56 = [v54 initWithData:v55];
        sub_100442248(v51, v53);

        if (v56)
        {
          id v150 = v50;
          uint64_t v57 = sub_100462C50(0, &qword_100A480C0);
          uint64_t v58 = sub_10048A670();
          unint64_t v60 = v59;
          uint64_t v61 = sub_10044CCC4(v57, v58, v59);
          sub_100442248(v58, v60);
          if (v61)
          {
            unint64_t v142 = (void *)v61;
            uint64_t v62 = sub_100462C50(0, &qword_100A480C8);
            uint64_t v63 = sub_10048B8D8();
            unint64_t v65 = v64;
            id v141 = (void *)sub_10044CCC4(v62, v63, v64);
            sub_10044CE88(v63, v65);
            uint64_t v66 = sub_100462C50(0, &qword_100A480D0);
            uint64_t v67 = sub_10048B564();
            unint64_t v69 = v68;
            id v148 = (id)sub_10044CCC4(v66, v67, v68);
            sub_10044CE88(v67, v69);
            sub_10048B9E0((uint64_t)&v158);
            id v70 = [objc_allocWithZone((Class)IDSEndpointURIProperties) init];
            sub_10048889C();
            if (v71)
            {
              NSString v72 = sub_100726420();
              swift_bridgeObjectRelease();
              [v70 setSenderCorrelationIdentifier:v72];
            }
            id v143 = v56;
            sub_100488BE8();
            if (v73)
            {
              NSString v74 = sub_100726420();
              swift_bridgeObjectRelease();
              [v70 setShortHandle:v74];
            }
            uint64_t v138 = v158;
            unint64_t v137 = v159;
            uint64_t v75 = v160;
            unint64_t v76 = v161;
            uint64_t v136 = v160;
            unint64_t v135 = v161;
            int v140 = v163;
            int v139 = v162;
            sub_100482480(v158, v159);
            sub_100482480(v75, v76);
            int v133 = sub_10048A978();
            int v132 = sub_10048AC58();
            uint64_t v131 = sub_10048DEA8();
            uint64_t v130 = v77;
            sub_10048E1B0();
            sub_10048E5A8();
            uint64_t v129 = sub_10048AF38();
            uint64_t v128 = v78;
            int v126 = sub_10048B284();
            unint64_t v79 = v165;
            uint64_t v125 = v164;
            sub_100482480(v164, v165);
            double v80 = sub_10048E9A0();
            uint64_t v81 = v166;
            unint64_t v82 = v167;
            uint64_t v83 = v168;
            unint64_t v84 = v169;
            uint64_t v86 = v170;
            unint64_t v85 = v171;
            id v127 = objc_allocWithZone((Class)IDSEndpoint);
            sub_100482480(v81, v82);
            sub_100482480(v83, v84);
            sub_100482480(v86, v85);
            uint64_t v134 = v46;
            uint64_t v87 = v141;
            uint64_t v112 = v86;
            unint64_t v113 = v85;
            uint64_t v111 = v83;
            unint64_t v110 = v82;
            unint64_t v109 = v79;
            unint64_t v88 = v130;
            uint64_t v89 = v131;
            uint64_t v90 = v143;
            HIBYTE(v108) = v132 & 1;
            LOBYTE(v108) = v133 & 1;
            id v91 = v150;
            uint64_t v92 = v142;
            id v93 = sub_10057AFD8((uint64_t)v150, (uint64_t)v142, v139, v140, v138, v137, v136, v135, v80, v108, (uint64_t)v143, v131, v130, v144, v145, v129, v128, v126 & 1, v125,
                    v109,
                    v81,
                    v110,
                    v111,
                    v84,
                    v112,
                    v113,
                    (uint64_t)v70,
                    (uint64_t)v141,
                    (uint64_t)v148);

            sub_100442248(v89, v88);
            sub_10057FED0(&v158);
            id v94 = v93;
            sub_100726550();
            if (*(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v157 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1007265A0();
            }
            sub_1007265C0();
            sub_100726590();
            swift_release();

            unint64_t v13 = v122;
            id v16 = &IDSRegistrationPropertySupportsAVLess_ptr;
            id v17 = &selRef_identityClassA;
            id v33 = v123;
            goto LABEL_26;
          }
          swift_release();
        }
        else
        {
          swift_release();
        }
      }
      else
      {
        swift_release();
      }
      id v16 = &IDSRegistrationPropertySupportsAVLess_ptr;
      id v17 = &selRef_identityClassA;
LABEL_26:
      unint64_t v44 = (unint64_t)v152;
      if (v151 == ++v45) {
        goto LABEL_50;
      }
    }
  }
LABEL_63:

  return swift_bridgeObjectRelease();
}

id sub_1005706D0(uint64_t a1, uint64_t a2)
{
  uint64_t v8 = 0;
  uint64_t v9 = 0;
  v7[2] = a1;
  v7[3] = a2;
  long long v7[4] = &v8;
  (*(void (**)(void, uint64_t (*)(uint64_t), void *))((swift_isaMask & *v2) + 0xE8))(0, sub_10057F250, v7);
  if (!v9) {
    return 0;
  }
  id v3 = objc_allocWithZone((Class)IDSURI);
  swift_bridgeObjectRetain();
  NSString v4 = sub_100726420();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithPrefixedURI:v4];
  swift_bridgeObjectRelease();

  return v5;
}

uint64_t sub_100570928(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  NSString v27 = a4;
  uint64_t v6 = sub_100431F80(&qword_100A48048);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100431F80((uint64_t *)&unk_100A48050);
  uint64_t v10 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v11);
  unint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A47F30);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a2;
  uint64_t v31 = a3;
  uint64_t v32 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0);
  sub_100725D70();
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v9, v18, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v9, 0, 1, v14);
  sub_10057998C(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_1007261B0();
  uint64_t v19 = v29;
  unint64_t v20 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v28);
  if (v19) {
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
  uint64_t v22 = v27;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_100726BA0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v23) {
      goto LABEL_5;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v25 = 0;
    goto LABEL_11;
  }
  uint64_t v23 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v23) {
    goto LABEL_10;
  }
LABEL_5:
  if ((v20 & 0xC000000000000001) != 0)
  {
    sub_100726A10();
  }
  else
  {
    if (!*(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    swift_retain();
  }
  swift_bridgeObjectRelease();
  uint64_t v23 = sub_1004905F4();
  uint64_t v25 = v24;
  swift_release();
LABEL_11:
  (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  *uint64_t v22 = v23;
  v22[1] = v25;
  return swift_bridgeObjectRelease();
}

uint64_t sub_100570CBC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v4 = sub_100431F80(&qword_100A48060);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48068);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A48070);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A48078, &qword_100A48068);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_1007259F0();
  a3[3] = sub_100431F80(&qword_100A48080);
  a3[4] = sub_10057FE0C();
  sub_10044D5C4(a3);
  sub_1004D10A4(&qword_100A480A8, &qword_100A48070);
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v19 = v23;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_100571074(void *a1)
{
  uint64_t v3 = sub_100431F80(&qword_100A47F30);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v14[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v8 = [a1 prefixedURI];
  uint64_t v9 = sub_100726430();
  uint64_t v11 = v10;

  uint64_t v17 = v9;
  uint64_t v18 = v11;
  void v19[2] = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0);
  sub_100725D70();
  swift_bridgeObjectRelease();
  v19[0] = 0;
  v19[1] = 0;
  uint64_t v15 = v7;
  uint64_t v16 = v19;
  (*(void (**)(void, uint64_t (*)(uint64_t), char *))((swift_isaMask & *v1) + 0xE8))(0, sub_10057F278, v14);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v19[0];
}

uint64_t sub_100571370@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v4 = sub_100431F80(&qword_100A48060);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  uint64_t v24 = v5;
  __chkstk_darwin(v4, v6);
  id v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A48068);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A48070);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14, v16);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004D10A4(&qword_100A48078, &qword_100A48068);
  sub_100725A00();
  swift_getKeyPath();
  sub_100725980();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  uint64_t v25 = v21;
  uint64_t v26 = v22;
  sub_1007259F0();
  a3[3] = sub_100431F80(&qword_100A48080);
  a3[4] = sub_10057FE0C();
  sub_10044D5C4(a3);
  sub_1004D10A4(&qword_100A480A8, &qword_100A48070);
  sub_1004D10A4(&qword_100A480B0, &qword_100A48060);
  uint64_t v19 = v23;
  sub_100725970();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
}

uint64_t sub_1005716B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v24 = a3;
  uint64_t v5 = sub_100431F80(&qword_100A48048);
  __chkstk_darwin(v5 - 8, v6);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80((uint64_t *)&unk_100A48050);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9, v11);
  unint64_t v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100431F80(&qword_100A47F30);
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v8, a2, v14);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v8, 0, 1, v14);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0);
  sub_10057998C(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_1007261B0();
  unint64_t v16 = sub_100726110();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v13, v9);
  if (!v3)
  {
    uint64_t v18 = v24;
    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_100726BA0();
      uint64_t result = swift_bridgeObjectRelease();
      if (v22) {
        goto LABEL_4;
      }
    }
    else if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_4:
      if ((v16 & 0xC000000000000001) != 0)
      {
        sub_100726A10();
      }
      else
      {
        if (!*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        swift_retain();
      }
      swift_bridgeObjectRelease();
      uint64_t v19 = sub_1004908F0();
      uint64_t v21 = v20;
      swift_release();
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = 0;
    uint64_t v21 = 0;
LABEL_10:
    *uint64_t v18 = v19;
    v18[1] = v21;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_100571A28@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_100571A40(void *a1@<X8>)
{
  *a1 = *v1;
}

unint64_t sub_100571AC4()
{
  if (*(unsigned char *)(v0
                + OBJC_IVAR____TtC17identityservicesdP33_534A9A00092BF767A56A700BAD85BE0F19ContainerLoadMetric_containerType))
  {
    sub_100431F80(&qword_100A46CD0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100794E30;
    strcpy((char *)(inited + 32), "containerType");
    *(_WORD *)(inited + 46) = -4864;
    *(NSNumber *)(inited + 48) = sub_100726690();
    return sub_1004ABAA0(inited);
  }
  else
  {
    return sub_1004ABAA0((uint64_t)_swiftEmptyArrayStorage);
  }
}

id sub_100571C14(uint64_t a1)
{
  return sub_100571C2C(a1, type metadata accessor for ContainerLoadMetric);
}

id sub_100571C2C(uint64_t a1, uint64_t (*a2)(void))
{
  v4.receiver = v2;
  v4.super_class = (Class)a2();
  return objc_msgSendSuper2(&v4, "dealloc");
}

uint64_t sub_100571C64(uint64_t result)
{
  if (result + 1 > *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    return sub_1007265A0();
  }
  return result;
}

uint64_t sub_100571C90(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80(&qword_100A48730);
  uint64_t v10 = *(void *)(sub_100431F80(&qword_100A48728) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_100726B80();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100431F80(&qword_100A48728) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10057CC24(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_100571F00(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_100726B80();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_10058013C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t type metadata accessor for SDPersistenceManager()
{
  uint64_t result = qword_100A52CF8;
  if (!qword_100A52CF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1005721CC(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1 >> 62) {
    goto LABEL_10;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  while (1)
  {
    if (v2 <= 0)
    {
      uint64_t v3 = &_swiftEmptyArrayStorage;
    }
    else
    {
      sub_100431F80((uint64_t *)&unk_100A46840);
      uint64_t v3 = (void *)swift_allocObject();
      int64_t v4 = j__malloc_size(v3);
      uint64_t v5 = v4 - 32;
      if (v4 < 32) {
        uint64_t v5 = v4 - 25;
      }
      void v3[2] = v2;
      v3[3] = (2 * (v5 >> 3)) | 1;
    }
    swift_bridgeObjectRetain();
    sub_1005787E4((unint64_t)(v3 + 4), v2, v1);
    unint64_t v1 = v6;
    swift_bridgeObjectRelease();
    if (v1 == v2) {
      break;
    }
    __break(1u);
LABEL_10:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (!v2) {
      return &_swiftEmptyArrayStorage;
    }
  }
  return v3;
}

uint64_t *sub_1005722C4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100431F80((uint64_t *)&unk_100A47170);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  void v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_100578A30((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_100462C48();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1005723AC(uint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = sub_100726920();
    if (v8) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v8 <= 0)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100431F80((uint64_t *)&unk_100A46840);
    uint64_t v9 = (void *)swift_allocObject();
    int64_t v10 = j__malloc_size(v9);
    uint64_t v11 = v10 - 32;
    if (v10 < 32) {
      uint64_t v11 = v10 - 25;
    }
    v9[2] = v8;
    void v9[3] = (2 * (v11 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_100578C30(&v14, v9 + 4, v8, a1, a2, a3, a4);
  uint64_t result = (void *)sub_100462C48();
  if (v12 == (void *)v8) {
    return v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005724D0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100572530(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_1005724F0(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100572770(a1, a2, a3, *v3);
  uint64_t *v3 = (char *)result;
  return result;
}

uint64_t sub_100572510(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_100572B24(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_100572530(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80((uint64_t *)&unk_100A48B68);
  uint64_t v10 = *(void *)(sub_100725A70() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100725A70() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  size_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_100572770(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100431F80((uint64_t *)&unk_100A47170);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_1005728DC(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80(&qword_100A48730);
  uint64_t v10 = *(void *)(sub_100431F80(&qword_100A48728) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  void v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100431F80(&qword_100A48728) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (char *)v13 + v17;
  size_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  uint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_100572B24(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100431F80(&qword_100A48530);
    uint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    v10[2] = v8;
    v10[3] = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 32 * v8) {
      memmove(v10 + 4, a4 + 4, 32 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 32 * v8 || v13 >= v14 + 32 * v8)
  {
    sub_100431F80(&qword_100A48538);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

unint64_t sub_100572CB0(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1007267E0(*(void *)(v2 + 40));
  return sub_100572D00(a1, v4, &qword_100A48000);
}

unint64_t sub_100572D00(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_100462C50(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_1007267F0();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_1007267F0();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

Swift::Int sub_100572E14(void **a1)
{
  uint64_t v2 = *(void *)(sub_100431F80(&qword_100A48728) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_100578A08(v3);
  }
  uint64_t v4 = (char *)v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_100575238(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_100572EC0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_100578A1C(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_100575C8C(v6);
  return sub_100726A50();
}

uint64_t sub_100572F3C(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 16) < *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v91 = a2 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a2 + 56);
  int64_t v87 = (unint64_t)(63 - v5) >> 6;
  uint64_t v8 = a1 + 56;
  swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v90 = v3;
  uint64_t v94 = v4;
  uint64_t v96 = v8;
  unint64_t v10 = v7;
  if (!v7) {
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v11 = (v10 - 1) & v10;
  unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
  int64_t v13 = v9;
  if (!*(void *)(v4 + 16)) {
    goto LABEL_143;
  }
LABEL_23:
  unint64_t v88 = v11;
  int64_t v89 = v13;
  unint64_t v17 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v12);
  uint64_t v19 = *v17;
  unint64_t v18 = v17[1];
  sub_100726DD0();
  sub_100441FD4(v19, v18);
  unint64_t v97 = v18;
  sub_100725B60();
  Swift::Int v20 = sub_100726E30();
  uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v22 = v20 & ~v21;
  if (((*(void *)(v8 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0)
  {
LABEL_140:
    sub_100442248(v19, v97);
    uint64_t v2 = 0;
    goto LABEL_141;
  }
  unint64_t v23 = v18 >> 62;
  uint64_t v98 = ~v21;
  BOOL v24 = __OFSUB__(HIDWORD(v19), v19);
  BOOL v95 = v24;
  uint64_t v92 = (v19 >> 32) - (int)v19;
  uint64_t v93 = v19 >> 32;
  while (2)
  {
    uint64_t v25 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v22);
    uint64_t v27 = *v25;
    unint64_t v26 = v25[1];
    uint64_t v28 = 0;
    switch(v26 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v27), v27))
        {
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
        }
        uint64_t v28 = HIDWORD(v27) - (int)v27;
LABEL_36:
        sub_100441FD4(v27, v26);
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v27 + 16);
        uint64_t v29 = *(void *)(v27 + 24);
        uint64_t v28 = v29 - v30;
        if (!__OFSUB__(v29, v30)) {
          goto LABEL_36;
        }
        goto LABEL_146;
      case 3uLL:
        break;
      default:
        uint64_t v28 = BYTE6(v26);
        break;
    }
    uint64_t v31 = BYTE6(v97);
    switch((int)v23)
    {
      case 1:
        uint64_t v31 = HIDWORD(v19) - (int)v19;
        if (v95) {
          goto LABEL_147;
        }
        goto LABEL_41;
      case 2:
        uint64_t v33 = *(void *)(v19 + 16);
        uint64_t v32 = *(void *)(v19 + 24);
        BOOL v34 = __OFSUB__(v32, v33);
        uint64_t v31 = v32 - v33;
        if (!v34) {
          goto LABEL_41;
        }
        goto LABEL_148;
      case 3:
        if (v28) {
          goto LABEL_29;
        }
        goto LABEL_137;
      default:
LABEL_41:
        if (v28 != v31)
        {
LABEL_29:
          sub_100442248(v27, v26);
          goto LABEL_30;
        }
        if (v28 >= 1)
        {
          switch(v26 >> 62)
          {
            case 1uLL:
              if ((int)v27 > v27 >> 32) {
                goto LABEL_149;
              }
              uint64_t v39 = sub_100725910();
              if (v39)
              {
                uint64_t v40 = v39;
                uint64_t v41 = sub_100725940();
                if (__OFSUB__((int)v27, v41)) {
                  goto LABEL_151;
                }
                unint64_t v42 = (const void *)(v40 + (int)v27 - v41);
                sub_100725930();
                if (!v23)
                {
LABEL_92:
                  *(void *)__s1 = v19;
                  *(_DWORD *)&__s1[8] = v97;
                  *(_WORD *)&__s1[12] = WORD2(v97);
                  if (!v42) {
                    goto LABEL_176;
                  }
                  int v57 = memcmp(v42, __s1, BYTE6(v97));
                  goto LABEL_134;
                }
              }
              else
              {
                unint64_t v42 = 0;
                sub_100725930();
                if (!v23) {
                  goto LABEL_92;
                }
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_159;
                }
                swift_retain();
                uint64_t v43 = sub_100725910();
                if (v43)
                {
                  uint64_t v44 = sub_100725940();
                  if (__OFSUB__((int)v19, v44)) {
                    goto LABEL_168;
                  }
                  v43 += (int)v19 - v44;
                }
                uint64_t v45 = sub_100725930();
                uint64_t v46 = (v19 >> 32) - (int)v19;
                if (v45 < v92) {
                  uint64_t v46 = v45;
                }
                if (!v42) {
                  goto LABEL_171;
                }
                if (!v43) {
                  goto LABEL_172;
                }
                size_t v47 = v46;
                NSString v48 = v42;
                NSString v49 = (const void *)v43;
LABEL_88:
                int v57 = memcmp(v48, v49, v47);
                sub_100442248(v19, v97);
              }
              else
              {
                uint64_t v79 = *(void *)(v19 + 16);
                uint64_t v78 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                double v80 = (char *)sub_100725910();
                if (v80)
                {
                  uint64_t v81 = sub_100725940();
                  if (__OFSUB__(v79, v81)) {
                    goto LABEL_167;
                  }
                  v80 += v79 - v81;
                }
                BOOL v34 = __OFSUB__(v78, v79);
                int64_t v82 = v78 - v79;
                if (v34) {
                  goto LABEL_161;
                }
                uint64_t v83 = sub_100725930();
                if (v83 >= v82) {
                  size_t v84 = v82;
                }
                else {
                  size_t v84 = v83;
                }
                if (!v42) {
                  goto LABEL_182;
                }
                uint64_t v3 = v90;
                uint64_t v4 = v94;
                if (!v80) {
                  goto LABEL_183;
                }
                int v57 = memcmp(v42, v80, v84);
                swift_release();
LABEL_133:
                swift_release();
              }
LABEL_134:
              sub_100442248(v27, v26);
LABEL_135:
              uint64_t v8 = v96;
              if (!v57) {
                goto LABEL_138;
              }
              break;
            case 2uLL:
              uint64_t v50 = *(void *)(v27 + 16);
              swift_retain();
              swift_retain();
              uint64_t v51 = (char *)sub_100725910();
              if (!v51) {
                goto LABEL_68;
              }
              uint64_t v52 = sub_100725940();
              if (__OFSUB__(v50, v52)) {
                goto LABEL_150;
              }
              v51 += v50 - v52;
LABEL_68:
              sub_100725930();
              uint64_t v4 = v94;
              if (!v23)
              {
                *(void *)__s1 = v19;
                *(_DWORD *)&__s1[8] = v97;
                *(_WORD *)&__s1[12] = WORD2(v97);
                if (!v51) {
                  goto LABEL_179;
                }
                int v57 = memcmp(v51, __s1, BYTE6(v97));
                swift_release();
                goto LABEL_133;
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_154;
                }
                swift_retain();
                unint64_t v53 = (char *)sub_100725910();
                if (v53)
                {
                  uint64_t v54 = sub_100725940();
                  if (__OFSUB__((int)v19, v54)) {
                    goto LABEL_166;
                  }
                  v53 += (int)v19 - v54;
                }
                uint64_t v55 = sub_100725930();
                size_t v56 = (v19 >> 32) - (int)v19;
                if (v55 < v92) {
                  size_t v56 = v55;
                }
                if (!v51) {
                  goto LABEL_173;
                }
                if (!v53) {
                  goto LABEL_174;
                }
                int v57 = memcmp(v51, v53, v56);
                sub_100442248(v19, v97);
                swift_release();
              }
              else
              {
                uint64_t v72 = *(void *)(v19 + 16);
                uint64_t v86 = *(void *)(v19 + 24);
                swift_retain();
                swift_retain();
                uint64_t v73 = (char *)sub_100725910();
                if (v73)
                {
                  uint64_t v74 = sub_100725940();
                  if (__OFSUB__(v72, v74)) {
                    goto LABEL_165;
                  }
                  v73 += v72 - v74;
                }
                BOOL v34 = __OFSUB__(v86, v72);
                int64_t v75 = v86 - v72;
                if (v34) {
                  goto LABEL_160;
                }
                uint64_t v76 = sub_100725930();
                if (v76 >= v75) {
                  size_t v77 = v75;
                }
                else {
                  size_t v77 = v76;
                }
                if (!v51) {
                  goto LABEL_180;
                }
                uint64_t v3 = v90;
                if (!v73) {
                  goto LABEL_181;
                }
                int v57 = memcmp(v51, v73, v77);
                swift_release();
                swift_release();
LABEL_121:
                swift_release();
              }
              swift_release();
              sub_100442248(v27, v26);
              uint64_t v4 = v94;
              goto LABEL_135;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v23) {
                goto LABEL_89;
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_153;
                }
                sub_100441FD4(v19, v97);
                uint64_t v58 = sub_100725910();
                if (!v58) {
                  goto LABEL_175;
                }
                uint64_t v36 = v58;
                uint64_t v59 = sub_100725940();
                uint64_t v38 = (int)v19 - v59;
                if (__OFSUB__((int)v19, v59)) {
                  goto LABEL_158;
                }
LABEL_84:
                uint64_t v60 = sub_100725930();
                NSString v49 = (const void *)(v36 + v38);
                if (v60 >= v92) {
                  size_t v47 = (v19 >> 32) - (int)v19;
                }
                else {
                  size_t v47 = v60;
                }
                NSString v48 = __s1;
                goto LABEL_88;
              }
              uint64_t v68 = *(void *)(v19 + 16);
              uint64_t v69 = *(void *)(v19 + 24);
              swift_retain();
              swift_retain();
              unint64_t v64 = (char *)sub_100725910();
              if (v64)
              {
                uint64_t v70 = sub_100725940();
                if (__OFSUB__(v68, v70)) {
                  goto LABEL_164;
                }
                v64 += v68 - v70;
              }
              BOOL v34 = __OFSUB__(v69, v68);
              int64_t v66 = v69 - v68;
              if (v34) {
                goto LABEL_156;
              }
              uint64_t v67 = sub_100725930();
              if (!v64) {
                goto LABEL_178;
              }
LABEL_105:
              if (v67 >= v66) {
                size_t v71 = v66;
              }
              else {
                size_t v71 = v67;
              }
              int v57 = memcmp(__s1, v64, v71);
              goto LABEL_121;
            default:
              *(void *)__s1 = v27;
              *(_WORD *)&__s1[8] = v26;
              __s1[10] = BYTE2(v26);
              __s1[11] = BYTE3(v26);
              __s1[12] = BYTE4(v26);
              __s1[13] = BYTE5(v26);
              if (!v23)
              {
LABEL_89:
                uint64_t __s2 = v19;
                int v100 = v97;
                __int16 v101 = WORD2(v97);
                int v61 = memcmp(__s1, &__s2, BYTE6(v97));
                sub_100442248(v27, v26);
                if (!v61) {
                  goto LABEL_138;
                }
                break;
              }
              if (v23 == 1)
              {
                if (v93 < (int)v19) {
                  goto LABEL_152;
                }
                sub_100441FD4(v19, v97);
                uint64_t v35 = sub_100725910();
                if (!v35)
                {
                  sub_100725930();
                  __break(1u);
LABEL_171:
                  __break(1u);
LABEL_172:
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  __break(1u);
LABEL_175:
                  sub_100725930();
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
                  JUMPOUT(0x100573A64);
                }
                uint64_t v36 = v35;
                uint64_t v37 = sub_100725940();
                uint64_t v38 = (int)v19 - v37;
                if (__OFSUB__((int)v19, v37)) {
                  goto LABEL_157;
                }
                goto LABEL_84;
              }
              uint64_t v62 = *(void *)(v19 + 16);
              uint64_t v63 = *(void *)(v19 + 24);
              swift_retain();
              swift_retain();
              unint64_t v64 = (char *)sub_100725910();
              if (v64)
              {
                uint64_t v65 = sub_100725940();
                if (__OFSUB__(v62, v65)) {
                  goto LABEL_163;
                }
                v64 += v62 - v65;
              }
              BOOL v34 = __OFSUB__(v63, v62);
              int64_t v66 = v63 - v62;
              if (v34) {
                goto LABEL_155;
              }
              uint64_t v67 = sub_100725930();
              if (!v64) {
                goto LABEL_177;
              }
              goto LABEL_105;
          }
LABEL_30:
          unint64_t v22 = (v22 + 1) & v98;
          if (((*(void *)(v8 + ((v22 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v22) & 1) == 0) {
            goto LABEL_140;
          }
          continue;
        }
LABEL_137:
        sub_100442248(v27, v26);
LABEL_138:
        sub_100442248(v19, v97);
        int64_t v9 = v89;
        unint64_t v10 = v88;
        if (v88) {
          goto LABEL_7;
        }
LABEL_9:
        int64_t v14 = v9 + 1;
        if (__OFADD__(v9, 1)) {
          goto LABEL_162;
        }
        if (v14 >= v87) {
          goto LABEL_144;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v14);
        int64_t v13 = v9 + 1;
        if (v15) {
          goto LABEL_22;
        }
        int64_t v13 = v9 + 2;
        if (v9 + 2 >= v87) {
          goto LABEL_144;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v13);
        if (v15) {
          goto LABEL_22;
        }
        int64_t v13 = v9 + 3;
        if (v9 + 3 >= v87) {
          goto LABEL_144;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v13);
        if (v15) {
          goto LABEL_22;
        }
        int64_t v16 = v9 + 4;
        if (v9 + 4 >= v87)
        {
LABEL_144:
          uint64_t v2 = 1;
          goto LABEL_141;
        }
        unint64_t v15 = *(void *)(v91 + 8 * v16);
        if (!v15)
        {
          while (1)
          {
            int64_t v13 = v16 + 1;
            if (__OFADD__(v16, 1)) {
              goto LABEL_169;
            }
            if (v13 >= v87) {
              goto LABEL_144;
            }
            unint64_t v15 = *(void *)(v91 + 8 * v13);
            ++v16;
            if (v15) {
              goto LABEL_22;
            }
          }
        }
        int64_t v13 = v9 + 4;
LABEL_22:
        uint64_t v11 = (v15 - 1) & v15;
        unint64_t v12 = __clz(__rbit64(v15)) + (v13 << 6);
        if (*(void *)(v4 + 16)) {
          goto LABEL_23;
        }
LABEL_143:
        uint64_t v2 = 0;
LABEL_141:
        sub_100462C48();
        return v2;
    }
  }
}

uint64_t sub_100573A94(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_100573C1C((unint64_t *)((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_100573C1C((unint64_t *)v8, v5, a2, v3);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_100573C1C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) >= *(void *)(a3 + 16))
  {
LABEL_143:
    uint64_t v175 = 0;
    int64_t v86 = 0;
    uint64_t v169 = v5 + 56;
    uint64_t v87 = 1 << *(unsigned char *)(v5 + 32);
    if (v87 < 64) {
      uint64_t v88 = ~(-1 << v87);
    }
    else {
      uint64_t v88 = -1;
    }
    unint64_t v89 = v88 & *(void *)(v5 + 56);
    int64_t v172 = (unint64_t)(v87 + 63) >> 6;
    uint64_t v197 = v4 + 56;
    while (1)
    {
      if (v89)
      {
        uint64_t v185 = (v89 - 1) & v89;
        int64_t v187 = v86;
        unint64_t v90 = __clz(__rbit64(v89)) | (v86 << 6);
      }
      else
      {
        int64_t v91 = v86 + 1;
        if (__OFADD__(v86, 1)) {
          goto LABEL_300;
        }
        if (v91 >= v172) {
          goto LABEL_284;
        }
        unint64_t v92 = *(void *)(v169 + 8 * v91);
        int64_t v93 = v86 + 1;
        if (!v92)
        {
          int64_t v93 = v86 + 2;
          if (v86 + 2 >= v172) {
            goto LABEL_284;
          }
          unint64_t v92 = *(void *)(v169 + 8 * v93);
          if (!v92)
          {
            int64_t v93 = v86 + 3;
            if (v86 + 3 >= v172) {
              goto LABEL_284;
            }
            unint64_t v92 = *(void *)(v169 + 8 * v93);
            if (!v92)
            {
              uint64_t v94 = v86 + 4;
              if (v86 + 4 >= v172) {
                goto LABEL_284;
              }
              unint64_t v92 = *(void *)(v169 + 8 * v94);
              if (!v92)
              {
                while (1)
                {
                  int64_t v93 = v94 + 1;
                  if (__OFADD__(v94, 1)) {
                    break;
                  }
                  if (v93 >= v172) {
                    goto LABEL_284;
                  }
                  unint64_t v92 = *(void *)(v169 + 8 * v93);
                  ++v94;
                  if (v92) {
                    goto LABEL_163;
                  }
                }
LABEL_334:
                __break(1u);
LABEL_335:
                sub_100725930();
                __break(1u);
LABEL_336:
                __break(1u);
                goto LABEL_337;
              }
              int64_t v93 = v86 + 4;
            }
          }
        }
LABEL_163:
        uint64_t v185 = (v92 - 1) & v92;
        int64_t v187 = v93;
        unint64_t v90 = __clz(__rbit64(v92)) + (v93 << 6);
      }
      unint64_t v174 = v90;
      BOOL v95 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v90);
      uint64_t v97 = *v95;
      unint64_t v96 = v95[1];
      sub_100726DD0();
      sub_100441FD4(v97, v96);
      unint64_t v192 = v96;
      sub_100725B60();
      Swift::Int v98 = sub_100726E30();
      uint64_t v99 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v100 = v98 & ~v99;
      if (((*(void *)(v197 + ((v100 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v100) & 1) == 0)
      {
LABEL_147:
        sub_100442248(v97, v192);
        unint64_t v89 = v185;
        int64_t v86 = v187;
        continue;
      }
      unint64_t v101 = v96 >> 62;
      uint64_t v195 = ~v99;
      BOOL v102 = __OFSUB__(HIDWORD(v97), v97);
      BOOL v189 = v102;
      uint64_t v181 = (v97 >> 32) - (int)v97;
      uint64_t v183 = v97 >> 32;
      while (2)
      {
        uint64_t v103 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v100);
        uint64_t v105 = *v103;
        unint64_t v104 = v103[1];
        uint64_t v106 = 0;
        switch(v104 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v105), v105)) {
              goto LABEL_287;
            }
            uint64_t v106 = HIDWORD(v105) - (int)v105;
LABEL_177:
            sub_100441FD4(v105, v104);
            break;
          case 2uLL:
            uint64_t v108 = *(void *)(v105 + 16);
            uint64_t v107 = *(void *)(v105 + 24);
            uint64_t v106 = v107 - v108;
            if (!__OFSUB__(v107, v108)) {
              goto LABEL_177;
            }
            goto LABEL_288;
          case 3uLL:
            break;
          default:
            uint64_t v106 = BYTE6(v104);
            break;
        }
        uint64_t v109 = BYTE6(v192);
        switch((int)v101)
        {
          case 1:
            uint64_t v109 = HIDWORD(v97) - (int)v97;
            if (v189) {
              goto LABEL_291;
            }
            goto LABEL_182;
          case 2:
            uint64_t v111 = *(void *)(v97 + 16);
            uint64_t v110 = *(void *)(v97 + 24);
            BOOL v32 = __OFSUB__(v110, v111);
            uint64_t v109 = v110 - v111;
            if (!v32) {
              goto LABEL_182;
            }
            goto LABEL_292;
          case 3:
            if (v106) {
              goto LABEL_170;
            }
            goto LABEL_280;
          default:
LABEL_182:
            if (v106 != v109)
            {
LABEL_170:
              sub_100442248(v105, v104);
              goto LABEL_171;
            }
            if (v106 >= 1)
            {
              switch(v104 >> 62)
              {
                case 1uLL:
                  if ((int)v105 > v105 >> 32) {
                    goto LABEL_294;
                  }
                  uint64_t v116 = sub_100725910();
                  if (v116)
                  {
                    uint64_t v117 = v116;
                    uint64_t v118 = sub_100725940();
                    if (__OFSUB__((int)v105, v118)) {
                      goto LABEL_298;
                    }
                    uint64_t v119 = (const void *)(v117 + (int)v105 - v118);
                    sub_100725930();
                    if (!v101)
                    {
LABEL_234:
                      *(void *)__s1 = v97;
                      *(_DWORD *)&__s1[8] = v192;
                      *(_WORD *)&__s1[12] = WORD2(v192);
                      if (!v119) {
                        goto LABEL_355;
                      }
                      int v134 = memcmp(v119, __s1, BYTE6(v192));
                      goto LABEL_265;
                    }
                  }
                  else
                  {
                    uint64_t v119 = 0;
                    sub_100725930();
                    if (!v101) {
                      goto LABEL_234;
                    }
                  }
                  if (v101 == 1)
                  {
                    if (v183 < (int)v97) {
                      goto LABEL_318;
                    }
                    swift_retain();
                    uint64_t v120 = sub_100725910();
                    if (v120)
                    {
                      uint64_t v121 = sub_100725940();
                      if (__OFSUB__((int)v97, v121)) {
                        goto LABEL_332;
                      }
                      v120 += (int)v97 - v121;
                    }
                    uint64_t v122 = sub_100725930();
                    uint64_t v123 = (v97 >> 32) - (int)v97;
                    if (v122 < v181) {
                      uint64_t v123 = v122;
                    }
                    if (!v119) {
                      goto LABEL_350;
                    }
                    if (!v120) {
                      goto LABEL_351;
                    }
                    size_t v124 = v123;
                    uint64_t v125 = v119;
                    int v126 = (const void *)v120;
LABEL_218:
                    int v134 = memcmp(v125, v126, v124);
                    sub_100442248(v97, v192);
                    goto LABEL_265;
                  }
                  uint64_t v156 = *(void *)(v97 + 16);
                  uint64_t v179 = *(char **)(v97 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v157 = sub_100725910();
                  if (v157)
                  {
                    uint64_t v158 = v157;
                    uint64_t v159 = sub_100725940();
                    if (__OFSUB__(v156, v159)) {
                      goto LABEL_330;
                    }
                    uint64_t v160 = v156;
                    unint64_t v161 = (const void *)(v158 + v156 - v159);
                  }
                  else
                  {
                    uint64_t v160 = v156;
                    unint64_t v161 = 0;
                  }
                  unsigned __int16 v162 = &v179[-v160];
                  if (__OFSUB__(v179, v160)) {
                    goto LABEL_320;
                  }
                  uint64_t v163 = sub_100725930();
                  if (v163 >= (uint64_t)v162) {
                    size_t v164 = (size_t)v162;
                  }
                  else {
                    size_t v164 = v163;
                  }
                  if (!v119) {
                    goto LABEL_361;
                  }
                  if (!v161) {
                    goto LABEL_362;
                  }
                  int v134 = memcmp(v119, v161, v164);
LABEL_277:
                  swift_release();
                  swift_release();
                  sub_100442248(v105, v104);
                  uint64_t v5 = a3;
                  goto LABEL_278;
                case 2uLL:
                  uint64_t v127 = *(void *)(v105 + 16);
                  swift_retain();
                  swift_retain();
                  uint64_t v128 = sub_100725910();
                  if (v128)
                  {
                    uint64_t v129 = v128;
                    uint64_t v130 = sub_100725940();
                    if (__OFSUB__(v127, v130)) {
                      goto LABEL_296;
                    }
                    uint64_t v178 = (void *)(v129 + v127 - v130);
                  }
                  else
                  {
                    uint64_t v178 = 0;
                  }
                  sub_100725930();
                  uint64_t v5 = a3;
                  if (!v101)
                  {
                    *(void *)__s1 = v97;
                    *(_DWORD *)&__s1[8] = v192;
                    *(_WORD *)&__s1[12] = WORD2(v192);
                    if (!v178) {
                      goto LABEL_358;
                    }
                    int v134 = memcmp(v178, __s1, BYTE6(v192));
LABEL_253:
                    swift_release();
                    goto LABEL_264;
                  }
                  if (v101 == 1)
                  {
                    if (v183 < (int)v97) {
                      goto LABEL_308;
                    }
                    swift_retain();
                    uint64_t v136 = (char *)sub_100725910();
                    if (v136)
                    {
                      uint64_t v137 = sub_100725940();
                      if (__OFSUB__((int)v97, v137)) {
                        goto LABEL_329;
                      }
                      v136 += (int)v97 - v137;
                    }
                    uint64_t v138 = sub_100725930();
                    size_t v139 = (v97 >> 32) - (int)v97;
                    if (v138 < v181) {
                      size_t v139 = v138;
                    }
                    if (!v178) {
                      goto LABEL_353;
                    }
                    if (!v136) {
                      goto LABEL_354;
                    }
                    int v134 = memcmp(v178, v136, v139);
                    sub_100442248(v97, v192);
                    goto LABEL_253;
                  }
                  uint64_t v150 = *(void *)(v97 + 16);
                  uint64_t v167 = *(void *)(v97 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v151 = (char *)sub_100725910();
                  if (v151)
                  {
                    uint64_t v152 = sub_100725940();
                    if (__OFSUB__(v150, v152)) {
                      goto LABEL_326;
                    }
                    v151 += v150 - v152;
                  }
                  BOOL v32 = __OFSUB__(v167, v150);
                  int64_t v153 = v167 - v150;
                  if (v32) {
                    goto LABEL_316;
                  }
                  uint64_t v154 = sub_100725930();
                  if (v154 >= v153) {
                    size_t v155 = v153;
                  }
                  else {
                    size_t v155 = v154;
                  }
                  if (!v178) {
                    goto LABEL_359;
                  }
                  uint64_t v5 = a3;
                  if (!v151) {
                    goto LABEL_360;
                  }
                  int v134 = memcmp(v178, v151, v155);
                  swift_release();
                  swift_release();
                  swift_release();
LABEL_264:
                  swift_release();
LABEL_265:
                  sub_100442248(v105, v104);
LABEL_278:
                  uint64_t v4 = a4;
                  if (!v134) {
                    goto LABEL_281;
                  }
                  break;
                case 3uLL:
                  *(void *)&__s1[6] = 0;
                  *(void *)__s1 = 0;
                  if (!v101) {
                    goto LABEL_219;
                  }
                  if (v101 == 1)
                  {
                    if (v183 < (int)v97) {
                      goto LABEL_302;
                    }
                    sub_100441FD4(v97, v192);
                    uint64_t v131 = sub_100725910();
                    if (!v131) {
                      goto LABEL_352;
                    }
                    uint64_t v113 = v131;
                    uint64_t v132 = sub_100725940();
                    uint64_t v115 = (int)v97 - v132;
                    if (__OFSUB__((int)v97, v132)) {
                      goto LABEL_314;
                    }
LABEL_214:
                    uint64_t v133 = sub_100725930();
                    int v126 = (const void *)(v113 + v115);
                    if (v133 >= v181) {
                      size_t v124 = (v97 >> 32) - (int)v97;
                    }
                    else {
                      size_t v124 = v133;
                    }
                    uint64_t v125 = __s1;
                    goto LABEL_218;
                  }
                  uint64_t v146 = *(void *)(v97 + 16);
                  uint64_t v147 = *(void *)(v97 + 24);
                  swift_retain();
                  swift_retain();
                  unint64_t v142 = (char *)sub_100725910();
                  if (v142)
                  {
                    uint64_t v148 = sub_100725940();
                    if (__OFSUB__(v146, v148)) {
                      goto LABEL_324;
                    }
                    v142 += v146 - v148;
                  }
                  BOOL v32 = __OFSUB__(v147, v146);
                  int64_t v144 = v147 - v146;
                  if (v32) {
                    goto LABEL_310;
                  }
                  uint64_t v145 = sub_100725930();
                  if (!v142) {
                    goto LABEL_357;
                  }
LABEL_247:
                  if (v145 >= v144) {
                    size_t v149 = v144;
                  }
                  else {
                    size_t v149 = v145;
                  }
                  int v134 = memcmp(__s1, v142, v149);
                  goto LABEL_277;
                default:
                  *(void *)__s1 = v105;
                  *(_WORD *)&__s1[8] = v104;
                  __s1[10] = BYTE2(v104);
                  __s1[11] = BYTE3(v104);
                  __s1[12] = BYTE4(v104);
                  __s1[13] = BYTE5(v104);
                  if (!v101)
                  {
LABEL_219:
                    uint64_t __s2 = v97;
                    int v199 = v192;
                    __int16 v200 = WORD2(v192);
                    int v135 = memcmp(__s1, &__s2, BYTE6(v192));
                    sub_100442248(v105, v104);
                    if (!v135) {
                      goto LABEL_281;
                    }
                    break;
                  }
                  if (v101 == 1)
                  {
                    if (v183 < (int)v97) {
                      goto LABEL_304;
                    }
                    sub_100441FD4(v97, v192);
                    uint64_t v112 = sub_100725910();
                    if (!v112) {
                      goto LABEL_349;
                    }
                    uint64_t v113 = v112;
                    uint64_t v114 = sub_100725940();
                    uint64_t v115 = (int)v97 - v114;
                    if (__OFSUB__((int)v97, v114)) {
                      goto LABEL_313;
                    }
                    goto LABEL_214;
                  }
                  uint64_t v140 = *(void *)(v97 + 16);
                  uint64_t v141 = *(void *)(v97 + 24);
                  swift_retain();
                  swift_retain();
                  unint64_t v142 = (char *)sub_100725910();
                  if (v142)
                  {
                    uint64_t v143 = sub_100725940();
                    if (__OFSUB__(v140, v143)) {
                      goto LABEL_323;
                    }
                    v142 += v140 - v143;
                  }
                  BOOL v32 = __OFSUB__(v141, v140);
                  int64_t v144 = v141 - v140;
                  if (v32) {
                    goto LABEL_309;
                  }
                  uint64_t v145 = sub_100725930();
                  if (!v142) {
                    goto LABEL_356;
                  }
                  goto LABEL_247;
              }
LABEL_171:
              unint64_t v100 = (v100 + 1) & v195;
              if (((*(void *)(v197 + ((v100 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v100) & 1) == 0) {
                goto LABEL_147;
              }
              continue;
            }
LABEL_280:
            sub_100442248(v105, v104);
LABEL_281:
            sub_100442248(v97, v192);
            *(unint64_t *)((char *)a1 + ((v174 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v174;
            BOOL v32 = __OFADD__(v175++, 1);
            unint64_t v89 = v185;
            int64_t v86 = v187;
            if (v32)
            {
              __break(1u);
              goto LABEL_284;
            }
            break;
        }
        break;
      }
    }
  }
  int64_t v6 = 0;
  uint64_t v171 = a4 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  int64_t v173 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v175 = 0;
  uint64_t v196 = a3 + 56;
LABEL_7:
  while (2)
  {
    if (v9)
    {
      uint64_t v184 = (v9 - 1) & v9;
      int64_t v186 = v6;
      unint64_t v10 = __clz(__rbit64(v9)) | (v6 << 6);
LABEL_23:
      unint64_t v15 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v10);
      uint64_t v17 = *v15;
      unint64_t v16 = v15[1];
      sub_100726DD0();
      sub_100441FD4(v17, v16);
      unint64_t v191 = v16;
      sub_100725B60();
      Swift::Int v18 = sub_100726E30();
      uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
      unint64_t v20 = v18 & ~v19;
      if (((*(void *)(v196 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0)
      {
LABEL_6:
        sub_100442248(v17, v191);
        unint64_t v9 = v184;
        int64_t v6 = v186;
        continue;
      }
      unint64_t v21 = v16 >> 62;
      uint64_t v194 = ~v19;
      BOOL v22 = __OFSUB__(HIDWORD(v17), v17);
      BOOL v188 = v22;
      uint64_t v180 = (v17 >> 32) - (int)v17;
      uint64_t v182 = v17 >> 32;
      while (1)
      {
        unint64_t v23 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
        uint64_t v25 = *v23;
        unint64_t v24 = v23[1];
        uint64_t v26 = 0;
        switch(v24 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v25), v25))
            {
              __break(1u);
LABEL_286:
              __break(1u);
LABEL_287:
              __break(1u);
LABEL_288:
              __break(1u);
LABEL_289:
              __break(1u);
LABEL_290:
              __break(1u);
LABEL_291:
              __break(1u);
LABEL_292:
              __break(1u);
LABEL_293:
              __break(1u);
LABEL_294:
              __break(1u);
LABEL_295:
              __break(1u);
LABEL_296:
              __break(1u);
LABEL_297:
              __break(1u);
LABEL_298:
              __break(1u);
LABEL_299:
              __break(1u);
LABEL_300:
              __break(1u);
LABEL_301:
              __break(1u);
LABEL_302:
              __break(1u);
LABEL_303:
              __break(1u);
LABEL_304:
              __break(1u);
LABEL_305:
              __break(1u);
LABEL_306:
              __break(1u);
LABEL_307:
              __break(1u);
LABEL_308:
              __break(1u);
LABEL_309:
              __break(1u);
LABEL_310:
              __break(1u);
LABEL_311:
              __break(1u);
LABEL_312:
              __break(1u);
LABEL_313:
              __break(1u);
LABEL_314:
              __break(1u);
LABEL_315:
              __break(1u);
LABEL_316:
              __break(1u);
LABEL_317:
              __break(1u);
LABEL_318:
              __break(1u);
LABEL_319:
              __break(1u);
LABEL_320:
              __break(1u);
LABEL_321:
              __break(1u);
LABEL_322:
              __break(1u);
LABEL_323:
              __break(1u);
LABEL_324:
              __break(1u);
LABEL_325:
              __break(1u);
LABEL_326:
              __break(1u);
LABEL_327:
              __break(1u);
LABEL_328:
              __break(1u);
LABEL_329:
              __break(1u);
LABEL_330:
              __break(1u);
LABEL_331:
              __break(1u);
LABEL_332:
              __break(1u);
LABEL_333:
              __break(1u);
              goto LABEL_334;
            }
            uint64_t v26 = HIDWORD(v25) - (int)v25;
LABEL_36:
            sub_100441FD4(v25, v24);
            break;
          case 2uLL:
            uint64_t v28 = *(void *)(v25 + 16);
            uint64_t v27 = *(void *)(v25 + 24);
            uint64_t v26 = v27 - v28;
            if (!__OFSUB__(v27, v28)) {
              goto LABEL_36;
            }
            goto LABEL_286;
          case 3uLL:
            break;
          default:
            uint64_t v26 = BYTE6(v24);
            break;
        }
        uint64_t v29 = BYTE6(v191);
        switch((int)v21)
        {
          case 1:
            uint64_t v29 = HIDWORD(v17) - (int)v17;
            if (v188) {
              goto LABEL_289;
            }
            goto LABEL_41;
          case 2:
            uint64_t v31 = *(void *)(v17 + 16);
            uint64_t v30 = *(void *)(v17 + 24);
            BOOL v32 = __OFSUB__(v30, v31);
            uint64_t v29 = v30 - v31;
            if (!v32) {
              goto LABEL_41;
            }
            goto LABEL_290;
          case 3:
            if (v26) {
              goto LABEL_29;
            }
            goto LABEL_139;
          default:
LABEL_41:
            if (v26 != v29)
            {
LABEL_29:
              sub_100442248(v25, v24);
              goto LABEL_30;
            }
            if (v26 < 1)
            {
LABEL_139:
              sub_100442248(v25, v24);
LABEL_140:
              sub_100442248(v17, v191);
              *(unint64_t *)((char *)a1 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
              BOOL v32 = __OFADD__(v175++, 1);
              unint64_t v9 = v184;
              int64_t v6 = v186;
              if (v32)
              {
                __break(1u);
                goto LABEL_143;
              }
              goto LABEL_7;
            }
            switch(v24 >> 62)
            {
              case 1uLL:
                if ((int)v25 > v25 >> 32) {
                  goto LABEL_293;
                }
                uint64_t v37 = sub_100725910();
                if (v37)
                {
                  uint64_t v38 = v37;
                  uint64_t v39 = sub_100725940();
                  if (__OFSUB__((int)v25, v39)) {
                    goto LABEL_297;
                  }
                  uint64_t v40 = (const void *)(v38 + (int)v25 - v39);
                  sub_100725930();
                  if (!v21)
                  {
LABEL_93:
                    *(void *)__s1 = v17;
                    *(_DWORD *)&__s1[8] = v191;
                    *(_WORD *)&__s1[12] = WORD2(v191);
                    if (!v40) {
                      goto LABEL_341;
                    }
                    int v55 = memcmp(v40, __s1, BYTE6(v191));
                    goto LABEL_124;
                  }
                }
                else
                {
                  uint64_t v40 = 0;
                  sub_100725930();
                  if (!v21) {
                    goto LABEL_93;
                  }
                }
                if (v21 == 1)
                {
                  if (v182 < (int)v17) {
                    goto LABEL_317;
                  }
                  swift_retain();
                  uint64_t v41 = sub_100725910();
                  if (v41)
                  {
                    uint64_t v42 = sub_100725940();
                    if (__OFSUB__((int)v17, v42)) {
                      goto LABEL_331;
                    }
                    v41 += (int)v17 - v42;
                  }
                  uint64_t v43 = sub_100725930();
                  uint64_t v44 = (v17 >> 32) - (int)v17;
                  if (v43 < v180) {
                    uint64_t v44 = v43;
                  }
                  if (!v40) {
                    goto LABEL_336;
                  }
                  if (!v41)
                  {
LABEL_337:
                    __break(1u);
LABEL_338:
                    sub_100725930();
                    __break(1u);
LABEL_339:
                    __break(1u);
LABEL_340:
                    __break(1u);
LABEL_341:
                    __break(1u);
LABEL_342:
                    __break(1u);
LABEL_343:
                    __break(1u);
LABEL_344:
                    __break(1u);
LABEL_345:
                    __break(1u);
LABEL_346:
                    __break(1u);
LABEL_347:
                    __break(1u);
LABEL_348:
                    __break(1u);
LABEL_349:
                    sub_100725930();
                    __break(1u);
LABEL_350:
                    __break(1u);
LABEL_351:
                    __break(1u);
LABEL_352:
                    sub_100725930();
                    __break(1u);
LABEL_353:
                    __break(1u);
LABEL_354:
                    __break(1u);
LABEL_355:
                    __break(1u);
LABEL_356:
                    __break(1u);
LABEL_357:
                    __break(1u);
LABEL_358:
                    __break(1u);
LABEL_359:
                    __break(1u);
LABEL_360:
                    __break(1u);
LABEL_361:
                    __break(1u);
LABEL_362:
                    __break(1u);
                  }
                  size_t v45 = v44;
                  uint64_t v46 = v40;
                  size_t v47 = (const void *)v41;
LABEL_77:
                  int v55 = memcmp(v46, v47, v45);
                  sub_100442248(v17, v191);
                  goto LABEL_124;
                }
                uint64_t v77 = *(void *)(v17 + 16);
                os_log_type_t v177 = *(char **)(v17 + 24);
                swift_retain();
                swift_retain();
                uint64_t v78 = sub_100725910();
                if (v78)
                {
                  uint64_t v79 = v78;
                  uint64_t v80 = sub_100725940();
                  if (__OFSUB__(v77, v80)) {
                    goto LABEL_328;
                  }
                  uint64_t v81 = v77;
                  int64_t v82 = (const void *)(v79 + v77 - v80);
                }
                else
                {
                  uint64_t v81 = v77;
                  int64_t v82 = 0;
                }
                uint64_t v83 = &v177[-v81];
                if (__OFSUB__(v177, v81)) {
                  goto LABEL_319;
                }
                uint64_t v84 = sub_100725930();
                if (v84 >= (uint64_t)v83) {
                  size_t v85 = (size_t)v83;
                }
                else {
                  size_t v85 = v84;
                }
                if (!v40) {
                  goto LABEL_347;
                }
                if (!v82) {
                  goto LABEL_348;
                }
                int v55 = memcmp(v40, v82, v85);
LABEL_136:
                swift_release();
                swift_release();
                sub_100442248(v25, v24);
                uint64_t v5 = a3;
                goto LABEL_137;
              case 2uLL:
                uint64_t v48 = *(void *)(v25 + 16);
                swift_retain();
                swift_retain();
                uint64_t v49 = sub_100725910();
                if (v49)
                {
                  uint64_t v50 = v49;
                  uint64_t v51 = sub_100725940();
                  if (__OFSUB__(v48, v51)) {
                    goto LABEL_295;
                  }
                  uint64_t v176 = (void *)(v50 + v48 - v51);
                }
                else
                {
                  uint64_t v176 = 0;
                }
                sub_100725930();
                uint64_t v5 = a3;
                if (!v21)
                {
                  *(void *)__s1 = v17;
                  *(_DWORD *)&__s1[8] = v191;
                  *(_WORD *)&__s1[12] = WORD2(v191);
                  if (!v176) {
                    goto LABEL_344;
                  }
                  int v55 = memcmp(v176, __s1, BYTE6(v191));
LABEL_112:
                  swift_release();
                  goto LABEL_123;
                }
                if (v21 == 1)
                {
                  if (v182 < (int)v17) {
                    goto LABEL_305;
                  }
                  swift_retain();
                  int v57 = (char *)sub_100725910();
                  if (v57)
                  {
                    uint64_t v58 = sub_100725940();
                    if (__OFSUB__((int)v17, v58)) {
                      goto LABEL_327;
                    }
                    v57 += (int)v17 - v58;
                  }
                  uint64_t v59 = sub_100725930();
                  size_t v60 = (v17 >> 32) - (int)v17;
                  if (v59 < v180) {
                    size_t v60 = v59;
                  }
                  if (!v176) {
                    goto LABEL_339;
                  }
                  if (!v57) {
                    goto LABEL_340;
                  }
                  int v55 = memcmp(v176, v57, v60);
                  sub_100442248(v17, v191);
                  goto LABEL_112;
                }
                uint64_t v71 = *(void *)(v17 + 16);
                uint64_t v168 = *(void *)(v17 + 24);
                swift_retain();
                swift_retain();
                uint64_t v72 = (char *)sub_100725910();
                if (v72)
                {
                  uint64_t v73 = sub_100725940();
                  if (__OFSUB__(v71, v73)) {
                    goto LABEL_325;
                  }
                  v72 += v71 - v73;
                }
                BOOL v32 = __OFSUB__(v168, v71);
                int64_t v74 = v168 - v71;
                if (v32) {
                  goto LABEL_315;
                }
                uint64_t v75 = sub_100725930();
                if (v75 >= v74) {
                  size_t v76 = v74;
                }
                else {
                  size_t v76 = v75;
                }
                if (!v176) {
                  goto LABEL_345;
                }
                uint64_t v5 = a3;
                if (!v72) {
                  goto LABEL_346;
                }
                int v55 = memcmp(v176, v72, v76);
                swift_release();
                swift_release();
                swift_release();
LABEL_123:
                swift_release();
LABEL_124:
                sub_100442248(v25, v24);
LABEL_137:
                uint64_t v4 = a4;
                if (!v55) {
                  goto LABEL_140;
                }
                break;
              case 3uLL:
                *(void *)&__s1[6] = 0;
                *(void *)__s1 = 0;
                if (!v21) {
                  goto LABEL_78;
                }
                if (v21 == 1)
                {
                  if (v182 < (int)v17) {
                    goto LABEL_301;
                  }
                  sub_100441FD4(v17, v191);
                  uint64_t v52 = sub_100725910();
                  if (!v52) {
                    goto LABEL_338;
                  }
                  uint64_t v34 = v52;
                  uint64_t v53 = sub_100725940();
                  uint64_t v36 = (int)v17 - v53;
                  if (__OFSUB__((int)v17, v53)) {
                    goto LABEL_312;
                  }
LABEL_73:
                  uint64_t v54 = sub_100725930();
                  size_t v47 = (const void *)(v34 + v36);
                  if (v54 >= v180) {
                    size_t v45 = (v17 >> 32) - (int)v17;
                  }
                  else {
                    size_t v45 = v54;
                  }
                  uint64_t v46 = __s1;
                  goto LABEL_77;
                }
                uint64_t v67 = *(void *)(v17 + 16);
                uint64_t v68 = *(void *)(v17 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_100725910();
                if (v63)
                {
                  uint64_t v69 = sub_100725940();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_322;
                  }
                  v63 += v67 - v69;
                }
                BOOL v32 = __OFSUB__(v68, v67);
                int64_t v65 = v68 - v67;
                if (v32) {
                  goto LABEL_307;
                }
                uint64_t v66 = sub_100725930();
                if (!v63) {
                  goto LABEL_343;
                }
LABEL_106:
                if (v66 >= v65) {
                  size_t v70 = v65;
                }
                else {
                  size_t v70 = v66;
                }
                int v55 = memcmp(__s1, v63, v70);
                goto LABEL_136;
              default:
                *(void *)__s1 = v25;
                *(_WORD *)&__s1[8] = v24;
                __s1[10] = BYTE2(v24);
                __s1[11] = BYTE3(v24);
                __s1[12] = BYTE4(v24);
                __s1[13] = BYTE5(v24);
                if (!v21)
                {
LABEL_78:
                  uint64_t __s2 = v17;
                  int v199 = v191;
                  __int16 v200 = WORD2(v191);
                  int v56 = memcmp(__s1, &__s2, BYTE6(v191));
                  sub_100442248(v25, v24);
                  if (!v56) {
                    goto LABEL_140;
                  }
                  break;
                }
                if (v21 == 1)
                {
                  if (v182 < (int)v17) {
                    goto LABEL_303;
                  }
                  sub_100441FD4(v17, v191);
                  uint64_t v33 = sub_100725910();
                  if (!v33) {
                    goto LABEL_335;
                  }
                  uint64_t v34 = v33;
                  uint64_t v35 = sub_100725940();
                  uint64_t v36 = (int)v17 - v35;
                  if (__OFSUB__((int)v17, v35)) {
                    goto LABEL_311;
                  }
                  goto LABEL_73;
                }
                uint64_t v61 = *(void *)(v17 + 16);
                uint64_t v62 = *(void *)(v17 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_100725910();
                if (v63)
                {
                  uint64_t v64 = sub_100725940();
                  if (__OFSUB__(v61, v64)) {
                    goto LABEL_321;
                  }
                  v63 += v61 - v64;
                }
                BOOL v32 = __OFSUB__(v62, v61);
                int64_t v65 = v62 - v61;
                if (v32) {
                  goto LABEL_306;
                }
                uint64_t v66 = sub_100725930();
                if (!v63) {
                  goto LABEL_342;
                }
                goto LABEL_106;
            }
LABEL_30:
            unint64_t v20 = (v20 + 1) & v194;
            if (((*(void *)(v196 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
              goto LABEL_6;
            }
            break;
        }
      }
    }
    break;
  }
  int64_t v11 = v6 + 1;
  if (__OFADD__(v6, 1)) {
    goto LABEL_299;
  }
  if (v11 < v173)
  {
    unint64_t v12 = *(void *)(v171 + 8 * v11);
    int64_t v13 = v6 + 1;
    if (!v12)
    {
      int64_t v13 = v6 + 2;
      if (v6 + 2 >= v173) {
        goto LABEL_284;
      }
      unint64_t v12 = *(void *)(v171 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v6 + 3;
        if (v6 + 3 >= v173) {
          goto LABEL_284;
        }
        unint64_t v12 = *(void *)(v171 + 8 * v13);
        if (!v12)
        {
          uint64_t v14 = v6 + 4;
          if (v6 + 4 >= v173) {
            goto LABEL_284;
          }
          unint64_t v12 = *(void *)(v171 + 8 * v14);
          if (!v12)
          {
            while (1)
            {
              int64_t v13 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_333;
              }
              if (v13 >= v173) {
                goto LABEL_284;
              }
              unint64_t v12 = *(void *)(v171 + 8 * v13);
              ++v14;
              if (v12) {
                goto LABEL_22;
              }
            }
          }
          int64_t v13 = v6 + 4;
        }
      }
    }
LABEL_22:
    uint64_t v184 = (v12 - 1) & v12;
    int64_t v186 = v13;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    goto LABEL_23;
  }
LABEL_284:
  swift_retain();
  return sub_1004C90D8(a1, a2, v175, v5);
}

Swift::Int sub_100575238(char **a1)
{
  uint64_t v2 = v1;
  uint64_t v133 = sub_100431F80(&qword_100A48728);
  uint64_t v4 = *(void *)(v133 - 8);
  uint64_t v6 = __chkstk_darwin(v133, v5);
  uint64_t v124 = (uint64_t)&v120 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v134 = (uint64_t)&v120 - v10;
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v131 = (uint64_t)&v120 - v13;
  __chkstk_darwin(v12, v14);
  uint64_t v130 = (uint64_t)&v120 - v15;
  Swift::Int v16 = (Swift::Int)a1[1];
  Swift::Int result = sub_100726CF0(v16);
  if (result >= v16)
  {
    if (v16 < 0) {
      goto LABEL_141;
    }
    if (v16) {
      return sub_10057658C(0, v16, 1, a1);
    }
    return result;
  }
  if (v16 >= 0) {
    uint64_t v18 = v16;
  }
  else {
    uint64_t v18 = v16 + 1;
  }
  if (v16 < -1) {
    goto LABEL_149;
  }
  uint64_t v128 = v4;
  uint64_t v132 = a1;
  Swift::Int v121 = result;
  if (v16 < 2)
  {
    BOOL v22 = (char *)&_swiftEmptyArrayStorage;
    unint64_t v127 = (unint64_t)&_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v120 = &_swiftEmptyArrayStorage;
    if (v16 != 1)
    {
      unint64_t v24 = *(&_swiftEmptyArrayStorage + 2);
LABEL_107:
      uint64_t v113 = v22;
      if (v24 >= 2)
      {
        uint64_t v114 = *v132;
        do
        {
          unint64_t v115 = v24 - 2;
          if (v24 < 2) {
            goto LABEL_136;
          }
          if (!v114) {
            goto LABEL_148;
          }
          uint64_t v116 = *(void *)&v113[16 * v115 + 32];
          uint64_t v117 = *(void *)&v113[16 * v24 + 24];
          sub_100576A18((unint64_t)&v114[*(void *)(v128 + 72) * v116], (unint64_t)&v114[*(void *)(v128 + 72) * *(void *)&v113[16 * v24 + 16]], (unint64_t)&v114[*(void *)(v128 + 72) * v117], v127);
          if (v2) {
            break;
          }
          if (v117 < v116) {
            goto LABEL_137;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v113 = sub_1005244BC((uint64_t)v113);
          }
          if (v115 >= *((void *)v113 + 2)) {
            goto LABEL_138;
          }
          uint64_t v118 = &v113[16 * v115 + 32];
          *(void *)uint64_t v118 = v116;
          *((void *)v118 + 1) = v117;
          unint64_t v119 = *((void *)v113 + 2);
          if (v24 > v119) {
            goto LABEL_139;
          }
          memmove(&v113[16 * v24 + 16], &v113[16 * v24 + 32], 16 * (v119 - v24));
          *((void *)v113 + 2) = v119 - 1;
          unint64_t v24 = v119 - 1;
        }
        while (v119 > 2);
      }
LABEL_118:
      swift_bridgeObjectRelease();
      v120[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v19 = v18 >> 1;
    uint64_t v20 = sub_1007265B0();
    *(void *)(v20 + 16) = v19;
    uint64_t v21 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v120 = (void *)v20;
    unint64_t v127 = v20 + ((v21 + 32) & ~v21);
  }
  uint64_t v23 = 0;
  BOOL v22 = (char *)&_swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v25 = v23;
    uint64_t v26 = v23 + 1;
    uint64_t v126 = v23;
    if (v23 + 1 >= v16)
    {
      Swift::Int v32 = v23 + 1;
      break;
    }
    uint64_t v122 = v2;
    uint64_t v27 = *v132;
    Swift::Int v28 = *(void *)(v128 + 72);
    uint64_t v29 = v130;
    sub_1004546B8((uint64_t)&(*v132)[v28 * v26], v130, &qword_100A48728);
    uint64_t v129 = v16;
    uint64_t v30 = v131;
    sub_1004546B8((uint64_t)&v27[v28 * v25], v131, &qword_100A48728);
    LODWORD(v125) = sub_100725BF0();
    uint64_t v31 = v30;
    Swift::Int v16 = v129;
    sub_10044C150(v31, &qword_100A48728);
    sub_10044C150(v29, &qword_100A48728);
    Swift::Int v32 = v25 + 2;
    uint64_t v123 = v27;
    Swift::Int v135 = v28;
    if (v25 + 2 >= v16)
    {
      uint64_t v2 = v122;
      if ((v125 & 1) == 0) {
        break;
      }
    }
    else
    {
      uint64_t v33 = v28 * v26;
      uint64_t v34 = v27;
      Swift::Int v35 = v28 * v32;
      do
      {
        Swift::Int v36 = v32;
        uint64_t v37 = v130;
        sub_1004546B8((uint64_t)&v34[v35], v130, &qword_100A48728);
        uint64_t v38 = v131;
        sub_1004546B8((uint64_t)&v34[v33], v131, &qword_100A48728);
        int v39 = sub_100725BF0();
        sub_10044C150(v38, &qword_100A48728);
        sub_10044C150(v37, &qword_100A48728);
        if ((v125 ^ v39))
        {
          Swift::Int v32 = v36;
          uint64_t v2 = v122;
          uint64_t v25 = v126;
          Swift::Int v16 = v129;
          if ((v125 & 1) == 0) {
            goto LABEL_23;
          }
          goto LABEL_43;
        }
        Swift::Int v32 = v36 + 1;
        v34 += v135;
      }
      while (v129 != v36 + 1);
      Swift::Int v16 = v129;
      Swift::Int v32 = v129;
      uint64_t v2 = v122;
      uint64_t v25 = v126;
      if ((v125 & 1) == 0) {
        break;
      }
    }
LABEL_43:
    Swift::Int v51 = v135;
    if (v32 < v25) {
      goto LABEL_142;
    }
    if (v25 >= v32) {
      break;
    }
    uint64_t v122 = v2;
    uint64_t v52 = 0;
    uint64_t v53 = v135 * (v32 - 1);
    Swift::Int v54 = v32 * v135;
    uint64_t v55 = v32;
    uint64_t v56 = v25;
    uint64_t v57 = v25 * v135;
    uint64_t v40 = v132;
    uint64_t v136 = v55;
    do
    {
      if (v56 != v55 + v52 - 1)
      {
        uint64_t v58 = v123;
        if (!v123) {
          goto LABEL_147;
        }
        uint64_t v59 = &v123[v57];
        uint64_t v60 = (uint64_t)&v123[v53];
        sub_100462BE4((uint64_t)&v123[v57], v124, &qword_100A48728);
        if (v57 < v53 || v59 >= &v58[v54])
        {
          swift_arrayInitWithTakeFrontToBack();
          Swift::Int v51 = v135;
        }
        else
        {
          Swift::Int v51 = v135;
          if (v57 != v53) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_100462BE4(v124, v60, &qword_100A48728);
        uint64_t v40 = v132;
      }
      ++v56;
      --v52;
      uint64_t v55 = v136;
      v53 -= v51;
      v54 -= v51;
      v57 += v51;
    }
    while (v56 < v136 + v52);
    uint64_t v2 = v122;
    Swift::Int v32 = v136;
    uint64_t v25 = v126;
    Swift::Int v16 = v129;
    if (v136 < v129) {
      goto LABEL_24;
    }
LABEL_58:
    if (v32 < v25) {
      goto LABEL_135;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      BOOL v22 = sub_100524280(0, *((void *)v22 + 2) + 1, 1, v22);
    }
    unint64_t v62 = *((void *)v22 + 2);
    unint64_t v61 = *((void *)v22 + 3);
    unint64_t v24 = v62 + 1;
    uint64_t v136 = v32;
    if (v62 >= v61 >> 1) {
      BOOL v22 = sub_100524280((char *)(v61 > 1), v62 + 1, 1, v22);
    }
    uint64_t v63 = v2;
    *((void *)v22 + 2) = v24;
    uint64_t v64 = v22 + 32;
    int64_t v65 = &v22[16 * v62 + 32];
    uint64_t v66 = v136;
    *(void *)int64_t v65 = v25;
    *((void *)v65 + 1) = v66;
    if (v62)
    {
      while (1)
      {
        unint64_t v67 = v24 - 1;
        if (v24 >= 4)
        {
          uint64_t v72 = &v64[16 * v24];
          uint64_t v73 = *((void *)v72 - 8);
          uint64_t v74 = *((void *)v72 - 7);
          BOOL v78 = __OFSUB__(v74, v73);
          uint64_t v75 = v74 - v73;
          if (v78) {
            goto LABEL_124;
          }
          uint64_t v77 = *((void *)v72 - 6);
          uint64_t v76 = *((void *)v72 - 5);
          BOOL v78 = __OFSUB__(v76, v77);
          uint64_t v70 = v76 - v77;
          char v71 = v78;
          if (v78) {
            goto LABEL_125;
          }
          unint64_t v79 = v24 - 2;
          uint64_t v80 = &v64[16 * v24 - 32];
          uint64_t v82 = *(void *)v80;
          uint64_t v81 = *((void *)v80 + 1);
          BOOL v78 = __OFSUB__(v81, v82);
          uint64_t v83 = v81 - v82;
          if (v78) {
            goto LABEL_127;
          }
          BOOL v78 = __OFADD__(v70, v83);
          uint64_t v84 = v70 + v83;
          if (v78) {
            goto LABEL_130;
          }
          if (v84 >= v75)
          {
            BOOL v102 = &v64[16 * v67];
            uint64_t v104 = *(void *)v102;
            uint64_t v103 = *((void *)v102 + 1);
            BOOL v78 = __OFSUB__(v103, v104);
            uint64_t v105 = v103 - v104;
            if (v78) {
              goto LABEL_134;
            }
            BOOL v95 = v70 < v105;
            goto LABEL_95;
          }
        }
        else
        {
          if (v24 != 3)
          {
            uint64_t v96 = *((void *)v22 + 4);
            uint64_t v97 = *((void *)v22 + 5);
            BOOL v78 = __OFSUB__(v97, v96);
            uint64_t v89 = v97 - v96;
            char v90 = v78;
            goto LABEL_89;
          }
          uint64_t v69 = *((void *)v22 + 4);
          uint64_t v68 = *((void *)v22 + 5);
          BOOL v78 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          char v71 = v78;
        }
        if (v71) {
          goto LABEL_126;
        }
        unint64_t v79 = v24 - 2;
        size_t v85 = &v64[16 * v24 - 32];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v88 = __OFSUB__(v86, v87);
        uint64_t v89 = v86 - v87;
        char v90 = v88;
        if (v88) {
          goto LABEL_129;
        }
        int64_t v91 = &v64[16 * v67];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v78 = __OFSUB__(v92, v93);
        uint64_t v94 = v92 - v93;
        if (v78) {
          goto LABEL_132;
        }
        if (__OFADD__(v89, v94)) {
          goto LABEL_133;
        }
        if (v89 + v94 >= v70)
        {
          BOOL v95 = v70 < v94;
LABEL_95:
          if (v95) {
            unint64_t v67 = v79;
          }
          goto LABEL_97;
        }
LABEL_89:
        if (v90) {
          goto LABEL_128;
        }
        Swift::Int v98 = &v64[16 * v67];
        uint64_t v100 = *(void *)v98;
        uint64_t v99 = *((void *)v98 + 1);
        BOOL v78 = __OFSUB__(v99, v100);
        uint64_t v101 = v99 - v100;
        if (v78) {
          goto LABEL_131;
        }
        if (v101 < v89) {
          goto LABEL_14;
        }
LABEL_97:
        unint64_t v106 = v67 - 1;
        if (v67 - 1 >= v24)
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
          goto LABEL_144;
        }
        if (!*v132) {
          goto LABEL_146;
        }
        uint64_t v107 = v22;
        uint64_t v108 = &v64[16 * v106];
        uint64_t v109 = *(void *)v108;
        uint64_t v110 = &v64[16 * v67];
        uint64_t v111 = *((void *)v110 + 1);
        sub_100576A18((unint64_t)&(*v132)[*(void *)(v128 + 72) * *(void *)v108], (unint64_t)&(*v132)[*(void *)(v128 + 72) * *(void *)v110], (unint64_t)&(*v132)[*(void *)(v128 + 72) * v111], v127);
        if (v63) {
          goto LABEL_118;
        }
        if (v111 < v109) {
          goto LABEL_121;
        }
        if (v67 > *((void *)v107 + 2)) {
          goto LABEL_122;
        }
        *(void *)uint64_t v108 = v109;
        *(void *)&v64[16 * v106 + 8] = v111;
        unint64_t v112 = *((void *)v107 + 2);
        if (v67 >= v112) {
          goto LABEL_123;
        }
        BOOL v22 = v107;
        unint64_t v24 = v112 - 1;
        memmove(&v64[16 * v67], v110 + 16, 16 * (v112 - 1 - v67));
        *((void *)v107 + 2) = v112 - 1;
        if (v112 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v24 = 1;
LABEL_14:
    Swift::Int v16 = (Swift::Int)v132[1];
    uint64_t v23 = v136;
    uint64_t v2 = v63;
    if (v136 >= v16) {
      goto LABEL_107;
    }
  }
LABEL_23:
  uint64_t v40 = v132;
  if (v32 >= v16) {
    goto LABEL_58;
  }
LABEL_24:
  if (__OFSUB__(v32, v25)) {
    goto LABEL_140;
  }
  if (v32 - v25 >= v121) {
    goto LABEL_58;
  }
  if (__OFADD__(v25, v121)) {
    goto LABEL_143;
  }
  if (v25 + v121 >= v16) {
    Swift::Int v41 = v16;
  }
  else {
    Swift::Int v41 = v25 + v121;
  }
  if (v41 >= v25)
  {
    if (v32 != v41)
    {
      uint64_t v122 = v2;
      uint64_t v123 = v22;
      uint64_t v42 = *(void *)(v128 + 72);
      uint64_t v136 = v42 * (v32 - 1);
      uint64_t v129 = v42;
      Swift::Int v135 = v32 * v42;
      Swift::Int v125 = v41;
      do
      {
        uint64_t v43 = 0;
        uint64_t v44 = v25;
        while (1)
        {
          Swift::Int v45 = v32;
          uint64_t v46 = *v40;
          uint64_t v47 = v130;
          sub_1004546B8((uint64_t)&(*v40)[v135 + v43], v130, &qword_100A48728);
          uint64_t v48 = v131;
          sub_1004546B8((uint64_t)&v46[v136 + v43], v131, &qword_100A48728);
          LOBYTE(v46) = sub_100725BF0();
          sub_10044C150(v48, &qword_100A48728);
          sub_10044C150(v47, &qword_100A48728);
          if ((v46 & 1) == 0) {
            break;
          }
          uint64_t v49 = *v40;
          if (!*v40) {
            goto LABEL_145;
          }
          uint64_t v50 = (uint64_t)&v49[v136 + v43];
          sub_100462BE4((uint64_t)&v49[v135 + v43], v134, &qword_100A48728);
          Swift::Int v32 = v45;
          swift_arrayInitWithTakeFrontToBack();
          sub_100462BE4(v134, v50, &qword_100A48728);
          v43 -= v129;
          ++v44;
          uint64_t v40 = v132;
          if (v45 == v44) {
            goto LABEL_34;
          }
        }
        Swift::Int v32 = v45;
LABEL_34:
        ++v32;
        v136 += v129;
        v135 += v129;
        uint64_t v25 = v126;
      }
      while (v32 != v125);
      Swift::Int v32 = v125;
      uint64_t v2 = v122;
      BOOL v22 = v123;
    }
    goto LABEL_58;
  }
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  Swift::Int result = sub_100726B80();
  __break(1u);
  return result;
}

Swift::Int sub_100575C8C(uint64_t *a1)
{
  uint64_t v126 = sub_100725CC0();
  uint64_t v2 = *(void *)(v126 - 8);
  uint64_t v4 = __chkstk_darwin(v126, v3);
  Swift::Int v125 = (char *)&v111 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4, v6);
  uint64_t v124 = (char *)&v111 - v7;
  Swift::Int v8 = a1[1];
  Swift::Int result = sub_100726CF0(v8);
  if (result >= v8)
  {
    if (v8 < 0) {
      goto LABEL_133;
    }
    if (v8) {
      return sub_100576818(0, v8, 1, a1);
    }
    return result;
  }
  if (v8 >= 0) {
    uint64_t v10 = v8;
  }
  else {
    uint64_t v10 = v8 + 1;
  }
  if (v8 < -1) {
    goto LABEL_141;
  }
  Swift::Int v116 = result;
  if (v8 < 2)
  {
    uint64_t v13 = (char *)_swiftEmptyArrayStorage;
    uint64_t v129 = (uint64_t)_swiftEmptyArrayStorage;
    Swift::Int v121 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v8 != 1)
    {
      unint64_t v16 = _swiftEmptyArrayStorage[2];
LABEL_99:
      uint64_t v102 = v122;
      if (v16 >= 2)
      {
        uint64_t v103 = *a1;
        do
        {
          unint64_t v104 = v16 - 2;
          if (v16 < 2) {
            goto LABEL_128;
          }
          if (!v103) {
            goto LABEL_140;
          }
          uint64_t v105 = v13;
          unint64_t v106 = v13 + 32;
          uint64_t v107 = *(void *)&v13[16 * v104 + 32];
          uint64_t v108 = *(void *)&v13[16 * v16 + 24];
          sub_100576EFC((char *)(v103 + 8 * v107), (char *)(v103 + 8 * *(void *)&v106[16 * v16 - 16]), (char *)(v103 + 8 * v108), v121);
          if (v102) {
            break;
          }
          if (v108 < v107) {
            goto LABEL_129;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v105 = sub_1005244BC((uint64_t)v105);
          }
          if (v104 >= *((void *)v105 + 2)) {
            goto LABEL_130;
          }
          uint64_t v109 = &v105[16 * v104 + 32];
          *(void *)uint64_t v109 = v107;
          *((void *)v109 + 1) = v108;
          unint64_t v110 = *((void *)v105 + 2);
          if (v16 > v110) {
            goto LABEL_131;
          }
          uint64_t v13 = v105;
          memmove(&v105[16 * v16 + 16], &v105[16 * v16 + 32], 16 * (v110 - v16));
          *((void *)v105 + 2) = v110 - 1;
          unint64_t v16 = v110 - 1;
        }
        while (v110 > 2);
      }
LABEL_110:
      swift_bridgeObjectRelease();
      *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      sub_100726590();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v11 = v10 >> 1;
    type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
    uint64_t v12 = sub_1007265B0();
    *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10) = v11;
    Swift::Int v121 = (char *)((v12 & 0xFFFFFFFFFFFFFF8) + 32);
    uint64_t v129 = v12;
  }
  Swift::Int v14 = 0;
  uint64_t v15 = *a1;
  uint64_t v123 = (void (**)(char *, uint64_t))(v2 + 8);
  uint64_t v114 = v15 + 16;
  unint64_t v112 = a1;
  uint64_t v113 = v15 - 8;
  uint64_t v13 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v119 = v8;
  uint64_t v128 = v15;
  while (1)
  {
    Swift::Int v17 = v14;
    Swift::Int v18 = v14 + 1;
    Swift::Int v118 = v14;
    if (v14 + 1 < v8)
    {
      swift_retain();
      swift_retain();
      uint64_t v19 = v124;
      sub_10049279C();
      uint64_t v20 = v125;
      sub_10049279C();
      LODWORD(v127) = sub_100725BF0();
      uint64_t v21 = (char *)*v123;
      BOOL v22 = v20;
      uint64_t v23 = v126;
      (*v123)(v22, v126);
      uint64_t v120 = v21;
      ((void (*)(char *, uint64_t))v21)(v19, v23);
      swift_release();
      Swift::Int v8 = v119;
      swift_release();
      Swift::Int v18 = v17 + 2;
      if (v17 + 2 < v8)
      {
        unint64_t v115 = v13;
        uint64_t v24 = v114 + 8 * v17;
        while (1)
        {
          Swift::Int v25 = v18;
          swift_retain();
          swift_retain();
          uint64_t v26 = v124;
          sub_10049279C();
          uint64_t v27 = v125;
          sub_10049279C();
          int v28 = sub_100725BF0();
          uint64_t v29 = v27;
          uint64_t v30 = v126;
          uint64_t v31 = (void (*)(char *, uint64_t))v120;
          ((void (*)(char *, uint64_t))v120)(v29, v126);
          v31(v26, v30);
          swift_release();
          swift_release();
          if ((v127 ^ v28)) {
            break;
          }
          ++v18;
          v24 += 8;
          Swift::Int v8 = v119;
          if (v119 == v25 + 1)
          {
            Swift::Int v18 = v119;
            goto LABEL_22;
          }
        }
        Swift::Int v8 = v119;
LABEL_22:
        Swift::Int v17 = v118;
        uint64_t v13 = v115;
      }
      uint64_t v32 = v128;
      if (v127)
      {
        if (v18 < v17) {
          goto LABEL_134;
        }
        if (v17 < v18)
        {
          uint64_t v33 = (uint64_t *)(v113 + 8 * v18);
          Swift::Int v34 = v18;
          Swift::Int v35 = v17;
          Swift::Int v36 = (uint64_t *)(v128 + 8 * v17);
          do
          {
            if (v35 != --v34)
            {
              if (!v32) {
                goto LABEL_139;
              }
              uint64_t v37 = *v36;
              *Swift::Int v36 = *v33;
              *uint64_t v33 = v37;
            }
            ++v35;
            --v33;
            ++v36;
          }
          while (v35 < v34);
        }
      }
    }
    if (v18 >= v8) {
      goto LABEL_49;
    }
    if (__OFSUB__(v18, v17)) {
      goto LABEL_132;
    }
    if (v18 - v17 >= v116) {
      goto LABEL_49;
    }
    if (__OFADD__(v17, v116)) {
      goto LABEL_135;
    }
    Swift::Int v38 = v17 + v116 >= v8 ? v8 : v17 + v116;
    if (v38 < v17) {
      break;
    }
    if (v18 != v38)
    {
      unint64_t v115 = v13;
      int v39 = (char *)(v113 + 8 * v18);
      Swift::Int v117 = v38;
      do
      {
        Swift::Int v127 = v18;
        Swift::Int v40 = v17;
        uint64_t v120 = v39;
        Swift::Int v41 = (uint64_t *)v39;
        do
        {
          swift_retain();
          swift_retain();
          uint64_t v42 = v124;
          sub_10049279C();
          uint64_t v43 = v125;
          sub_10049279C();
          char v44 = sub_100725BF0();
          Swift::Int v45 = *v123;
          uint64_t v46 = v43;
          uint64_t v47 = v126;
          (*v123)(v46, v126);
          v45(v42, v47);
          swift_release();
          swift_release();
          if ((v44 & 1) == 0) {
            break;
          }
          if (!v128) {
            goto LABEL_137;
          }
          uint64_t v48 = *v41;
          *Swift::Int v41 = v41[1];
          v41[1] = v48;
          --v41;
          ++v40;
        }
        while (v127 != v40);
        Swift::Int v18 = v127 + 1;
        int v39 = v120 + 8;
        Swift::Int v17 = v118;
      }
      while (v127 + 1 != v117);
      Swift::Int v18 = v117;
      uint64_t v13 = v115;
    }
LABEL_49:
    if (v18 < v17) {
      goto LABEL_127;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_100524280(0, *((void *)v13 + 2) + 1, 1, v13);
    }
    unint64_t v50 = *((void *)v13 + 2);
    unint64_t v49 = *((void *)v13 + 3);
    unint64_t v16 = v50 + 1;
    uint64_t v51 = v128;
    if (v50 >= v49 >> 1)
    {
      uint64_t v101 = sub_100524280((char *)(v49 > 1), v50 + 1, 1, v13);
      uint64_t v51 = v128;
      uint64_t v13 = v101;
    }
    *((void *)v13 + 2) = v16;
    uint64_t v52 = v13 + 32;
    uint64_t v53 = &v13[16 * v50 + 32];
    *(void *)uint64_t v53 = v17;
    *((void *)v53 + 1) = v18;
    Swift::Int v127 = v18;
    if (v50)
    {
      while (1)
      {
        unint64_t v54 = v16 - 1;
        if (v16 >= 4)
        {
          uint64_t v59 = &v52[16 * v16];
          uint64_t v60 = *((void *)v59 - 8);
          uint64_t v61 = *((void *)v59 - 7);
          BOOL v65 = __OFSUB__(v61, v60);
          uint64_t v62 = v61 - v60;
          if (v65) {
            goto LABEL_116;
          }
          uint64_t v64 = *((void *)v59 - 6);
          uint64_t v63 = *((void *)v59 - 5);
          BOOL v65 = __OFSUB__(v63, v64);
          uint64_t v57 = v63 - v64;
          char v58 = v65;
          if (v65) {
            goto LABEL_117;
          }
          unint64_t v66 = v16 - 2;
          unint64_t v67 = &v52[16 * v16 - 32];
          uint64_t v69 = *(void *)v67;
          uint64_t v68 = *((void *)v67 + 1);
          BOOL v65 = __OFSUB__(v68, v69);
          uint64_t v70 = v68 - v69;
          if (v65) {
            goto LABEL_119;
          }
          BOOL v65 = __OFADD__(v57, v70);
          uint64_t v71 = v57 + v70;
          if (v65) {
            goto LABEL_122;
          }
          if (v71 >= v62)
          {
            uint64_t v89 = &v52[16 * v54];
            uint64_t v91 = *(void *)v89;
            uint64_t v90 = *((void *)v89 + 1);
            BOOL v65 = __OFSUB__(v90, v91);
            uint64_t v92 = v90 - v91;
            if (v65) {
              goto LABEL_126;
            }
            BOOL v82 = v57 < v92;
            goto LABEL_86;
          }
        }
        else
        {
          if (v16 != 3)
          {
            uint64_t v83 = *((void *)v13 + 4);
            uint64_t v84 = *((void *)v13 + 5);
            BOOL v65 = __OFSUB__(v84, v83);
            uint64_t v76 = v84 - v83;
            char v77 = v65;
            goto LABEL_80;
          }
          uint64_t v56 = *((void *)v13 + 4);
          uint64_t v55 = *((void *)v13 + 5);
          BOOL v65 = __OFSUB__(v55, v56);
          uint64_t v57 = v55 - v56;
          char v58 = v65;
        }
        if (v58) {
          goto LABEL_118;
        }
        unint64_t v66 = v16 - 2;
        uint64_t v72 = &v52[16 * v16 - 32];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v75 = __OFSUB__(v73, v74);
        uint64_t v76 = v73 - v74;
        char v77 = v75;
        if (v75) {
          goto LABEL_121;
        }
        BOOL v78 = &v52[16 * v54];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v65 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v65) {
          goto LABEL_124;
        }
        if (__OFADD__(v76, v81)) {
          goto LABEL_125;
        }
        if (v76 + v81 >= v57)
        {
          BOOL v82 = v57 < v81;
LABEL_86:
          if (v82) {
            unint64_t v54 = v66;
          }
          goto LABEL_88;
        }
LABEL_80:
        if (v77) {
          goto LABEL_120;
        }
        size_t v85 = &v52[16 * v54];
        uint64_t v87 = *(void *)v85;
        uint64_t v86 = *((void *)v85 + 1);
        BOOL v65 = __OFSUB__(v86, v87);
        uint64_t v88 = v86 - v87;
        if (v65) {
          goto LABEL_123;
        }
        if (v88 < v76) {
          goto LABEL_14;
        }
LABEL_88:
        unint64_t v93 = v54 - 1;
        if (v54 - 1 >= v16)
        {
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
          goto LABEL_136;
        }
        if (!v51) {
          goto LABEL_138;
        }
        uint64_t v94 = v13;
        BOOL v95 = &v52[16 * v93];
        uint64_t v96 = *(void *)v95;
        uint64_t v97 = &v52[16 * v54];
        uint64_t v98 = *((void *)v97 + 1);
        uint64_t v99 = v122;
        sub_100576EFC((char *)(v51 + 8 * *(void *)v95), (char *)(v51 + 8 * *(void *)v97), (char *)(v51 + 8 * v98), v121);
        uint64_t v122 = v99;
        if (v99) {
          goto LABEL_110;
        }
        if (v98 < v96) {
          goto LABEL_113;
        }
        if (v54 > *((void *)v94 + 2)) {
          goto LABEL_114;
        }
        *(void *)BOOL v95 = v96;
        *(void *)&v52[16 * v93 + 8] = v98;
        unint64_t v100 = *((void *)v94 + 2);
        if (v54 >= v100) {
          goto LABEL_115;
        }
        uint64_t v13 = v94;
        unint64_t v16 = v100 - 1;
        memmove(&v52[16 * v54], v97 + 16, 16 * (v100 - 1 - v54));
        *((void *)v94 + 2) = v100 - 1;
        uint64_t v51 = v128;
        if (v100 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v16 = 1;
LABEL_14:
    Swift::Int v8 = v119;
    Swift::Int v14 = v127;
    if (v127 >= v119)
    {
      a1 = v112;
      goto LABEL_99;
    }
  }
LABEL_136:
  __break(1u);
LABEL_137:
  __break(1u);
LABEL_138:
  __break(1u);
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  Swift::Int result = sub_100726B80();
  __break(1u);
  return result;
}

uint64_t sub_10057658C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v28 = a1;
  uint64_t v32 = sub_100431F80(&qword_100A48728);
  uint64_t v8 = __chkstk_darwin(v32, v7);
  uint64_t v33 = (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v29 = (uint64_t)&v26 - v12;
  uint64_t result = __chkstk_darwin(v11, v13);
  Swift::Int v17 = (char *)&v26 - v16;
  uint64_t v31 = a3;
  uint64_t v27 = a2;
  if (a3 != a2)
  {
    uint64_t v18 = *(void *)(v15 + 72);
    uint64_t v35 = v18 * (v31 - 1);
    uint64_t v30 = v18;
    uint64_t v34 = v18 * v31;
LABEL_5:
    uint64_t v19 = 0;
    uint64_t v20 = v28;
    while (1)
    {
      uint64_t v21 = *a4;
      sub_1004546B8(v34 + v19 + *a4, (uint64_t)v17, &qword_100A48728);
      uint64_t v22 = v29;
      sub_1004546B8(v35 + v19 + v21, v29, &qword_100A48728);
      LOBYTE(v21) = sub_100725BF0();
      sub_10044C150(v22, &qword_100A48728);
      uint64_t result = sub_10044C150((uint64_t)v17, &qword_100A48728);
      if ((v21 & 1) == 0)
      {
LABEL_4:
        v35 += v30;
        v34 += v30;
        if (++v31 == v27) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v23 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v24 = a4;
      uint64_t v25 = v23 + v35 + v19;
      sub_100462BE4(v23 + v34 + v19, v33, &qword_100A48728);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_100462BE4(v33, v25, &qword_100A48728);
      v19 -= v30;
      ++v20;
      a4 = v24;
      if (v31 == v20) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100576818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v28 = a1;
  uint64_t v33 = sub_100725CC0();
  uint64_t v8 = __chkstk_darwin(v33, v7);
  uint64_t v32 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v8, v10);
  uint64_t v31 = (char *)&v26 - v13;
  uint64_t v27 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *a4;
    uint64_t v30 = v12 + 8;
    uint64_t v34 = v14;
    uint64_t v15 = (void *)(v14 + 8 * a3 - 8);
    Swift::Int v17 = (void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v16 = v31;
LABEL_5:
    uint64_t v18 = v28;
    uint64_t v29 = v15;
    uint64_t v35 = a3;
    while (1)
    {
      swift_retain();
      swift_retain();
      sub_10049279C();
      uint64_t v19 = v32;
      sub_10049279C();
      char v20 = sub_100725BF0();
      uint64_t v21 = *v17;
      uint64_t v22 = v19;
      uint64_t v23 = v33;
      (*v17)(v22, v33);
      v21(v16, v23);
      swift_release();
      uint64_t v24 = v35;
      uint64_t result = swift_release();
      if ((v20 & 1) == 0)
      {
LABEL_4:
        a3 = v24 + 1;
        uint64_t v15 = v29 + 1;
        if (a3 == v27) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v34) {
        break;
      }
      uint64_t v25 = *v15;
      *uint64_t v15 = v15[1];
      v15[1] = v25;
      --v15;
      if (v24 == ++v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_100576A18(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v46 = sub_100431F80(&qword_100A48728);
  uint64_t v9 = __chkstk_darwin(v46, v8);
  uint64_t v45 = (uint64_t)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v11);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v15 = *(void *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_62;
  }
  int64_t v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_63;
  }
  uint64_t v17 = (uint64_t)(a2 - a1) / v15;
  unint64_t v49 = a1;
  unint64_t v48 = a4;
  uint64_t v18 = v16 / v15;
  if (v17 >= v16 / v15)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      uint64_t v20 = v18 * v15;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v27 = a4 + v20;
      unint64_t v47 = a4 + v20;
      unint64_t v49 = a2;
      if (v20 >= 1 && a1 < a2)
      {
        uint64_t v29 = -v15;
        unint64_t v43 = a4;
        unint64_t v44 = a1;
        do
        {
          unint64_t v30 = a3 + v29;
          sub_1004546B8(v27 + v29, (uint64_t)v13, &qword_100A48728);
          unint64_t v31 = a2 + v29;
          unint64_t v32 = a3;
          uint64_t v33 = (uint64_t)v13;
          uint64_t v34 = v45;
          sub_1004546B8(a2 + v29, v45, &qword_100A48728);
          char v35 = sub_100725BF0();
          uint64_t v36 = v34;
          uint64_t v13 = (char *)v33;
          sub_10044C150(v36, &qword_100A48728);
          sub_10044C150(v33, &qword_100A48728);
          if (v35)
          {
            if (v32 < a2 || v30 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v39 = v43;
              unint64_t v38 = v44;
            }
            else
            {
              BOOL v37 = v32 == a2;
              unint64_t v39 = v43;
              unint64_t v38 = v44;
              if (!v37) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v49 += v29;
          }
          else
          {
            unint64_t v40 = v47;
            v47 += v29;
            if (v32 < v40 || v30 >= v40)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v31 = a2;
              unint64_t v39 = v43;
              unint64_t v38 = v44;
            }
            else
            {
              BOOL v37 = v32 == v40;
              unint64_t v39 = v43;
              unint64_t v38 = v44;
              if (!v37) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v31 = a2;
            }
          }
          unint64_t v27 = v47;
          if (v47 <= v39) {
            break;
          }
          a2 = v31;
          a3 = v30;
        }
        while (v31 > v38);
      }
      goto LABEL_60;
    }
  }
  else if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v17 * v15;
    if (a4 < a1 || a1 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v44 = a4 + v19;
    unint64_t v47 = a4 + v19;
    if (v19 >= 1 && a2 < a3)
    {
      uint64_t v22 = v45;
      do
      {
        sub_1004546B8(a2, (uint64_t)v13, &qword_100A48728);
        sub_1004546B8(a4, v22, &qword_100A48728);
        char v23 = sub_100725BF0();
        sub_10044C150(v22, &qword_100A48728);
        sub_10044C150((uint64_t)v13, &qword_100A48728);
        unint64_t v24 = v49;
        if (v23)
        {
          unint64_t v25 = a2 + v15;
          if (v49 < a2 || v49 >= v25)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v49 == a2)
          {
            unint64_t v24 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v26 = v48 + v15;
          if (v49 < v48 || v49 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v49 != v48)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v48 = v26;
          unint64_t v25 = a2;
        }
        unint64_t v49 = v24 + v15;
        a4 = v48;
        if (v48 >= v44) {
          break;
        }
        a2 = v25;
      }
      while (v25 < a3);
    }
LABEL_60:
    sub_100577398(&v49, &v48, (uint64_t *)&v47);
    return 1;
  }
LABEL_64:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_100576EFC(char *a1, char *a2, char *a3, char *a4)
{
  uint64_t v50 = sub_100725CC0();
  uint64_t v8 = *(void *)(v50 - 8);
  uint64_t v10 = __chkstk_darwin(v50, v9);
  unint64_t v49 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v12);
  unint64_t v48 = (char *)&v40 - v13;
  uint64_t v14 = a2 - a1;
  uint64_t v15 = a2 - a1 + 7;
  if (a2 - a1 >= 0) {
    uint64_t v15 = a2 - a1;
  }
  uint64_t v16 = v15 >> 3;
  uint64_t v17 = a2;
  uint64_t v46 = a3;
  uint64_t v18 = a3 - a2;
  uint64_t v19 = v18 / 8;
  uint64_t v53 = a1;
  uint64_t v52 = a4;
  if (v15 >> 3 >= v18 / 8)
  {
    if (v18 < -7) {
      goto LABEL_43;
    }
    if (a4 != v17 || &v17[8 * v19] <= a4) {
      memmove(a4, v17, 8 * v19);
    }
    unint64_t v27 = &a4[8 * v19];
    uint64_t v51 = v27;
    uint64_t v53 = v17;
    if (v18 < 8 || a1 >= v17) {
      goto LABEL_42;
    }
    Swift::Int v41 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v42 = a1;
    uint64_t v28 = v46 - 8;
    uint64_t v29 = v17;
    unint64_t v43 = a4;
    while (1)
    {
      unint64_t v47 = (unint64_t)v17;
      uint64_t v45 = v27;
      uint64_t v46 = v28 + 8;
      unint64_t v31 = v27 - 8;
      unint64_t v44 = v29 - 8;
      swift_retain();
      swift_retain();
      unint64_t v32 = v48;
      sub_10049279C();
      uint64_t v33 = v49;
      sub_10049279C();
      char v34 = sub_100725BF0();
      char v35 = *v41;
      uint64_t v36 = v33;
      uint64_t v37 = v50;
      (*v41)(v36, v50);
      v35(v32, v37);
      swift_release();
      swift_release();
      if (v34) {
        break;
      }
      uint64_t v51 = v31;
      uint64_t v29 = (char *)v47;
      if (v46 < v45 || v28 >= v45)
      {
        *(void *)uint64_t v28 = *(void *)v31;
        unint64_t v27 = v31;
        goto LABEL_30;
      }
      unint64_t v30 = (unint64_t)v42;
      unint64_t v38 = (unint64_t)v43;
      if (v46 != v45) {
        *(void *)uint64_t v28 = *(void *)v31;
      }
      unint64_t v27 = v31;
      if ((unint64_t)v31 <= v38) {
        goto LABEL_42;
      }
LABEL_31:
      v28 -= 8;
      uint64_t v17 = v29;
      if ((unint64_t)v29 <= v30) {
        goto LABEL_42;
      }
    }
    unint64_t v27 = v45;
    uint64_t v29 = v44;
    if (v46 != (char *)v47 || (unint64_t)v28 >= v47) {
      *(void *)uint64_t v28 = *(void *)v44;
    }
    uint64_t v53 = v29;
LABEL_30:
    unint64_t v30 = (unint64_t)v42;
    if (v27 <= v43) {
      goto LABEL_42;
    }
    goto LABEL_31;
  }
  if (v14 >= -7)
  {
    if (a4 != a1 || &a1[8 * v16] <= a4) {
      memmove(a4, a1, 8 * v16);
    }
    uint64_t v45 = &a4[8 * v16];
    uint64_t v51 = v45;
    if (v14 >= 8 && v17 < v46)
    {
      unint64_t v44 = (char *)(v8 + 8);
      uint64_t v20 = v48;
      do
      {
        uint64_t v21 = a4;
        swift_retain();
        swift_retain();
        sub_10049279C();
        uint64_t v22 = v49;
        sub_10049279C();
        LODWORD(v47) = sub_100725BF0();
        char v23 = *(void (**)(char *, uint64_t))v44;
        unint64_t v24 = v22;
        uint64_t v25 = v50;
        (*(void (**)(char *, uint64_t))v44)(v24, v50);
        v23(v20, v25);
        swift_release();
        swift_release();
        if (v47)
        {
          unint64_t v26 = v17 + 8;
          if (a1 < v17 || a1 >= v26 || a1 != v17) {
            *(void *)a1 = *(void *)v17;
          }
        }
        else
        {
          if (a1 != a4) {
            *(void *)a1 = *(void *)a4;
          }
          a4 += 8;
          uint64_t v52 = v21 + 8;
          unint64_t v26 = v17;
        }
        a1 += 8;
        uint64_t v53 = a1;
        if (a4 >= v45) {
          break;
        }
        uint64_t v17 = v26;
      }
      while (v26 < v46);
    }
LABEL_42:
    sub_1005774DC((void **)&v53, (const void **)&v52, &v51);
    return 1;
  }
LABEL_43:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_100577398(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_100431F80(&qword_100A48728);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_100726BF0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_1005774DC(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_100726BF0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

Swift::Int sub_100577598(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100431F80(&qword_100A480D8);
    uint64_t v2 = sub_100726BD0();
    uint64_t v18 = v2;
    sub_100726AB0();
    uint64_t v3 = sub_100726B50();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_100462C50(0, &qword_100A48000);
      do
      {
        swift_dynamicCast();
        sub_100462C50(0, &qword_100A48008);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_100577DB8(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = sub_1007267E0(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_100726B50();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v2;
}

uint64_t sub_1005777EC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A485A8);
  char v36 = a2;
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    char v35 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v15 << 6);
      }
      else
      {
        if (__OFADD__(v15++, 1)) {
          goto LABEL_38;
        }
        if (v15 >= v12)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v35;
          if (v36)
          {
            uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
            if (v34 >= 64) {
              bzero((void *)(v5 + 64), ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            }
            else {
              *unint64_t v9 = -1 << v34;
            }
            *(void *)(v5 + 16) = 0;
          }
          break;
        }
        unint64_t v24 = v9[v15];
        if (!v24)
        {
          int64_t v25 = v15 + 1;
          if (v15 + 1 >= v12) {
            goto LABEL_31;
          }
          unint64_t v24 = v9[v25];
          if (!v24)
          {
            while (1)
            {
              int64_t v15 = v25 + 1;
              if (__OFADD__(v25, 1)) {
                break;
              }
              if (v15 >= v12) {
                goto LABEL_31;
              }
              unint64_t v24 = v9[v15];
              ++v25;
              if (v24) {
                goto LABEL_20;
              }
            }
LABEL_37:
            __break(1u);
LABEL_38:
            __break(1u);
            return result;
          }
          ++v15;
        }
LABEL_20:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v15 << 6);
      }
      uint64_t v26 = 8 * v22;
      unint64_t v27 = *(void **)(*(void *)(v5 + 48) + v26);
      uint64_t v28 = *(void *)(*(void *)(v5 + 56) + v26);
      if ((v36 & 1) == 0)
      {
        id v29 = v27;
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1007267E0(*(void *)(v7 + 40));
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_37;
          }
          BOOL v32 = v18 == v31;
          if (v18 == v31) {
            unint64_t v18 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v13 + 8 * v18);
        }
        while (v33 == -1);
        unint64_t v19 = __clz(__rbit64(~v33)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v20 = 8 * v19;
      *(void *)(*(void *)(v7 + 48) + v20) = v27;
      *(void *)(*(void *)(v7 + 56) + v20) = v28;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_100577AA0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80((uint64_t *)&unk_100A48580);
  char v36 = a2;
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    id v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_100726DD0();
    sub_100726490();
    uint64_t result = sub_100726E30();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_100577DB8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A480D8);
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_1007267E0(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

void *sub_10057808C()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A485A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    if (!v21) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_100578220()
{
  uint64_t v1 = v0;
  sub_100431F80((uint64_t *)&unk_100A48580);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1005783D8()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A480D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void **)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_100578580(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_100572CB0((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_1005783D8();
LABEL_7:
    unint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_100577DB8(v12, a3 & 1);
  unint64_t v17 = sub_100572CB0((uint64_t)a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    sub_100462C50(0, &qword_100A48000);
    sub_100726D40();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  unint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v15[2] = v22;

  id v23 = a2;
}

void (*sub_1005786F4(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *a1)
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_10057875C(v6, a2, a3);
  return sub_1004C9A88;
}

uint64_t (*sub_10057875C(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_100726A10();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return sub_1005787DC;
  }
  __break(1u);
  return result;
}

uint64_t sub_1005787DC()
{
  return swift_release();
}

uint64_t sub_1005787E4(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1004D10A4((unint64_t *)&unk_100A48610, &qword_100A48608);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100431F80(&qword_100A48608);
          uint64_t v12 = sub_1005786F4(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_100578A08(void *a1)
{
  return sub_1005728DC(0, a1[2], 0, a1);
}

uint64_t sub_100578A1C(uint64_t a1)
{
  return specialized _ContiguousArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t sub_100578A30(uint64_t result, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    void *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    long long v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  BOOL v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (uint64_t *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = *v20;
    unint64_t v22 = v20[1];
    *BOOL v11 = *v20;
    v11[1] = v22;
    if (v13 == v10)
    {
      sub_100441FD4(v21, v22);
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = sub_100441FD4(v21, v22);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_100578C30(void *result, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7 = a4;
  unint64_t v9 = a2;
  uint64_t v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1007268E0();
    sub_100462C50(0, a5);
    sub_100480C20(a7, a5);
    uint64_t result = (void *)sub_100726680();
    uint64_t v7 = v33;
    uint64_t v12 = v34;
    uint64_t v13 = v35;
    int64_t v14 = v36;
    unint64_t v15 = v37;
    if (v9) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v16 = 0;
    goto LABEL_38;
  }
  int64_t v14 = 0;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v12 = a4 + 56;
  uint64_t v13 = ~v24;
  uint64_t v25 = -v24;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v15 = v26 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v16 = 0;
LABEL_38:
    unint64_t v27 = v29;
LABEL_41:
    *unint64_t v27 = v7;
    v27[1] = v12;
    void v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (void *)v16;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v16 = 0;
  int64_t v30 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_100726950()) {
        goto LABEL_40;
      }
      sub_100462C50(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v19 = v32;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v32) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    int64_t v20 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v20 >= v30)
    {
      unint64_t v15 = 0;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v20);
    if (v21) {
      goto LABEL_23;
    }
    int64_t v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      unint64_t v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    unint64_t v21 = *(void *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30) {
        goto LABEL_44;
      }
      unint64_t v21 = *(void *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        int64_t v20 = v14 + 3;
        goto LABEL_23;
      }
      int64_t v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        unint64_t v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      unint64_t v21 = *(void *)(v12 + 8 * v22);
      if (!v21)
      {
        int64_t v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          unint64_t v15 = 0;
          int64_t v14 = v22;
          goto LABEL_40;
        }
        unint64_t v21 = *(void *)(v12 + 8 * v20);
        if (!v21)
        {
          int64_t v23 = v14 + 6;
          while (v30 != v23)
          {
            unint64_t v21 = *(void *)(v12 + 8 * v23++);
            if (v21)
            {
              int64_t v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v15 = 0;
          int64_t v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v20 = v22;
LABEL_23:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v20 << 6);
    int64_t v14 = v20;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v7 + 48) + 8 * v18);
    id v19 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      uint64_t v16 = a3;
LABEL_40:
      uint64_t v13 = v28;
      unint64_t v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_100578F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100431F80(&qword_100A48B58);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (void (*)(char *, char *, uint64_t))((char *)&v63 - v9);
  uint64_t v11 = sub_100725A70();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v14, v17);
  uint64_t v73 = (void (**)(char *, char *, uint64_t))((char *)&v63 - v19);
  uint64_t v21 = __chkstk_darwin(v18, v20);
  BOOL v78 = (char *)&v63 - v22;
  __chkstk_darwin(v21, v23);
  uint64_t v25 = (char *)&v63 - v24;
  if (a2)
  {
    uint64_t v74 = v10;
    id v67 = self;
    id v26 = [v67 defaultManager];
    sub_100725A30();
    sub_100725A50(v27);
    uint64_t v29 = v28;
    BOOL v75 = *(void (**)(char *, uint64_t))(v12 + 8);
    uint64_t v76 = v12 + 8;
    v75(v25, v11);
    v81[0] = 0;
    a2 = (uint64_t)[v26 contentsOfDirectoryAtURL:v29 includingPropertiesForKeys:0 options:0 error:v81];

    id v30 = v81[0];
    if (a2)
    {
      uint64_t v31 = sub_100726570();

      BOOL v82 = (char *)_swiftEmptyArrayStorage;
      uint64_t v32 = *(void *)(v31 + 16);
      unint64_t v66 = v16;
      uint64_t v72 = v32;
      if (v32)
      {
        unint64_t v33 = 0;
        uint64_t v69 = v12 + 48;
        uint64_t v34 = (void (**)(char *, uint64_t, uint64_t))(v12 + 32);
        uint64_t v70 = v12 + 56;
        uint64_t v71 = (char *)(v12 + 16);
        unint64_t v63 = (v12 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
        BOOL v65 = v7;
        uint64_t v64 = v12;
        uint64_t v35 = (uint64_t)v74;
        uint64_t v68 = v31;
        while (1)
        {
          if (v33 >= *(void *)(v31 + 16)) {
            __break(1u);
          }
          unint64_t v36 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
          uint64_t v37 = *(void *)(v12 + 72);
          (*(void (**)(uint64_t, unint64_t, uint64_t))(v12 + 16))(v35, v31 + v36 + v37 * v33, v11);
          char v77 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56);
          v77(v35, 0, 1, v11);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v35, 1, v11) == 1) {
            break;
          }
          unint64_t v38 = *v34;
          (*v34)(v78, v35, v11);
          v81[0] = (id)sub_100725A40();
          v81[1] = v39;
          if (qword_100A52CF0 != -1) {
            swift_once();
          }
          uint64_t v79 = qword_100A53648;
          uint64_t v80 = unk_100A53650;
          sub_1004D0EE0();
          char v40 = sub_100726860();
          swift_bridgeObjectRelease();
          if (v40)
          {
            v38((char *)v73, (uint64_t)v78, v11);
            Swift::Int v41 = v82;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_1005724D0(0, *((void *)v41 + 2) + 1, 1);
              Swift::Int v41 = v82;
            }
            unint64_t v43 = *((void *)v41 + 2);
            unint64_t v42 = *((void *)v41 + 3);
            if (v43 >= v42 >> 1)
            {
              sub_1005724D0(v42 > 1, v43 + 1, 1);
              Swift::Int v41 = v82;
            }
            *((void *)v41 + 2) = v43 + 1;
            v38(&v41[v36 + v43 * v37], (uint64_t)v73, v11);
            BOOL v82 = v41;
            uint64_t v7 = v65;
            uint64_t v12 = v64;
          }
          else
          {
            v75(v78, v11);
          }
          uint64_t v35 = (uint64_t)v74;
          uint64_t v31 = v68;
          if (v72 == ++v33)
          {
            uint64_t v45 = v77;
            goto LABEL_20;
          }
        }
      }
      else
      {
        uint64_t v45 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56);
        uint64_t v35 = (uint64_t)v74;
LABEL_20:
        char v77 = v45;
        v45(v35, 1, 1, v11);
      }
      swift_bridgeObjectRelease();
      sub_10044C150(v35, &qword_100A48B58);
      uint64_t v46 = *((void *)v82 + 2);
      if (v46)
      {
        unint64_t v48 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
        uint64_t v47 = v12 + 16;
        unint64_t v49 = &v82[(*(unsigned __int8 *)(v47 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 64)];
        uint64_t v50 = *(void *)(v47 + 56);
        uint64_t v71 = v82;
        uint64_t v72 = v50;
        BOOL v78 = (char *)(v47 + 40);
        uint64_t v51 = (unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 32);
        uint64_t v73 = (void (**)(char *, char *, uint64_t))(v47 + 16);
        uint64_t v74 = v48;
        while (1)
        {
          v74(v7, v49, v11);
          v77((uint64_t)v7, 0, 1, v11);
          if ((*v51)(v7, 1, v11) == 1)
          {
            swift_release();
            return 1;
          }
          uint64_t v52 = v47;
          uint64_t v53 = v66;
          unint64_t v54 = v7;
          (*v73)(v66, v7, v11);
          id v55 = [v67 defaultManager];
          sub_100725A50(v56);
          char v58 = v57;
          v81[0] = 0;
          unsigned int v59 = [v55 removeItemAtURL:v57 error:v81];

          if (!v59) {
            break;
          }
          id v60 = v81[0];
          v75(v53, v11);
          v49 += v72;
          --v46;
          uint64_t v47 = v52;
          uint64_t v7 = v54;
          if (!v46)
          {
            a2 = 1;
            v77((uint64_t)v54, 1, 1, v11);
            swift_release();
            return a2;
          }
        }
        id v61 = v81[0];
        swift_release();
        sub_100725A20();

        swift_willThrow();
        v75(v53, v11);
        swift_errorRelease();
      }
      else
      {
        swift_release();
      }
      return 0;
    }
    else
    {
      unint64_t v44 = v30;
      sub_100725A20();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  return a2;
}

uint64_t sub_10057967C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_1005796C4()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = (void (*)(id))v0[3];
  uint64_t v3 = (void (*)(void))v0[5];
  sub_10053BB94();
  if ((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x78))())
  {
    sub_100726160();
    swift_allocObject();
    swift_retain();
    sub_100726170();
    v3();
    sub_100726100();
    sub_100726120();
    v2(0);
    swift_release();
    swift_release();
  }
  else
  {
    sub_100517914();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1005178B0(6u);
    sub_100431F80(&qword_100A45660);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_100794E30;
    *(void *)(inited + 32) = sub_100726430();
    *(void *)(inited + 40) = v6;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD000000000000018;
    *(void *)(inited + 56) = 0x80000001008C6020;
    sub_10046ECE8(inited);
    id v7 = objc_allocWithZone((Class)NSError);
    NSString v8 = sub_100726420();
    swift_bridgeObjectRelease();
    Class isa = sub_100726380().super.isa;
    swift_bridgeObjectRelease();
    id v10 = [v7 initWithDomain:v8 code:v4 userInfo:isa];

    id v11 = v10;
    v2(v10);
  }
}

uint64_t sub_100579974(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100579984()
{
  return swift_release();
}

uint64_t sub_10057998C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1005799D4()
{
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void (**)(void))(v0 + 24);
  sub_10053BB94();
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0x78))();
  if (result)
  {
    sub_100726160();
    swift_allocObject();
    swift_retain();
    sub_100726170();
    v3();
    sub_100726120();
    if (v1) {
      swift_willThrow();
    }
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_100579AC0(uint64_t a1)
{
  return sub_100560C50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_100990FB8, (uint64_t)sub_1005836CC, (uint64_t)&unk_100990FD0);
}

uint64_t sub_100579B00(uint64_t a1)
{
  return sub_10053EE14(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_100579B1C(uint64_t a1)
{
  return sub_100560C50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_100990F68, (uint64_t)sub_100583344, (uint64_t)&unk_100990F80);
}

id sub_100579B5C(uint64_t a1)
{
  return sub_100560C50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_100990F18, (uint64_t)sub_100583344, (uint64_t)&unk_100990F30);
}

id sub_100579B9C(uint64_t a1)
{
  return sub_100560C50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_100990EC8, (uint64_t)sub_100583344, (uint64_t)&unk_100990EE0);
}

uint64_t sub_100579BDC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100579C1C(uint64_t a1)
{
  return sub_1005419DC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

id sub_100579C38(uint64_t a1)
{
  return sub_100560C50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_100990E78, (uint64_t)sub_100583344, (uint64_t)&unk_100990E90);
}

id sub_100579C78(uint64_t a1)
{
  return sub_100560C50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_100990E28, (uint64_t)sub_100583338, (uint64_t)&unk_100990E40);
}

id sub_100579CB8(uint64_t a1)
{
  return sub_100560C50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_100990DD8, (uint64_t)sub_10058332C, (uint64_t)&unk_100990DF0);
}

id sub_100579CF8(uint64_t a1)
{
  return sub_100560C50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_100990D88, (uint64_t)sub_100583154, (uint64_t)&unk_100990DA0);
}

void *sub_100579D38(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = a1;
  unint64_t v44 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_60;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      uint64_t v39 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v40 = v4 & 0xC000000000000001;
      uint64_t v37 = v5;
      uint64_t v38 = v4;
      while (v40)
      {
        sub_100726A10();
        unint64_t v7 = v6 + 1;
        if (__OFADD__(v6, 1))
        {
LABEL_51:
          __break(1u);
          return v44;
        }
LABEL_11:
        uint64_t v8 = sub_10049188C();
        unint64_t v10 = v9;
        uint64_t v4 = a2;
        uint64_t v11 = sub_10049188C();
        uint64_t v13 = v11;
        unint64_t v14 = v12;
        uint64_t v15 = 0;
        switch(v10 >> 62)
        {
          case 1uLL:
            LODWORD(v15) = HIDWORD(v8) - v8;
            if (__OFSUB__(HIDWORD(v8), v8)) {
              goto LABEL_54;
            }
            uint64_t v15 = (int)v15;
            break;
          case 2uLL:
            uint64_t v17 = *(void *)(v8 + 16);
            uint64_t v16 = *(void *)(v8 + 24);
            BOOL v18 = __OFSUB__(v16, v17);
            uint64_t v15 = v16 - v17;
            if (!v18) {
              break;
            }
            goto LABEL_55;
          case 3uLL:
            break;
          default:
            uint64_t v15 = BYTE6(v10);
            break;
        }
        switch(v12 >> 62)
        {
          case 1uLL:
            LODWORD(v19) = HIDWORD(v11) - v11;
            if (__OFSUB__(HIDWORD(v11), v11)) {
              goto LABEL_56;
            }
            uint64_t v19 = (int)v19;
LABEL_23:
            if (v15 != v19)
            {
LABEL_5:
              sub_100442248(v11, v12);
              sub_100442248(v8, v10);
LABEL_6:
              swift_release();
              goto LABEL_7;
            }
            if (v15 < 1)
            {
LABEL_27:
              sub_100442248(v11, v12);
              sub_100442248(v8, v10);
            }
            else
            {
              switch(v10 >> 62)
              {
                case 1uLL:
                  uint64_t v36 = v3;
                  uint64_t v3 = (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_58;
                  }
                  sub_100441FD4(v11, v12);
                  sub_100441FD4(v8, v10);
                  uint64_t v27 = sub_100725910();
                  if (v27)
                  {
                    uint64_t v32 = v27;
                    uint64_t v28 = sub_100725940();
                    if (__OFSUB__((int)v8, v28)) {
                      goto LABEL_63;
                    }
                    uint64_t v29 = v32 + (int)v8 - v28;
                  }
                  else
                  {
                    uint64_t v29 = 0;
                  }
                  sub_100725930();
                  sub_10045302C(v29, v13, v14, (char *)__s1);
                  if (v36)
                  {
                    sub_100442248(v8, v10);
                    goto LABEL_66;
                  }
                  uint64_t v3 = 0;
                  sub_100442248(v8, v10);
                  break;
                case 2uLL:
                  uint64_t v4 = v10 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v33 = *(void *)(v8 + 16);
                  uint64_t v35 = v3;
                  uint64_t v31 = *(void *)(v8 + 24);
                  sub_100441FD4(v11, v12);
                  swift_retain();
                  swift_retain();
                  uint64_t v22 = sub_100725910();
                  if (v22)
                  {
                    uint64_t v23 = v22;
                    uint64_t v24 = sub_100725940();
                    uint64_t v25 = v33;
                    if (__OFSUB__(v33, v24))
                    {
                      __break(1u);
LABEL_63:
                      __break(1u);
                    }
                    uint64_t v26 = v23 + v33 - v24;
                  }
                  else
                  {
                    uint64_t v26 = 0;
                    uint64_t v25 = v33;
                  }
                  uint64_t v3 = v31 - v25;
                  if (__OFSUB__(v31, v25)) {
                    goto LABEL_59;
                  }
                  uint64_t v34 = v26;
                  sub_100725930();
                  sub_10045302C(v34, v13, v14, (char *)__s1);
                  if (v35)
                  {
                    swift_release();
                    swift_release();
LABEL_66:
                    sub_100442248(v13, v14);
                    __break(1u);
                    JUMPOUT(0x10057A2ACLL);
                  }
                  uint64_t v3 = 0;
                  swift_release();
                  swift_release();
                  break;
                case 3uLL:
                  memset(__s1, 0, 14);
                  sub_100441FD4(v11, v12);
                  goto LABEL_33;
                default:
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v10;
                  BYTE2(__s1[1]) = BYTE2(v10);
                  BYTE3(__s1[1]) = BYTE3(v10);
                  BYTE4(__s1[1]) = BYTE4(v10);
                  BYTE5(__s1[1]) = BYTE5(v10);
                  sub_100441FD4(v11, v12);
LABEL_33:
                  sub_10045302C((uint64_t)__s1, v13, v14, &v42);
                  if (v3) {
                    goto LABEL_66;
                  }
                  uint64_t v3 = 0;
                  sub_100442248(v13, v14);
                  sub_100442248(v13, v14);
                  sub_100442248(v8, v10);
                  if (v42) {
                    goto LABEL_28;
                  }
                  goto LABEL_6;
              }
              sub_100442248(v13, v14);
              sub_100442248(v13, v14);
              sub_100442248(v8, v10);
              if ((__s1[0] & 1) == 0) {
                goto LABEL_6;
              }
            }
LABEL_28:
            sub_100726A40();
            sub_100726A70();
            sub_100726A80();
            sub_100726A50();
LABEL_7:
            uint64_t v4 = v38;
            ++v6;
            if (v7 == v37) {
              return v44;
            }
            break;
          case 2uLL:
            uint64_t v21 = *(void *)(v11 + 16);
            uint64_t v20 = *(void *)(v11 + 24);
            BOOL v18 = __OFSUB__(v20, v21);
            uint64_t v19 = v20 - v21;
            if (!v18) {
              goto LABEL_23;
            }
            goto LABEL_57;
          case 3uLL:
            if (v15) {
              goto LABEL_5;
            }
            goto LABEL_27;
          default:
            uint64_t v19 = BYTE6(v12);
            goto LABEL_23;
        }
      }
      if (v6 < *(void *)(v39 + 16)) {
        break;
      }
      __break(1u);
LABEL_54:
      __break(1u);
LABEL_55:
      __break(1u);
LABEL_56:
      __break(1u);
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      uint64_t v5 = sub_100726BA0();
      if (!v5) {
        return _swiftEmptyArrayStorage;
      }
    }
    swift_retain();
    unint64_t v7 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_51;
    }
    goto LABEL_11;
  }
  return _swiftEmptyArrayStorage;
}

void *sub_10057A2DC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v7 = a1;
  unsigned int v59 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_90;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v8) {
    return _swiftEmptyArrayStorage;
  }
  while (1)
  {
    unint64_t v50 = a3;
    unint64_t v51 = v4;
    unint64_t v9 = 0;
    uint64_t v55 = v7 & 0xFFFFFFFFFFFFFF8;
    unint64_t v56 = v7 & 0xC000000000000001;
    BOOL v10 = __OFSUB__(HIDWORD(a2), a2);
    BOOL v49 = v10;
    uint64_t v47 = a2;
    uint64_t v48 = HIDWORD(a2) - (int)a2;
    unint64_t v53 = a3 >> 62;
    uint64_t v54 = BYTE6(a3);
    uint64_t v52 = v8;
LABEL_11:
    if (v56) {
      break;
    }
    if (v9 < *(void *)(v55 + 16))
    {
      swift_retain();
      unint64_t v11 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_75;
      }
      goto LABEL_14;
    }
    __break(1u);
LABEL_78:
    __break(1u);
LABEL_79:
    __break(1u);
LABEL_80:
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    __break(1u);
LABEL_88:
    __break(1u);
LABEL_89:
    __break(1u);
LABEL_90:
    uint64_t v8 = sub_100726BA0();
    if (!v8) {
      return _swiftEmptyArrayStorage;
    }
  }
  sub_100726A10();
  unint64_t v11 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
LABEL_14:
    uint64_t v12 = sub_10049188C();
    unint64_t v14 = v13 >> 62;
    uint64_t v15 = v12;
    a3 = v13;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    switch(v13 >> 62)
    {
      case 1uLL:
        uint64_t v17 = (int)v12;
        uint64_t v16 = v12 >> 32;
        if (v12 >> 32 < (int)v12) {
          goto LABEL_78;
        }
        goto LABEL_20;
      case 2uLL:
        uint64_t v17 = *(void *)(v12 + 16);
        uint64_t v16 = *(void *)(v12 + 24);
        if (v16 < v17) {
          goto LABEL_78;
        }
        uint64_t v18 = *(void *)(v12 + 24);
        uint64_t v19 = *(void *)(v12 + 16);
        if (v14 != 2)
        {
LABEL_20:
          uint64_t v19 = (int)v12;
          uint64_t v18 = v12 >> 32;
        }
LABEL_21:
        if (v18 < v16 || v16 < v19) {
          goto LABEL_79;
        }
        if (__OFSUB__(v16, v17)) {
          goto LABEL_80;
        }
        if (v16 == v17)
        {
          switch((int)v14)
          {
            case 1:
              uint64_t v20 = v12 >> 32;
              goto LABEL_36;
            case 2:
              uint64_t v20 = *(void *)(v12 + 24);
              goto LABEL_37;
            default:
              goto LABEL_39;
          }
        }
        uint64_t v20 = v17 + 1;
        if (__OFADD__(v17, 1)) {
          goto LABEL_82;
        }
        uint64_t v21 = 0;
        uint64_t v22 = 0;
        switch((int)v14)
        {
          case 1:
            uint64_t v22 = (int)v12;
            uint64_t v21 = v12 >> 32;
            break;
          case 2:
            uint64_t v22 = *(void *)(v12 + 16);
            uint64_t v21 = *(void *)(v12 + 24);
            break;
          case 3:
            break;
          default:
            uint64_t v22 = 0;
            uint64_t v21 = BYTE6(a3);
            break;
        }
        if (v21 < v20 || v20 < v22) {
          goto LABEL_83;
        }
        uint64_t v23 = 0;
        switch((int)v14)
        {
          case 1:
LABEL_36:
            uint64_t v23 = (int)v15;
            break;
          case 2:
LABEL_37:
            uint64_t v23 = *(void *)(v15 + 16);
            break;
          default:
            break;
        }
        if (v20 < v23) {
          goto LABEL_81;
        }
LABEL_39:
        uint64_t v24 = v7;
        uint64_t v7 = sub_100725B00();
        unint64_t v4 = v25;
        sub_100442248(v15, a3);
        uint64_t v26 = 0;
        switch(v4 >> 62)
        {
          case 1uLL:
            LODWORD(v26) = HIDWORD(v7) - v7;
            if (__OFSUB__(HIDWORD(v7), v7)) {
              goto LABEL_84;
            }
            uint64_t v26 = (int)v26;
            break;
          case 2uLL:
            uint64_t v28 = *(void *)(v7 + 16);
            uint64_t v27 = *(void *)(v7 + 24);
            BOOL v29 = __OFSUB__(v27, v28);
            uint64_t v26 = v27 - v28;
            if (!v29) {
              goto LABEL_44;
            }
            goto LABEL_85;
          case 3uLL:
            goto LABEL_44;
          default:
            uint64_t v26 = BYTE6(v4);
            goto LABEL_44;
        }
        break;
      case 3uLL:
        goto LABEL_21;
      default:
        uint64_t v17 = 0;
        uint64_t v19 = 0;
        uint64_t v16 = BYTE6(v13);
        uint64_t v18 = BYTE6(v13);
        goto LABEL_21;
    }
LABEL_44:
    uint64_t v30 = v54;
    switch(v53)
    {
      case 1uLL:
        uint64_t v30 = v48;
        if (v49) {
          goto LABEL_87;
        }
        goto LABEL_48;
      case 2uLL:
        uint64_t v32 = *(void *)(a2 + 16);
        uint64_t v31 = *(void *)(a2 + 24);
        BOOL v29 = __OFSUB__(v31, v32);
        uint64_t v30 = v31 - v32;
        if (v29) {
          goto LABEL_86;
        }
        goto LABEL_48;
      case 3uLL:
        if (v26) {
          goto LABEL_8;
        }
        goto LABEL_53;
      default:
LABEL_48:
        if (v26 != v30)
        {
LABEL_8:
          sub_100442248(v7, v4);
LABEL_9:
          swift_release();
          goto LABEL_10;
        }
        if (v26 < 1)
        {
LABEL_53:
          sub_100442248(v7, v4);
        }
        else
        {
          switch(v4 >> 62)
          {
            case 1uLL:
              a2 = (int)v7;
              if (v7 >> 32 < (int)v7) {
                goto LABEL_88;
              }
              sub_100441FD4(v47, v50);
              sub_100441FD4(v7, v4);
              uint64_t v43 = sub_100725910();
              if (!v43) {
                goto LABEL_69;
              }
              uint64_t v44 = sub_100725940();
              if (__OFSUB__((int)v7, v44)) {
                goto LABEL_93;
              }
              v43 += (int)v7 - v44;
LABEL_69:
              a2 = v47;
              sub_100725930();
              a3 = v50;
              sub_10045302C(v43, v47, v50, (char *)__s1);
              if (v51) {
                goto LABEL_96;
              }
              sub_100442248(v7, v4);
              uint64_t v41 = v47;
              unint64_t v42 = v50;
              break;
            case 2uLL:
              a3 = v4 & 0x3FFFFFFFFFFFFFFFLL;
              uint64_t v36 = a2;
              uint64_t v37 = *(void *)(v7 + 16);
              uint64_t v46 = *(void *)(v7 + 24);
              sub_100441FD4(v36, v50);
              swift_retain();
              swift_retain();
              uint64_t v38 = sub_100725910();
              if (!v38) {
                goto LABEL_58;
              }
              uint64_t v39 = sub_100725940();
              if (__OFSUB__(v37, v39))
              {
                __break(1u);
LABEL_93:
                __break(1u);
              }
              v38 += v37 - v39;
LABEL_58:
              BOOL v29 = __OFSUB__(v46, v37);
              a2 = v46 - v37;
              if (v29) {
                goto LABEL_89;
              }
              sub_100725930();
              uint64_t v40 = v38;
              a2 = v47;
              unint64_t v33 = v50;
              sub_10045302C(v40, v47, v50, (char *)__s1);
              if (v51)
              {
                swift_release();
                swift_release();
LABEL_95:
                sub_100442248(a2, v33);
                __break(1u);
LABEL_96:
                sub_100442248(v7, v4);
LABEL_97:
                sub_100442248(a2, a3);
                __break(1u);
                JUMPOUT(0x10057AA0CLL);
              }
              swift_release();
              swift_release();
              uint64_t v41 = v47;
              unint64_t v42 = v50;
              break;
            case 3uLL:
              memset(__s1, 0, 14);
              a3 = v50;
              sub_100441FD4(a2, v50);
              sub_10045302C((uint64_t)__s1, a2, v50, &v57);
              if (v51) {
                goto LABEL_97;
              }
              uint64_t v34 = a2;
              unint64_t v35 = v50;
              goto LABEL_63;
            default:
              __s1[0] = v7;
              LOWORD(__s1[1]) = v4;
              BYTE2(__s1[1]) = BYTE2(v4);
              BYTE3(__s1[1]) = BYTE3(v4);
              BYTE4(__s1[1]) = BYTE4(v4);
              BYTE5(__s1[1]) = BYTE5(v4);
              a3 = (unint64_t)__s1 + BYTE6(v4);
              unint64_t v33 = v50;
              sub_100441FD4(a2, v50);
              sub_10045302C((uint64_t)__s1, a2, v50, &v57);
              if (v51) {
                goto LABEL_95;
              }
              uint64_t v34 = a2;
              unint64_t v35 = v50;
LABEL_63:
              sub_100442248(v34, v35);
              sub_100442248(v7, v4);
              if (v57) {
                goto LABEL_54;
              }
              goto LABEL_9;
          }
          sub_100442248(v41, v42);
          sub_100442248(v7, v4);
          if ((__s1[0] & 1) == 0) {
            goto LABEL_9;
          }
        }
LABEL_54:
        a3 = (unint64_t)&v59;
        sub_100726A40();
        unint64_t v4 = v59[2];
        sub_100726A70();
        sub_100726A80();
        sub_100726A50();
LABEL_10:
        uint64_t v7 = v24;
        ++v9;
        if (v11 != v52) {
          goto LABEL_11;
        }
        return v59;
    }
  }
LABEL_75:
  __break(1u);
  return v59;
}

uint64_t sub_10057AA7C(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_54;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v4)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v35 = v4;
    unint64_t v36 = v3 & 0xC000000000000001;
    uint64_t v5 = 4;
    unint64_t v32 = v3;
LABEL_7:
    uint64_t v6 = v5 - 4;
    if (v36) {
      break;
    }
    uint64_t v7 = swift_retain();
    uint64_t v8 = v5 - 3;
    if (!__OFADD__(v6, 1)) {
      goto LABEL_12;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_100726BA0();
    if (!v4) {
      goto LABEL_55;
    }
  }
  uint64_t v7 = sub_100726A10();
  uint64_t v8 = v5 - 3;
  if (__OFADD__(v6, 1)) {
    goto LABEL_49;
  }
LABEL_12:
  uint64_t v37 = v7;
  uint64_t v9 = sub_10048DBA0();
  unint64_t v11 = v10;
  uint64_t v12 = sub_10048A368();
  uint64_t v14 = v12;
  unint64_t v15 = v13;
  uint64_t v16 = 0;
  switch(v11 >> 62)
  {
    case 1uLL:
      LODWORD(v16) = HIDWORD(v9) - v9;
      if (__OFSUB__(HIDWORD(v9), v9)) {
        goto LABEL_51;
      }
      uint64_t v16 = (int)v16;
      break;
    case 2uLL:
      uint64_t v18 = *(void *)(v9 + 16);
      uint64_t v17 = *(void *)(v9 + 24);
      BOOL v19 = __OFSUB__(v17, v18);
      uint64_t v16 = v17 - v18;
      if (!v19) {
        break;
      }
      goto LABEL_50;
    case 3uLL:
      break;
    default:
      uint64_t v16 = BYTE6(v11);
      break;
  }
  switch(v13 >> 62)
  {
    case 1uLL:
      LODWORD(v20) = HIDWORD(v12) - v12;
      if (__OFSUB__(HIDWORD(v12), v12)) {
        goto LABEL_53;
      }
      uint64_t v20 = (int)v20;
LABEL_24:
      if (v16 != v20)
      {
LABEL_5:
        sub_100442248(v12, v13);
        sub_100442248(v9, v11);
        goto LABEL_6;
      }
      if (v16 >= 1)
      {
        switch(v11 >> 62)
        {
          case 1uLL:
            if (v9 >> 32 < (int)v9)
            {
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
            }
            sub_100441FD4(v12, v13);
            sub_100441FD4(v9, v11);
            uint64_t v26 = sub_100725910();
            if (v26)
            {
              uint64_t v34 = v2;
              uint64_t v27 = v26;
              uint64_t v28 = sub_100725940();
              if (__OFSUB__((int)v9, v28)) {
                goto LABEL_59;
              }
              uint64_t v29 = v27 + (int)v9 - v28;
              uint64_t v2 = v34;
            }
            else
            {
              uint64_t v29 = 0;
            }
            sub_100725930();
            sub_10045302C(v29, v14, v15, (char *)__s1);
            if (v2)
            {
              sub_100442248(v9, v11);
              goto LABEL_62;
            }
            uint64_t v2 = 0;
            sub_100442248(v9, v11);
            break;
          case 2uLL:
            uint64_t v33 = v2;
            uint64_t v23 = *(void *)(v9 + 16);
            uint64_t v31 = *(void *)(v9 + 24);
            sub_100441FD4(v12, v13);
            swift_retain();
            swift_retain();
            uint64_t v24 = sub_100725910();
            if (!v24) {
              goto LABEL_31;
            }
            uint64_t v25 = sub_100725940();
            if (__OFSUB__(v23, v25)) {
              goto LABEL_58;
            }
            v24 += v23 - v25;
LABEL_31:
            if (__OFSUB__(v31, v23)) {
              goto LABEL_57;
            }
            sub_100725930();
            sub_10045302C(v24, v14, v15, (char *)__s1);
            if (v33)
            {
              swift_release();
              swift_release();
LABEL_62:
              sub_100442248(v14, v15);
              __break(1u);
              JUMPOUT(0x10057AFA8);
            }
            uint64_t v2 = 0;
            swift_release();
            swift_release();
            break;
          case 3uLL:
            memset(__s1, 0, 14);
            sub_100441FD4(v12, v13);
            goto LABEL_35;
          default:
            __s1[0] = v9;
            LOWORD(__s1[1]) = v11;
            BYTE2(__s1[1]) = BYTE2(v11);
            BYTE3(__s1[1]) = BYTE3(v11);
            BYTE4(__s1[1]) = BYTE4(v11);
            BYTE5(__s1[1]) = BYTE5(v11);
            sub_100441FD4(v12, v13);
LABEL_35:
            sub_10045302C((uint64_t)__s1, v14, v15, &v38);
            if (v2) {
              goto LABEL_62;
            }
            uint64_t v2 = 0;
            sub_100442248(v14, v15);
            sub_100442248(v14, v15);
            sub_100442248(v9, v11);
            if (v38) {
              goto LABEL_48;
            }
            goto LABEL_6;
        }
        sub_100442248(v14, v15);
        sub_100442248(v14, v15);
        sub_100442248(v9, v11);
        unint64_t v3 = v32;
        if (__s1[0]) {
          goto LABEL_48;
        }
LABEL_6:
        swift_release();
        ++v5;
        if (v8 == v35) {
          goto LABEL_55;
        }
        goto LABEL_7;
      }
LABEL_47:
      sub_100442248(v12, v13);
      sub_100442248(v9, v11);
LABEL_48:
      swift_bridgeObjectRelease();
      return v37;
    case 2uLL:
      uint64_t v22 = *(void *)(v12 + 16);
      uint64_t v21 = *(void *)(v12 + 24);
      BOOL v19 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v19) {
        goto LABEL_24;
      }
      goto LABEL_52;
    case 3uLL:
      if (v16) {
        goto LABEL_5;
      }
      goto LABEL_47;
    default:
      uint64_t v20 = BYTE6(v13);
      goto LABEL_24;
  }
}

id sub_10057AFD8(uint64_t a1, uint64_t a2, __int16 a3, char a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, double a9, __int16 a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19, unint64_t a20,uint64_t a21,unint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,unint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  if (a6 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = sub_100725B20().super.isa;
    sub_10044CE88(a5, a6);
  }
  if (a8 >> 60 == 15)
  {
    Class v48 = 0;
  }
  else
  {
    Class v48 = sub_100725B20().super.isa;
    sub_10044CE88(a7, a8);
  }
  v34.super.Class isa = sub_100725B20().super.isa;
  v35.super.Class isa = sub_100725BE0().super.isa;
  v36.super.Class isa = sub_100725BE0().super.isa;
  if (a17)
  {
    NSString v37 = sub_100726420();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v37 = 0;
  }
  if (a20 >> 60 == 15)
  {
    Class v47 = 0;
  }
  else
  {
    Class v47 = sub_100725B20().super.isa;
    sub_10044CE88(a19, a20);
  }
  if (a22 >> 60 == 15)
  {
    Class v46 = 0;
  }
  else
  {
    Class v46 = sub_100725B20().super.isa;
    sub_10044CE88(a21, a22);
  }
  if (a24 >> 60 == 15)
  {
    Class v45 = 0;
  }
  else
  {
    Class v45 = sub_100725B20().super.isa;
    sub_10044CE88(a23, a24);
  }
  uint64_t v38 = a11;
  if (a26 >> 60 == 15)
  {
    Class v39 = 0;
  }
  else
  {
    Class v39 = sub_100725B20().super.isa;
    sub_10044CE88(a25, a26);
    uint64_t v38 = a11;
  }
  LOBYTE(v44) = a18 & 1;
  LOWORD(v43) = a10 & 0x101;
  id v55 = objc_msgSend(v54, "initWithURI:capabilities:ngmVersion:legacyVersion:KTLoggableData:KTDeviceSignature:mismatchedAccountFlag:ktCapableFlag:pushTokenObject:sessionToken:expireDate:refreshDate:anonymizedSenderID:verifiedBusiness:serializedPublicMessageProtectionIdentity:queryTimeInterval:serializedNGMDeviceIdentity:serializedNGMDevicePrekey:serializedApplicationPublicKey:endpointURIProperties:familyEndpointData:gameCenterData:", a1, a2, a3, a4, isa, v48, a9, v43, v38, v34.super.isa, v35.super.isa, v36.super.isa, v37, v44,
          v47,
          v46,
          v45,
          v39,
          a27,
          a28,
          a29);

  uint64_t v40 = sub_100725CC0();
  uint64_t v41 = *(void (**)(uint64_t, uint64_t))(*(void *)(v40 - 8) + 8);
  v41(a15, v40);
  v41(a14, v40);
  return v55;
}

id sub_10057B30C(uint64_t a1, uint64_t a2, void *a3)
{
  id v89 = a3;
  uint64_t v3 = sub_100725CC0();
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  unint64_t v10 = (char *)&v66 - v9;
  sub_1004885A0();
  sub_1004882A4();
  id v11 = objc_allocWithZone((Class)IDSURI);
  NSString v12 = sub_100726420();
  swift_bridgeObjectRelease();
  NSString v13 = sub_100726420();
  swift_bridgeObjectRelease();
  id v14 = [v11 initWithPrefixedURI:v12 withServiceLoggingHint:v13];

  if (!v14) {
    return 0;
  }
  uint64_t v15 = sub_10048A368();
  unint64_t v17 = v16;
  id v18 = objc_allocWithZone((Class)IDSPushToken);
  Class isa = sub_100725B20().super.isa;
  id v20 = [v18 initWithData:isa];
  sub_100442248(v15, v17);

  if (!v20)
  {

    return 0;
  }
  id v88 = v20;
  type metadata accessor for ArchiveHelper();
  uint64_t v21 = sub_100462C50(0, &qword_100A480C0);
  uint64_t v22 = sub_10048A670();
  unint64_t v24 = v23;
  uint64_t v25 = sub_10044CCC4(v21, v22, v23);
  sub_100442248(v22, v24);
  if (!v25)
  {

    return 0;
  }
  uint64_t v87 = (void *)v25;
  uint64_t v26 = sub_100462C50(0, &qword_100A480C8);
  uint64_t v27 = sub_10048B8D8();
  unint64_t v29 = v28;
  uint64_t v86 = (void *)sub_10044CCC4(v26, v27, v28);
  sub_10044CE88(v27, v29);
  uint64_t v30 = sub_100462C50(0, &qword_100A480D0);
  uint64_t v31 = sub_10048B564();
  unint64_t v33 = v32;
  uint64_t v84 = (void *)sub_10044CCC4(v30, v31, v32);
  sub_10044CE88(v31, v33);
  sub_10048B9E0((uint64_t)&v90);
  id v34 = [objc_allocWithZone((Class)IDSEndpointURIProperties) init];
  sub_10048889C();
  if (v35)
  {
    NSString v36 = sub_100726420();
    swift_bridgeObjectRelease();
    [v34 setSenderCorrelationIdentifier:v36];
  }
  id v85 = v14;
  sub_100488BE8();
  if (v37)
  {
    NSString v38 = sub_100726420();
    swift_bridgeObjectRelease();
    [v34 setShortHandle:v38];
  }
  uint64_t v81 = v90;
  unint64_t v80 = v91;
  uint64_t v39 = v92;
  unint64_t v40 = v93;
  uint64_t v79 = v92;
  unint64_t v78 = v93;
  int v83 = v95;
  int v82 = v94;
  sub_100482480(v90, v91);
  sub_100482480(v39, v40);
  int v77 = sub_10048A978();
  int v76 = sub_10048AC58();
  uint64_t v75 = sub_10048DEA8();
  uint64_t v74 = v41;
  sub_10048E1B0();
  sub_10048E5A8();
  uint64_t v73 = sub_10048AF38();
  uint64_t v72 = v42;
  int v71 = sub_10048B284();
  unint64_t v43 = v97;
  uint64_t v69 = v96;
  sub_100482480(v96, v97);
  double v44 = sub_10048E9A0();
  uint64_t v45 = v98;
  unint64_t v46 = v99;
  uint64_t v48 = v100;
  unint64_t v47 = v101;
  id v67 = v34;
  uint64_t v70 = v10;
  uint64_t v68 = v7;
  uint64_t v49 = v102;
  unint64_t v50 = v103;
  id v89 = objc_allocWithZone((Class)IDSEndpoint);
  sub_100482480(v45, v46);
  sub_100482480(v48, v47);
  sub_100482480(v49, v50);
  unint64_t v51 = v84;
  uint64_t v52 = v86;
  uint64_t v65 = (uint64_t)v34;
  unint64_t v64 = v50;
  uint64_t v62 = v48;
  unint64_t v63 = v47;
  unint64_t v61 = v43;
  unint64_t v53 = v74;
  uint64_t v54 = v75;
  id v55 = v88;
  HIBYTE(v60) = v76 & 1;
  LOBYTE(v60) = v77 & 1;
  unint64_t v56 = v85;
  char v57 = v87;
  id v58 = sub_10057AFD8((uint64_t)v85, (uint64_t)v87, v82, v83, v81, v80, v79, v78, v44, v60, (uint64_t)v88, v75, v74, (uint64_t)v70, (uint64_t)v68, v73, v72, v71 & 1, v69,
          v61,
          v45,
          v46,
          v62,
          v63,
          v49,
          v64,
          v65,
          (uint64_t)v86,
          (uint64_t)v84);

  sub_100442248(v54, v53);
  sub_10057FED0(&v90);
  return v58;
}

void *sub_10057B8E4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  if (a1 >> 62)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_100726BA0();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      do
      {
        uint64_t v6 = v5 - 4;
        if ((a1 & 0xC000000000000001) != 0)
        {
          uint64_t v7 = sub_100726A10();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1)) {
            goto LABEL_17;
          }
        }
        else
        {
          uint64_t v7 = *(void *)(a1 + 8 * v5);
          swift_retain();
          uint64_t v8 = v5 - 3;
          if (__OFADD__(v6, 1))
          {
LABEL_17:
            __break(1u);
            goto LABEL_18;
          }
        }
        swift_retain();
        uint64_t v9 = (void *)sub_10057AA7C(a2);
        swift_release();
        if (v9)
        {
          id v10 = sub_10057B30C(a3, v7, v9);
          swift_release();
          swift_release();
          if (v10)
          {
            sub_100726550();
            if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_1007265A0();
            }
            sub_1007265C0();
            sub_100726590();
          }
        }
        else
        {
          swift_release();
        }
        ++v5;
      }
      while (v8 != v4);
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_10057BAA8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, __int16 a6, char a7, uint64_t a8, unint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, long long a14, __n128 a15, uint64_t a16, unint64_t a17, char a18, char a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24)
{
  type metadata accessor for ArchiveHelper();
  sub_100462C50(0, &qword_100A480C0);
  char v25 = sub_10044CAE8();
  uint64_t v26 = sub_10044CAF0(a5, v25 & 1);
  if (v27 >> 60 == 15) {
    uint64_t v28 = 0;
  }
  else {
    uint64_t v28 = v26;
  }
  unint64_t v29 = 0xC000000000000000;
  if (v27 >> 60 != 15) {
    unint64_t v29 = v27;
  }
  unint64_t v43 = v29;
  uint64_t v44 = v28;
  sub_100462C50(0, &qword_100A480D0);
  char v30 = sub_10044CAE8();
  uint64_t v42 = sub_10044CAF0(a23, v30 & 1);
  uint64_t v41 = v31;
  sub_100462C50(0, &qword_100A480C8);
  char v32 = sub_10044CAE8();
  uint64_t v33 = sub_10044CAF0(a24, v32 & 1);
  uint64_t v39 = v34;
  uint64_t v40 = v33;
  sub_100482480(a8, a9);
  sub_100482480(a10, a11);
  sub_100482480(a12, a13);
  sub_100482480(a14, *((unint64_t *)&a14 + 1));
  sub_100482480(a15.n128_i64[0], a15.n128_u64[1]);
  sub_100482480(a16, a17);
  sub_10048CE60(a8, a9, a10, a11, a6, a7, a12, a13, (uint64_t)v52, a14, a15, a16, a17);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
  swift_bridgeObjectRetain();
  sub_100441FD4(a3, a4);
  *((void *)&v38 + 1) = v39;
  *((void *)&v37 + 1) = v41;
  *(void *)&long long v38 = v40;
  *(void *)&long long v37 = v42;
  *(void *)&long long v36 = a20;
  *((void *)&v36 + 1) = swift_bridgeObjectRetain();
  return sub_10048C208(a1, a2, a3, a4, v44, v43, a18, a19, v36, a22, v37, v38, v52);
}

id sub_10057BD38(uint64_t a1)
{
  return sub_100560C50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_100990CE8, (uint64_t)sub_100583074, (uint64_t)&unk_100990D00);
}

uint64_t sub_10057BD78(uint64_t a1)
{
  return sub_100546D68(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10057BD94()
{
  uint64_t v1 = *(void *)(sub_100431F80(&qword_100A47D80) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_100725CC0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v6 + 64);
  swift_bridgeObjectRelease();
  int v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5);
  id v10 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  if (!v9) {
    v10(v0 + v3, v5);
  }
  uint64_t v11 = (v3 + v4 + v7) & ~v7;
  unint64_t v12 = (((((((v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  v10(v0 + v11, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v12 + 16, v2 | v7 | 7);
}

uint64_t sub_10057BF48(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100431F80(&qword_100A47D80) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(sub_100725CC0() - 8);
  unint64_t v7 = (v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_100544DA4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), v1 + v4, v1 + v7, *(void **)(v1 + v8), *(void **)(v1 + v9), *(void **)(v1 + v10), *(void *)(v1 + v10 + 8), *(void **)(v1 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_10057C088()
{
  uint64_t v1 = sub_100725CC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_10057C15C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100725CC0() - 8);
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  unint64_t v6 = v1[4];
  uint64_t v7 = (uint64_t)v1 + ((*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_10054575C(a1, v4, v5, v6, v7);
}

uint64_t sub_10057C1D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10054839C(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56), *(void **)(v2 + 64), a2, *(unsigned char *)(v2 + 72), *(void *)(v2 + 80));
}

uint64_t sub_10057C214@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100547340(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_10057C220(uint64_t a1)
{
  return sub_100547A88(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10057C23C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100548054(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10057C244@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100549C74(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48), *(void *)(v2 + 56), *(void **)(v2 + 64), a2, *(void *)(v2 + 72), *(unsigned char *)(v2 + 80), *(void *)(v2 + 88));
}

uint64_t sub_10057C288(uint64_t a1)
{
  return sub_10054B044(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10057C2A4(uint64_t a1)
{
  return sub_10057C344(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_10054006C);
}

uint64_t sub_10057C2BC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10054C068(a1, v2[2], v2[3], v2[4], v2[5], (uint64_t)&unk_10079A2E0, a2);
}

uint64_t sub_10057C2E4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10054CC98(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), a2);
}

uint64_t sub_10057C2F4(uint64_t a1)
{
  return sub_10054D770(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_10057C310(uint64_t a1)
{
  return sub_10054D96C(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_10057C32C(uint64_t a1)
{
  return sub_10057C344(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_10054E090);
}

uint64_t sub_10057C344(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_10057C35C(uint64_t a1)
{
  return sub_10054EA64(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_10057C378@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10054F188(a1, *(void **)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_10057C384(uint64_t a1)
{
  return sub_10054F9F8(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10057C3A4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10055021C(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_10057C3B0(uint64_t a1)
{
  return sub_1005508F8(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10057C3CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005593C4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (void (*)(char *, uint64_t))&unk_10079A088, 1, a2);
}

uint64_t sub_10057C3F4(uint64_t a1)
{
  return sub_1005834BC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_1005514E0);
}

uint64_t sub_10057C40C(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + 32);
  unint64_t v24 = *(uint64_t **)(v1 + 40);
  id v4 = [*(id *)(v1 + 24) prefixedURI];
  uint64_t v5 = sub_100726430();
  uint64_t v7 = v6;

  id v8 = [v3 prefixedURI];
  uint64_t v9 = sub_100726430();
  uint64_t v11 = v10;

  unint64_t v12 = sub_100550B34(v5, v7, v9, v11, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!(v12 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
LABEL_15:
    unint64_t v16 = _swiftEmptyArrayStorage;
LABEL_16:
    swift_bridgeObjectRelease_n();
    uint64_t v23 = sub_1004CCCD4((uint64_t)v16);
    swift_bridgeObjectRelease();
    *unint64_t v24 = v23;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_100726BA0();
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v13 >= 1)
  {
    uint64_t v15 = 0;
    unint64_t v16 = _swiftEmptyArrayStorage;
    do
    {
      if ((v12 & 0xC000000000000001) != 0) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      uint64_t v17 = sub_100492494();
      uint64_t v19 = v18;
      swift_release();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v16 = sub_1004BE840(0, v16[2] + 1, 1, v16);
      }
      unint64_t v21 = v16[2];
      unint64_t v20 = v16[3];
      if (v21 >= v20 >> 1) {
        unint64_t v16 = sub_1004BE840((void *)(v20 > 1), v21 + 1, 1, v16);
      }
      ++v15;
      void v16[2] = v21 + 1;
      uint64_t v22 = &v16[2 * v21];
      v22[4] = v17;
      void v22[5] = v19;
    }
    while (v13 != v15);
    goto LABEL_16;
  }
  __break(1u);
  return result;
}

uint64_t sub_10057C62C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005526FC(a1, v2[2], v2[3], v2[4], v2[5], 1, a2);
}

uint64_t sub_10057C650(uint64_t a1)
{
  return sub_1005530C0(a1, *(void *)(v1 + 16), *(BOOL **)(v1 + 24));
}

uint64_t sub_10057C66C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100553638(a1, *(void (**)(char *, uint64_t))(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), a2);
}

uint64_t sub_10057C678(uint64_t a1)
{
  return sub_100554238(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10057C694(uint64_t a1)
{
  return sub_10057CF50(a1);
}

uint64_t sub_10057C6AC(unint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  unint64_t v4 = a1;
  if (a1 >> 62) {
    goto LABEL_54;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v5)
  {
LABEL_55:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v36 = v5;
    unint64_t v37 = v4 & 0xC000000000000001;
    uint64_t v6 = 4;
    unint64_t v33 = v4;
LABEL_7:
    uint64_t v7 = v6 - 4;
    if (v37) {
      break;
    }
    uint64_t v8 = swift_retain();
    uint64_t v9 = v6 - 3;
    if (!__OFADD__(v7, 1)) {
      goto LABEL_12;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_100726BA0();
    if (!v5) {
      goto LABEL_55;
    }
  }
  uint64_t v8 = sub_100726A10();
  uint64_t v9 = v6 - 3;
  if (__OFADD__(v7, 1)) {
    goto LABEL_49;
  }
LABEL_12:
  uint64_t v39 = v8;
  uint64_t v10 = sub_10048A368();
  unint64_t v12 = v11;
  id v13 = [a2 rawToken];
  uint64_t v14 = sub_100725B50();
  unint64_t v16 = v15;

  uint64_t v17 = 0;
  switch(v12 >> 62)
  {
    case 1uLL:
      LODWORD(v17) = HIDWORD(v10) - v10;
      if (__OFSUB__(HIDWORD(v10), v10)) {
        goto LABEL_51;
      }
      uint64_t v17 = (int)v17;
      break;
    case 2uLL:
      uint64_t v19 = *(void *)(v10 + 16);
      uint64_t v18 = *(void *)(v10 + 24);
      BOOL v20 = __OFSUB__(v18, v19);
      uint64_t v17 = v18 - v19;
      if (!v20) {
        break;
      }
      goto LABEL_50;
    case 3uLL:
      break;
    default:
      uint64_t v17 = BYTE6(v12);
      break;
  }
  switch(v16 >> 62)
  {
    case 1uLL:
      LODWORD(v21) = HIDWORD(v14) - v14;
      if (__OFSUB__(HIDWORD(v14), v14)) {
        goto LABEL_53;
      }
      uint64_t v21 = (int)v21;
LABEL_24:
      if (v17 != v21)
      {
LABEL_5:
        sub_100442248(v14, v16);
        sub_100442248(v10, v12);
        goto LABEL_6;
      }
      if (v17 >= 1)
      {
        switch(v12 >> 62)
        {
          case 1uLL:
            if (v10 >> 32 < (int)v10)
            {
              __break(1u);
LABEL_57:
              __break(1u);
LABEL_58:
              __break(1u);
LABEL_59:
              __break(1u);
            }
            sub_100441FD4(v14, v16);
            sub_100441FD4(v10, v12);
            uint64_t v27 = sub_100725910();
            if (v27)
            {
              uint64_t v35 = v3;
              uint64_t v28 = v27;
              uint64_t v29 = sub_100725940();
              if (__OFSUB__((int)v10, v29)) {
                goto LABEL_59;
              }
              uint64_t v30 = v28 + (int)v10 - v29;
              uint64_t v3 = v35;
            }
            else
            {
              uint64_t v30 = 0;
            }
            sub_100725930();
            sub_10045302C(v30, v14, v16, (char *)__s1);
            if (v3)
            {
              sub_100442248(v10, v12);
              goto LABEL_62;
            }
            uint64_t v3 = 0;
            sub_100442248(v10, v12);
            break;
          case 2uLL:
            uint64_t v34 = v3;
            uint64_t v24 = *(void *)(v10 + 16);
            uint64_t v32 = *(void *)(v10 + 24);
            sub_100441FD4(v14, v16);
            swift_retain();
            swift_retain();
            uint64_t v25 = sub_100725910();
            if (!v25) {
              goto LABEL_31;
            }
            uint64_t v26 = sub_100725940();
            if (__OFSUB__(v24, v26)) {
              goto LABEL_58;
            }
            v25 += v24 - v26;
LABEL_31:
            if (__OFSUB__(v32, v24)) {
              goto LABEL_57;
            }
            sub_100725930();
            sub_10045302C(v25, v14, v16, (char *)__s1);
            if (v34)
            {
              swift_release();
              swift_release();
LABEL_62:
              sub_100442248(v14, v16);
              __break(1u);
              JUMPOUT(0x10057CBF4);
            }
            uint64_t v3 = 0;
            swift_release();
            swift_release();
            break;
          case 3uLL:
            memset(__s1, 0, 14);
            sub_100441FD4(v14, v16);
            goto LABEL_35;
          default:
            __s1[0] = v10;
            LOWORD(__s1[1]) = v12;
            BYTE2(__s1[1]) = BYTE2(v12);
            BYTE3(__s1[1]) = BYTE3(v12);
            BYTE4(__s1[1]) = BYTE4(v12);
            BYTE5(__s1[1]) = BYTE5(v12);
            sub_100441FD4(v14, v16);
LABEL_35:
            sub_10045302C((uint64_t)__s1, v14, v16, &v40);
            if (v3) {
              goto LABEL_62;
            }
            uint64_t v3 = 0;
            sub_100442248(v14, v16);
            sub_100442248(v14, v16);
            sub_100442248(v10, v12);
            if (v40) {
              goto LABEL_48;
            }
            goto LABEL_6;
        }
        sub_100442248(v14, v16);
        sub_100442248(v14, v16);
        sub_100442248(v10, v12);
        unint64_t v4 = v33;
        if (__s1[0]) {
          goto LABEL_48;
        }
LABEL_6:
        swift_release();
        ++v6;
        if (v9 == v36) {
          goto LABEL_55;
        }
        goto LABEL_7;
      }
LABEL_47:
      sub_100442248(v14, v16);
      sub_100442248(v10, v12);
LABEL_48:
      swift_bridgeObjectRelease();
      return v39;
    case 2uLL:
      uint64_t v23 = *(void *)(v14 + 16);
      uint64_t v22 = *(void *)(v14 + 24);
      BOOL v20 = __OFSUB__(v22, v23);
      uint64_t v21 = v22 - v23;
      if (!v20) {
        goto LABEL_24;
      }
      goto LABEL_52;
    case 3uLL:
      if (v17) {
        goto LABEL_5;
      }
      goto LABEL_47;
    default:
      uint64_t v21 = BYTE6(v16);
      goto LABEL_24;
  }
}

uint64_t sub_10057CC24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100431F80(&qword_100A48728) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_10057CD80(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_16:
    uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_17:
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_100726BA0();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v2 >= 1)
  {
    uint64_t v4 = 0;
    uint64_t v5 = IDSRegistrationPropertySupportsStewie;
    uint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      if ((a1 & 0xC000000000000001) != 0) {
        id v8 = (id)sub_100726A10();
      }
      else {
        id v8 = *(id *)(a1 + 8 * v4 + 32);
      }
      uint64_t v9 = v8;
      id v10 = [v8 capabilities];
      uint64_t v11 = (uint64_t)[v10 valueForCapability:v5];

      if (v11 >= 1)
      {
        id v12 = [v9 pushToken];
        uint64_t v13 = sub_100725B50();
        uint64_t v15 = v14;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_1004BE840(0, v6[2] + 1, 1, v6);
        }
        unint64_t v17 = v6[2];
        unint64_t v16 = v6[3];
        if (v17 >= v16 >> 1) {
          uint64_t v6 = sub_1004BE840((void *)(v16 > 1), v17 + 1, 1, v6);
        }
        uint64_t v6[2] = v17 + 1;
        uint64_t v7 = &v6[2 * v17];
        long long v7[4] = v13;
        v7[5] = v15;
      }
      ++v4;
    }
    while (v2 != v4);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_10057CF50(uint64_t a1)
{
  return sub_100554AB0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(NSObject **)(v1 + 40), *(void *)(v1 + 48), *(NSObject **)(v1 + 56), *(void *)(v1 + 64));
}

BOOL sub_10057CF78(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = sub_100726BA0())
  {
    uint64_t v3 = (void *)IDSRegistrationPropertySenderKeyMessageVersion;
    uint64_t v4 = 4;
    while (1)
    {
      id v5 = (a1 & 0xC000000000000001) != 0 ? (id)sub_100726A10() : *(id *)(a1 + 8 * v4);
      uint64_t v6 = v5;
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v4 - 4, 1)) {
        break;
      }
      id v8 = [v5 capabilities];
      id v9 = v3;
      uint64_t v10 = (uint64_t)[v8 valueForCapability:v9];

      BOOL v11 = v10 > 0;
      ++v4;
      if (v10 < 1 || v7 == v2) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  BOOL v11 = 1;
LABEL_17:
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10057D0B0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100558930(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), *(unsigned __int8 *)(v2 + 32), a2);
}

uint64_t sub_10057D0BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005593C4(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), (void (*)(char *, uint64_t))&unk_10079A060, 0, a2);
}

uint64_t sub_10057D0E4@<X0>(uint64_t *a1@<X8>)
{
  return sub_100559E38(*(void *)(v1 + 16), a1);
}

uint64_t sub_10057D0EC(uint64_t a1)
{
  return sub_10055A178(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10057D10C(uint64_t a1)
{
  return sub_10055A65C(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_10057D128(uint64_t a1)
{
  return sub_10055AA40(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_10057D148()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10057D190(uint64_t a1)
{
  return sub_10055B2FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_10057D1C0()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

id sub_10057D218(uint64_t a1)
{
  return sub_10055B5A4(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_10057D228(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_10057D238()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10057D290(uint64_t a1)
{
  return sub_10057F5D0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_10055BA2C);
}

uint64_t sub_10057D2BC()
{
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

id sub_10057D31C(uint64_t a1)
{
  return sub_10055BC98(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_10057D330(uint64_t a1)
{
  return sub_10057D370(a1, (uint64_t)sub_10058172C, (void (*)(char *))sub_1004953F0);
}

uint64_t sub_10057D370(uint64_t a1, uint64_t a2, void (*a3)(char *))
{
  return sub_10055C1D0(a1, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], a2, a3);
}

void sub_10057D3AC(uint64_t a1)
{
}

uint64_t sub_10057D3BC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100442248(*(void *)(v0 + 48), *(void *)(v0 + 56));

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10057D404(uint64_t a1)
{
  return sub_10057D370(a1, (uint64_t)sub_10058172C, (void (*)(char *))sub_100495870);
}

uint64_t sub_10057D448()
{
  return _swift_deallocObject(v0, 48, 7);
}

void sub_10057D498(uint64_t a1)
{
}

void sub_10057D4A4(uint64_t a1, char *a2)
{
  if (a1)
  {
    uint64_t v4 = (void *)v2[4];
    id v5 = (void *)v2[5];
    uint64_t v6 = (void *)v2[3];
    swift_errorRetain();
    swift_errorRetain();
    id v7 = v6;
    id v8 = v4;
    id v9 = v5;
    swift_errorRetain();
    id v10 = v7;
    id v11 = v8;
    id v12 = v9;
    uint64_t v13 = sub_100725EB0();
    os_log_type_t v14 = sub_1007266C0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      format = a2;
      unint64_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138413058;
      os_log_t log = v13;
      id v17 = v10;
      sub_100726830();
      *unint64_t v16 = v10;

      *(_WORD *)(v15 + 12) = 2112;
      id v18 = v11;
      sub_100726830();
      v16[1] = v11;

      *(_WORD *)(v15 + 22) = 2112;
      id v19 = v12;
      sub_100726830();
      void v16[2] = v12;

      *(_WORD *)(v15 + 32) = 2112;
      swift_errorRetain();
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      sub_100726830();
      v16[3] = v22;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v14, format, (uint8_t *)v15, 0x2Au);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10057D764()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10057D7B4(uint64_t a1)
{
  return sub_10055D5D8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_10057D7E4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_10057D834(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = (void *)v1[4];
    uint64_t v3 = (void *)v1[5];
    uint64_t v4 = v1[3];
    swift_errorRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    id v5 = v2;
    id v6 = v3;
    swift_errorRetain();
    swift_bridgeObjectRetain();
    id v7 = v5;
    id v8 = v6;
    id v9 = sub_100725EB0();
    os_log_type_t v10 = sub_1007266C0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v32 = v8;
      uint64_t v11 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315906;
      os_log_type_t v30 = v10;
      if (v4)
      {
        uint64_t v12 = *(void *)(v4 + 16);
        if (v12)
        {
          id v28 = v7;
          uint64_t v29 = v9;
          swift_bridgeObjectRetain();
          uint64_t v13 = (unint64_t *)(v4 + 40);
          os_log_type_t v14 = _swiftEmptyArrayStorage;
          do
          {
            uint64_t v15 = *(v13 - 1);
            unint64_t v16 = *v13;
            sub_100441FD4(v15, *v13);
            uint64_t v17 = sub_100725B30(0);
            uint64_t v19 = v18;
            sub_100442248(v15, v16);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              os_log_type_t v14 = sub_1004BEBB8(0, v14[2] + 1, 1, v14);
            }
            unint64_t v21 = v14[2];
            unint64_t v20 = v14[3];
            if (v21 >= v20 >> 1) {
              os_log_type_t v14 = sub_1004BEBB8((void *)(v20 > 1), v21 + 1, 1, v14);
            }
            v13 += 2;
            uint64_t v14[2] = v21 + 1;
            uint64_t v22 = &v14[2 * v21];
            v22[4] = v17;
            void v22[5] = v19;
            --v12;
          }
          while (v12);
          swift_bridgeObjectRelease();
          id v7 = v28;
          id v9 = v29;
        }
      }
      uint64_t v23 = sub_100726580();
      unint64_t v25 = v24;
      swift_bridgeObjectRelease();
      sub_10043E578(v23, v25, &v34);
      sub_100726830();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v11 + 12) = 2112;
      id v26 = v7;
      sub_100726830();
      void *v31 = v7;

      *(_WORD *)(v11 + 22) = 2112;
      id v27 = v32;
      sub_100726830();
      v31[1] = v32;

      *(_WORD *)(v11 + 32) = 2112;
      swift_errorRetain();
      uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
      sub_100726830();
      void v31[2] = v33;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v30, "Failed to reset state for %s for senderURI: %@ receiverURI: %@ error: %@", (uint8_t *)v11, 0x2Au);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_10057DC58(uint64_t a1)
{
  return sub_10055DB7C(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

unint64_t sub_10057DC78(uint64_t a1)
{
  uint64_t v3 = *(unsigned char **)(v1 + 48);
  uint64_t v2 = *(void *)(v1 + 56);
  unint64_t v4 = *(void *)(v1 + 64);
  unint64_t result = sub_10055862C(*(void *)(v1 + 24), *(void *)(v1 + 32), *(unsigned char *)(v1 + 40), a1);
  unint64_t v6 = result;
  if (!(result >> 62))
  {
    uint64_t v7 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_3;
    }
LABEL_12:
    unint64_t result = swift_bridgeObjectRelease();
    unsigned char *v3 = 0;
    return result;
  }
  unint64_t result = sub_100726BA0();
  uint64_t v7 = result;
  if (!result) {
    goto LABEL_12;
  }
LABEL_3:
  if (v7 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = 0;
    do
    {
      if ((v6 & 0xC000000000000001) != 0) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      ++v8;
      sub_100441FD4(v2, v4);
      sub_100492E9C(v2, v4);
      swift_release();
    }
    while (v7 != v8);
    swift_bridgeObjectRelease();
    unint64_t result = sub_1007260F0();
    if (result) {
      return sub_100726100();
    }
  }
  return result;
}

uint64_t sub_10057DDAC(uint64_t a1)
{
  return sub_10057F890(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10055E434);
}

uint64_t sub_10057DDD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10057DE40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10057DEA0(uint64_t a1)
{
  uint64_t v2 = (BOOL *)v1[5];
  unint64_t v3 = sub_10055862C(v1[3], v1[4], 0, a1);
  unint64_t v4 = v3;
  if (v3 >> 62) {
    goto LABEL_6;
  }
  uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while ((v4 & 0xC000000000000001) == 0)
    {
      uint64_t v6 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_10;
      }
      __break(1u);
LABEL_6:
      uint64_t v5 = sub_100726BA0();
      if (!v5) {
        goto LABEL_9;
      }
    }
    sub_100726A10();
    swift_unknownObjectRelease();
  }
LABEL_9:
  uint64_t result = swift_bridgeObjectRelease();
LABEL_10:
  *uint64_t v2 = v5 != 0;
  return result;
}

uint64_t sub_10057DF64@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005526FC(a1, v2[2], v2[3], v2[4], v2[5], 0, a2);
}

uint64_t sub_10057DF88(uint64_t a1)
{
  return sub_10055ECD8(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_10057DFA4(uint64_t a1)
{
  return sub_10055F308(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(BOOL **)(v1 + 32));
}

uint64_t sub_10057DFD4(uint64_t a1)
{
  return sub_10055F7BC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10057DFF4()
{
  uint64_t v1 = sub_100725CC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 28) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10057E084(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100725CC0() - 8);
  return sub_10055FC34(a1, *(void *)(v1 + 16), *(_DWORD *)(v1 + 24), v1 + ((*(unsigned __int8 *)(v3 + 80) + 28) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

id sub_10057E0FC(uint64_t a1)
{
  return sub_100565168(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_100990BF8, (uint64_t)sub_1005813E4, (uint64_t)&unk_100990C10);
}

uint64_t sub_10057E140()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_10057E180()
{
  uint64_t v1 = *(void *)(v0 + 16);
  id v25 = *(id *)(v0 + 24);
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1007268E0();
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    sub_100726680();
    uint64_t v1 = v27;
    uint64_t v24 = v28;
    uint64_t v2 = v29;
    uint64_t v3 = v30;
    unint64_t v4 = v31;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v24 = v1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v23 = (unint64_t)(v2 + 64) >> 6;
  if (v1 < 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v4)
    {
      uint64_t v8 = (v4 - 1) & v4;
      unint64_t v9 = __clz(__rbit64(v4)) | (v3 << 6);
      uint64_t v10 = v3;
      goto LABEL_27;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      break;
    }
    if (v12 >= v23) {
      goto LABEL_30;
    }
    unint64_t v13 = *(void *)(v24 + 8 * v12);
    uint64_t v10 = v3 + 1;
    if (!v13)
    {
      uint64_t v10 = v3 + 2;
      if (v3 + 2 >= v23) {
        goto LABEL_30;
      }
      unint64_t v13 = *(void *)(v24 + 8 * v10);
      if (!v13)
      {
        uint64_t v10 = v3 + 3;
        if (v3 + 3 >= v23) {
          goto LABEL_30;
        }
        unint64_t v13 = *(void *)(v24 + 8 * v10);
        if (!v13)
        {
          uint64_t v10 = v3 + 4;
          if (v3 + 4 >= v23) {
            goto LABEL_30;
          }
          unint64_t v13 = *(void *)(v24 + 8 * v10);
          if (!v13)
          {
            uint64_t v14 = v3 + 5;
            while (v23 != v14)
            {
              unint64_t v13 = *(void *)(v24 + 8 * v14++);
              if (v13)
              {
                uint64_t v10 = v14 - 1;
                goto LABEL_26;
              }
            }
LABEL_30:
            sub_100462C48();
            return;
          }
        }
      }
    }
LABEL_26:
    uint64_t v8 = (v13 - 1) & v13;
    unint64_t v9 = __clz(__rbit64(v13)) + (v10 << 6);
LABEL_27:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
    if (!v11) {
      goto LABEL_30;
    }
    while (1)
    {
      type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(0);
      unint64_t v26 = v8;
      id v15 = [v11 prefixedURI];
      uint64_t v16 = sub_100726430();
      uint64_t v18 = v17;

      id v19 = [v25 prefixedURI];
      uint64_t v20 = sub_100726430();
      uint64_t v22 = v21;

      sub_1004976E8(v16, v18, v20, v22);
      sub_10057998C((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
      sub_100726150();
      swift_release();

      unint64_t v4 = v26;
      uint64_t v3 = v10;
      if ((v1 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (sub_100726950())
      {
        sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v11 = v32;
        swift_unknownObjectRelease();
        uint64_t v10 = v3;
        uint64_t v8 = v4;
        if (v32) {
          continue;
        }
      }
      goto LABEL_30;
    }
  }
  __break(1u);
}

id sub_10057E51C(uint64_t a1)
{
  return sub_10056994C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_100990BA8, (uint64_t)sub_1005811C4, (uint64_t)&unk_100990BC0);
}

uint64_t sub_10057E560(uint64_t a1)
{
  return sub_100560570(a1, *(void *)(v1 + 16), *(char ****)(v1 + 24));
}

uint64_t sub_10057E57C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

id sub_10057E5B4(uint64_t a1)
{
  return sub_100560C50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_100990B58, (uint64_t)sub_100581088, (uint64_t)&unk_100990B70);
}

uint64_t sub_10057E5F4(uint64_t a1)
{
  return sub_100561234(a1, *(void **)(v1 + 16));
}

uint64_t sub_10057E610(uint64_t a1)
{
  uint64_t v2 = *(void **)(v1 + 24);
  unint64_t v3 = (unint64_t)sub_10055A478(a1, (uint64_t)sub_10057D10C);
  unint64_t v4 = v3;
  if (!(v3 >> 62))
  {
    uint64_t v5 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v13 = v2;
    if (v5) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = sub_100481658((unint64_t)_swiftEmptyArrayStorage, (unint64_t *)&unk_100A47EC0, (uint64_t)IDSURI_ptr, (unint64_t *)&unk_100A46850, &qword_100A459E0);
    swift_bridgeObjectRelease();
    int64_t v12 = sub_1005723AC(v11, (unint64_t *)&unk_100A47EC0, (uint64_t)IDSURI_ptr, (unint64_t *)&unk_100A46850);
    swift_bridgeObjectRelease();
    *unint64_t v13 = v12;
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_100726BA0();
  uint64_t v5 = result;
  unint64_t v13 = v2;
  if (!result) {
    goto LABEL_15;
  }
LABEL_3:
  if (v5 >= 1)
  {
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        sub_100726A10();
      }
      else {
        swift_retain();
      }
      sub_100492198();
      id v8 = objc_allocWithZone((Class)IDSURI);
      NSString v9 = sub_100726420();
      swift_bridgeObjectRelease();
      id v10 = [v8 initWithPrefixedURI:v9];

      swift_release();
      if (v10)
      {
        sub_100726550();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1007265A0();
        }
        sub_1007265C0();
        sub_100726590();
      }
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

uint64_t sub_10057E874(uint64_t a1)
{
  return sub_10056205C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10057E8A4()
{
  return sub_100563538();
}

double sub_10057EA14()
{
  id v0 = [self sharedInstance];
  NSString v1 = sub_100726420();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100462BE4((uint64_t)v6, (uint64_t)v7, &qword_100A44F00);
  if (v8)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A468F0);
    if (swift_dynamicCast())
    {
      id v3 = [v5 integerValue];

      return (double)(uint64_t)v3;
    }
  }
  else
  {
    sub_10044C150((uint64_t)v7, &qword_100A44F00);
  }
  return 6048000.0;
}

id sub_10057EB6C(uint64_t a1)
{
  return sub_100565168(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_100990B08, (uint64_t)sub_100581078, (uint64_t)&unk_100990B20);
}

id sub_10057EBB0(uint64_t a1)
{
  return sub_100565168(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_100990AB8, (uint64_t)sub_100580EF4, (uint64_t)&unk_100990AD0);
}

uint64_t sub_10057EBF4()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10057EC2C(uint64_t a1)
{
  return sub_100564D50(a1);
}

id sub_10057EC5C(uint64_t a1)
{
  return sub_100565168(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_100990A68, (uint64_t)sub_100580EE4, (uint64_t)&unk_100990A80);
}

uint64_t sub_10057ECA0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1005658F8(*(void *)(v1 + 16), a1);
}

uint64_t sub_10057ECA8()
{
  uint64_t v1 = sub_100431F80(&qword_100A47F20);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_10057ED3C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100431F80(&qword_100A47F20) - 8);
  return sub_100565D34(a1, v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

uint64_t sub_10057EDAC()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_10057EDE4(uint64_t a1)
{
}

uint64_t sub_10057EDF0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10057EE28(unint64_t a1)
{
  return sub_100566188(a1, *(void *)(v1 + 16));
}

void sub_10057EE48(uint64_t a1)
{
}

uint64_t sub_10057EE54()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10057EE8C(uint64_t a1)
{
  return sub_100567740(a1, *(void *)(v1 + 16));
}

uint64_t sub_10057EEAC()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

id sub_10057EEEC(uint64_t a1)
{
  return sub_10056994C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), (uint64_t)&unk_100990A18, (uint64_t)sub_1005809D4, (uint64_t)&unk_100990A30);
}

uint64_t sub_10057EF30(uint64_t a1)
{
  return sub_100569DB8(a1, *(void *)(v1 + 16));
}

void sub_10057EF4C(uint64_t a1)
{
}

void sub_10057EF58(uint64_t a1, const char *a2)
{
  if (a1)
  {
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v3 = sub_100725EB0();
    os_log_type_t v4 = sub_1007266C0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      uint64_t v6 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v5 = 138412290;
      swift_errorRetain();
      uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
      sub_100726830();
      *uint64_t v6 = v7;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, a2, v5, 0xCu);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_10057F118(uint64_t a1)
{
  sub_10056BEB8(a1, *(void *)(v1 + 16), "Error cleanup expired registration events: %@");
}

void sub_10057F13C(uint64_t a1)
{
  sub_10056B198(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10057F158(uint64_t a1)
{
  return sub_10056BC0C(a1, *(void **)(v1 + 16));
}

void sub_10057F184(uint64_t a1)
{
  sub_10056BEB8(a1, *(void *)(v1 + 16), "Error updating IDSQualifiedContactsCount: %@");
}

void sub_10057F1A8(uint64_t a1)
{
  sub_10056D4F0(a1, *(void *)(v1 + 16), *(id *)(v1 + 24), *(NSObject **)(v1 + 32));
}

unint64_t sub_10057F1C8(uint64_t a1)
{
  return sub_10056EC18(a1, v1[2], v1[3], v1[4]);
}

unint64_t sub_10057F1F8(uint64_t a1)
{
  return sub_10056F4AC(a1);
}

uint64_t sub_10057F224(uint64_t a1)
{
  return sub_10056F894(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10057F250(uint64_t a1)
{
  return sub_100570928(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32));
}

uint64_t sub_10057F270@<X0>(uint64_t *a1@<X8>)
{
  return sub_100571370(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10057F278(uint64_t a1)
{
  return sub_1005716B4(a1, *(void *)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_10057F294()
{
  return type metadata accessor for SDPersistenceManager();
}

uint64_t sub_10057F29C()
{
  uint64_t result = sub_100725ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for ContainerLoadMetric()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for ContainerLoadMetric.ContainerType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10057F440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContainerLoadMetric.ContainerType()
{
  return &type metadata for ContainerLoadMetric.ContainerType;
}

void type metadata accessor for FTMessageDeliveryInterface()
{
  if (!qword_100A47FF0)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v1) {
      atomic_store(ForeignTypeMetadata, (unint64_t *)&qword_100A47FF0);
    }
  }
}

unint64_t sub_10057F4D4()
{
  unint64_t result = qword_100A52D90[0];
  if (!qword_100A52D90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A52D90);
  }
  return result;
}

uint64_t sub_10057F528(uint64_t a1)
{
  return sub_10057F890(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10056F010);
}

void sub_10057F554(uint64_t a1)
{
}

void sub_10057F56C(uint64_t a1)
{
  sub_10056E864(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(id *)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(void ***)(v1 + 64));
}

uint64_t sub_10057F5A4(uint64_t a1)
{
  return sub_10057F5D0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_10056DD98);
}

uint64_t sub_10057F5D0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_10057F60C(uint64_t a1)
{
  return sub_10057F664(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10056DBA8);
}

uint64_t sub_10057F638(uint64_t a1)
{
  return sub_10057F664(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10056D2D8);
}

uint64_t sub_10057F664(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_10057F6A0(uint64_t a1)
{
  return sub_10057F890(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10056CE98);
}

uint64_t sub_10057F6CC(uint64_t a1)
{
  return sub_10057F890(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10056CC00);
}

uint64_t sub_10057F6F8(uint64_t a1)
{
  return sub_10057F710(a1);
}

uint64_t sub_10057F710(uint64_t a1)
{
  return sub_10056C9B8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(uint64_t **)(v1 + 88));
}

void sub_10057F760(uint64_t a1)
{
}

void sub_10057F778(uint64_t a1)
{
  sub_10056C5CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(id *)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_10057F7B0(uint64_t a1)
{
  return sub_10057F890(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10056C190);
}

uint64_t sub_10057F7DC()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_10057F81C()
{
  if (*(void *)(v0 + 24)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_10057F864(uint64_t a1)
{
  return sub_10057F890(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_10054DB68);
}

uint64_t sub_10057F890(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_10057F8CC(uint64_t a1)
{
  return sub_10057F8E4(a1);
}

uint64_t sub_10057F8E4(uint64_t a1)
{
  return sub_100545F30(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(id *)(v1 + 40), *(void **)(v1 + 48), *(unsigned char *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_10057F910(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t))(*(void *)(v2 + 16) + 16))(*(void *)(v2 + 16), a1 & 1, a2);
}

uint64_t sub_10057F930()
{
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10057F988(uint64_t a1)
{
  return sub_10057FAE8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_1005440E8);
}

uint64_t sub_10057F9B8()
{
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_10057FA18(uint64_t a1)
{
}

void sub_10057FA30(uint64_t a1)
{
  sub_10054323C(a1, *(void *)(v1 + 16), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_10057FA6C()
{
  swift_bridgeObjectRelease();
  sub_100442248(*(void *)(v0 + 32), *(void *)(v0 + 40));

  sub_100442248(*(void *)(v0 + 56), *(void *)(v0 + 64));

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_10057FABC(uint64_t a1)
{
  return sub_10057FAE8(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_100542EC4);
}

uint64_t sub_10057FAE8(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_10057FB2C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_10057FB74(uint64_t a1)
{
  return sub_10057FB8C(a1);
}

uint64_t sub_10057FB8C(uint64_t a1)
{
  return sub_100540274(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_10057FBB4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_10057FBFC(uint64_t a1)
{
  return sub_10057FC14(a1);
}

uint64_t sub_10057FC14(uint64_t a1)
{
  return sub_10053FD74(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t sub_10057FC38()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_10057FC74()
{
  uint64_t v1 = sub_100725CC0();
  uint64_t v2 = *(void *)(v1 - 8);
  int v3 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = *(void *)(v2 + 64);
  uint64_t v7 = v4 | 7;
  uint64_t v8 = (v6 + v4 + v5) & ~v4;
  uint64_t v9 = v8 + v6;
  v3(v0 + v5, v1);
  v3(v0 + v8, v1);

  return _swift_deallocObject(v0, v9, v7);
}

uint64_t sub_10057FD38(uint64_t a1)
{
  return sub_10057FD50(a1);
}

uint64_t sub_10057FD50(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100725CC0() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  return sub_10053E1D8(a1, v1 + ((v4 + 16) & ~v4), v1 + ((*(void *)(v3 + 64) + v4 + ((v4 + 16) & ~v4)) & ~v4));
}

void sub_10057FDE8()
{
}

unint64_t sub_10057FE0C()
{
  unint64_t result = qword_100A48088;
  if (!qword_100A48088)
  {
    sub_100440798(&qword_100A48080);
    sub_1005803B4(&qword_100A48090, &qword_100A48070, &qword_100A48098, &qword_100A48068);
    sub_100583000(&qword_100A480A0, &qword_100A48060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48088);
  }
  return result;
}

uint64_t sub_10057FEC8@<X0>(uint64_t *a1@<X8>)
{
  return sub_100570CBC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t *sub_10057FED0(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v4 = a1[5];
  unint64_t v5 = a1[6];
  uint64_t v6 = a1[7];
  unint64_t v7 = a1[8];
  uint64_t v8 = a1[9];
  unint64_t v9 = a1[10];
  uint64_t v10 = a1[11];
  unint64_t v12 = a1[12];
  sub_10044CE88(*a1, a1[1]);
  sub_10044CE88(v2, v3);
  sub_10044CE88(v4, v5);
  sub_10044CE88(v6, v7);
  sub_10044CE88(v8, v9);
  sub_10044CE88(v10, v12);
  return a1;
}

id sub_10057FF7C()
{
  Class isa = sub_100725B20().super.isa;
  id v5 = 0;
  id v1 = [(id)swift_getObjCClassFromMetadata() identityWithData:isa error:&v5];

  if (v1)
  {
    id v2 = v5;
  }
  else
  {
    id v3 = v5;
    sub_100725A20();

    swift_willThrow();
  }
  return v1;
}

id sub_100580048()
{
  Class isa = sub_100725B20().super.isa;
  Class v1 = sub_100725B20().super.isa;
  id v6 = 0;
  id v2 = [(id)swift_getObjCClassFromMetadata() identityWithIdentityData:isa prekeyData:v1 error:&v6];

  if (v2)
  {
    id v3 = v6;
  }
  else
  {
    id v4 = v6;
    sub_100725A20();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_10058013C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_100580298(uint64_t a1)
{
  return a1;
}

uint64_t sub_1005802C8(uint64_t a1)
{
  return a1;
}

unint64_t sub_1005802F8()
{
  unint64_t result = qword_100A48160;
  if (!qword_100A48160)
  {
    sub_100440798(&qword_100A48158);
    sub_1005803B4(&qword_100A48168, &qword_100A48148, &qword_100A48170, &qword_100A48140);
    sub_100583000(&qword_100A480A0, &qword_100A48060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48160);
  }
  return result;
}

uint64_t sub_1005803B4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100440798(a2);
    sub_1004D10A4(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100580448@<X0>(uint64_t *a1@<X8>)
{
  return sub_10056AC88(*(void *)(v1 + 16), a1);
}

unint64_t sub_100580450()
{
  unint64_t result = qword_100A481C0;
  if (!qword_100A481C0)
  {
    sub_100440798(&qword_100A481B8);
    sub_1005803B4(&qword_100A481C8, &qword_100A481A8, &qword_100A481D0, &qword_100A481A0);
    sub_1005804EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A481C0);
  }
  return result;
}

unint64_t sub_1005804EC()
{
  unint64_t result = qword_100A481D8;
  if (!qword_100A481D8)
  {
    sub_100440798(&qword_100A48198);
    sub_10057998C(&qword_100A46970, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_10057998C(&qword_100A46950, (void (*)(uint64_t))&type metadata accessor for Date);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A481D8);
  }
  return result;
}

uint64_t sub_1005805C4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100569FC4(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_1005805CC()
{
  unint64_t result = qword_100A48268;
  if (!qword_100A48268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48268);
  }
  return result;
}

unint64_t sub_100580620()
{
  unint64_t result = qword_100A48298;
  if (!qword_100A48298)
  {
    sub_100440798(&qword_100A48290);
    sub_10058069C();
    sub_100580914();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48298);
  }
  return result;
}

unint64_t sub_10058069C()
{
  unint64_t result = qword_100A482A0;
  if (!qword_100A482A0)
  {
    sub_100440798(&qword_100A48238);
    sub_100580718();
    sub_100580914();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A482A0);
  }
  return result;
}

unint64_t sub_100580718()
{
  unint64_t result = qword_100A482A8;
  if (!qword_100A482A8)
  {
    sub_100440798(&qword_100A48230);
    sub_1005807B4();
    sub_1005803B4(&qword_100A482D8, &qword_100A48220, &qword_100A482E0, &qword_100A48218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A482A8);
  }
  return result;
}

unint64_t sub_1005807B4()
{
  unint64_t result = qword_100A482B0;
  if (!qword_100A482B0)
  {
    sub_100440798(&qword_100A48228);
    sub_1005808A8(&qword_100A482B8, &qword_100A48240, (void (*)(void))sub_10049ED64);
    sub_1005808A8(&qword_100A482C8, &qword_100A48240, (void (*)(void))sub_10049ECA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A482B0);
  }
  return result;
}

uint64_t sub_1005808A8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100440798(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100580914()
{
  unint64_t result = qword_100A482E8;
  if (!qword_100A482E8)
  {
    sub_100440798(&qword_100A48210);
    sub_1005803B4(&qword_100A482F0, &qword_100A48208, &qword_100A482E0, &qword_100A48218);
    sub_100583000(&qword_100A482F8, &qword_100A48200);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A482E8);
  }
  return result;
}

uint64_t sub_1005809D4()
{
  return sub_1005811D0("Error cleaning up invalid sender key entries: %@");
}

uint64_t sub_1005809E0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10056833C(a1, *(void **)(v2 + 16), 1, a2);
}

uint64_t sub_100580A00@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10056833C(a1, *(void **)(v2 + 16), 0, a2);
}

uint64_t sub_100580A20@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100568BB0(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_100580A28()
{
  unint64_t result = qword_100A48378;
  if (!qword_100A48378)
  {
    sub_100440798((uint64_t *)&unk_100A48330);
    sub_1005808A8(&qword_100A48380, &qword_100A48328, (void (*)(void))sub_100580ADC);
    sub_100580914();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48378);
  }
  return result;
}

unint64_t sub_100580ADC()
{
  unint64_t result = qword_100A48388;
  if (!qword_100A48388)
  {
    sub_100440798(&qword_100A48320);
    sub_100580B78();
    sub_1005803B4(&qword_100A483A8, &qword_100A48310, &qword_100A482E0, &qword_100A48218);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48388);
  }
  return result;
}

unint64_t sub_100580B78()
{
  unint64_t result = qword_100A48390;
  if (!qword_100A48390)
  {
    sub_100440798(&qword_100A48318);
    sub_1004D09C4((unint64_t *)&unk_100A46D20);
    sub_1004D09C4(&qword_100A483A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48390);
  }
  return result;
}

unint64_t sub_100580C3C()
{
  unint64_t result = qword_100A483D8;
  if (!qword_100A483D8)
  {
    sub_100440798(&qword_100A483D0);
    sub_100580CB8();
    sub_100580914();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A483D8);
  }
  return result;
}

unint64_t sub_100580CB8()
{
  unint64_t result = qword_100A483E0;
  if (!qword_100A483E0)
  {
    sub_100440798(&qword_100A483C0);
    sub_1005803B4(&qword_100A483E8, &qword_100A483B8, &qword_100A482E0, &qword_100A48218);
    sub_1005804EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A483E0);
  }
  return result;
}

uint64_t sub_100580D54@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100566850(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_100580D5C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100440798(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100580DC8()
{
  unint64_t result = qword_100A48410;
  if (!qword_100A48410)
  {
    sub_100440798(&qword_100A483F8);
    sub_100580ADC();
    sub_100580914();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48410);
  }
  return result;
}

unint64_t sub_100580E44()
{
  unint64_t result = qword_100A48450;
  if (!qword_100A48450)
  {
    sub_100440798(&qword_100A48448);
    sub_1005803B4(&qword_100A48458, &qword_100A48438, &qword_100A48460, &qword_100A48430);
    sub_1005804EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48450);
  }
  return result;
}

uint64_t sub_100580EE4()
{
  return sub_1005813F0((uint64_t)"Error cleanup expired short handles: %@");
}

uint64_t sub_100580EF4()
{
  return sub_1005813F0((uint64_t)"Error cleaning up expired sessions: %@");
}

uint64_t sub_100580F00@<X0>(uint64_t *a1@<X8>)
{
  return sub_100564398(*(void *)(v1 + 16), a1);
}

unint64_t sub_100580F1C()
{
  unint64_t result = qword_100A484D0;
  if (!qword_100A484D0)
  {
    sub_100440798(&qword_100A484A8);
    sub_1005803B4(&qword_100A484D8, &qword_100A484A0, &qword_100A484E0, &qword_100A48498);
    sub_100583000(&qword_100A480A0, &qword_100A48060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A484D0);
  }
  return result;
}

unint64_t sub_100580FD8()
{
  unint64_t result = qword_100A48510;
  if (!qword_100A48510)
  {
    sub_100440798(&qword_100A48508);
    sub_1005803B4(&qword_100A48518, &qword_100A484F8, &qword_100A48520, &qword_100A484F0);
    sub_1005804EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48510);
  }
  return result;
}

uint64_t sub_100581078()
{
  return sub_1005813F0((uint64_t)"Error cleaning up orphaned IDSQuerySDDevices: %@");
}

uint64_t sub_100581088()
{
  return (*(uint64_t (**)(BOOL))(v0 + 24))(*(void *)(v0 + 16) == 0);
}

unint64_t sub_1005810BC()
{
  unint64_t result = qword_100A485D8;
  if (!qword_100A485D8)
  {
    sub_100440798(&qword_100A485D0);
    sub_1005803B4(&qword_100A485E0, &qword_100A485C0, &qword_100A485E8, &qword_100A485B8);
    sub_100583000(&qword_100A485F0, &qword_100A485B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A485D8);
  }
  return result;
}

uint64_t sub_10058117C()
{
  swift_errorRelease();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005811C4()
{
  return sub_1005811D0("Error saving donated handles for offgrid delivery: %@");
}

uint64_t sub_1005811D0(char *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 32);
  if (!*(void *)(v1 + 16)) {
    return v2(1);
  }
  swift_errorRetain();
  swift_errorRetain();
  swift_errorRetain();
  id v4 = sub_100725EB0();
  os_log_type_t v5 = sub_1007266C0();
  if (os_log_type_enabled(v4, v5))
  {
    format = a1;
    id v6 = (uint8_t *)swift_slowAlloc();
    unint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)id v6 = 138412290;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    sub_100726830();
    void *v7 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, format, v6, 0xCu);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
  }
  v2(0);
  return swift_errorRelease();
}

uint64_t sub_100581394()
{
  swift_errorRelease();

  if (*(void *)(v0 + 32)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1005813E4()
{
  return sub_1005813F0((uint64_t)"Error saving key roll index: %@");
}

uint64_t sub_1005813F0(uint64_t result)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v1 + 32);
  if (*(void *)(v1 + 16))
  {
    id v3 = (const char *)result;
    swift_errorRetain();
    swift_errorRetain();
    swift_errorRetain();
    id v4 = sub_100725EB0();
    os_log_type_t v5 = sub_1007266C0();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      unint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)id v6 = 138412290;
      swift_errorRetain();
      uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
      sub_100726830();
      void *v7 = v8;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, v3, v6, 0xCu);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!v2) {
        return swift_errorRelease();
      }
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      if (!v2) {
        return swift_errorRelease();
      }
    }
    v2(0);
    return swift_errorRelease();
  }
  if (v2) {
    return v2(1);
  }
  return result;
}

unint64_t sub_1005815C0()
{
  unint64_t result = qword_100A48648;
  if (!qword_100A48648)
  {
    sub_100440798(&qword_100A48640);
    sub_100580D5C(&qword_100A48650, &qword_100A48630, (void (*)(void))sub_100581670);
    sub_100580914();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48648);
  }
  return result;
}

unint64_t sub_100581670()
{
  unint64_t result = qword_100A48658;
  if (!qword_100A48658)
  {
    sub_100440798(&qword_100A48628);
    sub_1005803B4(&qword_100A483A8, &qword_100A48310, &qword_100A482E0, &qword_100A48218);
    sub_100583000(&qword_100A480A0, &qword_100A48060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48658);
  }
  return result;
}

uint64_t sub_10058172C(uint64_t a1)
{
  return sub_10057C344(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_10055BFF0);
}

unint64_t sub_100581744()
{
  unint64_t result = qword_100A48690;
  if (!qword_100A48690)
  {
    sub_100440798(&qword_100A48688);
    sub_1005815C0();
    sub_1005817C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48690);
  }
  return result;
}

unint64_t sub_1005817C0()
{
  unint64_t result = qword_100A48698;
  if (!qword_100A48698)
  {
    sub_100440798(&qword_100A48678);
    sub_1005803B4(&qword_100A482D8, &qword_100A48220, &qword_100A482E0, &qword_100A48218);
    sub_10058185C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48698);
  }
  return result;
}

unint64_t sub_10058185C()
{
  unint64_t result = qword_100A486A0;
  if (!qword_100A486A0)
  {
    sub_100440798(&qword_100A48670);
    sub_10049ED64();
    sub_10049ECA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A486A0);
  }
  return result;
}

uint64_t sub_1005818D8()
{
  swift_errorRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100581940()
{
  uint64_t v1 = (void (*)(uint64_t))v0[7];
  if (v0[2])
  {
    uint64_t v2 = (void *)v0[5];
    id v3 = (void *)v0[6];
    swift_errorRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    id v4 = v2;
    id v5 = v3;
    swift_errorRetain();
    swift_bridgeObjectRetain();
    id v6 = v4;
    id v7 = v5;
    uint64_t v8 = sub_100725EB0();
    os_log_type_t v9 = sub_1007266C0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      uint64_t v11 = (void *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 136315906;
      swift_bridgeObjectRetain();
      os_log_type_t type = v9;
      uint64_t v12 = sub_100726580();
      unint64_t v14 = v13;
      swift_bridgeObjectRelease();
      sub_10043E578(v12, v14, &v19);
      sub_100726830();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v10 + 12) = 2112;
      id v15 = v6;
      sub_100726830();
      *uint64_t v11 = v6;

      *(_WORD *)(v10 + 22) = 2112;
      id v16 = v7;
      sub_100726830();
      v11[1] = v7;

      *(_WORD *)(v10 + 32) = 2112;
      swift_errorRetain();
      uint64_t v18 = _swift_stdlib_bridgeErrorToNSError();
      sub_100726830();
      v11[2] = v18;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, type, "Failed to mark keyIDs: %s as didSend for senderURI: %@ receiverURI: %@ error: %@", (uint8_t *)v10, 0x2Au);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!v1) {
        goto LABEL_9;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
      if (!v1)
      {
LABEL_9:
        swift_errorRelease();
        return;
      }
    }
    v1(0);
    goto LABEL_9;
  }
  if (v1) {
    v1(1);
  }
}

uint64_t sub_100581C8C()
{
  swift_errorRelease();

  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 64, 7);
}

void sub_100581CEC()
{
  uint64_t v1 = (void (*)(void))v0[6];
  if (v0[2])
  {
    uint64_t v2 = (void *)v0[5];
    swift_errorRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    id v3 = v2;
    swift_errorRetain();
    swift_bridgeObjectRetain();
    id v4 = v3;
    id v5 = sub_100725EB0();
    os_log_type_t v6 = sub_1007266C0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315650;
      swift_bridgeObjectRetain();
      uint64_t v9 = sub_100726580();
      unint64_t v13 = v1;
      unint64_t v11 = v10;
      swift_bridgeObjectRelease();
      sub_10043E578(v9, v11, &v15);
      sub_100726830();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v7 + 12) = 2112;
      id v12 = v4;
      sub_100726830();
      *uint64_t v8 = v4;

      *(_WORD *)(v7 + 22) = 2112;
      swift_errorRetain();
      uint64_t v14 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v1 = v13;
      sub_100726830();
      v8[1] = v14;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed to mark keyIDs %s as certified delivered for receiverPushToken %@ error: %@", (uint8_t *)v7, 0x20u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      if (!v13) {
        goto LABEL_9;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_errorRelease();
      swift_errorRelease();
      if (!v1)
      {
LABEL_9:
        swift_errorRelease();
        return;
      }
    }
    v1(0);
    goto LABEL_9;
  }
  if (v1) {
    v1(1);
  }
}

unint64_t sub_100581FE0()
{
  unint64_t result = qword_100A486D8;
  if (!qword_100A486D8)
  {
    sub_100440798(&qword_100A486D0);
    sub_1005803B4(&qword_100A486E0, &qword_100A486C8, &qword_100A48460, &qword_100A48430);
    sub_100583000(&qword_100A486E8, &qword_100A486C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A486D8);
  }
  return result;
}

unint64_t sub_10058209C()
{
  unint64_t result = qword_100A48708;
  if (!qword_100A48708)
  {
    sub_100440798(&qword_100A48700);
    sub_100581670();
    sub_100580914();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48708);
  }
  return result;
}

unint64_t sub_100582118()
{
  unint64_t result = qword_100A48718;
  if (!qword_100A48718)
  {
    sub_100440798(&qword_100A48710);
    sub_1005817C0();
    sub_100580914();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48718);
  }
  return result;
}

uint64_t sub_100582194(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1005821FC()
{
  unint64_t result = qword_100A48740;
  if (!qword_100A48740)
  {
    sub_100440798(&qword_100A48738);
    sub_1005815C0();
    sub_100580914();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48740);
  }
  return result;
}

unint64_t sub_100582278()
{
  unint64_t result = qword_100A48768;
  if (!qword_100A48768)
  {
    sub_100440798(&qword_100A48760);
    sub_1005822F4();
    sub_100580914();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48768);
  }
  return result;
}

unint64_t sub_1005822F4()
{
  unint64_t result = qword_100A48770;
  if (!qword_100A48770)
  {
    sub_100440798(&qword_100A48750);
    sub_100582370();
    sub_100581670();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48770);
  }
  return result;
}

unint64_t sub_100582370()
{
  unint64_t result = qword_100A48778;
  if (!qword_100A48778)
  {
    sub_100440798(&qword_100A48748);
    sub_100580718();
    sub_100581670();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48778);
  }
  return result;
}

unint64_t sub_1005823EC()
{
  unint64_t result = qword_100A48790;
  if (!qword_100A48790)
  {
    sub_100440798(&qword_100A48788);
    sub_100580718();
    sub_1005817C0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48790);
  }
  return result;
}

unint64_t sub_100582468()
{
  unint64_t result = qword_100A487F8;
  if (!qword_100A487F8)
  {
    sub_100440798(&qword_100A487F0);
    sub_1005824E4();
    sub_1005825A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A487F8);
  }
  return result;
}

unint64_t sub_1005824E4()
{
  unint64_t result = qword_100A48800;
  if (!qword_100A48800)
  {
    sub_100440798(&qword_100A487D0);
    sub_1005803B4(&qword_100A48808, &qword_100A487C8, &qword_100A48810, &qword_100A487C0);
    sub_100583000(&qword_100A480A0, &qword_100A48060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48800);
  }
  return result;
}

unint64_t sub_1005825A0()
{
  unint64_t result = qword_100A48818;
  if (!qword_100A48818)
  {
    sub_100440798(&qword_100A487B8);
    sub_1005803B4(&qword_100A48820, &qword_100A487B0, &qword_100A48810, &qword_100A487C0);
    sub_1005804EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48818);
  }
  return result;
}

unint64_t sub_10058263C()
{
  unint64_t result = qword_100A48860;
  if (!qword_100A48860)
  {
    sub_100440798(&qword_100A48858);
    sub_100580D5C(&qword_100A48868, &qword_100A48848, (void (*)(void))sub_1005824E4);
    sub_1005826EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48860);
  }
  return result;
}

unint64_t sub_1005826EC()
{
  unint64_t result = qword_100A48870;
  if (!qword_100A48870)
  {
    sub_100440798(&qword_100A48840);
    sub_1005803B4(&qword_100A48878, &qword_100A48838, &qword_100A48810, &qword_100A487C0);
    sub_10058185C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48870);
  }
  return result;
}

unint64_t sub_100582788()
{
  unint64_t result = qword_100A488C0;
  if (!qword_100A488C0)
  {
    sub_100440798(&qword_100A488B8);
    sub_100580D5C(&qword_100A488C8, &qword_100A488A0, (void (*)(void))sub_100582838);
    sub_100580FD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A488C0);
  }
  return result;
}

unint64_t sub_100582838()
{
  unint64_t result = qword_100A488D0;
  if (!qword_100A488D0)
  {
    sub_100440798(&qword_100A48898);
    sub_1005803B4(&qword_100A488D8, &qword_100A48890, &qword_100A48520, &qword_100A484F0);
    sub_100583000(&qword_100A480A0, &qword_100A48060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A488D0);
  }
  return result;
}

unint64_t sub_1005828F4()
{
  unint64_t result = qword_100A488F8;
  if (!qword_100A488F8)
  {
    sub_100440798(&qword_100A488F0);
    sub_100580D5C(&qword_100A488C8, &qword_100A488A0, (void (*)(void))sub_100582838);
    sub_100582838();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A488F8);
  }
  return result;
}

unint64_t sub_1005829A4()
{
  unint64_t result = qword_100A48940;
  if (!qword_100A48940)
  {
    sub_100440798(&qword_100A48938);
    sub_100582A20();
    sub_100582B38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48940);
  }
  return result;
}

unint64_t sub_100582A20()
{
  unint64_t result = qword_100A48948;
  if (!qword_100A48948)
  {
    sub_100440798(&qword_100A48918);
    sub_1005828F4();
    sub_100582A9C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48948);
  }
  return result;
}

unint64_t sub_100582A9C()
{
  unint64_t result = qword_100A48950;
  if (!qword_100A48950)
  {
    sub_100440798(&qword_100A48910);
    sub_1005803B4(&qword_100A48958, &qword_100A48908, &qword_100A48520, &qword_100A484F0);
    sub_10058185C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48950);
  }
  return result;
}

unint64_t sub_100582B38()
{
  unint64_t result = qword_100A48960;
  if (!qword_100A48960)
  {
    sub_100440798(&qword_100A48900);
    sub_100583000(&qword_100A482F8, &qword_100A48200);
    sub_100580FD8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48960);
  }
  return result;
}

unint64_t sub_100582BD4()
{
  unint64_t result = qword_100A48998;
  if (!qword_100A48998)
  {
    sub_100440798(&qword_100A48990);
    sub_1005803B4(&qword_100A489A0, &qword_100A48980, &qword_100A489A8, &qword_100A48978);
    sub_10058185C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48998);
  }
  return result;
}

unint64_t sub_100582C70()
{
  unint64_t result = qword_100A489D8;
  if (!qword_100A489D8)
  {
    sub_100440798(&qword_100A489D0);
    sub_100582CEC();
    sub_100582BD4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A489D8);
  }
  return result;
}

unint64_t sub_100582CEC()
{
  unint64_t result = qword_100A489E0;
  if (!qword_100A489E0)
  {
    sub_100440798(&qword_100A489C0);
    sub_1005803B4(&qword_100A489E8, &qword_100A489B8, &qword_100A489A8, &qword_100A48978);
    sub_100583000(&qword_100A480A0, &qword_100A48060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A489E0);
  }
  return result;
}

unint64_t sub_100582DA8()
{
  unint64_t result = qword_100A48A20;
  if (!qword_100A48A20)
  {
    sub_100440798(&qword_100A48A18);
    sub_100582E24();
    sub_100582B38();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48A20);
  }
  return result;
}

unint64_t sub_100582E24()
{
  unint64_t result = qword_100A48A28;
  if (!qword_100A48A28)
  {
    sub_100440798(&qword_100A48A08);
    sub_1005828F4();
    sub_100582EA0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48A28);
  }
  return result;
}

unint64_t sub_100582EA0()
{
  unint64_t result = qword_100A48A30;
  if (!qword_100A48A30)
  {
    sub_100440798(&qword_100A48A00);
    sub_1005807B4();
    sub_1005803B4(&qword_100A48958, &qword_100A48908, &qword_100A48520, &qword_100A484F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48A30);
  }
  return result;
}

uint64_t sub_100582F3C@<X0>(uint64_t *a1@<X8>)
{
  return sub_100545350(*(void *)(v1 + 16), a1);
}

unint64_t sub_100582F44()
{
  unint64_t result = qword_100A48A58;
  if (!qword_100A48A58)
  {
    sub_100440798(&qword_100A48A50);
    sub_1005803B4(&qword_100A48A60, &qword_100A48A48, &qword_100A481D0, &qword_100A481A0);
    sub_100583000(&qword_100A48A68, &qword_100A48A40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48A58);
  }
  return result;
}

uint64_t sub_100583000(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100440798(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100583074()
{
  return sub_10058315C(5u);
}

void sub_10058307C()
{
  uint64_t v1 = *(void (**)(void, id))(v0 + 16);
  sub_100517914();
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_1005178B0(5u);
  id v3 = objc_allocWithZone((Class)NSError);
  NSString v4 = sub_100726420();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithDomain:v4 code:v2 userInfo:0];

  id v6 = v5;
  v1(0, v5);
}

uint64_t sub_100583154()
{
  return sub_10058315C(0);
}

uint64_t sub_10058315C(unsigned __int8 a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t, id))(v1 + 24);
  if (!*(void *)(v1 + 16)) {
    return v2(1, 0);
  }
  swift_errorRetain();
  sub_100517914();
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1005178B0(a1);
  sub_100431F80(&qword_100A45660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100794E30;
  *(void *)(inited + 32) = sub_100726430();
  *(void *)(inited + 40) = v6;
  swift_getErrorValue();
  *(void *)(inited + 72) = v14;
  uint64_t v7 = sub_10044D5C4((uint64_t *)(inited + 48));
  (*(void (**)(uint64_t *))(*(void *)(v14 - 8) + 16))(v7);
  sub_10046ECE8(inited);
  id v8 = objc_allocWithZone((Class)NSError);
  NSString v9 = sub_100726420();
  swift_bridgeObjectRelease();
  Class isa = sub_100726380().super.isa;
  swift_bridgeObjectRelease();
  id v11 = [v8 initWithDomain:v9 code:v4 userInfo:isa];

  id v12 = v11;
  v2(0, v11);

  return swift_errorRelease();
}

uint64_t sub_10058332C()
{
  return sub_10058315C(2u);
}

uint64_t sub_100583338()
{
  return sub_10058315C(4u);
}

uint64_t sub_100583344()
{
  return sub_10058315C(1u);
}

uint64_t sub_10058334C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100541CAC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_100583354@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100542294(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_10058335C()
{
  unint64_t result = qword_100A48AB8;
  if (!qword_100A48AB8)
  {
    sub_100440798(&qword_100A48AA0);
    sub_100580B78();
    sub_1005803B4(&qword_100A488D8, &qword_100A48890, &qword_100A48520, &qword_100A484F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48AB8);
  }
  return result;
}

unint64_t sub_1005833F8()
{
  unint64_t result = qword_100A48AE0;
  if (!qword_100A48AE0)
  {
    sub_100440798(&qword_100A48AC8);
    sub_100580B78();
    sub_1005803B4(&qword_100A484D8, &qword_100A484A0, &qword_100A484E0, &qword_100A48498);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48AE0);
  }
  return result;
}

uint64_t sub_100583498@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_100540568(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_1005834A4(uint64_t a1)
{
  return sub_1005834BC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_100540C34);
}

uint64_t sub_1005834BC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

unint64_t sub_1005834D4()
{
  unint64_t result = qword_100A48B00;
  if (!qword_100A48B00)
  {
    sub_100440798(&qword_100A48AF8);
    sub_100583550();
    sub_100582838();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48B00);
  }
  return result;
}

unint64_t sub_100583550()
{
  unint64_t result = qword_100A48B08;
  if (!qword_100A48B08)
  {
    sub_100440798(&qword_100A48AF0);
    sub_10058335C();
    sub_100582838();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48B08);
  }
  return result;
}

unint64_t sub_1005835CC()
{
  unint64_t result = qword_100A48B20;
  if (!qword_100A48B20)
  {
    sub_100440798(&qword_100A48B18);
    sub_1005833F8();
    sub_100580F1C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48B20);
  }
  return result;
}

uint64_t sub_10058364C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1005467CC(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_100583670@<X0>(uint64_t *a1@<X8>)
{
  return sub_10053F240(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100583678@<X0>(uint64_t *a1@<X8>)
{
  return sub_10053F584(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_100583680@<X0>(uint64_t *a1@<X8>)
{
  return sub_10053F8C8(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_10058368C()
{
  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1005836CC()
{
  return sub_10058315C(3u);
}

uint64_t sub_1005836D4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_10053E3F0(a1, *(void (**)(char *, void, uint64_t))(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1005836DC(uint64_t a1)
{
  return sub_10057F158(a1);
}

unint64_t sub_1005837DC(uint64_t a1)
{
  return sub_10057F1C8(a1);
}

uint64_t sub_100583848(uint64_t a1)
{
  return sub_10057C220(a1);
}

uint64_t sub_100583860(uint64_t a1)
{
  return sub_10057C288(a1);
}

uint64_t sub_100583878(uint64_t a1)
{
  return sub_10057C3B0(a1);
}

uint64_t sub_100583890(uint64_t a1)
{
  return sub_10057F224(a1);
}

unint64_t sub_1005838A8(uint64_t a1)
{
  return sub_10057F1F8(a1);
}

void sub_1005838C0(uint64_t a1)
{
}

uint64_t sub_1005838D8(uint64_t a1)
{
  return sub_10057EC2C(a1);
}

uint64_t sub_1005838F0(uint64_t a1)
{
  return sub_100579B00(a1);
}

void sub_100583908(uint64_t a1)
{
}

uint64_t sub_100583948(mach_port_t a1, unsigned int a2, uint64_t a3, unsigned int a4, unint64_t *a5, void *a6, unsigned int *a7)
{
  int v18 = 1;
  uint64_t v19 = a3;
  int v20 = 16777472;
  unsigned int v21 = a4;
  NDR_record_t v22 = NDR_record;
  unint64_t v23 = __PAIR64__(a4, a2);
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v12 = mach_msg(&msg, 3, 0x3Cu, 0x48u, reply_port, 0, 0);
  uint64_t v13 = v12;
  if ((v12 - 268435458) <= 0xE && ((1 << (v12 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v13;
  }
  if (v12)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v13;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v15 = 4294966988;
  }
  else if (msg.msgh_id == 1300)
  {
    if ((msg.msgh_bits & 0x80000000) != 0)
    {
      uint64_t v15 = 4294966996;
      if (v18 == 1 && msg.msgh_size == 64 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
      {
        unsigned int v16 = v21;
        if (v21 == v24)
        {
          *a5 = v23;
          *a6 = v19;
          *a7 = v16;
          return 0;
        }
      }
    }
    else if (msg.msgh_size == 36)
    {
      uint64_t v15 = 4294966996;
      if (HIDWORD(v19))
      {
        if (msg.msgh_remote_port) {
          uint64_t v15 = 4294966996;
        }
        else {
          uint64_t v15 = HIDWORD(v19);
        }
      }
    }
    else
    {
      uint64_t v15 = 4294966996;
    }
  }
  else
  {
    uint64_t v15 = 4294966995;
  }
  mach_msg_destroy(&msg);
  return v15;
}

uint64_t sub_100583B40(mach_port_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = 1;
  uint64_t v12 = a4;
  int v13 = 16777472;
  int v14 = a5;
  NDR_record_t v15 = NDR_record;
  int v16 = a2;
  uint64_t v17 = a3;
  int v18 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v7 = mach_msg(&msg, 3, 0x44u, 0x2Cu, reply_port, 0, 0);
  uint64_t v8 = v7;
  if ((v7 - 268435458) <= 0xE && ((1 << (v7 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v8;
  }
  if (v7)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v8;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v8 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v8;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v8 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v8 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v8 = HIDWORD(v12);
  if (HIDWORD(v12)) {
    goto LABEL_17;
  }
  return v8;
}

uint64_t sub_100583CBC(mach_port_t a1, int a2, uint64_t a3, uint64_t a4, int a5, void *a6, _DWORD *a7)
{
  int v17 = 1;
  uint64_t v18 = a4;
  int v19 = 16777472;
  int v20 = a5;
  NDR_record_t v21 = NDR_record;
  int v22 = a2;
  uint64_t v23 = a3;
  int v24 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x44u, 0x40u, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) <= 0xE && ((1 << (v11 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v12;
  }
  if (v11)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v12;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v14 = 4294966988;
  }
  else if (msg.msgh_id == 1302)
  {
    if ((msg.msgh_bits & 0x80000000) != 0)
    {
      uint64_t v14 = 4294966996;
      if (v17 == 1 && msg.msgh_size == 56 && !msg.msgh_remote_port && HIBYTE(v19) == 1)
      {
        int v15 = v20;
        if (v20 == v22)
        {
          *a6 = v18;
          *a7 = v15;
          return 0;
        }
      }
    }
    else if (msg.msgh_size == 36)
    {
      uint64_t v14 = 4294966996;
      if (HIDWORD(v18))
      {
        if (msg.msgh_remote_port) {
          uint64_t v14 = 4294966996;
        }
        else {
          uint64_t v14 = HIDWORD(v18);
        }
      }
    }
    else
    {
      uint64_t v14 = 4294966996;
    }
  }
  else
  {
    uint64_t v14 = 4294966995;
  }
  mach_msg_destroy(&msg);
  return v14;
}

uint64_t sub_100583EB0(mach_port_t a1, unsigned int a2, uint64_t a3)
{
  NDR_record_t v9 = NDR_record;
  unsigned int v10 = a2;
  uint64_t v11 = a3;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v5 = mach_msg(&msg, 3, 0x2Cu, 0x2Cu, reply_port, 0, 0);
  uint64_t v6 = v5;
  if ((v5 - 268435458) <= 0xE && ((1 << (v5 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v6;
  }
  if (v5)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v6;
  }
  else
  {
    if (msg.msgh_id == 71)
    {
      uint64_t v6 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      uint64_t v6 = 4294966996;
      if ((msg.msgh_bits & 0x80000000) == 0 && msg.msgh_size == 36 && !msg.msgh_remote_port)
      {
        uint64_t v6 = v10;
        if (!v10) {
          return v6;
        }
      }
    }
    else
    {
      uint64_t v6 = 4294966995;
    }
    mach_msg_destroy(&msg);
    return v6;
  }
}

uint64_t sub_100584004(uint64_t a1)
{
  uint64_t v1 = *(&off_1009913B0
       + ((91 * ((dword_100A48B90 + dword_100A48B88) ^ 0x70)) ^ byte_10079A4D0[byte_10079AED0[(91 * ((dword_100A48B90 + dword_100A48B88) ^ 0x70))] ^ 0x94])
       + 8);
  uint64_t v2 = *(&off_1009913B0
       + ((91 * (*v1 ^ dword_100A48B90 ^ 0x70)) ^ byte_10079AAD0[byte_10079A6D0[(91 * (*v1 ^ dword_100A48B90 ^ 0x70))] ^ 0x39])
       - 222);
  uint64_t v3 = *v2 - *v1 - (void)&v9;
  *uint64_t v1 = 1822798427 * v3 + 0x6E6E655B55E8ACD0;
  *uint64_t v2 = 1822798427 * (v3 ^ 0x8EC5F3EEF9E6FF70);
  uint64_t v4 = (uint64_t)*(&off_1009913B0
                + ((91 * ((dword_100A48B90 + dword_100A48B88) ^ 0x70)) ^ byte_10079AAD0[byte_10079A6D0[(91 * ((dword_100A48B90 + dword_100A48B88) ^ 0x70))] ^ 0xB1])
                - 99);
  uint64_t v5 = *(void *)(v4 + 120);
  unint64_t v6 = 942846689 * ((unint64_t)&v10 ^ 0x2DF4282E8CBBA516);
  int v10 = v6 ^ 0xF067FA72;
  uint64_t v11 = a1;
  unint64_t v12 = v5 ^ v6;
  unsigned __int8 v7 = 91 * ((*(_DWORD *)v2 + *(_DWORD *)v1) ^ 0x70);
  (*(void (**)(int *))(v4 + 8
                                     * ((byte_10079ACD0[byte_10079A9D8[v7 - 8] ^ 0x89] ^ v7) - 29)))(&v10);
  return v13;
}

uint64_t sub_1005841F0(uint64_t a1)
{
  uint64_t v1 = (uint64_t)*(&off_1009913B0
                + ((91 * (dword_100A48B80 ^ 0x70 ^ dword_100A48B90)) ^ byte_10079ABD0[byte_10079A7D0[(91 * (dword_100A48B80 ^ 0x70 ^ dword_100A48B90))] ^ 0xB5])
                - 155);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (unint64_t *)*(&off_1009913B0
                           + ((91 * ((dword_100A48B90 - v2) ^ 0x70)) ^ byte_10079A3D0[byte_10079ADD0[(91 * ((dword_100A48B90 - v2) ^ 0x70))] ^ 0xAA])
                           - 63);
  unint64_t v4 = 1822798427 * ((unint64_t)&v10[*v3 ^ v2] ^ 0x8EC5F3EEF9E6FF70);
  *(void *)(v1 - 4) = v4;
  unint64_t *v3 = v4;
  uint64_t v5 = (uint64_t)*(&off_1009913B0
                + ((91 * ((dword_100A48B90 - dword_100A48B80) ^ 0x70)) ^ byte_10079A4D0[byte_10079AED0[(91 * ((dword_100A48B90 - dword_100A48B80) ^ 0x70))] ^ 0x52])
                - 196);
  uint64_t v6 = *(void *)(v5 + 248);
  unint64_t v7 = 942846689
     * ((((unint64_t)&v11 | 0xDBD392286209E2F0)
       - ((unint64_t)&v11 | 0x242C6DD79DF61D0FLL)
       + 0x242C6DD79DF61D0FLL) ^ 0xF627BA06EEB247E6);
  int v11 = v7 ^ 0xF067FA72;
  uint64_t v12 = a1;
  unint64_t v13 = v6 ^ v7;
  unsigned __int8 v8 = 91 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0x70);
  (*(void (**)(int *))(v5
                                + 8
                                * ((byte_10079A8DC[(byte_10079A5DC[v8 - 12] ^ 0x24) - 12] ^ v8)
                                 + 68)))(&v11);
  return v14;
}

void sub_100584418(uint64_t a1)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1005844D4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 1531033816) & 0x6AD9BE7F) + 27) * (v2 != 0)) ^ (a1 + v1 - 13))))();
}

uint64_t sub_100584514()
{
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 61)))(v2);
  *(_DWORD *)(v1 + 24) = 0;
  return result;
}

void sub_1005846AC(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = !v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100584708(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = *(void *)(v5 + 16);
  unsigned int v18 = 1829790799
      * (((&v16 | 0xD30D353F) - &v16 + (&v16 & 0x2CF2CAC0)) ^ 0x11C49574)
      + 463207035;
  int v17 = v12;
  (*(void (**)(int *))(v5 + 528))(&v16);
  v12[0] = *(void *)(v5 + 280);
  v12[1] = a1;
  int v13 = a2;
  v12[2] = a3;
  uint64_t v14 = a4;
  uint64_t v15 = a5;
  unsigned int v18 = 1829790799
      * ((((&v16 | 0xC30BD196) ^ 0xFFFFFFFE) - (~&v16 | 0x3CF42E69)) ^ 0xFE3D8E22)
      + 463207035;
  int v17 = v12;
  (*(void (**)(int *))(v5 + 528))(&v16);
  return (v16 - 955058042);
}

void sub_10058483C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (646995413 * ((((2 * a1) | 0x8F18737E) - a1 + 947111489) ^ 0x534DB4D5));
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *(unsigned int *)*(&off_1009913B0 + (v1 ^ 0xA));
  strcpy(v6, "com.apple.absd");
  uint64_t v4 = (uint64_t)*(&off_1009913B0 + v1 + 2);
  int v5 = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 8 * (v1 ^ 0x69)))(v3, v6, v2);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10058495C()
{
  uint64_t v7 = *v5;
  uint64_t v9 = v4;
  strcpy(v10, "e.absinthed");
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v6 + 8 * (v3 ^ 0x59)))(v7, &v9, v1);
  if (result != v3 - 48) {
    int v2 = 955013739;
  }
  *(_DWORD *)(v0 + 4) = v2;
  return result;
}

void sub_1005849F4(uint64_t a1, uint64_t a2, int a3)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v5 = !v3 && a3 != 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_100584A58(uint64_t a1, uint64_t a2, int a3)
{
  v8[0] = *(void *)(v3 + 16);
  unsigned int v12 = 1829790799 * (&v10 ^ 0xC2C9A04B) + 463207035;
  int v11 = v8;
  (*(void (**)(int *))(v3 + 528))(&v10);
  v8[0] = *(void *)(v3 + 224);
  v8[1] = a1;
  v8[2] = a2;
  int v9 = a3;
  int v11 = v8;
  unsigned int v12 = 1829790799 * ((2 * (&v10 & 0x21EBD450) - &v10 + 1578380203) ^ 0x9CDD8BE0)
      + 463207035;
  (*(void (**)(int *))(v3 + 528))(&v10);
  return (v10 - 955058042);
}

void sub_100584B5C(uint64_t a1)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_100584C04()
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t (*)()))(v2 + 8 * (int)(v0 & 0xC4000437)))(*(void *)(v3 + 8 * (v0 ^ 0x1B9BFA72)) - 8, nullsub_38);
  *uint64_t v1 = -1133814153;
  return result;
}

void sub_100585D24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1) {
    BOOL v4 = a4 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = v4;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100585D98()
{
  return 4294923273;
}

void *sub_100585EB8(void *result)
{
  *uint64_t result = ++qword_100A52F80;
  return result;
}

uint64_t sub_100585ED4(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  NDR_record_t v34 = NDR_record;
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = *(_DWORD *)&v34.mig_vers;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_100586130(mach_port_t a1, unsigned int a2, long long *a3)
{
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  NDR_record_t v13 = NDR_record;
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_1005862C0(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  NDR_record_t v22 = NDR_record;
  *(_DWORD *)long long v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1005864B0(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (&_voucher_mach_msg_set)
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_10058662C(uint64_t a1)
{
  uint64_t v1 = (uint64_t)*(&off_1009960C0
                + ((63 * (dword_100A48C38 ^ 0x14 ^ qword_100A48C88)) ^ byte_1007AA1A0[byte_1007A68D0[(63 * (dword_100A48C38 ^ 0x14 ^ qword_100A48C88))] ^ 0x80])
                - 147);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = *(&off_1009960C0
       + ((63 * (v2 ^ qword_100A48C88 ^ 0x14)) ^ byte_1007A1070[byte_10079DCE0[(63 * (v2 ^ qword_100A48C88 ^ 0x14))] ^ 0x46])
       - 116);
  unint64_t v4 = v2 ^ (unint64_t)&v6 ^ *v3;
  *(void *)(v1 - 4) = 102320191 * v4 + 0x13BF99872E1822ECLL;
  void *v3 = 102320191 * (v4 ^ 0xEC406678D1E7DD14);
  uint64_t v8 = a1;
  v7[0] = (1374699841 * (((v7 | 0xFFAC606E) - (v7 & 0xFFAC606E)) ^ 0x92587867)) ^ 0x3D5;
  LOBYTE(v3) = 63 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0x14);
  (*((void (**)(_DWORD *))*(&off_1009960C0
                                     + ((63 * (dword_100A48C38 ^ 0x14 ^ qword_100A48C88)) ^ byte_1007A1170[byte_10079DDE0[(63 * (dword_100A48C38 ^ 0x14 ^ qword_100A48C88))] ^ 0xDC])
                                     + 72)
   + (byte_10079DEE0[byte_1007AA2A8[v3 - 8] ^ 2] ^ v3)
   + 2074))(v7);
  return v7[1];
}

uint64_t sub_10058682C(unsigned int a1)
{
  return byte_1007A1070[byte_10079DCE8[a1 - 8] ^ 0x46] ^ a1;
}

uint64_t sub_100586858(char a1, unsigned int a2)
{
  return byte_1007AA1A4[(byte_1007A68DC[a2 - 12] ^ a1) - 4] ^ a2;
}

uint64_t sub_100586884(unsigned int a1)
{
  return byte_10079DEE0[byte_1007AA2A8[a1 - 8] ^ 2] ^ a1;
}

uint64_t sub_1005868AC(char a1, unsigned int a2)
{
  return byte_1007A6AD4[(byte_1007A127C[a2 - 12] ^ a1) - 4] ^ a2;
}

uint64_t sub_1005868D8(unsigned int a1)
{
  return byte_1007AA1A4[(byte_1007A68DC[a1 - 12] ^ 0xF3) - 4] ^ a1;
}

uint64_t sub_100586908(unsigned int a1)
{
  return byte_1007A1170[byte_10079DDE8[a1 - 8] ^ 0xDC] ^ a1;
}

uint64_t sub_100586934(unsigned int a1)
{
  return byte_1007A6AD4[(byte_1007A127C[a1 - 12] ^ 0xF1) - 4] ^ a1;
}

uint64_t sub_100586964(unsigned int a1)
{
  return byte_1007A6AD4[(byte_1007A127C[a1 - 12] ^ 0xC4) - 4] ^ a1;
}

uint64_t sub_100586994(uint64_t a1)
{
  uint64_t v1 = (uint64_t)*(&off_1009960C0
                + ((63 * (dword_100A497F0 ^ 0x14 ^ qword_100A48C88)) ^ byte_1007AA1A0[byte_1007A68D0[(63 * (dword_100A497F0 ^ 0x14 ^ qword_100A48C88))] ^ 0x80])
                - 220);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = (unint64_t *)*(&off_1009960C0
                           + (byte_1007A6AD0[byte_1007A1270[(63
                                                                                             * ((qword_100A48C88 - v2) ^ 0x14))] ^ 0xF1] ^ (63 * ((qword_100A48C88 - v2) ^ 0x14)))
                           - 85);
  unint64_t v4 = 102320191 * ((v2 - (void)&v6 + *v3) ^ 0xEC406678D1E7DD14);
  *(void *)(v1 - 4) = v4;
  unint64_t *v3 = v4;
  unsigned int v7 = 628203409 * ((&v7 & 0x3596BDD7 | ~(&v7 | 0x3596BDD7)) ^ 0x48E14E1B) + 1690;
  uint64_t v8 = a1;
  LOBYTE(v3) = 63 * (*(_DWORD *)(v1 - 4) ^ 0x14 ^ *(_DWORD *)v3);
  return (*((uint64_t (**)(unsigned int *))*(&off_1009960C0
                                                     + ((63
                                                                        * ((qword_100A48C88 + dword_100A497F0) ^ 0x14)) ^ byte_1007AA1A0[byte_1007A68D0[(63 * ((qword_100A48C88 + dword_100A497F0) ^ 0x14))] ^ 0xF3])
                                                     - 73)
          + (v3 ^ byte_1007A6AD0[byte_1007A1270[v3] ^ 0x3B])
          + 1971))(&v7);
}

uint64_t sub_100586B70(char a1, unsigned int a2)
{
  return byte_1007A1070[(byte_10079DCE8[a2 - 8] ^ a1)] ^ a2;
}

uint64_t sub_100586B9C(unsigned int a1)
{
  return byte_1007A1170[byte_10079DDE8[a1 - 8] ^ 0x87] ^ a1;
}

uint64_t sub_100586BC8(char a1, unsigned int a2)
{
  return byte_10079DEE0[(byte_1007AA2A8[a2 - 8] ^ a1)] ^ a2;
}

uint64_t sub_100586BF4(unsigned int a1)
{
  return byte_1007AA3A8[(byte_1007A69D4[a1 - 4] ^ 0x5E) - 8] ^ a1;
}

uint64_t sub_100586C24(unsigned int a1)
{
  return byte_1007AA1A4[(byte_1007A68DC[a1 - 12] ^ 0xFD) - 4] ^ a1;
}

uint64_t sub_100586C54(unsigned int a1)
{
  return byte_1007A6AD4[(byte_1007A127C[a1 - 12] ^ 0x51) - 4] ^ a1;
}

uint64_t sub_100586C84(unsigned int a1)
{
  return byte_1007AA1A4[(byte_1007A68DC[a1 - 12] ^ 0xAA) - 4] ^ a1;
}

uint64_t sub_100586CB4(unsigned int a1)
{
  return byte_1007AA1A4[(byte_1007A68DC[a1 - 12] ^ 0x80) - 4] ^ a1;
}

uint64_t sub_100586CE0(uint64_t a1)
{
  uint64_t v1 = *(&off_1009960C0
       + ((63 * (dword_100A48BD8 ^ 0x14 ^ qword_100A48C88)) ^ byte_1007A1070[byte_10079DCE0[(63 * (dword_100A48BD8 ^ 0x14 ^ qword_100A48C88))] ^ 0x46])
       - 136);
  unsigned __int8 v2 = 63 * (*v1 ^ qword_100A48C88 ^ 0x14);
  uint64_t v3 = *(&off_1009960C0 + (byte_10079DEE0[byte_1007AA2A8[v2 - 8] ^ 2] ^ v2) + 29);
  unint64_t v4 = (unint64_t)&v6[*v3 ^ *v1];
  *uint64_t v1 = 102320191 * v4 + 0x17632197ED3107ECLL;
  void *v3 = 102320191 * (v4 ^ 0xEC406678D1E7DD14);
  unsigned int v8 = 681 - 1374699841 * ((&v7 - 1470159516 - 2 * (&v7 & 0xA85F2564)) ^ 0xC5AB3D6D);
  uint64_t v7 = a1;
  LOBYTE(v3) = 63 * ((*(_DWORD *)v3 + *(_DWORD *)v1) ^ 0x14);
  return (*((uint64_t (**)(uint64_t *))*(&off_1009960C0
                                                + ((63
                                                                                 * ((qword_100A48C88 - dword_100A48BD8) ^ 0x14)) ^ byte_1007A6AD0[byte_1007A1270[(63 * ((qword_100A48C88 - dword_100A48BD8) ^ 0x14))] ^ 0x83])
                                                + 35)
          + (byte_1007A6AD4[(byte_1007A127C[v3 - 12] ^ 0x51)
                                                         - 4] ^ v3)
          + 2002))(&v7);
}

uint64_t sub_100586ED8(char a1, unsigned int a2)
{
  return byte_1007A1170[(byte_10079DDE8[a2 - 8] ^ a1)] ^ a2;
}

uint64_t sub_100586F04(unsigned int a1)
{
  return byte_1007AA1A4[(byte_1007A68DC[a1 - 12] ^ 0xE0) - 4] ^ a1;
}

uint64_t sub_100586F30(char a1, unsigned int a2)
{
  return byte_1007AA3A8[(byte_1007A69D4[a2 - 4] ^ a1) - 8] ^ a2;
}

uint64_t sub_100586F5C(unsigned int a1)
{
  return byte_1007A6AD4[(byte_1007A127C[a1 - 12] ^ 0x3B) - 4] ^ a1;
}

uint64_t sub_100586F8C(unsigned int a1)
{
  return byte_1007AA3A8[(byte_1007A69D4[a1 - 4] ^ 0x90) - 8] ^ a1;
}

uint64_t sub_100586FBC(unsigned int a1)
{
  return byte_1007A6AD4[(byte_1007A127C[a1 - 12] ^ 0x83) - 4] ^ a1;
}

uint64_t sub_100586FEC(unsigned int a1)
{
  return byte_10079DEE0[byte_1007AA2A8[a1 - 8] ^ 0x60] ^ a1;
}

uint64_t sub_100587014(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0x330904BA72E93EBCLL) - 919167634;
  int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x330904BA72E93EBCLL) - 919167634;
  int v4 = (v2 < -1575457360) ^ (v3 < -1575457360);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v5 = v2 < -1575457360;
  }
  int v1 = *(_DWORD *)(a1 + 24) ^ (1374699841 * ((2106847513 - (a1 | 0x7D93F119) + (a1 | 0x826C0EE6)) ^ 0xEF9816EF));
  return (*((uint64_t (**)(void))*(&off_1009960C0 + v1 - 841) + ((!v5 * (v1 - 922)) ^ v1) - 1))();
}

uint64_t sub_1005870F4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, _DWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v24 = 3804331 * ((2 * ((v23 - 136) & 0x41412018) - (v23 - 136) - 1094787101) ^ 0x44202CB5);
  *(_DWORD *)(v23 - 120) = v24 + v21 + 2008;
  int v27 = v21 ^ 0x46;
  *(void *)(v23 - 128) = a21;
  *(_DWORD *)(v23 - 136) = v24 + a1 - a14 + 700975938;
  *(_DWORD *)(v23 - 132) = v24 + ((a1 - 1071398615) & 0xFFFFFFF0) + 1116194086;
  int v28 = v21;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 + 2122)))(v23 - 136);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((32 * (*a15 != v27 - 25955645)) | ((*a15 != v27 - 25955645) << 6)) ^ v28)))(v25);
}

uint64_t sub_1005871E8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((1007
                                     * (v0 < ((((((v1 + 570445758) & 0xDDFFA9FF) - 469) | 0xC8) + 1451) ^ (((v1 + 570445758) & 0xDDFFA9FF) + 1876004110) & 0x902E77AF))) ^ (v1 + 570445758) & 0xDDFFA9FF)))();
}

uint64_t sub_100587250()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((491 * (STACK[0x3E8] != 0)) ^ (v0 + 548))))();
}

uint64_t sub_100587278()
{
  *(void *)(v1 + 336) = v0 + 1;
  int v3 = (uint64_t (*)(void))STACK[0x3F8];
  STACK[0x328] = v2 - 112;
  STACK[0x438] = v2 - 112;
  return v3();
}

uint64_t sub_10058729C(int8x16_t a1)
{
  int8x16_t v4 = (int8x16_t)vld1q_dup_f32((const float *)v2);
  v5.i64[0] = 0x8000000080000000;
  v5.i64[1] = 0x8000000080000000;
  a1.i32[0] = *(_DWORD *)(v2 + 4);
  a1.i32[1] = *(_DWORD *)(v2 + 4 * (((v1 + 837) ^ 0x30u) - 1069));
  a1.i32[2] = *(_DWORD *)(v2 + 12);
  int8x16_t v6 = vextq_s8(v4, a1, 0xCuLL);
  int8x16_t v7 = a1;
  v7.i32[3] = *(_DWORD *)(v2 + 16);
  int32x4_t v8 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v7, *(int8x16_t *)&STACK[0x300]), vandq_s8(v6, v5)), 1uLL), *(int8x16_t *)&STACK[0x2F0]);
  v9.i32[0] = *((_DWORD *)&STACK[0x608] + (*(_DWORD *)(v2 + 4) & 1));
  v9.i32[1] = *((_DWORD *)&STACK[0x608] + (*(_DWORD *)(v2 + 4 * (((v1 + 837) ^ 0x30u) - 1069)) & 1));
  v9.i32[2] = *((_DWORD *)&STACK[0x608] + (*(_DWORD *)(v2 + 12) & 1));
  v9.i32[3] = *((_DWORD *)&STACK[0x608] + (v7.i8[12] & 1));
  *(int8x16_t *)uint64_t v2 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v2 + 1588), v9), (int8x16_t)vdupq_n_s32(0x1DEECC44u)), (int8x16_t)vaddq_s32(vsubq_s32(v8, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v8, v8), *(int8x16_t *)&STACK[0x2E0])), vdupq_n_s32(0x3E21B62u)));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8 * (v1 + 837)))(32574897, 130299588, 502189124, 65149794);
}

void sub_1005872AC(uint64_t a1)
{
  int v1 = 3804331 * (((a1 | 0x841A70C4) - (a1 & 0x841A70C4)) ^ 0x7E848392);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0xD547898781B11B4) + 88882574;
  unsigned int v3 = *(_DWORD *)(a1 + 4) - v1 - 232110236;
  int v4 = (v3 < 0x34B20C7A) ^ (v2 < 0x34B20C7A);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = v3 < 0x34B20C7A;
  }
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1005873AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18, unint64_t *a19, unint64_t *a20,unint64_t *a21,unsigned int a22)
{
  a17 = (v25 - 1127) ^ (1374699841
                      * ((-328946516 - (&a17 | 0xEC64ACAC) + (&a17 | 0x139B5353)) ^ 0x7E6F4B5A));
  a19 = &STACK[0x27EFF0CD9F36B487];
  a20 = a14;
  (*(void (**)(unsigned int *))(v24 + 8 * (v25 + 190)))(&a17);
  a20 = v22;
  a21 = &STACK[0x749AC022234F2862];
  a19 = a14;
  a22 = (v25 - 360) ^ (1225351577
                     * ((&a17 + 1237682669 - 2 * (&a17 & 0x49C589ED)) ^ 0x6A5F51FB));
  (*(void (**)(unsigned int *))(v24 + 8 * (v25 ^ 0xF42)))(&a17);
  unsigned int v26 = 2 * &a17;
  a17 = (v25 - 1127) ^ (1374699841 * (((v26 | 0xAD106330) - &a17 - 1451766168) ^ 0x3B7C2991));
  a19 = &STACK[0x27EFF0CD9F36B497];
  a20 = a14;
  (*(void (**)(unsigned int *))(v24 + 8 * (v25 + 190)))(&a17);
  a19 = a14;
  a17 = v25 + 3804331 * (((v26 | 0x78F86528) - &a17 - 1014772372) ^ 0xC6E2C1C2) - 358;
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v24 + 8 * (v25 + 286)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * (((a18 == v23) * ((v25 ^ 0x45E) - 669)) ^ v25)))(v27);
}

uint64_t sub_1005875B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067 * ((100290236 - (&a11 | 0x5FA4EBC) + (&a11 | 0xFA05B143)) ^ 0x24C30C98);
  a15 = v19 ^ 0x7E88AEF6;
  a11 = &STACK[0x2AFF1EFB499E23D0];
  a12 = v17;
  a13 = (v18 + 726) ^ v19;
  a14 = &STACK[0x41D57A3C79D937FB];
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (int)(v18 + 1418)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((1318
                                              * (*(_DWORD *)(v17 - 0xD547898781B11A8) == (((v18 - 610) | 0x24A) ^ (v15 - 1572))
                                                                                         + ((v18 + 946823944) & 0xC7909EF9))) ^ v18)))(v20);
}

uint64_t sub_1005876CC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  BOOL v8 = a1 < v5;
  unint64_t v9 = a4 - 0xF6B6F01630B67C5;
  int v10 = v8 ^ (v9 < v5);
  BOOL v11 = v9 < a1;
  if (!v10) {
    BOOL v8 = v11;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v6 + a5 + 64) ^ v6 ^ 0x11) * v8) ^ a5)))();
}

uint64_t sub_100587744()
{
  uint64_t v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 + 52)))(1576, 2940923044);
  STACK[0x3E8] = v2;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 == 0) * ((v0 - 265) ^ 0x634 ^ ((v0 - 1911) | 0x50))) ^ v0)))();
}

uint64_t sub_1005877B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v29 - 104) = (v25 - 473) ^ (((((v29 - 128) | 0xA95C0B48) - (v29 - 128) + ((v29 - 128) & 0x56A3F4B0)) ^ 0xC4A81341)
                                        * v27);
  *(void *)(v29 - 112) = a24;
  *(void *)(v29 - 128) = v24;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v25 + 694)))(v29 - 128);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((761 * (*(_DWORD *)(v29 - 120) > v28 + ((v25 - 1430) | 0xA0u) + 3001)) ^ v25)))(v30);
}

uint64_t sub_100587858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,char a36,uint64_t a37,uint64_t a38,int a39,char a40)
{
  return sub_100587888(a1, a2, a3, &a40, a5, 164, &a36);
}

uint64_t sub_100587888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v48
                                                     + 8
                                                     * ((47
                                                       * (v47
                                                        + ((2 * a47) & 0x4A ^ 0xA)
                                                        + (a47 & 0x3F ^ 0x2AFFBCE8u)
                                                        - 61 < 0xFFFFFFC0)) ^ (v49 + 316))))(a1, 3573564188);
}

uint64_t sub_1005879A0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unsigned int v6 = (v3 ^ 0x37F ^ a2) + v4;
  int v7 = *(_DWORD *)((char *)&STACK[0x268] + (v6 & 0xFFFFFFFC) + 72);
  int v8 = a2 + v4;
  *(unsigned char *)(a1 + v6) = (HIBYTE(v7) ^ 0x86) + ~(2 * ((HIBYTE(v7) ^ 0x86) & 0x53 ^ HIBYTE(v7) & 1)) + 83;
  *(unsigned char *)(a1 + (v8 + 56)) = (BYTE2(v7) ^ 0xD9) + (~(2 * (BYTE2(v7) ^ 0xD9)) | 0x5B) + 83;
  *(unsigned char *)(a1 + (v8 + 57)) = (BYTE1(v7) ^ 0x19) - ((2 * (BYTE1(v7) ^ 0x19)) & 0xA4) + 82;
  *(unsigned char *)(a1 + (v8 + 58)) = v7 ^ 0x90;
  unsigned int v9 = LODWORD(STACK[0x2C4]) + 1501403660;
  BOOL v10 = v9 < v2;
  BOOL v11 = v4 + 445760340 < v9;
  if (v4 + 445760340 < v2 != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((1467 * v11) ^ v3)))();
}

uint64_t sub_100587AA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((a1 != (v2 ^ 0x27CACE31CE663B6ALL)) * (((v2 - 1988) | 0x581) ^ 0x5D0)) ^ v2)))();
}

uint64_t sub_100587B00(char a1, char a2, char a3, int a4, int8x16_t a5, int8x8_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  int v55 = a4 - 8;
  uint64_t v56 = (v54 + v55 + 8);
  v58.val[0].i64[0] = ((_BYTE)v54 + (_BYTE)v55 + 8) & 0xF;
  v58.val[0].i64[1] = (v48 + (_BYTE)v55 + 8) & 0xF;
  v58.val[1].i64[0] = (v53 + (_BYTE)v55 + 8) & 0xF;
  v58.val[1].i64[1] = (v49 + (_BYTE)v55 + a2 + 8) & 0xF;
  v58.val[2].i64[0] = (v52 + (_BYTE)v55 + 8) & 0xF;
  v58.val[2].i64[1] = (v51 + (_BYTE)v55 + 8) & 0xF;
  v58.val[3].i64[0] = (a3 + (_BYTE)v55 + 8) & 0xF;
  v58.val[3].i64[1] = (a1 + (_BYTE)v55 + 8) & 0xF;
  *(int8x8_t *)(a8 + v56) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v45 + (v56 & 0xF) - 7), *(int8x8_t *)(a8 + v56)), veor_s8(*(int8x8_t *)((v56 & 0xF) + v46 - 5), *(int8x8_t *)((v56 & 0xF) + v47 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v58, a5), a6)));
  return (*(uint64_t (**)(void))(a45 + 8 * ((v50 == v55) | (16 * (v50 == v55)) | a9)))();
}

uint64_t sub_100587B08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v78 = ((2 * (v72 & 0x44BCDB50) - v72 + 994256043) ^ 0xE5859970) * v73;
  *(_DWORD *)(v77 - 192) = v75 - v78 - 591;
  *(_DWORD *)(v77 - 188) = v78 ^ 0x4563513F;
  uint64_t v79 = (void *)(v77 - 192);
  v79[1] = a71;
  v79[2] = v74;
  v79[3] = a72;
  uint64_t v80 = (*(uint64_t (**)(uint64_t))(v76 + 8 * (v75 + 1255)))(v77 - 192);
  uint64_t v81 = *(uint64_t (**)(uint64_t))(v76
                                          + 8
                                          * (((*(_DWORD *)(v77 - 160) == -25955570)
                                            * (v75 - 745 + ((v75 - 809) | 0x40) + 66)) ^ v75));
  STACK[0x3C0] = (unint64_t)*(&off_1009960C0 + (v75 ^ 0x3AD)) - 4;
  return v81(v80);
}

uint64_t sub_100587BE8()
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((((v0 - 1640087656) < 0x38) * (((v2 + 160) | 0x64C) ^ 0xBA2)) ^ (v2 + 1330))))(82);
}

uint64_t sub_100587C38@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(_DWORD *)(*v6 + 4 * (v3 + v4 + 457)) = v7;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((v13 == (((((((v10 + a1) & a2) - 343) | v8) ^ v9) * v11) ^ (v5 + 660))) * v12) ^ (v10 + a1) & a2)))();
}

uint64_t sub_100587CA0()
{
  int v4 = *v3 - 184838590;
  int v5 = (v0 - 184838590 < -841128316) ^ (v4 < v2 - 841129115);
  BOOL v6 = v0 - 184838590 > v4;
  if (v5) {
    BOOL v7 = v0 - 184838590 < -841128316;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((v7 * (7 * (v2 ^ 0x33F) - 182)) ^ v2)))();
}

uint64_t sub_100587D14(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v5 + (v3 ^ a2)) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (int)(((v4 == 0) * a3) ^ v3)))();
}

uint64_t sub_100587D40@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, void))(v2 + 8 * ((11 * (v3 - 1491193923 >= 0)) ^ ((v4 - 306) | 0x351))))(a1, (a2 + 1));
}

uint64_t sub_100587D8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((a11 == v11 + ((v13 - 194037231) & 0xB90C5B8) - 1184) * (95 * (v13 ^ 0x4DC) + 51)) ^ v13)))();
}

void sub_100587DF4(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x330904BA72E93EB8) + 4 * (v5 + v3)) = v1
                                                                        - ((((v2 + 996) ^ 0x24A290CE) + 2 * v1) & v4)
                                                                        - 2064457658;
  *(_DWORD *)(a1 - 0x330904BA72E93EBCLL) = (((v5 + 1 + v3) * (v6 - 407875504)) ^ 0xDFFDFDFF)
                                         + 2028196419
                                         + ((2 * (v5 + 1 + v3) * (v6 - 407875504)) & 0xBFFBFBFE);
}

uint64_t sub_100587ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned char *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned char *a26,unsigned char *a27,unsigned char *a28,uint64_t a29,uint64_t a30,unsigned char *a31,unsigned char *a32,unsigned char *a33,uint64_t a34,unsigned char *a35,unsigned char *a36,unsigned char *a37,unsigned char *a38,uint64_t a39)
{
  uint64_t v44 = v42 ^ (v39 - 965) ^ 0x7ECBD5F8DC160E12;
  uint64_t v45 = (v44 - 0x19FCC9F86E0C69BCLL - 2 * (v44 & 0x6603360791F3964CLL ^ v42 & 8)) ^ a8;
  unint64_t v46 = v45 ^ 0x8ABB7B075CE8A96ELL;
  uint64_t v47 = v40 ^ (((a12 - 2126718133) | (unint64_t)(a13 << 32))
             + 0x58E9ED7E42B9E5A4
             - 2
             * (((a12 - 2126718133) | (unint64_t)(a13 << 32)) & 0x58E9ED7E42B9E5ACLL ^ ((_BYTE)a12 + 75) & 8));
  unint64_t v48 = v47 ^ 0xA173397C065C8DEALL;
  uint64_t v49 = v47 ^ 0x5E8CC683F9A37215;
  uint64_t v50 = ((v47 ^ 0x5E8CC683F9A37215) - 0x79B367DD5347DF42 - ((2 * (v47 ^ 0x5E8CC683F9A37215)) & 0xC9930455970417CLL)) ^ v41;
  uint64_t v51 = v50 ^ 0x629A61E2FE92CDE4;
  unint64_t v52 = v45 ^ 0x8ABB7B075CE8A96ELL ^ (v50 ^ 0x629A61E2FE92CDE4) & v48;
  unint64_t v53 = (v50 ^ 0x9D659E1D016D321BLL) & (v43 ^ 0xD8F7411343562F44) ^ v49 ^ v52;
  *((void *)&v54 + 1) = v53 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v54 = v53 ^ 0x8000000000000000;
  uint64_t v55 = v53 ^ __ROR8__(v53, 39) ^ (v54 >> 61);
  unint64_t v56 = v44 ^ v43 ^ 0xD8F7411343562F44;
  unint64_t v57 = (v45 ^ 0x754484F8A3175691) & v49 ^ v56;
  uint64_t v58 = v52 ^ 0xF38BFF733C051F6;
  uint64_t v59 = (v57 & 0x200000000 ^ 0x7FFA1A1FF3DE64E3) + 2 * (v57 & 0x200000000);
  uint64_t v60 = v59 - 0x7FFA1A1FF3DE64E3;
  uint64_t v61 = v59 - 0x51800004005A0080;
  unint64_t v62 = 0xAE74343BE762C946 - v59;
  if ((v60 & v58) == 0) {
    unint64_t v62 = v61;
  }
  unint64_t v63 = ((v58 + v62 - 0x2E7A1A1BF3846463) ^ (0x2E7A1A1BF3846463 - (v58 + v62)) ^ ((v57 & 0xFFFFFFFDFFFFFFFFLL)
                                                                                    - ((v58 + v62 - 0x2E7A1A1BF3846463) ^ v57 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v57 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v64 = v63 - ((2 * v63) & 0xEC72B624C4E1BF0ELL) - 0x9C6A4ED9D8F2079;
  *((void *)&v65 + 1) = (v63 - ((2 * v63) & 0xC4E1BF0E) + 1651564423) ^ 0xDF87;
  *(void *)&long long v65 = v64 ^ 0xF6395B1262700000;
  uint64_t v66 = ((v65 >> 19) - ((2 * (v65 >> 19)) & 0xEC72B624C4E1BF0ELL) - 0x9C6A4ED9D8F2079) ^ v64;
  unint64_t v67 = v66 & 0x88A7E47BC54E7E29 ^ ((v64 >> 28) ^ 0xF6395B126) & 0xBC54E7E29 | v66 & 0x77581B843AB181D6 ^ ((v64 >> 28) ^ 0xF6395B126) & 0x43AB181D6;
  uint64_t v68 = (v57 << 23) ^ (v57 >> 7) ^ ((v57 >> 41) | (v57 << 57)) ^ 0x1EC655AF97FB0312;
  uint64_t v69 = v57 ^ 0x2FCA489AFACED016 ^ (v68 - ((2 * v68) & 0x31E6DEDB550221C8) - 0x670C9092557EEF1CLL);
  unint64_t v70 = v69 ^ (v64 << 36) ^ v67;
  unint64_t v71 = v56 & (v43 ^ 0x2708BEECBCA9D0BBLL) ^ v51;
  unint64_t v72 = v71 ^ v43 ^ 0xD8F7411343562F44 ^ v46 & ~v56;
  unint64_t v73 = v72 ^ 0x5A0FD969021C7BD3 ^ ((((v72 >> 10) ^ (v72 >> 17) | (v72 << 54)) ^ 0xF5EC3F377C10F093)
                                    - 2
                                    * ((((v72 >> 10) ^ (v72 >> 17) | (v72 << 54)) ^ 0xF5EC3F377C10F093) & 0x6B903B5D29891C24 ^ ((v72 >> 10) ^ (v72 >> 17)) & 0x20)
                                    - 0x146FC4A2D676E3FCLL);
  unint64_t v74 = v73 & 0x4C1D4E44A4B3031DLL ^ ((v72 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | v73 & 0xB3E2B1BB5B4CFCE2 ^ ((v72 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  uint64_t v75 = v74 - 2 * (v74 & 0x35761BC11B31BEDELL ^ v73 & 0x14) - 0x4A89E43EE4CE4136;
  uint64_t v76 = v75 ^ (v69 - ((2 * v69) & 0x6AEC378236637D94) - 0x4A89E43EE4CE4136);
  unint64_t v77 = (v70 ^ 0xD8F2078FFFFFFFFFLL) & (v55 ^ 0x73AEE9E5E31DB145) ^ v76;
  unint64_t v78 = ((v77 >> 41) ^ (v77 >> 7) | (v77 << 57)) ^ (v77 << 23) ^ 0xF774B04353CE1CF4;
  uint64_t v79 = v78 - ((2 * v78) & 0x58FC1706E6627422) - 0x5381F47C8CCEC5EFLL;
  uint64_t v80 = v70 ^ 0x270DF87000000000;
  *((void *)&v65 + 1) = ~v71;
  *(void *)&long long v65 = v71 ^ 0x92CFC162FD513142;
  uint64_t v81 = v71 ^ 0x60E9C3C1F93EAC02 ^ (((v71 << 58) ^ 0xC00000000000000) - (v71 >> 2 << 61) - 0xDD9FD5CFB9062BFLL);
  uint64_t v82 = (v81 - ((2 * v81) & 0x95D1913FEDCA0E08) - 0x35173760091AF8FCLL) ^ (v65 >> 1) ^ ((v71 ^ 0x92CFC162FD513166) >> (v57 & 6 ^ 2) >> (v57 & 6 ^ 4));
  unint64_t v83 = v55 ^ 0xB946217A15F8B641;
  unint64_t v84 = v82 ^ v55 ^ 0xB946217A15F8B641;
  unint64_t v85 = (v75 ^ 0x4A89E43EE4CE4135) & v69 ^ v84;
  unint64_t v86 = v85 ^ v75 ^ ((v80 & ~v76) - ((2 * (v80 & ~v76)) & 0x6AEC378236637D94) - 0x4A89E43EE4CE4136);
  uint64_t v87 = (v86 >> 10) & 0x2000000000000;
  uint64_t v88 = v87 | 0x64291D17D413A399;
  BOOL v89 = (v87 & ~v86) == 0;
  unint64_t v90 = 0xC8523A2FA8274732 - (v87 | 0x64291D17D413A399);
  if (v89) {
    unint64_t v90 = v88;
  }
  unint64_t v91 = (v86 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v86 ^ 0x28FA59BDD48D0B6) - 0x64291D17D413A399 + v90);
  uint64_t v92 = ((v91 >> 38) & 0x2A35FE4) + (v91 >> 39) - 2 * ((v91 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v93 + 1) = v85 ^ v75 ^ ((v80 & ~v76)
                                                                 - ((2 * (v80 & ~v76)) & 0x36637D94)
                                                                 + 456244938) ^ 0xD0B6;
  *(void *)&long long v93 = v86 ^ 0x28FA59BDD480000;
  uint64_t v94 = (((v92 << 39) ^ (v86 << 54)) & 0xFFFFFF8000000000 | ((v92 ^ (v91 << 25)) >> 25)) ^ (v93 >> 17);
  unint64_t v95 = v80 ^ v84 & (v55 ^ 0x8C51161A1CE24EBALL);
  unint64_t v96 = (((v75 ^ 0xB5761BC11B31BECALL) & ~v84)
       - ((2 * ((v75 ^ 0xB5761BC11B31BECALL) & ~v84)) & 0x95D1913FEDCA0E08)
       - 0x35173760091AF8FCLL) ^ v83 ^ v95;
  unint64_t v97 = (8 * v96) ^ (v96 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(a19
                                                                                     + (((v96 >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ ((((v96 >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + (((v96 >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                         - 122);
  unint64_t v98 = v96 ^ 0x31A52CE498BC52BFLL ^ (v97 - ((2 * v97) & 0xCDC5DB64FFD3F8D2) + 0x66E2EDB27FE9FC69);
  unint64_t v99 = v98 + ((v96 << 25) ^ 0xADCEAB5DAC000000) - 2 * (v98 & ((v96 << 25) ^ 0xADCEAB5DAC000000));
  uint64_t v100 = v99 - 0x7AEB0F196EFD9DF6 - 2 * (v99 & 0x514F0E69102621ALL ^ v98 & 0x10);
  unint64_t v101 = v79 ^ v77;
  unint64_t v102 = v77 ^ v95;
  *(void *)&long long v93 = __ROR8__(__ROR8__(v102 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v103 = v102 ^ 0xAC7C0FF4012565E3 ^ ((v102 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v93 >> 28) ^ ((void)v93 << 36) ^ ((void)v93 << 45) ^ v101;
  *((void *)&v93 + 1) = v103 ^ 0x154;
  *(void *)&long long v93 = v103 ^ 0x3646377BF2B14E00;
  unint64_t v104 = v94 ^ 0x8557F9309BB51A6BLL;
  unint64_t v105 = v94 ^ 0x8557F9309BB51A6BLL ^ v101;
  unint64_t v106 = (v100 ^ 0x8514F0E69102620ALL) & ((((unint64_t)(v93 >> 9) ^ 0x284B28057C49B8D1) >> (v71 & 0x37 ^ 3) >> (v71 & 0x37 ^ 0x34)) ^ (((unint64_t)(v93 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL) ^ v105 ^ 0x3646377BF2B14F54;
  *((void *)&v93 + 1) = v106 ^ 0x118501E2B14;
  *(void *)&long long v93 = v106 ^ 0x26974A0000000000;
  uint64_t v107 = v106 ^ 0x8084148649D27D15 ^ (((v93 >> 41) ^ (v106 << 57) ^ 0x2800000000000000)
                                      - 2
                                      * (((v93 >> 41) ^ (v106 << 57) ^ 0x2800000000000000) & 0x26135F9E19CC562FLL ^ (v93 >> 41) & 0x2E)
                                      - 0x59ECA061E633A9FFLL);
  uint64_t v108 = v107 + ((v106 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v107 & ((v106 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v109 = (v85 >> 1) ^ (v85 >> 6) ^ (v85 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  unint64_t v110 = v85 ^ 0x30E40FEB7052795ELL ^ (v109 - ((2 * v109) & 0xBF42F0E9B21B72C8) + 0x5FA17874D90DB964);
  unint64_t v111 = v110 & 0xF47FF077890F9720 ^ (v85 << 63) | v110 & 0xB800F8876F068DFLL;
  uint64_t v112 = v100 ^ (v111 - ((2 * v111) & 0xA29E1CD2204C414) - 0x7AEB0F196EFD9DF6);
  unint64_t v113 = (v105 ^ 0x3646377BF2B14F54) & (v94 ^ 0x7AA806CF644AE594) ^ v112;
  unint64_t v114 = v113 ^ v104 ^ (((v105 ^ 0xC9B9C8840D4EB0ABLL) & (v103 ^ 0x3646377BF2B14F54))
                      - ((2 * ((v105 ^ 0xC9B9C8840D4EB0ABLL) & (v103 ^ 0x3646377BF2B14F54))) & 0x161FE966588435CLL)
                      + 0xB0FF4B32C421AELL);
  *((void *)&v93 + 1) = v114 ^ 0x298;
  *(void *)&long long v93 = v114 ^ 0x73C0532362F4E800;
  uint64_t v115 = v114 ^ 0xB0FF4B32C421AELL ^ ((v114 ^ 0xB0FF4B32C421AELL) >> 17) ^ (v93 >> 10) ^ ((v114 ^ 0xB0FF4B32C421AELL) << 47);
  uint64_t v116 = v108 + (v115 ^ 0x16EB95D00604E32ELL) - 2 * (v108 & (v115 ^ 0x16EB95D00604E32ELL));
  unint64_t v117 = v104 & ~v112;
  unint64_t v118 = v103 ^ 0x4D64956AE77B5173 ^ (((v100 ^ 0x7AEB0F196EFD9DF5) & v111)
                                      - ((2 * ((v100 ^ 0x7AEB0F196EFD9DF5) & v111)) & 0xF64544222B943C4ELL)
                                      + 0x7B22A21115CA1E27);
  unint64_t v119 = ((v118 ^ v117) - ((2 * (v118 ^ v117)) & 0xA29E1CD2204C414) - 0x7AEB0F196EFD9DF6) ^ v100;
  *((void *)&v93 + 1) = v119 ^ 0x38FE43D2BCLL;
  *(void *)&long long v93 = v119 ^ 0x3278F80000000000;
  unint64_t v120 = __ROR8__(v119, 61) ^ (v119 << 25) ^ __ROR8__((v93 >> 38) ^ (v119 >> 39 << 26) ^ 0xC258A8B62E885BC3, 26);
  *((void *)&v93 + 1) = v113 ^ 0x548B80C;
  *(void *)&long long v93 = v113 ^ 0x7955EAEC48000000;
  unint64_t v121 = ((v113 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (v93 >> 27);
  unint64_t v122 = (v113 >> 6) ^ (v113 >> 1) ^ (((v121 << 27) ^ (v113 << 63)) & 0xFFFFFFFFF8000000 | (v121 >> 37));
  unint64_t v123 = v120 ^ v122;
  unint64_t v124 = v120 ^ v122 ^ 0xC51AEF5B5CC303B1;
  unint64_t v125 = v124 ^ v116 & (v115 ^ 0xE9146A2FF9FB1CD1);
  unint64_t v126 = ((v125 >> 1) ^ (v125 >> 6) | (v125 << 63)) ^ (v125 << 58) ^ 0x82A267617DDD3C0DLL;
  unint64_t v127 = v125 ^ 0xCBFF9E78FBAE6BALL ^ (v126 - ((2 * v126) & 0xBECBCFA9DE0AC500) - 0x209A182B10FA9D80);
  unint64_t v128 = (v122 ^ 0x853759C940934A2BLL) + (v124 | v120 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v129 = v118 ^ v106;
  uint64_t v130 = (v129 << 36) ^ (v129 << 45) ^ (v129 >> 19) ^ 0x2A792D60982B22B5;
  uint64_t v131 = (v129 >> 28) ^ 0x6E04C1591;
  uint64_t v132 = v129 ^ 0x21F236FF6B09B096 ^ (v130
                                      - 2 * (v130 & 0x4FF6F7A67EA2369ELL ^ (v129 >> 19) & 2)
                                      + 0x4FF6F7A67EA2369CLL);
  unint64_t v133 = (v132 & 0x26452CB7C950B7B6 ^ v131 & 0x7C950B7B6 | v132 & 0xD9BAD34836AF4849 ^ v131 & 0x836AF4849) ^ v108;
  unint64_t v134 = v128 & 1;
  unint64_t v135 = (v128 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v128) & 0x8769BFA58DDB4A08) + 0x43B4DFD2C6EDA505;
  if ((v134 & v133) != 0) {
    uint64_t v136 = v133 - v134 - ((2 * (v133 - v134)) & 0x8769BFA58DDB4A0ALL) + 0x43B4DFD2C6EDA505;
  }
  else {
    uint64_t v136 = v133 ^ 0x43B4DFD2C6EDA505 ^ v134;
  }
  unint64_t v137 = v136 ^ v135;
  unint64_t v138 = (v123 ^ 0x3AE510A4A33CFC4ELL) & (v115 ^ 0x16EB95D00604E32ELL) ^ v120 ^ 0x402DB6921C50499ALL ^ v136 ^ v135;
  uint64_t v139 = ((8 * v138) ^ 0x12BB25DAC3BED128) & (v138 ^ 0x425764BB5877DA20) ^ __ROR8__(v138, 39) ^ (v138 ^ 0x74F737A022271F6DLL ^ (((v138 >> 61) ^ 2) + 0x36A0531B7A50C549 + ((2 * (((v138 >> 61) ^ 2 | 0x7FFFFFFFFFFFFFC8) ^ (v138 >> 61))) ^ 0x6B)) | (8 * v138) ^ 0x12BB25DAC3BED128);
  unint64_t v140 = (v139 ^ 0x33B3766FB6999E16 ^ (v127 + 0x450399DBFC1D30DFLL - ((2 * v127) & 0x8A0733B7F83A61BELL))) & 0xA9AD36174A77719DLL | (v139 ^ 0x33B3766FB6999E16 ^ (v127 + 0x450399DBFC1D30DFLL - ((2 * v127) & 0xA0733B7F83A61BELL))) & 0x5652C9E8B5888E62;
  unint64_t v141 = v140 - ((2 * v140) & 0xE3793E44F1E6AD06);
  uint64_t v142 = (v120 ^ 0x402DB6921C50499ALL) & ~v133 ^ v116;
  unint64_t v143 = ((v142 + (v142 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v142;
  unint64_t v144 = v143 - ((2 * v143) & 0x93CCFF35E2F15932) + 0x49E67F9AF178AC99;
  unint64_t v145 = (v144 & 0x10000000000000 | ((((v144 & 0x10000000000000) >> 52) & 1) << 53)) ^ 0x34DFEBBAF47BDBFBLL;
  unint64_t v146 = v145 + 0x12014450B842405;
  unint64_t v147 = v145 - 0x10C2028000600332;
  unint64_t v148 = 0x58FDD4F5E897B4C4 - v145;
  uint64_t v149 = (v144 >> 7) ^ 0x93CCFF35E2F159;
  if ((v146 & v149) == 0) {
    unint64_t v148 = v147;
  }
  unint64_t v150 = v144 & 0xFFEFFFFFFFFFFFFFLL ^ (v144 >> 41) ^ (v144 << 23) ^ (v144 << 57) ^ 0xB69EC3CCBDDC5FA6 ^ (v149 - 0x241DE93AF41BD8C9 + v148);
  unint64_t v151 = v125 ^ v115 ^ ((v133 & ~v116) - ((2 * (v133 & ~v116)) & 0x74A3281EDEFE1A38) + 0x3A51940F6F7F0D1CLL);
  unint64_t v152 = (v151 & 0x1000000000 | (v151 << 47)) ^ v151 & 0xFFFFFFEFFFFFFFFFLL ^ ((v151 >> 10) ^ (v151 >> 17) | (v151 << 54));
  *((void *)&v153 + 1) = v152 ^ 0x220D5B02A3;
  *(void *)&long long v153 = v152 ^ 0x67EFC4000000000;
  unint64_t v154 = v141 + 0x71BC9F2278F35683;
  unint64_t v155 = v152 ^ 0xF2700E560137EB6DLL;
  unint64_t v156 = (v150 - ((2 * v150) & 0xE81DE46818D9D39CLL) - 0xBF10DCBF3931632) ^ v152 ^ 0xF2700E560137EB6DLL;
  uint64_t v157 = v154 ^ v156 & (__ROR8__((v153 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  unint64_t v158 = ((v157 ^ 0xE3879BD653F35638) + 0x6DC4FB0BD4FFFF45) ^ ((v157 ^ 0x8E4360DD870CA97CLL) + 1);
  unint64_t v159 = v158 - ((2 * v158) & 0x9BFA87EB13612520);
  unint64_t v160 = v157 ^ 0xBC41DCD7F143C413;
  unint64_t v161 = (v159 - 0x3202BC0A764F6D70) ^ v157 ^ 0xBC41DCD7F143C413;
  unint64_t v162 = v161 - ((2 * v161 - 0x247609E856000178) & 0xA8854C3B12803E98) - 0x3DF85ED6A1BFE170;
  *((void *)&v153 + 1) = (v161 - ((2 * v161 - 1442840952) & 0x12803E98) + 1581260432) ^ 0xCu;
  *(void *)&long long v153 = v162 ^ 0x5442A61D89401F40;
  uint64_t v163 = ((v161 << 63) | 0x2A21530EC4A00FA6) ^ (v162 >> 1) ^ (v153 >> 6);
  unint64_t v164 = (v163 + 0x5442A61D89401F40 - ((2 * v163) & 0xA8854C3B12803E98) + 12) ^ v162;
  uint64_t v165 = (((2 * v154) ^ 0x1C86C1BB0E1952F9) + (v154 ^ 0x71BC9F2278F35683)) & (v152 ^ 0x67EFC620D5B02A3);
  unint64_t v166 = (v137 - ((2 * v137) & 0xED5FC783E2B5502ELL) + 0x76AFE3C1F15AA817) ^ v142;
  uint64_t v167 = ((v166 ^ 0x76AFE3C1F15AA817) << 45) ^ ((v166 ^ 0x76AFE3C1F15AA817) << 36) ^ v150 ^ __ROR8__(((v166 << 34) & 0xC000000000000000 | ((v166 ^ 0x76AFE3C1F15AA817) >> 30)) ^ __ROR8__(v166 ^ 0xCE28230A41E37444 ^ ((((v166 ^ 0x76AFE3C1F15AA817) >> 19) ^ 0x12FED4FCBEDDLL) - 2 * ((((v166 ^ 0x76AFE3C1F15AA817) >> 19) ^ 0x12FED4FCBEDDLL) & 0x72E465129FBLL ^ ((v166 ^ 0x76AFE3C1F15AA817) >> 19) & 0x22) + 0x2F71672E465129D9), 2) ^ 0xA6115EFD9A53B36ELL, 62);
  unint64_t v168 = (v154 ^ 0x71BC9F2278F35683) & (v139 ^ 0x894F104BB57B5136) ^ v167 ^ 0xE87B635F1624B3E6;
  unint64_t v169 = v168 ^ v139 ^ 0x33B3766FB6999E16 ^ (v165 - ((2 * v165) & 0x8A0733B7F83A61BELL) + 0x450399DBFC1D30DFLL);
  *((void *)&v153 + 1) = v169 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v153 = v169 ^ 0x6000000000000000;
  uint64_t v170 = v169 ^ __ROR8__(v169, 39) ^ (v153 >> 61);
  unint64_t v171 = ((v167 ^ 0x3D9656FDEA6A2FLL ^ -(v167 ^ 0x3D9656FDEA6A2FLL) ^ ((v167 ^ 0xE87B635F1624B3E6)
                                                                     + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v139 ^ 0x76B0EFB44A84AEC9) ^ v156;
  unint64_t v172 = v171 ^ 0x2DB5B6AF87F64351 ^ ((v171 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v171 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v171 ^ 0x2DB5B6AF87F64351) >> 41) | ((v171 ^ 0x2DB5B6AF87F64351) << 57));
  unint64_t v173 = (((v167 ^ 0xE87B635F1624B3E6) & ~v156)
        - ((2 * ((v167 ^ 0xE87B635F1624B3E6) & ~v156)) & 0xE81DE46818D9D39CLL)
        - 0xBF10DCBF3931632) ^ v155;
  unint64_t v174 = (v173 - ((2 * v173) & 0x9BFA87EB13612520) - 0x3202BC0A764F6D70) ^ v160;
  unint64_t v175 = v174 ^ (v174 << 54) ^ (v174 << 47) ^ (v174 >> 10) ^ (v174 >> 17);
  unint64_t v176 = v171 ^ __ROR8__(__ROR8__(v168, 61) ^ 0x500CB82D79BEE91BLL, 3);
  uint64_t v177 = ((v176 >> 19) ^ (v176 >> 28) | (v176 << 45)) ^ 0x21278C61855392E3;
  unint64_t v178 = v176 ^ (v176 << 36) ^ v172 ^ (v177 - ((2 * v177) & 0x86CD3106F860ECC8) + 0x436698837C307664);
  uint64_t v179 = v178 ^ 0x644BBF05C8717F58;
  unint64_t v180 = v175 ^ 0xF402C384677BE748;
  unint64_t v181 = v175 ^ 0xF402C384677BE748 ^ (v172 - ((2 * v172) & 0x52578E2FC91EA6CALL) + 0x292BC717E48F5365);
  unint64_t v182 = (v178 ^ 0x9BB440FA378E80A7) & (v170 ^ 0xA9109542E9BBBCELL) ^ v181;
  unint64_t v183 = v164 & (v170 ^ 0xF56EF6ABD1644431) ^ v179;
  *((void *)&v153 + 1) = v183 ^ v182 ^ 0x62F93;
  *(void *)&long long v153 = v183 ^ v182 ^ 0x69309AC4CA80000;
  uint64_t v184 = v183 ^ v182 ^ 0xA08C50E91F01905FLL ^ (((v153 >> 19) ^ ((v183 ^ v182) << 36) ^ 0xCAE2F93000000000)
                                             - 2
                                             * (((v153 >> 19) ^ ((v183 ^ v182) << 36) ^ 0xCAE2F93000000000) & 0x261F594553AFBFCFLL ^ (v153 >> 19) & 3)
                                             - 0x59E0A6BAAC504034);
  uint64_t v185 = (v184 ^ -v184 ^ ((((v183 ^ v182) >> 28) ^ 0x69309AC4) - (v184 ^ ((v183 ^ v182) >> 28) ^ 0x69309AC4)))
       + (((v183 ^ v182) >> 28) ^ 0x69309AC4);
  unint64_t v186 = v185 - 0x19FCC9F86E0C69BCLL - ((2 * v185) & 0xCC066C0F23E72C88);
  LOBYTE(v185) = *(unsigned char *)(a23 + ((v185 + 68 - ((2 * v185) & 0x88)) ^ 2));
  *a35 = BYTE1(v186) ^ 0x96;
  a27[5] = ((v185 ^ 0x94) >> 6) | (4 * (v185 ^ 0x94));
  uint64_t v187 = (v186 >> 12) & 0xF0 | (v186 >> 20) & 0xF;
  *a36 = (*(unsigned char *)(a19 + (v187 ^ 0xC1)) ^ 0xA1)
       + (v187 ^ 0x74)
       + (v187 ^ 0xE1)
       - 2 * (((v187 ^ 0x74) + (v187 ^ 0xE1)) & (*(unsigned char *)(a19 + (v187 ^ 0xC1)) ^ 0xA1))
       - 122;
  LOBYTE(v160) = *(unsigned char *)(a23 + (BYTE3(v186) ^ 0xD7)) ^ 0x94;
  *a37 = (v160 >> 6) | (4 * v160);
  v170 ^= 0x5B20ED4FF213AED5uLL;
  unint64_t v188 = (v164 - ((2 * v164) & 0xA363C837B9102A36) + 0x51B1E41BDC88151BLL) ^ v170;
  unint64_t v189 = (((v175 ^ 0xDD29049383F4B42DLL) & ~v188 ^ v183)
        - ((2 * ((v175 ^ 0xDD29049383F4B42DLL) & ~v188 ^ v183)) & 0xA363C837B9102A36)
        + 0x51B1E41BDC88151BLL) ^ v170;
  *(void *)&long long v153 = __ROR8__((v189 >> 13) & 0x7000000000000 ^ __ROR8__(v189 ^ 0x9CA14F3631D6BAB8 ^ (((8 * v189) ^ (v189 << 25) ^ 0xBF0681A6CFCC6AD0)- ((2* ((8 * v189) ^ (v189 << 25) ^ 0xBF0681A6CFCC6AD0)) & 0xFD4482C37D5E6FC0)- 0x15DBE9E4150C81ELL), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v190 = (v153 ^ -(uint64_t)v153 ^ (((v189 >> 39) ^ 0xC4061C) - (v153 ^ (v189 >> 39) ^ 0xC4061C)))
       + ((v189 >> 39) ^ 0xC4061C);
  LODWORD(v170) = *(unsigned __int8 *)(a15
                                     + ((((v186 >> 31) & 0xB8 ^ 8) + (BYTE4(v186) ^ 0xDB)) ^ 0x77));
  DWORD1(v153) = (v170 >> 6) ^ 0x7F ^ -((v170 >> 6) ^ 0x7F) ^ (((v170 >> 6) | (8 * v170))
                                                                                         - 127);
  LODWORD(v153) = (DWORD1(v153) + 4 * v170) << 24;
  a27[1] = v190 ^ 0xAC;
  a28[6] = (BYTE6(v186) ^ 3) - ((2 * (BYTE6(v186) ^ 3)) & 0x5E) - 81;
  a27[4] = BYTE2(v190) ^ 0x24;
  *a26 = (unint64_t)v153 >> 26;
  unint64_t v191 = v188 ^ (v175 ^ 0x22D6FB6C7C0B4BD2) & v172;
  unint64_t v192 = (v191 >> 1) ^ (v191 >> 6) ^ ((v191 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v191 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v191 & 0x183B3BDBC4516A26 | v191 & 0xE7C4C4243BAE95D9 ^ (v191 << 63));
  a28[12] = (BYTE3(v190) ^ 0x72) - ((2 * (BYTE3(v190) ^ 0x72)) & 0x5E) - 81;
  *(unsigned char *)(a30 + 29) = HIBYTE(v186) ^ 0xE6;
  a28[13] = (BYTE5(v186) ^ 0x36) - ((2 * (BYTE5(v186) ^ 0x36)) & 0x5E) - 81;
  a21[6] = (v190 ^ 0x12027FFB722459ACuLL) >> ((v186 >> 20) & 8) >> (~(v186 >> 20) & 8);
  LODWORD(v175) = *(unsigned __int8 *)(a15 + (((BYTE4(v190) ^ 0xFB) - 36) ^ 0x77));
  a21[4] = BYTE6(v190) ^ 2;
  *a27 = HIBYTE(v190) ^ 0x12;
  a21[2] = ((unsigned __int16)((v191 >> 1) ^ (v191 >> 6) ^ v191) >> 8) ^ 5;
  *a38 = BYTE5(v190) ^ 0x7F;
  uint64_t v193 = ((v191 ^ v179 & ~v181) - ((2 * (v191 ^ v179 & ~v181)) & 0x52578E2FC91EA6CALL) + 0x292BC717E48F5365) ^ v180;
  unint64_t v194 = v193
       - ((2 * v193) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v193 - ((2 * v193) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0xEA75F9A15C2F502CLL)
       + 0x753AFCD0AE17A816;
  unint64_t v195 = v182 ^ (v182 << 23) ^ ((v182 >> 7) ^ (v182 >> 41) | (v182 << 57));
  a27[2] = v192 ^ 0xDB;
  *a21 = ((((v175 >> 6) | (4 * v175)) ^ 0x7F) >> 2) | ((((v175 >> 6) | (4 * v175)) ^ 0x7F) << 6);
  unint64_t v196 = v194 ^ (v194 << 47) ^ (v194 >> 10) ^ (v194 << 54);
  unint64_t v197 = v196 ^ (v194 >> 17);
  LOBYTE(v194) = *(unsigned char *)(a14
                          + (((BYTE2(v192) ^ 0x76) + (BYTE2(v192) ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE)
                          + (BYTE2(v192) ^ 0x76));
  *a31 = BYTE3(v192) ^ 0x87;
  a27[3] = BYTE6(v192) ^ 0x5D;
  LOBYTE(v194) = (v194 ^ 0xF2 ^ (16 * v194) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v194 ^ 0xF2 ^ (16 * v194) & 0x40) >> 3) << ((v190 ^ 0xAC) & (v190 ^ 0x50)) << ((v190 ^ 0xAC) & (v190 ^ 0x50) ^ 3));
  a27[11] = v197 ^ 0xF7;
  *(unsigned char *)(a30 + 28) = BYTE5(v192) ^ 0x22;
  a27[13] = ((v194 >> 3) | (32 * v194)) ^ 0xA6;
  *a32 = BYTE2(v197) ^ 0x54;
  a28[8] = (HIBYTE(v192) ^ 0xA1) - ((2 * (HIBYTE(v192) ^ 0xA1)) & 0x5E) - 81;
  a28[17] = (BYTE4(v192) ^ 0x3C) - ((2 * (BYTE4(v192) ^ 0x3C)) & 0x5E) - 81;
  uint64_t v198 = (v197 >> 20) & 0xF0 | (v197 >> 28);
  a28[11] = (BYTE1(v197) ^ 0x7A) - ((2 * (BYTE1(v197) ^ 0x7A)) & 0x5E) - 81;
  LOBYTE(v192) = (v198 ^ 0x90) + (v198 ^ 5);
  LOBYTE(v198) = *(unsigned char *)(a19 + (v198 ^ 0xB0));
  *(unsigned char *)a30 = BYTE6(v196) ^ 0xAC;
  *a33 = BYTE5(v197) ^ 0x88;
  *(unsigned char *)(a30 + 15) = ((v182 ^ (v182 << 23) ^ (v182 >> 7) ^ (v182 >> 41)) >> 24) ^ 0x79;
  a28[19] = v182 ^ (v182 >> 7) ^ (v182 >> 41) ^ 0x3D;
  a21[5] = ((unsigned __int16)(v182 ^ (v182 >> 7) ^ (v182 >> 41)) >> 8) ^ 0x3D;
  a27[8] = ((v182 ^ (v182 << 23) ^ (v182 >> 7) ^ (v182 >> 41)) >> 16) ^ 3;
  a28[18] = (v198 ^ v192 ^ 0xA1) - ((2 * (v198 ^ v192 ^ 0xA1) + 12) & 0x5E) + 53;
  a27[6] = BYTE4(v197) ^ 0xF2;
  a21[7] = HIBYTE(v196) ^ 0xA4;
  LOBYTE(v196) = *(unsigned char *)(a23 + (BYTE4(v195) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a30 + 14) = BYTE5(v195) ^ 0x49;
  a21[3] = HIBYTE(v195) ^ 0xBE;
  a21[1] = BYTE6(v195) ^ 0x75;
  *(unsigned char *)(a30 + 16) = (v196 >> 6) | (4 * v196);
  *(_DWORD *)(a30 + 4) = a17 + 1086980196;
  return (*(uint64_t (**)(uint64_t, uint64_t))(a39
                                                     + 8
                                                     * ((1948
                                                       * (87
                                                        * (((((v39 - 443057735) & 0x1A6883BF) - 926) | 0x402) ^ 0x404) != 0x269)) ^ (v39 - 443057735) & 0x1A6883BF)))(438822768, 2367559326);
}

void sub_10058A1A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v18 = ((v17 - 144) ^ 0x4C96827D) * a9;
  *(_DWORD *)(v17 - 140) = v16 - v18 + 1810;
  *(_DWORD *)(v17 - 136) = (((v16 + 1571) ^ 0x32EDEB99) + v13) ^ v18;
  *(void *)(v17 - 128) = v15;
  *(void *)(v17 - 120) = a13;
  (*(void (**)(uint64_t))(v14 + 8 * (v16 + 1983)))(v17 - 144);
  sub_1005B9330();
}

uint64_t sub_10058A200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28,uint64_t a29,int a30,uint64_t a31,uint64_t a32)
{
  unsigned int v36 = 628203409 * ((&a25 & 0xBC0FDD19 | ~(&a25 | 0xBC0FDD19)) ^ 0xC1782ED5);
  a31 = a23;
  a32 = a13;
  a29 = a15;
  a25 = a14;
  a26 = a12;
  a27 = v32 - v36 + 118;
  a28 = 81202360 - v36 + ((v32 - 220584917) & 0x9FF) + a22 - 280;
  uint64_t v37 = (*(uint64_t (**)(uint64_t *))(v33 + 8 * (v32 + 1334)))(&a25);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                                         + 8
                                                                                         * ((1740 * (a30 == -25955570)) ^ v32)))(v37, v34, 2589512361, 3735398464, 803242036, v35);
}

uint64_t sub_10058A310@<X0>(int a1@<W0>, int a2@<W3>, uint64_t a3@<X8>)
{
  unsigned int v7 = v5 - 32;
  uint64_t v8 = a3 + v7;
  long long v9 = *(_OWORD *)(v8 - 31);
  uint64_t v10 = v3 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a1 == 32) * a2) ^ v4)))();
}

uint64_t sub_10058A31C(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 3804331 * ((-1818215500 - (a1 | 0x93A03BB4) + (a1 | 0x6C5FC44B)) ^ 0x96C1371D);
  return (*((uint64_t (**)(void))*(&off_1009960C0 + v1 - 1352)
          + (((*(void *)(a1 + 8) == 0xD547898781B11C0) * (749 * (v1 ^ 0x5D2) - 1488)) | v1)
          - 1))();
}

uint64_t sub_10058A3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  int v46 = 1759421093 * ((((2 * (v45 - 152)) | 0x3FB8D572) - (v45 - 152) - 534538937) ^ 0xACA1DAED);
  *(void *)(v45 - 152) = a15;
  *(_DWORD *)(v45 - 144) = v46 + v44 + 799;
  *(_DWORD *)(v45 - 140) = v46 + a18 - 507020181;
  (*(void (**)(uint64_t))(v43 + 8 * (v44 ^ 0x823)))(v45 - 152);
  uint64_t v47 = a43 & 0x3F;
  *(&a34 + (v47 ^ 0xD)) = -46;
  return (*(uint64_t (**)(uint64_t))(v43 + 8 * ((1570 * ((v47 ^ 0xD) > v44 + 25)) ^ v44)))(2282780948);
}

uint64_t sub_10058A4CC@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W8>)
{
  int v6 = *(_DWORD *)(v4 + a3 * (uint64_t)a2 + 36);
  int v7 = v6 + ((v3 + 231) | 0x41) - 787509478;
  BOOL v8 = v6 != a1;
  if (v7 <= -812809889 || v7 >= SLODWORD(STACK[0x3C0])) {
    BOOL v8 = 0;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((2 * v8) | (16 * v8) | (v3 + 1568))))();
}

uint64_t sub_10058A558@<X0>(char a1@<W4>, char a2@<W5>, uint64_t a3@<X7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41)
{
  int v45 = *((_DWORD *)&a29 + ((v43 + a4) >> ((v42 - a2 - 1) ^ (a1 + 2))) + 18);
  *(unsigned char *)(a3 + (v43 + a4)) = v45 ^ 0x90;
  *(unsigned char *)(a3 + (v43 + a4 + 1)) = (BYTE1(v45) ^ 0x19) + (~(2 * (BYTE1(v45) ^ 0x19)) | 0x5B) + 83;
  *(unsigned char *)(a3 + (v43 + a4 + 2)) = (BYTE2(v45) ^ 0xD9) - ((2 * (BYTE2(v45) ^ 0xD9)) & 0xA4) + 82;
  *(unsigned char *)(a3 + (v43 + a4 + 3)) = (HIBYTE(v45) ^ 0x86) - ((2 * (HIBYTE(v45) ^ 0x86)) & 0xA4) + 82;
  BOOL v46 = v43 + 1214314797 < (a41 + 2145555208);
  if (v43 + 1214314797 < v41 != a41 + 2145555208 < v41) {
    BOOL v46 = a41 + 2145555208 < v41;
  }
  return (*(uint64_t (**)(void))(v44 + 8 * ((126 * !v46) ^ v42)))();
}

uint64_t sub_10058A644@<X0>(int a1@<W2>, int a2@<W8>)
{
  int v5 = *(unsigned __int8 *)(STACK[0x478] + (((a2 ^ 0x1Au) + 731) ^ 0xBE4E8BFBFDE9EAC6) + 0x41B1740402161646)
     - (*(unsigned char *)(*(void *)(v2 + v3 * (uint64_t)a1 + 24)
                                  - 0x12290867A03C12B3
                                  + (((a2 ^ 0x1Au) + 731) ^ 0xBE4E8BFBFDE9EAC6)
                                  + 0x41B1740402161646)
                       - 91);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((556
                                * ((v5 ^ ((((a2 ^ 0x1A) - 232316582) & 0xDD8DEDE) - 68375531)) + ((2 * v5) & 0xF7D959DE) == -68375313)) ^ a2 ^ 0x1A)))();
}

uint64_t sub_10058A718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v18 = a16 - 1491193922;
  if (a16 - 1491193922 < 0) {
    int v18 = 1491193922 - a16;
  }
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((29
                                * ((int)((v18 ^ 0xFEFDFDDA)
                                       + ((v18 << ((v17 + 103) ^ 0xC7)) & 0xFDFBFBB4)
                                       + 1508102760
                                       + ((v17 + 1475046559) & 0xA81491FF ^ 0xA71E2E43)) >= 0)) ^ (v17 - 665))))();
}

uint64_t sub_10058A7C0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X8>)
{
  uint64_t v9 = ((((a4 - 778) | 0x414) - 1007) ^ (a2 + 485)) + a1 + a3;
  unint64_t v10 = v9 + a5 + 1;
  uint64_t v11 = (a1 + a3) & 0xF;
  uint64_t v12 = v11 - v9;
  unint64_t v13 = v5 + v12;
  unint64_t v14 = v11 + v5 + 1;
  unint64_t v15 = v12 + v6 + 2;
  unint64_t v16 = v11 + v6 + 3;
  unint64_t v17 = v12 + v7 + 4;
  unint64_t v18 = v11 + v7 + 5;
  BOOL v20 = v14 > a5 && v13 < v10;
  if (v16 > a5 && v15 < v10) {
    BOOL v20 = 1;
  }
  int v23 = v18 > a5 && v17 < v10 || v20;
  return (*(uint64_t (**)(void))(v8 + 8 * ((29 * v23) ^ a4)))();
}

void sub_10058A85C(uint64_t a1)
{
  int v1 = 1374699841 * (((a1 | 0xB24FA6E) - (a1 & 0xB24FA6E)) ^ 0x66D0E267);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_10058A92C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 1759421093 * ((-746607788 - (a1 | 0xD37FAB54) + (a1 | 0x2C8054AB)) ^ 0x9FFDE4FF);
  return (*((uint64_t (**)(void))*(&off_1009960C0 + v1 - 135)
          + (((4 * (((*(void *)(a1 + 8) == *(void *)a1) ^ (v1 + 80)) & 1)) & 0xDF | (32 * (((*(void *)(a1 + 8) == *(void *)a1) ^ (v1 + 80)) & 1))) ^ v1)
          - 1))();
}

void sub_10058A9BC()
{
  if (v0 == 943725363) {
    int v1 = -25955570;
  }
  else {
    int v1 = 25995478;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_10058AA20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((*(_DWORD *)STACK[0x390] - 1485875752) < 0x10)
                                * ((((v8 - 55) ^ a8) * a7) ^ 0x6C9)) ^ (v8 - 55))))();
}

uint64_t sub_10058AA6C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)a1 - 0x330904BA72E93EBCLL);
  int v4 = v2 - 1491193922;
  BOOL v3 = v2 - 1491193922 < 0;
  int v5 = 1491193922 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = (*(_DWORD *)(a1 + 12) ^ (1734042137 * (((a1 | 0xD7F017E0) - (a1 & 0xD7F017E0)) ^ 0x8B3ED4AD))) + 637;
  return (*((uint64_t (**)(void))*(&off_1009960C0 + v1 - 1084)
          + ((863
            * ((v5 ^ 0xBED7CFBF) + 1803531473 + ((v5 << (v1 ^ 0xC5)) & 0x7DAF9F7E) - 710379224 + ((v1 - 643) | 6) < ((v1 + 1773763289) & 0x964684FE ^ 0x7FFFFB63))) ^ v1)
          - 1))();
}

uint64_t sub_10058ABA0(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a6 + v6 + v9) = a1;
  return (*(uint64_t (**)(void))(v10 + 8 * (v7 ^ (4 * (v6 + 1 + v9 >= (unint64_t)((v7 - 142) | v8) + 1)))))();
}

uint64_t sub_10058ABD4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * (((v6 == (((((v7 - 343) | v2) ^ v3) * v4) ^ (v1 + 660))) * v5) ^ v7)))();
}

uint64_t sub_10058AC08(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(a8 + 1424) = 1817538129;
  *(_DWORD *)(a8 + 1428) = 32707526;
  *(void *)(a8 + 1432) = v9;
  *(void *)(a8 + 1440) = v9;
  *(_DWORD *)(a8 + 1448) = v10;
  *(__n128 *)(a8 + 1452) = a1;
  return (*(uint64_t (**)(void))(v11 + 8 * ((1390 * (7 * (v8 ^ 0x1FC) == -6)) ^ v8)))();
}

uint64_t sub_10058AC74@<X0>(uint64_t a1@<X5>, unsigned int a2@<W8>)
{
  *(_OWORD *)(a1 + (((a2 - 603) ^ 0xFFFFFD41) & (v2 + 16))) = *v4;
  return (*(uint64_t (**)(void))(v5 + 8 * ((592 * (v3 == 16)) ^ a2)))();
}

uint64_t sub_10058AC80(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((63 * (a2 + 1 == v4 + 4)) ^ v2)))();
}

uint64_t sub_10058AD68(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 == 24) * (a2 ^ 0x14F)) ^ a2)))();
}

uint64_t sub_10058AD98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  LODWORD(STACK[0x4B8]) = v6;
  LODWORD(STACK[0x4A4]) = v7;
  LODWORD(STACK[0x4D4]) = v8;
  LODWORD(STACK[0x4BC]) = v9;
  LODWORD(STACK[0x580]) = v10 + 64;
  return sub_1005B9BF8(82, LODWORD(STACK[0x3C8]), -1119688577, 25995479, a5, a6, -2032592446);
}

uint64_t sub_10058ADEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a13 = &STACK[0x130F29621C6D0940];
  a15 = v17 - 460628867 * (((&a13 | 0x98AB1C2F) - (&a13 & 0x98AB1C2F)) ^ 0xD43D9E52) + 87;
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 + 1501)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1992 * (a14 == v15 + (v17 ^ 0x4B) - 750)) ^ v17)))(v18);
}

uint64_t sub_10058AE90(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((((a2 + v3 + 134366220) < 8) ^ ((v2 ^ 0x45) + 1)) & 1)
                                * ((v2 + 418) ^ 0x587)) ^ v2)))();
}

uint64_t sub_10058AEFC(char a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)(v5 + v3 + a3) = a1;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((v3 & 0x7FFFFFFFFFFFFFC0) == (((v4 ^ v6) - 119) ^ 0x42BD1795)) * v6) ^ v4 ^ v6)))();
}

uint64_t sub_10058AF40@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = (v3 + 1467) ^ (535753261
                    * ((((2 * &v5) | 0xDCCE9096) - &v5 - 1852262475) ^ 0x64934664));
  uint64_t v6 = v2;
  uint64_t v7 = v2;
  uint64_t v8 = a1;
  return (*(uint64_t (**)(unsigned int *))(v1 + 8 * (v3 ^ 0x8B4)))(&v5);
}

uint64_t sub_10058AFCC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((*(_DWORD *)(v2 + 48 * (v1 + v6) + 36) == v1) ^ (v0 + 59)) & 1)
                                * ((v0 - v3 - 1221) ^ (v5 + 15))) ^ v0)))();
}

uint64_t sub_10058B01C(uint64_t a1, uint64_t a2)
{
  qword_100A48C40 = 102320191 * (((qword_100A48C88 ^ qword_100A48C40) - (void)&v5) ^ 0xEC406678D1E7DD14);
  qword_100A48C88 = qword_100A48C40;
  int v2 = *(_DWORD *)(a2 + 4);
  if (v2 == 1145886376) {
    __asm { BRAA            X1, X17 }
  }
  if (v2 == 1145886383)
  {
    int v3 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X4, X17 }
  }
  return 4294925278;
}

uint64_t sub_10058B1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v31 - 120) = v28;
  *(void *)(v31 - 112) = v27;
  *(void *)(v31 - 144) = v29;
  *(void *)(v31 - 136) = v28;
  *(_DWORD *)(v31 - 128) = v30
                         + 1225351577 * ((((2 * (v31 - 144)) | 0x2202A2D4) - (v31 - 144) - 285299050) ^ 0x329B897C)
                         - 1035;
  (*(void (**)(uint64_t))(v26 + 8 * (v30 + 860)))(v31 - 144);
  int v32 = 1755732067 * ((v31 - 1573681744 - 2 * ((v31 - 144) & 0xA2338640)) ^ 0x7CF53B9B);
  *(void *)(v31 - 136) = a25;
  *(_DWORD *)(v31 - 144) = (v30 + 463) ^ v32;
  *(_DWORD *)(v31 - 124) = -1988464057 - v32 + v25 + 453;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v30 ^ 0xC6F)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((21 * (*(_DWORD *)(v31 - 128) == 850 * (v30 ^ 0x4EC) - 314638977)) ^ v30)))(v33);
}

uint64_t sub_10058B2EC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  return sub_1005C84A4(a1, a2 - 8, *(_DWORD *)(*v4 + 4 * (v5 - 1057101218 + a2 - 8)), v3, a3);
}

uint64_t sub_10058B318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  int8x16_t v47 = (int8x16_t)vld1q_dup_f32((const float *)v44);
  v48.i64[0] = 0x8000000080000000;
  v48.i64[1] = 0x8000000080000000;
  v49.i64[0] = 0xC0000000CLL;
  v49.i64[1] = 0xC0000000CLL;
  v46.i64[0] = *(void *)(v44 + 4);
  v46.i32[2] = *(_DWORD *)(v44 + 12);
  int8x16_t v50 = vextq_s8(v47, v46, 0xCuLL);
  int8x16_t v51 = v46;
  v51.i32[3] = *(_DWORD *)(v44 + 16);
  int8x16_t v52 = (int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v51, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v50, v48)), 1uLL);
  int32x4_t v53 = (int32x4_t)veorq_s8(v52, (int8x16_t)vdupq_n_s32(0x1F10DB1u));
  int32x4_t v54 = (int32x4_t)veorq_s8(vandq_s8((int8x16_t)v53, (int8x16_t)vdupq_n_s32(0x3E21B6Eu)), vandq_s8(v52, v49));
  v55.i32[0] = *((_DWORD *)&a44 + (*(_DWORD *)(v44 + 4) & 1));
  v55.i32[1] = *((_DWORD *)&a44 + (*(_DWORD *)(v44 + 8) & 1));
  v55.i32[2] = *((_DWORD *)&a44 + (*(_DWORD *)(v44 + 12) & 1));
  v55.i32[3] = *((_DWORD *)&a44 + (v51.i8[12] & 1));
  *(int8x16_t *)uint64_t v44 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v44 + 1588), v55), (int8x16_t)vdupq_n_s32(0xD9F624DE)), (int8x16_t)vaddq_s32(vaddq_s32(v53, vdupq_n_s32(0x3E21B63u)), (int32x4_t)vmvnq_s8((int8x16_t)vaddq_s32(v54, v54))));
  return (*(uint64_t (**)(void))(a3 + 8 * ((-1613179118 - v45) ^ 0x18)))();
}

uint64_t sub_10058B324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unsigned int v28 = v26 + ((v23 - 793) ^ 0x8260AF65);
  if (v28 <= 0x40) {
    unsigned int v28 = 64;
  }
  uint64_t v29 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((102 * (2107592809 - v24 - v25 + v23 - 747 + v28 < 0xF)) ^ v23));
  return v29(v29, a2, 2187897807, a4, a5, a6, a7, -281128529, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_10058B3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8 * ((15 * (v7 + 1 != v9 + 20)) ^ a6)))(v6, a2, a1);
}

uint64_t sub_10058B47C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(a1 + 1424) == ((2 * (v1 ^ 0x208)) ^ 0x6C556E8B)) * ((v1 ^ 0x208) + 142)) ^ v1)))();
}

uint64_t sub_10058B4B8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(void *)(&a19 + a2 + ((v20 + 760567083) & 0xD2AAAEFB ^ (unint64_t)(a1 - 831))) = 0x5252525252525252;
  return (*(uint64_t (**)(void))(v21 + 8 * ((58 * ((v19 & 0x38) == 8)) ^ v20)))();
}

uint64_t sub_10058B514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v22 = 628203409 * ((((v21 - 152) | 0xDA60A5B6) - ((v21 - 152) & 0xDA60A5B6)) ^ 0x58E8A985);
  *(_DWORD *)(v21 - 136) = v17 - v22 + 678;
  *(_DWORD *)(v21 - 132) = v20 - v22 + 81202360;
  *(void *)(v21 - 152) = a14;
  *(void *)(v21 - 144) = a12;
  *(void *)(v21 - 128) = a15;
  *(void *)(v21 - 112) = a17;
  *(void *)(v21 - 104) = a13;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v17 + 1894)))(v21 - 152);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (int)(((*(_DWORD *)(v21 - 120) == -25955570)
                                                   * ((v19 + ((v17 + 592904002) & 0xDCA907EB) - 3429) ^ (v17 - 1080819905) & 0x4FFFBD83)) ^ v17)))(v23);
}

uint64_t sub_10058B610@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v34 = (v31 - 486) | 0x91;
  uint64_t v35 = ((37 * (v34 ^ 0x4BFu)) ^ 0xFFFFFFFF94E05B7DLL) + a31;
  *(unsigned char *)(a6 + (a9 - 1124885212)) = *(unsigned char *)(v33 + v35) - (a7 & (2 * *(unsigned char *)(v33 + v35))) + 82;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((563 * ((a9 - 1124885211) < 0x40)) ^ v34)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23);
}

uint64_t sub_10058B698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v33 = v30 - 32;
  *(unsigned char *)(a6 + v29 + a2 + ((v33 + a4) & 0x6B5A1A9Eu)) = *(unsigned char *)(a29 + v31 - 2014820850);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * (v33 ^ (32 * ((v29 + a3) < 0x40)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_10058B6F0@<X0>(int a1@<W3>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v16 = (v9 - 1149) | 0x251;
  uint64_t v17 = 4 * (v12 + v10);
  int v18 = ((v16 + 1278) ^ (v13 + 581)) + v6 + (*(_DWORD *)(*(void *)(a6 - 0x330904BA72E93EB8) + v17) ^ v14);
  *(_DWORD *)(*(void *)(a2 - 0x330904BA72E93EB8) + v17) = v18 + v14 - (v11 & (2 * v18));
  int v19 = v12 + 1 + v7;
  BOOL v21 = v19 > a1 + 849 || v19 < v8;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v15 + 8 * ((1580 * v21) ^ v16)))(0xB7FBD8BABDFEB6FFLL, 0x17BFD6DFELL, 0x6FDDE7DDCFAFFDD8);
}

uint64_t sub_10058B7C0(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  unsigned int v9 = a3 - 32;
  uint64_t v10 = v5 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a4 == 32) * a5) ^ (v6 + v7 + 1273))))();
}

uint64_t sub_10058B7CC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((v3 + v2 + ((v1 - 2107800241) & 0x7DA27FEFu) - 1610301669 > 7)
                                * (((v1 - 156) | 0x323) - 811)) ^ (v1 + 1281))))();
}

uint64_t sub_10058B838@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X6>, int a4@<W8>)
{
  int v11 = v5 + 1;
  *(unsigned char *)(a1 + (v11 + a4)) = *(unsigned char *)(v10 + a3 + v6) - (v7 & (2 * *(unsigned char *)(v10 + a3 + v6))) + 82;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v8 + v11 + 1) < 0x40) * a2) ^ v4)))();
}

uint64_t sub_10058B840()
{
  return sub_1005A0500(v0);
}

uint64_t sub_10058B854(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = (1178560073 * (((&a13 | 0x4705D23) + (~&a13 | 0xFB8FA2DC)) ^ 0x36665D62)) ^ 0x650810FC;
  uint64_t v15 = (*(uint64_t (**)(unsigned int *))(v14 + 17144))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((1157 * (a14 == -25955570)) ^ 0x2A5u)))(v15);
}

uint64_t sub_10058B918()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v1 << ((2 * (v0 ^ 0x34)) ^ 0xD8)) - v2 == -147729737) * ((v0 ^ 0x334) + 1720)) ^ v0)))();
}

void sub_10058B984(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 1224239923 * ((a1 & 0x6C08674A | ~(a1 | 0x6C08674A)) ^ 0x61446562);
  uint64_t v4 = *(void *)(a1 + 8);
  unsigned int v5 = (535753261 * ((2 * (&v3 & 0x67ADD9C8) - &v3 + 408036914) ^ 0x12A6281D)) ^ (v1 - 274);
  int v2 = (char *)*(&off_1009960C0 + (v1 ^ 0x4E8)) - 8;
  (*(void (**)(int *))&v2[8 * v1 + 8664])(&v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10058BADC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((((v2 + 911) ^ 0x51E) * (v1 > 1)) ^ (v2 + 911))))(a1, 3568983869);
}

uint64_t sub_10058BBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_1005A4BBC(a6, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_10058BC00@<X0>(int a1@<W8>)
{
  STACK[0x288] = v1;
  int v4 = a1 - 118;
  unsigned int v5 = (void *)(v3 - 192);
  unsigned int v6 = (a1 + 335868739) & 0xEBFB0FAF;
  STACK[0x3D0] = 0;
  int v7 = 1755732067 * ((((v3 - 192) | 0x3CFC1E2F) - ((v3 - 192) & 0x3CFC1E2F)) ^ 0xE23AA3F4);
  *(_DWORD *)(v3 - 192) = v4 - v7 - 856;
  *(_DWORD *)(v3 - 188) = v7 ^ 0x45635138;
  v5[1] = STACK[0x278];
  v5[2] = 0x39E8CCF6252BBBF8;
  v5[3] = STACK[0x280];
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 ^ 0xC5E)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((*(_DWORD *)(v3 - 160) != -25955570)
                                                   * ((2 * v4) ^ 0x85A ^ v6 ^ 0x766)) ^ v4)))(v8);
}

uint64_t sub_10058BCF4@<X0>(void *a1@<X0>, int a2@<W1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,char a29,uint64_t a30,char a31,uint64_t a32,char a33,uint64_t a34,char a35,uint64_t a36,char a37)
{
  int v42 = &a33 + v37;
  uint64_t v60 = &a31 + v37;
  uint64_t v59 = &a27 + v37;
  uint64_t v58 = &a37 + v37;
  unint64_t v56 = &a29 + v37;
  int8x16_t v55 = &a23 + v37;
  int32x4_t v54 = &a35 + v37;
  int v43 = &a21 + v37;
  uint64_t v62 = v39;
  uint64_t v44 = a1[4];
  uint64_t v63 = a1[5];
  uint64_t v45 = a1[2];
  unsigned int v46 = (a2 + 805931652) & 0xCFF6763D;
  uint64_t v47 = *(void *)(v45 - 0x3DC5316605FC20B2);
  *(void *)(v41 - 136) = v42;
  *(void *)(v41 - 128) = v47;
  int v57 = a2 + 665;
  *(void *)(v41 - 120) = v44;
  *(void *)(v41 - 112) = a3;
  *(void *)(v41 - 104) = v45;
  *(_DWORD *)(v41 - 144) = a2 + 665 + ((((v41 - 144) | 0x6FE9286B) + (~(v41 - 144) | 0x9016D794)) ^ 0xDC94983E) * v40;
  int v48 = (a2 - 125) | 8;
  uint64_t v49 = 8 * (a2 ^ 0xD2B);
  (*(void (**)(uint64_t))(v38 + v49))(v41 - 144);
  *(_DWORD *)(v41 - 128) = a2
                         + 1225351577 * ((((v41 - 144) | 0x22994526) - ((v41 - 144) & 0x22994526)) ^ 0x1039D30)
                         - 1152;
  *(void *)(v41 - 144) = v45;
  *(void *)(v41 - 136) = v43;
  *(void *)(v41 - 120) = v42;
  *(void *)(v41 - 112) = v44;
  (*(void (**)(uint64_t))(v38 + 8 * (a2 + 743)))(v41 - 144);
  *(_DWORD *)(v41 - 144) = v57 + 1759421093 * ((((v41 - 144) | 0x65772B9F) - ((v41 - 144) & 0x65772B9F)) ^ 0xD60A9BCB);
  *(void *)(v41 - 128) = v42;
  *(void *)(v41 - 120) = v44;
  *(void *)(v41 - 136) = v60;
  *(void *)(v41 - 112) = v43;
  *(void *)(v41 - 104) = v45;
  (*(void (**)(uint64_t))(v38 + v49))(v41 - 144);
  *(void *)(v41 - 112) = v43;
  *(void *)(v41 - 104) = v45;
  *(_DWORD *)(v41 - 144) = v57 + 1759421093 * ((2 * ((v41 - 144) & 0x4A8C94F8) - (v41 - 144) - 1250727161) ^ 0x60EDB53);
  *(void *)(v41 - 136) = v59;
  *(void *)(v41 - 128) = v60;
  *(void *)(v41 - 120) = v44;
  uint64_t v61 = 8 * (a2 + 741);
  (*(void (**)(uint64_t))(v38 + v61))(v41 - 144);
  *(void *)(v41 - 128) = v59;
  *(void *)(v41 - 120) = v44;
  *(void *)(v41 - 136) = v58;
  *(void *)(v41 - 112) = v43;
  *(void *)(v41 - 104) = v45;
  *(_DWORD *)(v41 - 144) = v57 + 1759421093 * ((2 * ((v41 - 144) & 0x5AA23F78) - (v41 - 144) + 626901121) ^ 0x962070D5);
  (*(void (**)(uint64_t))(v38 + v49))(v41 - 144);
  *(_DWORD *)(v41 - 144) = v57 + 1759421093 * ((v41 - 144) ^ 0xB37DB054);
  *(void *)(v41 - 128) = v58;
  *(void *)(v41 - 120) = v44;
  *(void *)(v41 - 136) = v56;
  *(void *)(v41 - 112) = v43;
  *(void *)(v41 - 104) = v45;
  (*(void (**)(uint64_t))(v38 + v49))(v41 - 144);
  *(_DWORD *)(v41 - 144) = v57
                         + 1759421093
                         * ((((v41 - 144) | 0xE2ED7C5F) - (v41 - 144) + ((v41 - 144) & 0x1D1283A0)) ^ 0x5190CC0B);
  *(void *)(v41 - 120) = v44;
  *(void *)(v41 - 112) = v43;
  *(void *)(v41 - 128) = v56;
  *(void *)(v41 - 136) = v55;
  *(void *)(v41 - 104) = v45;
  (*(void (**)(uint64_t))(v38 + v61))(v41 - 144);
  *(_DWORD *)(v41 - 144) = v57 + 1759421093 * (((v41 - 144) & 0x4E8A1644 | ~((v41 - 144) | 0x4E8A1644)) ^ 0x20859EF);
  *(void *)(v41 - 120) = v44;
  *(void *)(v41 - 112) = v43;
  *(void *)(v41 - 136) = v54;
  *(void *)(v41 - 128) = v55;
  *(void *)(v41 - 104) = v45;
  (*(void (**)(uint64_t))(v38 + v61))(v41 - 144);
  *(void *)(v41 - 112) = v43;
  *(void *)(v41 - 104) = v45;
  *(void *)(v41 - 136) = v43;
  *(void *)(v41 - 128) = v54;
  *(_DWORD *)(v41 - 144) = v57 + 1759421093 * ((2 * ((v41 - 144) & 0x4B665BF8) - (v41 - 144) + 882484229) ^ 0x87E41451);
  *(void *)(v41 - 120) = v44;
  (*(void (**)(uint64_t))(v38 + v61))(v41 - 144);
  uint64_t v51 = *(void *)(v45 - 0x3DC5316605FC20BALL);
  *(_DWORD *)(v41 - 128) = a2
                         - 1759421093
                         * (((((v41 - 144) | 0xC4C87612) ^ 0xFFFFFFFE) - (~(v41 - 144) | 0x3B3789ED)) ^ 0x884A39B9)
                         - 1108;
  *(void *)(v41 - 144) = v62;
  *(void *)(v41 - 136) = v51;
  (*(void (**)(uint64_t))(v38 + 8 * (a2 ^ 0xD38)))(v41 - 144);
  *(_DWORD *)(v41 - 132) = (a2 - 796) ^ (1734042137
                                       * ((((v41 - 144) | 0x822A0DBE) - (v41 - 144) + ((v41 - 144) & 0x7DD5F240)) ^ 0xDEE4CEF3));
  *(void *)(v41 - 144) = v63;
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (a2 ^ 0xD3F)))(v41 - 144);
  return (*(uint64_t (**)(uint64_t))(v38
                                            + 8
                                            * ((21
                                              * (v48 + *(_DWORD *)(v41 - 136) - 1988464057 - 809 >= (v46 ^ 0x7FFFF9DA))) ^ a2)))(v52);
}

uint64_t sub_10058C218()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((381 * (v1 + 1 == v3 + 16)) ^ v0)))();
}

uint64_t sub_10058C2F4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((52 * (STACK[0x550] != 0)) ^ (v0 - 14))))();
}

uint64_t sub_10058C320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v29 = 38 * (v24 ^ 0x297);
  int v30 = 1734042137 * ((((v28 - 144) | 0x2068EE43) - (v28 - 144) + ((v28 - 144) & 0xDF9711B8)) ^ 0x7CA62D0E);
  *(void *)(v28 - 128) = v23;
  *(void *)(v28 - 144) = v27;
  *(_DWORD *)(v28 - 132) = v25 - v30 + ((v29 + 838) ^ 0x3C56D2C);
  *(_DWORD *)(v28 - 120) = v29 - v30 - 23;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v29 + 1510)))(v28 - 144);
  return sub_1005C3668(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_10058C3B4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 - 172) | 0x428) ^ 0x608) * LODWORD(STACK[0x368])) ^ v0)))();
}

uint64_t sub_10058C3D0@<X0>(int8x16_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int8x16_t *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int8x16_t a36)
{
  uint64_t v39 = (int8x16_t *)((char *)&STACK[0x630] + STACK[0x330] + a7 - 0x5FBF6A2C236079CBLL);
  *uint64_t v39 = veorq_s8(*a14, a36);
  v37[45] += 32;
  v37[46] = a1;
  v37[47] = a1;
  return (*(uint64_t (**)(int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38
                                                                                             + 8
                                                                                             * ((((v36 - 1808955030) & 0x6BD277F1 ^ 0x59A)
                                                                                               * (v39 == a1)) | v36)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_10058C464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,int a52,int a53,int a54)
{
  int v58 = STACK[0x2B4];
  if (LODWORD(STACK[0x2B4]) == 639471718) {
    return (*(uint64_t (**)(void))(v56
  }
                                + 8
                                * ((52
                                  * (((LODWORD(STACK[0x3C8]) + 1) ^ ((LODWORD(STACK[0x2B0]) - 632297221 + LODWORD(STACK[0x22C])) < 3)) & 1)) ^ (LODWORD(STACK[0x3C8]) + 636))))();
  if (v58 != 371036259)
  {
    int v59 = STACK[0x3C8];
    LODWORD(STACK[0x2B4]) = v58;
    int v60 = 3804331 * (((((v57 - 192) | 0xA1CC5FBA) ^ 0xFFFFFFFE) - (~(v57 - 192) | 0x5E33A045)) ^ 0xA4AD5313);
    *(void *)(v57 - 184) = STACK[0x230];
    *(_DWORD *)(v57 - 192) = (v58 - 396991828 + ((v59 - 219) ^ (2 * v58 - 742072518) & 0xFCE7E61C)) ^ v60;
    *(_DWORD *)(v57 - 188) = v59 - v60 + 1722;
    (*(void (**)(uint64_t))(v56 + 8 * (v59 + 1875)))(v57 - 192);
    JUMPOUT(0x10059C928);
  }
  int v62 = STACK[0x3C8];
  LODWORD(STACK[0x3C0]) = LODWORD(STACK[0x3C8]) + 924;
  (*(void (**)(void, unint64_t, void))(v56 + 8 * (v62 + 1906)))(*(unsigned int *)STACK[0x2B8], STACK[0x318], (LODWORD(STACK[0x2D0]) - 1096393532));
  unint64_t v63 = STACK[0x468];
  int v64 = *(_DWORD *)(v54 + 52) - 203985951;
  int v65 = LODWORD(STACK[0x40C]) ^ 0x6D6F4FF7;
  unsigned int v66 = (2 * LODWORD(STACK[0x40C])) & 0xDADE9FEE;
  int v67 = 1224239923 * ((v57 - 192) ^ 0xF2B3FDD7);
  uint64_t v68 = (void *)(v57 - 192);
  *uint64_t v68 = v55;
  *(_DWORD *)(v57 - 152) = v67 + v62 - 155;
  *(_DWORD *)(v57 - 148) = v67 + v65 + v66 - 1160183879;
  void v68[3] = v63;
  v68[4] = &STACK[0x610];
  *(_DWORD *)(v57 - 180) = (a53 & 0xEFF7FB74 ^ 0xABC69074)
                         - v67
                         + (((v62 ^ 0x657) + 2147481970) & a54 ^ 0x2A18B784)
                         + 265729022;
  *(_DWORD *)(v57 - 176) = v64 ^ v67;
  uint64_t v69 = (*(uint64_t (**)(uint64_t))(v56 + 8 * (v62 + 1967)))(v57 - 192);
  int v70 = *(_DWORD *)(v57 - 184);
  LODWORD(STACK[0x418]) = v70;
  return (*(uint64_t (**)(uint64_t))(v56 + 8 * ((1011 * (v70 == -25955570)) ^ LODWORD(STACK[0x3C0]))))(v69);
}

uint64_t sub_10058C470()
{
  BOOL v4 = *(void *)(v1 + 16) == 0x6C39C41327E11828 || *(_OWORD *)(v1 + 40) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((v4 * (((v0 + 104) ^ 0xFFFFF8F3) + (v0 ^ 0x790))) ^ v0)))();
}

uint64_t sub_10058C4CC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((30 * (v1 == (((v0 | 0x420u) - 1666 + 660) ^ (v0 | 0x420) ^ 0x452u))) ^ (v0 | 0x420))))();
}

uint64_t sub_10058C50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v17 = 1374699841
      * (((((v16 - 136) ^ 0x58210 | 0xCA7A79C2) ^ 0xFFFFFFFE) - ((v16 - 136) ^ 0x48007082 | 0x3585863D)) ^ 0xDA0E1564);
  *(void *)(v16 - 128) = v13;
  *(_DWORD *)(v16 - 136) = v17 + v12 - 241;
  *(_DWORD *)(v16 - 132) = v17 + 286424755;
  (*(void (**)(uint64_t))(v14 + 8 * (v12 ^ 0x930)))(v16 - 136);
  *(_DWORD *)(v16 - 120) = v12
                         - 1759421093 * ((((v16 - 136) | 0xD85ACA2C) - ((v16 - 136) & 0xD85ACA2C)) ^ 0x6B277A78)
                         - 112;
  *(void *)(v16 - 136) = v15;
  *(void *)(v16 - 128) = a12;
  (*(void (**)(uint64_t))(v14 + 8 * (v12 ^ 0x924)))(v16 - 136);
  *(_DWORD *)(v16 - 112) = (v12 + 594) ^ (1374699841 * ((v16 - 136) ^ 0x6DF41809));
  *(void *)(v16 - 136) = v13;
  *(void *)(v16 - 120) = a12;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v12 ^ 0x91F)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v16 - 128) == 542281048) * (((v12 ^ 0x46) + 621) ^ 0x350)) ^ v12)))(v18);
}

uint64_t sub_10058C678@<X0>(int a1@<W1>, int a2@<W2>, unsigned int a3@<W3>, uint64_t a4@<X8>)
{
  uint64_t v10 = (v8 + a1 + a2);
  uint64_t v11 = v10 + a4;
  uint64_t v12 = ((a3 + 969) ^ 0x747) & v10;
  uint64_t v13 = v7 - v11;
  uint64_t v14 = (v12 | v5) - v11;
  uint64_t v15 = (a3 ^ 0x37ALL) - v11;
  BOOL v17 = (unint64_t)(v4 - a4) >= 0x10
     && (unint64_t)(v13 + v12) >= 0x10
     && (unint64_t)(v14 + 2) >= 0x10;
  unint64_t v18 = v15 + (v12 | v6);
  int v20 = !v17 || v18 < 0x10;
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((202 * v20) ^ a3)))();
}

uint64_t sub_10058C6FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, unsigned int a5@<W4>, int a6@<W5>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v19 = (a7 - 763) | 0x11;
  *(_DWORD *)(a15 + 4 * v16) = v15;
  BOOL v20 = a5 > 0x19EEB823;
  if (v20 == v18 - 99867962 < v19 - 435075133) {
    BOOL v20 = v18 - 99867962 < a6;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                                + 8
                                                                                * ((v20 * ((v19 + 1589) ^ 0x6C3)) ^ v19)))(a1, a2, a3, a4, 84);
}

uint64_t sub_10058C714@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  BOOL v14 = v11 > 0x10516874;
  uint64_t v15 = 4 * ((v10 ^ 0x492) + a1 + v9);
  *(_DWORD *)(a9 + v15) = *(_DWORD *)(*(void *)(v12 - 0x330904BA72E93EB8) + v15);
  if (v14 == v9 + 268925677 < -273770613) {
    BOOL v14 = v9 + 268925677 < (int)(v11 + 1873713035);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 8 * ((1683 * v14) ^ v10)))(1170, 268925677, 4021196683);
}

uint64_t sub_10058C7B4(uint64_t a1)
{
  int v2 = 3804331 * ((-2 - ((a1 | 0x4D8BE6A2) + (~a1 | 0xB274195D))) ^ 0x48EAEA0B);
  int v3 = *(_DWORD *)(a1 + 32) ^ v2;
  int v4 = *(_DWORD *)(a1 + 4) + v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  int v7 = 568459285 * (*(_DWORD *)(a1 + 8) ^ v2) + 116594097;
  unsigned int v8 = 1755732067 * ((2 * (v10 & 0x2FC35F18) - v10 - 801333019) ^ 0xEFA1D3E);
  v3 -= 2138963224;
  unsigned int v11 = (v4 ^ 0xBDC43936) - v8;
  int v12 = v8 ^ (v3 + 82);
  v10[0] = v5;
  v10[1] = v6;
  unsigned int v13 = (v7 ^ 0x67FFCFBB) - v8 + ((2 * v7) & 0xCFFF9F76) - 547883024;
  uint64_t result = (*((uint64_t (**)(void *))*(&off_1009960C0 + v3) + v3 + 2018))(v10);
  *(_DWORD *)a1 = v14;
  return result;
}

uint64_t sub_10058C934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  return (*(uint64_t (**)(void))(v36
                              + 8
                              * ((((((unint64_t)(&a33 + ~a18 + (v34 + v33)) < 0x10) ^ (v35 - 11)) & 1)
                                * (v35 - 875)) ^ v35)))();
}

uint64_t sub_10058C97C@<X0>(int a1@<W1>, unint64_t a2@<X6>, uint64_t a3@<X7>, int a4@<W8>)
{
  *(unsigned char *)(a3 + v4) = ((v5 + 1) ^ v7) * (v5 + 18);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v4 == ((63 * (a4 ^ v6)) ^ a2)) * a1) ^ a4)))();
}

uint64_t sub_10058C984()
{
  *(_DWORD *)(v3 - 192) = (v0 + 426522951) ^ (460628867 * ((v3 - 768153055 - 2 * ((v3 - 192) & 0xD236EAE1)) ^ 0x9EA0689C));
  (*(void (**)(uint64_t))(v2 + 8 * (v0 + 2102)))(v3 - 192);
  *(void *)(v1 + 24) = STACK[0x268];
  *(unsigned char *)(v1 + 12) = 99 * ((((v3 + 64) | 0xAB) - ((v3 + 64) & 0xAB)) ^ 0x70) + 96;
  *(_DWORD *)(v3 - 184) = v0
                        - 1755732067 * ((((v3 - 192) | 0x7D1B5DAB) - ((v3 - 192) & 0x7D1B5DAB)) ^ 0xA3DDE070)
                        + 1732;
  *(void *)uint64_t v1 = STACK[0x270];
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 2093)))(v3 - 192);
  STACK[0x318] = 0;
  LODWORD(STACK[0x2D0]) = 1096393532;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * (((STACK[0x318] == 0) * (((v0 + 152) ^ 0x2C7) - 312)) ^ (v0 + 1805))))(v4);
}

uint64_t sub_10058CA9C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0;
}

void sub_10058CAB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = (*(_DWORD *)(a2 + 4) - 1145886373) > 0x101;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10058CB1C()
{
  STACK[0x500] = STACK[0x3C0];
  return sub_10058C2F4();
}

uint64_t sub_10058CB44(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (v8 | (4 * (*(_DWORD *)(v9 + v10 * (uint64_t)a3 + 36) != a2 + (v8 ^ a8) * a7 - 218)))))();
}

uint64_t sub_10058CB70@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((511
                                * (((((v2 + 2) ^ (2 * a1)) + v3 - ((((v2 + 2) ^ (2 * a1)) << (v5 ^ 0x64)) & v2)) ^ v3) > v1)) ^ v6)))();
}

uint64_t sub_10058CBB4@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  int v49 = *((_DWORD *)&a33 + ((v47 + v45) >> (((4 * v46) ^ 0xB4) - 14)) + 18);
  *(unsigned char *)(a1 + (v47 + v45)) = v49 ^ 0x90;
  *(unsigned char *)(a1 + (v47 + v45 + 1)) = (BYTE1(v49) ^ 0x19) + (~(2 * (BYTE1(v49) ^ 0x19)) | 0x5B) + 83;
  *(unsigned char *)(a1 + (v47 + v45 + 2)) = (BYTE2(v49) ^ 0xD9) - ((2 * (BYTE2(v49) ^ 0xD9)) & 0xA4) + 82;
  *(unsigned char *)(a1 + (v47 + v45 + 3)) = (HIBYTE(v49) ^ 0x86) - ((2 * (HIBYTE(v49) ^ 0x86)) & 0xA4) + 82;
  BOOL v50 = v47 + 1804928170 < (a45 - 992880014);
  if (v47 + 1804928170 < a2 != a45 - 992880014 < a2) {
    BOOL v50 = a45 - 992880014 < a2;
  }
  return (*(uint64_t (**)(void))(v48 + 8 * ((v50 | (2 * v50)) ^ v46)))();
}

uint64_t sub_10058CC94()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 + v0 - 2129653598 >= ((v2 - 346) ^ 0x323u)) * (v2 - 1145)) ^ v2)))();
}

uint64_t sub_10058CCDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v12 + (v10 ^ 0x67E)) = v14;
  return (*(uint64_t (**)(void))(v13 + 8 * (int)((1274 * ((v11 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ v10)))();
}

uint64_t sub_10058CD20(uint64_t a1, uint64_t a2)
{
  int v6 = 2 * (v2 ^ 0x1AE);
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((57
                                              * (((v6 - 35) ^ ((*(unsigned char *)(v4 + a2)
                                                                                                - **(unsigned char **)(v3 + 8 * (v6 ^ 0x6A))
                                                                                                + 64) == ((v6 - 77) ^ 0xA1))) & 1)) ^ (v6 + 59))))(161);
}

void sub_10058CD6C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  int v2 = (char *)*(&off_1009960C0 + v1 - 628) - 8;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * (v1 ^ 0xAC9)])(32, 0x101004023FF3BD5) == 0)
                      * (2 * (v1 ^ 0x371) - 308)) ^ v1)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10058CE24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((((120 * (((a6 - 1285) | 0x200) ^ 0x383)) ^ 0x170) * ((v7 & 0x18) == 0)) ^ a6)))();
}

uint64_t sub_10058CE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return a20(HIDWORD(a18), a2, a3, a4, 3271084868, a6, a7, 1023883919, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_10058CE90(uint64_t a1, int a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((61
                                * (a4 + a3 + 541066637 < ((((a2 - 1534158131) & 0x5B7167F6) - 1783) ^ ((a2 - 1168) | 0x55u)))) ^ a2)))();
}

uint64_t sub_10058CEFC(uint64_t a1)
{
  BOOL v5 = *(_DWORD *)(*(void *)(a1 + 8) + v3) == ((v4 - 777) ^ (v2 + 97));
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((2 * (((v4 - 57) ^ v5) & 1)) & 0xEF | (16
                                                                                        * (((v4 - 57) ^ v5) & 1))) ^ v4)))();
}

void sub_10058CF3C(uint64_t a1)
{
  int v1 = 1178560073 * ((a1 - 2 * (a1 & 0x8314ACD2) - 2095797038) ^ 0xB102AC92);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_10058CFFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100591438(a1, a2, a3, a4, a5, a6, STACK[0x450]);
}

uint64_t sub_10058D014()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((((2 * v1) ^ 0x384) - 207) | 0x650) ^ 0x638) * ((v0 & 0x18) != 0)) ^ v1)))();
}

uint64_t sub_10058D050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  return (*(uint64_t (**)(void))(v25
                              + 8 * ((1151 * (a24 - *(_DWORD *)(a2 + 4) + 102547206 == 28 * a18 - 414941264)) ^ v24)))();
}

uint64_t sub_10058D0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * ((61 * ((((a8 + 1096) ^ 0x539) & v9) == 0)) ^ a8)))(a1, a2, a3, (v10 - a3));
}

void sub_10058D0D8(int a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  if (a5) {
    BOOL v5 = *a4 == 0;
  }
  else {
    BOOL v5 = 0;
  }
  int v8 = !v5 || a2 == 0 || a1 == 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10058D160(uint64_t a1)
{
  *(_DWORD *)(v2 - 144) = v1;
  return sub_1005C4D14(a1);
}

uint64_t sub_10058D174(uint64_t a1, double a2, int8x16_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t a17, int32x4_t a18, int8x16_t a19, int8x16_t a20,int8x16_t a21)
{
  int8x16_t v24 = (int8x16_t)vld1q_dup_f32((const float *)v22);
  v25.i64[0] = 0x8000000080000000;
  v25.i64[1] = 0x8000000080000000;
  uint64_t v26 = 129 * ((-1613178857 - v23) ^ 0x448u);
  a3.i32[0] = *(_DWORD *)(v22 + 4);
  a3.i32[1] = *(_DWORD *)(v22 + 4 * (v26 - 643));
  a3.i32[2] = *(_DWORD *)(v22 + 12);
  int8x16_t v27 = vextq_s8(v24, a3, 0xCuLL);
  int8x16_t v28 = a3;
  v28.i32[3] = *(_DWORD *)(v22 + 16);
  int32x4_t v29 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v28, a21), vandq_s8(v27, v25)), 1uLL), a20);
  v30.i32[0] = *(_DWORD *)(v21 + 4 * (*(_DWORD *)(v22 + 4) & 1));
  v30.i32[1] = *(_DWORD *)(v21 + 4 * (*(_DWORD *)(v22 + 4 * (v26 - 643)) & 1));
  v30.i32[2] = *(_DWORD *)(v21 + 4 * (*(_DWORD *)(v22 + 12) & 1));
  v30.i32[3] = *(_DWORD *)(v21 + 4 * (v28.i8[12] & 1));
  *(int8x16_t *)uint64_t v22 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v22 + 1588), v30), a17), (int8x16_t)vaddq_s32(vsubq_s32(v29, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v29, v29), a19)), a18));
  return (*(uint64_t (**)(void))(a1 + 8 * ((-1613178857 - v23) ^ 0xD5)))();
}

uint64_t sub_10058D180()
{
  LODWORD(STACK[0x5D0]) = v0;
  return sub_1005C8438();
}

void sub_10058D1A4()
{
}

uint64_t sub_10058D1EC(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = -92;
  }
  else {
    char v2 = -94;
  }
  *(unsigned char *)(a1 + 88) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0x5F) + v2;
  return 0;
}

uint64_t sub_10058D22C@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((590
                                * ((a2 ^ 0xDCD8C205 ^ (v2 - a1 - 352)) == v3
                                                                        + 1450357398
                                                                        + ((v2 + 134233746) | 0xA0203541))) ^ v2)))();
}

uint64_t sub_10058D294()
{
  BOOL v2 = ((2 * (((v0 - 183) ^ 0x7C8B17A1) - 6)) & 0xEFFB77E8 ^ 0xE9122228)
     + ((((v0 - 183) ^ 0x7C8B17A1) - 6) ^ 0x8B76AEEB)
     + 1568407132 == 1434040912;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 | (4 * v2)) ^ v0)))();
}

uint64_t sub_10058D29C(uint64_t a1)
{
  uint64_t v8 = (v3 - 2129655073 + v2 - v4 + 1474);
  *(void *)(a1 - 7 + v8) = *(void *)(v6 - 7 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 - (v1 & 0xFFFFFFF8) == -8) * ((v5 - 470) ^ 0x5C0)) ^ v5)))();
}

uint64_t sub_10058D2FC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 != 0xD0CC5E8DF2EC69FLL) * ((((v1 - 751322679) & 0x2CC84577) + 289) ^ 0x24D)) ^ v1)))();
}

uint64_t sub_10058D350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((91 * (((v11 + 1616) ^ 0x4F5B5FD3 ^ (v11 + 556)) + a11 < 0x7FFFFFFE)) ^ v11)))();
}

uint64_t sub_10058D3A4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  int v36 = *(_DWORD *)(&a19 + ((v33 + v31) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v33 + v31)) = (v32 - v35) ^ 0x52 ^ v36;
  *(unsigned char *)(a1 + (v33 + v31 + 1)) = (BYTE1(v36) ^ 0x19) + (~(2 * (BYTE1(v36) ^ 0x19)) | 0x5B) + 83;
  *(unsigned char *)(a1 + (v33 + v31 + 2)) = (BYTE2(v36) ^ 0xD9) - ((2 * (BYTE2(v36) ^ 0xD9)) & 0xA4) + 82;
  *(unsigned char *)(a1 + (v33 + v31 + 3)) = (HIBYTE(v36) ^ 0x86) - ((2 * (HIBYTE(v36) ^ 0x86)) & 0xA4) + 82;
  BOOL v37 = v33 - 1831838925 < (a31 - 488965163);
  if (v33 - 1831838925 < a2 != a31 - 488965163 < a2) {
    BOOL v37 = a31 - 488965163 < a2;
  }
  return (*(uint64_t (**)(void))(v34 + 8 * ((1730 * v37) ^ v32)))();
}

uint64_t sub_10058D484@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v10 = a3 + ((a4 - 2087421510) & 0x7C6B8756u) + a2 + a1 + 778 + a5;
  uint64_t v11 = ((_BYTE)a3 + (((_BYTE)a4 - 70) & 0x56) + (_BYTE)a2 + (_BYTE)a1 + 10) & 0xF;
  unint64_t v12 = v11 + v7 - v10;
  unint64_t v13 = (v11 | v8) - v10;
  unint64_t v14 = (v11 | v6) - v10;
  BOOL v18 = (unint64_t)(v5 - a5) < 0x10 || v12 < 0x10 || v13 < 0x10 || v14 < 0x10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((505 * (((a4 ^ 0x721 ^ v18) & 1) == 0)) ^ a4)))();
}

uint64_t sub_10058D518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  uint64_t v26 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((v25 - 1554) ^ (1403 * ((a24 & 0x20000000) == 0))));
  return v26(a1, v26, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_10058D548()
{
  return sub_100591528();
}

uint64_t sub_10058D554@<X0>(unsigned int a1@<W2>, int a2@<W8>)
{
  unsigned int v9 = v7 + 1;
  BOOL v10 = v4 < a1;
  *(unsigned char *)(v6 + (v2 + 1)) = *(unsigned char *)(v5 + (a2 + 1));
  if (v10 == v9 < a1 + (v3 ^ 0x400) - 776) {
    BOOL v10 = v9 < v4;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v10 | (2 * v10)) + v3)))();
}

uint64_t sub_10058D564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19)
{
  a19 = 764
      - 460628867 * ((194051134 - (&a17 | 0xB90FC3E) + (&a17 | 0xF46F03C1)) ^ 0xB8F981BC);
  a17 = &STACK[0x130F29621C6D0970];
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v20 + 17424))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((1690 * (a18 == v19)) ^ v21)))(v22);
}

uint64_t sub_10058D600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  LODWORD(STACK[0x574]) = 1424257457;
  LODWORD(STACK[0x50C]) = 128;
  int v64 = 1759421093 * ((v63 + 181515909 - 2 * ((v63 - 192) & 0xAD1B745)) ^ 0xB9AC0711);
  int v65 = (void *)(v63 - 192);
  v65[4] = v60 + 0x330904BA72E94260;
  v65[5] = 0;
  v65[7] = v60 + 0x330904BA72E94150;
  v65[8] = 0;
  v65[6] = a50;
  *(_DWORD *)(v63 - 184) = v64 ^ 0x38BB644;
  *(_DWORD *)(v63 - 168) = v61 - v64 + 617;
  void v65[2] = a60;
  *int v65 = v60;
  uint64_t v66 = (*(uint64_t (**)(uint64_t))(v62 + 8 * (v61 + 1061)))(v63 - 192);
  return (*(uint64_t (**)(uint64_t))(v62
                                            + 8
                                            * ((238 * (*(_DWORD *)(v63 - 180) != ((v61 - 911) ^ 0xFE73F3D4))) ^ v61)))(v66);
}

uint64_t sub_10058D710@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((539 * (a2 + 1 == v3 + 44)) ^ a1)))();
}

uint64_t sub_10058D7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, unsigned int a19)
{
  if (a19 < v21 != v20 - 516444418 < ((2 * (a5 ^ (a5 - 579))) ^ (v21 + 902))) {
    BOOL v22 = v20 - 516444418 < ((2 * (a5 ^ (a5 - 579))) ^ (v21 + 902));
  }
  else {
    BOOL v22 = v20 - 516444418 > a19;
  }
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((!v22 * ((a18 & 0x705A7F6F) - 810)) ^ (a8 + a5 - 410))))(3289839047);
}

uint64_t sub_10058D860@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,char a29)
{
  return sub_100597DDC(a1, a2, a3, &a29 + ((a4 + 1267) ^ v30) + v29);
}

uint64_t sub_10058D878(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(*(void *)(a1 + 16) + v4) != v3) * (((v2 - 324) ^ 0x6C4) - 1345)) | (v2 - 324))))();
}

uint64_t sub_10058D8B4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned char *a8)
{
  unsigned int v9 = (unsigned char *)STACK[0x458];
  unsigned int v10 = ((a1 + 1343) ^ 0xBE00502D) + 1;
  a8[12] = (HIBYTE(v10) ^ 0xBE) + ~(2 * ((HIBYTE(v10) ^ 0xBE) & 0x53 ^ HIBYTE(v10) & 1)) + 83;
  a8[13] = (~(v10 >> 15) | 0x5B) + BYTE2(v10) + 83;
  a8[14] = (BYTE1(v10) ^ 0x56) - ((2 * (BYTE1(v10) ^ 0x56)) & 0xA4) + 82;
  a8[15] = v10 ^ 0x66;
  v9[16] ^= *a8 ^ 0x52;
  v9[17] ^= a8[1] ^ 0x52;
  v9[18] ^= a8[2] ^ 0x52;
  v9[19] ^= a8[3] ^ 0x52;
  v9[20] ^= a8[4] ^ 0x52;
  v9[21] ^= a8[5] ^ 0x52;
  v9[22] ^= a8[6] ^ 0x52;
  v9[23] ^= a8[7] ^ 0x52;
  v9[24] ^= a8[8] ^ 0x52;
  v9[25] ^= a8[9] ^ 0x52;
  v9[26] ^= a8[10] ^ 0x52;
  v9[27] ^= a8[11] ^ 0x52;
  v9[28] ^= a8[12] ^ 0x52;
  v9[29] ^= a8[13] ^ 0x52;
  v9[30] ^= a8[14] ^ 0x52;
  v9[31] ^= a8[15] ^ 0x52;
  return (*(uint64_t (**)(void))(v8 + 8 * ((a1 + 1112) ^ 0x5Au)))();
}

uint64_t sub_10058DAD4(uint64_t a1)
{
  unint64_t v3 = STACK[0x468];
  unint64_t v4 = LODWORD(STACK[0x40C]);
  STACK[0x4E8] = v4;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2
                                                              + 8
                                                              * (((v4 != ((261 * (v1 ^ 0x234)) ^ 0x30F))
                                                                * (((v1 - 781883320) & 0x2E9A97E7) - 377)) ^ v1)))(a1, v3);
}

void sub_10058DB34()
{
}

uint64_t sub_10058DB3C@<X0>(int a1@<W3>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v6 + (v4 + a1)) = *(unsigned char *)(v5 + a3 + a2);
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((4 * ((a1 + v4 + 1) > 0x3F)) | (32 * ((a1 + v4 + 1) > 0x3F))) ^ v3)))();
}

uint64_t sub_10058DB88()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(_DWORD *)(v1 - 0xD547898781B11B0) == 534536586)
                                     * (((v0 + 258) ^ 0xFFFFFEA6) + 43 * (v0 ^ 0x19F))) ^ v0)))();
}

uint64_t sub_10058DBDC(unint64_t a1)
{
  STACK[0x438] = STACK[0x330] - 176;
  *(void *)(v2 + 208) = a1;
  return (*(uint64_t (**)(void))(v4 + 8 * (v1 ^ (675 * (v3 > a1)))))();
}

uint64_t sub_10058DC88(uint64_t a1)
{
  STACK[0x330] = v2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8 * (((LODWORD(STACK[0x224]) + 353) * (v3 == v5)) ^ (v1 - 140))))(a1, 2122182780);
}

uint64_t sub_10058DCC4()
{
  int v6 = 1734042137 * ((2 * ((v5 - 144) & 0x195CF8E8) - (v5 - 144) - 425523436) ^ 0xBA6DC459);
  *(_DWORD *)(v5 - 132) = v1 - v6 + ((v0 + 328225906) & 0xEC6FAE95 ^ 0x2F89680F);
  *(void *)(v5 - 128) = v4;
  *(_DWORD *)(v5 - 120) = v0 - v6 - 285;
  *(void *)(v5 - 144) = v3;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xBE0u)))(v5 - 144);
  return sub_1005B6218(v7);
}

uint64_t sub_10058DD64()
{
  uint64_t v0 = (uint64_t)*(&off_1009960C0
                + ((63 * ((qword_100A48C88 - dword_100A49800) ^ 0x14)) ^ byte_10079DEE0[byte_1007AA2A0[(63 * ((qword_100A48C88 - dword_100A49800) ^ 0x14))] ^ 0x60])
                - 28);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (unint64_t *)*(&off_1009960C0
                           + (byte_1007AA1A0[byte_1007A68D0[(63
                                                                                             * ((qword_100A48C88 + v1) ^ 0x14))] ^ 0xAA] ^ (63 * ((qword_100A48C88 + v1) ^ 0x14)))
                           - 48);
  unint64_t v3 = (unint64_t)&v7[*v2 ^ v1];
  uint64_t v4 = 102320191 * v3 + 0x17632197ED3107ECLL;
  unint64_t v5 = 102320191 * (v3 ^ 0xEC406678D1E7DD14);
  *(void *)(v0 - 4) = v4;
  *uint64_t v2 = v5;
  LOBYTE(v5) = 63 * (*(_DWORD *)(v0 - 4) ^ 0x14 ^ v5);
  uint64_t v9 = (uint64_t)*(&off_1009960C0
                + (v5 ^ byte_1007AA1A0[byte_1007A68D0[v5] ^ 0xAA])
                - 108);
  unsigned int v8 = (1374699841 * (((&v8 | 0xD1CBF6C8) - (&v8 & 0xD1CBF6C8)) ^ 0xBC3FEEC1)) ^ 0x3D5;
  LOBYTE(v0) = 63 * (*(_DWORD *)(v0 - 4) ^ 0x14 ^ *(_DWORD *)v2);
  return (*((uint64_t (**)(unsigned int *))*(&off_1009960C0
                                                     + ((63
                                                                        * ((qword_100A48C88 - dword_100A49800) ^ 0x14)) ^ byte_1007A6AD0[byte_1007A1270[(63 * ((qword_100A48C88 - dword_100A49800) ^ 0x14))] ^ 0xF1])
                                                     - 39)
          + (v0 ^ byte_1007AA1A0[byte_1007A68D0[v0] ^ 0xF3])
          + 1926))(&v8);
}

uint64_t sub_10058DF8C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (((v2 - 143135667 + 40 * (v3 ^ 0x2FCu) > 0x7FFFFFFE)
                                                       * ((v3 + 232) ^ 0x229)) ^ v3)))(a1, a2);
}

uint64_t sub_10058DFEC()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1036
                                * (((v3 ^ (v1 - 453)) & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0)) | v4)))();
}

uint64_t sub_10058E02C()
{
  return sub_1005B9A04();
}

uint64_t sub_10058E1C0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2824 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x312u)))();
}

uint64_t sub_10058E214()
{
  uint64_t v6 = *v10;
  int v7 = 2 * (v5 - 144);
  int v8 = 535753261 * (((v7 | 0x1CE0AA34) - (v5 - 144) - 242242842) ^ 0x4845B35);
  *(_DWORD *)(v5 - 144) = v8 + v0 + 379;
  *(_DWORD *)(v5 - 128) = v8 ^ 0x18F94B14;
  *(void *)(v5 - 136) = v11;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 + 837)))(v5 - 144);
  *(void *)(v5 - 136) = v1;
  *(void *)(v5 - 128) = v1;
  *(void *)(v5 - 120) = v3;
  *(void *)(v5 - 112) = v11;
  *(void *)(v5 - 104) = v2;
  *(_DWORD *)(v5 - 144) = v0 + 1759421093 * (((~(v5 - 144) & 0xE2DB43C) - (~(v5 - 144) | 0xE2DB43D)) ^ 0xBD500469) + 681;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 + 757)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = v0 - 1759421093 * (((v7 | 0x1D0B0EDE) - (v5 - 144) + 1903851665) ^ 0x3DF8373B) - 1092;
  *(void *)(v5 - 144) = v6;
  *(void *)(v5 - 136) = v1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 ^ 0xD08)))(v5 - 144);
}

uint64_t sub_10058E37C(uint64_t result)
{
  *(_DWORD *)(result + 8) = 1988463603;
  return result;
}

uint64_t sub_10058E38C@<X0>(unsigned int a1@<W1>, int a2@<W8>)
{
  int v8 = v3 - 29;
  *(_DWORD *)(*(void *)(v7 - 0x330904BA72E93EB8) + 4 * (int)((v8 ^ 0xC053D144) + a2 + v5)) = *(_DWORD *)(*(void *)(v7 - 0x330904BA72E93EB8) + 4 * a1);
  return (*(uint64_t (**)(void))(v6 + 8 * ((101 * (v5 - 1 + v2 < (v4 + v8 + 859 + 705))) ^ v8)))();
}

uint64_t sub_10058E3F8()
{
  int v2 = *(_DWORD **)(v1 + 16);
  *(void *)(*(void *)(v1 + 24) - 0x749AC022234F284ALL) = v0;
  *int v2 = 0;
  return sub_1005C9BA0();
}

uint64_t sub_10058E400@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((*(_DWORD *)(v2 - 0xD547898781B11A8) == v1 - 25955737)
                                     * ((v1 + 202366296) & 0xF3F027BD ^ 0x2E1)) ^ v1)))();
}

uint64_t sub_10058E468(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((61 * (a4 + a2 + (v4 ^ 0x8024317u) < ((v4 - 1205299054) & 0x47D767F2u) - 1944)) ^ v4)))();
}

uint64_t sub_10058E4E0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>, int8x16_t a4@<Q4>, int8x16_t a5@<Q5>)
{
  unsigned int v9 = a1 - 32;
  uint64_t v10 = v6 + v9;
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(v10 - 15));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v10 - 31));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  uint64_t v15 = v5 + v9;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), a4)), a5));
  *(int8x16_t *)(v15 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), a4)), a5));
  *(int8x16_t *)(v15 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v8 + 8 * (((a2 == 32) * (((v7 + a3) & 0x195E83FF) - 479)) | v7)))();
}

uint64_t sub_10058E4EC(uint64_t a1, uint64_t a2)
{
  return sub_100597DD8(a1, a2, 1266);
}

uint64_t sub_10058E4F8()
{
  BOOL v3 = (v1 ^ (v0 + 532) ^ 0x91738D26) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 | (4 * v3)) ^ v0)))();
}

uint64_t sub_10058E53C@<X0>(int a1@<W4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55,int a56,int a57,int a58)
{
  *(_DWORD *)(v59 - 128) = a55 ^ 0xBAD9EBD0;
  *(_DWORD *)(v59 - 140) = a57 ^ 0x42F91E45;
  *(_DWORD *)(v59 - 132) = a58 ^ 0x8F43CB6;
  *(_DWORD *)(v59 - 136) = a56 ^ 0xEE0843F6;
  int v60 = *(_DWORD *)(v59 - 120) - 653;
  int v61 = *(_DWORD *)(v59 - 120);
  uint64_t v62 = a1 & 0xFFFFFFF2 ^ 0xAC81FB7F;
  *(void *)(v59 - 184) = v62;
  LOBYTE(v62) = *(unsigned char *)(a44 + (*(unsigned __int8 *)(a2 + v62) ^ 0xF3)) + ((v60 | 4) ^ 0xBB);
  uint64_t v63 = a1 & 0xFFFFFFFE ^ 0xAC81FB7B;
  *(void *)(v59 - 152) = v63;
  int v64 = (v62 ^ 2) << 16;
  LOBYTE(v62) = *(unsigned char *)(a44 + (*(unsigned __int8 *)(a2 + v63) ^ 0x57));
  uint64_t v65 = a1 & 0xFFFFFFF5 ^ 0xAC81FB7A;
  *(void *)(v59 - 160) = v65;
  int v66 = ((v62 + 102) ^ 0xF6) << 16;
  LODWORD(v65) = *(unsigned __int8 *)(a43 + (*(unsigned __int8 *)(a2 + v65) ^ 0xB6));
  uint64_t v67 = a1 & 0xFFFFFFFB ^ 0xAC81FB7E;
  *(void *)(v59 - 192) = v67;
  LODWORD(v62) = (v65 ^ 0xAF) << 8;
  uint64_t v68 = *(unsigned __int8 *)(a2 + v67);
  int v69 = *(unsigned __int8 *)(a45 + (v68 ^ 0x9A));
  uint64_t v70 = a1 & 0xFFFFFFF8 ^ 0xAC81FB7F;
  *(void *)(v59 - 224) = v70;
  LODWORD(v68) = v69 ^ (v68 - ((2 * v68) & 0x8E) + 71) ^ 0xFFFFFFCF;
  uint64_t v71 = *(unsigned __int8 *)(a2 + v70) ^ 0xD6;
  uint64_t v72 = a1 & 0xFFFFFFFD ^ 0xAC81FB7A;
  *(void *)(v59 - 216) = v72;
  LODWORD(v68) = *(unsigned __int8 *)(a42 + v71) ^ 0x96 | (v68 << 24);
  LODWORD(v71) = *(unsigned __int8 *)(a43 + *(unsigned __int8 *)(a2 + v72)) ^ 0xBD;
  uint64_t v73 = a1 & 0xFFFFFFFC ^ 0xAC81FB7B;
  *(void *)(v59 - 176) = v73;
  int v74 = *(unsigned __int8 *)(a42 + (*(unsigned __int8 *)(a2 + v73) ^ 0x74));
  int v75 = v66 | (v71 << 8);
  uint64_t v76 = a1 & 0xFFFFFFF3 ^ 0xAC81FB7E;
  *(void *)(v59 - 168) = v76;
  LODWORD(v71) = *(unsigned __int8 *)(a45 + (*(unsigned __int8 *)(a2 + v76) ^ 0x6ELL)) ^ (*(unsigned __int8 *)(a2 + v76)
                                                                                        + (~(2
                                                                                           * *(unsigned __int8 *)(a2 + v76)) | 0x71)
                                                                                        + 72) ^ 0x51;
  uint64_t v77 = a1 ^ 0xAC81FB7A;
  *(void *)(v59 - 200) = v77;
  int v78 = v64 | (v71 << 24);
  uint64_t v202 = a1 & 0xFFFFFFF7 ^ 0xAC81FB7A;
  int v79 = v75 | v74 ^ 0x54 | ((*(unsigned __int8 *)(a45 + (*(unsigned __int8 *)(a2 + v77) ^ 0x15)) ^ (*(unsigned __int8 *)(a2 + v77) - ((2 * *(unsigned __int8 *)(a2 + v77)) & 0xFF8F) + 71) ^ 0xAE) << 24);
  LODWORD(v71) = *(unsigned __int8 *)(a45 + (*(unsigned __int8 *)(a2 + v202) ^ 0x46)) ^ (*(unsigned __int8 *)(a2 + v202)
                                                                                         - ((2
                                                                                           * *(unsigned __int8 *)(a2 + v202)) & 0x8E)
                                                                                         + 71) ^ 0xFFFFFFE7;
  uint64_t v80 = a1 & 0xFFFFFFF1 ^ 0xAC81FB7E;
  *(void *)(v59 - 208) = v80;
  LODWORD(v62) = v62 | (v71 << 24);
  LODWORD(v71) = *(unsigned __int8 *)(a43 + (*(unsigned __int8 *)(a2 + v80) ^ 0xD5)) ^ 0x35;
  uint64_t v81 = a1 & 0xFFFFFFFA ^ 0xAC81FB7F;
  *(void *)(v59 - 232) = v81;
  uint64_t v82 = a1 & 0xFFFFFFF4 ^ 0xAC81FB7B;
  *(void *)(v59 - 248) = v82;
  LODWORD(v68) = v68 & 0xFF00FFFF | (((*(unsigned char *)(a44 + (*(unsigned __int8 *)(a2 + v81) ^ 0x9DLL)) + 102) ^ 0xF7) << 16);
  LODWORD(v82) = *(unsigned __int8 *)(a42 + (*(unsigned __int8 *)(a2 + v82) ^ 0xC2)) ^ 0x71 | v62;
  uint64_t v83 = a1 & 0xFFFFFFF6 ^ 0xAC81FB7B;
  *(void *)(v59 - 256) = v83;
  LOBYTE(v83) = *(unsigned char *)(a44 + (*(unsigned __int8 *)(a2 + v83) ^ 0x3ELL));
  uint64_t v201 = a1 & 0xFFFFFFF9 ^ 0xAC81FB7E;
  uint64_t v84 = *(unsigned __int8 *)(a2 + v201) ^ 0xA4;
  uint64_t v85 = a1 & 0xFFFFFFF0 ^ 0xAC81FB7F;
  *(void *)(v59 - 240) = v85;
  int v199 = v68 | ((*(unsigned __int8 *)(a43 + v84) ^ 0x65) << 8);
  uint64_t v86 = *(void *)(v58 + 8 * (int)a24) - 4;
  unsigned int v87 = *(_DWORD *)(v86 + 4 * (((unsigned __int16)(v199 ^ a47) >> 8) ^ 0x21u)) ^ ((((unsigned __int16)(v199 ^ a47) >> 8) ^ 0x4C) - 1869556987 - ((2 * (((v199 ^ a47) >> 8) ^ 0xB71C4C)) & 0xA));
  uint64_t v88 = *(void *)(v58 + 8 * (v61 - 977)) - 4;
  LODWORD(v68) = v79 ^ HIDWORD(a47) ^ 0x730032AA;
  int v89 = (v87 + 801111697 - ((2 * v87) & 0x5F7FFD22)) ^ *(_DWORD *)(v88
                                                                 + 4 * ((v79 ^ BYTE4(a47)) ^ 0xAAu));
  int v198 = *(unsigned __int8 *)(a42 + (*(unsigned __int8 *)(a2 + v85) ^ 0x47)) ^ 0x54 | v78 | (v71 << 8);
  unsigned int v90 = *(_DWORD *)(v86 + 4 * (((unsigned __int16)(a46 ^ v198) >> 8) ^ 0xC0u)) ^ ((((unsigned __int16)(a46 ^ v198) >> 8) ^ 0xAD) - 1869556987 - ((2 * (((a46 ^ v198) >> 8) ^ 0x2ED1AD)) & 0xA));
  unsigned int v200 = v82 & 0xFF00FFFF | (((v83 + 102) ^ 0xDF) << 16);
  uint64_t v91 = *(void *)(v58 + 8 * (v61 - 946)) - 8;
  int v92 = *(_DWORD *)(v91 + 4 * (((v200 ^ HIDWORD(a46)) >> 16) ^ 0x68u));
  HIDWORD(v94) = v92 ^ 0x7E9;
  LODWORD(v94) = v92 ^ 0xD2444000;
  int v93 = v94 >> 12;
  int v95 = *(_DWORD *)(v91 + 4 * ((v79 ^ HIDWORD(a47)) >> 16));
  HIDWORD(v94) = v95 ^ 0x7E9;
  LODWORD(v94) = v95 ^ 0xD2444000;
  int v96 = v90 + 199865964 - ((2 * v90) & 0x17D36CD8);
  uint64_t v97 = *(void *)(v58 + 8 * (v61 - 1105));
  int v98 = v96 ^ *(_DWORD *)(v97 + 4 * (((v199 ^ a47) >> 24) ^ 0xB7)) ^ (v94 >> 12);
  int v99 = *(_DWORD *)(v91 + 4 * (((a46 ^ v198) >> 16) ^ 0xD1u));
  HIDWORD(v94) = v99 ^ 0x7E9;
  LODWORD(v94) = v99 ^ 0xD2444000;
  int v100 = *(_DWORD *)(v88 + 4 * ((v199 ^ a47) ^ 0xFBu)) ^ (BYTE1(v82) ^ BYTE5(a46)) ^ *(_DWORD *)(v86 + 4 * ((BYTE1(v82) ^ BYTE5(a46)) ^ 0x23u)) ^ 0xBF2F2DDA ^ (v94 >> 12);
  LODWORD(v83) = *(_DWORD *)(v91 + 4 * (((v199 ^ a47) >> 16) ^ 0x1Cu));
  HIDWORD(v94) = v83 ^ 0x7E9;
  LODWORD(v94) = v83 ^ 0xD2444000;
  LODWORD(v83) = *(_DWORD *)(v97 + 4 * (((v200 ^ HIDWORD(a46)) >> 24) ^ 0xF6)) ^ (BYTE1(v68)
                                                                                  - 1869556987
                                                                                  - (((v79 ^ HIDWORD(a47)) >> 7) & 0xA)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v68) ^ 0x6Du)) ^ ((v94 >> 12) + 199865964 - ((2 * (v94 >> 12)) & 0x17D36CD8));
  int v101 = HIDWORD(a41) ^ *(_DWORD *)(v97 + 4 * (((a46 ^ v198) >> 24) ^ 0x2E)) ^ v93 ^ (v89 + 199865964 - ((2 * v89) & 0x17D36CD8));
  unsigned int v102 = a41 ^ *(_DWORD *)(v88 + 4 * ((a46 ^ v198) ^ 0xFEu)) ^ (v83
                                                                                 + 801111697
                                                                                 - ((2 * v83) & 0x5F7FFD22));
  unsigned int v103 = HIDWORD(a40) ^ *(_DWORD *)(v88 + 4 * ((v200 ^ BYTE4(a46)) ^ 0x5Fu)) ^ (v98
                                                                                                 + 801111697
                                                                                                 - ((2 * v98) & 0x5F7FFD22));
  unsigned int v104 = HIDWORD(a24) ^ *(_DWORD *)(v97 + 4 * BYTE3(v68)) ^ (v100 + 199865964 - ((2 * v100) & 0x17D36CD8));
  LODWORD(v83) = v101 ^ 0xF9388C2F;
  LODWORD(v68) = *(_DWORD *)(v91 + 4 * ((v101 ^ 0xF9388C2F) >> 16));
  HIDWORD(v94) = v68 ^ 0x7E9;
  LODWORD(v94) = v68 ^ 0xD2444000;
  LODWORD(v68) = v94 >> 12;
  LODWORD(v71) = *(_DWORD *)(v91 + 4 * (BYTE2(v102) ^ 0xB2u));
  HIDWORD(v94) = v71 ^ 0x7E9;
  LODWORD(v94) = v71 ^ 0xD2444000;
  int v105 = v94 >> 12;
  int v106 = *(_DWORD *)(v91 + 4 * (BYTE2(v103) ^ 0x66u));
  HIDWORD(v94) = v106 ^ 0x7E9;
  LODWORD(v94) = v106 ^ 0xD2444000;
  int v107 = (v94 >> 12) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v104) ^ 5u)) ^ ((BYTE1(v104) ^ 0x68)
                                                                    - 1869556987
                                                                    - ((v104 >> 7) & 0xA));
  LODWORD(v68) = (v68 + 801111697 - ((2 * v68) & 0x5F7FFD22)) ^ *(_DWORD *)(v88 + 4 * (v103 ^ 0xB6u));
  int v108 = (v107 + 801111698 + ~((2 * v107) & 0x5F7FFD22)) ^ *(_DWORD *)(v88 + 4 * (v101 ^ 0x61u));
  LODWORD(v81) = (BYTE1(v83) - 1869556987 - ((v83 >> 7) & 0xA)) ^ 0xD678EAEF ^ *(_DWORD *)(v86 + 4 * (BYTE1(v83) ^ 0x6Du));
  unsigned int v109 = *(_DWORD *)(v97 + 4 * (HIBYTE(v103) ^ 0x43)) ^ 0xA9F3EDD2;
  LODWORD(v81) = v81 + v109 - 2 * (v81 & v109);
  int v110 = *(_DWORD *)(v91 + 4 * (BYTE2(v104) ^ 0xBDu));
  HIDWORD(v94) = v110 ^ 0x7E9;
  LODWORD(v94) = v110 ^ 0xD2444000;
  LODWORD(v83) = *(_DWORD *)(v97 + 4 * BYTE3(v83)) ^ (v105 + 199865964 - ((2 * v105) & 0x17D36CD8));
  LODWORD(v83) = (v83 + 801111697 - ((2 * v83) & 0x5F7FFD22)) ^ *(_DWORD *)(v88 + 4 * (v104 ^ 0xABu));
  unsigned int v111 = *(_DWORD *)(v97 + 4 * (HIBYTE(v104) ^ 0x42)) ^ HIDWORD(a50) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v102) ^ 0x57u)) ^ ((BYTE1(v102) ^ 0x3A) - 1869556987 - ((v102 >> 7) & 0xA)) ^ (v68 + 199865964 - ((2 * v68) & 0x17D36CD8));
  unsigned int v112 = a40 ^ *(_DWORD *)(v86 + 4 * (BYTE1(v103) ^ 0x39u)) ^ (v83 - 1869556987 - ((2 * v83) & 0x2121A60A));
  LODWORD(v83) = *(_DWORD *)(v97 + 4 * (HIBYTE(v102) ^ 0xB7));
  unsigned int v113 = a39 ^ *(_DWORD *)(v88 + 4 * (v102 ^ 0x65u)) ^ ((v81 ^ (v94 >> 12))
                                                                         + 801111697
                                                                         - ((2 * (v81 ^ (v94 >> 12))) & 0x5F7FFD22));
  LODWORD(v81) = *(_DWORD *)(v91 + 4 * (BYTE2(v113) ^ 0x79u));
  LODWORD(v71) = HIDWORD(a39) ^ v83 ^ (v108 + 199865964 - ((2 * v108) & 0x17D36CD8));
  HIDWORD(v94) = v81 ^ 0x7E9;
  LODWORD(v94) = v81 ^ 0xD2444000;
  BYTE1(v83) = ((unsigned __int16)(WORD2(a39) ^ v83 ^ (v108 - 18836 - ((2 * v108) & 0x6CD8))) >> 8) ^ 0x68;
  int v114 = ((v94 >> 12) + 199865964 - ((2 * (v94 >> 12)) & 0x17D36CD8)) ^ *(_DWORD *)(v97
                                                                                  + 4
                                                                                  * ((v71 ^ 0x2261685E) >> 24));
  LODWORD(v81) = ((BYTE1(v113) ^ 0xD0) - 1869556987 - ((v113 >> 7) & 0xA)) ^ *(_DWORD *)(v86
                                                                                       + 4 * (BYTE1(v113) ^ 0xBDu));
  LODWORD(v81) = (v81 + 801111697 - ((2 * v81) & 0x5F7FFD22)) ^ *(_DWORD *)(v88 + 4 * (v111 ^ 0x76u));
  int v115 = ((BYTE1(v112) ^ 0xEC) - 1869556987 - 2 * (((v112 >> 8) ^ 0xE5FEC) & 0x17 ^ (v112 >> 8) & 0x12)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v112) ^ 0x81u));
  int v116 = *(_DWORD *)(v91 + 4 * (BYTE2(v112) ^ 0x5Fu));
  HIDWORD(v94) = v116 ^ 0x7E9;
  LODWORD(v94) = v116 ^ 0xD2444000;
  int v117 = v94 >> 12;
  HIDWORD(v94) = *(_DWORD *)(v88 + 4 * (v71 ^ 0x5Eu)) ^ 0xC6A8D919;
  LODWORD(v94) = HIDWORD(v94);
  int v118 = (v94 >> 28) ^ __ROR4__(*(_DWORD *)(v97 + 4 * (HIBYTE(v113) ^ 6)) ^ 0x7462B151 ^ (v115+ 199865964- ((2 * v115) & 0x17D36CD8)), 28);
  int v119 = (v117 + 199865964 - ((2 * v117) & 0x17D36CD8)) ^ *(_DWORD *)(v97 + 4 * (HIBYTE(v111) ^ 0xD2));
  int v120 = (v119 + 801111697 - ((2 * v119) & 0x5F7FFD22)) ^ *(_DWORD *)(v88 + 4 * (v113 ^ 0x4Cu));
  LODWORD(v71) = *(_DWORD *)(v91 + 4 * (BYTE2(v71) ^ 0x1Bu));
  HIDWORD(v94) = v71 ^ 0x7E9;
  LODWORD(v94) = v71 ^ 0xD2444000;
  LODWORD(v71) = v94 >> 12;
  int v121 = BYTE1(v111);
  int v122 = (BYTE1(v111) ^ 0xC0) - 1869556987 - ((v111 >> 7) & 0xA);
  int v123 = v120 - 1869556987 - ((2 * v120) & 0x2121A60A);
  int v124 = *(_DWORD *)(v91 + 4 * (BYTE2(v111) ^ 0xCCu));
  HIDWORD(v94) = v124 ^ 0x7E9;
  LODWORD(v94) = v124 ^ 0xD2444000;
  int v125 = HIDWORD(a38) ^ (v94 >> 12) ^ __ROR4__(v118 ^ 0x78071371, 4);
  LODWORD(v71) = a38 ^ *(_DWORD *)(v97 + 4 * (HIBYTE(v112) ^ 0xE)) ^ v71 ^ (v81 + 199865964 - ((2 * v81) & 0x17D36CD8));
  LODWORD(v81) = BYTE1(v83);
  unsigned int v126 = HIDWORD(a37) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v83) ^ 0x6Du)) ^ v123;
  LODWORD(v83) = a37 ^ v122 ^ *(_DWORD *)(v88 + 4 * ((v112 ^ BYTE1(v103) ^ 0x54) ^ 0xCAu)) ^ *(_DWORD *)(v86 + 4 * (v121 ^ 0xADu)) ^ (v114 + 801111697 - ((2 * v114) & 0x5F7FFD22));
  LODWORD(v81) = v81 ^ 0x4552953C ^ v126;
  int v127 = *(_DWORD *)(v91 + 4 * BYTE2(v81));
  HIDWORD(v94) = v127 ^ 0x7E9;
  LODWORD(v94) = v127 ^ 0xD2444000;
  int v128 = v94 >> 12;
  unsigned int v129 = v125 ^ 0x99FEE750;
  int v130 = *(_DWORD *)(v91 + 4 * ((v125 ^ 0x99FEE750) >> 16));
  HIDWORD(v94) = v130 ^ 0x7E9;
  LODWORD(v94) = v130 ^ 0xD2444000;
  int v131 = BYTE1(v71) ^ 0x29;
  unsigned int v132 = v131 - 1869556987 - ((2 * ((v71 >> 8) ^ 0xA73B29)) & 0xA);
  LODWORD(v68) = (BYTE1(v81) - 1869556987 - ((v81 >> 7) & 0xA)) ^ *(_DWORD *)(v88
                                                                                          + 4
                                                                                          * (v71 ^ 0x72u)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v81) ^ 0x6Du)) ^ ((v94 >> 12) + 801111697 - ((2 * (v94 >> 12)) & 0x5F7FFD22));
  LODWORD(v80) = *(_DWORD *)(v91 + 4 * (BYTE2(v83) ^ 2u));
  HIDWORD(v94) = v80 ^ 0x7E9;
  LODWORD(v94) = v80 ^ 0xD2444000;
  LODWORD(v80) = *(_DWORD *)(v97 + 4 * (BYTE3(v71) ^ 0xA7)) ^ (v94 >> 12);
  LODWORD(v71) = *(_DWORD *)(v91 + 4 * (BYTE2(v71) ^ 0x3Bu));
  HIDWORD(v94) = v71 ^ 0x7E9;
  LODWORD(v94) = v71 ^ 0xD2444000;
  LODWORD(v80) = *(_DWORD *)(v88 + 4 * v81) ^ v80 ^ 0x245648FD;
  LODWORD(v81) = HIDWORD(a36) ^ *(_DWORD *)(v88 + 4 * (v125 ^ 0x1Eu)) ^ ((BYTE1(v83) ^ 0xD9)
                                                                                          - 1869556987
                                                                                          - 2
                                                                                          * (((v83 >> 8) ^ 0x9802D9) & 0x25 ^ (v83 >> 8) & 0x20)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v83) ^ 0xB4u)) ^ *(_DWORD *)(v97 + 4 * (HIBYTE(v126) ^ 0x61)) ^ (v94 >> 12);
  unsigned int v133 = a36 ^ *(_DWORD *)(v97 + 4 * (BYTE3(v83) ^ 0x98)) ^ (v68 + 199865964 - ((2 * v68) & 0x17D36CD8));
  LODWORD(v83) = HIDWORD(a35) ^ v132 ^ *(_DWORD *)(v88 + 4 * (v83 ^ 0x3Du)) ^ *(_DWORD *)(v97 + 4 * HIBYTE(v129)) ^ *(_DWORD *)(v86 + 4 * (v131 ^ 0x6Du)) ^ v128;
  unsigned int v134 = a35 ^ *(_DWORD *)(v86 + 4 * (BYTE1(v129) ^ 0x6Du)) ^ (v80 - 1869556987 - ((2 * v80) & 0x2121A60A));
  LODWORD(v68) = *(_DWORD *)(v91 + 4 * (BYTE2(v81) ^ 0x7Au));
  HIDWORD(v94) = v68 ^ 0x7E9;
  LODWORD(v94) = v68 ^ 0xD2444000;
  LODWORD(v68) = v94 >> 12;
  LODWORD(v80) = *(_DWORD *)(v91 + 4 * (BYTE2(v83) ^ 0xBEu));
  HIDWORD(v94) = v80 ^ 0x7E9;
  LODWORD(v94) = v80 ^ 0xD2444000;
  LODWORD(v71) = BYTE1(v83) ^ 0xB7;
  int v135 = v71 - 1869556987 - 2 * (((v83 >> 8) ^ 0xF1BEB7) & 0xD ^ (v83 >> 8) & 8);
  unsigned int v136 = v81 ^ 0xD0007150;
  LODWORD(v80) = *(_DWORD *)(v88 + 4 * ((v134 ^ BYTE1(v129)) ^ 0x41u)) ^ (((unsigned __int16)(v81 ^ 0x7150) >> 8)
                                                                                           - 1869556987
                                                                                           - (((v81 ^ 0xD0007150) >> 7) & 0xA)) ^ *(_DWORD *)(v86 + 4 * (((unsigned __int16)(v81 ^ 0x7150) >> 8) ^ 0x6Du)) ^ ((v94 >> 12) + 801111697 - ((2 * (v94 >> 12)) & 0x5F7FFD22));
  LODWORD(v81) = *(_DWORD *)(v91 + 4 * (BYTE2(v134) ^ 0x81u));
  HIDWORD(v94) = v81 ^ 0x7E9;
  LODWORD(v94) = v81 ^ 0xD2444000;
  LODWORD(v81) = ((v94 >> 12) + 199865964 - ((2 * (v94 >> 12)) & 0x17D36CD8)) ^ *(_DWORD *)(v97 + 4 * HIBYTE(v136));
  LODWORD(v81) = (v81 + 801111697 - ((2 * v81) & 0x5F7FFD22)) ^ *(_DWORD *)(v88 + 4 * (v83 ^ 0xF8u));
  LODWORD(v68) = ((BYTE1(v134) ^ 0xA0) - 1869556987 - ((v134 >> 7) & 0xA)) ^ (v68 + 801111697 - ((2 * v68) & 0x5F7FFD22)) ^ *(_DWORD *)(v88 + 4 * (v133 ^ 0xFCu)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v134) ^ 0xCDu));
  unsigned int v137 = *(_DWORD *)(v91 + 4 * (BYTE2(v133) ^ 0xC6u));
  LODWORD(v94) = __ROR4__((v137 >> 12) ^ 0x260F966, 17) ^ 0xEE910136;
  HIDWORD(v94) = v94;
  unsigned int v138 = HIDWORD(a34) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v133) ^ 0x75u)) ^ (v81 - 1869556987 - ((2 * v81) & 0x2121A60A));
  unsigned int v139 = a34 ^ *(_DWORD *)(v97 + 4 * (BYTE3(v83) ^ 0xF1)) ^ (v68 + 199865964 - ((2 * v68) & 0x17D36CD8));
  LODWORD(v83) = HIDWORD(a33) ^ *(_DWORD *)(v97 + 4 * (HIBYTE(v133) ^ 0x5A)) ^ (v80
                                                                                + 199865964
                                                                                - ((2 * v80) & 0x17D36CD8));
  unsigned int v140 = a33 ^ v135 ^ *(_DWORD *)(v88 + 4 * v136) ^ *(_DWORD *)(v97 + 4 * (HIBYTE(v134) ^ 0x68)) ^ *(_DWORD *)(v86 + 4 * (v71 ^ 0x6D)) ^ ((v94 >> 15) + (v137 << 20));
  LODWORD(v68) = ((BYTE1(v138) ^ 0x9D) - 1869556987 - ((2 * ((v138 >> 8) ^ 0xC2489D)) & 0xA)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v138) ^ 0xF0u));
  LODWORD(v81) = *(_DWORD *)(v91 + 4 * (BYTE2(v139) ^ 0x8Fu));
  LODWORD(v68) = *(_DWORD *)(v88 + 4 * (v140 ^ 0x77u)) ^ (v81 << 20) ^ (v81 >> 12) ^ (v68 + 801111697 - ((2 * v68) & 0x5F7FFD22));
  LODWORD(v71) = v83 ^ 0xCFB8D782;
  LODWORD(v80) = *(_DWORD *)(v91 + 4 * ((v83 ^ 0xCFB8D782) >> 16));
  HIDWORD(v94) = v80 ^ 0x7E9;
  LODWORD(v94) = v80 ^ 0xD2444000;
  LODWORD(v80) = ((v94 >> 12) + 801111697 - ((2 * (v94 >> 12)) & 0x5F7FFD22)) ^ *(_DWORD *)(v88
                                                                                          + 4
                                                                                          * ((v138 ^ BYTE1(v133)) ^ 0x3Fu));
  int v141 = (v68 ^ 0x7E9D2444) + 199865964 - 2 * ((v68 ^ 0x7E9D2444) & 0xBE9B67F ^ v68 & 0x13);
  LODWORD(v68) = v80 + 199865964 - ((2 * v80) & 0x17D36CD8);
  LODWORD(v81) = BYTE1(v139) ^ 0xD9;
  int v142 = *(_DWORD *)(v91 + 4 * (BYTE2(v138) ^ 0x48u));
  LODWORD(v80) = v81 - 1869556987 - ((2 * ((v139 >> 8) ^ 0xC78FD9)) & 0xA);
  HIDWORD(v94) = v142 ^ 0x7E9;
  LODWORD(v94) = v142 ^ 0xD2444000;
  LODWORD(v83) = ((BYTE1(v140) ^ 0x28) - 1869556987 - ((v140 >> 7) & 0xA)) ^ *(_DWORD *)(v88
                                                                                       + 4
                                                                                       * (v83 ^ 0xCCu)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v140) ^ 0x45u)) ^ ((v94 >> 12) + 801111697 - ((2 * (v94 >> 12)) & 0x5F7FFD22));
  int v143 = *(_DWORD *)(v91 + 4 * (BYTE2(v140) ^ 0x4Du));
  HIDWORD(v94) = v143 ^ 0x7E9;
  LODWORD(v94) = v143 ^ 0xD2444000;
  unsigned int v144 = HIDWORD(a32) ^ (BYTE1(v71) - 1869556987 - ((v71 >> 7) & 0xA)) ^ *(_DWORD *)(v88
                                                                                                 + 4
                                                                                                 * (v139 ^ 0x50u)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v71) ^ 0x6Du)) ^ *(_DWORD *)(v97 + 4 * (HIBYTE(v138) ^ 0xC2)) ^ (v94 >> 12);
  unsigned int v145 = a32 ^ *(_DWORD *)(v97 + 4 * (HIBYTE(v139) ^ 0xC7)) ^ (v83 + 199865964 - ((2 * v83) & 0x17D36CD8));
  unsigned int v146 = HIDWORD(a31) ^ *(_DWORD *)(v97 + 4 * BYTE3(v71)) ^ v141;
  LODWORD(v83) = a31 ^ v80 ^ *(_DWORD *)(v86 + 4 * (v81 ^ 0x6D)) ^ *(_DWORD *)(v97
                                                                                             + 4
                                                                                             * (HIBYTE(v140) ^ 0x7C)) ^ v68;
  LODWORD(v81) = (((unsigned __int16)(v83 ^ 0xCCA2) >> 8)
                - 1869556987
                - (((v83 ^ 0x33C8CCA2) >> 7) & 0xA)) ^ *(_DWORD *)(v86
                                                                               + 4
                                                                               * (((unsigned __int16)(v83 ^ 0xCCA2) >> 8) ^ 0x6Du));
  int v147 = *(_DWORD *)(v91 + 4 * (BYTE2(v145) ^ 0xE6u));
  HIDWORD(v94) = v147 ^ 0x7E9;
  LODWORD(v94) = v147 ^ 0xD2444000;
  int v148 = v94 >> 12;
  int v149 = *(_DWORD *)(v91 + 4 * (BYTE2(v146) ^ 0x1Cu));
  HIDWORD(v94) = v149 ^ 0x7E9;
  LODWORD(v94) = v149 ^ 0xD2444000;
  LODWORD(v68) = (v94 >> 12) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v145) ^ 0xD9u)) ^ ((BYTE1(v145) ^ 0xB4)
                                                                               - 1869556987
                                                                               - ((2 * ((v145 >> 8) ^ 0x4FE6B4)) & 0xA));
  LODWORD(v68) = (v68 + 801111697 - ((2 * v68) & 0x5F7FFD22)) ^ *(_DWORD *)(v88 + 4 * (v144 ^ 0x17u));
  LODWORD(v81) = (v81 + 801111698 + ~((2 * v81) & 0x5F7FFD22)) ^ *(_DWORD *)(v88 + 4 * (v146 ^ 0x3Au));
  unsigned int v150 = *(_DWORD *)(v88 + 4 * (v83 ^ 0xA2u)) ^ (((unsigned __int16)(v144 ^ 0x5C17) >> 8)
                                                                  - 1869556987
                                                                  - (((v144 ^ 0x3D655C17) >> 7) & 0xA)) ^ *(_DWORD *)(v86 + 4 * (((unsigned __int16)(v144 ^ 0x5C17) >> 8) ^ 0x6Du)) ^ (v148 + 801111697 - ((2 * v148) & 0x5F7FFD22));
  int v151 = *(_DWORD *)(v88 + 4 * (v145 ^ 0x96u));
  HIDWORD(v94) = v151 ^ 0xFBFFE91;
  LODWORD(v94) = v151 ^ 0x20000000;
  HIDWORD(v94) = (v94 >> 29) ^ 0x6615DA09;
  LODWORD(v94) = HIDWORD(v94);
  int v152 = (v94 >> 3) - 1869556987 - ((2 * (v94 >> 3)) & 0x2121A60A);
  int v153 = v81 + 199865964 - ((2 * v81) & 0x17D36CD8);
  LODWORD(v80) = *(_DWORD *)(v91 + 4 * ((v144 ^ 0x3D655C17) >> 16));
  HIDWORD(v94) = v80 ^ 0x7E9;
  LODWORD(v94) = v80 ^ 0xD2444000;
  LODWORD(v80) = v94 >> 12;
  LODWORD(v81) = v150 + 199865964 - ((2 * v150) & 0x17D36CD8);
  int v154 = *(_DWORD *)(v91 + 4 * ((v83 ^ 0x33C8CCA2) >> 16));
  HIDWORD(v94) = v154 ^ 0x7E9;
  LODWORD(v94) = v154 ^ 0xD2444000;
  LODWORD(v83) = HIDWORD(a30) ^ *(_DWORD *)(v97 + 4 * (BYTE3(v83) ^ 0x17)) ^ (v68
                                                                              + 199865964
                                                                              - ((2 * v68) & 0x17D36CD8));
  int v155 = BYTE1(v146);
  LODWORD(v68) = v152 ^ *(_DWORD *)(v86 + 4 * (BYTE1(v146) ^ 0xD1u)) ^ (v94 >> 12);
  LODWORD(v68) = *(_DWORD *)(v97 + 4 * (HIBYTE(v144) ^ 0x19)) ^ a50 ^ (v68 + 199865964 - ((2 * v68) & 0x17D36CD8));
  unsigned int v156 = HIDWORD(a29) ^ *(_DWORD *)(v97 + 4 * (HIBYTE(v146) ^ 0x1B)) ^ v81;
  LODWORD(v81) = *(_DWORD *)(v91 + 4 * (BYTE2(v156) ^ 0x7Eu));
  HIDWORD(v94) = v81 ^ 0x7E9;
  LODWORD(v94) = v81 ^ 0xD2444000;
  int v157 = v94 >> 12;
  LODWORD(v71) = a30 ^ *(_DWORD *)(v97 + 4 * (HIBYTE(v145) ^ 0x4F)) ^ v80 ^ v153;
  LODWORD(v80) = *(_DWORD *)(v91 + 4 * (BYTE2(v71) ^ 1u));
  HIDWORD(v94) = v80 ^ 0x7E9;
  LODWORD(v94) = v80 ^ 0xD2444000;
  LODWORD(v80) = ((v94 >> 12) + 801111697 - ((2 * (v94 >> 12)) & 0x5F7FFD22)) ^ *(_DWORD *)(v88
                                                                                          + 4
                                                                                          * (v83 ^ 0xC6u));
  LODWORD(v81) = ((BYTE1(v83) ^ 0x71) - 1869556987 - ((2 * ((v83 >> 8) ^ 0xF25B71)) & 0xA)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v83) ^ 0x1Cu));
  LODWORD(v81) = (v81 + 199865964 - ((2 * v81) & 0x17D36CD8)) ^ *(_DWORD *)(v97 + 4 * (BYTE3(v71) ^ 0x1F));
  int v158 = *(_DWORD *)(v91 + 4 * (BYTE2(v83) ^ 0x5Bu));
  HIDWORD(v94) = v158 ^ 0x7E9;
  LODWORD(v94) = v158 ^ 0xD2444000;
  int v159 = v94 >> 12;
  int v160 = v155 ^ 0x73F4E0AF ^ v68;
  int v161 = *(_DWORD *)(v91 + 4 * BYTE2(v160));
  HIDWORD(v94) = v161 ^ 0x7E9;
  LODWORD(v94) = v161 ^ 0xD2444000;
  int v162 = v94 >> 12;
  HIDWORD(v94) = v157 ^ ((BYTE1(v71) ^ 0x81)
                       - 1869556987
                       - 2 * ((BYTE1(v71) ^ 0x81) & 0xF ^ (v71 >> 8) & 0xA)) ^ 0xD678EAEF ^ *(_DWORD *)(v86 + 4 * (BYTE1(v71) ^ 0xECu));
  LODWORD(v94) = HIDWORD(v94);
  LODWORD(v94) = (v94 >> 11) ^ __ROR4__(*(_DWORD *)(v97 + 4 * (BYTE3(v83) ^ 0xF2)) ^ 0xA9F3EDD2, 11) ^ 0xD490839A;
  HIDWORD(v94) = v94;
  LODWORD(v83) = a29 ^ *(_DWORD *)(v88 + 4 * (v71 ^ 0xB8u)) ^ ((BYTE1(v156) ^ 0xAA)
                                                                                - 1869556987
                                                                                - ((v156 >> 7) & 0xA)) ^ *(_DWORD *)(v97 + 4 * (BYTE3(v68) ^ 0x57)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v156) ^ 0xC7u)) ^ v159;
  LODWORD(v68) = HIDWORD(a28) ^ *(_DWORD *)(v97 + 4 * (HIBYTE(v156) ^ 0x96)) ^ (BYTE1(v160)
                                                                                - 1869556987
                                                                                - ((v68 >> 7) & 0xA)) ^ *(_DWORD *)(v86 + 4 * (BYTE1(v160) ^ 0x6Du)) ^ (v80 + 199865964 - ((2 * v80) & 0x17D36CD8));
  LODWORD(v80) = a28 ^ *(_DWORD *)(v88 + 4 * (v156 ^ 0x88u)) ^ v162 ^ (v81
                                                                                        + 801111697
                                                                                        - ((2 * v81) & 0x5F7FFD22));
  LODWORD(v81) = HIDWORD(a27) ^ *(_DWORD *)(v88 + 4 * v160) ^ ((v94 >> 21)
                                                                                + 801111697
                                                                                - ((2 * (v94 >> 21)) & 0x5F7FFD22));
  int v163 = *(_DWORD *)(v91 + 4 * (BYTE2(v83) ^ 0xBDu));
  BYTE2(v71) = BYTE2(v80) ^ 0x4A;
  HIDWORD(v94) = v163 ^ 0x7E9;
  LODWORD(v94) = v163 ^ 0xD2444000;
  int v164 = v94 >> 12;
  unsigned int v165 = *(_DWORD *)(v86 + 4 * (BYTE1(v68) ^ 0x96u)) ^ ((BYTE1(v68) ^ 0xFB)
                                                        - 1869556987
                                                        - ((2 * ((v68 >> 8) ^ 0x3EA2FB)) & 0xA));
  int v166 = *(_DWORD *)(v91 + 4 * (BYTE2(v68) ^ 0xA2u));
  int v167 = (v165 + 801111697 - ((2 * v165) & 0x5F7FFD22)) ^ *(_DWORD *)(v88 + 4 * (v80 ^ 0x75u));
  HIDWORD(v94) = v166 ^ 0x7E9;
  LODWORD(v94) = v166 ^ 0xD2444000;
  int v168 = (((unsigned __int16)(v80 ^ 0xF075) >> 8) - 1869556987 - ((v80 >> 7) & 0xA)) ^ (v94 >> 12) ^ *(_DWORD *)(v86 + 4 * (((unsigned __int16)(v80 ^ 0xF075) >> 8) ^ 0x6Du));
  int v169 = (v168 + 199865964 - ((2 * v168) & 0x17D36CD8)) ^ *(_DWORD *)(v97 + 4 * (BYTE3(v81) ^ 0xED));
  LODWORD(v80) = *(_DWORD *)(v97 + 4 * (BYTE3(v80) ^ 0x91));
  int v170 = *(_DWORD *)(v97 + 4 * (BYTE3(v68) ^ 0x3E));
  LODWORD(v97) = *(_DWORD *)(v97 + 4 * (BYTE3(v83) ^ 0xE3));
  LODWORD(v81) = v81 ^ 0xC9AF1D8F;
  int v171 = *(_DWORD *)(v88 + 4 * v81);
  LODWORD(v68) = *(_DWORD *)(v88 + 4 * (v68 ^ 0x9Au));
  LODWORD(v88) = *(_DWORD *)(v88 + 4 * (v83 ^ 0x92u));
  LODWORD(v71) = *(_DWORD *)(v91 + 4 * BYTE2(v71));
  HIDWORD(v94) = v71 ^ 0x7E9;
  LODWORD(v94) = v71 ^ 0xD2444000;
  int v172 = *(_DWORD *)(v86 + 4 * (BYTE1(v83) ^ 0xE5u));
  unsigned int v173 = (BYTE1(v83) ^ 0x88) - 1869556987 - ((v83 >> 7) & 0xA);
  LODWORD(v83) = a27 ^ v68 ^ v164 ^ (BYTE1(v81) - 1869556987 - ((v81 >> 7) & 0xA)) ^ v80 ^ *(_DWORD *)(v86 + 4 * (BYTE1(v81) ^ 0x6Du));
  LODWORD(v68) = HIDWORD(a26) ^ v173 ^ v170 ^ v172 ^ v171 ^ (v94 >> 12);
  LODWORD(v88) = a26 ^ v88 ^ (v169 + 801111697 - ((2 * v169) & 0x5F7FFD22));
  unsigned int v174 = HIDWORD(a25) ^ v97 ^ (*(_DWORD *)(v91 + 4 * BYTE2(v81)) >> 12) ^ (*(_DWORD *)(v91 + 4 * BYTE2(v81)) << 20) ^ (v167 + 199865964 - ((2 * v167) & 0x17D36CD8));
  unint64_t v175 = (char *)*(&off_1009960C0 + SHIDWORD(a23)) - 4;
  uint64_t v176 = (uint64_t)*(&off_1009960C0 + (int)a23);
  LODWORD(v97) = *(_DWORD *)&v175[4 * (v88 ^ 7)] ^ *(_DWORD *)(v176 + 4 * (BYTE1(v174) ^ 7u)) ^ 0x63A5C43B;
  int v177 = v97 - 1290375820 - ((2 * v97) & 0x662CDAE8);
  LODWORD(v97) = *(_DWORD *)(v176 + 4 * (BYTE1(v83) ^ 0x39u));
  unint64_t v178 = (char *)*(&off_1009960C0 + (int)a22) - 12;
  int v179 = *(_DWORD *)&v178[4 * (BYTE3(v68) ^ 0xB8)] ^ v177;
  int v180 = *(_DWORD *)(v176 + 4 * ((unsigned __int16)(v88 ^ 0x6F07) >> 8));
  int v181 = *(_DWORD *)(v176 + 4 * (BYTE1(v68) ^ 0xACu));
  int v182 = *(_DWORD *)&v178[4 * (BYTE3(v88) ^ 0xEF)];
  int v183 = *(_DWORD *)&v178[4 * (HIBYTE(v174) ^ 0xE3)];
  int v184 = *(_DWORD *)&v178[4 * (BYTE3(v83) ^ 0x15)];
  uint64_t v185 = (char *)*(&off_1009960C0 + SHIDWORD(a22)) - 12;
  LODWORD(v80) = *(_DWORD *)&v185[4 * (BYTE2(v174) ^ 0x21)];
  LODWORD(v178) = *(_DWORD *)&v185[4 * (BYTE2(v88) ^ 0x2A)];
  LODWORD(v88) = *(_DWORD *)&v185[4 * (BYTE2(v68) ^ 0x16)];
  LODWORD(v185) = *(_DWORD *)&v185[4 * (BYTE2(v83) ^ 0xDD)] ^ (v179 - 1215602292 - ((2 * v179) & 0x6F16C318));
  int v186 = *(_DWORD *)&v175[4 * (v83 ^ 0x21)];
  LODWORD(v68) = *(_DWORD *)&v175[4 * (v68 ^ 0xD7)];
  LODWORD(v86) = *(_DWORD *)&v175[4 * (v174 ^ 0x9F)];
  uint64_t v187 = *(_DWORD *)(v59 - 140) ^ a48 ^ (v185 - ((2 * v185) & 0xF340FFD4) - 106922006);
  uint64_t v188 = *(unsigned int *)(v59 - 120);
  unint64_t v189 = (char *)*(&off_1009960C0 + (int)v188 - 1095) - 4;
  *(unsigned char *)(a51 + v202) = v189[BYTE3(v187) ^ 0xD7] ^ 0xB2;
  LODWORD(v80) = ((v80 ^ 0x1BC606DD ^ v180) - 1290375820 - ((2 * (v80 ^ 0x1BC606DD ^ v180)) & 0x662CDAE8)) ^ v184;
  LODWORD(v68) = (v80 - 806837398 - ((2 * v80) & 0x9FD146D4)) ^ v68;
  LODWORD(v80) = *(_DWORD *)(v59 - 136) ^ HIDWORD(a48) ^ (v68 - ((2 * v68) & 0x2EA9B9D4) + 391437546);
  uint64_t v190 = (uint64_t)*(&off_1009960C0 + (int)v188 - 1010);
  *(unsigned char *)(a51 + *(void *)(v59 - 224)) = (*(unsigned char *)(v190
                                                       + ((*(unsigned char *)(v59 - 136) ^ BYTE4(a48) ^ (v68 - ((2 * v68) & 0xD4) - 22)) ^ 0xC7))
                                            - 95) ^ 0x5F;
  unint64_t v191 = (char *)*(&off_1009960C0 + SHIDWORD(a21)) - 12;
  LODWORD(v185) = v191[BYTE1(v80) ^ 0x13];
  HIDWORD(v94) = v185 ^ 0x3E;
  LODWORD(v94) = v185 << 24;
  *(unsigned char *)(a51 + v201) = (v94 >> 30) ^ 0x40;
  int v192 = v182 ^ v97;
  LODWORD(v97) = ((v178 ^ v186 ^ 0x7863C2E6)
                - 1290375820
                - 2 * ((v178 ^ v186 ^ 0x7863C2E6) & 0x33166D75 ^ (v178 ^ v186) & 1)) ^ v183;
  LODWORD(v97) = (v97 - ((2 * v97) & 0x589ACEA2) - 1404213423) ^ v181;
  LODWORD(v97) = *(_DWORD *)(v59 - 132) ^ HIDWORD(a49) ^ (v97 - ((2 * v97) & 0xF9C5EA9C) + 2095248718);
  LODWORD(v185) = v191[BYTE1(v97)];
  HIDWORD(v94) = v185 ^ 0x3E;
  LODWORD(v94) = v185 << 24;
  *(unsigned char *)(a51 + *(void *)(v59 - 216)) = (v94 >> 30) ^ 0x7E;
  uint64_t v193 = (char *)*(&off_1009960C0 + (int)a21) - 12;
  *(unsigned char *)(a51 + *(void *)(v59 - 256)) = v193[BYTE2(v187) ^ 0xFBLL] ^ 0x1A;
  uint64_t v194 = (v192 ^ 0x1F5B0A25) & 0x378B619C;
  LODWORD(v88) = ((v192 ^ 0x1F5B0A25) - 1215602292 - 2 * (v194 ^ v192 & 0x10)) ^ v88;
  LODWORD(v88) = (v88 - 806837398 - ((2 * v88) & 0x9FD146D4)) ^ v86;
  LODWORD(v88) = *(_DWORD *)(v59 - 128) ^ a49 ^ (v88 - ((2 * v88) & 0xC3D761F8) + 1642836220);
  *(unsigned char *)(a51 + *(void *)(v59 - 184)) = v193[BYTE2(v88) ^ 0xB8] ^ 0xC9;
  *(unsigned char *)(a51 + *(void *)(v59 - 248)) = (*(unsigned char *)(v190 + (v187 ^ 0x1BLL)) - 95) ^ 0x7D;
  *(unsigned char *)(a51 + *(void *)(v59 - 232)) = v193[BYTE2(v80) ^ 3] ^ 0xB7;
  uint64_t v195 = *(void *)(v59 - 200);
  *(unsigned char *)(a51 + *(void *)(v59 - 192)) = v189[BYTE3(v80) ^ 0x6DLL] ^ 0x4A;
  LODWORD(v80) = v191[BYTE1(v187) ^ 0x92];
  HIDWORD(v94) = v80 ^ 0x3E;
  LODWORD(v94) = v80 << 24;
  *(unsigned char *)(a51 + *(void *)(v59 - 160)) = (v94 >> 30) ^ 0xD2;
  *(unsigned char *)(a51 + v195) = v189[BYTE3(v97) ^ 0x53] ^ 0xA6;
  *(unsigned char *)(a51 + *(void *)(v59 - 176)) = (*(unsigned char *)(v190 + (v97 ^ 0x95)) - 95) ^ 0xAF;
  *(unsigned char *)(a51 + *(void *)(v59 - 240)) = (*(unsigned char *)(v190 + (v88 ^ 0x64)) - 95) ^ 0x27;
  *(unsigned char *)(a51 + *(void *)(v59 - 168)) = v189[BYTE3(v88) ^ 0x6ELL] ^ 0x30;
  LODWORD(v189) = v191[BYTE1(v88) ^ 0x1FLL];
  HIDWORD(v94) = v189 ^ 0x3E;
  LODWORD(v94) = v189 << 24;
  *(unsigned char *)(a51 + *(void *)(v59 - 208)) = (v94 >> 30) ^ 0x58;
  *(unsigned char *)(a51 + *(void *)(v59 - 152)) = v193[BYTE2(v97) ^ 0xC8] ^ 0x98;
  uint64_t v196 = v195 - 1400767606 - 2 * ((v195 + 16) & 0x2C81FB7F ^ a1 & 5u);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a53 + 8 * ((1054 * ((v196 ^ 0xAC81FB7A) < a25)) ^ ((int)v188 - 774))))(125, v194, 146, v188, v196, a51, v187, 3488129898, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_10058E594()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)(((((v3 - 1491194147 + (v2 ^ 0x250)) * ((v2 ^ 0xA71E2D0F) + v1)) >> 31) | (4 * (((v3 - 1491194147 + (v2 ^ 0x250)) * ((v2 ^ 0xA71E2D0F) + v1)) >> 31))) ^ v2)))();
}

uint64_t sub_10058E5D8(int a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  BOOL v8 = a1 + v6 + 63 < (((v5 ^ 0x13C) * a3) ^ (a5 + 2055) ^ 0x20300C45u) + v6;
  return (*(uint64_t (**)(void))(v7 + 8 * (((4 * v8) | (16 * v8)) ^ v5)))();
}

uint64_t sub_10058E62C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a3 + 681465324) & 0x5761ABDF ^ (a3 + 434)) * (v3 != v4)) ^ a3)))();
}

uint64_t sub_10058E678()
{
  return sub_1005C4D0C();
}

uint64_t sub_10058E68C()
{
  int v5 = (v3 - 1265981834) & 0x4B7557FF;
  int8x16_t v13 = &STACK[0x27EFF0CD9F36B3DF];
  int8x16_t v14 = v9;
  unsigned int v11 = (v3 - 49) ^ (1374699841 * (&v11 ^ 0x6DF41809));
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 | 0x4F4)))(&v11);
  int8x16_t v13 = v9;
  unsigned int v11 = v3
      + (((&v11 | 0x90F48624) - &v11 + (&v11 & 0x6F0B79D8)) ^ 0x6A6A7572) * v0
      + 720;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + 1364)))(&v11);
  if (v12 == v1 + v5 - 374) {
    unsigned int v6 = v10;
  }
  else {
    unsigned int v6 = v12;
  }
  unsigned int v12 = v3 + ((2 * (&v11 & 0x4855FEB0) - &v11 - 1213595313) ^ 0xBD5E0F60) * v4 + 660;
  int8x16_t v13 = v9;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 ^ 0xB45)))(&v11);
  unsigned int v12 = v5 + (&v11 ^ 0xAF40E2F) * v4 + 1054;
  int8x16_t v13 = v8;
  (*(void (**)(unsigned int *))(v2 + 8 * (v5 + 1743)))(&v11);
  return v6 ^ v1;
}

uint64_t sub_10058E83C@<X0>(uint64_t a1@<X8>)
{
  int v6 = (((v5 - 412) | 0x67) - 100) | 0x14;
  int v7 = v1 + v2;
  int v8 = v2 + 1;
  *(_DWORD *)(*(void *)(v3 - 0x330904BA72E93EB8) + 4 * (v7 + v6 - 1102)) = v4;
  *(_DWORD *)(v3 - 0x330904BA72E93EBCLL) = v8;
  int v9 = -457 - (v1 + v8);
  if (v1 + v8 + 457 >= 0) {
    int v9 = v1 + v8 + 457;
  }
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((246
                                * ((int)(((v6 - 8) ^ v9 ^ 0xFDE7D7EC)
                                       + ((2 * v9) & 0xFBCFA3C6)
                                       + 1526333023
                                       + ((v6 - 8) ^ 0x447 ^ v1)) >= 0)) ^ (v6 - 8))))();
}

uint64_t sub_10058E928@<X0>(int a1@<W0>, char a2@<W6>, int a3@<W7>, int a4@<W8>)
{
  *(unsigned char *)(v6 + v5) = *(unsigned char *)(v7 + (a4 + a1))
                      - (a2 & (2 * *(unsigned char *)(v7 + (a4 + a1))))
                      + 82;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 != 63) * a3) ^ (v9 + v4 - 335))))();
}

uint64_t sub_10058E970()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 == ((v1 + 131448588) & 0xF82A3FBE) + 0x27D9C0988DAEAE3BLL)
                                * (((v1 - 1465) | 0xA0) - 648)) ^ v1)))();
}

uint64_t sub_10058E9CC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 + v1 - 2129653598 >= ((v0 + 704) ^ 0x7EDu)) * ((v0 + 626) ^ 0x79D)) ^ (v0 + 626))))();
}

uint64_t sub_10058EA28@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v6 = (v5 ^ 0x10E) + 258;
  int v7 = a2 + v3;
  int v8 = v3 + 1;
  *(_DWORD *)(*(void *)(v4 - 0x330904BA72E93EB8) + 4 * (v7 + v6 + 136)) = a1;
  int v9 = (2 * v6) ^ 0x2B6;
  *(_DWORD *)(v4 - 0x330904BA72E93EBCLL) = v8;
  int v10 = (v9 ^ (a2 + 394)) + v8;
  if (v10 < 0) {
    int v10 = -v10;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1978
                                * ((int)((v10 ^ 0x7FE1F35E)
                                       + ((2 * v10) & 0xFFC3E6BC)
                                       - 2145514545
                                       + ((v9 + 763808408) & 0xD27934D3)) >= 0)) ^ v9)))();
}

uint64_t sub_10058EB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (v3
                               + v6
                               + (((v5 > (v4 & 0x91E647CB ^ 0x2A732E74)) ^ (v4 - 52)) & 1)
                               - 1957)))();
}

uint64_t sub_10058EB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x3C0] = v73;
  int v77 = ((v76 + 125235658 - 2 * ((v76 - 192) & 0x776F28A)) ^ 0xD9B04F51) * v72;
  int v78 = (void *)(v76 - 192);
  v78[3] = a72;
  v78[1] = a71;
  void v78[2] = 0x39E8CCF6252BBBF8;
  *(_DWORD *)(v76 - 192) = (v74 ^ 0x200) - v77 - 591;
  *(_DWORD *)(v76 - 188) = v77 ^ 0x4563513D;
  uint64_t v79 = (*(uint64_t (**)(uint64_t))(v75 + 8 * ((v74 ^ 0x200u) + 1255)))(v76 - 192);
  return (*(uint64_t (**)(uint64_t))(v75
                                            + 8
                                            * ((222
                                              * (*(_DWORD *)(v76 - 160) == ((3 * (v74 ^ 0x12D) - 4) | 4) - 25955648)) ^ v74 ^ 0x200u)))(v79);
}

uint64_t sub_10058EC60()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((((v2 ^ 0x7D8) - 873) ^ 0xFFFFFA29) + (((v2 ^ 0x7D8) - 873) | 0x400))
                                     * ((v1 + v0 + 1181893) < 8)) ^ v2 ^ 0x7D8)))();
}

uint64_t sub_10058ECC4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, char a5, unint64_t *a6, int a7, unint64_t *a8, uint64_t a9, int a10, int a11)
{
  uint64_t v15 = *(void *)(v12 + 16);
  unsigned int v16 = (((&a4 | 0x3B2B84C7) - &a4 + (&a4 & 0xC4D47B38)) ^ 0xE5ED391C) * a1;
  a4 = &STACK[0x17594DE9181849F3];
  a8 = &STACK[0xCBDE157C0FFD3DB];
  a9 = v15;
  a7 = v14 - v16 + 499;
  a11 = (v11 ^ 0x6F9EAE71) + v16 - 26590724 + ((2 * v11) & 0x57FBFE9E ^ 0xC2A21C);
  a5 = v16 ^ 0xD5;
  a6 = &STACK[0x3AC75C5FABFFD325];
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v13 + 8 * (v14 ^ 0x862)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((1301 * (a10 == v14 - 25955802)) ^ v14)))(v17);
}

uint64_t sub_10058EDF4(unsigned int a1, int a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 + v6 + ((33 * (a3 ^ v3) + v4) & v5) < a1) * a2) ^ a3)))();
}

uint64_t sub_10058EE40(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v12 = *(unsigned __int8 *)(v8 + (v11 + a6)) | (a3 << 8);
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9 + 8 * ((233 * (v10 - 1 == a7)) ^ a8)))(a1, a2, ((v12 - 1289135360) ^ 0x45DFDEFF) - 26413146 + ((a8 ^ 0x8BBFBF87) & (2 * (v12 - 1289135360))));
}

uint64_t sub_10058EEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,uint64_t a23)
{
  int v29 = 3 * (v23 ^ 0x5AE);
  *(_DWORD *)(v28 - 144) = v23 + ((v28 + 2075823953 - 2 * ((v28 - 144) & 0x7BBA8FE1)) ^ 0xC8C73FB5) * v24 + 769;
  *(void *)(v28 - 136) = v27;
  *(void *)(v28 - 128) = v27;
  *(void *)(v28 - 120) = v25;
  *(void *)(v28 - 112) = a14;
  *(void *)(v28 - 104) = a23;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v23 + 845)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (int)((((a21 - 1988463604) > 0x7FFFFFFE)
                                                   * (((v29 + 239) ^ 0xFFFFFD1E) + (v29 ^ 0x5DA))) ^ (v29 + 356))))(v30);
}

uint64_t sub_10058EF6C()
{
  BOOL v2 = ((((v0 - 733) | 0x21u) - 1145886373 + LODWORD(STACK[0x59C]) - 161) ^ 0x7EBEF53FFEBF5692)
     - 0x7EBEF53F068D58A7
     + ((2 * (((v0 - 733) | 0x21u) - 1145886373 + LODWORD(STACK[0x59C]) - 161)) & 0x1FD7EAD24) == 4164025835;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 | (32 * v2)) ^ v0)))();
}

uint64_t sub_10058EFFC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((((a3 ^ 0x14A) + 591216443) & 0xDCC2BFB3)
                                      + (((a3 ^ 0x14A) - 1218) | 0x148)
                                      - 2290)
                                     * (v3 < 0x20)) ^ a3 ^ 0x14A)))();
}

uint64_t sub_10058F058@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((v3 - 1) ^ (*(_DWORD *)(a2 + 4 * (v7 + a1 + 1897)) == v2 + ((v3 + v4) & v5) - 1634)) & 1)
                                * v6) ^ (v3 - 280))))();
}

uint64_t sub_10058F060(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((120 * (a6 + a1 + (((v6 ^ 0x1B5) + 613102749) & 0xDB74CFBF) + 134364286 > 7)) ^ v6 ^ 0x1B5)))();
}

uint64_t sub_10058F0CC@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(_DWORD *)(v6 + 4 * (v2 + a1 + 99)) == a2
                                                                                         + ((7 * (v4 ^ v3) + v5) & v7)
                                                                                         - 406)
                                * v8) ^ (v4 + 425))))();
}

uint64_t sub_10058F0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  unsigned int v43 = v39 - a8 + v41 + 433002171;
  int v44 = *(_DWORD *)(&a25 + (v43 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a3 + v43) = v44 ^ 0x90;
  *(unsigned char *)(a3 + (v41 + v37)) = (BYTE1(v44) ^ 0x19) + (~(2 * (BYTE1(v44) ^ 0x19)) | 0x5B) + 83;
  *(unsigned char *)(a3 + (v41 + v37 + 1)) = (BYTE2(v44) ^ 0xD9) - ((2 * (BYTE2(v44) ^ 0xD9)) & 0xA4) + 82;
  *(unsigned char *)(a3 + (v41 + v37 + 2)) = (HIBYTE(v44) ^ 0x86) - ((2 * (HIBYTE(v44) ^ 0x86)) & 0xA4) + 82;
  BOOL v45 = v41 - 453416468 < (a37 - 256923104);
  if (v41 - 453416468 < v38 != a37 - 256923104 < v38) {
    BOOL v45 = a37 - 256923104 < v38;
  }
  return (*(uint64_t (**)(void))(v42 + 8 * ((v45 * v40) ^ v39)))();
}

uint64_t sub_10058F1B8(uint64_t a1)
{
  int v2 = 1225351577 * ((a1 & 0x1891AAC5 | ~(a1 | 0x1891AAC5)) ^ 0xC4F48D2C);
  int v3 = *(_DWORD *)(a1 + 8) ^ v2;
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  int v7 = *(_DWORD *)(a1 + 12) + v2;
  unsigned int v8 = 1224239923 * (((&v10 | 0xAFC9BDF5) - (&v10 & 0xAFC9BDF5)) ^ 0x5D7A4022);
  uint64_t v13 = *(void *)a1;
  uint64_t v14 = v5;
  uint64_t v12 = v4;
  unsigned int v11 = (v7 ^ 0x1BE93B1F) - v8 + 802089968 + ((2 * v7) & 0xAF7BEFF2 ^ 0x882989C0);
  uint64_t v10 = v6;
  int v16 = v3 - 368400041 + v8 + 990;
  uint64_t result = (*((uint64_t (**)(uint64_t *))*(&off_1009960C0 + v3 - 368400041) + (v3 ^ 0x15F55FBA) - 1))(&v10);
  *(_DWORD *)(a1 + 40) = v15;
  return result;
}

uint64_t sub_10058F328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  int v47 = *(_DWORD *)(a1 + 24) ^ (1734042137 * (a1 ^ 0x5CCEC34D));
  unsigned int v48 = 3804331 * ((&v57 & 0xFE7BA37C | ~(&v57 | 0xFE7BA37C)) ^ 0xFB1AAFD5);
  int v57 = v48 ^ (v47 + 1172345419);
  unsigned int v59 = v48 + 1164383501;
  uint64_t v58 = &STACK[0x399DE98F08C0F190];
  uint64_t v49 = (*((uint64_t (**)(int *))*(&off_1009960C0 + v47 + 120) + (v47 | 0x84A) - 1))(&v57);
  return sub_100587888(v49, v50, v51, (uint64_t)v56, v52, 164, (uint64_t)&v55, v53, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_10058F580@<X0>(int a1@<W8>)
{
  uint64_t v4 = *(uint64_t (**)(void))(v3
                           + 8 * (((a1 + 8 != (((v1 - 1276) | 0xD0) ^ 0xFA)) * (((v1 - 1090) | 0x200) - 552)) ^ v1));
  STACK[0x390] = *(void *)(v2 + 8 * (v1 ^ 0x571));
  STACK[0x388] = *(void *)(v2 + 8 * (v1 ^ 0x50E));
  return v4();
}

uint64_t sub_10058F588@<X0>(int a1@<W0>, unsigned int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v7 = v4 - 32 + ((v5 + 934) | a2);
  long long v8 = *(_OWORD *)(v3 + v7 - 15);
  long long v9 = *(_OWORD *)(v3 + v7 - 31);
  uint64_t v10 = a3 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((25 * (a1 == 32)) ^ (v5 + 820))))();
}

uint64_t sub_10058F598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, char a7)
{
  int v7 = LOBYTE(STACK[0x2C8]) ^ 0xB9;
  if (v7 == 1)
  {
    unsigned int v14 = STACK[0x2AC];
    unsigned int v15 = STACK[0x2A8];
    char v8 = a5 ^ 0x61;
    LOBYTE(STACK[0x2A0]) = ((8 * LOBYTE(STACK[0x2AC])) ^ 0x68) - ((2 * ((8 * LOBYTE(STACK[0x2AC])) ^ 0x68)) & 0xAA) + 82;
    LOBYTE(STACK[0x2A1]) = ((v14 >> 5) ^ 0xFA) - 2 * (((v14 >> 5) ^ 0xFA) & ((a5 ^ 0x61) - 7) ^ (v14 >> 5) & 5) + 82;
    char v12 = -92;
    LOBYTE(STACK[0x2A2]) = ((v14 >> 13) ^ 0xA4) - ((v14 >> 12) & 0xA4) + 82;
    LOBYTE(STACK[0x2A3]) = ((v14 >> 21) ^ 0x42) + ~(2 * (((v14 >> 21) ^ 0x42) & 0x56 ^ (v14 >> 21) & 4)) + 83;
    HIDWORD(v16) = ~v15;
    LODWORD(v16) = v14 ^ 0xC0000000;
    LOBYTE(STACK[0x2A4]) = (v16 >> 29) - ((2 * (v16 >> 29)) & 0xA4) + 82;
    LOBYTE(STACK[0x2A5]) = ((v15 >> 5) ^ 0x42) - ((2 * ((v15 >> 5) ^ 0x42)) & 0xA4) + 82;
    LOBYTE(STACK[0x2A6]) = ((v15 >> 13) ^ 0xB3) - 2 * (((v15 >> 13) ^ 0xB3) & 0x5A ^ (v15 >> 13) & 8) + 82;
    unsigned int v13 = (v15 >> 21) ^ 0x15;
    goto LABEL_5;
  }
  if (v7 == 2)
  {
    char v8 = a5 ^ 0x61;
    unsigned int v9 = STACK[0x2A8];
    unsigned int v13 = STACK[0x2AC];
    int v10 = LODWORD(STACK[0x2A8]) >> 13;
    LOBYTE(STACK[0x2A0]) = (a5 ^ 0x61 ^ (LODWORD(STACK[0x2A8]) >> 21) ^ 0x4B)
                         - (a7 & (2 * (a5 ^ 0x61 ^ (LODWORD(STACK[0x2A8]) >> 21) ^ 0x4B)))
                         + 82;
    LOBYTE(STACK[0x2A1]) = (v10 ^ 0xB3) - 2 * ((v10 ^ 0xB3) & 0x56 ^ v10 & 4) + 82;
    LOBYTE(STACK[0x2A2]) = ((v9 >> 5) ^ 0x42) - (a7 & (2 * ((v9 >> 5) ^ 0x42))) + 82;
    HIDWORD(v11) = ~v9;
    LODWORD(v11) = v13 ^ 0xC0000000;
    LOBYTE(STACK[0x2A3]) = (v11 >> 29) - (a7 & (2 * (v11 >> 29))) + 82;
    LOBYTE(STACK[0x2A4]) = ((v13 >> 21) ^ 0x42) + ~(2 * (((v13 >> 21) ^ 0x42) & 0x5A ^ (v13 >> 21) & 8)) + 83;
    LOBYTE(STACK[0x2A5]) = (a7 ^ (v13 >> 13)) - (a7 & (v13 >> 12)) + 82;
    LOBYTE(STACK[0x2A6]) = ((v13 >> 5) ^ 0xFA) - 2 * (((v13 >> 5) ^ 0xFA) & 0x56 ^ (v13 >> 5) & 4) + 82;
    char v12 = -96;
    LOBYTE(v13) = (8 * v13) ^ 0x68;
LABEL_5:
    LOBYTE(STACK[0x2A7]) = v13 - (v12 & (2 * v13)) + ((v8 + 33) & 0xBF ^ 0x6D);
  }
  return sub_100597DD8(a1, a2, 1266);
}

uint64_t sub_10058F7F4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 == (v3 ^ (v1 - 632))) * ((4 * (v3 ^ 0x2B1)) ^ 0x92)) ^ v3)))();
}

uint64_t sub_10058F844(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(a1 + v5) = *(void *)(v4 + v5);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 == 0) * v3) ^ a3)))();
}

uint64_t sub_10058F874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  return (*(uint64_t (**)(void))(v52
                              + 8
                              * ((21
                                * ((((a51 - 449729354) < 0x10) ^ (a5 + (v51 ^ 0x29))) & 1)) ^ v51)))();
}

uint64_t sub_10058F8C4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  BOOL v10 = v8 < v7;
  unsigned int v11 = v6 + 1;
  if (v10 == v11 > a5) {
    BOOL v10 = v11 + v7 < v8;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v10 * a2) ^ v5)))();
}

uint64_t sub_10058F930()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 + 503) ^ 0x7B3) - 739) * (v0 == v1)) ^ (v2 + 503))))();
}

uint64_t sub_10058F95C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * (v4 ^ (25 * ((unint64_t)(v2 - a2) < 0x20)))))(a1, v3);
}

uint64_t sub_10058F988()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((31 * (*v0 != 0)) ^ (v1 + 1075))))();
}

uint64_t sub_10058F9B4@<X0>(int a1@<W8>)
{
  int v7 = STACK[0x410];
  unsigned int v8 = (_DWORD *)STACK[0x390];
  unint64_t v9 = STACK[0x390] + 24 * v2;
  *(_DWORD *)(v9 + 8) = v4;
  *(_DWORD *)(v9 + 12) = v5;
  *(void *)(v9 + 16) = STACK[0x388];
  *(_DWORD *)(v9 + 24) = v7;
  *unsigned int v8 = v1 + 2 * (a1 ^ 0xCC) - 217;
  BOOL v11 = v3 - 1864687331 > -1889988199 && v3 - 1864687331 < SLODWORD(STACK[0x358]);
  return (*(uint64_t (**)(void))(v6 + 8 * (a1 ^ (2234 * v11))))();
}

uint64_t sub_10058FA24()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x924)))(200, 1616997413) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * ((v2 * ((v1 + 708) ^ 0x354)) ^ v1)))();
}

uint64_t sub_10058FA74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v31 = ((~((v30 - 128) | 0x3FDFE35E) + ((v30 - 128) & 0x3FDFE35E)) ^ 0xADD404A8) * v28;
  *(void *)(v30 - 120) = v24;
  *(_DWORD *)(v30 - 128) = v31 + v25 - 1308;
  *(_DWORD *)(v30 - 124) = v27 + (v25 ^ 0xF92F7582) + v31;
  (*(void (**)(uint64_t))(v26 + 8 * (v25 + 677)))(v30 - 128);
  *(void *)(v30 - 112) = a24;
  *(void *)(v30 - 128) = a22;
  *(_DWORD *)(v30 - 104) = ((v25 ^ 0x51E) + 797) ^ (((((v30 - 128) | 0x33721CEE)
                                                    - (v30
                                                     - 128)
                                                    + ((v30 - 128) & 0xCC8DE310)) ^ 0x5E8604E7)
                                                  * v28);
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v25 ^ 0xDCA)))(v30 - 128);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((119
                                              * (*(_DWORD *)(v30 - 120) == ((337 * (v25 ^ 0x5AF)) ^ v29)
                                                                         + (v25 ^ 0x51E)
                                                                         + 1579)) ^ v25 ^ 0x51E)))(v32);
}

uint64_t sub_10058FB9C@<X0>(int a1@<W4>, int a2@<W8>)
{
  if (a2 == ((a1 + v2 - 834) ^ 0x5653865F)) {
    int v4 = 25995472;
  }
  else {
    int v4 = a2;
  }
  return v4 ^ v3;
}

uint64_t sub_10058FC04@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  uint64_t v8 = v4 + v2;
  *(void *)(v6 + 152) = v8;
  *(unsigned char *)(a1 + v8) = ((v3 + 1) ^ v5) * (v3 + 18);
  return (*(uint64_t (**)(void))(v7
                              + 8 * (((*(void *)(v6 + 152) == 0) | (16 * (*(void *)(v6 + 152) == 0))) ^ a2)))();
}

uint64_t sub_10058FC0C()
{
  *(_DWORD *)(v6 - 112) = (v4 + 43) ^ (((486019166 - ((v6 - 136) | 0x1CF8105E) + ((v6 - 136) | 0xE307EFA1)) ^ 0x8EF3F7A8)
                                     * v0);
  *(void *)(v6 - 136) = v1;
  *(void *)(v6 - 120) = v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 ^ 0xBC6)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((*(_DWORD *)(v6 - 128) != v3) * (((v4 - 898) | 0x402) ^ 0x434)) ^ v4)))(v7);
}

uint64_t sub_10058FCC4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 1604) ^ 0x265 ^ ((v2 - 1604) | 0x410) ^ 0x67B) * (v0 != v1)) ^ v2)))();
}

uint64_t sub_10058FD00@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X7>, int a4@<W8>, int8x16_t a5@<Q0>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v47 = *(void *)(v43 + 8 * ((int)a3 + a4 - 1469));
  HIDWORD(a18) = HIDWORD(a30);
  int v48 = BYTE4(a33) ^ 0xB9;
  LODWORD(a14) = BYTE4(a33) ^ 0xFFFFFFB9;
  if (v48 == 2)
  {
    HIDWORD(a15) = a31;
    uint64_t v69 = v47;
    int8x16x4_t v71 = vld4q_s8(v40);
    HIDWORD(a13) = HIDWORD(a32);
    uint8x16_t v58 = (uint8x16_t)veorq_s8(v71.val[1], a5);
    _Q21 = vmovl_u8(*(uint8x8_t *)v58.i8);
    _Q20 = vmovl_high_u8(v58);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint64_t v63 = (_DWORD *)(v39 + 4 * (v44 + 126546414));
    int v64 = *(v63 - 8) ^ *(v63 - 3);
    uint64_t v65 = v41 ^ (v46 + 1227);
    int v66 = v64 + v65 - ((2 * v64) & 0xFCE7E61C);
    int v67 = *(v63 - 16) ^ *(v63 - 14);
    HIDWORD(v68) = v67 ^ 0x7E73F30E ^ v66;
    LODWORD(v68) = v67 ^ ~v66;
    *uint64_t v63 = (v68 >> 31) + v46 - ((2 * (v68 >> 31)) & 0xFCE7E61C);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * ((211 * (v45 == 126546351)) ^ 0x655u)))(4243056156, a19, a1, HIDWORD(a31), v65, a32, HIDWORD(a30), a3, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, __PAIR64__(a32, HIDWORD(a31)),
             v69,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39);
  }
  else
  {
    if (v48 != 1) {
      JUMPOUT(0x100590178);
    }
    HIDWORD(a15) = a31;
    int8x16x4_t v70 = vld4q_s8(v40);
    uint8x16_t v49 = (uint8x16_t)veorq_s8(v70.val[2], a5);
    _Q21 = vmovl_high_u8(v49);
    _Q20 = vmovl_u8(*(uint8x8_t *)v49.i8);
    __asm
    {
      SHLL2           V20.4S, V20.8H, #0x10
      SHLL2           V21.4S, V21.8H, #0x10
    }
    uint64_t v56 = *(uint64_t (**)(void, void, uint64_t, void, uint64_t, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * ((1013 * (a19 + 1 == v45)) ^ ((int)a3 + (int)a2 - 72)));
    return v56(v56, a31, a1, HIDWORD(a31), a2, (a3 + a2 - 746), a32, *(void *)(v42 + 8 * ((int)a3 + (int)a2 - 1347)), a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, __PAIR64__(a32, HIDWORD(a31)),
             v47,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39);
  }
}

uint64_t sub_100590200@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint8x16_t v49 = (_DWORD *)(a27 + 24 * v43);
  *uint8x16_t v49 = v48;
  v49[1] = v44;
  *(void *)(v47 + 24 * v43 + 16) = a1;
  v49[4] = HIDWORD(a32);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * ((1558 * (*(_DWORD *)(a3 + 48 * v45 + 32) + ((a9 - 1401520973) ^ 0xC3068A78) < 0x80000003)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_10059029C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, int a3@<W4>, int a4@<W8>)
{
  uint64_t v6 = 4 * (v4 - 843402717);
  uint64_t v7 = (int *)(STACK[0x3C0] + v6);
  int v8 = *v7;
  LODWORD(v7) = -1626398737
              * ((*(_DWORD *)(*(void *)STACK[0x390] + (*(_DWORD *)STACK[0x388] & 0x5AA5CF44)) ^ v7) & 0x7FFFFFFF);
  LODWORD(v7) = v7 ^ (v7 >> 16);
  uint64_t v9 = 4 * ((-1626398737 * v7) >> 24);
  uint64_t v10 = *(unsigned int *)((char *)*(&off_1009960C0 + (a4 ^ 0x3CE)) + v9 - 8);
  *(_DWORD *)(v5 + v6) ^= v8 ^ *(_DWORD *)((char *)*(&off_1009960C0 + a4 - 793) + v9) ^ v10 ^ *(_DWORD *)((char *)*(&off_1009960C0 + a4 - 821) + v9 - 12) ^ (535756800 * v7) ^ (-1626398737 * v7) ^ (((-1626398737 * v7) >> 24) * (((a4 - 393) | 0x4E) ^ 0x83E7E361));
  return sub_10059FB70(v10, (uint64_t)&off_1009960C0, a1, a2, a3);
}

void sub_100590388(int a1@<W8>)
{
  uint64_t v5 = *(void *)(v3 - 0xD547898781B11C0);
  unsigned int v6 = *v1 - 534536586;
  *(unsigned char *)(v5 + v6) = (HIBYTE(a1) ^ 0xEF) + (~(2 * (HIBYTE(a1) ^ 0xEF)) | 0x5B) + 83;
  *(unsigned char *)(v5 + v6 + 1) = (BYTE2(a1) ^ 0x63) + (~(2 * (BYTE2(a1) ^ 0x63)) | 0x5B) + 83;
  *(unsigned char *)(v5 + v6 + 2) = (BYTE1(a1) ^ 0x68) - ((2 * (BYTE1(a1) ^ 0x68)) & 0xA4) + 82;
  *(unsigned char *)(v5 + v6 + 3) = a1 ^ 0xF1;
  uint64_t v7 = *(void *)(v3 - 0xD547898781B11C0);
  unsigned int v8 = v4 - 2 * ((v4 + 571148384) & 0x3E005635 ^ v4 & 1) - 1609867628;
  unsigned int v9 = ((2 * (*v1 - 534536582)) & 0x778FFFBA) + ((*v1 - 534536582) ^ 0x3BC7FFDD) - 1002962909;
  *(unsigned char *)(v7 + v9) = (HIBYTE(v8) ^ 0xBE) + ~(2 * ((HIBYTE(v8) ^ 0xFFFFFFBE) & 0x53 ^ HIBYTE(v8) & 1)) + 83;
  *(unsigned char *)(v7 + v9 + 1) = (~(v8 >> 15) | 0x5B) + BYTE2(v8) + 83;
  *(unsigned char *)(v7 + v9 + 2) = (BYTE1(v8) ^ 0x56) - ((2 * (BYTE1(v8) ^ 0x56)) & 0xA4) + 82;
  *(unsigned char *)(v7 + v9 + 3) = (v4 - 2 * ((v4 + 96) & 0x35 ^ v4 & 1) - 108) ^ 0x66;
  *int v1 = v2;
  sub_1005C57F8();
}

uint64_t sub_1005904EC()
{
  return 0;
}

uint64_t sub_10059052C@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x528]) = v3;
  STACK[0x440] = (unint64_t)&STACK[0x630] + v1 - 0x5FBF6A2C236077FELL;
  uint64_t v4 = (uint64_t)*(&off_1009960C0 + a1 - 1169);
  uint64_t v5 = *(uint64_t (**)(void))(v2 + 8 * (((*(_DWORD *)(v4 - 8) == a1 - 1206) * ((a1 + 62) ^ 0x4FD)) | a1));
  STACK[0x2B8] = (unint64_t)*(&off_1009960C0 + (a1 ^ 0x4A5));
  STACK[0x310] = v4 - 8;
  return v5();
}

_DWORD *sub_1005905B4(_DWORD *result)
{
  *uint64_t result = v1;
  return result;
}

uint64_t sub_1005905BC()
{
  unsigned int v4 = (v3 + 209581037) & 0xF3820BF7;
  uint64_t v10 = v6;
  unsigned int v9 = v3 + 535753261 * (((v8 | 0x72FB31C9) + (~v8 | 0x8D04CE36)) ^ 0x780F3FE7) + 691;
  (*(void (**)(unsigned char *))(v1 + 8 * (v3 + 1380)))(v8);
  uint64_t v10 = v7;
  unsigned int v9 = v4 + 535753261 * (v8 ^ 0xAF40E2F) + 718;
  (*(void (**)(unsigned char *))(v1 + 8 * (int)(v4 + 1407)))(v8);
  return v2 ^ v0;
}

uint64_t sub_1005906B0@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((a2 ^ (*(_DWORD *)(*v5 + 4 * (v4 - 1812276502)) == ((a2 + 1436) ^ v3))) & 1)
                                * a1) | (a2 + 746))))();
}

uint64_t sub_1005906C4()
{
  int v5 = 1755732067 * ((v4 - 144) ^ 0xDEC6BDDB);
  *(_DWORD *)(v4 - 144) = (v0 + 702) ^ v5;
  *(_DWORD *)(v4 - 124) = v1 - 1988463606 - v5;
  *(void *)(v4 - 136) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1154)))(v4 - 144);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((*(_DWORD *)(v4 - 128) != v0 - 314638300) * (v0 ^ 0x3CB)) ^ (v0 - 112))))(v6);
}

uint64_t sub_1005906D8(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v3 & (2 * v6)) + (v6 ^ v2) == v2) * (v4 + 1193)) ^ v4)))();
}

uint64_t sub_100590714(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((216 * (v1 >= (((a1 - 1091) | 0x413) ^ 0x433u))) ^ a1)))();
}

uint64_t sub_100590750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 120) = v14
                         - 1759421093 * ((2 * ((v16 - 136) & 0x9DEAFE8) - (v16 - 136) - 165588971) ^ 0x455CE041)
                         - 598;
  *(void *)(v16 - 136) = v15;
  *(void *)(v16 - 128) = a12;
  (*(void (**)(uint64_t))(v13 + 8 * (v14 ^ 0xB3E)))(v16 - 136);
  int v17 = 1374699841 * ((((v16 - 136) | 0x8590F274) - ((v16 - 136) & 0x8590F274)) ^ 0xE864EA7D);
  *(void *)(v16 - 128) = v12;
  *(_DWORD *)(v16 - 136) = v17 + v14 - 727;
  *(_DWORD *)(v16 - 132) = v17 + 286424755;
  (*(void (**)(uint64_t))(v13 + 8 * (v14 ^ 0xB2A)))(v16 - 136);
  *(void *)(v16 - 136) = v12;
  *(void *)(v16 - 120) = a12;
  *(_DWORD *)(v16 - 112) = (v14 + 108) ^ (1374699841
                                        * (((((v16 - 136) ^ 0x60944128 | 0xF4B9EC4) ^ 0xFFFFFFFE)
                                          - ((v16 - 136) ^ 0x5099404 | 0xF0B4613B)) ^ 0xF79632DA));
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 + 1275)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((*(_DWORD *)(v16 - 128) != v14 + 542280179) * ((v14 + 295) ^ 0x4B2)) ^ (v14 + 502))))(v18);
}

uint64_t sub_1005908F0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v9 = 168 * (a1 ^ 0x16Au);
  uint64_t v10 = (a2 + v8 + v7 + v9 - a3 + 559);
  *(void *)(a4 - 7 + v10) = *(void *)(v5 - 7 + v10);
  return (*(uint64_t (**)(uint64_t, void))(v4
                                                    + 8
                                                    * (int)((56 * (((v9 ^ 0xFFFFFEA8) & v6) != a3 + 8)) ^ v9)))(v9, (a3 + 16));
}

void sub_100590964(uint64_t a1@<X8>, int a2, uint64_t a3, int a4)
{
  unsigned int v8 = 3804331
     * (((&a2 ^ 0x80100001 | 0x416973FA) + (&a2 ^ 0x414973E8 | 0xBE968C05)) ^ 0x3BC780BE);
  a3 = a1;
  a4 = (v5 - ((v7 + 71 * (v6 ^ 0x3BF) + 1574633998) & 0x733C0126) - 1467252255) ^ v8;
  a2 = v6 - v8 - 118;
  (*(void (**)(int *))(v4 + 8 * (v6 + 1203)))(&a2);
  sub_10059825C();
}

uint64_t sub_100590A1C(uint64_t a1, uint64_t a2, int a3)
{
  int v7 = a3 + ((v4 + 33587447) | 0x4CD82410) + *(unsigned __int8 *)(a2 + 8) - 78;
  return (*(uint64_t (**)(void))(v3 + 8 * ((345 * ((v6 & (2 * v7)) + (v7 ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_100590A74()
{
  int v4 = 628203409 * ((((2 * (v3 - 192)) | 0x7E61969E) - (v3 - 192) - 1060162383) ^ 0xBDB8C77C);
  int v5 = (void *)(v3 - 192);
  v5[3] = STACK[0x350];
  v5[5] = STACK[0x388];
  void v5[6] = STACK[0x340];
  void *v5 = STACK[0x348];
  v5[1] = STACK[0x338];
  *(_DWORD *)(v3 - 176) = v0 - v4 + 706;
  *(_DWORD *)(v3 - 172) = v1 - v4 + 81202360;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1922)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v2 + 8 * ((1311 * (*(_DWORD *)(v3 - 160) == ((v0 + 55) | 2) - 25955788)) ^ v0)))(v6, 2122182780, 48, 25995479, 2172784515, 1485875752, 109, 163, (__n128)0);
}

uint64_t sub_100590B78(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((2023 * ((v1 - 1226222087) < 0x28)) ^ (a1 - 1720521942) & 0x668D137Au)))();
}

uint64_t sub_100590C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8 * (int)((((((v6 - 755370483) & 0xEFFECF57) - a5 + 455) ^ 0x206) * (v5 == 63)) ^ v6)))();
}

uint64_t sub_100590CAC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_DWORD *)(v2 + 48 * (int)(((a1 - 2027) ^ 0xE1DCA5A4) + v1)) == 1518974388)
                                * ((v4 ^ 0x756) + 3895)) ^ v4)))();
}

uint64_t sub_100590D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return sub_100595DD8(a1, a2, a8, 4269011726);
}

uint64_t sub_100590D2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24)
{
  return (*(uint64_t (**)(void))(v25 + 8 * ((325 * (a24 == ((35 * (v24 ^ 0x2E5)) ^ 0x74F8B6CC))) ^ v24)))();
}

uint64_t sub_100590D78()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v0 ^ ((16 * ((v2 + v1 - 2) < 0x7FFFFFFF)) | (((v2 + v1 - 2) < 0x7FFFFFFF) << 9)))))();
}

uint64_t sub_100590DBC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v9 = (v3 ^ (v8 + 1)) + a2;
  *(unsigned char *)(v4 + v9 + a1) = v5;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((unint64_t)(v9 + a1 + 1) < 0x40) * v6) ^ v2)))();
}

uint64_t sub_100590DCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, int a12, int a13, unsigned int a14)
{
  unsigned int v17 = 1178560073 * ((&a10 & 0x7F041AE0 | ~(&a10 | 0x7F041AE0)) ^ 0xB2EDE55F);
  a10 = v15;
  a11 = &STACK[0x571561323F812312];
  a12 = v17 ^ 0x1DF4F7A4;
  a13 = v17 + v14 - 1005;
  a14 = -275222021 - v17;
  uint64_t v18 = (*(uint64_t (**)(uint64_t *))(v16 + 8 * (v14 ^ 0xD57)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((104
                                              * (*(_DWORD *)(v15 - 0xD547898781B11A8) == ((v14 + 281) ^ 0xFE73F53E))) | v14)))(v18);
}

uint64_t sub_100590EA8@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,_DWORD *a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v35 = 4 * (v33 - 200352062);
  unsigned int v36 = ((*(_DWORD *)(*a29 + (*a30 & 0x363289E0)) ^ (a32 + v35)) & 0x7FFFFFFF) * (a3 - 1626400090);
  int v37 = v36 ^ HIWORD(v36);
  *(_DWORD *)(a33 + v35) ^= *(_DWORD *)(a32 + v35) ^ *((_DWORD *)*(&off_1009960C0 + (a3 ^ 0x5FE))
                                                     + ((-1626398737 * v37) >> 24)
                                                     - 3) ^ *((_DWORD *)*(&off_1009960C0 + (a3 ^ 0x5D1))
                                                            + ((-1626398737 * v37) >> 24)) ^ *((_DWORD *)*(&off_1009960C0 + (int)(a3 & 0x9B782223)) + ((-1626398737 * v37) >> 24) - 1) ^ (535756800 * v37) ^ (-1626398737 * v37) ^ (-1109235783 * ((-1626398737 * v37) >> 24));
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((382 * ((((a3 - 1953973055) | 0x145011C0) ^ (a2 - 2130)) + v34 == 724258179)) ^ (a3 + 364))))();
}

uint64_t sub_100590FF4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((45 * (((v0 == v1) ^ ((v2 + 100) ^ (v2 - 1))) & 1)) ^ v2)))();
}

uint64_t sub_10059102C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((30 * ((((3 * (v1 ^ 0x6C7)) ^ 0xFFFFFF20) & v0) == v1 + 572613569)) ^ v1)))();
}

uint64_t sub_100591074(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((57 * (v9 + 18754242 + ((v8 - 1094) | 0x328u) - a8 + 615 >= v9 + a1)) ^ v8)))();
}

uint64_t sub_1005910C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = (v3 + v4);
  int v8 = *(unsigned __int8 *)(v1 + v7) ^ 0x52 | ((*(unsigned __int8 *)(v1 + (v7 + 1)) ^ 0x52) << 8) | ((*(unsigned __int8 *)(v1 + (v4 + v3 + v2 - 822 - 216)) ^ 0x52) << 16) | ((*(unsigned __int8 *)(v1 + (v7 + 3)) ^ 0x52) << 24);
  *(_DWORD *)(a1 + v7) = v8 + v6 - ((2 * v8) & 0xFCE7E61C);
  return (*(uint64_t (**)(void))(v5 + 8 * (v2 ^ (2 * ((v3 + 4 + v4) < 0x40)))))();
}

uint64_t sub_10059114C()
{
  int v4 = v0 - 473;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0xD2F)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((*v2 != 2 * (v4 ^ 0x1B0) - 1424) * ((58 * (v4 ^ 0x37B)) ^ 0x4F)) ^ v4)))(v5);
}

uint64_t sub_1005911B0@<X0>(int a1@<W8>)
{
  int v4 = v2 + 750;
  int v5 = (v2 - 55) | 0x43;
  int v6 = v1 + a1;
  if (v6 >= 0) {
    unsigned int v7 = v6;
  }
  else {
    unsigned int v7 = -v6;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v4 - 738) ^ 0x33 ^ v5) * (v7 > 0x82)) ^ v4)))();
}

void sub_1005911F4()
{
}

uint64_t sub_100591200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,int a24)
{
  BOOL v29 = a24 - v25 == ((v24 - 749) | 0x118) - 517488470 && a22 == v27 + 10;
  return (*(uint64_t (**)(void))(v26 + 8 * ((2029 * v29) ^ v24)))();
}

uint64_t sub_10059124C()
{
  *(void *)(v6 - 120) = v5;
  *(void *)(v6 - 136) = v4;
  *(_DWORD *)(v6 - 112) = (v0 - 264) ^ ((((((v6 - 136) | 0x21165438) ^ 0xFFFFFFFE) - (~(v6 - 136) | 0xDEE9ABC7)) ^ 0xB31DB3CE)
                                      * v1);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xCB9)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((((v0 + 38) ^ (*(_DWORD *)(v6 - 128) == v3)) & 1)
                                              * ((v0 + 724977445) ^ 0x2B364BF8)) ^ v0)))(v7);
}

uint64_t sub_100591318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v18 - 144) = v16
                         + 1759421093
                         * ((((v18 - 144) | 0xC7E2DF16) - (v18 - 144) + ((v18 - 144) & 0x381D20E8)) ^ 0x749F6F42)
                         + 1423;
  *(void *)(v18 - 128) = v12;
  *(void *)(v18 - 120) = v14;
  *(void *)(v18 - 112) = a11;
  *(void *)(v18 - 104) = v13;
  *(void *)(v18 - 136) = v12;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v16 ^ 0xA25)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((43 * (v11 + v15 + (((v16 - 362) | 0x450) ^ 0x73Eu) + 741 < 0x7FFFFFFF)) ^ ((v16 - 362) | 0x450))))(v19);
}

void sub_1005913CC(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x35AD11BEDFA3F43ALL) = v2;
  *(_DWORD *)(v1 + 32) = -25955570;
}

uint64_t sub_100591424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_100591438(a1, a2, a3, a4, a5, a6, STACK[0x258]);
}

uint64_t sub_100591438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  STACK[0x3F8] = *(void *)(v9 + 8 * v7);
  return sub_1005A987C(a7, v8 ^ 0x641u);
}

uint64_t sub_100591458(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 == a1) ^ (v2 + 8)) & 1) * (v2 - 273)) ^ v2)))();
}

uint64_t sub_10059148C(uint64_t a1, int a2, int a3, int a4, int a5, uint64_t a6, int a7)
{
  int v12 = v8 + v7;
  int v13 = v12 + v9;
  if ((v12 + v9) <= 0x40) {
    int v13 = a4;
  }
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((507
                                * (a7 - v12 < a2
                                            + a3
                                            + a5
                                            + ((v10 - 353656484) & 0x15145FFF ^ 0x1DDu)
                                            - 1831
                                            - 1990582782
                                            + v13)) ^ (v10 - 353656484) & 0x15145FFFu)))();
}

uint64_t sub_100591500@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v11 = v6 + 1;
  BOOL v12 = v2 < v5;
  *(_DWORD *)(*v4 + 4 * (v11 + v7)) = *(_DWORD *)(*v4 + 4 * (a2 + v11));
  if (v12 == v11 + v8 < v9) {
    BOOL v12 = v11 + v8 < v2;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((v12 * a1) ^ v3)))();
}

uint64_t sub_100591508(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v32 = a2 + v29;
  *(_DWORD *)(a26 + 4 * (v32 + v30)) = v27;
  int v33 = v32 + a3;
  if (v32 + a3 < a4)
  {
    BOOL v36 = __OFSUB__(v33, v28);
    BOOL v34 = v33 == v28;
    BOOL v35 = v33 - v28 < 0;
  }
  else
  {
    BOOL v36 = 0;
    BOOL v34 = 1;
    BOOL v35 = 0;
  }
  if (v35 ^ v36 | v34) {
    int v37 = 0;
  }
  else {
    int v37 = 1;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * (((2 * v37) | (32 * v37)) ^ v26)))();
}

uint64_t sub_100591510()
{
  return sub_100591528();
}

uint64_t sub_100591528()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 > 0x7FFFFFFE) * (v1 - 606)) ^ (v1 - 394))))();
}

uint64_t sub_100591550()
{
  int v4 = ((145 * (v0 ^ 0x15F)) ^ (v1 - 1161)) + v2 < 0x7FFFFFFF;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 << 9) | (v4 << 10) | v0)))();
}

uint64_t sub_100591590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  *unsigned int v43 = STACK[0x4D0];
  v43[85] = STACK[0x574];
  v43[86] = STACK[0x4B4];
  v43[87] = STACK[0x434];
  v43[88] = STACK[0x3CC];
  return (*(uint64_t (**)(void))(v44
                              + 8
                              * (((*(void *)(v42 + 160) == 0)
                                * (((a42 - 527020375) & 0x1F69B1DF)
                                 + 333
                                 + ((a42 - 527020375) & 0x1F69B1DF)
                                 + 1245
                                 - 1867)) ^ (((a42 - 527020375) & 0x1F69B1DF) + 321))))();
}

uint64_t sub_100591608@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v15 = (((v7 + v8 + v12 - v9) >> v5) + v12 - ((2 * ((v7 + v8 + v12 - v9) >> v5)) & 4)) ^ (v7 + v8 + v12 - v9);
  *(_DWORD *)(v13 + 4 * a4) = a4 + v14 + v15 * a3 - ((v4 + 2 + v15 * a1) & v11) - 1;
  return (*(uint64_t (**)(void))(a2 + 8 * (((a4 > 0x26E) * v6) ^ v10)))();
}

uint64_t sub_10059161C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((((((unsigned __int16)v11 ^ 0x7A5) - 31500) & 0x9FD ^ 0x194) * (a11 == v12)) ^ v11 ^ 0x7A5u)))();
}

uint64_t sub_100591660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (int)(((v30 == -25955570) * ((v29 - 581 - a6 - 352) ^ (a5 + 578))) ^ (v29 - 581))))(a1, a2, a3, a4, a5, a6, a29, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1005916B0@<X0>(uint64_t a1@<X1>, int a2@<W4>, unsigned int a3@<W5>, int a4@<W6>, char a5@<W7>, uint64_t a6@<X8>)
{
  int v11 = v6 - 1;
  *(unsigned char *)(a6 + v11 + (v9 ^ a3)) = *(unsigned char *)(v7 + v11 + (v9 ^ a3)) ^ *(unsigned char *)((((_BYTE)v11
                                                                                   + (v9 ^ a3)) & 0xF)
                                                                                 + *(void *)(a1 + 8 * (v9 - 1134))
                                                                                 + 2) ^ *(unsigned char *)(*(void *)(a1 + 8 * (v9 ^ a4)) + (((_BYTE)v11 + (v9 ^ a3)) & 0xF) - 4) ^ (((v11 + (v9 ^ a3)) & 0xF) * a5) ^ *(unsigned char *)(*(void *)(a1 + 8 * (v9 ^ v8)) + ((v11 + (v9 ^ a3)) & 0xFLL) - 9) ^ 0x52;
  return (*(uint64_t (**)(void))(v10 + 8 * (((v11 == -853) * a2) ^ v9)))();
}

uint64_t sub_1005916B8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((((((a1 + 1071) ^ 0x74D ^ (*v1 == 0)) & 1) == 0) * (a1 - 626)) ^ (a1 + 1071))))();
}

uint64_t sub_1005916FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,int a47)
{
  if (BYTE4(a22) == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                         + 8
                                                                         * ((664
                                                                           * (a47 != ((a5 - 1183277412) & 0x9E66ED73)
                                                                                   + 394386536)) ^ ((int)a6
                                                                                                  + (int)a5
                                                                                                  + 323))))(a1, a2, a3, 1145886373);
  if (BYTE4(a22) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                         + 8
                                                                         * ((126
                                                                           * (a47 == ((a6 + a5 + 257) ^ 0x1781DCD6))) ^ ((int)a6 + (int)a5 + 257))))(a1, a2, a3, 1145886373);
  uint64_t v49 = 597 * ((a5 + 2) ^ 0xA8207551);
  unint64_t v50 = ((unint64_t)&a30 ^ 0xAA577FFBC77A7E01 ^ v49)
      + ((2 * (void)&a30) & 0x54AEFFF78EF4F550)
      + 0x77F8AF6DFEB7FC85;
  a46 = ((v50 - 48) ^ 0xBA) * (v50 + 85 * ((a5 + 2) ^ 0x51) + 55);
  int v51 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (int)(v49 ^ 0x76));
  return v51(v51, a2, a3, 1145886373, a5, a6, a7, a14, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1005918B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (a4 ^ (8 * ((((a4 - 1901) ^ (v5 == a5)) & 1) == 0)))))();
}

uint64_t sub_1005918F0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x3D8] = *(void *)(v64 + 8 * v63);
  return sub_1005B9A38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_100591928(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1150
                                * ((((*(unsigned __int8 *)(a2 + 3) - 137) << ((v5 - a3) ^ (v3 + 1))) & v7)
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v6) == v6)) ^ v5)))();
}

uint64_t sub_100591970()
{
  LODWORD(STACK[0x370]) = v2;
  *(void *)(v3 + 440) = 0x870467F91E0CD726;
  int v7 = *(_DWORD **)(v1 + 8 * (v0 ^ 0x7A));
  STACK[0x368] = (unint64_t)v7;
  LODWORD(STACK[0x448]) = *v7 - 432511607;
  int v8 = *(unsigned int **)(v1 + 8 * (v0 ^ 0xCC));
  STACK[0x378] = (unint64_t)v8;
  uint64_t v9 = *v8;
  unint64_t v10 = 1374699841 * ((~(v4 | 0x60E5002A3B6E3C5DLL) + (v4 & 0x60E5002A3B6E3C5DLL)) ^ 0x911661D9A965DBABLL);
  uint64_t v11 = v6 - 192;
  *(void *)(v11 + 24) = v10 + 1202683098;
  *(_DWORD *)(v6 - 176) = (v0 - 504207248) ^ v10;
  *(_DWORD *)(v6 - 192) = v10 ^ (v0 + 1779911970) ^ 0x26;
  *(_DWORD *)(v6 - 188) = v0 + 1779911970 - v10;
  *(_DWORD *)(v6 - 184) = v10;
  *(void *)(v11 + 40) = v9 - v10;
  *(_DWORD *)(v6 - 160) = ((v0 + 1779911970) & 0x7B17DFA7) + v10;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v0 ^ 0x847)))(v6 - 192);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v6 - 180)))(v12);
}

uint64_t sub_100591AA4()
{
  unsigned int v6 = *(unsigned __int8 *)(v4 + 1) + v2 + (((v3 + 569) | 0x240) ^ 0xFFFFFB8A);
  return (*(uint64_t (**)(void))(v5 + 8 * ((906 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_100591AF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1122 * (v7 + 1 == v9)) ^ a7)))();
}

uint64_t sub_100591B10(_DWORD *a1)
{
  unsigned int v1 = 3804331 * ((((2 * a1) | 0x5B2BA828) - a1 - 764793876) ^ 0xD70B2742);
  unsigned int v2 = a1[1] + v1;
  return (*((uint64_t (**)(void))*(&off_1009960C0 + (int)(v2 ^ 0x71C))
          + (int)((((*a1 ^ v1 ^ 0xFE73F30E) - 1 < 0x63) * ((v2 - 1229) ^ (v2 - 789) ^ 0x68F)) ^ v2)
          - 1))();
}

uint64_t sub_100591BA8@<X0>(int8x16_t *a1@<X3>, int a2@<W8>)
{
  *a1 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v4 + (v2 + v3)), vandq_s8(vaddq_s8(*(int8x16_t *)(v4 + (v2 + v3)), *(int8x16_t *)(v4 + (v2 + v3))), v7)), v6);
  return (*(uint64_t (**)(void))(v5 + 8 * (a2 + 496)))((v2 + 64));
}

uint64_t sub_100591BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8
                                                              + 8
                                                              * ((1198 * (v6 - 1455315069 < ((v7 - a5 + 1219) ^ 0x4FBu))) ^ (a6 + v7 + 750))))(a1, a2, -1455315069);
}

uint64_t sub_100591C40@<X0>(int a1@<W1>, int a2@<W3>, uint64_t a3@<X8>)
{
  unsigned int v9 = a1 + v7 + v6 + 895;
  uint64_t v10 = v4 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = a3 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v5 & 0xFFFFFFE0) == 32) * (((a2 - 1126 + v8 + 942) | 1) - 1384)) | (a2 - 1126 + v8))))();
}

void sub_100591CA0(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 24) == 0xD547898781B11C0
    || *(void *)(a1 + 8) == 0x1401A874B35F4D7BLL
    || *(void *)(a1 + 40) == 0x108FB322A2BD6E97;
  int v1 = *(_DWORD *)(a1 + 36) - 1178560073 * ((2 * (a1 & 0x2A268EDC) - a1 - 707170013) ^ 0xE7CF7163);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_100591DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, unsigned int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v21 = 3804331 * (((&a13 | 0x26569924) - (&a13 & 0x26569924)) ^ 0xDCC86A72);
  a16 = a10;
  a17 = &STACK[0x660356CACBBB3C58];
  a18 = (v20 + 2138962592) ^ v21;
  a14 = 807382805 - v21;
  a15 = v21 ^ 0xA3DA8510;
  uint64_t v22 = (*(uint64_t (**)(int *))(v19 + 8 * (v20 ^ 0xB64)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((1551 * (a13 == v18 + 2 * (v20 ^ 0x3BB) - 374)) ^ v20)))(v22);
}

uint64_t sub_100591E98@<X0>(int a1@<W8>)
{
  int v4 = (a1 - 1407) | 0xB8;
  int v5 = v4 + 1223 + v1 + 652935168;
  int v6 = (v3 > (v4 ^ 0x332906u)) ^ (v5 < -3353085);
  BOOL v7 = v5 < (int)(v3 + 2144130563);
  if (v6) {
    BOOL v8 = v3 > (v4 ^ 0x332906u);
  }
  else {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((698 * v8) ^ v4)))();
}

uint64_t sub_100591F78@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 + 1) ^ 0xA71E2CE4) + *(_DWORD *)(a1 + 532) >= (v1 ^ 0x382u) + 2147483429) | v1)))();
}

uint64_t sub_100591FC8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v4 = a2 - 466;
  unsigned int v5 = (a2 + 960139498) & 0xC6C56FEB;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((a2 - 466) ^ 0xD36)))(a1, 3168438350);
  *uint64_t v2 = v6;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v6 != 0) * (v5 ^ 0x623 ^ (34 * (v4 ^ 0x50F)))) | v4)))();
}

uint64_t sub_100592048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unsigned char *a22)
{
  int v25 = *(unsigned char **)(a8 + 96);
  v25[1167] = a22[19];
  v25[1166] = a22[18];
  v25[1165] = a22[17];
  v25[1164] = a22[16];
  v25[1163] = a22[15];
  v25[1162] = a22[14];
  v25[1161] = a22[13];
  v25[1160] = a22[12];
  v25[1159] = a22[11];
  v25[1158] = a22[10];
  v25[1157] = a22[9];
  v25[1156] = a22[8];
  v25[1155] = a22[7];
  v25[1154] = a22[6];
  v25[1153] = a22[5];
  v25[1152] = a22[4];
  v25[1151] = a22[3];
  v25[1150] = a22[2];
  v25[1149] = a22[1];
  v25[1148] = *a22;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v23
                                                                                        + 8
                                                                                        * (((((*(_DWORD *)(a8 + 72) == 1145886383) ^ (v22 - 25)) & 1)
                                                                                          * ((v24 + v22 + 163 - 443) ^ (v24 - 90))) ^ (v22 + 163))))(a6, a2, a3, a4, a5, 0);
}

uint64_t sub_100592174()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 == 181 * (v0 ^ 0x544) + 296805096) * (v2 + v4 + v0 - 1347 - 127)) ^ v0)))();
}

uint64_t sub_1005921D0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 440) ^ 0x553) - 1775) * ((v0 - 100) < 0x9C)) ^ v1)))();
}

uint64_t sub_100592208()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1742
                                * ((((199 * (v2 ^ 0x1B9)) ^ (v1 + 461)) & (2 * (*(unsigned __int8 *)(v3 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 6) - 1) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_100592254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((988 * ((a8 + 1 + v9) > 0x2F)) ^ v8)))();
}

uint64_t sub_100592330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,_DWORD *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  *a30 = a42 + 432511608;
  uint64_t v44 = (*a31 + 1806207709);
  *(_DWORD *)(v43 - 116) = a14 ^ 1;
  *(_DWORD *)(v43 - 112) = ((v42 - 374387975) ^ 0x6B) + a14;
  *(_DWORD *)(v43 - 144) = (v42 + 111494114) ^ a14;
  *(void *)(v43 - 104) = a13;
  *(void *)(v43 - 136) = v44 ^ a14;
  *(_DWORD *)(v43 - 124) = (v42 - 374387975) ^ a14;
  *(_DWORD *)(v43 - 120) = ((v42 - 374387975) ^ 0xEB) + a14;
  uint64_t v45 = (*(uint64_t (**)(uint64_t))(a1 + 8 * (a5 + v42 - 6)))(v43 - 144);
  return (*(uint64_t (**)(uint64_t))(a39 + 8 * *(int *)(v43 - 128)))(v45);
}

uint64_t sub_1005923F8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,_DWORD *a38,uint64_t a39)
{
  int v45 = a2 ^ 0x44F;
  int v46 = v43 + (a2 ^ 0x44F) - 859;
  uint64_t v47 = (*(uint64_t (**)(uint64_t, void))(v39 + 8 * (a2 ^ 0xF47u)))(a11, 0);
  unsigned int v48 = *(_DWORD *)(v44 - 208) + v41 - ((v46 ^ 0x981CE50E) & (2 * *(_DWORD *)(v44 - 208)));
  *(_DWORD *)(v44 - 220) = *(_DWORD *)(v44 - 200) + v41 - (v40 & (2 * *(_DWORD *)(v44 - 200)));
  *(_DWORD *)(v44 - 216) = v48;
  uint64_t v49 = 8 * (v45 + 1252);
  int v50 = (*(uint64_t (**)(uint64_t))(a39 + v49))(v47);
  *(_DWORD *)(v44 - 212) = v50 + v41 - (v40 & (2 * v50));
  int v51 = (*(uint64_t (**)(void))(a39 + v49))();
  *(_DWORD *)(v44 - 224) = v51 + v41 - (v40 & (2 * v51));
  int v52 = ((*v42 >> 30) + 65149794 - 4 * (*v42 >> 31)) ^ *v42;
  int v53 = (*a38 ^ 0x3E21B62) + ((1664525 * v52 + 65149794 - ((3329050 * v52) & 0x7C436C4)) ^ v42[1]);
  v42[1] = v53 + 65149794 - ((2 * v53) & 0x7C436C4);
  uint64_t v54 = 535753261 * ((0x5A3ABD8775609F5DLL - ((v44 - 144) | 0x5A3ABD8775609F5DLL) + a37) ^ 0x50271F15806B6E8DLL);
  *(void *)(v44 - 112) = v54 + 2555720922;
  *(_DWORD *)(v44 - 104) = v54;
  *(void *)(v44 - 144) = v54 ^ 0x985534DCLL;
  *(_DWORD *)(v44 - 136) = ((v46 + 1761884824) ^ 0x2A) - v54;
  *(_DWORD *)(v44 - 132) = v54 + v46 - 577154948;
  *(_DWORD *)(v44 - 120) = (v46 + 1761884824) ^ v54;
  *(_DWORD *)(v44 - 128) = v46 + 1761884824 - v54 - 48;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(a39 + 8 * (v46 + 1613182087)))(v44 - 144);
  return (*(uint64_t (**)(uint64_t))(a39 + 8 * *(int *)(v44 - 124)))(v55);
}

uint64_t sub_100592634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void))(v6
                                                                              + 8
                                                                              * (((v9
                                                                                 + ((v8 - 928741741) | 0x26000209)
                                                                                 + 1226)
                                                                                * (v7 == a6)) ^ v8)))(0, a2, a3, a4, v9 + ((v8 - 928741741) | 0x26000209u) + 374);
}

uint64_t sub_100592678@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v2 - 0x330904BA72E93EB8) + 4 * (v5 - 419741976)) = *(_DWORD *)(*(void *)(v3 - 0x330904BA72E93EB8)
                                                                                           + 4 * (v5 - 419741976));
  return (*(uint64_t (**)(void))(a1 + 8 * ((117 * (v5 - 1 == ((v1 + 85) ^ v4))) ^ v1)))();
}

uint64_t sub_1005926DC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 - v0 < (unint64_t)(v1 + 497) - 1059)
                                * ((83 * (v1 ^ 0x250)) ^ 0xA2)) | v1)))();
}

uint64_t sub_100592720(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 ^ 0xA2B)))(*(unsigned int *)STACK[0x2B8], a2, 0);
  return sub_1005A3130(v4);
}

uint64_t sub_100592730(char a1, char a2, char a3, char a4, uint64_t a5, int a6, int8x16_t a7, int8x8_t a8, int8x8_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  uint64_t v55 = (a6 + v53 - 8);
  v57.val[0].i64[0] = ((_BYTE)a6 + (_BYTE)v53 - 8) & 0xF;
  v57.val[0].i64[1] = ((_BYTE)a6 + v52 - 8) & 0xF;
  v57.val[1].i64[0] = ((_BYTE)a6 + v51 - 8) & 0xF;
  v57.val[1].i64[1] = ((_BYTE)a6 + a4 - 8) & 0xF;
  v57.val[2].i64[0] = ((_BYTE)a6 + a3 - 8) & 0xF;
  v57.val[2].i64[1] = ((_BYTE)a6 + a2 - 8) & 0xF;
  v57.val[3].i64[0] = ((_BYTE)a6 + v49 - 8 + (*(_DWORD *)(v54 - 116) ^ 3)) & 0xF;
  v57.val[3].i64[1] = ((_BYTE)a6 + a1 - 8) & 0xF;
  *(int8x8_t *)(*(void *)(v54 - 136) + v55) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a5 + v55), *(int8x8_t *)(v47 + (v55 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v48 + (v55 & 0xF) - 7), *(int8x8_t *)(v46 + (v55 & 0xF) - 7)))), a9), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v57, a7), a8)));
  return (*(uint64_t (**)(void))(a46 + 8 * ((23 * (a6 != v50 + 8)) ^ *(_DWORD *)(v54 - 120))))();
}

uint64_t sub_100592758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((1015 * ((a12 ^ 0xEF3E544D) + v12 < v12 - 281128576 + ((a12 - 1451) | 0x128u) - 367)) ^ a12)))();
}

uint64_t sub_1005927C0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((a1 ^ (v4 - 1215) ^ (v2 == v1)) & 1) == 0) * ((a1 - 1238000846) & 0x49CA65FF ^ 0x5DD)) ^ a1)))();
}

uint64_t sub_100592814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  BOOL v25 = v21 != 296806363 || a21 != 449 * (v22 ^ 0xBE) + 413194865;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 8 * ((v25 * (v22 ^ 0x677)) ^ v22)))(a1, a2, 4269011726);
}

uint64_t sub_100592870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v7 ^ 0x76B ^ (v6 == a6)) & 1) == 0) * (v7 ^ 0x2DF)) | v7)))();
}

uint64_t sub_1005928AC@<X0>(uint64_t a1@<X8>)
{
  v6[1] = v3 + 535753261 * (((v6 | 0xA49C164D) - (v6 & 0xA49C164D)) ^ 0xAE681862) + 987;
  uint64_t v7 = a1;
  uint64_t result = (*(uint64_t (**)(_DWORD *))(v2 + 8 * (v3 ^ 0x9FC)))(v6);
  *(_DWORD *)(v1 + 8) = v4;
  return result;
}

uint64_t sub_10059294C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((485 * ((a5 + 1 + v7) < 0x50)) ^ v6)))(v5, a4);
}

uint64_t sub_100592A00()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((455 * (v1 < v3)) ^ (v2 - 1613181861))))();
}

uint64_t sub_100592A40@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 - 7 + (v1 - 203)) = *(void *)(a1 + (v1 - 203) - 7);
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 + 25)))();
}

uint64_t sub_100592A84()
{
  uint64_t v4 = *(void *)(v6 + 16);
  *(_DWORD *)(v3 - 112) = v0
                        - 1759421093
                        * ((1781720329 - ((v3 - 128) | 0x6A32E509) + ((v3 - 128) | 0x95CD1AF6)) ^ 0x26B0AAA2)
                        - 239;
  *(void *)(v3 - 128) = v4;
  *(void *)(v3 - 120) = v2;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1629)))(v3 - 128);
}

uint64_t sub_100592B44()
{
  return sub_1005AA8BC();
}

uint64_t sub_100592B74(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(a3 + 48 * (a2 + v7 + 1326)) == (v5 ^ (a5 + 212)) + 1481401032)
                                * (((v5 - 858) | 0x164) - 369)) ^ v5)))();
}

uint64_t sub_100592BD0(uint64_t a1, int a2, uint64_t a3, uint64_t a4)
{
  int v8 = *(unsigned __int8 *)(v5 + a4 - 0xF6B6F01C329A48DLL)
     - (*(unsigned __int8 *)(v6 + a4 - 0xF6B6F01C329A48DLL) ^ 0x52);
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((2 * v8) & 0x7FD5E9EC) + (v8 ^ ((a2 ^ 0xC0) + v4)) == v4 + 125) * (a2 + 1672)) ^ a2)))();
}

uint64_t sub_100592C40@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((((a2 - 1858992362) < 0x38)
                                                       * (((v4 + v2 - 620) | 0x348) - 820)) ^ (v4 + v2 - 375))))(a1, -1858992362);
}

void sub_100592C90(uint64_t a1)
{
  *(_DWORD *)(*(void *)(a1 + 24) - 0x41D57A3C79D937EFLL) = v3;
  *uint64_t v1 = v2;
  sub_10059B658();
}

uint64_t sub_100592CB0()
{
  LOBYTE(STACK[0x268]) = *(unsigned char *)(v3 + v0);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1182 * (((v1 + 635327461) & 0xDA21AA3F ^ 0x87E84630) + v2 < 4)) ^ v1)))();
}

uint64_t sub_100592D04@<X0>(uint64_t a1@<X2>, int a2@<W5>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28)
{
  *(&a28 + a3 + a1) = 82;
  return (*(uint64_t (**)(void))(v29 + 8 * ((71 * ((unint64_t)(a3 + 1 + a1) < 0x38)) ^ (a2 + v28 + 750))))();
}

void sub_100592D44()
{
}

uint64_t sub_100592D4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((v5 + ((a5 + 1740569124) & 0xFCEBE67C) + 118)
                                     * ((unint64_t)(v6 - a1) < 0x20)) ^ a5)))();
}

uint64_t sub_100592D90(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 1428) = 32707542;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((*(_DWORD *)(a2 + 4) == v2) ^ (23 * (v3 ^ 0x7F))) & 1 | (4 * (((*(_DWORD *)(a2 + 4) == v2) ^ (23 * (v3 ^ 0x7F))) & 1))) ^ v3)))();
}

uint64_t sub_100592DEC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((((v8 + a4) & a7 ^ a8) + v8 + 1140) * (v9 == 98)) ^ v8)))();
}

uint64_t sub_100592E1C()
{
  LODWORD(STACK[0x2D0]) = STACK[0x48C];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((30 * ((v1 & 0xFFFFFFFE) != 33 * ((v0 - 1280877693) & 0x4C589FCA ^ 0x40) + 572615180)) ^ (v0 - 294))))();
}

uint64_t sub_100592E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,char a37,uint64_t a38,uint64_t a39,int a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, char *, uint64_t))(v50 + 8 * ((884 * (a17 + ((((v51 + 16) | 0x700) - 1762) & (2 * a50) ^ 0x1A) + (a50 & 0x3F ^ 0x7D9F5492u) < 0xFFFFFFC0)) ^ (v51 + 1099))))(a1, 2187897853, a3, &a41, 2158602822, 164, &a37, a30);
}

uint64_t sub_100592F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  int v50 = BYTE4(a44) ^ 0xB9;
  if (v50 == 1)
  {
    BYTE4(a39) = ((8 * a41) ^ 0x68 | 6) - ((2 * ((8 * a41) ^ 0x68)) & 0xAA) + 76;
    BYTE5(a39) = ((a41 >> 5) ^ 0xFA)
               - 2 * (((a41 >> 5) ^ 0xFA) & 0x56 ^ (a41 >> 5) & 4)
               + 82;
    char v52 = -92;
    BYTE6(a39) = ((a41 >> 13) ^ 0xA4) - ((a41 >> 12) & 0xA4) + 82;
    HIBYTE(a39) = ((a41 >> 21) ^ 0x42)
                - 2 * (((a41 >> 21) ^ 0x42) & 0x56 ^ (a41 >> 21) & 4)
                + 82;
    HIDWORD(v54) = ~HIDWORD(a40);
    LODWORD(v54) = a41 ^ 0xC0000000;
    LOBYTE(a40) = (v54 >> 29) - ((2 * (v54 >> 29)) & 0xA4) + 82;
    BYTE1(a40) = ((HIDWORD(a40) >> 5) ^ 0x42)
               - 2 * (((HIDWORD(a40) >> 5) ^ 0x42) & 0x53 ^ ((a40 & 0x2000000000) != 0))
               + 82;
    BYTE2(a40) = ((HIDWORD(a40) >> 13) ^ 0xB3) - ((2 * ((HIDWORD(a40) >> 13) ^ 0xB3)) & 0xA4) + 82;
    int v53 = (HIDWORD(a40) >> 21) ^ 0x15;
    goto LABEL_5;
  }
  if (v50 == 2)
  {
    BYTE4(a39) = ((HIDWORD(a40) >> 21) ^ 0x15) - ((2 * ((HIDWORD(a40) >> 21) ^ 0x15)) & 0xA4) + 82;
    HIDWORD(v51) = ~HIDWORD(a40);
    LODWORD(v51) = a41 ^ 0xC0000000;
    BYTE5(a39) = ((HIDWORD(a40) >> 13) ^ 0xB3) - ((2 * ((HIDWORD(a40) >> 13) ^ 0xB3)) & 0xA4) + 82;
    BYTE6(a39) = ((HIDWORD(a40) >> 5) ^ 0x42)
               - 2 * (((HIDWORD(a40) >> 5) ^ 0x42) & 0x53 ^ ((a40 & 0x2000000000) != 0))
               + 82;
    HIBYTE(a39) = (v51 >> 29) - ((2 * (v51 >> 29)) & 0xA4) + 82;
    LOBYTE(a40) = ((a41 >> 21) ^ 0x42)
                - 2 * (((a41 >> 21) ^ 0x42) & 0x53 ^ ((a41 & 0x200000) != 0))
                + 82;
    BYTE1(a40) = ((a41 >> 13) ^ 0xA4) - ((a41 >> 12) & 0xA4) + 82;
    BYTE2(a40) = ((a41 >> 5) ^ 0xFA) - ((2 * ((a41 >> 5) ^ 0xFA)) & 0xA4) + 82;
    char v52 = -96;
    LOBYTE(v53) = (8 * a41) ^ 0x68;
LABEL_5:
    BYTE3(a40) = v53 + ((a5 + 6) ^ 6) - (v52 & (2 * v53)) + 1;
  }
  return sub_1005A9C00(a1, a2, a3, 114891202, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

void sub_1005931B4()
{
}

uint64_t sub_1005931BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = ((a5 + 125) | 0xF) + *(_DWORD *)(a2 + 4) + 671651340;
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_100593204@<X0>(int a1@<W8>)
{
  unint64_t v4 = 1759421093
     * ((((v3 - 160) | 0x60E2BDCEF914AA9ELL) - (v3 - 160) + ((v3 - 160) & 0x9F1D423106EB5560)) ^ 0x4E5C7C9E4A691ACALL);
  *(void *)(v3 - 136) = v1 ^ v4;
  *(_DWORD *)(v3 - 144) = ((a1 - 1072502696) ^ 0x41) + v4;
  *(void *)(v3 - 152) = 1629372110 - v4;
  *(_DWORD *)(v3 - 124) = ((a1 - 1072502696) ^ 0x38) - v4;
  *(_DWORD *)(v3 - 120) = (a1 - 1072502696) ^ v4;
  *(_DWORD *)(v3 - 160) = v4 + a1 + 2021363714;
  *(_DWORD *)(v3 - 128) = v4;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x89C)))(v3 - 160);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 116)))(v5);
}

uint64_t sub_1005932E8()
{
  unsigned int v5 = (((v3 - 264) | 0x83) ^ 0xFFFFFE38) + *(unsigned __int8 *)(v2 + 5);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1505 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_100593334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * ((496
                                                                         * (v4 == ((v5 - 30796534) & 0x1D5EBED)
                                                                                + 913940306)) ^ v5)))(a1, a2, a3, 1285617491);
}

void sub_100593380()
{
  uint64_t v0 = __chkstk_darwin();
  if (*(void *)v0) {
    BOOL v2 = *(void *)(v0 + 8) == 0x660356CACBBB3C48;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(v0 + 20) ^ (1755732067 * (((v0 | 0xFD508F6) - v0 + (v0 & 0xF02AF709)) ^ 0xD113B52D));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1005934C0(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 28) = a3;
  return result;
}

uint64_t sub_1005934C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * ((22 * (v14 != 0)) ^ (v15 - 494))))(a1, a2, a3, a4, a5, a6, a7, a8, a1, a10, a11, a12, a13, a14, v17 + 0x32839D6169A2E0DDLL);
}

uint64_t sub_1005935E0@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, unsigned int a8@<W7>, int a9@<W8>)
{
  BOOL v14 = a4 < a3;
  *(unsigned char *)(a6 + a9 + a1 + ((v10 - 698) | a8)) = *(unsigned char *)(v13 + (v9 + a2))
                                                - (a7 & (2 * *(unsigned char *)(v13 + (v9 + a2))))
                                                + 82;
  unsigned int v15 = v11 + v9 + 83;
  int v16 = v14 ^ (v15 < a3);
  BOOL v17 = v15 < a4;
  if (!v16) {
    BOOL v14 = v17;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v14 * a5) ^ v10)))();
}

uint64_t sub_1005936E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v12) = v14;
  return (*(uint64_t (**)(void))(v13 + 8 * ((((v11 & 0xFFFFFFFFFFFFFFF8) == 8) * ((v10 + 692) ^ 0x3AE)) ^ v10)))();
}

uint64_t sub_100593724(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  unsigned int v29 = (a27 ^ a5) - ((2 * (a27 ^ a5)) & 0x915EAC6C) + 1219450422;
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * ((v28 - 704) ^ (13
                                              * (((v29 << a23) & 0x7F7E7BDE ^ 0x115E284C)
                                               + (v29 ^ 0x77106BD9)
                                               - 184751239 != a4)))))();
}

uint64_t sub_1005937C8()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((168 * ((v2 + v1 + 134366220) > 7)) ^ 0x16Du)))();
}

void sub_100593820()
{
}

uint64_t sub_100593A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int *a31,int a32,uint64_t a33,uint64_t a34,_DWORD *a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  if (v46 <= 0x6571443B) {
    int v50 = *a31 + 1;
  }
  else {
    int v50 = 1202683098;
  }
  *a31 = v50;
  int v51 = (((v47 >> 11) ^ 0x7C43) + v48 - ((2 * ((v47 >> 11) ^ 0x7C43)) & 0x436C4)) ^ v47;
  unsigned int v52 = (((v51 << 7) & 0x9D2C5680 ^ v51) << 15) & 0xEFC60000 ^ (v51 << 7) & 0x9D2C5680 ^ v51;
  int v53 = &a46 + (a32 - 1482178029);
  unsigned int v54 = -1626398737 * ((*(_DWORD *)(*v49 + (*a35 & 0x14555964)) ^ v53) & 0x7FFFFFFF);
  unint64_t v55 = -1626398737 * (HIWORD(v54) ^ v54);
  char v56 = byte_1007A63DC[(v55 >> 24) - 12] ^ v52 ^ 0xD8 ^ (v52 >> 18) ^ 0xD8 ^ byte_1007A2C10[v55 >> 24] ^ byte_1007A8BC4[v55 >> 24] ^ v55 ^ (-71 * BYTE3(v55));
  *int v53 = v56;
  return (*(uint64_t (**)(void))(a3 + 8 * ((1894 * (a32 - (v56 != 0) == 1482178028)) ^ 0x3AC)))();
}

uint64_t sub_100593BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a6 + (v10 + v6 + 1)) = *(unsigned char *)(v11
                                                           + (((v7 - 475) ^ 0xFFFFFFC0) & (v9 + 2280146448)));
  return (*(uint64_t (**)(void))(v12 + 8 * (v7 ^ (1433 * ((v8 - 2014820847) < 4)))))();
}

uint64_t sub_100593C50@<X0>(int a1@<W0>, char a2@<W1>, int a3@<W2>, int a4@<W5>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  *(unsigned char *)(v6 + a6) = *(unsigned char *)(a5 + (v8 + a1))
                      - (a2 & (2 * *(unsigned char *)(a5 + (v8 + a1))))
                      + 82;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a6 != 63) * a3) ^ (a4 + v7 + 1075))))();
}

uint64_t sub_100593C98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(a4 + v7) = *(unsigned char *)(v11 + (v6 + v10))
                      - (a6 & (2 * *(unsigned char *)(v11 + (v6 + v10))))
                      + 82;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 == 63) * ((v9 ^ (2 * v8)) + 3)) ^ v8)))();
}

uint64_t sub_100593CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,int a23)
{
  int v30 = &a23 + 6 * v24;
  v30[2] = v25;
  v30[3] = v29;
  *((void *)v30 + 2) = a18;
  v30[6] = a20;
  a23 = v23 + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 8 * ((534 * (*(_DWORD *)(v26 + 48 * v28 + 32) + ((a9 + 800849154) & 0xDFD7BFC0 ^ 0x61DCA5A4) < 0x80000004)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13);
}

uint64_t sub_100593D64@<X0>(uint64_t a1@<X3>, uint64_t a2@<X6>, uint64_t a3@<X7>, int a4@<W8>)
{
  int v7 = a4 + 1;
  *(unsigned char *)(a1 + (v7 + v5)) = *(unsigned char *)(a3 + a2 - 2136364435);
  return (*(uint64_t (**)(void))(v6 + 8 * ((714 * ((v7 - 172602596) < 0x40)) ^ v4)))();
}

uint64_t sub_100593D6C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((341
                                * ((*(_DWORD *)(v2 - 0xD547898781B11ACLL) & 1) == ((((v0 - 851) | 0x510) - 1069) ^ 0x324))) ^ (v0 - 858))))();
}

uint64_t sub_100593DC0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((143 * (v5 == a5 + ((a3 + v7 + 507) ^ 0x20B) - 280)) ^ (a3 + v7 + 569))))();
}

void sub_100593E04()
{
}

uint64_t sub_100593E10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16)
{
  unsigned int v24 = 1734042137 * (((&a13 | 0xF54C8DC3) - (&a13 & 0xF54C8DC3)) ^ 0xA9824E8E);
  LODWORD(a14) = v23 - v24 + 834;
  a15 = (v20 - ((v20 << (((v23 - 71) & 0xFD) + 92)) & 0x758E1AD0) - 1161360024) ^ v24;
  a13 = a10;
  (*(void (**)(uint64_t *))(v22 + 8 * (v23 ^ 0xABE)))(&a13);
  unsigned int v25 = 628203409 * ((-1875716877 - (&a13 | 0x9032D4F3) + (&a13 | 0x6FCD2B0C)) ^ 0xED45273F);
  a14 = v18;
  a15 = (v19 ^ 0xBDAE35ED) + ((2 * v19) & 0x7B5C6BDA) + 2136600540 + v25;
  a16 = a10;
  LODWORD(a13) = v23 + 293 - v25;
  (*(void (**)(uint64_t *))(v22 + 8 * (v23 + 1402)))(&a13);
  unsigned int v26 = 628203409 * ((((2 * &a13) | 0x362FCC5E) - &a13 + 1692932561) ^ 0x199FEA1C);
  a14 = v16;
  LODWORD(a13) = v23 + 293 - v26;
  a15 = (v17 ^ 0xBD5D35C9) + ((2 * v17) & 0x7ABA6B92) + 2141908992 + v26;
  a16 = a10;
  uint64_t v27 = (*(uint64_t (**)(uint64_t *))(v22 + 8 * (v23 + 1402)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((2006 * (HIDWORD(a13) == v21)) ^ v23)))(v27);
}

uint64_t sub_100594000@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10)
{
  uint64_t v13 = *(void *)(v11 + 32);
  *(_DWORD *)(v10 - 0x6C39C41327E11828) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * (((v13 == 0x330904BA72E93EC0) * (a9 ^ 0x1BF)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10);
}

uint64_t sub_1005940D4()
{
  return 4294925278;
}

uint64_t sub_1005940DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unsigned int v11 = v8 + 4622354;
  if (v11 <= 0x40) {
    unsigned int v11 = 64;
  }
  uint64_t v12 = (a3 - v7 - v9);
  uint64_t v13 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10
                                                                                               + 8
                                                                                               * ((225
                                                                                                 * (v12 + v11 + 1613 > 0xE)) ^ 0x660u));
  return v13(v12, v13, a3, 3514796083, a5, a6, a7);
}

uint64_t sub_100594150(uint64_t result)
{
  *(_DWORD *)(result + 8) = -1964555931;
  return result;
}

uint64_t sub_100594164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int32x4_t a45,int32x4_t a46,int32x4_t a47,int32x4_t a48)
{
  LODWORD(v110) = HIDWORD(a13) + 2052952697;
  __n128 v57 = (__n128)vdupq_n_s32(0xFCE7E61C);
  v58.n128_u64[0] = 0x5252525252525252;
  v58.n128_u64[1] = 0x5252525252525252;
  __n128 v59 = (__n128)vdupq_n_s32(0xFE73F30E);
  uint64_t v114 = v54 - 16;
  uint64_t v60 = (v49 - 2);
  v61.n128_u64[0] = 0xA4A4A4A4A4A4A4A4;
  v61.n128_u64[1] = 0xA4A4A4A4A4A4A4A4;
  uint64_t v62 = (v52 + 1379340489) & 0xC21B0AF7;
  HIDWORD(v113) = v62 ^ 0x291;
  uint64_t v63 = *(uint64_t (**)(__n128, __n128, __n128, __n128))(v51 + 8 * v48);
  uint64_t v64 = HIDWORD(a33);
  LODWORD(v113) = HIDWORD(a33);
  uint64_t v65 = a34;
  unsigned int v66 = HIDWORD(a34);
  unsigned int v67 = a35;
  uint64_t v68 = a35;
  int v69 = BYTE4(a36) ^ 0xB9;
  HIDWORD(a16) = BYTE4(a36) ^ 0xFFFFFFB9;
  if (v69 == 2)
  {
    HIDWORD(v110) = a34;
    uint64_t v112 = *(void *)(v51 + 8 * v48);
    int8x16x4_t v116 = vld4q_s8((const char *)&a24 + 4);
    uint64_t v93 = HIDWORD(a35);
    uint8x16_t v94 = (uint8x16_t)veorq_s8(v116.val[0], (int8x16_t)v58);
    uint16x8_t v95 = vmovl_u8(*(uint8x8_t *)v94.i8);
    uint16x8_t v96 = vmovl_high_u8(v94);
    uint8x16_t v97 = (uint8x16_t)veorq_s8(v116.val[1], (int8x16_t)v58);
    _Q21 = vmovl_u8(*(uint8x8_t *)v97.i8);
    _Q20 = vmovl_high_u8(v97);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint8x16_t v102 = (uint8x16_t)veorq_s8(v116.val[2], (int8x16_t)v58);
    uint16x8_t v103 = vmovl_high_u8(v102);
    uint16x8_t v104 = vmovl_u8(*(uint8x8_t *)v102.i8);
    v116.val[0] = veorq_s8(v116.val[3], (int8x16_t)v58);
    v116.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v116.val[0]);
    v116.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v116.val[1]);
    v116.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v116.val[0].i8);
    v116.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v116.val[0]);
    v116.val[0] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v104.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v95.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v116.val[0].i8));
    v116.val[3] = vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v104, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v95), 0x18uLL)), v116.val[3]);
    v116.val[1] = vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v103.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v96.i8), 0x18uLL)), (int8x16_t)vmovl_u16(*(uint16x4_t *)v116.val[1].i8));
    v116.val[2] = vorrq_s8(vorrq_s8(vorrq_s8(_Q22, (int8x16_t)vshll_high_n_u16(v103, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v96), 0x18uLL)), v116.val[2]);
    a47 = vaddq_s32(vsubq_s32((int32x4_t)v116.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v116.val[1], (int32x4_t)v116.val[1]), (int8x16_t)v57)), (int32x4_t)v59);
    a48 = vaddq_s32(vsubq_s32((int32x4_t)v116.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v116.val[2], (int32x4_t)v116.val[2]), (int8x16_t)v57)), (int32x4_t)v59);
    a45 = vaddq_s32(vsubq_s32((int32x4_t)v116.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v116.val[0], (int32x4_t)v116.val[0]), (int8x16_t)v57)), (int32x4_t)v59);
    a46 = vaddq_s32(vsubq_s32((int32x4_t)v116.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v116.val[3], (int32x4_t)v116.val[3]), (int8x16_t)v57)), (int32x4_t)v59);
    int v105 = (_DWORD *)&a45 + v53 + 2132302127;
    int v106 = *(v105 - 8) ^ *(v105 - 3);
    unsigned int v107 = v106 + v55 - ((2 * v106) & 0xFCE7E61C);
    int v108 = *(v105 - 16) ^ *(v105 - 14);
    HIDWORD(v109) = v108 ^ 0x7E73F30E ^ v107;
    LODWORD(v109) = v108 ^ ~v107;
    *int v105 = (v109 >> 31) + v55 - ((2 * (v109 >> 31)) & 0xFCE7E61C);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * ((242 * (v54 != 2132302064)) ^ (v56 + v52 - 523))))(4243056156, v62, v60, v64, v93, a6, v68, v65, a9, a10, a11, a12, a13, a14, a15, a16, v110, __PAIR64__(v67, v66), v112,
             v113,
             v114,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44);
  }
  else if (v69 == 1)
  {
    HIDWORD(v110) = a34;
    uint64_t v111 = *(void *)(v51 + 8 * v48);
    int8x16x4_t v115 = vld4q_s8((const char *)&a24 + 4);
    uint8x16_t v70 = (uint8x16_t)veorq_s8(v115.val[0], (int8x16_t)v58);
    uint16x8_t v71 = vmovl_high_u8(v70);
    int8x16_t v72 = (int8x16_t)vmovl_high_u16(v71);
    uint16x8_t v73 = vmovl_u8(*(uint8x8_t *)v70.i8);
    int8x16_t v74 = (int8x16_t)vmovl_high_u16(v73);
    uint8x16_t v75 = (uint8x16_t)veorq_s8(v115.val[1], (int8x16_t)v58);
    uint16x8_t v76 = vmovl_u8(*(uint8x8_t *)v75.i8);
    uint16x8_t v77 = vmovl_high_u8(v75);
    int8x16_t v78 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v76.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v73.i8));
    int8x16_t v79 = vorrq_s8((int8x16_t)vshll_high_n_u16(v76, 8uLL), v74);
    int8x16_t v80 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v77.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v71.i8));
    int8x16_t v81 = vorrq_s8((int8x16_t)vshll_high_n_u16(v77, 8uLL), v72);
    uint8x16_t v82 = (uint8x16_t)veorq_s8(v115.val[2], (int8x16_t)v58);
    _Q21 = (int8x16_t)vmovl_high_u8(v82);
    _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v82.i8);
    int8x16_t v85 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
    __asm { SHLL2           V20.4S, V20.8H, #0x10 }
    int8x16_t v90 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v115.val[0] = veorq_s8(v115.val[3], (int8x16_t)v58);
    v115.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v115.val[0].i8);
    v115.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v115.val[0]);
    v115.val[2] = vorrq_s8(vorrq_s8(v78, v85), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v115.val[1].i8), 0x18uLL));
    v115.val[1] = vorrq_s8(vorrq_s8(v79, _Q20), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v115.val[1]), 0x18uLL));
    v115.val[3] = vorrq_s8(vorrq_s8(v80, v90), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v115.val[0].i8), 0x18uLL));
    v115.val[0] = vorrq_s8(vorrq_s8(v81, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v115.val[0]), 0x18uLL));
    a47 = vaddq_s32(vsubq_s32((int32x4_t)v115.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v115.val[3], (int32x4_t)v115.val[3]), (int8x16_t)v57)), (int32x4_t)v59);
    a48 = vaddq_s32(vsubq_s32((int32x4_t)v115.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v115.val[0], (int32x4_t)v115.val[0]), (int8x16_t)v57)), (int32x4_t)v59);
    a45 = vaddq_s32(vsubq_s32((int32x4_t)v115.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v115.val[2], (int32x4_t)v115.val[2]), (int8x16_t)v57)), (int32x4_t)v59);
    a46 = vaddq_s32(vsubq_s32((int32x4_t)v115.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v115.val[1], (int32x4_t)v115.val[1]), (int8x16_t)v57)), (int32x4_t)v59);
    uint64_t v91 = v53 + v114 + (v62 ^ 0x41C) - 1695;
    return (*(uint64_t (**)(void, uint64_t, uint64_t, void, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (int)v62))(-(*((unsigned char *)*(&off_1009960C0 + (int)v62 - 567) + v91 - 8) - 102), v62, v60, *((unsigned int *)*(&off_1009960C0 + SHIDWORD(v113)) + v91), 2953250560, 340925374, a35, a34, a9, a10, a11, a12, a13, a14, a15, a16, v110, __PAIR64__(a35, HIDWORD(a34)), v111,
             v113,
             v54 - 16,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44);
  }
  else
  {
    HIDWORD(a33) = 2 * (HIDWORD(a33) ^ v49) + v49 - (v50 & (4 * (HIDWORD(a33) ^ v49)));
    LODWORD(a34) = 2 * (a34 ^ v49) + v49 - (v50 & (4 * (a34 ^ v49)));
    HIDWORD(a34) = 2 * (HIDWORD(a34) ^ v49) + v49 - (v50 & (4 * (HIDWORD(a34) ^ v49)));
    LODWORD(a35) = 2 * (a35 ^ v49) + v49 - (v50 & (4 * (a35 ^ v49)));
    return v63(v57, v58, v59, v61);
  }
}

uint64_t sub_1005941D8@<X0>(int a1@<W0>, unsigned int a2@<W5>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  a4.i32[0] = *(_DWORD *)(a3 + a2 + 1);
  *(_DWORD *)(a3 - 3 + (v6 + v4)) = vmovn_s16((int16x8_t)vmovl_u8(a4)).u32[0];
  return (*(uint64_t (**)(void))(v7 + 8 * ((545 * (((a1 - 750) ^ 0x230) == v5)) ^ a1)))();
}

uint64_t sub_10059422C(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16)
{
  uint64_t v30 = v25 - 16 + (v20 ^ (v19 + 1815));
  uint64_t v31 = ((_BYTE)v25 - 16 + (v20 ^ (v19 + 23))) & 0xF;
  uint64_t v32 = v21;
  v33.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v27).u64[0];
  v33.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v27).u64[0];
  int8x16_t v34 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a16 + v30), *(int8x16_t *)(v17 + (v30 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v18 + (v30 & 0xF) - 15), *(int8x16_t *)(v16 + (v30 & 0xF) - 15))));
  int8x16_t v35 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v34, v34, 8uLL), v29), vmulq_s8(v33, v28)));
  *(int8x16_t *)(v22 + v30) = vextq_s8(v35, v35, 8uLL);
  return (*(uint64_t (**)(void))(v26 + 8 * (((v23 == 16) * v24) ^ a15)))();
}

uint64_t sub_10059423C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((503 * (a7 < 0x83)) ^ (v7 - 285))))();
}

uint64_t sub_100594260()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((8 * (v0 == ((v1 - 474) ^ 0x3ED))) | (16 * (v0 == ((v1 - 474) ^ 0x3ED)))) ^ v1)))(82);
}

uint64_t sub_1005942A4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((102 * (((a2 == 0) ^ (v3 - 35)) & 1)) ^ (v3 - 782))))();
}

uint64_t sub_1005942D4(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v3 & (2 * v6)) + (v6 ^ v2) != v2) * ((v4 ^ 0x16) + 199 * (v4 ^ 0x1AF) - 1017)) ^ v4)))();
}

uint64_t sub_10059432C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((28 * ((v0 ^ 0x32u) >= ((v1 - 939524714) ^ 0xC7FFFC20) - 885)) ^ v1)))();
}

uint64_t sub_10059437C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(void *)(v0 + 8) == 0x571561323F812312)
                                * (((((v2 ^ 0xCE) - 1386285114) & 0x52A1077F) + 1353) ^ (71 * (v2 ^ 0x13D)))) | v2 ^ 0xCE)))();
}

uint64_t sub_1005943EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32,uint64_t a33,unsigned int a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned int a38,uint64_t a39)
{
  int v209 = 2 * (v39 ^ 0x172);
  unint64_t v44 = ((v42 ^ 0x77EF46A2F6CB59B1) + v43 - ((2 * (v42 ^ 0x77EF46A2F6CB59B1)) & 0xB37127BDD71E7BDALL)) ^ a8;
  uint64_t v45 = __ROR8__((v209 + 1330595798) & 0xB0B0B7E7 ^ __ROR8__(v41 ^ a33, 12) ^ 0xA9F5355D327AAAEBLL, 52);
  uint64_t v46 = v45 ^ 0x322397601515A6F7;
  uint64_t v47 = ((v45 ^ 0x322397601515A6F7)
       + 0x3EED347CF0B3CBC8
       - ((2 * (v45 ^ 0x322397601515A6F7)) & 0x7DDA68F9E1679790)) ^ a5;
  uint64_t v48 = v40 ^ v42 ^ 0x77EF46A2F6CB59B1;
  unint64_t v49 = (v45 ^ 0x322397601515A6F7) & (v44 ^ 0x97FBFBAE09CFCCD0);
  v44 ^= 0x68040451F630332FuLL;
  unint64_t v50 = (v47 ^ 0xE4C1C31231B4037DLL) & (v45 ^ 0xCDDC689FEAEA5908) ^ v44;
  unint64_t v51 = v49 - ((2 * v49) & 0x2825CE912D31B950);
  unint64_t v52 = v47 ^ 0xE4C1C31231B4037DLL ^ (v48 ^ 0x90C8D204E42F3EE0) & (v40 ^ 0x6F372DFB1BD0C11FLL);
  *((void *)&v53 + 1) = v40 ^ 0x3EE0;
  *(void *)&long long v53 = v40 ^ 0x90C8D204E42F0000;
  unint64_t v54 = ((v51 - 0x6BED18B769672358) ^ v48 ^ 0x4DA354C72B7E248) & 0x90DEF08A367683D6 | ((v51 + 0x1412E7489698DCA8) ^ v48 ^ 0x4DA354C72B7E248) & 0x6F210F75C9897C29;
  unint64_t v55 = (v47 ^ 0x1B3E3CEDCE4BFC82) & (v40 ^ 0x90C8D204E42F3EE0) ^ v46 ^ v50;
  uint64_t v56 = v44 & (v48 ^ 0x6F372DFB1BD0C11FLL);
  unint64_t v57 = __ROR8__(__ROR8__(v54, 38) ^ __ROR8__(v50, 38) ^ 0xB8AB4977971512F1, 26);
  LOBYTE(v44) = *(unsigned char *)(a35 + ((((v55 >> 61) ^ 4) + 241) ^ 0x78));
  char v58 = 4 * (v44 ^ 0xDD) - ((8 * (v44 ^ 0xDD)) & 0x40) - 96;
  char v59 = (v44 ^ 0xDD) - ((2 * v44) & 0x40) - 96;
  char v60 = v44 ^ 0xE5;
  char v61 = v60 + (v59 ^ v58 ^ 0xC7) + 1;
  char v62 = (v58 ^ 0x5F) - 77;
  char v63 = v62 - (v61 & 0x40) - ((2 * ((v58 ^ 0x5F) + 1)) & 0x60);
  unint64_t v64 = v56 ^ __ROR8__((v53 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v52;
  char v65 = (v61 & 0x40) + v62 - ((2 * (v58 ^ 0x5F) + 2) & 0x60);
  if ((v61 & 0x40 & ((v58 ^ 0x5F) + 1)) != 0) {
    char v65 = v63;
  }
  char v66 = v65 ^ ((v61 & 0xBF) - ((2 * v61) & 0x64) - 78);
  unsigned __int8 v67 = ((v66 - ((2 * v66) & 0x40) - 96) ^ v58) + v60;
  *((void *)&v68 + 1) = ~v52;
  *(void *)&long long v68 = v52 ^ 0x92CFC162FD513142;
  unint64_t v69 = __ROR8__(v52, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v68 + 1) = v52 ^ 0xFF74FD4F01890C92 ^ ((v68 >> 1)
                                                      - ((2 * (v68 >> 1)) & 0xDB76785BF9B07BA2)
                                                      + 0x6DBB3C2DFCD83DD1);
  *(void *)&long long v68 = *((void *)&v68 + 1) ^ (v52 << 58) ^ 0xC00000000000000;
  uint64_t v70 = v68 >> 51;
  uint64_t v71 = v55 ^ (v55 >> 39) ^ (8 * v55) ^ (((v67 >> 1) | (v67 << 7)) | (v55 << 25));
  uint64_t v72 = v71 ^ 0x6E9F21B5376DC14ELL;
  uint64_t v73 = v70 + (v69 ^ 0x8F8AC7F1FBA51795);
  unint64_t v74 = (v54 << 23) ^ 0xFBA827E079000000;
  unint64_t v75 = (((v57 << 45) ^ (v57 << 36)) & 0xFFFFFFF000000000 | (v57 >> 28)) ^ (v57 >> 19) ^ 0xD0A2B87327B31AB3;
  unint64_t v76 = v75 - ((2 * v75) & 0x815D56592970908CLL) + 0x40AEAB2C94B84846;
  unint64_t v77 = v54 ^ (v54 >> 41) ^ (v54 >> 7) ^ 0x4C7A0AF2879FE7D1 ^ (((v54 << 57) ^ 0xE400000000000000)
                                                               - ((2 * ((v54 << 57) ^ 0xE400000000000000)) & 0xF7FFFFFFFFFFFFFFLL)
                                                               - 0x5D2A0B5C6D4DBCFLL);
  uint64_t v78 = (v77 & 0x10000000000000 ^ 0x1FB6F7BFBDF3EDABLL) + 2 * (v77 & 0x10000000000000);
  uint64_t v79 = v78 - 0x11A00410A010800ALL;
  unint64_t v80 = v77 & 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v81 = v78 - 0x1FB6F7BFBDF3EDABLL;
  uint64_t v82 = __ROR8__(v73 - 2 * (v70 & (v69 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v83 = v64 ^ (v64 >> 10) ^ (v64 << 47) ^ ((v64 >> 17) | (v64 << 54));
  uint64_t v84 = 0x2DCDEB6EDBD75B4CLL - v78;
  if ((v81 & v74) == 0) {
    uint64_t v84 = v79;
  }
  uint64_t v85 = (v74 - 0xE16F3AF1DE36DA1 + v84) ^ v80;
  uint64_t v86 = (v85 - ((2 * v85) & 0x250A69495E33273ELL) - 0x6D7ACB5B50E66C61) ^ v83;
  uint64_t v87 = __ROR8__(__ROR8__(v86 ^ 0xA5ED069A1C73FC26, 23) ^ 0x6C4FE5A873E441B7, 41);
  unint64_t v88 = (v82 + 0x48C60BB4943615A3 - ((2 * v82) & 0x918C1769286C2B46)) ^ v72;
  unint64_t v89 = v76 ^ v57 ^ v85;
  unint64_t v90 = v87 & (v83 ^ 0x1CAE3FE19723B7B4) ^ v88;
  unint64_t v91 = (v89 ^ 0x8AD2A8B58DAA4455 | ~v87)
      + ((v87 - 0x688D9301E2AC29C0 - ((2 * v87) & 0x2EE4D9FC3AA7AC80)) ^ v89 ^ 0x1DA0C44B90F99215)
      + 1;
  unint64_t v92 = (((v88 ^ 0xBEE74353B47A99EDLL) & (v71 ^ 0xD9A6D5FE5CA42B12))
       - 0x688D9301E2AC29C0
       - ((2 * ((v88 ^ 0xBEE74353B47A99EDLL) & (v71 ^ 0xD9A6D5FE5CA42B12))) & 0x2EE4D9FC3AA7AC80)) ^ v89 ^ 0x1DA0C44B90F99215;
  unint64_t v93 = v86 ^ (v89 ^ 0x752D574A7255BBAALL) & (v71 ^ 0x26592A01A35BD4EDLL);
  unint64_t v94 = ((v92 ^ (v88 ^ 0x4118BCAC4B856612) & (v83 ^ 0xE351C01E68DC484BLL))
       + 0x48C60BB4943615A3
       - ((2 * (v92 ^ (v88 ^ 0x4118BCAC4B856612) & (v83 ^ 0xE351C01E68DC484BLL))) & 0x918C1769286C2B46)) ^ v72;
  *((void *)&v96 + 1) = v93 ^ v92 ^ 0x6E0BE37;
  *(void *)&long long v96 = v93 ^ v92 ^ 0xDDA8FB4EC0000000;
  uint64_t v95 = v96 >> 28;
  unint64_t v97 = v91 ^ __ROR8__(((v90 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v83 ^ 0xE1DE6585B59498FDLL, 27) ^ (((v90 ^ 0xBEE74353B47A99EDLL) << 37)- (((v90 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v96 = __ROR8__(v93 ^ v92, 19);
  uint64_t v98 = (v95 ^ v96 ^ 0x17C6FBB51F69D8DCLL)
      - ((2 * (v95 ^ v96 ^ 0x17C6FBB51F69D8DCLL)) & 0x433F8C784CAD6EB6)
      - 0x5E6039C3D9A948A5;
  *((void *)&v96 + 1) = v94 ^ 0x1747C156E755AED6;
  *(void *)&long long v96 = v94 ^ 0x4000000000000000;
  uint64_t v99 = v94 ^ __ROR8__(v94, 39) ^ (v96 >> 61);
  unint64_t v100 = v99 ^ 0xB6C47AE4620293DBLL;
  uint64_t v101 = v99 & 0x7C09B5691D153F3ALL;
  uint64_t v102 = ((v93 >> 7) ^ (v93 >> 41) | (v93 << 57)) ^ (v93 << 23) ^ 0x2F4FB47CC797D39;
  unint64_t v103 = v102 - ((2 * v102) & 0xDB6F64177F2DD52ALL) + 0x6DB7B20BBF96EA95;
  unint64_t v104 = v93 ^ 0x865B7A49F9D34404 ^ v103;
  unint64_t v105 = v98 ^ v92 ^ v103;
  unint64_t v106 = v97 ^ (v97 << 47) ^ (v97 >> 10) ^ (v97 >> 17) ^ (v97 << 54);
  unint64_t v107 = (v104 & (unint64_t)&_mh_execute_header ^ 0xDF64E7FFFD8F7BF7)
       + 2 * (v104 & (unint64_t)&_mh_execute_header);
  unint64_t v108 = v107 + 0x75DB1F63B67DF47ALL;
  unint64_t v109 = v104 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v110 = ((v90 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v90 >> 1) ^ (((v90 ^ 0xD1A234CC1D2559D7) << 58) | v90 ^ 0xD1A234CC1D2559D7) ^ ((((v90 ^ 0xD1A234CC1D2559D7) << 58) & (v90 ^ 0xD000000000000000) ^ ((v90 ^ 0xD1A234CC1D2559D7) << 63)) + 0x4C4D10EF29F9B28FLL - ((2 * (((v90 ^ 0xD1A234CC1D2559D7) << 58) & (v90 ^ 0xD000000000000000))) & 0x9FFFFFFFFFFFFFFFLL)) ^ v99 ^ 0xB6C47AE4620293DBLL;
  uint64_t v111 = v110 ^ 0x68D11A660E92ACEBLL;
  unint64_t v112 = v107 + 0x209B180002708409;
  unint64_t v113 = 0x34A4EF63B19CEC68 - v107;
  if (((v106 ^ 0xBEE8B63400000000) & v112) == 0) {
    unint64_t v113 = v108;
  }
  *((void *)&v114 + 1) = v105 ^ 0x119654D68;
  *(void *)&long long v114 = v105 ^ 0xFA6C473A00000000;
  unint64_t v115 = ((v106 ^ 0xBEE8B6349A795903) - 0x55400763B40D7071 + v113) ^ v109;
  unint64_t v116 = (v105 ^ 0xFA6C473B19654D68) & ~v115;
  char v117 = v115 & 1;
  unint64_t v118 = (v105 ^ 0x593B8C4E69AB297) & (v99 ^ 0xFA896A0B4BFB2154);
  *(void *)&long long v114 = __ROR8__((v114 >> 33) ^ __ROR8__((v110 ^ 0x68D11A660E92ACEBLL) & (v99 ^ 0x57695F4B404DEABLL), 33) ^ 0xCF4F457632C10184, 31);
  uint64_t v119 = v115 & (v106 ^ 0x411749CB6586A6FCLL);
  unint64_t v120 = v115 ^ (v118 - ((2 * v118) & 0xCA89FDC96C5B3AACLL) + 0x6544FEE4B62D9D56);
  unint64_t v121 = v110 ^ 0x972EE599F16D5314;
  uint64_t v122 = v119 ^ v111;
  unint64_t v123 = v119 ^ v111 ^ v106 ^ (v116 - ((2 * v116) & 0x69A1F7408AB91842) + 0x34D0FBA0455C8C21);
  unint64_t v124 = v114 ^ v100 ^ (((v106 ^ 0xBEE8B6349A795903) & v121)
                      + 0x4C4D10EF29F9B28FLL
                      - ((2 * ((v106 ^ 0xBEE8B6349A795903) & v121)) & 0x989A21DE53F3651ELL));
  unint64_t v125 = (v122 ^ 0x7955EAEC4D48B80CuLL) >> v117 >> (v117 ^ 1u);
  unint64_t v126 = v124 ^ 0xEEA5144D359EA15ELL ^ (((v124 >> 61) ^ (v124 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v124 >> 61) ^ (v124 >> 39) ^ 0xAFF5F4)) & 0x287F21C)
                                      - 0x46A01083AABC06F2);
  uint64_t v127 = (((v124 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v124 << 25) ^ 0x62C1BAB0A0000000) ^ (v126
                                                                                                  - (v126 ^ (v124 << 25) ^ 0x62C1BAB0A0000000)))
        + v126) ^ (8 * v124);
  unint64_t v128 = (v123 >> 10) ^ (v123 << 47) ^ (v123 >> 17);
  unint64_t v129 = ((v120 >> 41) | (v120 << 57)) ^ (v120 >> 7) ^ (((v120 << 23) ^ 0xFE7319DB21000000)
                                                      - ((2 * ((v120 << 23) ^ 0xFE7319DB21000000)) & 0xF5F982372A000000)
                                                      - 0x5033EE46AEA9120);
  uint64_t v130 = ((v128 ^ (v123 << 54) ^ 0x6FAF2E9C0FDD82CDLL)
        - 2 * ((v128 ^ (v123 << 54) ^ 0x6FAF2E9C0FDD82CDLL) & 0x6D9BB39F0958F93BLL ^ v128 & 2)
        - 0x12644C60F6A706C7) ^ v123;
  uint64_t v131 = v130 ^ 0x71485263864DE72DLL;
  unint64_t v132 = ((v120 ^ (unint64_t)v114) << 36) ^ ((v120 ^ (unint64_t)v114) << 45) ^ ((v120 ^ (unint64_t)v114) >> 19) ^ ((v120 ^ (unint64_t)v114) >> 28) ^ 0xC3BF16DEABB54CE0;
  unint64_t v133 = v129 ^ v120 ^ v130;
  unint64_t v134 = v129 ^ v114 ^ (v132 - ((2 * v132) & 0xF8759FFFCB99031ELL) + 0x7C3ACFFFE5CC818FLL);
  *(void *)&long long v114 = __ROR8__(v122, 6);
  unint64_t v135 = ((((v122 << 63) | 0x31E557ABB13522E0) ^ v114 ^ v125)
        - ((2 * (((v122 << 63) | 0x31E557ABB13522E0) ^ v114 ^ v125)) & 0xDEC41458E59DD180)
        - 0x109DF5D38D311740) ^ v122;
  unint64_t v136 = v135 ^ 0x9637E0C03F8650CCLL;
  unint64_t v137 = ((v135 ^ 0x9637E0C03F8650CCLL)
        - 0x60D8D953029A40A6
        - 2 * ((v135 ^ 0x9637E0C03F8650CCLL) & 0x1F2726ACFD65BF5BLL ^ v135 & 1)) ^ v127 ^ 0x20F0FF27FB8F7DDALL;
  uint64_t v138 = (v127 ^ 0x40282674F9153D7FLL) & v136;
  uint64_t v139 = ((v131 & ~v137) - 0x60D8D953029A40A6 - ((2 * (v131 & ~v137)) & 0x3E4E4D59FACB7EB4)) ^ v127 ^ 0x20F0FF27FB8F7DDALL;
  unint64_t v140 = (v127 ^ 0xBFD7D98B06EAC280) & (v134 ^ 0xD0AFDF38ADE0B9D4);
  unint64_t v141 = (v133 ^ 0x4CE081EF0C86B139) & (v130 ^ 0x8EB7AD9C79B218D2) ^ v137;
  unint64_t v142 = (v138 - ((v138 - 0x6FCAC7A73FD78559 - ((2 * v138) & 0x206A70B18050F54ELL)) ^ v134 ^ 0xBF65189F92373C8CLL)) ^ ((v134 ^ 0xD0AFDF38ADE0B9D4) + 1);
  unint64_t v143 = ((v142 - 0x6FCAC7A73FD78559 - ((2 * v142) & 0x206A70B18050F54ELL)) ^ v134 ^ 0xBF65189F92373C8CLL) + v138;
  unint64_t v144 = v139 ^ v143;
  uint64_t v145 = (((2 * v133) ^ 0x663EFC21E6F29D8DLL) + (v133 ^ 0x4CE081EF0C86B139)) & (v134 ^ 0x2F5020C7521F462BLL);
  unint64_t v146 = (v140 - ((2 * v140) & 0xA6AFE6FC95FF7600) + 0x5357F37E4AFFBB00) ^ v133;
  unint64_t v147 = v143 ^ v146;
  unint64_t v148 = v141 ^ v131 ^ v145;
  *((void *)&v114 + 1) = v144 ^ 0x1877DA25;
  *(void *)&long long v114 = v144 ^ 0x425764BB40000000;
  uint64_t v149 = v114 >> 30;
  *((void *)&v114 + 1) = v143 ^ v146 ^ 0x1FFB3;
  *(void *)&long long v114 = v143 ^ v146 ^ 0x8841D574B0900000;
  uint64_t v150 = (v144 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v151 = v141 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v141 & 0x2011531CB0A0EE4 | (v141 << 58));
  uint64_t v152 = (v146 >> 41) ^ 0x37B86D;
  uint64_t v153 = (v114 >> 19) ^ ((v143 ^ v146 ^ 0x1FB7729146790A39) << 36) ^ ((v143 ^ v146 ^ 0x1FB7729146790A39) >> 28);
  unint64_t v154 = v147 ^ 0xB34C31300C3A1FACLL ^ ((v153 ^ 0x6E8F58A97F6A7E5FLL)
                                      + 0x3B0DE444BCABE01FLL
                                      - 2 * ((v153 ^ 0x6E8F58A97F6A7E5FLL) & 0x3B0DE444BCABE03FLL ^ v153 & 0x20));
  unint64_t v155 = (-2
        - ((~(((v141 >> 1) ^ 0xE872405C45169363) & 0xB223DAEC74C6908DLL) | 0x18A909397BCCFC24)
         + (((v141 >> 1) ^ 0xE872405C45169363) & 0x1021082870C49004 | 0xE756F6C6843303DBLL))) ^ ((v141 >> 1) ^ 0xE872405C45169363) & 0xB223D2EC74C6908DLL;
  unint64_t v156 = v155 ^ 0x896511A32F230C29;
  uint64_t v157 = __ROR8__(v149 ^ (v144 >> 61 << 34) ^ 0x84F57132E3442245, 34);
  *((void *)&v114 + 1) = v146 ^ 0x44444444;
  *(void *)&long long v114 = v146 ^ 0x6F70DA42B51D3780;
  uint64_t v158 = v146 ^ 0x2D72050128AF8CD0 ^ ((v114 >> 7) - ((2 * (v114 >> 7)) & 0x8405BE873B657628) + 0x4202DF439DB2BB14);
  uint64_t v159 = (v157 ^ (v144 >> 39) ^ 0x84AEC9) + v150;
  uint64_t v160 = v157 & v150;
  uint64_t v161 = v158 & v152;
  uint64_t v162 = v158 + v152;
  unint64_t v163 = v151 ^ (v141 << 63);
  uint64_t v164 = v159 - 2 * v160;
  unint64_t v165 = v155 ^ 0x896511A32F230C29 ^ (v163 - ((2 * v151) & 0x23982134A9DFE01ALL) - 0x6E33EF65AB100FF3);
  if (v101 != 0x7809200909112110) {
    unint64_t v156 = v165 ^ 0x6E33EF65AB100FF2;
  }
  uint64_t v166 = v164 ^ (8 * v144);
  BOOL v167 = ((v155 ^ 0x18A901397BCCFC24) & v163) == 0;
  unint64_t v168 = ((v163 + (v155 ^ 0xE756FEC6843303DBLL) + 1) ^ 0xA3ECFFD37AEF8FFELL)
       + 0x7FDFDFBEFF3AF170
       + ((2 * (v163 + (v155 ^ 0xE756FEC6843303DBLL) + 1)) & 0x47D9FFA6F5DF1FFCLL);
  uint64_t v169 = v165 + 2 * ((v156 ^ 0x11CC109A54EFF00DLL) & v151) + 0x23CCDF927A2A816ELL;
  uint64_t v170 = v162 - 2 * v161;
  if (v167) {
    unint64_t v168 = v169;
  }
  unint64_t v171 = v170 ^ (v146 << 23);
  unint64_t v172 = v148 ^ (v148 >> 10) ^ (v148 >> 17) ^ (v148 << 47) ^ (v148 << 54);
  *((void *)&v173 + 1) = v168 + 0x1C33206D85D57E92;
  *(void *)&long long v173 = v168 - 0x23CCDF927A2A816ELL;
  unint64_t v174 = v171 ^ v172;
  unint64_t v175 = v166 ^ 0xAA6A2D4BA2838D66;
  uint64_t v176 = __ROR8__(__ROR8__(v171, 57) ^ __ROR8__(v154, 57) ^ 0xD3BE39B867C8671BLL, 7);
  unint64_t v177 = v166 ^ 0xAA6A2D4BA2838D66 ^ (v141 >> 6) ^ __ROR8__(__ROR8__(v141, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v173 >> 61), 3);
  unint64_t v178 = (v171 ^ 0x215A8E9BE2000000) & (v172 ^ 0xAEA93A9FECEAF928);
  uint64_t v179 = (v177 ^ 0x3CBE485844A65555) & (v172 ^ 0x5156C560131506D7);
  v177 ^= 0xC341B7A7BB59AAAALL;
  uint64_t v180 = v177 & (v166 ^ 0x5595D2B45D7C7299);
  unint64_t v181 = v177 ^ v178;
  *((void *)&v173 + 1) = v176 ^ 0x16FDF2E892CF90CELL;
  *(void *)&long long v173 = v176;
  uint64_t v182 = v180 ^ v176 ^ 0x16FDF2E892CF90CELL;
  unint64_t v183 = (v176 ^ 0x16FDF2E892CF90CELL) & (v174 ^ 0x8FF3B4040EEAF928);
  unint64_t v184 = (__ROR8__((v173 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v175 ^ v174;
  unint64_t v185 = v184 ^ v182;
  unint64_t v186 = v184 ^ v182 ^ 0x700C4BFBF11506D7;
  unint64_t v187 = v179 ^ v175 ^ v182;
  unint64_t v188 = ((v183 ^ v181) - ((2 * (v183 ^ v181)) & 0x19FCF32253087184) + 0xCFE7991298438C2) ^ v172;
  *((void *)&v173 + 1) = v185 ^ 0x3D2C8;
  *(void *)&long long v173 = v185 ^ 0x793068B8EA600000;
  uint64_t v189 = v187 ^ (v187 >> 39) ^ (8 * v187) ^ (v187 << 25) ^ (v187 >> 61);
  uint64_t v190 = (v173 >> 19) ^ (v186 << 36) ^ (v186 >> 28);
  unint64_t v191 = v181 ^ 0x6DC4FB0BD4FFFF44;
  unint64_t v192 = __ROR8__(__ROR8__(v181 ^ 0x616B258C5FF13C26, 27) ^ 0x61D86C4195FBD0F1, 37);
  unint64_t v193 = ((v190 ^ 0xB76D41F000000000)
        - 2 * ((v190 ^ 0xB76D41F000000000) & 0x6B08FC9BF91ACBFLL ^ v190 & 0x20)
        - 0x794F7036406E5361) ^ v185;
  *((void *)&v173 + 1) = v184 ^ 0x15476E34586;
  *(void *)&long long v173 = v184 ^ 0x6129680000000000 ^ (((v184 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v184 << 57) ^ 0xC00000000000000)) & 0x7800000000000000)
                                                  + 0x3C909666FCA4338FLL);
  uint64_t v194 = ((v189 ^ 0xABCF8FE7C463E5DLL)
        + (v191 ^ (v191 >> 1) ^ (v192 << 58))
        - 2 * ((v189 ^ 0xABCF8FE7C463E5DLL) & (v191 ^ (v191 >> 1) ^ (v192 << 58)))) ^ ((v192 >> 6) | (v192 << 63));
  uint64_t v195 = __ROR8__(__ROR8__(v184, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0x2464DEAF68E2B1EELL ^ (v173 >> 42), 22);
  unint64_t v196 = v188 ^ (v188 >> 10) ^ (((v188 << 54) ^ (v188 << 47)) & 0xFFFF800000000000 | (v188 >> 17));
  BOOL v167 = v73 == 0;
  unint64_t v197 = v195 ^ 0xDD74CA3F78583B7ELL;
  if (v167) {
    unint64_t v197 = 0x228B35C087A7C481;
  }
  unint64_t v198 = v195 & 0xDD74CA3F78583B7ELL ^ __ROR8__(v184, 41) ^ v197 & v195 ^ 0x2047BAC9F8B9A7D6;
  unint64_t v199 = v198 - 0x1F70120995EEA345 - ((2 * v198) & 0xC11FDBECD422B976);
  unint64_t v200 = (v196 ^ 0x9ADC7C99DB53B33FLL) & ~v194;
  unint64_t v201 = v193 ^ v198;
  unint64_t v202 = v194 & (v189 ^ 0xF543070183B9C1A2);
  unint64_t v203 = v198 & (v196 ^ 0x6523836624AC4CC0) ^ v194;
  unint64_t v204 = v201 ^ 0xFF80E771C6304A66 ^ v202;
  unint64_t v205 = v199 ^ v196 ^ 0x7A53916FB142EF84 ^ (v201 ^ 0x7F188E39CFB599) & (v189 ^ 0xABCF8FE7C463E5DLL);
  BOOL v207 = a38 + 2079051450 < a32;
  if (a34 > 0x47AA3531 != a38 + 2079051450 < 0xB855CACE) {
    BOOL v207 = a34 > 0x47AA3531;
  }
  unint64_t v206 = ((v204 ^ v200) - ((2 * (v204 ^ v200)) & 0x6495A98EFE9CC11ALL) - 0x4DB52B3880B19F73) ^ v189;
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, void, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a39 + 8 * (v209 ^ (116 * !v207))))(a1, a2, (v205 ^ 0x6D91ABCD17C43B5CLL ^ (((v205 << 57) ^ 0xAE00000000000000)- ((2 * ((v205 << 57) ^ 0xAE00000000000000)) & 0x5555555555555555)+ 0x2AA59AF708EF130BLL)) & ((v205 >> 41) ^ 0x239A18), a39, v203 ^ (v203 << 58) ^ ((v203 >> 1) ^ (v203 >> 6) | ((unint64_t)~v203 << 63)), a38, a7, v206 ^ (8 * v206) ^ (v206 << 25) ^ (v206 >> 39) ^ (v206 >> 61), a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_100595CA0(uint64_t a1, uint64_t a2)
{
  int v8 = *(unsigned __int8 *)(v2 + v4 + v5 + 289 * (v7 ^ 0x49Au));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 8 * (v7 ^ (53 * (v6 == 1593226237)))))(a1, a2, (((v7 ^ 0x49A) + 630) ^ 0x55CDFD84 ^ v8) - 293677400 + ((2 * v8) & 0xFFFFFFFB));
}

uint64_t sub_100595D2C@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X3>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int8x16_t *a23)
{
  *(int8x16_t *)(a3 + (a4 + a2)) = vaddq_s8(vsubq_s8(*a23, vandq_s8(vaddq_s8(*a23, *a23), v26)), v25);
  return (*(uint64_t (**)(void))(v24 + 8 * ((126 * ((((a1 ^ 0x7Eu) + 0x1FFFFFB35) & (v23 + 1)) != 16)) ^ a1 ^ 0x7E)))();
}

uint64_t sub_100595DA0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((607 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x17Eu)))();
}

void sub_100595DCC()
{
  *(_DWORD *)(v0 + 4) = 25995479;
}

uint64_t sub_100595DD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W7>, uint64_t a4@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8 * (((a4 == a3) * (v4 ^ 0x244)) ^ v4)))(a1, a2, a4);
}

uint64_t sub_100595E00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(v27 - 104) = (v26 + 834) ^ (((((v27 - 128) | 0x79214CDB) - ((v27 - 128) & 0x79214CDB)) ^ 0x14D554D2) * v22);
  *(void *)(v27 - 112) = a22;
  *(void *)(v27 - 128) = v24;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v26 ^ 0x8EF)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (int)(((*(_DWORD *)(v27 - 120) <= (v25 + 1))
                                                   * ((((v26 - 13) | 0x11) ^ 0xFFFFFF1C) + ((v26 - 143) | 0x90))) ^ v26)))(v28);
}

uint64_t sub_100595EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((v8 + ((a8 + 1791) ^ (a5 + 556)) > 0xFFFFFFEF) * ((a8 ^ 0x20) - 242)) ^ a8)))();
}

uint64_t sub_100595EE4@<X0>(int a1@<W4>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  uint64_t v5 = a2 - 211724107;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  BOOL v7 = v6 - v4 + a1 + v2 - 399 + (v2 ^ 0xFFFFFFFF49A5DD88) < 8;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((2 * v7) | (32 * v7)) ^ v2)))();
}

uint64_t sub_100595F50()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((2 * v1) & 0xBF7FF4E6 ^ 0x815BE024)
                                      + (v1 ^ 0x9F520EED)
                                      + ((v0 + 422129315) & 0xE6D6CFFC ^ 0x364)
                                      + 1853479584 != 1312414243)
                                     * (((((v0 + 422129315) & 0xE6D6CFFC) - 1332) | 0x4A2) - 1276)) ^ (v0 + 422129315) & 0xE6D6CFFC)))();
}

uint64_t sub_100595FDC()
{
  return sub_1005A0294(-1002888588);
}

uint64_t sub_100596178()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((v1 == 83886080) ^ (3 * (v2 ^ 0x25))) & 1) * ((v2 + 1279) ^ 0x6F7)) ^ v2)))();
}

uint64_t sub_1005961B8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0x7FFF3C8E)
                       - 51712004
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0x11C);
  return 0;
}

void sub_1005961F0()
{
  _DWORD *v0 = 1544221845;
}

uint64_t sub_1005961FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1495 * (v6 + 1 == v8 + 24)) ^ a6)))();
}

uint64_t sub_1005962CC(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((13 * (((((a1 + 421) ^ 0x4AD) - 142) & v1) != 0)) ^ a1)))();
}

uint64_t sub_100596300@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10)
{
  int v12 = a1 - 42;
  char v13 = a1 - 118;
  int v14 = (*(_DWORD *)(*(void *)(a6 + 8) - 0x3DC5316605FC20AALL) - 573605017) * (*a10 ^ 0x12A1951D);
  int v15 = 1755732067 * ((((v11 - 128) | 0xC1312103) + (~(v11 - 128) | 0x3ECEDEFC)) ^ 0x1FF79CD9);
  *(_DWORD *)(v11 - 104) = (v14 ^ 0x7CF6783F) - v15 + ((v14 << (v13 & 0xFB ^ 0xFA)) & 0xF9ECF07E) - 141692948;
  *(_DWORD *)(v11 - 120) = v12 - v15 - 107;
  *(_DWORD *)(v11 - 116) = v15 ^ 0x58E1D042;
  *(void *)(v11 - 128) = a8;
  *(void *)(v11 - 112) = a7;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v10 + 8 * (v12 ^ 0x922)))(v11 - 128);
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((62 * (a5 - 1024593422 > -1024593421)) ^ v12)))(v16);
}

uint64_t sub_100596474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v24 = (235 * (v19 ^ (v22 + 6))) ^ 0x53F;
  int v25 = v20 + v19 + 1839;
  BOOL v26 = a19 - 725112075 < (v23 - 1242600265);
  if ((a19 - 725112075) < 0xFA3C435C != v23 - 1242600265 < (v24 - 96714081)) {
    BOOL v26 = v23 - 1242600265 < (v24 - 96714081);
  }
  return (*(uint64_t (**)(void))(v21 + 8 * ((4066 * v26) ^ v25)))();
}

uint64_t sub_100596484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1919 * (a8 + 1 == v9 + 64)) ^ a5)))();
}

void sub_100596554(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x330904BA72E93EB8) = (v3 + 1756585399) ^ (v2 + 2048063208);
  *(_DWORD *)(v1 - 0x330904BA72E93EBCLL) = a1 + 1;
}

uint64_t sub_1005965AC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((7 * (*(void *)(v1 + 32) != 0xCBDE157C0FFD3D0)) ^ v0)))();
}

uint64_t sub_1005965E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  BOOL v9 = a8 + ((a7 - 156) ^ (a3 + 918)) < ((a7 - 387) ^ 0xFFFFFC8F);
  return (*(uint64_t (**)(void))(v8 + 8 * (((4 * v9) | (16 * v9)) ^ a7)))();
}

uint64_t sub_100596620(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, int a16)
{
  unsigned int v26 = a16 - 16;
  unint64_t v27 = v26 & ((a13 + 339) ^ v20);
  unint64_t v28 = v27;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v23).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v23).u64[0];
  int8x16_t v31 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a14 + v26), *(int8x16_t *)(v17 + v27 - 15)), veorq_s8(*(int8x16_t *)(v16 + v27 - 15), *(int8x16_t *)(v18 + v27 - 15))));
  int8x16_t v32 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v31, v31, 8uLL), v25), vmulq_s8(v30, v24)));
  *(int8x16_t *)(a14 + v26) = vextq_s8(v32, v32, 8uLL);
  return (*(uint64_t (**)(void))(v22 + 8 * (((v19 == 16) * v21) ^ a13)))();
}

uint64_t sub_10059662C@<X0>(uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,arg29_10059662C a29)
{
  *(_OWORD *)(a1 + (a2 + v32)) = *(_OWORD *)&a29.arr[4];
  return (*(uint64_t (**)(void))(v33 + 8 * (((((v30 + v31 - 1536) & 0x1FFFFFFF0) == 16) * (v29 ^ 0x30A)) ^ v29)))();
}

uint64_t sub_10059667C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * ((451
                                                                                           * (((16 * v6) ^ 0xBBB3477E ^ (89 * (v6 ^ 0x6F4)))
                                                                                            + v5 > 0xFFFFFFBE)) ^ v6)))(a1, a2, a3, a4, a5, v7);
}

uint64_t sub_1005966D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((_WORD)a6 + 32125) & 0x7D7A ^ 0x16D) * (v7 < 0x20)) ^ a6)))();
}

uint64_t sub_100596720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  int v11 = ((*(unsigned __int8 *)(a4 + a7 + v9) ^ 0x52) << ((a6 + 76) ^ 0x27)) | ((*(unsigned __int8 *)(a4 + a7 + v9 + 1) ^ 0x52) << 16) | ((*(unsigned __int8 *)(a4 + a7 + v9 + 2) ^ 0x52) << 8) | *(unsigned __int8 *)(a4 + a7 + v9 + 3) ^ 0x52;
  *(_DWORD *)(v10 + ((a7 + v9) & 0xFFFFFFFFFFFFFFFCLL)) = v11 + v8 - ((2 * v11) & 0xFCE7E61C);
  return (*(uint64_t (**)(void))(v7 + 8 * ((1310 * ((unint64_t)(a7 + 4 + v9) < 0x40)) ^ a6)))();
}

uint64_t sub_1005967B0()
{
  *(void *)(v0 - 0x571561323F812312) = (*v2 - 534536586) + *(void *)(v3 - 0xD547898781B11C0) + 8;
  return (*(uint64_t (**)(void))(v6 + 8 * ((718 * (*v5 == v4)) ^ v1)))();
}

uint64_t sub_100596814(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * ((((*(_DWORD *)(v2 + 48 * v6 + 36)
                                                                                + 1850677284) < 0x80000004)
                                                                * ((v3 - v4) ^ (v7 + 582))) ^ v3)))(a1, a2, 25995472);
}

uint64_t sub_10059686C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v11
                                                                               + 8
                                                                               * ((a8 + 152) ^ (4
                                                                                              * (v10 >= ((v9 + v8 + a8 + 152 + 895 + 1168) | 2u) - 1138)))))(a1, a2, a3, a4, 0);
}

uint64_t sub_1005968A4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 < 0x20) ^ (((v1 - 90) & 0xFC) + 23)) & 1)
                                * ((((v1 - 395393626) & 0x179133FC) + 1673) ^ 0x6AB)) ^ (v1 - 395393626) & 0x179133FCu)))();
}

uint64_t sub_1005968F4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,char a21)
{
  int v25 = a1 ^ 0x778;
  int v26 = 535753261 * ((((v24 - 144) | 0x58E14AB9) - ((v24 - 144) & 0x58E14AB9)) ^ 0x52154496);
  *(_DWORD *)(v24 - 144) = v26 + v25 - 4;
  *(_DWORD *)(v24 - 128) = v26 ^ 0x18FA4B14;
  *(void *)(v24 - 136) = &a21 + v21;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v25 ^ 0xE4A)))(v24 - 144);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((113 * (v23 != 0)) ^ (v25 - 170))))(v27);
}

uint64_t sub_1005969C0(uint64_t result)
{
  uint64_t v3 = *(void *)(v1 + 16);
  *(void *)(*(void *)v1 - 0x17594DE9181849F3) = result;
  *(_DWORD *)(v3 - 0x3AC75C5FABFFD319) = v2;
  *(_DWORD *)(v1 + 48) = -25955570;
  return result;
}

uint64_t sub_100596A38()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 != 47 * (v0 ^ 0x48F) + 1237835946) * (((8 * v0) ^ 0x2490) - 421)) ^ v0)))();
}

uint64_t sub_100596A78(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a4 + (v5 ^ v8) + v6) = a1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((unint64_t)(v8 + v6 + 17) < 0x38) * v7) ^ v4)))();
}

uint64_t sub_100596AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067 * ((490657451 - (&a11 | 0x1D3ED6AB) + (&a11 | 0xE2C12954)) ^ 0x3C07948F);
  a14 = &STACK[0x41D57A3C79D937FB];
  a15 = v19 ^ 0x7DED5626;
  a13 = (v18 + 519) ^ v19;
  a11 = &STACK[0x2AFF1EFB499E23D0];
  a12 = v17;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v18 + 1211)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v17 - 0xD547898781B11A8) == v15)
                                              * ((((v18 - 577635520) & 0x226E05DF) + 248) ^ 0x270)) ^ v18)))(v20);
}

uint64_t sub_100596BB0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((812 * (v3 + 1 == v5 + 80)) ^ a3)))();
}

uint64_t sub_100596C78()
{
  unsigned int v5 = (((v4 - v3) >> 4) & 0xEEFE15E ^ 0xAE9005C)
     + (((v4 - v3) >> 5) ^ 0xF28B7791)
     - 229157452;
  int v6 = (v1 > 0x1630B99C) ^ (v5 < v2 - 372293117);
  BOOL v7 = v5 < ((v2 - 152) ^ 0xE9CF45AB) + v1;
  if (v6) {
    BOOL v8 = v1 > 0x1630B99C;
  }
  else {
    BOOL v8 = v7;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((1491 * v8) ^ (v2 - 152))))();
}

uint64_t sub_100596D1C@<X0>(uint64_t a1@<X1>, int a2@<W7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (int)(((((a3 ^ ((unint64_t)(a9 + v10 - a1) < 0x10)) & 1) == 0)
                                     * (a2 + ((v9 + 47725784) | 0xC0208B00) - 1247)) ^ v9)))();
}

uint64_t sub_100596D74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, unsigned int a15, uint64_t a16, unint64_t *a17, int a18)
{
  unsigned int v21 = 3804331 * ((2 * (&a13 & 0x19519B58) - &a13 - 424778592) ^ 0x1C3097F6);
  a18 = (v20 + 2138962952) ^ v21;
  a16 = a11;
  a17 = &STACK[0x660356CACBBB3C60];
  a14 = -2024780285 - v21;
  a15 = v21 ^ 0xA3DA8510;
  uint64_t v22 = (*(uint64_t (**)(int *))(v19 + 8 * (v20 ^ 0x9FC)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8 * (((a13 == v18 + v20 - 205 - 203) * ((v20 + 875) ^ 0x627)) ^ v20)))(v22);
}

uint64_t sub_100596E50()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((30 * (((7 * (v0 ^ 0xFu) - 1666 + 660) ^ (7 * (v0 ^ 0xF)) ^ 0x452u) == 0)) ^ (7 * (v0 ^ 0xF)))))();
}

uint64_t sub_100596EA8()
{
  int v3 = v1 - ((2 * v1 + 99595374) & 0x1372A00E) + 1286679102;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (v2 ^ (70
                                     * (((v3 << (((v2 + 34) | 0x1D) ^ 0xDC)) & ((v2 + 629) ^ 0xAEEFEB65) ^ 0x262A006)
                                      + (v3 ^ 0x5ECEA7BC)
                                      + 782171645 == 102167992)))))();
}

uint64_t sub_100596F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * ((38
                                                                                 * ((v5 & 8) == ((v6 - 1591575055) & 0x5EDD87D7)
                                                                                              - 2004)) ^ v6)))(a1, a2, a3, a4, (v4 - a4));
}

uint64_t sub_100596F98@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v4)) = *(unsigned char *)(v3 + (a2 + v4));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1359 * (a2 - 1 == (v7 ^ (v5 + 1303) ^ a3))) ^ (v6 + v7 + 179))))();
}

uint64_t sub_100596FE4(int a1, int8x16_t a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  *char v13 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v16 + (v14 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(v16 + (v14 + a1)), *(int8x16_t *)(v16 + (v14 + a1))), a5)), a2);
  return (*(uint64_t (**)(void))(v15 + 8 * (a12 + v12 - 937)))();
}

uint64_t sub_100597038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v19 - 120) = v13;
  *(void *)(v19 - 112) = v15;
  *(void *)(v19 - 144) = v14;
  *(void *)(v19 - 136) = v13;
  *(_DWORD *)(v19 - 128) = v17 + 1225351577 * ((v19 - 144) ^ 0x239AD816) - 394;
  (*(void (**)(uint64_t))(v18 + 8 * (v17 ^ 0xA27)))(v19 - 144);
  int v20 = 1755732067 * ((((v19 - 144) | 0xCE78F267) - ((v19 - 144) & 0xCE78F267)) ^ 0x10BE4FBC);
  *(_DWORD *)(v19 - 124) = v12 - v20 + v17 + 742 + v16;
  *(void *)(v19 - 136) = a12;
  *(_DWORD *)(v19 - 144) = (v17 + 1104) ^ v20;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v17 + 1556)))(v19 - 144);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((206 * (*(_DWORD *)(v19 - 128) != -314637277)) ^ v17)))(v21);
}

uint64_t sub_10059711C@<X0>(unsigned int a1@<W0>, char a2@<W2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v9 = a4 + 1;
  *(unsigned char *)(a3 + v9 + v6) = a2;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 + v6 + (unint64_t)((v4 + v7) & a1) - 62 < 0x38) * v5) ^ v4)))();
}

uint64_t sub_100597124(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 + 1 != v7 + 24) * v6) ^ a4)))();
}

void sub_1005971D0()
{
}

uint64_t sub_10059729C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v12 = a3 + v10 + v11 + a2 - 1150157733 - 2009069781;
  unsigned int v13 = v8 - 1018805457;
  int v14 = (v13 < (((a8 ^ 0x11A) + 752) ^ 0xC6A20DFu)) ^ (v12 < 0xC6A268C);
  BOOL v15 = v12 > v13;
  if (v14) {
    BOOL v15 = v12 < 0xC6A268C;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((101 * !v15) ^ ((a8 ^ 0x11A) + 727))))();
}

uint64_t sub_100597334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v26 - 211724107) = 0x5252525252525252;
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * (int)((((((v27 - 4) ^ 0xFFFFFFFFFFFFFCB7) & v25) != 8)
                                     * (((v27 + 1536565420) & 0xA469DDAD) - 401)) ^ (v27 - 4))))();
}

uint64_t sub_1005973A8()
{
  return sub_1005973C0();
}

uint64_t sub_1005973C0@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W6>, void *a4@<X7>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  unint64_t v26 = (((v21 + 1226) + v24) ^ HIDWORD(v19))
      + a5 * (unint64_t)(*(_DWORD *)(*a4 + 4 * v22) ^ v13);
  int v27 = *(_DWORD *)(a13 + 4 * (v17 + v22));
  BOOL v28 = v14 > v23;
  *(_DWORD *)(a13 + 4 * (v17 + v22)) = (v26 + (v27 ^ v13) + a1 - (v25 & (2 * (v26 + (v27 ^ v13))))) ^ v15;
  int v29 = a2 + v22 + 772;
  LODWORD(v26) = v28 ^ (v29 < v16);
  BOOL v30 = v29 < a3;
  if (!v26) {
    BOOL v28 = v30;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((!v28 * v18) ^ v21)))();
}

uint64_t sub_100597450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  BOOL v30 = HIDWORD(a11) < 0xAA45DADB;
  if (v30 == v27 - 1719391141 < ((v28 - 975) ^ 0xAA45DAE9)) {
    BOOL v30 = (v27 - 1719391141) < HIDWORD(a11);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((73 * !v30) ^ v28)))(2575576155, 2187897807, HIDWORD(a11), a4, 73, a6, a27, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

uint64_t sub_1005974CC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((37
                                * ((((*(unsigned __int8 *)(v3 + 5) - 13) << (v2 + 54)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_100597508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  *(&a33 + v34 + a2) = 82;
  return (*(uint64_t (**)(void))(v35 + 8 * ((105 * ((unint64_t)(v34 + 1 + a2) < 0x40)) ^ (a6 + v33 + 395))))();
}

uint64_t sub_100597550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v12 = v9 + v8 + v10;
  long long v13 = *(_OWORD *)(a2 + v12 - 31);
  uint64_t v14 = v6 + v12;
  *(_OWORD *)(v14 - 15) = *(_OWORD *)(a2 + v12 - 15);
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v11 + 8 * ((2028 * (a6 - (v7 & 0xFFFFFFE0) != 1989)) ^ (a6 - 1029))))(0);
}

uint64_t sub_1005975B4(int a1)
{
  return sub_1005A0294(a1);
}

void sub_1005975C4()
{
}

uint64_t sub_1005976A4()
{
  *int v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1005976C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((a7 - 672528266) & 0x2815F13F ^ 0xFFFFFE72) + ((a7 + 46407554) & 0xFD3BD9F9))
                                     * (v8 == a3)) ^ a7)))();
}

uint64_t sub_100597720@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7)
{
  a6 = a1;
  a7 = a3;
  a4 = (v10 - 116) ^ (((&a4 + 1577800182 - 2 * ((unint64_t)&a4 & 0x5E0B51F6)) ^ 0x33FF49FF) * v8);
  uint64_t v11 = (*(uint64_t (**)(int *))(v9 + 8 * (v10 ^ 0x4B7)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (int)(((a5 == v7)
                                                   * (((v10 + 1208654008) & 0xB7F565BD) + ((v10 - 434) | 0x28) - 667)) ^ v10)))(v11);
}

uint64_t sub_1005977D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,__int16 a50,char a51,char a52,int a53)
{
  if (BYTE4(a31) == 2) {
    return (*(uint64_t (**)(uint64_t))(v53
  }
                                              + 8 * ((50 * (a53 == ((v54 + 496) | 0x129) + 394386080)) ^ (v54 + 1607))))(a14);
  if (BYTE4(a31) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v53
  }
                                                       + 8
                                                       * (((a53 != 394386889) * ((v54 + 793) ^ 0x32A)) ^ (v54 + 793))))(a1, a14);
  uint64_t v56 = (v54 + 1219);
  unint64_t v57 = ((2 * (void)&a34) & 0xBFABBF48DA5F3390)
      + ((unint64_t)&a34 ^ 0xDFD5DFA46D2F99CFLL)
      + (v56 ^ 0x666F7DFBD3F9E32FLL);
  a52 = ((v57 + (v54 ^ 0x25)) ^ 0xBA) * (v57 + 70);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8 * (int)v56))(*(void *)(v53 + 8 * (int)v56), a14, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_100597930@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  uint64_t v10 = ((251 * (v8 ^ 0x7D2)) ^ v7) + a1;
  *(unsigned char *)(a2 + v10) = *(unsigned char *)(v2 + v10) ^ *(unsigned char *)(v4 + (v10 & 0xF)) ^ *(unsigned char *)(v5 + (v10 & 0xF)) ^ *(unsigned char *)(v3 + (v10 & 0xF)) ^ (97 * (v10 & 0xF)) ^ 0x52;
  return (*(uint64_t (**)(void))(v9 + 8 * ((1807 * (a1 - 1 == v6)) ^ (v8 - 1745))))();
}

uint64_t sub_1005979A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((a3 ^ (a5 - 666) ^ (a5 + 323) ^ (a3 - 427216431) & 0x1976CA7B) * (v5 == v6)) ^ a3)))();
}

uint64_t sub_1005979F8@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 - 1434040913)) = *(unsigned char *)(v5 + (a1 - 1434040913));
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * ((230 * (((a2 ^ 0xE6 ^ (a1 - 1 == v4)) & 1) == 0)) ^ a2 ^ 0xE6)))(0);
}

uint64_t sub_100597A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v9 - 696) ^ 0x164) + v9 - 1236) * (v8 == a7)) ^ v9)))();
}

void sub_100597A74()
{
  *(_DWORD *)(v0 + 16) = 25995318;
}

uint64_t sub_100597A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v28 - 144) = a23;
  *(void *)(v28 - 136) = v27;
  *(_DWORD *)(v28 - 128) = v23
                         + 1225351577 * (((~(v28 - 144) & 0xE174019C) - (~(v28 - 144) | 0xE174019D)) ^ 0xC2EED98B)
                         - 94;
  *(void *)(v28 - 120) = v27;
  *(void *)(v28 - 112) = v24;
  (*(void (**)(uint64_t))(v26 + 8 * (v23 ^ 0x90B)))(v28 - 144);
  *(_DWORD *)(v28 - 144) = v23
                         + 1759421093
                         * ((1339743748 - ((v28 - 144) | 0x4FDADE04) + ((v28 - 144) | 0xB02521FB)) ^ 0x35891AF)
                         + 1723;
  *(void *)(v28 - 136) = v27;
  *(void *)(v28 - 128) = v27;
  *(void *)(v28 - 112) = a19;
  *(void *)(v28 - 104) = a23;
  *(void *)(v28 - 120) = v24;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v23 ^ 0x909)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (int)(((((v23 + 702) ^ 0xFFFFFC01) + v25 - 1988463604 > 0x7FFFFFFE)
                                                   * (((v23 + 941) ^ 0xFFFFFD1E) + ((v23 + 702) ^ 0x5DA))) ^ (v23 + 1058))))(v29);
}

uint64_t sub_100597BB0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * ((191 * (v1 ^ 0x1E3)) ^ 0x3E4)))(a1, 4017156191);
}

uint64_t sub_100597C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,int a40)
{
  if (a17 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40
  }
                                                                         + 8
                                                                         * ((250 * (a40 == 394386889)) ^ (v42 + (int)v41 - 6))))(a1, a2, 3954042562, a10);
  if (a17 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40
  }
                                                                + 8
                                                                * ((69
                                                                  * ((((v41 + v42) ^ (a40 == 394386889)) & 1) == 0)) ^ ((int)v41 + v42 + 273))))(a10, a2, 3954042562);
  uint64_t v44 = (-340922878 - v41);
  uint64_t v45 = ((unint64_t)&a23 ^ 0x524CAFDF7BFB7BE9)
      + ((2 * (void)&a23) & 0xA4995FBEF7F6F7D0)
      - 0x1240098071BA6918
      + v44;
  a39 = ((v45 - 17) ^ 0xBA) * v45;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40
                                                              + 8
                                                              * (int)((137
                                                                     * ((((-860198526 - v41) | 0xAA16402u) ^ v41) == 91)) | v44)))(a10, a2, 3954042562);
}

uint64_t sub_100597DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((1552 * ((v31 + v29 + v30 - 577 + 24) < 4)) ^ v30)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_100597E18(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v10 = *(_DWORD *)(a8 + 72) == ((a3 - 686) | 0x120) + 1145886028;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                         + 8
                                                                                         * ((8 * v10) | (32 * v10) | (a3 - 110))))(a1, a2, 2589512361, 3735398464, 803242036, v8);
}

uint64_t sub_100597E84@<X0>(uint64_t a1@<X8>)
{
  int v6 = 177 * (v1 ^ 0x233);
  int v7 = v3 - (**(unsigned __int8 **)(v5 + 8) == (v6 ^ 0x13));
  int v8 = v6 ^ (v2 + 493);
  *(_DWORD *)(*(void *)(v4 + 96) + 528) = 443271743;
  *(_DWORD *)(*(void *)(v4 + 96) + 532) = 1491193922;
  *(void *)(*(void *)(v4 + 96) + 536) = *(void *)(v4 + 96) + 544;
  uint64_t v9 = *(void *)(v4 + 96) + 0x330904BA72E940D0;
  uint64_t v10 = *(void *)(v5 + 8) + (*(_DWORD *)(v5 + 4) - v7);
  unsigned int v11 = 460628867 * ((-17340394 - (&v14 | 0xFEF76816) + (&v14 | 0x10897E9)) ^ 0x4D9E1594);
  unsigned int v17 = v11 + v7 - 250792927;
  int v15 = v11 + v6 + 6;
  uint64_t v14 = v10;
  uint64_t v16 = v9;
  (*(void (**)(uint64_t *))(a1 + 8 * (v6 + 1594)))(&v14);
  int v12 = v18;
  *(void *)(*(void *)(v4 + 96) + 512) = *(void *)(v5 + 8) + (*(_DWORD *)(v5 + 4) - v7);
  return (v8 - 475143444 + v12);
}

uint64_t sub_100597EB8()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * ((296 * (v1 > v3 + v2 - 1876120345)) ^ (v3 + v2 - 591))))(1613182087);
}

uint64_t sub_100597EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1178 * (v6 + 1 == v8 + 32)) ^ a6)))();
}

uint64_t sub_100597FCC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1455
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((51 * (v3 ^ 0x259)) ^ (v0 + 71) ^ (*(unsigned __int8 *)(v2 + 2) - 72)) == v0)) ^ v3)))();
}

uint64_t sub_10059801C@<X0>(int a1@<W8>)
{
  uint64_t v4 = v1;
  uint64_t v5 = v2 + v1;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8
                                   * ((((a1 - 628) ^ 0x39A) * ((unint64_t)(v6 - v4 + 1869904939) < 8)) ^ a1)))();
}

uint64_t sub_10059807C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8 * ((113 * (v9 >= ((a8 - 955) | 0x120u) - 1281)) ^ a8)))(a1, a2, 0);
}

void *sub_1005980C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  return sub_1005C6F34(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39);
}

uint64_t sub_1005980D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, unsigned int a14, unsigned int a15, uint64_t a16, int a17)
{
  if (a15 < a14 != a17 + 1711885095 < a13) {
    BOOL v19 = a17 + 1711885095 < a13;
  }
  else {
    BOOL v19 = a17 + 1711885095 > a15;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((250 * ((v18 ^ 0x11 ^ v19) & 1)) ^ (v18 + 1099))))();
}

uint64_t sub_1005980DC@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v8 + v6)) = *(unsigned char *)(v3 + (v8 + v6));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 & ~(v5 ^ (v8 - 1 == v2))) * v4) ^ v5)))(0);
}

uint64_t sub_100598118(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((((((v9 + a1) & a2) + 652) ^ a8) + v12 == ((((v9 + a1) & a2) + a6) & a7 ^ v8)) * v11) ^ (v9 + a1) & a2)))();
}

uint64_t sub_10059817C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (((*(_DWORD *)(a19 + 4 * (a1 + v21 + (v20 ^ 0x2A9u) + 681)) == v19) * (v20 - 1160)) ^ (v20 - 679))))();
}

uint64_t sub_1005981C4@<X0>(uint64_t a1@<X8>, int a2, uint64_t a3, int a4)
{
  int v8 = (((v6 - 815) ^ 0x2224FDEA) - v7) & 0x7F21CFA4;
  unsigned int v9 = 1224239923 * ((((2 * &a2) | 0x7B12072) - &a2 + 2082959303) ^ 0x716B6DEE);
  a4 = v9 - v5 - v8 - 794597756;
  a3 = a1;
  a2 = v6 - v9 + 163;
  uint64_t v10 = (*(uint64_t (**)(int *))(v4 + 8 * (v6 ^ 0xBD8)))(&a2);
  return sub_10059825C(v10);
}

uint64_t sub_100598284()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((((((v0 & 0xB8613EFF) + 550) | 0x404) + (((v0 & 0xB8613EFF) + 8) | 9) - 1549)
                                     * (**(_DWORD **)(v2 + 8 * (int)((v0 & 0xB8613EFF) - 181)) == 0)) ^ v0 & 0xB8613EFF)))();
}

uint64_t sub_1005982E4(int a1, int a2, int a3, uint64_t a4, void *a5, int a6, int a7, int a8)
{
  unsigned int v15 = *(_DWORD *)(*a5 + 4 * (v14 + v11)) ^ v9;
  *(_DWORD *)(*a5 + 4 * (v8 + v10 + 1)) = ((v15 >> v12) | a3 ^ a6 ^ a7 ^ a8)
                                          + v9
                                          - ((a1 + 2) & (2 * ((v15 >> v12) | a3 ^ a6 ^ a7 ^ a8)));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v14 - 1 + v11 >= 0) * a2) ^ a3)))();
}

uint64_t sub_1005982EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v23
                              + 8 * ((((a21 - 413196212) < 0x10) * (v21 + v22 + 1497)) ^ (v21 + v22))))();
}

uint64_t sub_100598398@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v38 = *(void *)(v35 + 24);
  *(int8x16_t *)(v37 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v35 + 40) - 0x72E2FEF5BF4EA162), (int8x16_t)xmmword_1007AA4E0);
  if (a9) {
    BOOL v39 = v38 == 0x239318B13B5CAFF7;
  }
  else {
    BOOL v39 = 1;
  }
  int v40 = v39;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * (int)((1010 * v40) ^ a8)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_10059840C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  int v35 = v32 ^ 0x563;
  int v36 = 6 * (v32 ^ 0x1E0);
  BOOL v37 = a32 - 1579810465 < (v34 - 2097298655);
  if (a32 - 1579810465 < ((2 * v35) ^ 0x8E6u) - 951413116 != (v34 - 2097298655) < 0xC74A99C6) {
    BOOL v37 = (v34 - 2097298655) < 0xC74A99C6;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * ((v37 * (v36 - 2018)) | v35)))();
}

uint64_t sub_100598424(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (int)(((~a18 + v19 - (unint64_t)(v20 + a1) >= (((v18 - 2147469304) | 0x28203540u) ^ 0xA8207541uLL))
                                     * ((v18 - 1145440912) & 0xEC6677D7 ^ (a5 + 33))) ^ v18)))();
}

uint64_t sub_10059849C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v46 = (v39 - 1671953882) | 0x380D0C2;
  *int v42 = v42[623];
  *(_DWORD *)(v45 - 144) = (v46 + 111494114) ^ v41;
  *(void *)(v45 - 136) = v41 | 3;
  *(_DWORD *)(v45 - 116) = v41 | 1;
  *(_DWORD *)(v45 - 112) = ((v46 - 1672584448) ^ 0x76) + v41;
  *(void *)(v45 - 104) = (v43 + 1) - v41;
  *(_DWORD *)(v45 - 124) = (v46 - 1672584448) ^ v41;
  *(_DWORD *)(v45 - 120) = ((v46 - 1672584448) ^ 0x1F) + v41;
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v46 ^ (v44 + 1975))))(v45 - 144);
  return (*(uint64_t (**)(uint64_t))(a39 + 8 * *(int *)(v45 - 128)))(v47);
}

uint64_t sub_100598550(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  *(void *)(v35 - 136) = v34;
  *(void *)(v35 - 128) = v33;
  *(_DWORD *)(v35 - 144) = (v32 ^ 0x63C) - 1178560073 * ((v35 - 144) ^ 0x32160040) + 391;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 ^ 0xD91)))(v35 - 144);
  *(_DWORD *)(v35 - 144) = (v32 ^ 0x63C)
                         + 1036
                         + 1759421093
                         * ((-1670690441 - ((v35 - 144) | 0x9C6B4977) + ((v35 - 144) | 0x6394B688)) ^ 0xD0E906DC);
  *(void *)(v35 - 136) = v34;
  *(void *)(v35 - 128) = a31;
  *(void *)(v35 - 120) = v33;
  *(void *)(v35 - 112) = v34;
  *(void *)(v35 - 104) = a22;
  (*(void (**)(uint64_t))(v31 + 8 * ((v32 ^ 0x63C) + 1112)))(v35 - 144);
  *(_DWORD *)(v35 - 144) = (v32 ^ 0x63C)
                         + 1036
                         + 1759421093
                         * ((((v35 - 144) | 0x9CFAAF67) - (v35 - 144) + ((v35 - 144) & 0x63055098)) ^ 0x2F871F33);
  *(void *)(v35 - 136) = v34;
  *(void *)(v35 - 128) = v34;
  *(void *)(v35 - 112) = a16;
  *(void *)(v35 - 104) = a22;
  *(void *)(v35 - 120) = v33;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 ^ 0xD84)))(v35 - 144);
  *(_DWORD *)(v35 - 136) = (v32 ^ 0x63C)
                         + 235795823 * ((2 * ((v35 - 144) & 0x409FA7C8) - (v35 - 144) - 1084205001) ^ 0x2BCD116E)
                         - 1882358472;
  *(void *)(v35 - 144) = v34;
  *(void *)(v35 - 128) = a21;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 ^ 0xDB5)))(v35 - 144);
  *(_DWORD *)(v35 - 144) = (v32 ^ 0x63C)
                         - 1178560073 * ((((v35 - 144) | 0xD53ABD4A) - ((v35 - 144) & 0xD53ABD4A)) ^ 0xE72CBD0A)
                         + 391;
  *(void *)(v35 - 136) = v34;
  *(void *)(v35 - 128) = a23;
  (*(void (**)(uint64_t))(v31 + 8 * ((v32 ^ 0x63C) + 1133)))(v35 - 144);
  *(_DWORD *)(v35 - 128) = (v32 ^ 0x63C)
                         - 1759421093
                         * ((439292421 - ((v35 - 144) | 0x1A2F1205) + ((v35 - 144) | 0xE5D0EDFA)) ^ 0x56AD5DAE)
                         - 737;
  *(void *)(v35 - 144) = a23;
  *(void *)(v35 - 136) = v34;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v31 + 8 * ((v32 ^ 0x63C) + 1131)))(v35 - 144);
  return (*(uint64_t (**)(uint64_t))(v31
                                            + 8
                                            * (int)((((((v32 ^ 0x63C) + 210914309) & 0xF36DB08B)
                                                    + (((v32 ^ 0x63C) - 879) ^ 0xFFFFFF14))
                                                   * (a20 == 0)) ^ ((v32 ^ 0x63C) - 75))))(v36);
}

uint64_t sub_1005987FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (v39 ^ 0xBF5u)))(16);
  int v42 = (uint64_t *)*(&off_1009960C0 + (v39 & 0x9C68C2D));
  *int v42 = v41;
  (*(void (**)(void))(a3 + 8 * (v39 + 1150)))();
  int v43 = (void *)(*(uint64_t (**)(uint64_t))(a3 + 8 * (v39 ^ 0xBF5u)))(8);
  uint64_t v44 = (uint64_t)*(&off_1009960C0 + (v39 ^ 0x34Du));
  *(void *)(v44 - 4) = v43;
  *int v43 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v45 = (uint64_t)*(&off_1009960C0 + v39 - 833);
  *(_DWORD *)(v45 + 4) = 0;
  *(_DWORD *)*(&off_1009960C0 + (v39 ^ 0x36Eu)) = 0;
  int v46 = (unsigned char *)*v42;
  uint64_t v47 = *(unsigned char **)(v44 - 4);
  v47[6] = 26;
  *int v46 = -77;
  v47[4] = -34;
  uint64_t v48 = *(&off_1009960C0 + v39 - 806);
  *(v48 - 2) = -32;
  v48[5] = -49;
  *(unsigned char *)(v45 + 29) = 68;
  v48[10] = 23;
  v46[4] = 73;
  *uint64_t v48 = -66;
  *(unsigned char *)(v45 + 28) = 83;
  *(unsigned char *)*(&off_1009960C0 + (v39 ^ 0x376u)) = -113;
  v46[1] = 80;
  *(unsigned char *)*(&off_1009960C0 + (v39 ^ 0x3E4u)) = 88;
  v48[9] = 0x80;
  *(unsigned char *)*(&off_1009960C0 + v39 - 952) = 1;
  void v46[2] = -44;
  *(unsigned char *)*(&off_1009960C0 + (v39 ^ 0x385u)) = 51;
  v47[2] = 80;
  v46[6] = -11;
  *(unsigned char *)*(&off_1009960C0 + v39 - 798) = 25;
  *(unsigned char *)*(&off_1009960C0 + v39 - 808) = 39;
  v46[5] = -22;
  v46[3] = -15;
  v48[4] = -55;
  *(unsigned char *)(v45 + 14) = -52;
  v48[11] = 106;
  *(unsigned char *)*(&off_1009960C0 + (v39 ^ 0x3F8u)) = -109;
  v46[13] = 99;
  *(unsigned char *)*(&off_1009960C0 + (v39 ^ 0x3D0u)) = 119;
  v47[7] = -80;
  *uint64_t v47 = -122;
  v46[8] = 34;
  v48[3] = 40;
  v46[11] = 54;
  *(unsigned char *)(v45 + 15) = 3;
  v47[5] = -5;
  v47[1] = 73;
  *(unsigned char *)(v45 + 16) = -36;
  *(unsigned char *)uint64_t v45 = 23;
  void v47[3] = 59;
  unint64_t v49 = (unsigned char *)*v42;
  v49[10] = 45;
  v49[15] = -87;
  *(v48 - 4) = -117;
  v48[7] = 35;
  *(unsigned char *)(v45 + 25) = -92;
  v48[1] = 118;
  v48[6] = -113;
  *(unsigned char *)(v45 + 27) = 52;
  *(v48 - 8) = 94;
  *(_WORD *)(v45 + 10) = -3774;
  *(unsigned char *)(v45 + 22) = -121;
  *(unsigned char *)(v45 + 20) = 77;
  *(unsigned char *)(v45 + 26) = 113;
  v49[9] = 31;
  v48[12] = -96;
  void v48[2] = 95;
  *(unsigned char *)(v45 + 8) = -85;
  *(v48 - 6) = -58;
  *(v48 - 3) = 118;
  *(unsigned char *)(v45 + 2) = 34;
  v48[8] = -94;
  v49[12] = -86;
  *(v48 - 5) = 93;
  v49[7] = -90;
  v49[14] = -33;
  *(unsigned char *)(v45 + 3) = -98;
  *(unsigned char *)(v45 + 21) = -105;
  *(v48 - 1) = -113;
  *(unsigned char *)(v45 + 24) = -119;
  *(unsigned char *)(v45 + 30) = 58;
  *(unsigned char *)(v45 + 12) = 73;
  *(unsigned char *)(v45 + 1) = -15;
  *(v48 - 7) = -25;
  *(unsigned char *)(v45 + 19) = 120;
  *(unsigned char *)(v45 + 13) = 69;
  *(_WORD *)(v45 + 17) = -4168;
  *(unsigned char *)(v45 + 9) = -105;
  *(unsigned char *)(v45 + 23) = 79;
  return (*(uint64_t (**)(uint64_t))(a39
                                            + 8
                                            * ((52
                                              * ((((v39 + 124) | 0x20B) ^ 0x3BB ^ ((((v39 + 124) | 0x20B) - 581) | 0x258) ^ 0x3A6) != 0)) | (v39 + 124) | 0x20B)))(955);
}

uint64_t sub_10059912C(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4)
{
  int8x16x4_t v13 = vld4q_s8(a4);
  uint8x16_t v5 = (uint8x16_t)veorq_s8(v13.val[2], v4);
  _Q17 = vmovl_high_u8(v5);
  _Q16 = vmovl_u8(*(uint8x8_t *)v5.i8);
  __asm
  {
    SHLL2           V16.4S, V16.8H, #0x10
    SHLL2           V17.4S, V17.8H, #0x10
  }
  return sub_1005A3C18(a1, a2, a3, (uint64_t)a4, (int)a3 - 86);
}

uint64_t sub_100599240(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(*v7 + 4 * a5) != ((a4 - 492) | 0x100) + v5) * (((a4 + 36) | 4) - 1128)) ^ a4)))();
}

uint64_t sub_10059927C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, unsigned int a13, int a14, unint64_t *a15, unint64_t *a16, unint64_t *a17, unsigned int a18)
{
  a18 = (v19 + 203) ^ (1225351577
                     * (((&a13 | 0x3D40A92E) - &a13 + (&a13 & 0xC2BF56D0)) ^ 0x1EDA7138));
  a15 = a12;
  a16 = v18;
  a17 = &STACK[0x749AC022234F284A];
  (*(void (**)(unsigned int *))(v22 + 8 * (v19 + 881)))(&a13);
  a13 = (v19 - 564) ^ (1374699841 * (&a13 ^ 0x6DF41809));
  a15 = &STACK[0x27EFF0CD9F36B46F];
  a16 = a12;
  (*(void (**)(unsigned int *))(v22 + 8 * (v19 ^ 0x2F7)))(&a13);
  a15 = a12;
  a13 = v19
      + (((&a13 | 0xE3F748ED) - &a13 + (&a13 & 0x1C08B710)) ^ 0x1969BBBB)
      * v20
      + 205;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v22 + 8 * (v19 + 849)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * (((a14 == v21) * ((6 * (v19 ^ 0x547)) ^ 0x1D6)) ^ v19)))(v23);
}

uint64_t sub_1005993E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((148 * (a1 + 1 == v7 + 48)) ^ a6)))();
}

uint64_t sub_1005994B0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(*(void *)(a8 + 96) + 1568) = 1;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(_DWORD *)(a8 + 72) == ((v8 + 620832951) | 0x40A6042E) + a4)
                                * ((v8 - 135299723) & 0x6DB7AF6F ^ (v10 - 1035))) ^ v8)))();
}

uint64_t sub_1005994B8@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X3>, char a4@<W5>, unint64_t a5@<X7>, int a6@<W8>)
{
  char v10 = *(unsigned char *)(v8 + ((v6 - 1030) ^ a5) + v7);
  *(unsigned char *)(a3 + (a6 + a1)) = v10 - (a4 & (2 * v10)) + 82;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((a2 + a6 + 47) > 0x3F) | (2 * ((a2 + a6 + 47) > 0x3F))) ^ v6)))();
}

uint64_t sub_10059950C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v1 - 96 + ((v1 - 1946218682) & 0x7400EFFF) + 784) * (v2 == a1)) ^ v1)))();
}

uint64_t sub_100599558(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(_DWORD *)(v27 - 112) = v25
                         - 1759421093
                         * ((-1730085761 - ((v27 - 128) | 0x98E0FC7F) + ((v27 - 128) | 0x671F0380)) ^ 0xD462B3D4)
                         + 91;
  *(void *)(v27 - 128) = v24;
  *(void *)(v27 - 120) = a24;
  (*(void (**)(uint64_t))(v26 + 8 * (v25 + 1959)))(v27 - 128);
  *(_DWORD *)(v27 - 104) = (v25 + 797) ^ (1374699841
                                        * (((v27 - 128) & 0x864C299C | ~((v27 - 128) | 0x864C299C)) ^ 0x1447CE6A));
  *(void *)(v27 - 112) = a24;
  *(void *)(v27 - 128) = a22;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v25 ^ 0x8D4)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (int)(((*(_DWORD *)(v27 - 120) == 542281048)
                                                   * (5 * ((v25 + 1840691019) & 0x92494EDF ^ 0x78E) - 1566)) ^ v25)))(v28);
}

uint64_t sub_1005996A0@<X0>(int a1@<W7>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(&a19 + a2 - 211724107) = 82;
  return (*(uint64_t (**)(void))(v20 + 8 * ((61 * ((unint64_t)(a2 - 211724106) > 0x37)) ^ (a1 + v19 - 764))))();
}

uint64_t sub_1005996E8()
{
  unsigned int v5 = ((3 * (v3 ^ 0x17D)) ^ 0xFFFFFD2F) + *(unsigned __int8 *)(v2 + 1);
  return (*(uint64_t (**)(void))(v4 + 8 * ((857 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_100599730(uint64_t a1, uint64_t a2)
{
  BOOL v5 = v2 - 1869904939 >= (v4 ^ 0x4F1u) - 1174;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * (((4 * v5) | (16 * v5)) ^ (v4 + 1069))))(4164969791, a2, 82);
}

void sub_10059978C()
{
  *(_DWORD *)(v0 + 8) = 25995482;
}

uint64_t sub_100599798@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (v4 - 1577905241)) = *(unsigned char *)(a2 + (v4 - 1577905241));
  return (*(uint64_t (**)(void))(v5 + 8 * ((469 * ((a1 ^ 0x5A3) + v4 - 583 == a3)) ^ (a1 - 743))))();
}

uint64_t sub_1005997E0(uint64_t a1)
{
  int v5 = v3 - 511;
  int v6 = v3 ^ 0x267;
  int v7 = v2 - 278180787;
  BOOL v8 = v7 < -934470513;
  BOOL v9 = v4 - 278180787 < v7;
  if (v4 - 278180787 < -934470513 != v8) {
    BOOL v9 = v8;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (((v6 - 423) * v9) ^ v5)))(a1, 542281048);
}

uint64_t sub_10059984C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  BOOL v9 = a1 + 25024762 < (a7 + 720059216);
  if ((a7 + 720059216) < 0x4EB048CC != a1 + 25024762 < (v7 + 1320175415)) {
    BOOL v9 = (a7 + 720059216) < 0x4EB048CC;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (v7 | (8 * !v9))))();
}

void sub_1005998BC()
{
}

uint64_t sub_1005998C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return sub_1005998EC(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1005998EC@<X0>(unint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X5>, int a4@<W8>)
{
  *(int8x16_t *)(a3 + (a4 - 1124885212 + v5)) = vaddq_s8(vsubq_s8(*(int8x16_t *)(v9 + v5), vandq_s8(vaddq_s8(*(int8x16_t *)(v9 + v5), *(int8x16_t *)(v9 + v5)), v10)), v11);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((v4 - 264) | v7) ^ a1) + v5 == v6) * a2) ^ v4)))();
}

uint64_t sub_100599940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v27 = v22 + v23;
  unsigned int v28 = v27 + ((v24 + 106) ^ 0xAC108E3E ^ (14 * (v24 ^ 0xD1)));
  if (v28 <= 0x40) {
    unsigned int v28 = 64;
  }
  BOOL v29 = __CFADD__(v27 - 1408202493, v25 + v28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((84 * v29) ^ v24)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1005999B0()
{
  int v2 = *(uint64_t (**)(uint64_t))(v1 + 16792);
  return v2(v0);
}

void sub_1005999DC(int a1@<W2>, int a2@<W8>)
{
  if (v2 + a2 + 89 * (a1 ^ 0xD5u) >= 0x7FFFFFFF) {
    int v6 = -v3;
  }
  else {
    int v6 = v5;
  }
  *uint64_t v4 = v6;
  JUMPOUT(0x100594158);
}

uint64_t sub_100599A0C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (int)(((*(_DWORD *)(a8 + 72) == v23) * (a21 & 0x8CEB62BD ^ 0x1A8)) ^ (a3 + v22 + 169))))();
}

uint64_t sub_100599A58@<X0>(uint64_t a1@<X3>, uint64_t a2@<X6>, int a3@<W8>)
{
  *(unsigned char *)(a1 + a3 - 172602596 + (v5 ^ 0x21Cu) + 589 - 592) = *(unsigned char *)(a2 + (v4 - 2136364433));
  return (*(uint64_t (**)(void))(v6 + 8 * ((73 * ((v3 & 0xFFFFFFFC) != 4 * (v5 ^ 0x21C) + 2136364416)) ^ v5)))();
}

uint64_t sub_100599AC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((77 * (((((a4 - 1178878402) & 0x464447FF) - 1997) & v4) == 0)) ^ a4)))();
}

uint64_t sub_100599B08(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v15 = 9 * (a8 ^ 0x4E9);
  *(void *)(a1 - 7 + a2 + v13 + v12 + v10 - a5 + ((v15 + 1128353926) & 0xBCBEAF3F ^ v9)) = *(void *)(v8 - 7 + a2 + v13 + v12 + v10 - a5 + ((v15 + 1128353926) & 0xBCBEAF3F ^ v9));
  return (*(uint64_t (**)(void))(v14 + 8 * ((193 * (((v15 ^ 0xFFFFFBAB) & v11) != a5 + 8)) ^ v15)))();
}

uint64_t sub_100599B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  *(_DWORD *)(*v9 + 4 * (a7 + v8 + 624)) = a6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * (((((v11 - 553) | a5) ^ (v11 - 226))
                                                                         * (v10 == 0)) ^ v11)))(a1, a2, a3, a4);
}

uint64_t sub_100599BF4()
{
  uint64_t v8 = (v2 + v1 - v4);
  int8x8_t v9 = vrev64_s8(*(int8x8_t *)(v6 - 7 + v8));
  *(int8x8_t *)(v0 - 7 + v8) = vrev64_s8(vadd_s8(vsub_s8(v9, vand_s8(vadd_s8(v9, v9), (int8x8_t)0xA4A4A4A4A4A4A4A4)), (int8x8_t)0x5252525252525252));
  return (*(uint64_t (**)(void))(v7 + 8 * ((460 * (v4 + 13 * (v5 ^ 0x425) - 590 == (v3 & 0xFFFFFFF8))) ^ v5)))();
}

uint64_t sub_100599C6C@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W5>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,unsigned int a39)
{
  int v42 = a5 ^ (v41 + 722);
  unsigned int v43 = a3 ^ ((*v40 & 0x7FFFFFFE | (v42 - 534303690) & v40[623]) >> 1);
  v40[623] = v40[396] ^ a4 ^ *(_DWORD *)(v39 + 4 * (*v40 & 1)) ^ (v43 + (v42 ^ 0x9C3AC8A8) - (a2 & (2 * v43)));
  return (*(uint64_t (**)(void))(a1 + 8 * ((530 * (a39 > 0x26F)) ^ a5)))();
}

uint64_t sub_100599CF0()
{
  int v6 = ((~((v5 - 128) | 0x4C5E16CD) + ((v5 - 128) & 0x4C5E16CD)) ^ 0xDE55F13B) * v0;
  *(void *)(v5 - 120) = v3;
  *(_DWORD *)(v5 - 128) = v6 + v4 - 2;
  *(_DWORD *)(v5 - 124) = v6 + v1 + 7 * (v4 ^ 0x85) - 367813289;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 1983)))(v5 - 128);
  return sub_100599D70(v7);
}

uint64_t sub_100599D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v27 - 128) = v24;
  *(void *)(v27 - 112) = a22;
  *(_DWORD *)(v27 - 104) = (v26 + 830) ^ (((((v27 - 128) ^ 0x3815ABC6)
                                          - 2094765727
                                          - 2 * (((v27 - 128) ^ 0x3815ABC6) & 0x83246961)) ^ 0xD6C5DAAE)
                                        * v22);
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v26 + 1997)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((49 * (*(_DWORD *)(v27 - 120) != v25)) ^ v26)))(v28);
}

uint64_t sub_100599E18()
{
  BOOL v4 = v1 + 658657412 < (int)(v3 + 1784926623 + ((v0 + 66) | 0x16));
  if (v3 > 0x159C2C4A != v1 + 658657412 < -362556491) {
    BOOL v4 = v3 > 0x159C2C4A;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v0 - 253) | 0x114) ^ 0x685)) ^ v0)))();
}

uint64_t sub_100599E9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v13 = a8 + v10;
  uint64_t v14 = (a7 + v13);
  long long v15 = *(_OWORD *)(v9 + v14 - 15);
  long long v16 = *(_OWORD *)(v9 + v14 - 31);
  uint64_t v17 = a1 + v14;
  *(_OWORD *)(v17 - 15) = v15;
  *(_OWORD *)(v17 - 31) = v16;
  return (*(uint64_t (**)(void))(v12 + 8 * ((8 * (v11 == v13)) | (16 * (v11 == v13)) | (v8 + a6 + 1889))))();
}

uint64_t sub_100599EA8(int a1)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((((a1 - 238) | v1) + v2) & (v4 + 1)) == v6) * v3) | a1)))();
}

uint64_t sub_100599ED8()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 32) + v0 - 0x184FAF2C964C147DLL)
     - *(unsigned __int8 *)(v5 + v0 - 0x184FAF2C964C147DLL);
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0x69FFFEEE) - 149012512 + ((3 * (v4 ^ 0x466) - 738198115) & (2 * v6)) != 1629372110 || v7 == v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * ((243 * v9) ^ v4)))();
}

uint64_t sub_100599F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v16 - 136) = v15;
  *(void *)(v16 - 120) = a12;
  *(_DWORD *)(v16 - 112) = (v14 + 19) ^ (((((2 * (v16 - 136)) | 0x313D44FC) - (v16 - 136) - 413049470) ^ 0x756ABA77)
                                       * v12);
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 ^ 0xBDE)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (int)(((*(_DWORD *)(v16 - 128) > 0x20528D59u)
                                                   * ((v14 + 2069259327) & 0x84A99B67 ^ 0x587 ^ (79 * (v14 ^ 0x3B5)))) ^ v14)))(v17);
}

uint64_t sub_10059A034(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((113 * (a1 + v2 + v1 + 764613839 - 515 < ((v1 + 77766321) & 0xFB5D5E77 ^ 0x46E))) ^ v1)))();
}

uint64_t sub_10059A0BC@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((1226 * (a2 == ((a1 + 1781161639) & 0x95D59FCB) + 1145885796)) ^ a1)))(4294925278);
}

uint64_t sub_10059A108(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  *(_DWORD *)(a2 + (v6 - a5)) = *(_DWORD *)(a1 + (v6 - a5));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a5 + 4 != v5) * a3) ^ a4)))();
}

uint64_t sub_10059A134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v35 = a11 - ((2 * a11 + 66510910) & 0x1F14A9F6) - 779762406;
  BOOL v37 = ((((-119 * (((a8 + 66) | 0xB) ^ 0x24)) ^ (((a8 + 66) | 0xB) - 77))
        + (((_BYTE)v35 << (((a8 + 66) | 0xB) ^ 0x2E)) & 0xBE ^ 0xB6)
        + (v35 ^ 0x24)) & 0xF) != 0
     || ((v35 << (((a8 + 66) | 0xB) ^ 0x2E)) & 0x73EF9FBE ^ 0x130489B6) + (v35 ^ 0x367D9B24) == 972541919;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (int)((105 * v37) ^ ((a8 - 446) | 0x20B))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_10059A1F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W8>)
{
  unsigned int v18 = (v14 + 1306796879) & 0xB21BDFEF;
  unint64_t v19 = v17
      + a1
      + (*(_DWORD *)(v10 + 4 * a5) ^ (v11 + 656) ^ (v18 + 533) ^ a7)
      + v13 * (unint64_t)(*(_DWORD *)(*v12 + 4 * a4) ^ v11)
      + 799;
  *(_DWORD *)(v10 + 4 * a5) = v19 + v11 - ((2 * v19) & 0x25432A3A);
  uint64_t v20 = (a2 ^ HIDWORD(v19)) + (v9 & (v19 >> 31)) + v7;
  BOOL v21 = a4 + 855634251 < a6;
  if (a3 > 0x4D000EB5 != a4 + 855634251 < v15) {
    BOOL v21 = a3 > 0x4D000EB5;
  }
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (int)(v18 ^ (!v21 * v16))))(v20);
}

uint64_t sub_10059A214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return sub_1005B7010(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_10059A24C@<X0>(char a1@<W8>, uint64_t a2)
{
  *(void *)(a2 + (v3 & 0xD49AD77D) - 80 + (unint64_t)v2) = v5;
  return (*(uint64_t (**)(void))(v4
                              + 8 * (int)((16 * ((a1 & 0x38) == 8)) | (32 * ((a1 & 0x38) == 8)) | v3 & 0xD49AD77D)))();
}

uint64_t sub_10059A298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = (1178560073 * ((&a13 & 0x85A57A70 | ~(&a13 | 0x85A57A70)) ^ 0x484C85CF)) ^ 0x650810FC;
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v15 + 17144))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((101 * (a14 != v14)) ^ 0x13Cu)))(v16);
}

uint64_t sub_10059A324()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((21
                                * ((((*(unsigned __int8 *)(v2 + 8) - 4) << ((v3 + 61) ^ 0xCA)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ (v0 + v3 + 194 - 592)) == v0)) ^ v3)))();
}

uint64_t sub_10059A378@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24,uint64_t a25,int a26,int a27,int a28)
{
  LODWORD(STACK[0x2D8]) = a3;
  LODWORD(STACK[0x2DC]) = a28;
  STACK[0x2E0] = a24;
  LODWORD(STACK[0x2E8]) = a27 - v33 + 600116604;
  STACK[0x2F0] = a1 + ((v29 + 594269792) & 0xDC942B63 ^ 0xDA8B64DB) + v33;
  int v34 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 48 * v31 + 8))(a11, a20);
  return (*(uint64_t (**)(void))(v32 + 8 * ((1633 * (v34 + v30 - (v28 & (2 * v34)) == (v29 ^ (v30 - 158)))) ^ v29)))();
}

uint64_t sub_10059A450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8 * (((a9 + 4 >= a9) | (4 * (a9 + 4 >= a9))) ^ v9)))(a1, a2);
}

uint64_t sub_10059A4D0@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 24) + (a4 + a5)) = ((a3 ^ v7) >> v8) - ((2 * ((a3 ^ v7) >> v8)) & 0xA4) + 82;
  return (*(uint64_t (**)(void))(v5 + 8 * ((85 * (a4 - 1 != v6 + ((a2 + 466158661) & 0xE436FFD3) - 1808 + 810)) ^ a2)))();
}

uint64_t sub_10059A544()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1537
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v0) == (v2 ^ (v0 + 429)))) ^ v2 ^ 0x3EF)))();
}

void sub_10059A58C()
{
}

uint64_t sub_10059A598()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((43 * (v0 + v2 + (v1 ^ 0x73Eu) + 741 < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_10059A5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + v8 + a4 + 16) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 + v6 - 970 == v7) | (8 * (v8 + v6 - 970 == v7))) ^ v4)))();
}

uint64_t sub_10059A604()
{
  return sub_10059A60C();
}

uint64_t sub_10059A60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int8x16_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  uint64_t v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * v52);
  LODWORD(a26) = HIDWORD(a42);
  HIDWORD(a23) = BYTE4(a45) ^ 0xFFFFFFB9;
  int v58 = BYTE4(a45) ^ 0xB9;
  if (v58 == 2)
  {
    HIDWORD(a24) = a43;
    uint64_t v66 = (a6 + a5 + 1413);
    int8x16x4_t v80 = vld4q_s8(v51);
    HIDWORD(a21) = HIDWORD(a44);
    uint8x16_t v67 = (uint8x16_t)veorq_s8(v80.val[1], a9);
    _Q21 = vmovl_u8(*(uint8x8_t *)v67.i8);
    _Q20 = vmovl_high_u8(v67);
    __asm
    {
      SHLL2           V22.4S, V20.8H, #0x10
      SHLL2           V23.4S, V21.8H, #0x10
    }
    uint64_t v72 = (_DWORD *)(v56 + 4 * (v54 + 1985391785));
    int v73 = *(v72 - 8) ^ *(v72 - 3);
    unsigned int v74 = v73 + v53 - ((2 * v73) & 0xFCE7E61C);
    int v75 = *(_DWORD *)(v56 + 4 * ((v66 ^ 0x4CD ^ a28) + 1985391785)) ^ *(v72 - 14);
    HIDWORD(v76) = v75 ^ v74 ^ 0x7E73F30E;
    LODWORD(v76) = v75 ^ ~v74;
    *uint64_t v72 = (v76 >> 31) + v53 - ((2 * (v76 >> 31)) & 0xFCE7E61C);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (int)((99 * (v57 != 1985391722)) ^ v66)))(4243056156, v66, a3, a4, HIDWORD(a44), a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             __PAIR64__(a44, HIDWORD(a43)),
             a26,
             v78,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51);
  }
  else
  {
    if (v58 == 1)
    {
      int8x16x4_t v79 = vld4q_s8(v51);
      uint8x16_t v59 = (uint8x16_t)veorq_s8(v79.val[2], a9);
      _Q21 = vmovl_high_u8(v59);
      _Q20 = vmovl_u8(*(uint8x8_t *)v59.i8);
      __asm
      {
        SHLL2           V20.4S, V20.8H, #0x10
        SHLL2           V21.4S, V21.8H, #0x10
      }
      JUMPOUT(0x10059A76CLL);
    }
    return v78(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             v78,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35);
  }
}

void sub_10059AA30()
{
}

uint64_t sub_10059AB44(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((1100 * (v5 == ((a3 + v7) ^ (a5 + 248)))) | (a3 + v7 + 507))))();
}

uint64_t sub_10059AB80(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v3 - 7 + (v6 + v5 + v7 - v8)) = *(void *)(a2 - 7 + (v6 + v5 + v7 - v8));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 - (v4 & 0xFFFFFFF8) == -8) * (((a3 - 1085) | 0x461) ^ 0x643)) ^ a3)))();
}

uint64_t sub_10059ABE0(int a1, int8x16_t a2, double a3, double a4, int8x16_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11)
{
  *int v12 = vaddq_s8(vsubq_s8(*(int8x16_t *)(a11 + (v13 + a1)), vandq_s8(vaddq_s8(*(int8x16_t *)(a11 + (v13 + a1)), *(int8x16_t *)(a11 + (v13 + a1))), a5)), a2);
  return (*(uint64_t (**)(void))(v14 + 8 * (a10 + v11 + 1885)))();
}

uint64_t sub_10059AC34@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, unsigned int a7)
{
  unsigned int v10 = 1178560073 * (&a3 ^ 0x32160040);
  a3 = v7;
  a4 = a1;
  a5 = v10 ^ 0x1DF4F7AC;
  a6 = v10 + v9 - 48;
  a7 = -818108373 - v10;
  uint64_t v11 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * (int)(v9 + 1766)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((1065 * (*(_DWORD *)(v7 - 0xD547898781B11A8) == (v9 ^ 0xFE73F254))) ^ v9)))(v11);
}

uint64_t sub_10059ACE0@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + (v5 + v3)) = *(_DWORD *)(v2 - 3 + (v5 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 != 4) * (a1 - 58)) ^ (a1 + 879))))();
}

uint64_t sub_10059AD28(uint64_t a1)
{
  int v1 = 460628867 * ((((2 * a1) | 0xD350F8B8) - a1 - 1772649564) ^ 0x253EFE21);
  int v2 = *(_DWORD *)(a1 + 4) + v1;
  int v3 = *(_DWORD *)(a1 + 8) ^ v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x330904BA72E93EBCLL);
  unsigned int v6 = v4 - 1491193922;
  BOOL v5 = v4 - 1491193922 < 0;
  unsigned int v7 = 1491193922 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_1009960C0 + (v2 ^ 0x75A))
          + ((((v3 - 913941310) >= 4 * (unint64_t)v7) * ((v2 - 1246) ^ 0x2D0)) ^ v2)
          - 1))();
}

uint64_t sub_10059ADF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((14 * (v8 + 1 != v10 + 64)) | a8)))();
}

uint64_t sub_10059AEB4()
{
  (*(void (**)(void))(v2 + 8 * (v1 ^ 0x8C3)))();
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((*(void *)(v0 + 312) != 0) | (4 * (*(void *)(v0 + 312) != 0)) | (v1 - 104))))();
}

uint64_t sub_10059AEEC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == 24) * a4) ^ a7)))();
}

uint64_t sub_10059AF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v43 = (v39 - 1358) | 0x4E0;
  BOOL v44 = v41 < v42;
  unsigned int v45 = v40 + ((v43 + 54) ^ (v42 - 541));
  int v46 = v44 ^ (v45 < v42);
  BOOL v47 = v45 < v41;
  if (!v46) {
    LOBYTE(v44) = v47;
  }
  return (*(uint64_t (**)(void))(a39 + 8 * ((14 * (((v43 + 27) ^ v44) & 1)) | v43)))();
}

uint64_t sub_10059B3B0()
{
  BOOL v5 = v1 + 388768458 > 363467590 || v1 + 388768458 < v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v0 - 15) | 0x48) + 177) ^ 0x922) * v5) ^ v0)))();
}

uint64_t sub_10059B3FC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((**(void **)(v2 + 8 * (v1 - 651)) == 0) * ((v1 - 2018479290) & 0x784F8FBE ^ 0x8A)) ^ v1)))();
}

uint64_t sub_10059B444@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((120
                                              * (((a1 - 1145886373) ^ 0x395F9FB5C7FF37EFLL)
                                               - 0x395F9FB59FF7154ALL
                                               + ((2 * (a1 - 1145886373)) & 0x18FFE6FDELL) != 671621797)) ^ 0x632u)))(983);
}

uint64_t sub_10059B4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v16 - 128) = &STACK[0x330904BA72E93F00];
  *(void *)(v16 - 120) = a14;
  *(_DWORD *)(v16 - 112) = v15 - 1759421093 * ((v16 - 128) ^ 0xB37DB054) - 1378;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0xE2A)))(v16 - 128);
  *(void *)(v16 - 128) = a13;
  *(void *)(v16 - 112) = a14;
  *(_DWORD *)(v16 - 104) = (v15 - 672) ^ (1374699841
                                        * ((1825418699 - ((v16 - 128) | 0x6CCDADCB) + ((v16 - 128) | 0x93325234)) ^ 0xFEC64A3D));
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 495)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((186 * (*(_DWORD *)(v16 - 120) != 542281048)) ^ v15)))(v17);
}

uint64_t sub_10059B618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,_DWORD *a30,_DWORD *a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43)
{
  *a30 = a43 + 432511608;
  unint64_t v45 = 1178560073
      * ((0x8A32B5F97DDEBC3ALL - ((v44 - 144) | 0x8A32B5F97DDEBC3ALL) + ((v44 - 144) | 0x75CD4A06822143C5)) ^ 0x48744946B0374385);
  *(void *)(v44 - 136) = (*a31 + 499233634) ^ v45;
  *(_DWORD *)(v44 - 116) = v45 ^ 1;
  *(_DWORD *)(v44 - 112) = ((v43 + 333719328) ^ 0x71) + v45;
  *(_DWORD *)(v44 - 144) = (v43 + 111494114) ^ v45;
  *(_DWORD *)(v44 - 124) = (v43 + 333719328) ^ v45;
  *(_DWORD *)(v44 - 120) = ((v43 + 333719328) ^ 0x15) + v45;
  *(void *)(v44 - 104) = 1701916732 - v45;
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(a3 + 8 * (a5 + v43 - 6)))(v44 - 144);
  return (*(uint64_t (**)(uint64_t))(a39 + 8 * *(int *)(v44 - 128)))(v46);
}

uint64_t sub_10059B624(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 144) = *(void *)(v4 + 8 * (v2 - 214));
  return sub_1005B5080(a1, a2, 1589640130);
}

uint64_t sub_10059B64C()
{
  _DWORD *v0 = 25995323;
  return sub_10059B658();
}

uint64_t sub_10059B660@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v2 != 895093446) * (((a1 - 613) | 0x215) - 1546)) ^ a1)))();
}

uint64_t sub_10059B6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((343 * (v8 + 1 == v10 + 24)) ^ a8)))();
}

uint64_t sub_10059B770@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W4>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  *(_DWORD *)(v45 - 120) = v43 + 9;
  v50.val[1].i64[0] = ((_BYTE)v43 - 1) & 0xF;
  v50.val[1].i64[1] = ((_BYTE)v43 + 14) & 0xF;
  v50.val[2].i64[0] = ((_BYTE)v43 + 13) & 0xF;
  v50.val[2].i64[1] = ((_BYTE)v43 + 12) & 0xF;
  v50.val[3].i64[0] = ((_BYTE)v43 + 11) & 0xF;
  v50.val[3].i64[1] = ((_BYTE)v43 + 10) & 0xF;
  v46.i64[0] = 0x7777777777777777;
  v46.i64[1] = 0x7777777777777777;
  v50.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)a3 + (_BYTE)a2) & 0xF;
  v50.val[0].i64[1] = v43 & 0xF;
  v47.i64[0] = vqtbl4q_s8(v50, (int8x16_t)xmmword_1007AA4D0).u64[0];
  v51.val[0].i64[1] = ((_BYTE)v43 + 8) & 0xF;
  v51.val[1].i64[1] = ((_BYTE)v43 + 6) & 0xF;
  v51.val[2].i64[1] = (v43 + 4) & 0xF;
  v51.val[3].i64[1] = ((_BYTE)v43 + 2) & 0xF;
  v51.val[0].i64[0] = *(_DWORD *)(v45 - 120) & 0xF;
  v51.val[1].i64[0] = ((_BYTE)v43 + 7) & 0xF;
  v51.val[2].i64[0] = ((_BYTE)v43 + 5) & 0xF;
  v51.val[3].i64[0] = (v43 + 3) & 0xF;
  v47.i64[1] = vqtbl4q_s8(v51, (int8x16_t)xmmword_1007AA4D0).u64[0];
  int8x16_t v48 = vrev64q_s8(vmulq_s8(v47, v46));
  *(int8x16_t *)(a5 - 15 + (a1 + a3 + a2)) = veorq_s8(veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v40 + v50.val[0].i64[0] - 15), *(int8x16_t *)(a5 - 15 + (a1 + a3 + a2))), *(int8x16_t *)(v50.val[0].i64[0] + v41 - 13)), *(int8x16_t *)(v42+ v50.val[0].i64[0]+ (a4 ^ 0x1DELL)- 15)), vextq_s8(v48, v48, 8uLL));
  return (*(uint64_t (**)(void))(a40 + 8 * (int)((1901 * ((v44 & 0xFFFFFFF0) == 16)) ^ a4)))();
}

uint64_t sub_10059B8D8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,_DWORD *a26)
{
  *a26 = 312579357;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v27
                                                                     + 8
                                                                     * (int)(((v26 - 1546156172 < -1546156171)
                                                                            * (((a4 + 1033448732) & 0xC266D7F4) - 365)) ^ (a4 + 223))))(a1, 2748811124, (v26 - 1546156172), (a4 + 223));
}

uint64_t sub_10059B968(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = 1;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10059B988@<X0>(int a1@<W0>, unint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, unsigned int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  BOOL v39 = v26 > v36;
  int v40 = a6 + a7;
  int v41 = a6 + 1;
  uint64_t v42 = 4 * (v41 + a7);
  unint64_t v43 = (*(_DWORD *)(a26 + v42) ^ a8) + (a4 ^ HIDWORD(a2));
  unint64_t v44 = (v37 >> (((a5 - 17) | v29) - 68))
      + v33 * (unint64_t)(*(_DWORD *)(*v34 + v42) ^ a8)
      + ((v43 + a3 - (v27 & (2 * v43))) ^ v30);
  *(_DWORD *)(a26 + 4 * v40) = v44 + a8 - (a1 & (2 * v44));
  if (v39 == v41 + v32 < v38) {
    BOOL v39 = v41 + v32 < v35;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * ((!v39 * v28) ^ a5)))();
}

uint64_t sub_10059BA34(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((4024 * ((a4 + 1 + v4) > 0x3F)) ^ a1)))();
}

void sub_10059BB1C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (460628867 * (((a1 | 0x6C5795E7) - a1 + (a1 & 0x93A86A18)) ^ 0x20C1179A));
  __asm { BRAA            X12, X17 }
}

uint64_t sub_10059BBD8(uint64_t result, int a2)
{
  if ((a2 ^ v2) + v3 >= 0x7FFFFFFF) {
    int v7 = -v4;
  }
  else {
    int v7 = v6;
  }
  int *v5 = v7;
  *(_DWORD *)(result + 28) = 1309703389;
  return result;
}

uint64_t sub_10059BC14(uint64_t result, int a2)
{
  *(_DWORD *)(result + 8) = (a2 ^ 0x40A51B6F) - v2;
  return result;
}

uint64_t sub_10059BC2C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 + 213 + v0 + 89 - 2090) * (v1 != 0)) ^ v0)))();
}

uint64_t sub_10059BC5C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2011 * (v1 + 1 == v3 + 64)) ^ v0)))();
}

void sub_10059BD1C()
{
  *(void *)(v1 + 144) = *(void *)(v2 + 8 * (v0 - 184));
  JUMPOUT(0x10059BD34);
}

uint64_t sub_10059BD40@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((235 * (a1 + 1 == v3 + 4)) ^ v1)))();
}

void sub_10059BE28(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8)
     + 1734042137 * (((a1 ^ 0xE6425DAD | 0xA65DFB69) - ((a1 ^ 0xE6425DAD) & 0xA65DFB69)) ^ 0x1CD16589);
  __asm { BRAA            X8, X17 }
}

void sub_10059BF10()
{
}

uint64_t sub_10059BF28(_DWORD *a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_100991B70
                             + ((2 * ((*a1 + *(_DWORD *)(a2 + 4) - 1926573503) < 0xC9)) | 0x3ADu)))();
}

uint64_t sub_10059BF68@<X0>(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X3>, unint64_t a4@<X4>, int a5@<W7>, unsigned int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  BOOL v38 = a6 > a1;
  int v39 = v28 + a5;
  int v40 = v28 + 1;
  uint64_t v41 = 4 * (v40 + a5);
  unint64_t v42 = (*(_DWORD *)(a24 + v41) ^ v24) + ((v27 - 1283) ^ (unint64_t)(a3 - 233) ^ HIDWORD(v25));
  unint64_t v43 = HIDWORD(v29)
      + v36 * (unint64_t)(*(_DWORD *)(*v37 + v41) ^ v24)
      + ((v42 + a2 - (v34 & (2 * v42))) ^ a4);
  *(_DWORD *)(a24 + 4 * v39) = v43 + v24 - (v26 & (2 * v43));
  if (v38 == v40 + v33 < v35 + 297) {
    BOOL v38 = v40 + v33 < v31;
  }
  return (*(uint64_t (**)(void))(v32 + 8 * ((v38 * v30) ^ v27)))();
}

uint64_t sub_10059C014()
{
  BOOL v5 = v1 < v0;
  unint64_t v6 = v2 - 0x15C07796F0BB6814 + (v3 ^ 0x5E5u);
  int v7 = v5 ^ (v6 < v0);
  BOOL v8 = v6 < v1;
  if (!v7) {
    BOOL v5 = v8;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((120 * v5) ^ v3)))();
}

uint64_t sub_10059C094@<X0>(int a1@<W0>, int a2@<W8>)
{
  _DWORD *v5 = v5[623];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1951 * (v6 + ((a1 + v3 + a2 - 718 - 820 - 2129) | 0x17) - 24 == v4)) ^ (a2 - 718))))();
}

uint64_t sub_10059C0E8()
{
  BOOL v8 = v4 < v3;
  int v9 = v1 + 1;
  *(unsigned char *)(*v5 + (v9 + v7)) = 82;
  if (v8 == v9 + v2 < v3 + v0 - 819 - 109) {
    BOOL v8 = v9 + v2 < v4;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (v8 | (8 * v8) | v0)))();
}

uint64_t sub_10059C144@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 - 0xCBDE157C0FFD3D0) = 1;
  return sub_1005969C0(result);
}

uint64_t sub_10059C160@<X0>(uint64_t a1@<X3>, uint64_t a2@<X6>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v3 + 89 - 594)) = v4;
  *(unsigned char *)(a1 + (a3 - 172602596)) = *(unsigned char *)(a2 + ((4 * (v3 + 89)) ^ 0x80A9A32A) + 2136364435);
  return (*(uint64_t (**)(void))(v6 + 8 * ((1206 * (((2 * (v3 + 89)) ^ 0x4B2u) - 12 > 2)) ^ (v3 + 89))))();
}

void sub_10059C188(int a1@<W8>)
{
  (*(void (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v4 + 8 * (a1 ^ 0xCAE)))(*v3, (v1 + v2 + 2), LODWORD(STACK[0x238]), v3[13] - 335234519, &STACK[0x620], STACK[0x318], (LODWORD(STACK[0x2D0]) - 1096393532), &STACK[0x610]);
  JUMPOUT(0x10059C228);
}

uint64_t sub_10059C4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7, uint64_t a8)
{
  *(void *)(*(void *)(a8 + 96) + 1544) = *(void *)(a2 + 8);
  *(_DWORD *)(*(void *)(a8 + 96) + 1536) = *(_DWORD *)(a2 + 4);
  return v8 ^ a7;
}

uint64_t sub_10059C530(uint64_t result)
{
  unint64_t v1 = 1178560073 * ((result - 2 * (result & 0xAE9DDB9EFF8D7B05) - 0x51622461007284FBLL) ^ 0x9324D8DECD9B7B45);
  int v2 = *(_DWORD *)(result + 20) ^ v1;
  unint64_t v3 = *(void *)(result + 8) ^ v1;
  int v4 = *(_DWORD *)(result + 28) ^ v1;
  int v5 = *(_DWORD *)(result + 32) - v1;
  unint64_t v6 = *(void *)(result + 40) + v1;
  int v7 = *(_DWORD *)(result + 24) - v1;
  BOOL v8 = v6 == v3;
  BOOL v9 = v6 > v3;
  if (v4) {
    BOOL v8 = v9;
  }
  if (v8) {
    int v7 = v2;
  }
  *(_DWORD *)(result + 16) = v7 ^ v5;
  return result;
}

void sub_10059C5BC(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 628203409 * ((a1 & 0x7EE22050 | ~(a1 | 0x7EE22050)) ^ 0x395D39C);
  uint64_t v2 = *(void *)(a1 + 8);
  unint64_t v3 = (char *)*(&off_1009960C0 + (int)(v1 & 0x9630A9CC)) - 8;
  (*(void (**)(void, uint64_t (*)()))&v3[8 * v1 + 3488])(*(&off_1009960C0 + v1 - 1666), sub_10058DD64);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10059C67C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, int a14, uint64_t a15, int a16)
{
  int v23 = v22 + 2;
  char v24 = v20 + *(unsigned char *)(v16 + 24) + 33;
  int v25 = 1759421093 * ((&a11 - 2 * ((unint64_t)&a11 & 0xCDA22E79) - 845009287) ^ 0x7EDF9E2D);
  a15 = v19;
  a14 = v25 + ((v23 + 1064173124) ^ (v21 + 1600199400)) + (((v21 + 1600199400) << (v23 + 72)) & 0x7EDBFFFA) - 268972305;
  a16 = v23 - v25 - 277;
  a12 = &STACK[0x6C0C7F2AED40EE99];
  a13 = v24 ^ (-91 * ((&a11 - 2 * ((unint64_t)&a11 & 0xCDA22E79) + 121) ^ 0x2D));
  uint64_t v26 = (*(uint64_t (**)(int *))(v18 + 8 * (v23 ^ 0x9DA)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1546 * (a11 == v17)) ^ v23)))(v26);
}

uint64_t sub_10059C77C(uint64_t a1)
{
  int v1 = 1759421093 * ((2 * (a1 & 0x6BD6573D) - a1 - 1809209150) ^ 0x27541896);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = *(_DWORD *)(a1 + 12) - v1 - 638866193;
  unsigned int v4 = v3 + (*(_DWORD *)(*(void *)a1 - 0x399DE98F08C0F060) ^ 0xC8549F4D);
  unsigned int v5 = v4 - ((2 * v4) & 0x90A93E9A) - 933978291;
  *(_DWORD *)(*(void *)a1 - 0x399DE98F08C0F060) = v5;
  return (*((uint64_t (**)(void))*(&off_1009960C0 + v2 - 693) + ((1501 * ((v5 ^ 0xC8549F4D) < v3)) ^ v2) - 1))();
}

void sub_10059C844(int a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10059C8B8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((653
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((107 * (v2 ^ 0x1CF)) ^ (v0 + 100) ^ (*(unsigned __int8 *)(v3 + 7) - 1)) == v0)) ^ v2)))();
}

uint64_t sub_10059C904(uint64_t a1, uint64_t a2, uint64_t a3)
{
  LODWORD(STACK[0x528]) = v3;
  return sub_10059C910(a1, a2, a3, 25995479);
}

uint64_t sub_10059C910()
{
  STACK[0x438] = v2;
  LODWORD(STACK[0x418]) = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 == v4 + 2 * (v0 ^ 0xFB) + 152 - 218)
                                * ((2 * (v0 ^ 0xFB) - 1475068043) & 0x57EBC4FE ^ 0x145)) ^ (2 * (v0 ^ 0xFB)))))();
}

uint64_t sub_10059C970()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ (28 * (v1 == 0x2E9240E7)))))();
}

uint64_t sub_10059C9C0(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (int)(((((v6 == v8) ^ ((v7 + 52) | (a4 - 44))) & 1)
                                                   * (a6 + ((v7 - 387320595) & 0xBF367D57) + 4)) | v7)))(2282780948);
}

void sub_10059CA24()
{
}

void sub_10059CAAC()
{
}

uint64_t sub_10059CB48()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v4 + 8) - 11)))
                                 + ((199 * (v3 ^ 0x1B9)) ^ (v0 + 429) ^ (*(unsigned __int8 *)(v4 + 8) - 11)) == v0)
                                * (v2 + 381)) ^ v3)))();
}

uint64_t sub_10059CB94(uint64_t a1, int a2)
{
  BOOL v6 = v4 + 1260718962 > (int)((a2 + 67915258) & 0xFBF3B1FD ^ 0xA2720EB) || v4 + 1260718962 < v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1001 * v6) ^ a2)))();
}

uint64_t sub_10059CBF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                              + 8
                                                              * ((925 * (((v3 == 0) ^ (v4 - 53)) & 1)) ^ v4)))(a1, a2, a3);
}

void sub_10059CC54(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 48) + 3804331 * (((a1 | 0x6BF12641) - (a1 | 0x940ED9BE) - 1810966082) ^ 0x916FD517);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10059CDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t *a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46)
{
  int8x16_t v47 = (unsigned int *)*a28;
  if ((((a27 - 612587456) ^ (a27 - 612586888) ^ 0x64BLL) & *a28) != 0
    || (int8x16_t v48 = *(&off_1009960C0 + (int)a27 - 612588277), *v48))
  {
    *a10 = 25995441;
    return sub_1005AD7C8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32);
  }
  else
  {
    *int8x16_t v48 = v47;
    *(_DWORD *)*(&off_1009960C0 + (int)a27 - 612588388) = 255;
    *v47 |= ~v47[*v47 & ((a27 - 612587856) ^ 0x222)] << 16;
    v47[4] |= ~v47[v47[4] & 0x3ELL] << 16;
    v47[8] |= ~v47[v47[8] & 0x3ELL] << 16;
    v47[12] |= ~v47[v47[12] & 0x3ELL] << 16;
    v47[16] |= ~v47[v47[16] & 0x3ELL] << 16;
    v47[20] |= ~v47[v47[20] & 0x3ELL] << 16;
    v47[24] |= ~v47[v47[24] & 0x3ELL] << 16;
    v47[28] |= ~v47[v47[28] & 0x3ELL] << 16;
    v47[32] |= ~v47[v47[32] & 0x3ELL] << 16;
    v47[36] |= ~v47[v47[36] & 0x3ELL] << 16;
    v47[40] |= ~v47[v47[40] & 0x3ELL] << 16;
    v47[44] |= ~v47[v47[44] & 0x3ELL] << 16;
    v47[48] |= ~v47[v47[48] & 0x3ELL] << 16;
    v47[52] |= ~v47[v47[52] & 0x3ELL] << 16;
    v47[56] |= ~v47[v47[56] & 0x3ELL] << 16;
    v47[60] |= ~v47[v47[60] & 0x3ELL] << 16;
    uint64_t v49 = (*(uint64_t (**)(char *, void, uint64_t))(v46 + 8 * ((int)a27 - 612586282)))(&a46, 0, 1024);
    STACK[0x528] = (unint64_t)&a46;
    return (*(uint64_t (**)(uint64_t))(a39
                                              + 8
                                              * (int)((((a27 - 405441196) | 0x9380030A) + 1613180874) ^ (a27 - 612587456) ^ (a27 - 612587856))))(v49);
  }
}

uint64_t sub_10059D0B0()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0xD547898781B11B0)
     - ((2 * *(_DWORD *)(v1 - 0xD547898781B11B0) - 1069073172) & 0xEE76DC84)
     - 681636680;
  BOOL v4 = ((v3 << ((v0 - 112) ^ 0xB4)) & 0xFDDFDEBC ^ 0xEC56DC84) + (v3 ^ 0x89D4811C) - 551748358 == 1577905240;
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v4) | (16 * v4)) ^ v0)))();
}

uint64_t sub_10059D16C(uint64_t a1)
{
  int v2 = 460628867 * (a1 ^ 0x4C96827D);
  int v3 = *(_DWORD *)(a1 + 32) ^ v2;
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v7 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  int v8 = 434402223 * (*(_DWORD *)(a1 + 48) + v2) + 2135181366;
  unsigned int v9 = 235795823 * (&v11 ^ 0x94AD4959);
  int v16 = v9 ^ (v3 + 2024875087);
  uint64_t v11 = v7;
  unsigned int v12 = v9 + (v8 ^ 0xFEEE8FEB) + ((2 * v8) & 0xFDDD1FD6) + 1058406390;
  uint64_t v17 = v4;
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  uint64_t result = (*((uint64_t (**)(uint64_t *))*(&off_1009960C0 + (int)(v3 ^ 0x874EE30D)) + (int)(v3 ^ 0x874EEB0D)
                                                                                             - 1))(&v11);
  *(_DWORD *)(a1 + 16) = v15;
  return result;
}

void sub_10059D2B0(int a1, uint64_t a2, int a3)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v5 = v3 || a3 == 0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10059D330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  uint64_t v53 = v40 + 4;
  uint64_t v54 = (uint64_t)*(&off_1009960C0 + (int)((v42 - 96) ^ 0x9FD8D3CA));
  uint64_t v55 = (unsigned int *)*(&off_1009960C0 + (int)((v42 + 18) ^ 0x9FD8D3CA));
  uint64_t v44 = *v55;
  *(_DWORD *)(v43 - 128) = a26 ^ 0xE1F2694A;
  *(_DWORD *)(v43 - 140) = v41 - 1613179958 - a26;
  *(_DWORD *)(v43 - 136) = a26;
  *(_DWORD *)(v43 - 144) = a26 ^ (v41 - 1613179958) ^ 0x79;
  *(void *)(v43 - 104) = 1202683098 - a26;
  *(_DWORD *)(v43 - 112) = ((v41 - 1613179958) ^ 0x6E) + a26;
  *(void *)(v43 - 120) = v44 + a26;
  (*(void (**)(uint64_t))(v39 + 8 * (int)((v42 + 1933) ^ 0x9FD8D3CA)))(v43 - 144);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unsigned int *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a39 + 8 * *(int *)(v43 - 132)))(a39, v45, v46, v47, v48, v49, v50, v51, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           v53,
           v54,
           v55,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_10059D34C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 + a2 + ((v2 + 821325987) & 0xCF0B8CE7) + 436474113 - 1125 < 8)
                                * ((v2 - 473) ^ 0x526)) ^ (v2 - 14))))();
}

uint64_t sub_10059D3CC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((84
                                * (((2 * v1) & 0x7A67A3E0 ^ 0x582481C0) + (v1 ^ 0x13A19117) - 942670080 != ((v0 + 508558754) & 0xE1AFFFFE) + 84135612)) ^ v0)))();
}

void sub_10059D448(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 1374699841 * (((a1 | 0x3B067EF8) - (a1 & 0x3B067EF8)) ^ 0x56F266F1);
  uint64_t v2 = *(void *)a1;
  int v3 = (char *)*(&off_1009960C0 + (v1 ^ 0x221)) - 8;
  (*(void (**)(void, uint64_t (*)()))&v3[8 * v1 + 11560])(*(&off_1009960C0 + v1 - 657), sub_10058DD64);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10059D514@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v1 - 0xD547898781B11B0) - 1565297708;
  unsigned int v4 = *(_DWORD *)(v1 - 0xD547898781B11B4) - 1825962390;
  BOOL v5 = v3 < 0xC28FD556;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((v2 + 20227912) & 0xFECB56AF ^ 0xC28FD5F1)) {
    BOOL v7 = v5;
  }
  else {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((127 * v7) ^ v2)))();
}

uint64_t sub_10059D5BC()
{
  int v7 = v4 + 4;
  unsigned int v8 = *(_DWORD *)(v3 + ((v7 - 620814690) & 0xFFFFFFFC));
  *(unsigned char *)(v2 + (v7 - 620814690)) = v8 ^ 0x90;
  int v9 = (v8 >> ((v1 - 66) & 0xDF ^ 0xD2)) ^ 0x19;
  *(unsigned char *)(v2 + (v7 - 620814689)) = v9 + (v5 | ~(2 * v9)) + 83;
  *(unsigned char *)(v2 + (v7 - 620814688)) = (BYTE2(v8) ^ 0xD9) - ((2 * (BYTE2(v8) ^ 0xD9)) & 0xA4) + 82;
  *(unsigned char *)(v2 + (v7 - 620814687)) = (HIBYTE(v8) ^ 0x86) - ((2 * (HIBYTE(v8) ^ 0x86)) & 0xA4) + 82;
  unsigned int v10 = *v0 + 922565100;
  BOOL v11 = v10 < 0x4E7F17B5;
  BOOL v12 = v7 + 696137303 < v10;
  if ((v7 + 696137303) < 0x4E7F17B5 != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((93 * v12) ^ v1)))();
}

uint64_t sub_10059D5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v12 = ((unint64_t)&a9 ^ 0x6EFD7EAF73E5BFFCLL)
      - 0x44008316005FCLL
      + ((2 * (void)&a9) & 0xDDFAFD5EE7CB7FF0);
  a9 = v10 - 1;
  *(unsigned char *)(a2 + a9) = (v12 ^ 0xBA) * (v12 + 17);
  uint64_t v13 = *(uint64_t (**)(void))(v11 + 8 * (((a9 == 0) * (((v9 - 476) | 0x590) ^ 0x1B2)) ^ v9));
  return v13(v13);
}

void sub_10059D65C(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10059D698(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8
                                                                                * ((55
                                                                                  * (v2 < (STACK[0x384] & 0xF3FE4BB9 ^ 0x29AC7755)
                                                                                        + (v3 ^ 0x353))) ^ (v3 + 1402))))(a1, a2, 130299588, 65149794, 109);
}

uint64_t sub_10059D6FC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  LODWORD(STACK[0x3F0]) = 1145886373;
  return sub_1005C3B24(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40);
}

uint64_t sub_10059D714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_OWORD *)(a4 + v7) = *v5;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == 0) * v6) ^ v4)))();
}

uint64_t sub_10059D740@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((246 * (v3 - 1 + (v2 ^ 0x447 ^ v1) >= 0)) ^ v2)))();
}

uint64_t sub_10059D778()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((455 * (v1 > v3 + 623)) ^ (v2 - 1613181861))))();
}

uint64_t sub_10059D7B8@<X0>(int a1@<W8>)
{
  if (*(void *)(v2 + 56) | *(void *)(v2 + 32)) {
    BOOL v4 = *(_DWORD *)(v2 + 40) - a1 == ((((v1 - 1504648842) & 0x59AF1FDF) + 793751744) ^ (v1 - 1094643323) & 0x413EEBF1);
  }
  else {
    BOOL v4 = 1;
  }
  int v5 = !v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((251 * v5) ^ v1)))();
}

void sub_10059D838(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (1374699841 * ((-2 - ((a1 | 0xA88133EE) + (~a1 | 0x577ECC11))) ^ 0x3A8AD418));
  int v2 = ((*(void *)(a1 + 8) == 0) ^ (91 * (v1 ^ 0xD6))) & 1;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10059D900(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_100991B70 + ((31 * (*(_DWORD *)(a2 + 4) == 1145886386)) ^ 0x70Cu)))(4294925278);
}

uint64_t sub_10059D944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42,int a43)
{
  uint64_t v50 = (void *)STACK[0x378];
  unint64_t v51 = STACK[0x378] + 264;
  v50[31] = 0x58E1D0421A6BCA3FLL;
  v50[32] = v51;
  v50[65] = 0x58E1D0421A6BCA3FLL;
  v50[66] = v50 + 67;
  STACK[0x360] = (unint64_t)(v50 + 0x66120974E5D2819);
  v50[99] = 0x58E1D0421A6BCA3FLL;
  v50[100] = v50 + 101;
  STACK[0x368] = (unint64_t)(v50 + 0x66120974E5D283BLL);
  v50[133] = 0x58E1D0421A6BCA3FLL;
  v50[134] = v50 + 135;
  STACK[0x370] = (unint64_t)(v50 + 0x66120974E5D285DLL);
  v50[167] = 0x58E1D0421A6BCA3FLL;
  v50[168] = v50 + 169;
  STACK[0x388] = (unint64_t)(v50 + 0x66120974E5D287FLL);
  unsigned int v52 = -2098704511 - (v47 | 0x82E84F81) + (v47 | 0x7D17B07E);
  int v53 = v44 << (((a43 + 65) | 0x5A) ^ 0xDB);
  *(void *)(v49 - 192) = v50 + 0x66120974E5D27F7;
  int v54 = 1734042137 * (v52 ^ 0x21D97333);
  LODWORD(STACK[0x390]) = a43 - 208;
  *(_DWORD *)(v49 - 180) = (v44 ^ 0xC18417D1) - v54 - 216187008 + (v53 & 0x7FEFC9BE ^ 0x7CE7C01C);
  uint64_t v55 = *(void *)(v43 + 64) + 4;
  *(_DWORD *)(v49 - 168) = a43 - 208 - v54;
  *(void *)(v49 - 176) = v55;
  (*(void (**)(uint64_t))(v48 + a36))(v49 - 192);
  uint64_t v56 = v55 + v46;
  LODWORD(STACK[0x358]) = v53;
  int v57 = 1734042137 * ((((2 * (v49 - 192)) | 0x4C079F5A) - (v49 - 192) - 637783981) ^ 0x7ACD0CE0);
  *(_DWORD *)(v49 - 168) = a43 - 208 - v57;
  *(_DWORD *)(v49 - 180) = (v44 ^ 0xC9EE5DD1) - v57 - 76057216 + (v53 & 0x6F3B5DBE ^ 0x6C23441C);
  *(void *)(v49 - 192) = STACK[0x360];
  *(void *)(v49 - 176) = v56;
  (*(void (**)(uint64_t))(v48 + a36))(v49 - 192);
  int v58 = (void *)(v49 - 192);
  int v59 = 1734042137 * ((v49 - 1566781942 - 2 * ((v49 - 192) & 0xA29CCECA)) ^ 0xFE520D87);
  v58[2] = v56 + v46;
  int v60 = STACK[0x390];
  *(_DWORD *)(v49 - 180) = (v44 ^ 0xC1E41CD1) - v59 - 209898368 + (v53 & 0x7F2FDFBE ^ 0x7C27C61C);
  *(_DWORD *)(v49 - 168) = v60 - v59;
  *int v58 = STACK[0x368];
  (*(void (**)(uint64_t))(v48 + a36))(v49 - 192);
  uint64_t v61 = v56 + v46 + v46;
  int v62 = STACK[0x358];
  int v63 = 1734042137 * ((v49 - 192) ^ 0x5CCEC34D);
  *(_DWORD *)(v49 - 168) = v60 - v63;
  *(_DWORD *)(v49 - 180) = (v44 ^ 0x494E05D1) - v63 + 2077699456 + (v62 & 0x6E7BEDBE ^ 0x6C63E41C);
  unint64_t v64 = (void *)(v49 - 192);
  v64[2] = v61;
  *unint64_t v64 = STACK[0x370];
  (*(void (**)(uint64_t))(v48 + a36))(v49 - 192);
  int v65 = 1734042137 * ((v49 + 2014509112 - 2 * ((v49 - 192) & 0x7812F8F8)) ^ 0x24DC3BB5);
  uint64_t v66 = (void *)(v49 - 192);
  *uint64_t v66 = STACK[0x388];
  v66[2] = v61 + v46;
  int v67 = LODWORD(STACK[0x390]) - v65;
  *(_DWORD *)(v49 - 180) = (v44 ^ 0xCD4CDFF1) - v65 - 2754720 + (v62 & 0x667E59FE ^ 0x6466401C);
  *(_DWORD *)(v49 - 168) = v67;
  (*(void (**)(uint64_t))(v48 + a36))(v49 - 192);
  unint64_t v68 = STACK[0x490];
  STACK[0x530] = (v45 - 1145886373);
  return (*(uint64_t (**)(unint64_t))(v48
                                                     + 8
                                                     * (((v45 == 1145886373)
                                                       * (((((a43 - 703) | 0x5A) + 294) | 0xCE) - 690)) ^ (((a43 - 703) | 0x5A) + 500))))(v68);
}

uint64_t sub_10059DD80(uint64_t a1, uint64_t a2, char a3, char a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((*(unsigned char *)(v7 + a2)
                                                   - **(unsigned char **)(v6 + 8
                                                                     * (((2 * ((v5 - 642) | 0x200)) ^ 0x496) - 141))
                                                   + ((((2 * (v5 + 126)) ^ 0x96) + a3) & a4 ^ 0x83)) == 44)
                                * (((((2 * ((v5 - 642) | 0x200)) ^ 0x496) - 74) | a5) - 415)) ^ (((2
                                                                                                 * ((v5 - 642) | 0x200)) ^ 0x496)
                                                                                               + 179))))();
}

uint64_t sub_10059DDD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47,int a48,unsigned int a49,int a50,unsigned int a51,unsigned int a52,int a53,unsigned __int8 a54)
{
  return sub_1005C6F3C(a4, a5, a6, a7, a8, (const char *)(a7 + (v54 + a5 + a30)), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_10059DDE8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((259 * (v1 == v3 + LODWORD(STACK[0x228]) - 680)) ^ (v0 + 941))))();
}

uint64_t sub_10059DE1C()
{
  return sub_10059DE28();
}

uint64_t sub_10059DE28@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W8>, int8x16_t a4@<Q1>, int8x16_t a5@<Q3>)
{
  int8x16_t v11 = *(int8x16_t *)(v8 + (a3 + a1 + v5));
  *(int8x16_t *)(v6 + v5) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a5)), a4);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v5 != 48) * a2) ^ (v10 + v7 - 354))))();
}

uint64_t sub_10059DE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, unsigned __int8 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,unsigned int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  if (a26 < 0x697286F0 != (a31 - 28122521) < 0x697286F0) {
    BOOL v32 = (a31 - 28122521) < 0x697286F0;
  }
  else {
    BOOL v32 = a31 - 28122521 > a26;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * ((((a8 ^ v32) & 1) * ((a5 ^ 0x2C5) - 758)) ^ (a5 + 1473))))();
}

void sub_10059DE7C(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_10059DF70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * ((115
                                                                        * (v9 >= (((348 * (a8 ^ 0x512) - 980) | 0x21C) ^ 0x24Cu))) ^ a8)))(a1, a2, a3, 0);
}

uint64_t sub_10059DFB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, unsigned int a7@<W7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if ((v63 - 1962456896) > 0x18 || ((1 << (v63 - 64)) & 0x1000581) == 0) {
    return sub_1005B4BF0(a1, a2, 25995472, a3, a4, a5, a6, a7);
  }
  uint64_t v70 = a8 & 0xFFFFFFFFFFFFFFFLL;
  if (!v70) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v66
  }
                                                                + 8
                                                                * ((((a21 - 413196212) < 0x10)
                                                                  * (v68 + v65 + 1497)) ^ (v68 + v65))))(a1, a2, 25995472);
  if (v70 != 3) {
    return (*(uint64_t (**)(void))(v66
  }
                                + 8
                                * ((172
                                  * (((v68 + 228434047) & 0x2CEA2BD ^ 0x9022410DC2A34A63)
                                   + ((a18 - 1145886373) ^ 0x6FDDBEF29D7AF1E9)
                                   + ((2 * (a18 - 1145886373)) & 0x13AF5E3D2) != 1612594375)) ^ (v65 + v68 - 64))))();
  STACK[0x200] = a17 + (v67 - 628398183);
  uint64_t v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v64 + 48 * a8 + 8))(a11, a10);
  uint64_t v72 = v71 - 25955570 - (((v68 + v65) ^ 0xFCE7E6A1) & (2 * v71));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66 + 8 * ((431 * (v72 == -25955570)) ^ (v68 + v65))))(v71, v73, v72, v74, v75, v76, v77, 4269011726, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_10059E1D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(_DWORD *)(*(void *)(v12 - 0x330904BA72E93EB8) + 4 * (v10 + v8 + 1)) = a8;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v10 + v8 >= 0) * ((v9 - 108) ^ 0x4CB)) ^ v9)))();
}

uint64_t sub_10059E220(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(a2 + v4) = *(void *)(v6 + v4);
  return (*(uint64_t (**)(void))(v7 + 8 * (((a3 == 0) * v3) ^ v5)))();
}

uint64_t sub_10059E250@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  BOOL v27 = v20 < a2;
  *(&a20 + (v25 - 205710452 + a3)) = *(unsigned char *)(v26 + (v23 + a1))
                                                 - ((2 * *(unsigned char *)(v26 + (v23 + a1))) & 0xA4)
                                                 + 82;
  unsigned int v28 = v23 + 1 + v22;
  int v29 = v27 ^ (v28 < a2);
  BOOL v30 = v28 < v20;
  if (!v29) {
    BOOL v27 = v30;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * ((!v27 * v21) ^ v25)))();
}

uint64_t sub_10059E2D0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v8 = v3 - 1;
  *(void *)(v6 + 224) = v8;
  *(unsigned char *)(a1 + v8) = ((v2 - 34) ^ v4) * (((a2 + 12) ^ v5) + v2);
  return (*(uint64_t (**)(void))(v7 + 8 * ((28 * (*(void *)(v6 + 224) == 0)) ^ a2)))();
}

uint64_t sub_10059E31C@<X0>(int a1@<W8>)
{
  uint64_t v4 = v1;
  unint64_t v5 = v2 + v1 + (a1 ^ 0x5C0u) + (a1 ^ 0x37Bu) - 2226;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((499 * (v5 - v4 + 1640087656 > 7)) ^ a1)))();
}

uint64_t sub_10059E384@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W5>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  int v44 = *(_DWORD *)(v43 + 4 * (v40 + 1));
  *(_DWORD *)(v43 + 4 * v40) = *(_DWORD *)(v43 + 4 * ((((a4 - 740) | 0x108u) ^ 0xE1) + v40)) ^ a3 ^ *((_DWORD *)&a40 + (v44 & 1)) ^ (v42 + (((v41 & 0x80000000 | v44 & 0x7FFFFFFF) >> 1) ^ a2) - 2 * ((((v41 & 0x80000000 | v44 & 0x7FFFFFFF) >> 1) ^ a2) & (v42 + 12) ^ ((v41 & 0x80000000 | v44 & 0x7FFFFFFF) >> 1) & 0xC));
  return (*(uint64_t (**)(void))(a1 + 8 * ((1140 * (v40 == 226)) ^ a4)))();
}

uint64_t sub_10059E410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int32x4_t a9, int32x4_t a10, int32x4_t a11, int32x4_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v50 = BYTE4(a40) ^ 0xB9;
  if (v50 == 1)
  {
    BYTE4(a35) = ((8 * a37) ^ 0x68) + ((v49 + v48 + 31) ^ 0xCD) - ((2 * ((8 * a37) ^ 0x68)) & 0xAA);
    BYTE5(a35) = ((a37 >> 5) ^ 0xFA)
               - 2 * (((a37 >> 5) ^ 0xFA) & 0x56 ^ (a37 >> 5) & 4)
               + 82;
    BYTE6(a35) = ((a37 >> 13) ^ 0xA4) - ((a37 >> 12) & 0xA4) + 82;
    HIBYTE(a35) = ((a37 >> 21) ^ 0x42)
                - 2 * (((a37 >> 21) ^ 0x42) & 0x56 ^ (a37 >> 21) & 4)
                + 82;
    HIDWORD(v53) = ~HIDWORD(a36);
    LODWORD(v53) = a37 ^ 0xC0000000;
    LOBYTE(a36) = (v53 >> 29) - ((2 * (v53 >> 29)) & 0xA4) + 82;
    BYTE1(a36) = ((HIDWORD(a36) >> 5) ^ 0x42)
               - 2 * (((HIDWORD(a36) >> 5) ^ 0x42) & 0x53 ^ ((a36 & 0x2000000000) != 0))
               + 82;
    BYTE2(a36) = ((HIDWORD(a36) >> 13) ^ 0xB3) - ((2 * ((HIDWORD(a36) >> 13) ^ 0xB3)) & 0xA4) + 82;
    int v52 = ((HIDWORD(a36) >> 21) ^ 0x15) + (~(2 * ((HIDWORD(a36) >> 21) ^ 0x15)) | 0x5B) + 83;
    goto LABEL_5;
  }
  if (v50 == 2)
  {
    HIDWORD(v51) = ~HIDWORD(a36);
    LODWORD(v51) = a37 ^ 0xC0000000;
    BYTE4(a35) = ((HIDWORD(a36) >> 21) ^ 0x15) - ((2 * ((HIDWORD(a36) >> 21) ^ 0x15)) & 0xA4) + 82;
    BYTE5(a35) = ((HIDWORD(a36) >> 13) ^ 0xB3)
               - ((((HIDWORD(a36) >> 13) ^ 0xFFFFFFB3) << (v48 ^ (v48 - 101) ^ 0x9E)) & 0xA4)
               + 82;
    BYTE6(a35) = ((HIDWORD(a36) >> 5) ^ 0x42) - 2 * (((HIDWORD(a36) >> 5) ^ 0x42) & 0x57 ^ (HIDWORD(a36) >> 5) & 5) + 82;
    HIBYTE(a35) = (v51 >> 29) - ((2 * (v51 >> 29)) & 0xA4) + 82;
    LOBYTE(a36) = ((a37 >> 21) ^ 0x42) - ((2 * ((a37 >> 21) ^ 0x42)) & 0xA4) + 82;
    BYTE1(a36) = ((a37 >> 13) ^ 0xA4) - ((a37 >> 12) & 0xA4) + 82;
    BYTE2(a36) = ((a37 >> 5) ^ 0xFA) - ((2 * ((a37 >> 5) ^ 0xFA)) & 0xA4) + 82;
    LOBYTE(v52) = ((8 * a37) ^ 0x68) - ((2 * ((8 * a37) ^ 0x68)) & 0xA0) + 82;
LABEL_5:
    BYTE3(a36) = v52;
  }
  return sub_100594164(a1, a2, a3, a4, a5, a6, a7, a8, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a9,
           a10,
           a11,
           a12);
}

uint64_t sub_10059E640(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  STACK[0x3E0] = *(void *)(v7 + 8 * ((int)v6 - 187));
  return sub_1005A8BA8(a1, v6, a3, a4, a5, a6, 2262374850);
}

uint64_t sub_10059E650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23)
{
  if (a23 < 0xE6989C7D != v24 + 1856574929 < ((a6 + a5 + 361) ^ 0xE6989DFA)) {
    BOOL v25 = v24 + 1856574929 < ((a6 + a5 + 361) ^ 0xE6989DFA);
  }
  else {
    BOOL v25 = v24 + 1856574929 > a23;
  }
  return (*(uint64_t (**)(void))(v23 + 8 * ((v25 * (a6 + a5 - 1)) ^ (a6 + a5 + 867))))();
}

uint64_t sub_10059E6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,char a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  if (a28 == 2)
  {
    BOOL v34 = LODWORD(STACK[0x2C4]) == ((a5 - 63) | 0x340) + 394386057;
    return (*(uint64_t (**)(uint64_t))(v32 + 8 * (((4 * v34) | (16 * v34)) ^ (a5 + 1733))))(a16);
  }
  else if (a28 == 1)
  {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32
                                                                + 8
                                                                * (((LODWORD(STACK[0x2C4]) == 394386889)
                                                                  * ((a5 ^ 0x307) - 704)) ^ (a5 + 761))))(a1, a2, a16);
  }
  else
  {
    uint64_t v35 = a5 ^ 0x2F5u;
    unint64_t v36 = ((unint64_t)&a32 ^ 0xF7BFFFFCF2FA7DEBLL)
        + 0x5FFF371B8FFFDB80
        + ((v35 - 0x108000061A0B06FALL) & (2 * (void)&a32));
    LOBYTE(STACK[0x2C3]) = ((v36 - 107) ^ 0xBA) * (v36 - 90);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v32 + 8 * (int)v35))(a1, a2, a16);
  }
}

uint64_t sub_10059E838@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W6>, uint64_t a7@<X8>)
{
  int v17 = (v8 ^ v13)
      + v16
      + ((a2 ^ v13) & (a1 ^ v13) | (a2 ^ ((a6 ^ 5) + 2032592304)) & (v7 ^ v13))
      + *(_DWORD *)(a4 + 4 * (a7 + v12))
      + (*(_DWORD *)(v11 + 4 * (*(unsigned char *)(a3 + a7 + v12) - 58)) ^ v15);
  unsigned int v18 = (v17 + v13 - (v10 & (2 * v17))) ^ v13;
  int v19 = ((v18 << (*(unsigned char *)(a5 + a7 + v12) - 102)) | (v18 >> (102 - *(unsigned char *)(a5 + a7 + v12)))) + (a1 ^ v13);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a7 + 1 == v14 + 16) | (4 * (a7 + 1 == v14 + 16))) ^ a6)))(v19 + v13 - (v10 & (2 * v19)));
}

uint64_t sub_10059E90C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0;
}

uint64_t sub_10059E924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29
                                                              + 8
                                                              * ((127 * ((a29 - 2014820791) > 0xFFFFFFFA)) ^ (a5 + 1895))))(a1, a2, a3);
}

uint64_t sub_10059E97C@<X0>(uint64_t a1@<X6>, unsigned int a2@<W8>, __n128 a3@<Q0>)
{
  int v7 = (char *)&STACK[0x630] + v4 + (a2 ^ 0xA04095D3DC9F8E99);
  *(_DWORD *)int v7 = 600116604;
  *((void *)v7 + 1) = 0;
  *((_DWORD *)v7 + 4) = 2095721610;
  *((_DWORD *)v7 + 6) = 1145886373;
  *((void *)v7 + 4) = 0;
  *((_DWORD *)v7 + 10) = 1145886373;
  v5[11] = v7 + 40;
  *((void *)v7 + 6) = 0;
  *((_DWORD *)v7 + 14) = 1145886373;
  v5[34] = v7 + 48;
  v5[31] = v7 + 56;
  *((void *)v7 + 8) = 0;
  v5[40] = v7 + 64;
  *((_DWORD *)v7 + 18) = 1145886373;
  *((void *)v7 + 10) = 0;
  long long v5[4] = v7 + 72;
  STACK[0x420] = (unint64_t)(v7 + 80);
  v7[88] = 1;
  *(_DWORD *)a1 = 600116604;
  *(__n128 *)(a1 + 4) = a3;
  *(_DWORD *)(a1 + 28) = 780687131;
  STACK[0x2C8] = a1 + 28;
  *(_DWORD *)(a1 + 232) = 780687131;
  STACK[0x2C0] = a1 + 232;
  *(_DWORD *)(a1 + 20) = 0;
  *(_DWORD *)(a1 + 24) = 1145886373;
  *(__n128 *)(a1 + 436) = a3;
  *(__n128 *)(a1 + 452) = a3;
  *(void *)(a1 + 468) = 0;
  strcpy((char *)(a1 + 1128), "RRRRRRRRRRRRRRRRRRRR");
  *(unsigned char *)(a1 + 1149) = 0;
  *(_WORD *)(a1 + 1150) = 0;
  *(void *)(a1 + 1152) = 0;
  *(void *)(a1 + 1160) = 0;
  *(__n128 *)(a1 + 1168) = a3;
  *(__n128 *)(a1 + 1184) = a3;
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((29 * (((((v3 - 281) | 0x104u) - 810) ^ 0x1DALL) != 256)) ^ ((v3 - 281) | 0x104))))();
}

uint64_t sub_10059EAD4(unsigned int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1189 * (((((a1 + 509) | 0x2A0) ^ (a1 + 1205)) & v1) == 0)) ^ a1)))();
}

uint64_t sub_10059EB10(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))*(&off_100991B70 + ((38 * (*(_DWORD *)(a2 + 4) != 1145886386)) ^ 0x712u)))(4294925278);
}

void sub_10059EB54(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_10059EBF0()
{
  LODWORD(STACK[0x5D8]) = 25995482;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((116
                                * ((((v0 + 806) ^ (v0 + 250) ^ (*(void *)(v1 + 120) == 0xB19902B9219B199)) & 1) == 0)) ^ (v0 + 838))))();
}

uint64_t sub_10059EC0C()
{
  return 4294925273;
}

uint64_t sub_10059EC14@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X6>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,char a30)
{
  BOOL v35 = a5 < a1;
  *(&a30 + (v31 - 1888371398)) = *(unsigned char *)(a4 + (v32 + a2))
                                             + (v33 ^ 0xC0)
                                             - ((2 * *(unsigned char *)(a4 + (v32 + a2))) & 0xA4);
  unsigned int v36 = v32 + 1 + a3;
  int v37 = v35 ^ (v36 < a1);
  BOOL v38 = v36 < a5;
  if (!v37) {
    BOOL v35 = v38;
  }
  return (*(uint64_t (**)(void))(v34 + 8 * ((!v35 * v30) ^ v33)))();
}

void sub_10059EC94()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1414)))();
  JUMPOUT(0x10059ECB0);
}

uint64_t sub_10059ECC8(uint64_t a1, int a2)
{
  BOOL v5 = a2 + v3 + v2 - 1026806820 >= ((v2 - 1456059448) & 0x56C9B2EB ^ 0xE4u);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v5 | (8 * v5)) ^ v2)))();
}

uint64_t sub_10059ED28(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v6 & (2 * (*(unsigned __int8 *)(a2 + 2) - 38)))
                                 + ((*(unsigned __int8 *)(a2 + 2) - 38) ^ v5) == v5)
                                * (a3 + ((v4 + 41976771) | 0x4C582144) + 1862)) ^ v4)))();
}

uint64_t sub_10059ED7C(uint64_t a1, int a2)
{
  BOOL v8 = v2 == ((7 * (v3 ^ 0x1DE)) ^ (v6 + 161)) && v4 != a2;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v8 * (v3 + 857)) ^ v3)))();
}

uint64_t sub_10059EDC8@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W5>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 ^ (v4 + 1407) ^ (v7 + 641)) + a3) = *(unsigned char *)(v6
                                                                                 + (a2 ^ (v4 + 1407) ^ (v7 + 641))
                                                                                 + a3);
  return (*(uint64_t (**)(void))(v8 + 8 * ((11 * (a3 - 1 != a4)) ^ (v5 + a2 + 678))))();
}

uint64_t sub_10059EE1C()
{
  STACK[0x328] = v1 - 112;
  STACK[0x438] = v1 - 112;
  return v0();
}

uint64_t sub_10059EE3C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v6 + (v5 + 798 + v1 + v2)) = *(unsigned char *)(a1 + (v5 + 798 + v1 + v2));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v1 - 1 == v4) * v3) ^ v5)))();
}

uint64_t sub_10059EE70()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ v0) == v0)
                                * ((v2 ^ 0x3EF) + 971)) ^ v2)))();
}

uint64_t sub_10059EEAC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1227
                                * ((((*(unsigned __int8 *)(a2 + 5) - 242) << (v3 ^ 0x4C)) & v5)
                                 + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_10059EEF0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_10059EF08(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  unsigned int v37 = (a4 + 1737972788) & 0x9868A3FD;
  int v38 = 1759421093 * ((((v36 - 128) | 0x4697CBA3) + (~(v36 - 128) | 0xB968345C)) ^ 0xF5EA7BF6);
  *(void *)(v36 - 128) = a11;
  *(_DWORD *)(v36 - 120) = v38 + a4 + 783;
  *(_DWORD *)(v36 - 116) = v38 + a14 + 38749589;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (a4 + 2063)))(v36 - 128);
  uint64_t v40 = a35 & 0x3F;
  *(&a26 + (v40 ^ 0xD)) = -46;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * ((1847 * ((v40 ^ 0xD) > v37 - 41)) ^ a4)))(v39);
}

uint64_t sub_10059F028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_10059F050(a1, 646, 173, a4, 1926287901);
}

uint64_t sub_10059F050@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + 3 >= v1) | (2 * (v2 + 3 >= v1))) ^ a1)))();
}

uint64_t sub_10059F0A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = (1178560073 * (((&a13 | 0x5D0CF361) - (&a13 & 0x5D0CF361)) ^ 0x6F1AF321)) ^ 0x650810FC;
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v15 + 17144))(&a13);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((712 * (a14 == v14)) ^ 0xCBu)))(v16);
}

uint64_t sub_10059F134(uint64_t result)
{
  unint64_t v1 = 1759421093
     * ((-2 - ((~result | 0xA799CC8FED74AA68) + (result | 0x58663370128B5597))) ^ 0x89270DDF5E091A3CLL);
  int v2 = *(_DWORD *)(result + 32) ^ v1;
  int v3 = *(_DWORD *)(result + 36) + v1;
  unint64_t v4 = *(void *)(result + 8) + v1;
  int v5 = *(_DWORD *)(result + 40) ^ v1;
  int v6 = *(_DWORD *)(result + 16) - v1;
  unint64_t v7 = *(void *)(result + 24) ^ v1;
  BOOL v8 = v4 >= v7;
  BOOL v9 = v4 != v7;
  int v10 = v8;
  if (v2) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v11 = v5;
  }
  else {
    int v11 = v3;
  }
  *(_DWORD *)(result + 44) = v11 ^ v6;
  return result;
}

void sub_10059F1DC(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_10059F250(uint64_t a1)
{
  (*(uint64_t (**)(void))(v1 + 17648))();
  (*(void (**)(uint64_t))(v1 + 16584))(a1);
  JUMPOUT(0x10059F29CLL);
}

uint64_t sub_10059F2B0@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ (123 * ((unint64_t)(a2 - v2 - 1452) < 0x20)))))();
}

uint64_t sub_10059F2DC@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unsigned int v5 = (a2 + 214912702) & 0xF330AFFE;
  (*(void (**)(void, uint64_t, void))(v3 + 8 * (a2 ^ 0xA51)))(*v7, a1, (v5 ^ 0xBEA65C1E) + v8);
  *(_DWORD *)(v4 - 192) = (v5 + 426522799) ^ (460628867
                                            * (((((v4 - 192) | 0x64BC5B96) ^ 0xFFFFFFFE) - (~(v4 - 192) | 0x9B43A469)) ^ 0xD7D52614));
  uint64_t result = (*(uint64_t (**)(uint64_t))(v3 + 8 * (int)(v5 ^ 0x8A2)))(v4 - 192);
  *(_DWORD *)(v2 + 28) = v9;
  return result;
}

uint64_t sub_10059F3E0()
{
  return (*(uint64_t (**)(uint64_t, void))(v3
                                                    + 8
                                                    * ((((((v2 - 928) | 0xA) ^ 0x33) + (v2 ^ 0x64F)) * (v0 == v1)) ^ v2)))(82, LODWORD(STACK[0x3C8]));
}

uint64_t sub_10059F428()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((*(void *)(v1 + 24) == 0x35AD11BEDFA3F43ALL) * (29 * (v0 ^ 0xD7) - 177)) ^ v0)))();
}

uint64_t sub_10059F474(uint64_t result)
{
  *(_DWORD *)(result + 16) = -314637277;
  return result;
}

uint64_t *sub_10059F484@<X0>(uint64_t *result@<X0>, int a2@<W2>, _DWORD *a3@<X8>)
{
  uint64_t v8 = result[6];
  uint64_t v10 = *result;
  uint64_t v9 = result[1];
  *a3 = ((v6 - 752) ^ 0xA14A7A65) + v5;
  *(_DWORD *)(v10 - 0x10F2F6EBA8F7D28) = v4;
  *(_DWORD *)(v8 - 0x6A4735A87A2643E5) = a2;
  *(void *)(v9 - 0x4019A21BF4676349) = v3 + (v7 - 1071466684);
  *((_DWORD *)result + 8) = -25955570;
  return result;
}

uint64_t sub_10059F504(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, int a6)
{
  int8x16x4_t v17 = vld4q_s8(a4);
  uint8x16_t v7 = (uint8x16_t)veorq_s8(v17.val[1], v6);
  _Q17 = vmovl_u8(*(uint8x8_t *)v7.i8);
  _Q16 = vmovl_high_u8(v7);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  return sub_1005C98DC(a1, a2, a3, (uint64_t)a4, a6 - 948);
}

void sub_10059F614()
{
  LODWORD(STACK[0x418]) = v0 - 161;
  JUMPOUT(0x10058CA68);
}

void sub_10059F628(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0x2F65CEEC2F65CEECLL;
  *(void *)(a1 + 16) = 0x878035E41FDC618ALL;
  *(_DWORD *)(a1 + 24) = -25955570;
  *(void *)(v2 - 0x130F29621C6D0938) = a1 + 0xD547898781B11C0;
  JUMPOUT(0x10059F688);
}

uint64_t sub_10059F6A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, unint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unint64_t a23)
{
  BOOL v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * a8);
  int v28 = STACK[0x2B4];
  int v29 = STACK[0x2B4];
  int v30 = STACK[0x2B8];
  int v31 = STACK[0x2BC];
  int v32 = STACK[0x2B8];
  uint64_t v33 = LODWORD(STACK[0x2BC]);
  int v34 = LOBYTE(STACK[0x2C8]) ^ 0xB9;
  if (v34 == 2)
  {
    BOOL v39 = a3 >= a23 || v26 >= a3 + 64;
    return (*(uint64_t (**)(uint64_t, void, void))(v24
                                                              + 8
                                                              * (int)(((((a4 + 3) | 0x3B1) - 938) * v39) | (a4 + 1635))))(v33, LODWORD(STACK[0x2C0]), LODWORD(STACK[0x2C0]));
  }
  else if (v34 == 1)
  {
    BOOL v36 = a3 < a23 && v26 < a3 + 64;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v24
                                                       + 8
                                                       * ((971 * ((v36 ^ (a4 + 86)) & 1)) ^ ((int)a4 + 442))))(v33, 1166549779);
  }
  else
  {
    LODWORD(STACK[0x2B0]) = 2 * (LODWORD(STACK[0x2B0]) ^ v25) + v25 - (v23 & (4 * (LODWORD(STACK[0x2B0]) ^ v25)));
    LODWORD(STACK[0x2B4]) = (v29 ^ v25) + (v28 ^ v25) + v25 - (v23 & (2 * ((v29 ^ v25) + (v28 ^ v25))));
    LODWORD(STACK[0x2B8]) = (v32 ^ v25) + (v30 ^ v25) + v25 - (v23 & (2 * ((v32 ^ v25) + (v30 ^ v25))));
    LODWORD(STACK[0x2BC]) = (v33 ^ v25) + (v31 ^ v25) + v25 - (v23 & (2 * ((v33 ^ v25) + (v31 ^ v25))));
    return v27(v33, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
  }
}

void sub_10059F79C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x2C0]) = v9
                        + (a6 ^ v9)
                        + (a2 ^ v9)
                        - (v8 & (2 * ((a6 ^ v9) + (a2 ^ v9))))
                        + ((a8 - 877127085) & 0x3447E37F)
                        - 63;
  JUMPOUT(0x10059F7F8);
}

void sub_10059F87C()
{
}

void sub_10059F898()
{
}

void sub_10059F918(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, char a10)
{
  a10 = 73 * ((-2 - ((~&a9 | 0x95) + (&a9 | 0x6A))) ^ 0xD5) + 46;
  a9 = (a1 + 757) ^ (1178560073
                   * ((-2 - ((~&a9 | 0xECF3EB95) + (&a9 | 0x130C146A))) ^ 0xDEE5EBD5));
  (*(void (**)(unsigned int *))(v10 + 8 * (a1 + 1443)))(&a9);
  JUMPOUT(0x100598290);
}

uint64_t sub_10059F988@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v9 = (*(unsigned __int8 *)(a4 + 1128) ^ a1) - *(unsigned __int8 *)(v5 + 1148);
  return (*(uint64_t (**)(void))(v8 + 8 * ((19 * (v4 + (v9 ^ v6) + (v7 & (2 * v9)) + a2 != a3)) ^ v4)))();
}

uint64_t sub_10059F9E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v26 - 112) = a22;
  *(void *)(v26 - 128) = v22;
  *(_DWORD *)(v26 - 120) = (v24 - 483) ^ (460628867
                                        * ((((v26 - 128) | 0x6C4CA40B) + (~(v26 - 128) | 0x93B35BF4)) ^ 0x20DA2677));
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 ^ 0xEF0)))(v26 - 128);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((v25 == 145 * (v24 ^ 0x6A3) + 400754913) * (10 * (v24 ^ 0x638) - 1091)) ^ v24)))(v27);
}

uint64_t sub_10059FAA8(uint64_t a1, int a2, int a3)
{
  BOOL v6 = v3 > 0x52CA497A;
  if (v6 == a2 - 1354754143 < (int)(a3 ^ 0xAD35B647)) {
    BOOL v6 = a2 - 1354754143 < v5;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((890 * v6) ^ a3)))();
}

uint64_t sub_10059FB1C()
{
  (*(void (**)(unint64_t))(v1 + 8 * (v0 ^ 0x8C3)))(STACK[0x258]);
  return sub_1005C88D4();
}

uint64_t sub_10059FB4C()
{
  *v0 ^= STACK[0x3C0];
  return sub_10059FB70();
}

uint64_t sub_10059FB70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((44 * (v6 + ((2 * v5) ^ 0x446) - 219 == (((v5 ^ 0x24C) * a5) ^ 0x756BCC4A))) ^ v5)))();
}

uint64_t sub_10059FBC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = v3 - 1195;
  unsigned int v6 = v5 ^ 0xACB3FD5A;
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 443271743;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 1491193922;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v7 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v4);
  unsigned int v8 = 460628867 * (((&v10 | 0x4CBFC596) - (&v10 & 0x4CBFC596)) ^ 0x2947EB);
  uint64_t v12 = *(void *)(a1 + 96) + 0x330904BA72E941E0;
  uint64_t v10 = v7;
  unsigned int v13 = v8 + v4 - 250792927;
  int v11 = v8 + v5 - 5;
  (*(void (**)(uint64_t *))(a3 + 8 * (v5 ^ 0xA53)))(&v10);
  return v6 + 87786463 + v14;
}

uint64_t sub_10059FCE4()
{
  unsigned int v4 = ((v3 - 18) ^ 0xA36F907B ^ ((v3 + 173) | 5)) + v2;
  BOOL v5 = v4 < 0xC8E42FA4;
  BOOL v6 = v4 > v0 + 2143308871;
  if ((v0 + 2143308871) < 0xC8E42FA4 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * (v3 ^ (2 * !v6))))();
}

void sub_10059FD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v14 = 1225351577 * (((((v13 - 144) | 0x7D887A12) ^ 0xFFFFFFFE) - (~(v13 - 144) | 0x827785ED)) ^ 0xA1ED5DFB);
  *(void *)(v13 - 128) = a9;
  *(void *)(v13 - 144) = v11;
  *(_DWORD *)(v13 - 120) = v14 + v12 + 1262;
  *(_DWORD *)(v13 - 136) = v14 + v9 + 599068362 + (v12 ^ 0x481);
  (*(void (**)(uint64_t))(v10 + 8 * (v12 ^ 0x8E6)))(v13 - 144);
  sub_1005C3E7C();
}

void sub_10059FDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  STACK[0x388] = v8;
  *(_DWORD *)(*(void *)(v10 + 432) + ((LODWORD(STACK[0x580]) + a8) & 0xFFFFFFFC)) = v9;
  JUMPOUT(0x1005B9B98);
}

uint64_t sub_10059FE1C(uint64_t a1, uint64_t a2)
{
  BOOL v6 = (*(unsigned char *)(v3 + 1 + a2) - *(unsigned char *)(v2 + 1)) != 236;
  return (*(uint64_t (**)(void))(v5 + 8 * (v6 | (32 * v6) | (v4 + 422))))();
}

uint64_t sub_10059FE2C@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 1013759711);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v4 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v5 + 2) ^ *(unsigned char *)((v8 & 0xF) + v6 + 4) ^ (119 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((252 * (a1 - 1 != v3)) ^ (a2 - 1884))))();
}

uint64_t sub_10059FE98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, unsigned int a8)
{
  int v17 = (v16 ^ a5) * a6;
  unint64_t v18 = a1 - 0x27CACE31CE66368DLL + (*(_DWORD *)(v9 + 4 * v10) ^ v11) + ((v17 + a7) & a8);
  *(_DWORD *)(v9 + 4 * v10) = v18 + (((v17 - 1279) | 0x38) ^ (v11 + 202)) - ((2 * v18) & 0x25432A3A);
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((v12 ^ HIDWORD(v18)) + (v13 & (v18 >> 31)) + v14 == 0x27CACE31CE66336ELL) * v15) ^ v17)))();
}

uint64_t sub_10059FEA8@<X0>(int a1@<W2>, int a2@<W8>)
{
  unint64_t v7 = STACK[0x390];
  *(_DWORD *)(v7 + 392) = a2;
  *(_DWORD *)(v7 + 396) = STACK[0x59C];
  *(void *)(v7 + 400) = STACK[0x478];
  *(_DWORD *)(v7 + 408) = ((v4 + 55) ^ 0x23C50DA4) - v5 + LODWORD(STACK[0x410]);
  *(void *)(v7 + 416) = STACK[0x388] + (v5 - 628398183);
  int v8 = (*(uint64_t (**)(unint64_t, unint64_t))(v2 + v3 * (uint64_t)a1 + 8))(STACK[0x328], STACK[0x260]);
  return (*(uint64_t (**)(__n128))(v6
                                           + 8
                                           * ((487 * (v8 - 25955570 - ((v4 - 51911301) & (2 * v8)) == -25955570)) ^ v4)))((__n128)0);
}

uint64_t sub_10059FF88()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v1 - 1163) ^ 0x2F4) + 229) * ((v2 + v0 + 680003653) > 7)) ^ v1)))();
}

uint64_t sub_10059FFD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = (v4 + 134364543 + v3 - v5 + 1676);
  *(void *)(a1 - 7 + v8) = *(void *)(v1 - 7 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 - (v2 & 0xFFFFFFF8) == -8) * ((v6 ^ 0x554) - 655)) ^ v6)))();
}

uint64_t sub_1005A0034(uint64_t a1, uint64_t a2, int a3)
{
  int v7 = *(_DWORD *)(v4 + v5 * (uint64_t)a3 + 36) + 2 * (v3 ^ 0xCC) + 996739344;
  BOOL v9 = v7 > 971438694 || v7 < SLODWORD(STACK[0x360]);
  return (*(uint64_t (**)(void))(v6 + 8 * ((1469 * v9) ^ v3)))();
}

uint64_t sub_1005A009C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  LODWORD(STACK[0x330]) = (a24 | ((HIDWORD(a27) ^ 0xC) << 24) | ((BYTE4(a28) ^ 0x92) << 16) | ((a26 ^ 0xEF) << (a30 ^ 0xA8))) ^ 0x8D6F3819;
  LODWORD(STACK[0x2C0]) = a27 ^ 0x1C25ACF0;
  LODWORD(STACK[0x360]) = ((a28 << 8) | (a25 << 24) | ((HIDWORD(a30) ^ 0xB) << 16) | HIDWORD(a26)) ^ 0x3B8C6FC9;
  LODWORD(STACK[0x388]) = ((((a29 ^ 0xD2) << 16) + ((HIDWORD(a24) ^ 0x1A) << 24)) | BYTE4(a25) | ((BYTE4(a29) ^ v59) << 8)) ^ 0x359C5B04;
  return sub_1005BB164(a1, a2, a3, a4, a5, a6, a7, a30 ^ 0x468, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59);
}

void sub_1005A0198()
{
}

uint64_t sub_1005A0218(uint64_t a1)
{
  v1.n128_u64[0] = 0xC7C7C7C7C7C7C7C7;
  v1.n128_u64[1] = 0xC7C7C7C7C7C7C7C7;
  return sub_1005A0238(a1, 1796, v1);
}

uint64_t sub_1005A0238(uint64_t a1, int a2, int8x16_t a3)
{
  uint64_t v11 = (v5 + v4 - v7);
  int8x16_t v12 = *(int8x16_t *)(v3 + v11 - 15);
  int8x16_t v13 = *(int8x16_t *)(v3 + v11 - 31);
  uint64_t v14 = a1 + v11;
  *(int8x16_t *)(v14 - 15) = vaddq_s8(v12, a3);
  *(int8x16_t *)(v14 - 31) = vaddq_s8(v13, a3);
  return (*(uint64_t (**)(void))(v10 + 8 * (((v7 + v8 - 446 == v6) * a2) ^ v9)))();
}

uint64_t sub_1005A0284()
{
  return sub_1005A0294();
}

uint64_t sub_1005A0294(int a1)
{
  uint64_t v10 = *(uint64_t (**)(void))(v8 + 8 * v2);
  uint64_t v11 = *v6;
  unsigned int v12 = v3 + a1;
  *(unsigned char *)(*v6 + v12) = (HIBYTE(v1) ^ 0xBE) + (v7 ^ (2 * ((HIBYTE(v1) ^ 0xBE) & 0x53 ^ HIBYTE(v1) & 1))) + 83;
  *(unsigned char *)(v11 + v12 + 1) = (v5 | ~(v1 >> 15)) + BYTE2(v1) + 83;
  *(unsigned char *)(v11 + v12 + 2) = (v4 ^ BYTE1(v1)) - (v9 & (2 * (v4 ^ BYTE1(v1)))) + 82;
  *(unsigned char *)(v11 + v12 + 3) = v1 ^ 0x66;
  return v10();
}

uint64_t sub_1005A0318()
{
  BOOL v4 = v1[1] != 0x3290093013CB9912 && (*v1 | v1[2]) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * (((v0 - 1391) | 0x190) - 982)) ^ v0)))();
}

uint64_t sub_1005A036C(uint64_t a1)
{
  uint64_t v7 = v3 - 2129655073 + v2 + ((v4 + 806) | 0x1C2u);
  long long v8 = *(_OWORD *)(v5 + v7 - 15);
  long long v9 = *(_OWORD *)(v5 + v7 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v4 + 249) | (4 * ((v1 & 0xFFFFFFE0) == 32)))))();
}

uint64_t sub_1005A03C8()
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v1 == ((((v0 + v2) & v3) ^ v4) & 0xFE)) * v5) ^ v0)))();
}

uint64_t sub_1005A03F4@<X0>(uint64_t a1@<X8>)
{
  int v6 = (v1 ^ 0x20E28024) + v3;
  unsigned int v7 = (**(_DWORD **)(a1 - 0x330904BA72E93EB8) ^ 0xED5E6AE2) + 1;
  **(_DWORD **)(a1 - 0x330904BA72E93EB8) = v7 + v2 - (((v1 + 528) ^ (v5 + 1144)) & (2 * v7));
  BOOL v8 = v6 < -469498483;
  if (v6 >= -469498483) {
    BOOL v8 = v6 > 1677985166;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((v1 - 289) ^ (8 * v8))))();
}

uint64_t sub_1005A04B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  uint64_t v46 = (v45 + 178);
  unint64_t v47 = STACK[0x330];
  STACK[0x390] = (unint64_t)&STACK[0x630] + STACK[0x330] + v46 - 0x5FBF6A2C23607948;
  STACK[0x3C0] = a45 + v47 + v46;
  return sub_1005A0500();
}

uint64_t sub_1005A0500@<X0>(uint64_t a1@<X8>)
{
  unsigned __int8 v4 = v1 - 117;
  int v5 = v1 + 991;
  if (a1) {
    BOOL v6 = v2 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  char v7 = v6;
  return (*(uint64_t (**)(void))(v3 + 8 * ((433 * ((v4 ^ v7) & 1)) ^ v5)))();
}

uint64_t sub_1005A0540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3;
  uint64_t v7 = a3 + v3;
  if ((unint64_t)(v7 + 1) > 0x38) {
    uint64_t v8 = v7 + 1;
  }
  else {
    uint64_t v8 = 56;
  }
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((1119688577 - v6 + v8 < ((v4 - 538) ^ 0x237uLL)) * (v4 - 1072)) ^ v4)))();
}

uint64_t sub_1005A05AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v26 = v22 + v21 + a1;
  unsigned int v27 = v26 + 11 * ((v23 - 368390872) & 0x15F5353D ^ 0x534);
  if (v27 <= 0x40) {
    unsigned int v27 = 64;
  }
  BOOL v28 = __CFADD__(v26 + 494, v24 + v27);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((13 * v28) ^ v23)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

void sub_1005A0620()
{
}

uint64_t sub_1005A093C@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W4>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  unsigned int v63 = (a3 & 0xA348D7DD) - 16;
  *(_DWORD *)(v62 - 120) = v59 + v63 - 971;
  v69.val[1].i64[0] = ((_BYTE)v59 + 1) & 0xF;
  v69.val[1].i64[1] = v59 & 0xF;
  v69.val[2].i64[0] = ((_BYTE)v59 - 1) & 0xF;
  v69.val[2].i64[1] = ((_BYTE)v59 + 14) & 0xF;
  v69.val[3].i64[0] = ((_BYTE)v59 + 13) & 0xF;
  v69.val[3].i64[1] = ((_BYTE)v59 + 12) & 0xF;
  v64.i64[0] = 0xADADADADADADADADLL;
  v64.i64[1] = 0xADADADADADADADADLL;
  uint64_t v65 = a2 + a1 + v60 - 465 + ((v63 - 701) | 0xC1);
  v69.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)v60 + 47 + ((v63 + 67) | 0xC1)) & 0xF;
  v69.val[0].i64[1] = *(_DWORD *)(v62 - 120) & 0xF;
  v66.i64[0] = vqtbl4q_s8(v69, (int8x16_t)xmmword_1007AA4D0).u64[0];
  v70.val[0].i64[1] = ((_BYTE)v59 + 10) & 0xF;
  v70.val[1].i64[1] = ((_BYTE)v59 + 8) & 0xF;
  v70.val[2].i64[1] = (v59 + 6) & 0xF;
  v70.val[3].i64[1] = ((_BYTE)v59 + 4) & 0xF;
  v70.val[0].i64[0] = ((_BYTE)v59 + 11) & 0xF;
  v70.val[1].i64[0] = ((_BYTE)v59 + 9) & 0xF;
  v70.val[2].i64[0] = ((_BYTE)v59 + 7) & 0xF;
  v70.val[3].i64[0] = ((_BYTE)v59 + 5) & 0xF;
  v66.i64[1] = vqtbl4q_s8(v70, (int8x16_t)xmmword_1007AA4D0).u64[0];
  int8x16_t v67 = vrev64q_s8(vmulq_s8(v66, v64));
  *(int8x16_t *)(a4 - 15 + v65) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v58 + (v65 & 0xF) - 15), *(int8x16_t *)(v55 - 15 + v65)), veorq_s8(*(int8x16_t *)((v65 & 0xF) + v56 - 13), *(int8x16_t *)((v65 & 0xF) + v57 - 10))), vextq_s8(v67, v67, 8uLL));
  return (*(uint64_t (**)(uint64_t))(a55 + 8 * (int)(v63 ^ (16 * ((v61 & 0xFFFFFFF0) != 16)))))(v61);
}

void sub_1005A0AB8()
{
}

uint64_t sub_1005A0AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  int v27 = (v20 - 954) | 0x2BE;
  *(void *)(v26 - 136) = v24;
  *(void *)(v26 - 128) = v24;
  *(_DWORD *)(v26 - 144) = v20
                         + 1759421093 * ((2 * ((v26 - 144) & 0x2598BA40) - (v26 - 144) + 1516717501) ^ 0xE91AF5E9)
                         + 769;
  *(void *)(v26 - 120) = v21;
  *(void *)(v26 - 112) = a18;
  *(void *)(v26 - 104) = v25;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v20 + 845)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (int)((((v23 + a20 + 453) > 0x7FFFFFFE)
                                                   * (((v27 + 239) ^ 0xFFFFFD1E) + (v27 ^ 0x5DA))) ^ (v27 + 356))))(v28);
}

uint64_t sub_1005A0B80()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((LODWORD(STACK[0x3C8]) ^ 0x2B8) + 141) * (v0 > 0xAE52BC90)) ^ (LODWORD(STACK[0x3C8])
                                                                                                + 834))))();
}

uint64_t sub_1005A0BC0(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v10 = a3 + (v7 ^ a4) + *(unsigned __int8 *)(a2 + 9) - 78;
  BOOL v12 = (v9 & (2 * v10)) + (v10 ^ v8) == v8 && (v4 + v5 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1493 * v12) ^ v7)))();
}

uint64_t sub_1005A0C14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = v4 - 1;
  *(void *)(v5 + 280) = v7;
  *(unsigned char *)(a1 + v7) = ((v3 + v2) ^ 0xBA) * (v3 + v2 + 17);
  return (*(uint64_t (**)(void))(v6 + 8 * ((29 * (*(void *)(v5 + 280) != 0)) ^ v1)))();
}

uint64_t sub_1005A0C1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  BOOL v11 = v8 - 978406322 < (int)(a8 + 626381037);
  if (a8 > 0x5AAA2F12 != v8 - 978406322 < -1521102611) {
    BOOL v11 = a8 > 0x5AAA2F12;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((29 * (((v9 + 1) ^ v11) & 1)) ^ v9)))();
}

void sub_1005A0CB0()
{
}

void sub_1005A0D24()
{
  *(void *)(v1 + 144) = *(void *)(v2 + 8 * (v0 - 217));
  JUMPOUT(0x1005B5078);
}

uint64_t sub_1005A0D38@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (int)((a1 + 1126208380) & 0xBCDF67FE ^ 0x36D)))();
}

uint64_t sub_1005A0DC0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v66 = *(unsigned __int8 *)(v64 - 0x399DE98F08C0F044) ^ 0xB9;
  if (v66 == 1)
  {
    unsigned int v73 = *(_DWORD *)(v64 - 0x399DE98F08C0F060);
    int v70 = a59 & 0x1D82ADF7;
    *(unsigned char *)(v64 - 0x399DE98F08C0F06CLL) = ((8 * v73) ^ 0x68) - ((2 * ((8 * v73) ^ 0x68)) & 0xAA) + 82;
    char v71 = -92;
    *(unsigned char *)(v64 - 0x399DE98F08C0F06BLL) = ((v73 >> 5) ^ 0xFA)
                                           - ((((v73 >> 5) ^ 0xFFFFFFFA) << ((a59 & 0xF7) - 100)) & 0xA4)
                                           + 82;
    *(unsigned char *)(v64 - 0x399DE98F08C0F06ALL) = ((v73 >> 13) ^ 0xA4) - ((v73 >> 12) & 0xA4) + 82;
    *(unsigned char *)(v64 - 0x399DE98F08C0F069) = ((v73 >> 21) ^ 0x42)
                                           - 2 * (((v73 >> 21) ^ 0x42) & 0x57 ^ (v73 >> 21) & 5)
                                           + 82;
    unsigned int v74 = *(_DWORD *)(v64 - 0x399DE98F08C0F064);
    HIDWORD(v75) = ~v74;
    LODWORD(v75) = v73 ^ 0xC0000000;
    *(unsigned char *)(v64 - 0x399DE98F08C0F068) = (v75 >> 29) + (v63 | ~(2 * (v75 >> 29))) + 83;
    *(unsigned char *)(v64 - 0x399DE98F08C0F067) = ((v74 >> 5) ^ 0x42) - ((2 * ((v74 >> 5) ^ 0x42)) & 0xA4) + 82;
    *(unsigned char *)(v64 - 0x399DE98F08C0F066) = ((v74 >> 13) ^ 0xB3) - ((2 * ((v74 >> 13) ^ 0xB3)) & 0xA4) + 82;
    unsigned int v72 = (v74 >> 21) ^ 0x15;
    goto LABEL_5;
  }
  int v67 = a2;
  if (v66 == 2)
  {
    unsigned int v68 = *(_DWORD *)(v64 - 0x399DE98F08C0F064);
    *(unsigned char *)(v64 - 0x399DE98F08C0F06CLL) = ((v68 >> 21) ^ 0x15) + (v63 | ~(2 * ((v68 >> 21) ^ 0x15))) + 83;
    *(unsigned char *)(v64 - 0x399DE98F08C0F06BLL) = ((v68 >> SBYTE4(a58)) ^ 0xB3)
                                           + (v63 | ~(2 * ((v68 >> SBYTE4(a58)) ^ 0xB3)))
                                           + 83;
    *(unsigned char *)(v64 - 0x399DE98F08C0F06ALL) = ((v68 >> 5) ^ 0x42)
                                           - 2 * (((v68 >> 5) ^ 0x42) & 0x5A ^ (v68 >> 5) & 8)
                                           + 82;
    unsigned int v72 = *(_DWORD *)(v64 - 0x399DE98F08C0F060);
    HIDWORD(v69) = ~v68;
    LODWORD(v69) = v72 ^ 0xC0000000;
    *(unsigned char *)(v64 - 0x399DE98F08C0F069) = (v69 >> 29) - ((2 * (v69 >> 29)) & 0xA4) + 82;
    *(unsigned char *)(v64 - 0x399DE98F08C0F068) = ((v72 >> 21) ^ 0x42)
                                           - 2 * (((v72 >> 21) ^ 0x42) & 0x53 ^ ((v72 & 0x200000) != 0))
                                           + 82;
    *(unsigned char *)(v64 - 0x399DE98F08C0F067) = ((v72 >> 13) ^ 0xA4) - ((v72 >> 12) & 0xA4) + 82;
    int v70 = a2 ^ 0x4BF;
    *(unsigned char *)(v64 - 0x399DE98F08C0F066) = ((v72 >> 5) ^ 0xFA)
                                           - 2 * (((v72 >> 5) ^ 0xFA) & 0x57 ^ (v72 >> 5) & 5)
                                           + 82;
    char v71 = -96;
    LOBYTE(v72) = (8 * v72) ^ 0x68;
LABEL_5:
    char v76 = v70 + 51;
    int v67 = (v70 - 973) | 0x42;
    *(unsigned char *)(v64 - 0x399DE98F08C0F065) = v72 - (((_BYTE)v72 << ((v76 ^ 0x99) & 0xBD)) & v71) + 82;
  }
  STACK[0x3D8] = *(void *)(v65 + 8 * (v67 - 206));
  return sub_1005B9A38(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63);
}

uint64_t sub_1005A1158()
{
  int v8 = (v2 - 1089) | 0x21B;
  *(_DWORD *)(v3 + v1) = v0;
  *(_DWORD *)(v7 - 128) = v8 - ((v7 - 144) ^ 0xB37DB054) * v6 - 752;
  *(void *)(v7 - 144) = v3;
  *(void *)(v7 - 136) = v5;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v8 + 1116)))(v7 - 144);
}

void sub_1005A11DC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  sub_1005A79B4();
}

uint64_t sub_1005A11E4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((a2 + 671643137) & 0xD7F78FD6) - 1077)
                                     * (*(_DWORD *)(v3 - 120) == *(_DWORD *)(v3 - 128))) ^ a2)))();
}

uint64_t sub_1005A1224@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  *(void *)(v64 - 128) = a5 - 7;
  *(void *)(v64 - 120) = v56 - 7;
  *(_DWORD *)(v64 - 140) = v63 & 0xFFFFFFF8;
  *(_DWORD *)(v64 - 136) = v63;
  *(_DWORD *)(v64 - 132) = -(v63 & 0xFFFFFFF8);
  int v65 = -8 - a3;
  char v66 = a1 + v61 + v62;
  uint64_t v67 = (a1 + v61 + a2 + v65 + 8);
  v69.val[0].i64[0] = ((_BYTE)a1 + (_BYTE)v61 + (_BYTE)a2 + (_BYTE)v65 + 8) & 0xF;
  v69.val[0].i64[1] = (v66 - 53 + (_BYTE)v65 + 8) & 0xF;
  v69.val[1].i64[0] = (v66 - 54 + (_BYTE)v65 + 8) & 0xF;
  v69.val[1].i64[1] = (v60 + (_BYTE)v65 + 8) & 0xF;
  v69.val[2].i64[0] = (v66 - 40 + (_BYTE)v65 + 8) & 0xF;
  v69.val[2].i64[1] = (v66 - 41 + (_BYTE)v65 + 8) & 0xF;
  v69.val[3].i64[0] = (v66 + (_BYTE)v65 + ((2 * a4) ^ 0x8A) + 8) & 0xF;
  v69.val[3].i64[1] = (v66 - 43 + (_BYTE)v65 + 8) & 0xF;
  *(int8x8_t *)(*(void *)(v64 - 128) + v67) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v59 + (v67 & 0xF) - 7), *(int8x8_t *)(*(void *)(v64 - 120) + v67)), veor_s8(*(int8x8_t *)((v67 & 0xF) + v57 - 5), *(int8x8_t *)((v67 & 0xF) + v58 - 2))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v69, (int8x16_t)xmmword_1007AA4B0), (int8x8_t)0xADADADADADADADADLL)));
  return (*(uint64_t (**)(__n128))(a56 + 8 * ((1293 * (*(_DWORD *)(v64 - 132) == v65)) ^ a4)))((__n128)xmmword_1007AA4B0);
}

uint64_t sub_1005A1384@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + (v4 + v3)) = *(unsigned char *)(a1 + (v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * ((1583 * (v4 - 1 == (v5 ^ 0xD0 ^ v2))) ^ v5)))();
}

uint64_t sub_1005A13C4(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((((a3 - 850) | 0x105) ^ 0x54A) + a3 - 935) * (v3 == a2)) ^ a3)))();
}

uint64_t sub_1005A1418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v14 - 112) = (v12 + 108) ^ (1374699841
                                        * ((2 * (((v14 - 136) ^ 0x83A470D) & 0x166438A5)
                                          - ((v14 - 136) ^ 0x83A470D)
                                          - 375666854) ^ 0x8C55985E));
  *(void *)(v14 - 120) = a12;
  *(void *)(v14 - 136) = a11;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v12 + 1275)))(v14 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (int)(((*(_DWORD *)(v14 - 128) == 542281048)
                                                   * (((v12 - 247438480) & 0xEBF9FFE ^ 0xFFFFFD98)
                                                    + ((v12 - 868) | 0x4D8))) ^ (v12 + 185))))(v15);
}

uint64_t sub_1005A1420@<X0>(int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, int a8@<W8>)
{
  BOOL v13 = a3 < v11;
  *(unsigned char *)(a4 + (((v9 - 1023) | 0x30) ^ a2) + a8) = *(unsigned char *)(a7 + (v8 + v10))
                                                    - (a6 & (2 * *(unsigned char *)(a7 + (v8 + v10))))
                                                    + 82;
  unsigned int v14 = v8 + 1 + a1;
  int v15 = v13 ^ (v14 < v11);
  BOOL v16 = v14 < a3;
  if (!v15) {
    BOOL v13 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v13 * a5) ^ v9)))();
}

uint64_t sub_1005A1490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int32x4_t a45, int32x4_t a46, int32x4_t a47, int32x4_t a48, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  return sub_100594164(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

void sub_1005A149C()
{
}

uint64_t sub_1005A14AC@<X0>(int a1@<W8>)
{
  unsigned int v4 = ((v2 - 170) ^ 0x69F) + a1 - 475882951;
  int v5 = ((v1 + 15874953) < 0x60815EE2) ^ (v4 < 0x60815EE2);
  BOOL v6 = v4 < v1 + 15874953;
  if (v5) {
    BOOL v6 = (v1 + 15874953) < 0x60815EE2;
  }
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((4 * v6) | (16 * v6) | (v2 - 999))))(2707752957);
}

uint64_t sub_1005A153C@<X0>(char a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  int v7 = 54 * (v4 ^ 0x1E2);
  *(unsigned char *)(a2 + ((v7 - 470) ^ v5) + a3) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 + a3 + 17 < 0x40) * v3) ^ v7)))();
}

uint64_t sub_1005A1584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1005A4A54(a1, a2, a3, a4, a7, STACK[0x584]);
}

uint64_t sub_1005A1598()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((**(void **)(v2 + 8 * (v1 - 1660)) == 0) * ((10 * (v1 ^ 0x614)) ^ 0x5BE)) ^ v1)))();
}

uint64_t sub_1005A15D8(int a1)
{
  int v6 = 53 * (v1 ^ 0x579);
  unsigned int v7 = v3 + v2 + a1;
  if (v7 <= 0x40) {
    int v8 = 64;
  }
  else {
    int v8 = v7;
  }
  BOOL v9 = !__CFADD__(v7 + v6 - 778 - 760, v4 + v8);
  return (*(uint64_t (**)(void))(v5 + 8 * ((v9 * (((v6 - 1000) | 0x66) ^ 0x273)) | v6)))();
}

uint64_t sub_1005A1644()
{
  uint64_t v4 = v3 - 192;
  *(unsigned char *)(v4 + 12) = ((2 * ((v3 + 64) & 0xA0) - (v3 + 64) + 93) ^ 0x86) * v0 + 95;
  STACK[0x268] = (unint64_t)&STACK[0x31FD77B69BC3E5E9];
  *(void *)(v4 + 24) = &STACK[0x31FD77B69BC3E5E9];
  STACK[0x270] = (unint64_t)&STACK[0x1E6EF71530911DE];
  *(void *)uint64_t v4 = &STACK[0x1E6EF71530911DE];
  *(_DWORD *)(v3 - 184) = v1 - ((2 * ((v3 - 192) & 0x3D721AA0) - (v3 - 192) + 1116595549) ^ 0x9C4B5886) * v0 + 1268;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0xA7D)))(v3 - 192);
  int v6 = *(_DWORD *)(v3 - 176);
  LODWORD(STACK[0x418]) = v6;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((v6 != -25955570) * (((v1 - 512) | 0xC8) - 203)) ^ v1)))(v5);
}

uint64_t sub_1005A1724()
{
  STACK[0x330] = v1;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1824 * (v2 == v4 + (v0 ^ 0xF2) - 40)) | (v0 - 140))))();
}

void sub_1005A1760()
{
}

uint64_t sub_1005A17E0()
{
  int v6 = ((((v5 - 136) | 0x854C5D0E) - ((v5 - 136) & 0x854C5D0E)) ^ 0xE8B84507) * v2;
  *(_DWORD *)(v5 - 136) = v6 + v0 - 920;
  *(_DWORD *)(v5 - 132) = v3 + ((v0 - 679) ^ 0x92257A38) + v6;
  *(void *)(v5 - 128) = v4;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 1065)))(v5 - 136);
  return sub_1005A1850(v7);
}

uint64_t sub_1005A1850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 112) = (v12 + 594) ^ (((v16 + 1047381673 - 2 * ((v16 - 136) & 0x3E6DC731)) ^ 0x5399DF38) * v15);
  *(void *)(v16 - 120) = a12;
  *(void *)(v16 - 136) = v13;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v12 + 1761)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (((*(_DWORD *)(v16 - 128) == (v12 ^ 0xAC) + 542280581)
                                              * ((2 * (v12 ^ 0xAC)) ^ 0x350)) ^ v12)))(v17);
}

uint64_t sub_1005A1900@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *int v2 = a2;
  *(_DWORD *)(result + 4) = 25995323;
  return result;
}

uint64_t sub_1005A1914()
{
  unsigned int v5 = v4 + v2 + ((v3 - 431) ^ 0xE4FD80FF);
  BOOL v6 = v5 < 0x6968D0C7;
  BOOL v7 = v5 > v0 + 541388138;
  if (v0 + 541388138 < (v3 + 1768475263) != v6) {
    BOOL v7 = v6;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((27 * v7) ^ v3)))();
}

uint64_t sub_1005A198C@<X0>(uint64_t a1@<X5>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  unint64_t v30 = (*(_DWORD *)(v25 + v28) ^ v21) + HIDWORD(v29);
  *(_DWORD *)(v25 + 4 * a1) = v30 + v21 - ((v30 << (((v20 + 56) ^ 0xA4) * v27 - 105)) & v22);
  *(_DWORD *)(a20 + v28) = HIDWORD(v30) + v21 - (HIDWORD(v30) << (-33 * ((v20 + 56) ^ 0xA4) - 57));
  BOOL v31 = v23 + 1122540152 < v24;
  if (a2 > 0x1445D05A != v23 + 1122540152 < -340119643) {
    BOOL v31 = a2 > 0x1445D05A;
  }
  return (*(uint64_t (**)(void))(v26 + 8 * ((v20 + 56) ^ (v31 * v27))))();
}

uint64_t sub_1005A1A3C(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == (v6 + 34 + ((v6 - 48) | a1) - 82)) * a6) ^ v6)))();
}

uint64_t sub_1005A1A6C@<X0>(uint64_t a1@<X8>)
{
  int v4 = v1 | 0x20;
  int v5 = (v4 - 1263078465) & 0x4B4909FC;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v4 + 1017)))(a1 - 0xB19902B9219B199);
  STACK[0x438] -= 16;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v2 == -25955570) * (v5 - 228)) ^ (v5 + 1121))))(v6);
}

uint64_t sub_1005A1AF4@<X0>(int a1@<W0>, uint64_t a2@<X6>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_1005A4008(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1005A1AFC()
{
  void *v0 = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((16 * (v2 == 0)) | (32 * (v2 == 0)) | v1)))();
}

uint64_t sub_1005A1B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * ((52
                                                                        * (((v8 < ((a8 - 1434) ^ 0x1BEu)) ^ (a8 - 73)) & 1)) ^ a8)))(a1, a2, a3, 0);
}

void sub_1005A1B68()
{
}

uint64_t sub_1005A1B70@<X0>(int a1@<W5>, int a2@<W8>)
{
  if ((a2 - 1962456896) > 0x18 || ((1 << (a2 - 64)) & 0x1000581) == 0) {
    JUMPOUT(0x10058FBC4);
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((127
                                * ((v2 & 0xFFFFFFFFFFFFFFFuLL) - 1 < (unint64_t)((a1 - 1474267820) | 0x14Au)
                                                                   - 361)) ^ (a1 - 1474267027))))();
}

uint64_t sub_1005A1C1C(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int32x4_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v17 = v16 + 16;
  a8.i32[0] = *(_DWORD *)(v17 + 912);
  a8.i32[1] = *(_DWORD *)(v17 + v12);
  a8.i32[2] = *(_DWORD *)(v17 + 920);
  int8x16_t v18 = vextq_s8(a1, a8, 0xCuLL);
  int8x16_t v19 = a8;
  v19.i32[3] = *(_DWORD *)(v17 + 924);
  int32x4_t v20 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v19, a2), vandq_s8(v18, a6)), 1uLL), a3);
  v21.i32[0] = *(_DWORD *)(v13 + 4 * (*(_DWORD *)(v17 + 912) & 1));
  v21.i32[1] = *(_DWORD *)(v13 + 4 * (*(_DWORD *)(v17 + v12) & 1));
  v21.i32[2] = *(_DWORD *)(v13 + 4 * (*(_DWORD *)(v17 + 920) & 1));
  v21.i32[3] = *(_DWORD *)(v13 + 4 * (v19.i8[12] & 1));
  *(int8x16_t *)(v17 + 908) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)v17, v21), a7), (int8x16_t)vaddq_s32(vsubq_s32(v20, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v20, v20), a4)), a5));
  return (*(uint64_t (**)(void))(a11 + 8 * (((v14 == 4) * v15) ^ v11)))();
}

void sub_1005A1C28()
{
  *(void *)(v1 + 144) = *(void *)(v2 + 8 * (v0 - 194));
  JUMPOUT(0x1005B5078);
}

uint64_t sub_1005A1C48()
{
  *(_DWORD *)(*(void *)(v5 - 0x330904BA72E93EB8) + 4 * (v0 + v1 + 1042)) = 312579357;
  return (*(uint64_t (**)(void))(v4 + 8 * ((159 * (v0 + v1 + ((v2 + 185) | 0x11u) < v3)) ^ (v2 + 753))))();
}

uint64_t sub_1005A1CAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                                 + 8
                                                                                                 * ((((v7 & 8) == 340 * (v8 ^ 0x28A) - 1020) * ((334 * (v8 ^ 0x28F)) ^ 0x7CD)) | v8 ^ 0x8F)))(a1, a2, a3, a4, a5, a6, (v6 - a6));
}

uint64_t sub_1005A1D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  *(_DWORD *)(a38 + 4 * v40) ^= a33;
  return (*(uint64_t (**)(uint64_t))(v38
                                            + 8
                                            * ((111
                                              * (((v41 + 1610689573) & 0x9FFED3DA ^ 0x60272C35) + v39 != 1910069892)) ^ 0x334)))(1613182087);
}

uint64_t sub_1005A1D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v27 - 112) = a21;
  *(void *)(v27 - 128) = v23;
  *(_DWORD *)(v27 - 104) = (v21 - 708) ^ (((v27 - 128 + v24 - 2 * ((v27 - 128) & v24)) ^ 0x191EE5E0) * v25);
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 + 459)))(v27 - 128);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((60
                                              * (*(_DWORD *)(v27 - 120) == (((v21 - 13) | 0x21) ^ (v26 + 27))
                                                                         + ((v21 + 1392226085) & 0xAD044FEF))) ^ v21)))(v28);
}

uint64_t sub_1005A1E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  STACK[0x440] = STACK[0x510];
  unsigned int v7 = LODWORD(STACK[0x44C]) - ((((v5 + 850) ^ 0x7766569A) + 2 * LODWORD(STACK[0x44C])) & 0xF9162A3E) + 943603322;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((39 * (((2 * v7) & 0xEFFB77E8 ^ 0xE9122228) + (v7 ^ 0x8B76AEEB) + 1568407132 == a5)) ^ (v5 + 626))))();
}

uint64_t sub_1005A1ED8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W5>, int a6@<W8>)
{
  int v10 = (unsigned int *)(v9 + 4 * v7);
  unsigned int v11 = v6 & 0x80000000;
  uint64_t v12 = v7 + 1;
  int v13 = *(_DWORD *)(v9 + 4 * v12);
  unsigned int v14 = ((v13 & 0x7FFFFFFE | v11) >> (a6 + 124)) ^ a4;
  *int v10 = v10[397] ^ a5 ^ *(_DWORD *)(v8 + 4 * (v13 & 1)) ^ (v14 + a3 - (a2 & (2 * v14)));
  return (*(uint64_t (**)(void))(a1 + 8 * ((14 * (v12 == 227)) ^ a6)))();
}

uint64_t sub_1005A1F44()
{
  int v4 = ((v0 + 152) ^ 0x15209EC6) + *(_DWORD *)(v1 + 52);
  int v5 = 1734042137 * ((((2 * (v3 - 192)) | 0xEEC669A8) - (v3 - 192) - 2002990292) ^ 0x2BADF799);
  *(_DWORD *)(v3 - 172) = LODWORD(STACK[0x294]) ^ v5;
  *(_DWORD *)(v3 - 168) = (v0 - 50) ^ v5;
  int v6 = (void *)(v3 - 192);
  long long v6[4] = &STACK[0x620];
  v6[5] = v1 + 0x239318B13B5CB01BLL;
  *(_DWORD *)(v3 - 184) = LODWORD(STACK[0x2D0]) - v5 + 991176099;
  *(_DWORD *)(v3 - 180) = v4 ^ v5;
  *int v6 = STACK[0x318];
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x806)))(v3 - 192);
  int v8 = *(_DWORD *)(v3 - 176);
  LODWORD(STACK[0x418]) = v8;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((972 * (v8 == ((v0 + 1171) ^ 0xFE73F7DB))) ^ v0)))(v7);
}

uint64_t sub_1005A2048(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((((((a8 - 307) ^ 0x7D7) - 1387) ^ ((a8 - 307) | 0x208)) * (v8 == a4)) ^ a8)))();
}

uint64_t sub_1005A2084@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((79 * ((v2 | a1) == (((a2 ^ 0x39) + 1132) ^ 0x6F0))) ^ a2)))();
}

void sub_1005A20C0()
{
  _DWORD *v0 = v1;
  sub_1005A8840();
}

void sub_1005A20C8()
{
}

uint64_t sub_1005A20E4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2010 * (v1 - 1988464057 + 113 * (a1 ^ 0x1C2u) < 0x7FFFFFFF)) ^ a1)))();
}

uint64_t sub_1005A2130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005A219C(a1, 1676371885, 36307408, a4, 1974493678, 2320473782, 0xFBB704BAA971715ELL, 1103);
}

uint64_t sub_1005A219C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6, uint64_t a7)
{
  uint64_t v13 = v10 + (v9 + 232) + a7 + ((v9 + a5) & a6);
  return (*(uint64_t (**)(void))(v12
                              + 8 * (((*(unsigned __int8 *)(v7 + v13) == *(unsigned __int8 *)(v8 + v13)) * v11) ^ v9)))();
}

uint64_t sub_1005A21D8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1978 * ((int)(a2 - 1 + ((v3 + 763808408) & 0xD27934D3)) >= 0)) ^ v3)))();
}

uint64_t sub_1005A2220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50)
{
  return sub_1005A9C00(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50);
}

uint64_t sub_1005A2228()
{
  return v0();
}

uint64_t sub_1005A2230(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v9 = v5 + 185675010;
  if ((v9 + 1) > 0x40) {
    int v10 = v9 + 1;
  }
  else {
    int v10 = 64;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * (v8 ^ (4085 * ((a4 - v4 - v6 + v10) < 0xF)))))();
}

uint64_t sub_1005A22B0@<X0>(int a1@<W6>, int a2@<W8>)
{
  int v8 = (void *)(v6 - 0x330904BA72E93EB8);
  int v9 = a1 - 992;
  int v10 = a1 - 351;
  unsigned int v11 = ((2 * (*(_DWORD *)(*v8 + 4 * (a2 + 143134546)) ^ v4)) << (v3 ^ 0x1F)) | ((*(_DWORD *)(*v8
                                                                                              + 4 * (a2 + 143134545)) ^ v4) >> v3);
  *(_DWORD *)*int v8 = v4 + (v9 | 0x348) + v11 - (v5 & (2 * v11)) - 968;
  BOOL v12 = v2 + 669058637 > 812193184;
  if (v2 + 669058637 < -1335290465) {
    BOOL v12 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((1108 * v12) | v10)))(2985049025);
}

uint64_t sub_1005A2398@<X0>(char a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v6 + v5 + a2) = a1;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v5 & 0x7FFFFFFFFFFFFFC0) == (a3 ^ v3)) * v7) ^ v4)))();
}

uint64_t sub_1005A23C8()
{
  *(_DWORD *)(v3 - 112) = v1 - 1759421093 * ((v3 - 128) ^ 0xB37DB054) - 1488;
  *(void *)(v3 - 128) = v5;
  *(void *)(v3 - 120) = v2;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xE84)))(v3 - 128);
}

uint64_t sub_1005A2448(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  int v37 = v34 + v33;
  unsigned int v38 = v34 + v33 - 2107593886;
  if (v38 <= 0x40) {
    unsigned int v38 = 64;
  }
  int v39 = !__CFADD__(v37 + ((v32 + 190) ^ 0x8260AB91 ^ v32 ^ 0x32), a32 + 2107592809 + v35 + v38 + 1077);
  return (*(uint64_t (**)(void))(v36 + 8 * ((v39 | (v39 << 6)) ^ v32)))();
}

uint64_t sub_1005A24C8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((28 * (*(_DWORD *)(v3 + 48 * ((((v2 ^ 0x4A4) - 452) ^ (a2 + 1172)) + v5) + 36) != v5)) ^ v2)))();
}

uint64_t sub_1005A2514(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16)
{
  unsigned int v21 = 1734042137 * ((&a13 + 148822889 - 2 * (&a13 & 0x8DEDB69)) ^ 0x54101824);
  a13 = a11;
  LODWORD(a14) = 1584 - v21;
  a15 = (v18 - ((2 * v18) & 0x758E1AD1) - 1161360024) ^ v21;
  (*(void (**)(uint64_t *))(v20 + 17024))(&a13);
  unsigned int v22 = 628203409 * (&a13 ^ 0x82880C33);
  a14 = v16;
  LODWORD(a13) = 1043 - v22;
  a16 = a11;
  a15 = (v17 ^ 0x7FA8EFC9) + ((2 * v17) & 0xFF51DF92) - 1117833728 + v22;
  uint64_t v23 = (*(uint64_t (**)(uint64_t *))(v20 + 17216))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((4 * (HIDWORD(a13) == v19)) ^ 0x198u)))(v23);
}

void sub_1005A2644(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 64) - 0x660356CACBBB3C48) = a1;
  JUMPOUT(0x100592908);
}

uint64_t sub_1005A2668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, unsigned int a16)
{
  BOOL v17 = a16 > a14;
  if (v17 == a6 - 94146310 < (int)((a5 - 721) ^ 0xC09495D2)) {
    BOOL v17 = a6 - 94146310 < a15;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t))(v16 + 8 * ((95 * !v17) ^ a5)))(625158714, a2, 0xC0FC1F729285297ALL, 3237748594);
}

uint64_t sub_1005A270C()
{
  if (v2 >= 0) {
    unsigned int v4 = v2;
  }
  else {
    unsigned int v4 = -v2;
  }
  if (v1 >= 0) {
    unsigned int v5 = v1;
  }
  else {
    unsigned int v5 = -v1;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v0 + 1346) ^ 0xFFFFFA3A) + v0 + 1346) * (v4 > v5)) ^ v0)))();
}

void sub_1005A2748()
{
  _DWORD *v0 = 1491193922;
}

uint64_t sub_1005A2790(int a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(void *)(a4 + (v5 - v6)) = *(void *)(v7 + (v5 - v6));
  return (*(uint64_t (**)(void))(v8 + 8 * ((120 * (a5 + v6 == a1)) ^ a3)))();
}

uint64_t sub_1005A27C0()
{
  int v4 = *(_DWORD *)(v0 + 48 * v2 + 36) + 1869673869 < ((v1 - 712) | 0x104u) + 2147483269;
  return (*(uint64_t (**)(void))(v3 + 8 * (v4 | (v4 << 7) | v1)))();
}

uint64_t sub_1005A281C(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((int)((v3 ^ 0xB7A957DF) + 1862183923 + (v1 & 0x6F52AFBE) - 648545235) > a1 - 304)
                                * (((a1 - 642896688) & 0x2651D67D) - 920)) ^ a1)))();
}

void sub_1005A28BC()
{
}

_DWORD *sub_1005A28C8(_DWORD *result, uint64_t a2, uint64_t a3, int a4)
{
  *uint64_t result = a4;
  return result;
}

uint64_t sub_1005A28D0(int a1, int a2, int a3, int a4, unsigned int a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((a7 + a3) & a4 ^ v7) + v8 > a5) * ((a7 + a1) & a2 ^ a6)) ^ a7)))();
}

void sub_1005A2910(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  STACK[0x318] = v4;
  LODWORD(STACK[0x418]) = a4 + 10;
  JUMPOUT(0x10058CA68);
}

uint64_t sub_1005A2924(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * ((152 * (v3 + 1 != v5 + 60)) ^ a3)))(v6);
}

void sub_1005A29E0()
{
}

uint64_t sub_1005A29F4@<X0>(unint64_t a1@<X0>, int a2@<W1>, int a3@<W5>, unint64_t a4@<X6>, int a5@<W8>)
{
  uint64_t v10 = (a5 - 115086173) & 0x6DC17FE;
  *(void *)(a4 + 1516) = v5;
  *(void *)(a4 + 1524) = v5;
  *(_DWORD *)(a4 + 1532) = v6;
  *(void *)(a1 + 96) = a4;
  STACK[0x258] = a4;
  *(_DWORD *)(a4 + 476) = 426152332;
  STACK[0x388] = *(void *)(v8 + 296);
  unint64_t v11 = STACK[0x438];
  BOOL v12 = (char *)&STACK[0x630] + STACK[0x438] + v10 - 0x5FBF6A2C236077FELL;
  STACK[0x390] = (unint64_t)(v12 - 1228);
  STACK[0x330] = v11;
  STACK[0x320] = v11 + 432;
  STACK[0x260] = (unint64_t)(v12 - 836);
  STACK[0x200] = a1;
  STACK[0x328] = a1;
  int v13 = v10 - 1067;
  STACK[0x370] = *(void *)(v9 + 8 * a5);
  STACK[0x438] = STACK[0x320];
  LODWORD(STACK[0x544]) = 1962456916;
  LODWORD(STACK[0x59C]) = 1145886373;
  *(void *)(v8 + 40) = 0;
  LODWORD(STACK[0x410]) = 628398183;
  unsigned int v14 = (_DWORD *)STACK[0x390];
  *unsigned int v14 = a3;
  LODWORD(STACK[0x368]) = -1237137997;
  LODWORD(STACK[0x3C0]) = 1334673786;
  LODWORD(STACK[0x358]) = v10 + 257494248;
  LODWORD(STACK[0x360]) = -1176044927;
  BOOL v16 = *v14 != ((v10 - 1010) ^ (a3 + 202)) || a2 + 1 != a2 + (v13 ^ 0x35F) - 1022;
  BOOL v17 = *(uint64_t (**)(void))(v9 + 8 * ((482 * v16) ^ v13));
  LODWORD(STACK[0x378]) = v7;
  return v17();
}

void sub_1005A2B90(uint64_t a1)
{
  int v1 = 1755732067 * (a1 ^ 0xDEC6BDDB);
  int v2 = *(_DWORD *)(a1 + 8) + v1;
  int v3 = (*(unsigned char *)(a1 + 12) - v1);
  uint64_t v4 = (char *)*(&off_1009960C0 + (v2 ^ 0x78E)) - 8;
  (*(void (**)(void, uint64_t (*)()))&v4[8 * (v2 ^ 0xF48)])(*(&off_1009960C0 + (v2 ^ 0x724)), sub_1005B361C);
  uint64_t v5 = *(void *)((char *)*(&off_1009960C0 + v2 - 1675) - 4);
  unsigned int v7 = v2 - 1374699841 * (&v6 ^ 0x6DF41809) - 1117;
  uint64_t v6 = v5;
  (*(void (**)(uint64_t *))&v4[8 * v2 + 1856])(&v6);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1005A2CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,void *a28,unint64_t a29,uint64_t a30,int *a31)
{
  if (v32 <= 0xB3581BB6) {
    int v36 = *a31 + 1;
  }
  else {
    int v36 = 1202683098;
  }
  *a31 = v36;
  int v37 = (((v33 >> (a27 - 97)) ^ 0x7C43)
       + v35
       - 2 * (((v33 >> (a27 - 97)) ^ 0x7C43) & 0x21B6E ^ (v33 >> (a27 - 97)) & 0xC)) ^ v33;
  unsigned int v38 = (((v37 << 7) & 0x9D2C5680 ^ v37) << 15) & 0xEFC60000 ^ (v37 << 7) & 0x9D2C5680 ^ v37;
  *(_DWORD *)(*a28 + a29) ^= v38 ^ (v38 >> 18);
  return (*(uint64_t (**)(void))(v31 + 8 * ((v34 + 1613181262) ^ ((16 * (a29 < 0x1FC)) | ((a29 < 0x1FC) << 7)))))();
}

uint64_t sub_1005A2D8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((63 * (*(_DWORD *)(a8 + 72) == ((((((a9 - 1376750070) & 0x520F87FA) + 576350439) & 0xDDA597BB) + 569112332) ^ (((a9 - 1376750070) & 0x520F87FA) - a3)))) ^ (a9 - 1376750070) & 0x520F87FA)))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1005A2E0C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7)
{
  unsigned int v14 = v13 + v12 + v11 + 1510;
  uint64_t v15 = v8 + v14;
  long long v16 = *(_OWORD *)(v15 - 31);
  uint64_t v17 = v9 + v14;
  *(_OWORD *)(v17 - 15) = *(_OWORD *)(v15 - 15);
  *(_OWORD *)(v17 - 31) = v16;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v10 & 0xFFFFFFE0) == 32) * (a6 - a7 - 1937)) | (a4 + a6 + 519))))();
}

void sub_1005A2E6C(_DWORD *a1)
{
  unsigned int v1 = *a1 + 1178560073 * ((((2 * a1) | 0xC6F7E34E) - a1 - 1669067175) ^ 0x516DF1E7);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1005A2F34@<X0>(uint64_t a1@<X1>, char a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  *(void *)(&a27 + v28 + ((v27 - 146891919) & 0x8C1679D ^ (unint64_t)(a1 - 1385))) = 0x5252525252525252;
  return (*(uint64_t (**)(void))(v29 + 8 * ((51 * ((a2 & 0x38) == 8)) ^ v27)))();
}

void sub_1005A2F90()
{
}

uint64_t sub_1005A2F98(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1405
                                * ((((v3 - 287375958) & 0x5FF9A75C ^ 0x8037029E) & (2
                                                                                  * (*(unsigned __int8 *)(a2 + 1) - 146)))
                                 + ((*(unsigned __int8 *)(a2 + 1) - 146) ^ v4) == v4)) ^ v3)))();
}

void sub_1005A2FF4(_DWORD *a1, int a2, uint64_t a3, int a4)
{
  int v11 = a4 - v7 + 77;
  *((unsigned char *)a1 + v6 + 4) = v10;
  int v12 = v9 + v5;
  *a1 = v9 + v5 + 714112991;
  int v13 = a1 + 1;
  *((unsigned char *)v13 + (a2 + v5)) = v8;
  *((unsigned char *)v13 + (v4 + v5 - 2)) = -111;
  *((unsigned char *)v13 + v12 + ((v11 + 1322820871) ^ 0xB2D08D97)) = -97;
  *((unsigned char *)v13 + (v12 - 66574140)) = 98;
  JUMPOUT(0x10058B1BCLL);
}

void sub_1005A3070()
{
}

uint64_t sub_1005A307C@<X0>(uint64_t a1@<X1>, unsigned int a2@<W8>)
{
  unint64_t v4 = ((v2 + 1483904535) & 0xA78D66EF ^ (unint64_t)(a1 + 94)) + a2;
  if (v4 <= 0x38) {
    unint64_t v4 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((246 * (v4 - a2 + 1858992362 < (unint64_t)((v2 + 159108248) & 0xF684347F) - 1132)) ^ v2)))();
}

void sub_1005A3100()
{
}

uint64_t sub_1005A3130()
{
  uint64_t v5 = LODWORD(STACK[0x418]);
  unint64_t v6 = ((2 * (v0 & 0xBCA4019836DA1E8) - v0 - 0xBCA4019836DA1EELL) ^ 0xFA3921EA1166461BLL) * v2;
  *(_DWORD *)(v4 - 176) = (v1 - 504207248) ^ (((2 * (v0 & 0x836DA1E8) - v0 + 2089967122) ^ 0x1166461B) * v2);
  uint64_t v7 = v4 - 192;
  *(void *)(v7 + 24) = v6 + 25995476;
  *(void *)(v7 + 40) = v5 - v6;
  *(_DWORD *)(v4 - 188) = v1 + 1473597571 - ((2 * (v0 & 0x836DA1E8) - v0 + 2089967122) ^ 0x1166461B) * v2;
  *(_DWORD *)(v4 - 184) = ((2 * (v0 & 0x836DA1E8) - v0 + 2089967122) ^ 0x1166461B) * v2;
  *(_DWORD *)(v4 - 192) = (((2 * (v0 & 0x836DA1E8) - v0 + 2089967122) ^ 0x1166461B) * v2) ^ (v1 + 1473597571) ^ 0x15;
  *(_DWORD *)(v4 - 160) = ((2 * (v0 & 0x836DA1E8) - v0 + 2089967122) ^ 0x1166461B) * v2 + v1 + 1473597571 - 83;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 + 1987)))(v4 - 192);
  STACK[0x318] = 0;
  int v9 = *(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 180));
  LODWORD(STACK[0x2D0]) = 1096393532;
  return v9(v8);
}

uint64_t sub_1005A3218@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((75 * (((a2 + a1 + 63 < (a2 + a1)) ^ 0x1D) & 1)) ^ 0x613u)))();
}

uint64_t sub_1005A3260@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 1113645288);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v5 + (v8 & 0xF)) ^ *(unsigned char *)(v4 + (v8 & 0xF)) ^ *(unsigned char *)(v6 + (v8 & 0xF)) ^ (5 * (v8 & 0xF)) ^ 0x52;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1882 * (a1 - 1 == v3)) ^ (a2 - 568))))();
}

void sub_1005A32CC()
{
}

uint64_t sub_1005A32EC@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  int v30 = 3804331 * ((2 * ((v29 - 120) & 0x5457C938) - (v29 - 120) - 1415039290) ^ 0x5136C590);
  *(void *)(v29 - 112) = &STACK[0x399DE98F08C0F120];
  *(_DWORD *)(v29 - 120) = (a1 + 1172344354) ^ v30;
  *(_DWORD *)(v29 - 104) = v30
                         - 1465264311 * a2
                         - ((3 * (a1 ^ 0x536) + 1364438674 * a2 - 1263450883) & 0x8ACE2A1E)
                         - 1614825180;
  (*(void (**)(uint64_t))(v27 + 8 * (a1 ^ 0xC63)))(v29 - 120);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((581
                                              * (*v28
                                               - 1880618755
                                               + ((a27 << (a1 - 56)) & 0xE ^ 0xA)
                                               + (a27 & 0x3F ^ 0x4C52E94Au) < 0xFFFFFFC0)) ^ a1)))(3289839047);
}

uint64_t sub_1005A34A8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((921 * (*(_DWORD *)(v3 + 4 * v4) == a2 + 6 * (v2 ^ 0x93) - 510)) ^ v2)))();
}

uint64_t sub_1005A34E4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((a2 + a8 - 16 >= ((a7 - 186) ^ 0xFFFFFEBA)) * (a7 - 423)) ^ a7)))();
}

uint64_t sub_1005A3520(uint64_t a1)
{
  int v1 = 1225351577 * (((a1 | 0xA3D2D055) - (a1 & 0xA3D2D055)) ^ 0x80480843);
  int v2 = *(_DWORD *)(a1 + 24) - v1;
  int v3 = *(_DWORD *)(a1 + 8) - v1;
  int v4 = *(_DWORD *)(*(void *)a1 - 0x330904BA72E93EBCLL);
  unsigned int v6 = v4 - 1491193922;
  BOOL v5 = v4 - 1491193922 < 0;
  unsigned int v7 = 1491193922 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*((uint64_t (**)(void))*(&off_1009960C0 + v2 - 1255)
          + ((((v3 - 1392823881) < 4 * (unint64_t)v8) * ((38 * (v2 ^ 0x54B)) ^ 0x5B8)) ^ v2)
          - 1))();
}

uint64_t sub_1005A35F8@<X0>(int a1@<W0>, void *a2@<X2>, int a3@<W3>, int a4@<W6>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  unint64_t v34 = (*(_DWORD *)(a23 + 4 * (a4 + 1 + a1)) ^ v23)
      + HIDWORD(v33)
      + v26 * (unint64_t)(*(_DWORD *)(*a2 + 4 * (a4 + 1 + a1)) ^ v23);
  *(_DWORD *)(a23 + 4 * (a4 + a1)) = v34 + v23 - ((v25 + ((v24 - 202) | v28) - 618) & (2 * v34));
  if (a5 > v27 != a4 + v29 < v31) {
    BOOL v35 = a5 > v27;
  }
  else {
    BOOL v35 = a4 + v29 < a3;
  }
  return (*(uint64_t (**)(void))(v30 + 8 * ((v35 * v32) ^ v24)))();
}

uint64_t sub_1005A3684(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(void))*(&off_100991B78 + ((26 * (*(_DWORD *)(a2 + 4) == 1145886374)) ^ 0x1CEu) - 1))();
}

uint64_t sub_1005A36C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v18 - 120) = v17
                         + 1225351577 * ((~((v18 - 136) | 0xD40B7B80) + ((v18 - 136) & 0xD40B7B80)) ^ 0x86E5C69)
                         - 1702;
  *(void *)(v18 - 136) = a11;
  *(void *)(v18 - 128) = v14;
  *(void *)(v18 - 112) = v14;
  *(void *)(v18 - 104) = a13;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v17 ^ 0xFC3)))(v18 - 136);
  BOOL v20 = (((v17 ^ 0x6F6) - 70 + v16 + (((v13 - 8429627) >> 1) ^ 0xB0A4A4BF)
                                   + ((v13 - 8429627) & 0x6149497E)) & a10) == 0;
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((v20 | (2 * v20)) ^ v17)))(v19);
}

uint64_t sub_1005A3790()
{
  LODWORD(STACK[0x5D4]) = v0;
  return sub_1005C8438();
}

uint64_t sub_1005A37B0()
{
  *(void *)(v5 - 128) = v3;
  *(void *)(v5 - 112) = v2;
  *(_DWORD *)(v5 - 120) = (v1 + 194) ^ (460628867 * ((v5 - 128) ^ 0x4C96827D));
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xC5D)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * (((((v4 == 1964408259) ^ (7 * (v1 ^ 1))) & 1)
                                              * (v1 - 1000)) ^ v1)))(v6);
}

uint64_t sub_1005A3848()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 >> (v3 + 31)) & 1) == 0) * v4) ^ v1)))();
}

uint64_t sub_1005A3870(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6
                                                              + 8
                                                              * (int)((((a3 + 1384797493) & 0xAD75AB1F ^ 0x6D5)
                                                                     * (v4 + v3 - v5 == 944975114)) ^ a3)))(a1, a2, 25995472);
}

uint64_t sub_1005A38D0(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  __int16 v2 = *(_DWORD *)(result + 16) - 3243 * (((result ^ 0xC815 | 0xC663) - ((result ^ 0xC815) & 0xC663)) ^ 0xFD20);
  int v3 = (((2 * (v2 & 0x1FF ^ 0x7DC2BA6E)) & 0x3204047E) - (v2 & 0x1FF ^ 0x7DC2BA6E) + 1690417600) ^ 0x1B010AB9;
  *(_DWORD *)(v1 - 0x399DE98F08C0F044) = (((2 * v3) & 0x45127D62) - v3 - 1653161650) ^ 0xD46E43EF;
  *(void *)(v1 - 0x399DE98F08C0F064) = 0xC8549F4D82B6685FLL;
  *(_DWORD *)(v1 - 0x399DE98F08C0F048) = 394386889;
  int v4 = v2 ^ 0xF;
  if (v4 == 1)
  {
    int v5 = 394386905;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x399DE98F08C0F04CLL) = 1158412338;
    int v5 = 394386909;
LABEL_5:
    *(void *)(v1 - 0x399DE98F08C0F05CLL) = 0x6914B24BE19C3AC3;
    *(void *)(v1 - 0x399DE98F08C0F054) = 0x96EB4DB41E63C53CLL;
    *(_DWORD *)(v1 - 0x399DE98F08C0F048) = v5;
  }
  *(_DWORD *)(result + 4) = 103152451;
  return result;
}

uint64_t sub_1005A3AF4()
{
  STACK[0x438] = STACK[0x330];
  return ((uint64_t (*)(void))STACK[0x370])();
}

uint64_t sub_1005A3B0C()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * (((v1 + 1) > 0x13) | (4 * ((v1 + 1) > 0x13)) | v0)))();
}

void sub_1005A3B24(uint64_t a1)
{
  int v1 = 460628867 * ((((2 * a1) | 0x80334E9A) - a1 + 1072060595) ^ 0x8C8F2530);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1005A3BD0(int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((106
                                * (v2 - v3 - (((a1 ^ 0x5D9u) + 444) ^ 0x674uLL) >= (unint64_t)((a1 ^ 0x5D9u) - 308)
                                                                                 - 864)) ^ a1 ^ 0x5D9u)))();
}

uint64_t sub_1005A3C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((2035 * (v6 + 1 == v8 + 16)) ^ (a5 + 433))))(v5);
}

uint64_t sub_1005A3D38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v20 = a3 != 413196212 && a14 - v18 == ((v14 - 157) | 0x48) - 517488294;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16
                                                              + 8 * ((v20 * (v15 + (v14 ^ (v17 - 67)) - 93)) ^ v14)))(a1, a2, 25995472);
}

void sub_1005A3D98()
{
}

uint64_t sub_1005A3E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v28 - 120) = v24;
  *(void *)(v28 - 112) = a10;
  *(void *)(v28 - 136) = v27;
  *(void *)(v28 - 128) = v27;
  *(_DWORD *)(v28 - 144) = v25
                         + ((((v28 - 144) | 0x122292EE) - (v28 - 144) + ((v28 - 144) & 0xEDDD6D10)) ^ 0xA15F22BA) * v23
                         + 1021;
  *(void *)(v28 - 104) = a23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v25 + 1097)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (int)((((a21 - 1988463604) > 0x7FFFFFFE)
                                                   * (((v25 + 239) ^ 0xFFFFFD1E) + (v25 ^ 0x5DA))) ^ (v25 + 356))))(v29);
}

uint64_t sub_1005A3ED4@<X0>(uint64_t a1@<X3>, uint64_t a2@<X6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t))
{
  uint64_t v24 = v20 ^ 0x241u;
  *(unsigned char *)(a1 + (a3 + 2)) = *(unsigned char *)(a2 + ((v24 + 4294967279) & (v21 + 2158602864)));
  int v25 = 1759421093 * ((((v23 - 168) | 0xC192A817) - (v23 - 168) + ((v23 - 168) & 0x3E6D57E8)) ^ 0x72EF1843);
  *(_DWORD *)(v23 - 160) = v25 + v24 + 813;
  *(_DWORD *)(v23 - 156) = v25 + 638866197;
  *(void *)(v23 - 168) = a19;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * ((int)v24 + 2093)))(v23 - 168);
  return a20(v26);
}

uint64_t sub_1005A3F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21
                                                                                                  + 8 * (((*(_DWORD *)(a21 - 0xD547898781B11A8) == ((v22 + 1794566525) & 0x950915DE) - 25956978) * ((v22 - 1005465598) & 0x3BEE2FFD ^ 0x7ED)) ^ (v22 - 1463))))(a1, a2, a3, a4, 4269011726, a6, a7);
}

uint64_t sub_1005A4008@<X0>(int a1@<W0>, uint64_t a2@<X6>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  unsigned int v32 = (v24 + 534535947) & 0xE023A29D;
  char v33 = (v24 + v29) & v30;
  int v34 = v24 + 832;
  unint64_t v35 = (*(_DWORD *)(v26 + v31) ^ a3) + HIDWORD(v25);
  *(_DWORD *)(v26 + 4 * a2) = v35 + a3 - ((v35 << (v33 ^ v22)) & (v32 ^ (v21 - 388)));
  *(_DWORD *)(a21 + v31) = HIDWORD(v35) + a3 - 2 * HIDWORD(v35);
  BOOL v37 = v28 - 1860270335 > 341525638 || v28 - 1860270335 < a1;
  return (*(uint64_t (**)(void))(v27 + 8 * (v34 ^ (v37 * v23))))();
}

uint64_t sub_1005A40A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((834 * (a5 + 1 == v7 + 44)) ^ v5)))();
}

uint64_t sub_1005A4174(int a1, uint64_t a2, int a3)
{
  int v8 = v5 + v4;
  if (((v6 + 2020) ^ 0x7E4u) + v8 > 0x40) {
    int v3 = ((v6 + 2020) ^ 0x7E4) + v8;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((13 * (a3 - v8 + 1613 < (a1 + 1613 + v3))) ^ 0x201u)))();
}

uint64_t sub_1005A41C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v4
                                                             + 8
                                                             * ((1570
                                                               * (v3 == (((v2 + 0x80) & 0x6E)
                                                                                        + v2
                                                                                        - 28
                                                                                        - 92))) ^ v2)))(4294925278, a2, (v2 + 1152861412) & 0xBB48BCFF);
}

void sub_1005A4218(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (535753261 * ((-1040680992 - (a1 | 0xC1F877E0) + (a1 | 0x3E07881F)) ^ 0x34F38630));
  uint64_t v2 = *(void *)(a1 + 8);
  unsigned int v6 = (535753261 * ((433373245 - (&v4 | 0x19D4C03D) + (&v4 | 0xE62B3FC2)) ^ 0xECDF31ED)) ^ (v1 - 368);
  uint64_t v5 = v2;
  int v3 = (char *)*(&off_1009960C0 + (v1 ^ 0x436)) - 8;
  (*(void (**)(int *))&v3[8 * v1 + 7912])(&v4);
  __asm { BRAA            X8, X17 }
}

void sub_1005A4340()
{
}

void sub_1005A434C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  *unsigned int v38 = -2082333854;
  (*(void (**)(uint64_t))(a3 + 8 * (v37 + 1983)))(a37);
  JUMPOUT(0x1005A439CLL);
}

void sub_1005A44E0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1005A45EC(uint64_t a1)
{
  return sub_1005A45F4(a1, *v1);
}

uint64_t sub_1005A45F4(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v4 + 8 * (v2 ^ 0xAF9)))(*v6, a2, *(_DWORD *)(v3 - 0xD547898781B11B8) + (v2 ^ 0xD09A33A1));
  *int v9 = v8;
  *(_DWORD *)(v3 - 0xD547898781B11B8) = v7;
  _DWORD *v5 = v7;
  return result;
}

uint64_t sub_1005A4668(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((v6 + 418 * (a6 ^ 0x3B2) + 108) ^ a5) >= 0)
                                * ((418 * (a6 ^ 0x3B2) - 2004440648) & 0x777957C7 ^ 0x430)) ^ (418 * (a6 ^ 0x3B2)))))();
}

uint64_t sub_1005A46D0@<X0>(unsigned int a1@<W8>)
{
  BOOL v6 = a1 > 0x63BAFB87;
  if (v6 == v2 - 1319902937 < (v1 ^ 0x705) - 1673198769) {
    BOOL v6 = v2 - 1319902937 < v4;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((v6 * v3) ^ v1)))();
}

uint64_t sub_1005A4744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  return (*(uint64_t (**)(void))(v33 + 8
                                    * (int)((((a33 & 0x81797B5F) - 331) * (v34 < 0x2E435A48)) ^ (v35 + v36 - 1787))))();
}

uint64_t sub_1005A4794()
{
  BOOL v4 = v1 + 963064246 < (int)(v3 + 2089333991);
  if (v3 > 0x3774B18 != v1 + 963064246 < (v0 ^ 0x7B4) - 58150103) {
    BOOL v4 = v3 > 0x3774B18;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 * ((v0 ^ 0x3C9) - 1447)) ^ v0)))();
}

uint64_t sub_1005A480C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                        + 8
                                                                                        * ((35
                                                                                          * (v8 >= ((a8 + 502) ^ 0x62)
                                                                                                 - 910)) ^ a8)))(a1, a2, a3, a4, a5, 0);
}

void sub_1005A4840()
{
}

uint64_t sub_1005A484C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v45 = v39 - v41 + 1787;
  *uint64_t v43 = v43[623];
  unint64_t v46 = 535753261 * ((v44 - 0x276D84AF23161DA3 - 2 * ((v44 - 144) & 0xD8927B50DCE9E2EDLL)) ^ 0x2D70263DD61DECC2);
  *(void *)(v44 - 144) = (v42 + 511838716) ^ v46;
  int v47 = v39 - v41 + 2133062983 - v46;
  *(_DWORD *)(v44 - 120) = (v45 + 2133061196) ^ v46;
  *(_DWORD *)(v44 - 132) = v46 + v45 - 577154948;
  *(_DWORD *)(v44 - 128) = v47 + 80;
  *(_DWORD *)(v44 - 136) = v47 + 205;
  *(_DWORD *)(v44 - 104) = v46;
  *(void *)(v44 - 112) = v46 + 712190778;
  uint64_t v48 = (*(uint64_t (**)(uint64_t))(v40 + 8 * (v45 + v41)))(v44 - 144);
  return (*(uint64_t (**)(uint64_t))(a39 + 8 * *(int *)(v44 - 124)))(v48);
}

uint64_t sub_1005A4934(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8)
{
  uint64_t v18 = (((v9 + 923) | 1u) ^ (unint64_t)(v13 + 999)) + a8;
  int v19 = (a6 ^ v14)
      + v17
      + *(_DWORD *)(a4 + 4 * v18)
      + ((v14 + (v8 ^ a1) - (v11 & (2 * (v8 ^ a1)))) ^ a2)
      + (*(_DWORD *)(v12 + 4 * (*(unsigned char *)(a3 + v18) - 58)) ^ v16);
  unsigned int v20 = (v19 + v14 - (v11 & (2 * v19))) ^ v14;
  int v21 = ((v20 << (*(unsigned char *)(a5 + v18) - 102)) | (v20 >> (102 - *(unsigned char *)(a5 + v18)))) + (a1 ^ v14);
  return (*(uint64_t (**)(void))(v10 + 8 * ((2030 * (a8 + 1 == v15 + 32)) ^ v9)))(v21 + v14 - (v11 & (2 * v21)));
}

uint64_t sub_1005A4A00@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *int v8 = a7 ^ v9;
  return (*(uint64_t (**)(void))(v10 + 8 * ((61 * (((a1 - 42) ^ (*v7 == 0)) & 1)) ^ a1)))();
}

uint64_t sub_1005A4A44()
{
  return sub_1005A4A54();
}

uint64_t sub_1005A4A54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X6>, int a6@<W8>)
{
  LODWORD(STACK[0x584]) = a6 + 64;
  unsigned int v8 = LODWORD(STACK[0x5EC]) + 1923986315;
  BOOL v9 = a6 + 1432228693 > v8;
  if (a6 + 1432228693 < ((v6 - 1723) ^ 0xD23CD6D0) != v8 < 0xD23CD6E4) {
    BOOL v9 = a6 + 1432228693 < ((v6 - 1723) ^ 0xD23CD6D0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8 * ((499 * !v9) ^ v6)))(a1, a2, a3, a4, 3780875099, 84210482, a5, 3068745188);
}

uint64_t sub_1005A4AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005C68A0(a1, a2, a3, a4, 2172784515, 1485875752, 1781068369, STACK[0x360], (__n128)0);
}

uint64_t sub_1005A4B04()
{
  unsigned int v3 = *v0 - (((v1 + 1298956883) & 0xB2937799 ^ 0xF9162BA6) & (2 * *v0)) + 2089489695;
  BOOL v4 = ((2 * v3) & 0xEFFB77E8 ^ 0xE9122228) + (v3 ^ 0x8B76AEEB) + ((v1 + 1260144660) & 0xB4E3B459) + 1568406083 != 1434040912;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 | (16 * v4)) ^ v1)))();
}

uint64_t sub_1005A4BBC()
{
  return sub_1005A4BE0(0xF6B6F01630B60F7);
}

uint64_t sub_1005A4BE0@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X8>)
{
  uint64_t v13 = (v3 + 789);
  uint64_t v14 = v4 - 0xF6B6F01C329A48DLL + (v13 ^ a1);
  BOOL v16 = ((**v2 - (*a2 ^ v12)) ^ v11) + (v9 & (2 * (**v2 - (*a2 ^ v12)))) + v5 != ((v10 + v13 - 1842) ^ v7)
     || v14 == 0;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((v16 * v6) ^ v13)))();
}

void sub_1005A4C60()
{
}

void sub_1005A5064()
{
}

uint64_t sub_1005A5144@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W8>)
{
  if ((a4 - 1962456896) <= 0x18 && ((1 << (a4 - 64)) & 0x1000581) != 0) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v6
  }
                                                       + 8
                                                       * ((235
                                                         * ((*(_DWORD *)(v4 + v5 * (uint64_t)a3 + 40) & 1) == ((LODWORD(STACK[0x3C8]) + 108) ^ 0xFFFFFDE5) + LODWORD(STACK[0x3C8]) + 643)) ^ (LODWORD(STACK[0x3C8]) + 1184))))(a1, a2);
  else {
    return sub_1005A5178(a1, a2, a3);
  }
}

uint64_t sub_1005A5178(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((758 * ((((7 * (v3 ^ 0xCD)) ^ 0xA9) & *(_DWORD *)(v4 + v5 * (uint64_t)a3 + 40)) == 0)) ^ (v3 - 57))))();
}

void sub_1005A5208()
{
}

uint64_t sub_1005A5214()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + v0 + 134366220 < ((v2 - 932) | 0x52u) - 210)
                                * ((v2 - 1919757123) & 0x726D2F3F ^ 0x831)) ^ v2)))();
}

uint64_t sub_1005A5288(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53,int a54)
{
  return (*(uint64_t (**)(uint64_t))(v54
                                            + 8
                                            * ((((a54 & 0x8ABB58C7 ^ 0x5E0CEC1F) != 1577905256) * ((a3 - 207) ^ 0xF2)) ^ (a3 + 664))))(2717061202);
}

uint64_t sub_1005A52EC()
{
  return ((uint64_t (*)(void))STACK[0x3E0])();
}

void sub_1005A5330()
{
}

void sub_1005A533C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v28 = 535753261 * ((v27 + 1689794359 - 2 * ((v27 - 144) & 0x64B837C7)) ^ 0x6E4C39E8);
  *(void *)(v27 - 136) = a22;
  *(_DWORD *)(v27 - 144) = v28 + v25 + 169;
  *(_DWORD *)(v27 - 128) = v28 ^ 0x18F94B14;
  (*(void (**)(uint64_t))(v22 + 8 * (v25 + 627)))(v27 - 144);
  *(void *)(v27 - 136) = v24;
  *(void *)(v27 - 128) = v24;
  *(_DWORD *)(v27 - 144) = v25
                         + 1759421093 * ((2 * ((v27 - 144) & 0x43B959E8) - (v27 - 144) + 1011262992) ^ 0x8F3B1644)
                         + 471;
  *(void *)(v27 - 112) = a22;
  *(void *)(v27 - 104) = v26;
  *(void *)(v27 - 120) = v23;
  (*(void (**)(uint64_t))(v22 + 8 * (v25 + 547)))(v27 - 144);
  JUMPOUT(0x1005A1168);
}

uint64_t sub_1005A5424@<X0>(int a1@<W4>, int a2@<W7>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1752 * (a3 + (v4 ^ (a1 - 121) ^ 0xF361593A) < 0x38)) ^ (a2 + v4 - 745))))();
}

uint64_t sub_1005A5464@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v2 + (v1 - v4 - 1242)) = *(void *)(a1 + (v1 - v4 - 1242) - 7);
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 328) | (4 * (v4 == 328))) ^ v3)))();
}

uint64_t sub_1005A5498@<X0>(int a1@<W0>, int a2@<W8>)
{
  *(unsigned char *)(v8 + (a1 + v3 + 853) + 20) = *(unsigned char *)(v7 + (a1 + v3 + 853));
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((v3 + v2 + 147 - 219 != ((v2 + 147 + v4) & v5 ^ a2)) * ((v2 - 60) ^ v6)) ^ (v2 + 811))))();
}

uint64_t sub_1005A54F0()
{
  return sub_1005C4D0C();
}

void sub_1005A550C(uint64_t a1)
{
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1005A5640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((481 * (v4 == ((v3 - 146) | 0x421) - 25956699)) ^ (v3 + 941))))(a1, a2, a3, 25995479);
}

uint64_t sub_1005A568C()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0x8C3)))();
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((481 * (v1 == ((v0 - 146) | 0x421) - 25956699)) ^ (v0 + 941))))(v3);
}

uint64_t sub_1005A56EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  *(unsigned char *)(a6 + 1) = *(&a33 + 3 * (v33 ^ 0x20Fu) + v34 - 2014820912);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35
                                                              + 8
                                                              * ((1823 * ((v34 & 0xFFFFFFFC) == 2014820848)) ^ v33)))(a1, a2, a17);
}

void sub_1005A5710(int a1@<W8>)
{
  sub_100590388(((2 * ((a1 & 0xBFFFFFFF ^ 0xEF6368A3) & 0x2F6368B3 ^ (a1 | 0xFFFFFFEF))) ^ 0x80000021)+ (a1 & 0xBFFFFFFF ^ 0xEF6368A3)+ ((149 * ((v1 - 637) ^ 0x3E6)) ^ 0xEF63698E));
}

uint64_t sub_1005A576C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                         + 8
                                                                                         * (int)(((((v4 + 2093264429) & 0x833B4DBF ^ 0xFFFFFD49)
                                                                                                 + ((v4 + 585855411) & 0xDD148BDF))
                                                                                                * (v2 == v3)) ^ v4)))(a1, a2, 911, 1436, 1577905240, 2717061202);
}

uint64_t sub_1005A57DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x4B8]) = v8;
  LODWORD(STACK[0x4D4]) = v10;
  LODWORD(STACK[0x4A4]) = v9;
  LODWORD(STACK[0x4BC]) = v11;
  LODWORD(STACK[0x580]) = v16 + 80;
  uint64_t v17 = *(void *)(v15 + 416);
  int v18 = *(_DWORD *)(v17 - 0x399DE98F08C0F04CLL);
  LODWORD(STACK[0x52C]) = v12;
  *(_DWORD *)(v17 - 0x399DE98F08C0F04CLL) = a8
                                          + v13
                                          + (v18 ^ a8)
                                          + (v12 ^ a8)
                                          - (v14 & (2 * ((v18 ^ a8) + (v12 ^ a8))))
                                          - 572;
  return sub_1005B9BF8(82, LODWORD(STACK[0x3C8]), -1119688577, 25995479, a5, a6, -2032592446);
}

uint64_t sub_1005A5870@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,unint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v37 = 4 * (v35 - 309637234);
  unsigned int v38 = *(_DWORD *)(v34 + 4 * (v35 - 309637235));
  int v39 = ((v38 >> 30) + 65149794 - 4 * (v38 >> 31)) ^ v38;
  int v40 = ((1566083941 * v39 + 65149794 - ((45160138 * v39) & 0x7C436C4)) ^ *(_DWORD *)(v34 + v37)) - v35;
  *(_DWORD *)(v34 + v37) = v40 - ((2 * v40 + 82403556) & 0x7C436C4) + 374787028;
  *(void *)(v36 - 112) = a30;
  *(_DWORD *)(v36 - 128) = ((a2 + 2047648644) ^ 0x7F) - a29;
  *(_DWORD *)(v36 - 120) = (a2 + 2047648644) ^ a29;
  *(_DWORD *)(v36 - 104) = a29;
  *(void *)(v36 - 144) = (v35 + 2109211224) ^ a29;
  *(_DWORD *)(v36 - 136) = a2 + 2047648644 - a29 + 36;
  *(_DWORD *)(v36 - 132) = a29 + a2 - 577154948;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (a2 + a1)))(v36 - 144);
  return (*(uint64_t (**)(uint64_t))(a33 + 8 * *(int *)(v36 - 124)))(v41);
}

uint64_t sub_1005A598C(uint64_t a1, int a2, int a3)
{
  unsigned int v8 = v5 + a2;
  if (v8 <= 0x40) {
    unsigned int v8 = 64;
  }
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((29 * (a3 - v3 - v4 + v8 < v7 - 1)) ^ (v7 + 1364))))(3573564188);
}

void sub_1005A5A04(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, unsigned int a7)
{
  unsigned int v9 = 1178560073 * (((&a3 | 0xA850E0B5) + (~&a3 | 0x57AF1F4A)) ^ 0x9A46E0F4);
  a7 = -281237461 - v9;
  a5 = v9 ^ 0x1DF4F7A0;
  a6 = v9 + a1 - 745;
  a3 = v7;
  a4 = 0x571561323F812312;
  (*(void (**)(uint64_t *))(v8 + 8 * (a1 ^ 0xC53)))(&a3);
  sub_1005B3A04();
}

uint64_t sub_1005A5A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  BOOL v18 = a15 < 0x4C7715BD;
  unsigned int v19 = v16 - 680 + v15 - 514363230;
  int v20 = v18 ^ (v19 < 0x4C7715BD);
  BOOL v21 = v19 < a15;
  if (!v20) {
    BOOL v18 = v21;
  }
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((430 * !v18) ^ v16)))(3170082002);
}

uint64_t sub_1005A5B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, unsigned int a17)
{
  if (a17 < a5 != a15 + 1357918307 < a5) {
    BOOL v20 = a15 + 1357918307 < a5;
  }
  else {
    BOOL v20 = a15 + 1357918307 > a17;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((22 * v20) ^ (v19 + v18 + 864))))(2999816238, a2, a3, 43);
}

uint64_t sub_1005A5B08@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1941 * (a1 != ((((v1 - 1154411755) & 0x44CEEF5F) - 1466) ^ 0x94))) ^ v1)))();
}

void sub_1005A5B4C(_DWORD *a1, uint64_t a2, uint64_t a3, int a4)
{
  *((unsigned char *)a1 + v5 + 4) = -73;
  sub_1005A2FF4(a1, v4 + 1, a3, a4);
}

uint64_t sub_1005A5B78@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v7 = (a1 - v3);
  long long v8 = *(_OWORD *)(a3 + v7 - 15);
  long long v9 = *(_OWORD *)(a3 + v7 - 31);
  uint64_t v10 = v5 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 - 584 + v3 == 506) * a2) ^ v4)))();
}

uint64_t sub_1005A5BBC(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a5 + v7) = *(void *)(v8 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((56 * (a6 != a2)) ^ a1)))();
}

uint64_t sub_1005A5BF0@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (a1 + 2000)))(*v4);
  _DWORD *v3 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 572615245;
  *(_DWORD *)(v1 + 56) = 616072022;
  return result;
}

uint64_t sub_1005A5C3C@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v2 + 4 * (v7 + v5)) = *(_DWORD *)(*v3 + 4 * (v7 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v7 - 1 == v4) * v6) ^ v1)))();
}

uint64_t sub_1005A5C74(uint64_t a1, int a2)
{
  *(void *)(v6 + v4) = *(void *)(v3 + v4);
  return (*(uint64_t (**)(uint64_t, void))(v7 + 8 * (((a2 == 0) * v2) ^ v5)))(a1, (a2 + 8));
}

uint64_t sub_1005A5CA4@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((61 * (((v3 == v2) ^ (a1 + a1 - 49)) & 1)) ^ a1)))();
}

uint64_t sub_1005A5CD4@<X0>(int a1@<W0>, unsigned int a2@<W1>, char a3@<W2>, uint64_t a4@<X8>)
{
  unsigned int v14 = (((v5 + v6 + v11 - v7) >> (a2 ^ a3))
       + v11
       - ((2 * ((v5 + v6 + v11 - v7) >> (a2 ^ a3))) & 4)) ^ (v5 + v6 + v11 - v7);
  *(_DWORD *)(v12 + 4 * a4) = a4 + v13 + v14 * a1 - ((v4 + 2 + v14 * v9) & v10) - 1;
  return (*(uint64_t (**)(void))(v8 + 8 * ((56 * (a4 > 0x26E)) ^ a2)))();
}

uint64_t sub_1005A5CE8(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * (int)(((v4 + ((v2 - 72487314) & 0xEFFFF7F3) - 445) * (v1 == 63)) ^ v2)))(a1, -1858992362);
}

uint64_t sub_1005A5D34(unsigned int a1, int a2, uint64_t a3, int a4)
{
  int v9 = v6 + v4;
  unsigned int v10 = ((v8 - 844577333) & 0x325736FB ^ (v5 + 199) ^ (23 * ((v8 - 408) ^ 0x60B))) + v9;
  if (v10 <= 0x40) {
    unsigned int v10 = a1;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((97 * (a4 - v9 >= a2 + v10)) ^ (v8 - 408))))();
}

uint64_t sub_1005A5DA4@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  int v3 = (a2 - 245) | 0x485;
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, void))(v2 + 8 * (a2 + 1573)))(*(unsigned int *)STACK[0x2B8], a1, LODWORD(STACK[0x5B0]));
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * (((LODWORD(STACK[0x528]) != -25955570) * ((v3 - 1397) ^ 0x22)) ^ v3)))(v4);
}

uint64_t sub_1005A5E10(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  *a2 = 0;
  a17 = (1178560073
       * ((-1469648303 - (&a17 | 0xA866F251) + (&a17 | 0x57990DAE)) ^ 0x658F0DEE)) ^ 0x650810FC;
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v19 + 17144))(&a17);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((19 * (a18 == v18)) ^ 0x2C6u)))(v20);
}

uint64_t sub_1005A5EB0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((v2 ^ 0x14) + 112) ^ (*(void *)(v0 - 0xD547898781B11C0) == 0)) & 1)
                                * (3 * (v2 ^ 0x362) - 180)) ^ v2 ^ 0x114)))();
}

uint64_t sub_1005A5F18(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v3 == 32707526) ^ (3 * (v2 ^ 0xBC) + 114)) & 1) * a2) ^ (3 * (v2 ^ 0x1BC)))))();
}

uint64_t sub_1005A5F70()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1999 * (((v1 == 32707526) ^ (v0 + 114)) & 1)) ^ v0)))();
}

uint64_t sub_1005A5FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((559 * ((((a6 | 0x90) ^ 0x80) & v8) == v6 + (a6 | 0x90) + 895 + v7)) ^ (a6 | 0x90))))();
}

uint64_t sub_1005A6008@<X0>(int a1@<W1>, int a2@<W4>, int a3@<W5>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a4 + (a1 + a3)) = *(unsigned char *)(v4 + (a1 + a3));
  return (*(uint64_t (**)(void))(v6 + 8 * ((v5 + 1418) ^ (2 * (a1 - 1 == a2)))))();
}

void sub_1005A6038()
{
}

uint64_t sub_1005A6044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a13 = &STACK[0x130F29621C6D0948];
  a15 = 764 - 460628867 * ((((2 * &a13) | 0x98B0CA2E) - &a13 - 1280861463) ^ 0xCEE76A);
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 17424))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((1900 * (a14 == ((v15 + 183) ^ v17))) ^ v17)))(v18);
}

uint64_t sub_1005A60DC()
{
  *(void *)(v6 - 120) = v4;
  *(void *)(v6 - 136) = v1;
  *(_DWORD *)(v6 - 112) = (v3 - 187) ^ (((2 * (((v6 - 136) ^ 0x16C7926F) & 0x37D42D5D)
                                        - ((v6 - 136) ^ 0x16C7926F)
                                        + 1210831522) ^ 0x331858C4)
                                      * v0);
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ 0xCEC)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (v3 ^ (2
                                                   * (*(_DWORD *)(v6 - 128) != v5
                                                                             + ((v3 + 310630259) & 0xED7C26FF)
                                                                             - 767)))))(v7);
}