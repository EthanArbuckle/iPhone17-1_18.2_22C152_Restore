void *sub_10045F7D0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  int v20;
  unint64_t v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v1 = v0;
  v2 = type metadata accessor for IDSDSessionKeyValueDeliveryLocalEntry(0);
  v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100431F80(&qword_100A453B0);
  v6 = *v0;
  v7 = sub_100726BB0();
  v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_25:
    *v1 = v8;
    return result;
  }
  v25 = v1;
  result = (void *)(v7 + 64);
  v10 = v6 + 64;
  v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  v13 = 1 << *(unsigned char *)(v6 + 32);
  v14 = -1;
  if (v13 < 64) {
    v14 = ~(-1 << v13);
  }
  v15 = v14 & *(void *)(v6 + 64);
  v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v16) {
      goto LABEL_23;
    }
    v23 = *(void *)(v10 + 8 * v22);
    ++v12;
    if (!v23)
    {
      v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_23;
      }
      v23 = *(void *)(v10 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    v15 = (v23 - 1) & v23;
    v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_9:
    v19 = 4 * v18;
    v20 = *(_DWORD *)(*(void *)(v6 + 48) + 4 * v18);
    v21 = *(void *)(v26 + 72) * v18;
    sub_1004613A8(*(void *)(v6 + 56) + v21, (uint64_t)v5, type metadata accessor for IDSDSessionKeyValueDeliveryLocalEntry);
    *(_DWORD *)(*(void *)(v8 + 48) + v19) = v20;
    result = (void *)sub_10046129C((uint64_t)v5, *(void *)(v8 + 56) + v21, type metadata accessor for IDSDSessionKeyValueDeliveryLocalEntry);
  }
  v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_23:
    result = (void *)swift_release();
    v1 = v25;
    goto LABEL_25;
  }
  v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    v23 = *(void *)(v10 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_10045FA4C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v2;
  uint64_t v10 = *v2;
  sub_1004614A0((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
  swift_bridgeObjectRetain();
  uint64_t v11 = a2;
  uint64_t v12 = sub_1007263D0();
  uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v14 = v12 & ~v13;
  if ((*(void *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
  {
    uint64_t v22 = a1;
    uint64_t v15 = ~v13;
    uint64_t v16 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1004613A8(*(void *)(v10 + 48) + v16 * v14, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      sub_1004614A0((unint64_t *)&unk_100A45430, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      char v17 = sub_100726410();
      sub_100461304((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      if (v17) {
        break;
      }
      unint64_t v14 = (v14 + 1) & v15;
      if (((*(void *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        a1 = v22;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    sub_100461304(v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_1004613A8(*(void *)(*v23 + 48) + v16 * v14, v22, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_7:
    v18 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1004613A8(v11, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    uint64_t v24 = *v18;
    uint64_t *v18 = 0x8000000000000000;
    sub_100460128((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    uint64_t *v18 = v24;
    swift_bridgeObjectRelease();
    sub_10046129C(v11, a1, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    return 1;
  }
}

uint64_t sub_10045FD50()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v34 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100431F80((uint64_t *)&unk_100A47A90);
  uint64_t v7 = sub_1007269C0();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    v31 = v0;
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v10 = *(void *)(v6 + 56);
    v33 = (void *)(v6 + 56);
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & v10;
    int64_t v32 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = v7 + 56;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v15 << 6);
      }
      else
      {
        int64_t v19 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = v33[v19];
        ++v15;
        if (!v20)
        {
          int64_t v15 = v19 + 1;
          if (v19 + 1 >= v32) {
            goto LABEL_33;
          }
          unint64_t v20 = v33[v15];
          if (!v20)
          {
            int64_t v15 = v19 + 2;
            if (v19 + 2 >= v32) {
              goto LABEL_33;
            }
            unint64_t v20 = v33[v15];
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v32)
              {
LABEL_33:
                swift_release();
                v1 = v31;
                uint64_t v30 = 1 << *(unsigned char *)(v6 + 32);
                if (v30 > 63) {
                  bzero(v33, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v33 = -1 << v30;
                }
                *(void *)(v6 + 16) = 0;
                break;
              }
              unint64_t v20 = v33[v21];
              if (!v20)
              {
                while (1)
                {
                  int64_t v15 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_39;
                  }
                  if (v15 >= v32) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v33[v15];
                  ++v21;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v15 = v21;
            }
          }
        }
LABEL_23:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
      }
      uint64_t v22 = *(void *)(v34 + 72);
      sub_10046129C(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      sub_1004614A0((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      uint64_t result = sub_1007263D0();
      uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v13 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = sub_10046129C((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v8;
  return result;
}

uint64_t sub_100460128(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = *(void *)(*v3 + 16);
  unint64_t v13 = *(void *)(*v3 + 24);
  uint64_t v25 = v8;
  char v26 = v3;
  if (v13 > v12 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_10045FD50();
  }
  else
  {
    if (v13 > v12)
    {
      sub_1004603D0();
      goto LABEL_12;
    }
    sub_100460634();
  }
  uint64_t v14 = *v3;
  sub_1004614A0((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
  uint64_t v15 = sub_1007263D0();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v17 = ~v16;
    uint64_t v18 = *(void *)(v8 + 72);
    do
    {
      sub_1004613A8(*(void *)(v14 + 48) + v18 * a2, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      sub_1004614A0((unint64_t *)&unk_100A45430, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      char v19 = sub_100726410();
      sub_100461304((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      if (v19) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v17;
    }
    while (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v20 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_10046129C(a1, *(void *)(v20 + 48) + *(void *)(v25 + 72) * a2, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (!v23)
  {
    *(void *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_100726D30();
  __break(1u);
  return result;
}

void *sub_1004603D0()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100431F80((uint64_t *)&unk_100A47A90);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1007269B0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v9;
    return result;
  }
  uint64_t result = (void *)(v8 + 56);
  uint64_t v11 = v7 + 56;
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v11 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v21 >= v17) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_25;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_25;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v20 = *(void *)(v3 + 72) * v19;
    sub_1004613A8(*(void *)(v7 + 48) + v20, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    uint64_t result = (void *)sub_10046129C((uint64_t)v6, *(void *)(v9 + 48) + v20, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v17) {
    goto LABEL_25;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100460634()
{
  v1 = v0;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v33 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_100431F80((uint64_t *)&unk_100A47A90);
  uint64_t v7 = sub_1007269C0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  uint64_t v30 = v0;
  uint64_t v31 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v32 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 56;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v17 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v19 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v19);
    ++v15;
    if (!v20)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v20 = *(void *)(v31 + 8 * v15);
      if (!v20)
      {
        int64_t v15 = v19 + 2;
        if (v19 + 2 >= v32) {
          goto LABEL_33;
        }
        unint64_t v20 = *(void *)(v31 + 8 * v15);
        if (!v20) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
LABEL_24:
    uint64_t v22 = *(void *)(v33 + 72);
    sub_1004613A8(*(void *)(v6 + 48) + v22 * v18, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_1004614A0((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    uint64_t result = sub_1007263D0();
    uint64_t v23 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v24) & ~*(void *)(v13 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v16 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    uint64_t result = sub_10046129C((uint64_t)v5, *(void *)(v8 + 48) + v16 * v22, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    ++*(void *)(v8 + 16);
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v32)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    v1 = v30;
    goto LABEL_35;
  }
  unint64_t v20 = *(void *)(v31 + 8 * v21);
  if (v20)
  {
    int64_t v15 = v21;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v15 >= v32) {
      goto LABEL_33;
    }
    unint64_t v20 = *(void *)(v31 + 8 * v15);
    ++v21;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1004609D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100431F80(&qword_100A453D8);
  uint64_t v3 = (void *)sub_100726BE0();
  Swift::UInt32 v4 = *(_DWORD *)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  unint64_t result = sub_10045C6D4(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_DWORD *)(v3[6] + 4 * result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    unint64_t v12 = v8 + 2;
    Swift::UInt32 v4 = *((_DWORD *)v8 - 2);
    uint64_t v13 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10045C6D4(v4);
    uint64_t v8 = v12;
    uint64_t v5 = v13;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100460AD4(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A45470);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (Swift::UInt32 *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    sub_100431F80(&qword_100A453B0);
    uint64_t v8 = (void *)sub_100726BE0();
    uint64_t v9 = (uint64_t)v6 + *(int *)(v2 + 48);
    uint64_t v10 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v11 = *(void *)(v3 + 72);
    while (1)
    {
      sub_1004546B8(v10, (uint64_t)v6, &qword_100A45470);
      Swift::UInt32 v12 = *v6;
      unint64_t result = sub_10045C6D4(*v6);
      if (v14) {
        break;
      }
      unint64_t v15 = result;
      *(void *)((char *)v8 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(_DWORD *)(v8[6] + 4 * result) = v12;
      uint64_t v16 = v8[7];
      uint64_t v17 = type metadata accessor for IDSDSessionKeyValueDeliveryLocalEntry(0);
      unint64_t result = sub_10046129C(v9, v16 + *(void *)(*(void *)(v17 - 8) + 72) * v15, type metadata accessor for IDSDSessionKeyValueDeliveryLocalEntry);
      uint64_t v18 = v8[2];
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        goto LABEL_10;
      }
      v8[2] = v20;
      v10 += v11;
      if (!--v7) {
        return (unint64_t)v8;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_100460C98(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(a2 + 8) = *(_OWORD *)(a1 + 8);
  *(void *)(a2 + 24) = *(void *)(a1 + 24);
  return a2;
}

void *sub_100460CDC(void *a1, void *a2)
{
  return initializeWithCopy for IDSDSessionKeyValueDelivery.State(a2, a1);
}

uint64_t sub_100460CEC(uint64_t a1)
{
  return a1;
}

uint64_t sub_100460D14(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

unint64_t sub_100460D64(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100431F80(&qword_100A453C8);
  uint64_t v3 = (void *)sub_100726BE0();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t v6 = a1[6];
  unint64_t result = sub_10045C7FC(v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v5;
    uint64_t v10 = (uint64_t *)(v3[7] + 16 * result);
    *uint64_t v10 = v4;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    sub_100441FD4(v4, v6);
    if (!--v1) {
      return (unint64_t)v3;
    }
    uint64_t v5 = *(v9 - 2);
    uint64_t v4 = *(v9 - 1);
    unint64_t v6 = *v9;
    unint64_t result = sub_10045C7FC(v5);
    v9 += 3;
    if (v14) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

id sub_100460E68(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12)
{
  v33[3] = a11;
  v33[4] = a12;
  uint64_t v17 = sub_10044D5C4(v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a11 - 8) + 32))(v17, a7, a11);
  uint64_t v18 = a10;
  sub_1004DFE9C(12);
  BOOL v19 = &v18[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_participantProvider];
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_participantProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v20 = OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_state;
  swift_unknownObjectWeakInit();
  unint64_t v29 = sub_1004556D4((uint64_t)&_swiftEmptyArrayStorage);
  unint64_t v30 = sub_1004609D0((uint64_t)&_swiftEmptyArrayStorage);
  unint64_t v31 = sub_100460AD4((uint64_t)&_swiftEmptyArrayStorage);
  sub_100460C98((uint64_t)v28, (uint64_t)v32);
  sub_100431F80((uint64_t *)&unk_100A451E0);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 48) = 0;
  sub_100460CDC(v32, (void *)(v21 + 16));
  sub_100460CEC((uint64_t)v32);
  *(void *)&v18[v20] = v21;
  uint64_t v22 = &v18[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_groupID];
  *(void *)uint64_t v22 = a2;
  *((void *)v22 + 1) = a3;
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_metricsCollector] = a4;
  swift_beginAccess();
  *((void *)v19 + 1) = a6;
  swift_unknownObjectWeakAssign();
  sub_1004407E0((uint64_t)v33, (uint64_t)&v18[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_identityProvider]);
  *(void *)&v18[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_pushTokensForCapabilityProvider] = a8;
  sub_1004407E0(a9, (uint64_t)&v18[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_cryptoHandler]);
  id v23 = a4;
  swift_unknownObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v21 + 48));
  sub_100462C8C();
  os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 48));

  swift_release();
  v27.receiver = v18;
  v27.super_class = (Class)type metadata accessor for IDSDSessionKeyValueDelivery(0);
  id v24 = objc_msgSendSuper2(&v27, "init");
  sub_10044C6AC(a9);
  sub_10044C6AC((uint64_t)v33);
  return v24;
}

id sub_1004610D0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v23 = a6;
  uint64_t v24 = a8;
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v16 = *(void *)(a11 - 8);
  __chkstk_darwin(a1, a2);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v19 = objc_allocWithZone((Class)type metadata accessor for IDSDSessionKeyValueDelivery(0));
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, a7, a11);
  return sub_100460E68(a1, a2, a3, v21, v22, v23, (uint64_t)v18, v24, a9, v19, a11, a12);
}

uint64_t type metadata accessor for IDSDSessionKeyValueDelivery(uint64_t a1)
{
  return sub_100440FD0(a1, qword_100A4D2C8);
}

uint64_t sub_100461218(uint64_t a1)
{
  return a1;
}

void sub_100461240(uint64_t a1)
{
  sub_10045686C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_100461270(uint64_t a1)
{
  return sub_100457044(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10046129C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100461304(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_100461364(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_100457E50(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_100461390(uint64_t result, unint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_10044C144(result, a2, a3 & 1);
  }
  return result;
}

uint64_t sub_1004613A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void type metadata accessor for IDSGroupSessionClientDataKey(uint64_t a1)
{
}

unint64_t sub_100461424(uint64_t a1)
{
  return sub_10045A444(a1, *(_DWORD *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48));
}

uint64_t sub_100461458@<X0>(uint64_t *a1@<X8>)
{
  return sub_10045B1DC(*(_DWORD *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(_DWORD *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), a1, *(void *)(v1 + 72));
}

uint64_t sub_1004614A0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1004614E8(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100431F80((uint64_t *)&unk_100A45420);
      uint64_t v3 = (void *)sub_1007269E0();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_100726BA0();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = sub_100726A10();
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v11 = v9;
      Swift::Int v12 = sub_1007267E0(v3[5]);
      uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
        id v18 = *(id *)(v3[6] + 8 * v14);
        char v19 = sub_1007267F0();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = sub_1007267F0();

          if (v22) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v7[8 * v15] = v17 | v16;
      *(void *)(v3[6] + 8 * v14) = v11;
      uint64_t v23 = v3[2];
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_37;
      }
      v3[2] = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(a1 + 32 + 8 * v25);
    Swift::Int v28 = sub_1007267E0(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = sub_1007267F0();

      if (v35) {
        goto LABEL_23;
      }
      uint64_t v36 = ~v29;
      unint64_t v30 = (v30 + 1) & v36;
      unint64_t v31 = v30 >> 6;
      uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
      uint64_t v33 = 1 << v30;
      if ((v32 & (1 << v30)) != 0)
      {
        while (1)
        {
          id v37 = *(id *)(v3[6] + 8 * v30);
          char v38 = sub_1007267F0();

          if (v38) {
            break;
          }
          unint64_t v30 = (v30 + 1) & v36;
          unint64_t v31 = v30 >> 6;
          uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
          uint64_t v33 = 1 << v30;
          if ((v32 & (1 << v30)) == 0) {
            goto LABEL_31;
          }
        }
LABEL_23:

        uint64_t v5 = v42;
        goto LABEL_24;
      }
LABEL_31:
      uint64_t v5 = v42;
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_24:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

id sub_100461840(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  v30[3] = type metadata accessor for IDSGroupEncryptionIdentityController();
  v30[4] = &off_10098FA98;
  v30[0] = a7;
  unint64_t v15 = a10;
  sub_1004DFE9C(12);
  uint64_t v16 = &v15[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_participantProvider];
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_participantProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v17 = OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_state;
  swift_unknownObjectWeakInit();
  unint64_t v26 = sub_1004556D4((uint64_t)&_swiftEmptyArrayStorage);
  unint64_t v27 = sub_1004609D0((uint64_t)&_swiftEmptyArrayStorage);
  unint64_t v28 = sub_100460AD4((uint64_t)&_swiftEmptyArrayStorage);
  sub_100460C98((uint64_t)v25, (uint64_t)v29);
  sub_100431F80((uint64_t *)&unk_100A451E0);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 48) = 0;
  sub_100460CDC(v29, (void *)(v18 + 16));
  sub_100460CEC((uint64_t)v29);
  *(void *)&v15[v17] = v18;
  char v19 = &v15[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_groupID];
  *(void *)char v19 = a2;
  *((void *)v19 + 1) = a3;
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_metricsCollector] = a4;
  swift_beginAccess();
  *((void *)v16 + 1) = a6;
  swift_unknownObjectWeakAssign();
  sub_1004407E0((uint64_t)v30, (uint64_t)&v15[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_identityProvider]);
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_pushTokensForCapabilityProvider] = a8;
  sub_1004407E0(a9, (uint64_t)&v15[OBJC_IVAR____TtC17identityservicesd27IDSDSessionKeyValueDelivery_cryptoHandler]);
  id v20 = a4;
  swift_unknownObjectRetain();
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v18 + 48));
  sub_100462AFC();
  os_unfair_lock_unlock((os_unfair_lock_t)(v18 + 48));

  swift_release();
  v24.receiver = v15;
  v24.super_class = (Class)type metadata accessor for IDSDSessionKeyValueDelivery(0);
  id v21 = objc_msgSendSuper2(&v24, "init");
  sub_10044C6AC(a9);
  sub_10044C6AC((uint64_t)v30);
  return v21;
}

unint64_t sub_100461A80(unint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    unint64_t v8 = *(void *)(a2 + 8);
    sub_100441FD4(*(void *)a2, v8);
    *(void *)a1 = v7;
    *(void *)(a1 + 8) = v8;
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    uint64_t v9 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    *(void *)(a1 + 32) = v9;
    uint64_t v10 = *(int *)(a3 + 28);
    uint64_t v11 = a1 + v10;
    uint64_t v12 = a2 + v10;
    uint64_t v13 = sub_100725D30();
    unint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_100461B8C(uint64_t a1, uint64_t a2)
{
  sub_100442248(*(void *)a1, *(void *)(a1 + 8));
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_100725D30();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_100461C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_100441FD4(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_100725D30();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  return a1;
}

uint64_t sub_100461CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  sub_100441FD4(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  unint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v7;
  sub_100442248(v8, v9);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_100725D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_100461D94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v4 = *(int *)(a3 + 28);
  uint64_t v5 = a1 + v4;
  uint64_t v6 = a2 + v4;
  uint64_t v7 = sub_100725D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_100461E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_100442248(v6, v7);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_100725D30();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_100461EC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100461EDC);
}

uint64_t sub_100461EDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 32);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100725D30();
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 28);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_100461F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100461FAC);
}

uint64_t sub_100461FAC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 32) = a2;
  }
  else
  {
    uint64_t v7 = sub_100725D30();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100462054()
{
  uint64_t result = sub_100725D30();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_100462104()
{
  return type metadata accessor for IDSDSessionKeyValueDelivery(0);
}

uint64_t sub_10046210C()
{
  uint64_t result = sub_100725ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for IDSDSessionKeyValueDelivery.State(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for IDSDSessionKeyValueDelivery.State()
{
  swift_unknownObjectWeakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IDSDSessionKeyValueDelivery.State(void *a1, void *a2)
{
  swift_unknownObjectWeakCopyInit();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IDSDSessionKeyValueDelivery.State(void *a1, void *a2)
{
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for IDSDSessionKeyValueDelivery.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = swift_unknownObjectWeakTakeInit();
  __n128 result = *(__n128 *)(a2 + 8);
  *(__n128 *)(v3 + 8) = result;
  *(void *)(v3 + 24) = *(void *)(a2 + 24);
  return result;
}

void *assignWithTake for IDSDSessionKeyValueDelivery.State(void *a1, void *a2)
{
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSDSessionKeyValueDelivery.State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSDSessionKeyValueDelivery.State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSDSessionKeyValueDelivery.State()
{
  return &type metadata for IDSDSessionKeyValueDelivery.State;
}

void type metadata accessor for IDSGroupSessionClientDataEncryption(uint64_t a1)
{
}

void type metadata accessor for IDSRealTimeEncryptionKMWrapMode(uint64_t a1)
{
}

void sub_100462480(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_1004624C8()
{
  return sub_1004614A0(&qword_100A45348, type metadata accessor for IDSGroupSessionClientDataKey);
}

uint64_t sub_100462510()
{
  _Block_release(*(const void **)(v0 + 40));

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_100462560()
{
  unint64_t v2 = *(void **)(v0 + 16);
  int v3 = *(_DWORD *)(v0 + 24);
  int v4 = *(_DWORD *)(v0 + 28);
  uint64_t v5 = *(void **)(v0 + 32);
  uint64_t v6 = *(void **)(v0 + 40);
  uint64_t v7 = *(void **)(v0 + 48);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_100462638;
  uint64_t v9 = (uint64_t (*)(void *, int, int, void *, void *, void *))((char *)&dword_100A45358 + dword_100A45358);
  return v9(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_100462638()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_100462730()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_100462CA4;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_100A471F0 + dword_100A471F0);
  return v6(v2, v3, v4);
}

uint64_t sub_1004627F4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_100462834(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100462CA4;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_100A47200 + dword_100A47200);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_100462900()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_100462938(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100462638;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_100A47210 + dword_100A47210);
  return v6(a1, v4);
}

uint64_t sub_1004629F0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100431F80(&qword_100A453A0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_100462AFC()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_100462B18(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSDSessionKeyValueDeliveryLocalEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_100462B7C()
{
  unint64_t result = qword_100A453F0;
  if (!qword_100A453F0)
  {
    sub_100462C50(255, (unint64_t *)&unk_100A468F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A453F0);
  }
  return result;
}

uint64_t sub_100462BE4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100431F80(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100462C48()
{
  return swift_release();
}

uint64_t sub_100462C50(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_100462C8C()
{
  return sub_100462AFC();
}

uint64_t sub_100462CA8()
{
  return swift_unknownObjectWeakLoadStrong();
}

void sub_100462CF8(void *a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_delegate;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
}

void (*sub_100462D60(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100462DE8;
}

void sub_100462DE8(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  *(void *)((char *)(*a1)[6] + (void)(*a1)[5] + 8) = (*a1)[4];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

id sub_100462E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  return sub_100462ED0(a1, a2, a3, a4, a5);
}

id sub_100462ED0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a4;
  uint64_t v32 = a5;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v28 = a1;
  uint64_t v27 = sub_100726740();
  uint64_t v6 = *(void *)(v27 - 8);
  __chkstk_darwin(v27, v7);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100726700();
  __chkstk_darwin(v10, v11);
  uint64_t v12 = sub_100725F20();
  __chkstk_darwin(v12 - 8, v13);
  uint64_t v26 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_q;
  v25[0] = sub_100462C50(0, (unint64_t *)&qword_100A45480);
  unint64_t v14 = v5;
  sub_100725F00();
  id v34 = _swiftEmptyArrayStorage;
  sub_10046C718(&qword_100A44A68, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100431F80((uint64_t *)&unk_100A45490);
  sub_1004413A8((unint64_t *)&qword_100A44A70, (uint64_t *)&unk_100A45490);
  sub_100726890();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v27);
  *(void *)(v25[1] + v26) = sub_100726760();
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  sub_1004DFE9C(2);
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_handlers] = _swiftEmptyArrayStorage;
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_desired] = &_swiftEmptySetSingleton;
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent] = &_swiftEmptySetSingleton;
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlyAcked] = &_swiftEmptySetSingleton;
  uint64_t v15 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock;
  sub_100431F80((uint64_t *)&unk_100A454B0);
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = 0;
  *(void *)&v14[v15] = v16;
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_setGenerationCount] = 0;
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_sendGenerationCount] = 0;
  uint64_t v17 = v28;
  sub_1004407E0(v28, (uint64_t)&v14[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_cryptoHandler]);
  uint64_t v18 = &v14[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_service];
  uint64_t v19 = v30;
  *(void *)uint64_t v18 = v29;
  *((void *)v18 + 1) = v19;
  id v20 = &v14[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_sessionID];
  uint64_t v21 = v32;
  *(void *)id v20 = v31;
  *((void *)v20 + 1) = v21;

  char v22 = (objc_class *)type metadata accessor for IDSGroupQUICMaterialExchangeController();
  v33.receiver = v14;
  v33.super_class = v22;
  id v23 = objc_msgSendSuper2(&v33, "init");
  sub_10044C6AC(v17);
  return v23;
}

uint64_t type metadata accessor for IDSGroupQUICMaterialExchangeController()
{
  uint64_t result = qword_100A4D598;
  if (!qword_100A4D598) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004632B8()
{
  uint64_t v1 = *(os_unfair_lock_s **)((char *)v0
                            + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_100469128();
  os_unfair_lock_unlock(v1 + 4);
  uint64_t v2 = swift_release();
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x188))(v2);
}

void sub_100463394()
{
  uint64_t v1 = *(char **)(v0 + 16);
  *(void *)&v1[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_desired] = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_setGenerationCount];
  BOOL v3 = __OFADD__(v2, 1);
  uint64_t v4 = v2 + 1;
  if (v3)
  {
    __break(1u);
  }
  else
  {
    *(void *)&v1[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_setGenerationCount] = v4;
    uint64_t v5 = v1;
    uint64_t v6 = sub_100725EB0();
    os_log_type_t v7 = sub_1007266E0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315394;
      sub_10043E578(0xD000000000000017, 0x80000001008C19B0, &v9);
      sub_100726830();
      *(_WORD *)(v8 + 12) = 2048;
      sub_100726830();

      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: desired: %ld", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

uint64_t sub_100463564()
{
  uint64_t v1 = sub_100725EF0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100725F20();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = *(void *)&v0[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_q];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  aBlock[4] = sub_100469188;
  aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_100435714;
  aBlock[3] = &unk_10098DE88;
  uint64_t v12 = _Block_copy(aBlock);
  uint64_t v13 = v0;
  sub_100725F00();
  v15[1] = &_swiftEmptyArrayStorage;
  sub_10046C718((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100431F80((uint64_t *)&unk_100A454C0);
  sub_1004413A8((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
  sub_100726890();
  sub_100726750();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  return swift_release();
}

uint64_t sub_100463858()
{
  uint64_t v1 = v0;
  unint64_t v127 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  v129 = *(void **)(v127 - 8);
  uint64_t v3 = __chkstk_darwin(v127, v2);
  *(void *)&long long v128 = (char *)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v126 = (uint64_t)&v111 - v7;
  uint64_t v9 = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)&v111 - v10;
  __chkstk_darwin(v9, v12);
  unint64_t v14 = (char *)&v111 - v13;
  uint64_t v115 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock;
  uint64_t v15 = *(os_unfair_lock_s **)&v0[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock];
  swift_retain();
  os_unfair_lock_lock(v15 + 4);
  swift_release();
  uint64_t v16 = &v0[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_l];
  v116 = v1;
  uint64_t v17 = v1;
  uint64_t v130 = (uint64_t)v16;
  uint64_t v18 = sub_100725EB0();
  os_log_type_t v19 = sub_1007266E0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v21 = &unk_100A4D000;
  v118 = v17;
  if (v20)
  {
    uint64_t v22 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 136315650;
    uint64_t v134 = sub_10043E578(0xD00000000000001FLL, 0x80000001008C18E0, aBlock);
    sub_100726830();
    *(_WORD *)(v22 + 12) = 2048;
    uint64_t v134 = *(void *)(*(void *)&v118[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_desired]
                     + 16);
    sub_100726830();
    *(_WORD *)(v22 + 22) = 2048;
    uint64_t v23 = *(void *)(*(void *)&v118[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent]
                    + 16);

    uint64_t v134 = v23;
    sub_100726830();

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s: checking if we have materials to send (desired: %ld, currentlySent: %ld)", (uint8_t *)v22, 0x20u);
    swift_arrayDestroy();
    uint64_t v21 = (void *)&unk_100A4D000;
    swift_slowDealloc();
    uint64_t v17 = v118;
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v113 = v21[173];
  uint64_t v24 = *(void *)&v17[v113];
  uint64_t v117 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent;
  uint64_t v25 = *(void *)&v17[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent];
  if (*(void *)(v25 + 16) <= *(void *)(v24 + 16) >> 3)
  {
    aBlock[0] = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1004692F8(v25);
    swift_bridgeObjectRelease();
    uint64_t v27 = (void *)aBlock[0];
    if (*(void *)(aBlock[0] + 16)) {
      goto LABEL_6;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v31 = *(os_unfair_lock_s **)&v116[v115];
    swift_retain();
    os_unfair_lock_unlock(v31 + 4);
    return swift_release();
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_1004697A4(v26, v24);
  swift_bridgeObjectRelease();
  if (!v27[2]) {
    goto LABEL_9;
  }
LABEL_6:
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_100725EB0();
  os_log_type_t v29 = sub_1007266E0();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315394;
    uint64_t v134 = sub_10043E578(0xD00000000000001FLL, 0x80000001008C18E0, aBlock);
    sub_100726830();
    *(_WORD *)(v30 + 12) = 2048;
    uint64_t v134 = v27[2];
    sub_100726830();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "%s: %ld materials to send", (uint8_t *)v30, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v17 = v118;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease();
  }

  uint64_t v120 = (*(uint64_t (**)(void *))((swift_isaMask & *(void *)v17) + 0x198))(v27);
  uint64_t v112 = v33;
  uint64_t v34 = sub_100725EB0();
  os_log_type_t v35 = sub_1007266B0();
  BOOL v36 = os_log_type_enabled((os_log_t)v34, v35);
  v119 = v27;
  if (v36)
  {
    id v37 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v37 = 136315138;
    uint64_t v134 = sub_10043E578(0xD00000000000001FLL, 0x80000001008C18E0, aBlock);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v34, v35, "%s: previously sent", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v38 = *(void *)&v118[v117];
  uint64_t v39 = *(void *)(v38 + 56);
  v123 = (char *)(v38 + 56);
  uint64_t v40 = 1 << *(unsigned char *)(v38 + 32);
  uint64_t v41 = -1;
  if (v40 < 64) {
    uint64_t v41 = ~(-1 << v40);
  }
  unint64_t v42 = v41 & v39;
  uint64_t v124 = (unint64_t)(v40 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v43 = 0;
  *(void *)&long long v44 = 136315394;
  long long v125 = v44;
  unint64_t v114 = (unint64_t)"sendGenerationCount";
  v122 = (char *)0x80000001008C18E0;
  v121 = (char *)&type metadata for Any + 8;
  if (v42) {
    goto LABEL_18;
  }
LABEL_19:
  int64_t v47 = v43 + 1;
  if (!__OFADD__(v43, 1))
  {
    if (v47 >= v124) {
      goto LABEL_36;
    }
    unint64_t v48 = *(void *)&v123[8 * v47];
    ++v43;
    if (!v48)
    {
      int64_t v43 = v47 + 1;
      if (v47 + 1 >= v124) {
        goto LABEL_36;
      }
      unint64_t v48 = *(void *)&v123[8 * v43];
      if (!v48)
      {
        int64_t v43 = v47 + 2;
        if (v47 + 2 >= v124) {
          goto LABEL_36;
        }
        unint64_t v48 = *(void *)&v123[8 * v43];
        if (!v48)
        {
          int64_t v49 = v47 + 3;
          if (v49 < v124)
          {
            unint64_t v48 = *(void *)&v123[8 * v49];
            if (v48)
            {
              int64_t v43 = v49;
              goto LABEL_32;
            }
            while (1)
            {
              int64_t v43 = v49 + 1;
              if (__OFADD__(v49, 1)) {
                goto LABEL_81;
              }
              if (v43 >= v124) {
                break;
              }
              unint64_t v48 = *(void *)&v123[8 * v43];
              ++v49;
              if (v48) {
                goto LABEL_32;
              }
            }
          }
LABEL_36:
          swift_release();
          v55 = v118;
          uint64_t v56 = *(void *)&v118[v113];
          uint64_t v57 = v112;
          if (*(void *)(v112 + 16) <= *(void *)(v56 + 16) >> 3)
          {
            aBlock[0] = *(void *)&v118[v113];
            swift_bridgeObjectRetain();
            sub_1004692F8(v57);
            v58 = (void *)aBlock[0];
          }
          else
          {
            swift_bridgeObjectRetain();
            v58 = sub_1004697A4(v57, v56);
          }
          unint64_t v59 = v120;
          uint64_t v60 = v117;
          *(void *)&v55[v117] = v58;
          swift_bridgeObjectRelease();
          v61 = *(char **)&v55[v60];
          v62 = v55;
          swift_bridgeObjectRetain_n();
          v63 = v62;
          v121 = v61;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v34 = sub_100725EB0();
          v64 = v55;
          LOBYTE(v43) = sub_1007266E0();
          BOOL v65 = os_log_type_enabled((os_log_t)v34, (os_log_type_t)v43);
          v122 = v63;
          if (!v65)
          {

            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease_n();
            goto LABEL_44;
          }
          uint64_t v11 = (char *)swift_slowAlloc();
          uint64_t v124 = swift_slowAlloc();
          aBlock[0] = v124;
          *(_DWORD *)uint64_t v11 = 136315906;
          uint64_t v134 = sub_10043E578(0xD00000000000001FLL, v114 | 0x8000000000000000, aBlock);
          sub_100726830();
          *((_WORD *)v11 + 6) = 2048;
          uint64_t v66 = *(void *)(*(void *)&v64[v60] + 16);

          uint64_t v134 = v66;
          sub_100726830();

          *((_WORD *)v11 + 11) = 2048;
          if (!(v59 >> 62))
          {
            uint64_t v67 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
            goto LABEL_42;
          }
          goto LABEL_84;
        }
      }
    }
LABEL_32:
    unint64_t v42 = (v48 - 1) & v48;
    for (unint64_t i = __clz(__rbit64(v48)) + (v43 << 6); ; unint64_t i = v45 | (v43 << 6))
    {
      sub_10046C760(*(void *)(v38 + 48) + v129[9] * i, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      sub_10046B3B8((uint64_t)v14, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      uint64_t v34 = v130;
      v50 = sub_100725EB0();
      os_log_type_t v51 = sub_1007266B0();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v52 = v125;
        *(void *)(v52 + 4) = sub_10043E578(0xD00000000000001FLL, (unint64_t)v122, aBlock);
        *(_WORD *)(v52 + 12) = 2080;
        sub_10046C718(&qword_100A454D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        uint64_t v53 = sub_100726D00();
        uint64_t v34 = v54;
        *(void *)(v52 + 14) = sub_10043E578(v53, v54, aBlock);
        swift_bridgeObjectRelease();
        sub_10046B6C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        _os_log_impl((void *)&_mh_execute_header, v50, v51, "%s    %s", (uint8_t *)v52, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        if (!v42) {
          goto LABEL_19;
        }
      }
      else
      {

        sub_10046B6C0((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        if (!v42) {
          goto LABEL_19;
        }
      }
LABEL_18:
      unint64_t v45 = __clz(__rbit64(v42));
      v42 &= v42 - 1;
    }
  }
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
  do
  {
    __break(1u);
LABEL_84:
    swift_bridgeObjectRetain();
    uint64_t v67 = sub_100726BA0();
    swift_bridgeObjectRelease();
LABEL_42:
    swift_bridgeObjectRelease();
    uint64_t v134 = v67;
    sub_100726830();
    swift_bridgeObjectRelease();
    *((_WORD *)v11 + 16) = 2048;
    uint64_t v68 = *(void *)(v112 + 16);
    swift_bridgeObjectRelease();
    uint64_t v134 = v68;
    sub_100726830();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v34, (os_log_type_t)v43, "%s: set currentlySent to %ld materials (%ld succeeded wrapping, %ld failed)", (uint8_t *)v11, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_44:
    v69 = sub_100725EB0();
    os_log_type_t v70 = sub_1007266B0();
    BOOL v71 = os_log_type_enabled(v69, v70);
    uint64_t v72 = v114;
    if (v71)
    {
      v73 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)v73 = 136315138;
      uint64_t v134 = sub_10043E578(0xD00000000000001FLL, v72 | 0x8000000000000000, aBlock);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v69, v70, "%s: newly sent", v73, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v74 = v128;
    uint64_t v34 = v72;
    uint64_t v75 = *(void *)&v118[v117];
    uint64_t v76 = v75 + 56;
    uint64_t v77 = 1 << *(unsigned char *)(v75 + 32);
    uint64_t v78 = -1;
    if (v77 < 64) {
      uint64_t v78 = ~(-1 << v77);
    }
    unint64_t v79 = v78 & *(void *)(v75 + 56);
    uint64_t v11 = (char *)((unint64_t)(v77 + 63) >> 6);
    swift_bridgeObjectRetain();
    int64_t v43 = 0;
    uint64_t v124 = v34 | 0x8000000000000000;
    v123 = (char *)&type metadata for Any + 8;
    while (v79)
    {
      while (1)
      {
        unint64_t v80 = __clz(__rbit64(v79));
        v79 &= v79 - 1;
        unint64_t v81 = v80 | (v43 << 6);
LABEL_66:
        uint64_t v85 = v126;
        sub_10046C760(*(void *)(v75 + 48) + v129[9] * v81, v126, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        sub_10046B3B8(v85, v74, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        uint64_t v34 = v130;
        v86 = sub_100725EB0();
        os_log_type_t v87 = sub_1007266B0();
        if (os_log_type_enabled(v86, v87)) {
          break;
        }

        sub_10046B6C0(v74, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        if (!v79) {
          goto LABEL_52;
        }
      }
      uint64_t v88 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v88 = v125;
      *(void *)(v88 + 4) = sub_10043E578(0xD00000000000001FLL, v124, aBlock);
      *(_WORD *)(v88 + 12) = 2080;
      sub_10046C718(&qword_100A454D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      uint64_t v89 = sub_100726D00();
      uint64_t v34 = v90;
      *(void *)(v88 + 14) = sub_10043E578(v89, v90, aBlock);
      swift_bridgeObjectRelease();
      sub_10046B6C0(v128, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      _os_log_impl((void *)&_mh_execute_header, v86, v87, "%s    %s", (uint8_t *)v88, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v74 = v128;
      swift_slowDealloc();
    }
LABEL_52:
    int64_t v82 = v43 + 1;
    if (__OFADD__(v43, 1)) {
      goto LABEL_80;
    }
    if (v82 < (uint64_t)v11)
    {
      unint64_t v83 = *(void *)(v76 + 8 * v82);
      ++v43;
      if (v83) {
        goto LABEL_65;
      }
      int64_t v43 = v82 + 1;
      if (v82 + 1 < (uint64_t)v11)
      {
        unint64_t v83 = *(void *)(v76 + 8 * v43);
        if (v83) {
          goto LABEL_65;
        }
        int64_t v43 = v82 + 2;
        if (v82 + 2 < (uint64_t)v11)
        {
          unint64_t v83 = *(void *)(v76 + 8 * v43);
          if (v83) {
            goto LABEL_65;
          }
          int64_t v84 = v82 + 3;
          if (v84 < (uint64_t)v11)
          {
            unint64_t v83 = *(void *)(v76 + 8 * v84);
            if (v83)
            {
              int64_t v43 = v84;
LABEL_65:
              unint64_t v79 = (v83 - 1) & v83;
              unint64_t v81 = __clz(__rbit64(v83)) + (v43 << 6);
              goto LABEL_66;
            }
            while (1)
            {
              int64_t v43 = v84 + 1;
              if (__OFADD__(v84, 1)) {
                goto LABEL_82;
              }
              if (v43 >= (uint64_t)v11) {
                break;
              }
              unint64_t v83 = *(void *)(v76 + 8 * v43);
              ++v84;
              if (v83) {
                goto LABEL_65;
              }
            }
          }
        }
      }
    }
    swift_release();
    uint64_t v11 = v122;
    uint64_t v91 = *(void *)&v122[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_sendGenerationCount];
    uint64_t v92 = v91 + 1;
  }
  while (__OFADD__(v91, 1));
  *(void *)&v122[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_sendGenerationCount] = v92;
  v93 = *(os_unfair_lock_s **)&v116[v115];
  swift_retain();
  os_unfair_lock_unlock(v93 + 4);
  swift_release();
  v94 = &v11[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_handlers];
  swift_beginAccess();
  uint64_t v95 = *(void *)v94;
  uint64_t v96 = *(void *)(*(void *)v94 + 16);
  if (v96)
  {
    uint64_t v97 = v95 + 32;
    v129 = v132;
    *(void *)&long long v125 = v95;
    swift_bridgeObjectRetain();
    *(void *)&long long v98 = 136315138;
    long long v128 = v98;
    unint64_t v127 = v114 | 0x8000000000000000;
    uint64_t v126 = (uint64_t)&type metadata for Any + 8;
    v99 = v122;
    v100 = v119;
    v101 = v121;
    do
    {
      sub_10046BDA8();
      v102 = sub_100725EB0();
      os_log_type_t v103 = sub_1007266E0();
      if (os_log_type_enabled(v102, v103))
      {
        uint64_t v104 = swift_slowAlloc();
        aBlock[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v104 = v128;
        *(void *)(v104 + 4) = sub_10043E578(0xD00000000000001FLL, v127, aBlock);
        _os_log_impl((void *)&_mh_execute_header, v102, v103, "%s: sending to handler", (uint8_t *)v104, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }

      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        v106 = (void *)Strong;
        sub_100462C50(0, &qword_100A455C8);
        Class isa = sub_100726560().super.isa;
        v108 = (void *)swift_allocObject();
        v108[2] = v99;
        v108[3] = v92;
        v108[4] = v100;
        v108[5] = v101;
        v132[2] = sub_10046C70C;
        v132[3] = v108;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v132[0] = sub_10046593C;
        v132[1] = &unk_10098DFA8;
        v109 = _Block_copy(aBlock);
        id v110 = v99;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_release();
        [v106 qrMaterialExchangePutMaterial:isa completionHandler:v109];
        _Block_release(v109);
        swift_unknownObjectRelease();
      }
      sub_100461218((uint64_t)v133);
      v97 += 8;
      --v96;
    }
    while (v96);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100464C20(char a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v82 = a5;
  uint64_t v99 = a4;
  uint64_t v93 = sub_100725EF0();
  int64_t v106 = *(void *)(v93 - 8);
  __chkstk_darwin(v93, v8);
  uint64_t v92 = (char *)&v79 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_100725F20();
  uint64_t v105 = *(void *)(v91 - 8);
  __chkstk_darwin(v91, v10);
  unint64_t v90 = (char *)&v79 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v89 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v87 = (uint64_t)&v79 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = v15;
  __chkstk_darwin(v14, v16);
  uint64_t v96 = (uint64_t)&v79 - v17;
  uint64_t v18 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v104 = *(void *)(v18 - 8);
  uint64_t v20 = __chkstk_darwin(v18, v19);
  uint64_t v22 = (char *)&v79 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v20, v23);
  uint64_t v26 = (char *)&v79 - v25;
  uint64_t v28 = __chkstk_darwin(v24, v27);
  uint64_t v30 = (char *)&v79 - v29;
  __chkstk_darwin(v28, v31);
  uint64_t v103 = (uint64_t)&v79 - v32;
  uint64_t v33 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock;
  uint64_t v34 = *(os_unfair_lock_s **)&a2[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock];
  swift_retain();
  os_unfair_lock_lock(v34 + 4);
  swift_release();
  if (*(void *)&a2[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_sendGenerationCount] != a3)
  {
    uint64_t v67 = *(os_unfair_lock_s **)&a2[v33];
LABEL_41:
    swift_retain();
    os_unfair_lock_unlock(v67 + 4);
    return swift_release();
  }
  uint64_t v81 = v33;
  if ((a1 & 1) == 0)
  {
    uint64_t v68 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent;
    uint64_t v69 = *(void *)&a2[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent];
    uint64_t v70 = v99;
    uint64_t v71 = v81;
    if (*(void *)(v99 + 16) > *(void *)(v69 + 16) >> 3)
    {
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_1004697A4(v70, v69);
    }
    else
    {
      aBlock[0] = *(void *)&a2[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent];
      swift_bridgeObjectRetain();
      sub_1004692F8(v70);
      uint64_t v78 = (void *)aBlock[0];
    }
    *(void *)&a2[v68] = v78;
    swift_bridgeObjectRelease();
    uint64_t v67 = *(os_unfair_lock_s **)&a2[v71];
    goto LABEL_41;
  }
  uint64_t v80 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_sendGenerationCount;
  uint64_t v35 = v99;
  uint64_t v36 = *(void *)(v99 + 56);
  uint64_t v97 = v99 + 56;
  uint64_t v37 = 1 << *(unsigned char *)(v99 + 32);
  if (v37 < 64) {
    uint64_t v38 = ~(-1 << v37);
  }
  else {
    uint64_t v38 = -1;
  }
  unint64_t v39 = v38 & v36;
  uint64_t v102 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlyAcked;
  uint64_t v86 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_q;
  int64_t v98 = (unint64_t)(v37 + 63) >> 6;
  uint64_t v85 = v109;
  int64_t v84 = (void (**)(char *, uint64_t))(v106 + 8);
  unint64_t v83 = (void (**)(char *, uint64_t))(v105 + 8);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v41 = 0;
  v100 = v22;
  v101 = a2;
  while (1)
  {
    if (v39)
    {
      uint64_t v105 = (v39 - 1) & v39;
      int64_t v106 = v41;
      unint64_t v42 = __clz(__rbit64(v39)) | (v41 << 6);
      goto LABEL_25;
    }
    int64_t v43 = v41 + 1;
    if (__OFADD__(v41, 1))
    {
      __break(1u);
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v43 >= v98) {
      goto LABEL_38;
    }
    unint64_t v44 = *(void *)(v97 + 8 * v43);
    int64_t v45 = v41 + 1;
    if (!v44)
    {
      int64_t v45 = v41 + 2;
      if (v41 + 2 >= v98) {
        goto LABEL_38;
      }
      unint64_t v44 = *(void *)(v97 + 8 * v45);
      if (!v44)
      {
        int64_t v45 = v41 + 3;
        if (v41 + 3 >= v98) {
          goto LABEL_38;
        }
        unint64_t v44 = *(void *)(v97 + 8 * v45);
        if (!v44) {
          break;
        }
      }
    }
LABEL_24:
    uint64_t v105 = (v44 - 1) & v44;
    int64_t v106 = v45;
    unint64_t v42 = __clz(__rbit64(v44)) + (v45 << 6);
LABEL_25:
    uint64_t v47 = v103;
    uint64_t v48 = *(void *)(v104 + 72);
    sub_10046C760(*(void *)(v35 + 48) + v48 * v42, v103, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_10046B3B8(v47, (uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    uint64_t v49 = *(void *)&a2[v102];
    if (!*(void *)(v49 + 16)) {
      goto LABEL_31;
    }
    sub_10046C718((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_1007263D0();
    uint64_t v51 = -1 << *(unsigned char *)(v49 + 32);
    unint64_t v52 = v50 & ~v51;
    if (((*(void *)(v49 + 56 + ((v52 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v52) & 1) == 0)
    {
LABEL_30:
      swift_bridgeObjectRelease();
      uint64_t v22 = v100;
      a2 = v101;
      uint64_t v35 = v99;
LABEL_31:
      sub_10046C760((uint64_t)v30, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_10046B6C0((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        uint64_t result = sub_10046B6C0((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      }
      else
      {
        uint64_t v55 = v96;
        sub_10046B3B8((uint64_t)v22, v96, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        uint64_t v95 = *(void *)&a2[v86];
        uint64_t v56 = v87;
        v94 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet;
        sub_10046C760(v55, v87, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        unint64_t v57 = (*(unsigned __int8 *)(v89 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
        uint64_t v58 = swift_allocObject();
        *(void *)(v58 + 16) = a2;
        sub_10046B3B8(v56, v58 + v57, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        v109[2] = sub_10046C8F4;
        v109[3] = v58;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v109[0] = sub_100435714;
        v109[1] = &unk_10098DFF8;
        unint64_t v59 = _Block_copy(aBlock);
        uint64_t v60 = a2;
        v61 = v90;
        sub_100725F00();
        v107 = &_swiftEmptyArrayStorage;
        sub_10046C718((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100431F80((uint64_t *)&unk_100A454C0);
        sub_1004413A8((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
        uint64_t v62 = v35;
        v63 = v92;
        uint64_t v64 = v93;
        uint64_t v22 = v100;
        sub_100726890();
        sub_100726750();
        _Block_release(v59);
        BOOL v65 = v63;
        uint64_t v35 = v62;
        (*v84)(v65, v64);
        uint64_t v66 = v61;
        a2 = v101;
        (*v83)(v66, v91);
        sub_10046B6C0(v96, (uint64_t (*)(void))v94);
        sub_10046B6C0((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        uint64_t result = swift_release();
      }
      goto LABEL_8;
    }
    uint64_t v53 = ~v51;
    while (1)
    {
      sub_10046C760(*(void *)(v49 + 48) + v52 * v48, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      sub_10046C718((unint64_t *)&unk_100A45430, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      char v54 = sub_100726410();
      sub_10046B6C0((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      if (v54) {
        break;
      }
      unint64_t v52 = (v52 + 1) & v53;
      if (((*(void *)(v49 + 56 + ((v52 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v52) & 1) == 0) {
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t result = sub_10046B6C0((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    uint64_t v22 = v100;
    a2 = v101;
    uint64_t v35 = v99;
LABEL_8:
    unint64_t v39 = v105;
    int64_t v41 = v106;
  }
  uint64_t v46 = v41 + 4;
  if (v41 + 4 < v98)
  {
    unint64_t v44 = *(void *)(v97 + 8 * v46);
    if (!v44)
    {
      while (1)
      {
        int64_t v45 = v46 + 1;
        if (__OFADD__(v46, 1)) {
          goto LABEL_45;
        }
        if (v45 >= v98) {
          goto LABEL_38;
        }
        unint64_t v44 = *(void *)(v97 + 8 * v45);
        ++v46;
        if (v44) {
          goto LABEL_24;
        }
      }
    }
    int64_t v45 = v41 + 4;
    goto LABEL_24;
  }
LABEL_38:
  swift_release();
  *(void *)&a2[v102] = v82;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent;
  uint64_t v73 = *(void *)&a2[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&a2[v72] = sub_1004656C0(v35, v73);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v74 = *(void *)&a2[v80];
  BOOL v75 = __OFADD__(v74, 1);
  uint64_t v76 = v74 + 1;
  if (!v75)
  {
    *(void *)&a2[v80] = v76;
    uint64_t v77 = *(os_unfair_lock_s **)&a2[v81];
    swift_retain();
    os_unfair_lock_unlock(v77 + 4);
    return swift_release();
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_1004656C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v7 = __chkstk_darwin(v4 - 8, v6);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v7, v10);
  uint64_t v13 = (char *)&v29 - v12;
  uint64_t result = __chkstk_darwin(v11, v14);
  uint64_t v17 = (char *)&v29 - v16;
  int64_t v18 = 0;
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v29 = a1 + 56;
  uint64_t v30 = a2;
  uint64_t v20 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v23 = (unint64_t)(v20 + 63) >> 6;
  while (1)
  {
    if (v22)
    {
      unint64_t v24 = __clz(__rbit64(v22));
      v22 &= v22 - 1;
      unint64_t v25 = v24 | (v18 << 6);
      goto LABEL_5;
    }
    int64_t v26 = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v26 >= v23) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v29 + 8 * v26);
    ++v18;
    if (!v27)
    {
      int64_t v18 = v26 + 1;
      if (v26 + 1 >= v23) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v29 + 8 * v18);
      if (!v27)
      {
        int64_t v18 = v26 + 2;
        if (v26 + 2 >= v23) {
          goto LABEL_23;
        }
        unint64_t v27 = *(void *)(v29 + 8 * v18);
        if (!v27)
        {
          int64_t v18 = v26 + 3;
          if (v26 + 3 >= v23) {
            goto LABEL_23;
          }
          unint64_t v27 = *(void *)(v29 + 8 * v18);
          if (!v27) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v22 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v18 << 6);
LABEL_5:
    sub_10046C760(*(void *)(a1 + 48) + *(void *)(v5 + 72) * v25, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_10046B3B8((uint64_t)v17, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_10045FA4C((uint64_t)v13, (uint64_t)v9);
    uint64_t result = sub_10046B6C0((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
  }
  int64_t v28 = v26 + 4;
  if (v28 >= v23)
  {
LABEL_23:
    swift_release();
    return v30;
  }
  unint64_t v27 = *(void *)(v29 + 8 * v28);
  if (v27)
  {
    int64_t v18 = v28;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v18 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v18 >= v23) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v29 + 8 * v18);
    ++v28;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10046593C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_100465990(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionMaterialData();
  uint64_t v76 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  uint64_t v7 = (char *)&v62 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  uint64_t v10 = (char *)&v62 - v9;
  uint64_t v11 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v67 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11 - 8, v12);
  uint64_t v73 = (uint64_t)&v62 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13, v15);
  uint64_t v72 = (uint64_t)&v62 - v17;
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)&v62 - v20;
  __chkstk_darwin(v19, v22);
  uint64_t v66 = (uint64_t)&v62 - v23;
  unint64_t v79 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v80 = &_swiftEmptySetSingleton;
  uint64_t v24 = *(void *)(a1 + 56);
  uint64_t v64 = a1 + 56;
  uint64_t v25 = 1 << *(unsigned char *)(a1 + 32);
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  else {
    uint64_t v26 = -1;
  }
  unint64_t v27 = v26 & v24;
  uint64_t v77 = v1;
  v63 = (void *)(v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_cryptoHandler);
  int64_t v65 = (unint64_t)(v25 + 63) >> 6;
  uint64_t v68 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v29 = 0;
  uint64_t v62 = (char *)&type metadata for Any + 8;
  if (v27) {
    goto LABEL_51;
  }
LABEL_7:
  int64_t v30 = v29 + 1;
  if (!__OFADD__(v29, 1))
  {
    if (v30 < v65)
    {
      unint64_t v31 = *(void *)(v64 + 8 * v30);
      ++v29;
      if (v31) {
        goto LABEL_20;
      }
      int64_t v29 = v30 + 1;
      if (v30 + 1 >= v65) {
        goto LABEL_52;
      }
      unint64_t v31 = *(void *)(v64 + 8 * v29);
      if (v31) {
        goto LABEL_20;
      }
      int64_t v29 = v30 + 2;
      if (v30 + 2 >= v65) {
        goto LABEL_52;
      }
      unint64_t v31 = *(void *)(v64 + 8 * v29);
      if (v31)
      {
LABEL_20:
        unint64_t v27 = (v31 - 1) & v31;
        for (unint64_t i = __clz(__rbit64(v31)) + (v29 << 6); ; unint64_t i = v61 | (v29 << 6))
        {
          uint64_t v34 = v66;
          sub_10046C760(*(void *)(v68 + 48) + *(void *)(v67 + 72) * i, v66, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
          sub_10046B3B8(v34, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
          id v35 = objc_allocWithZone((Class)IDSQRProtoMaterial);
          id v36 = objc_msgSend(v35, "init", v62);
          if (!v36)
          {
            uint64_t result = sub_10046B6C0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
            if (v27) {
              goto LABEL_51;
            }
            goto LABEL_7;
          }
          uint64_t v37 = v36;
          unint64_t v70 = v27;
          int64_t v71 = v29;
          uint64_t v38 = sub_1004DAEC8();
          id v69 = v37;
          [v37 setReceiverParticipantId:v38];
          uint64_t result = sub_1004DA9CC(v63);
          uint64_t v39 = result;
          int64_t v40 = 0;
          unint64_t v78 = (unint64_t)&_swiftEmptyArrayStorage;
          uint64_t v41 = *(void *)(result + 56);
          uint64_t v74 = result + 56;
          uint64_t v42 = 1 << *(unsigned char *)(result + 32);
          uint64_t v43 = v42 < 64 ? ~(-1 << v42) : -1;
          unint64_t v44 = v43 & v41;
          int64_t v75 = (unint64_t)(v42 + 63) >> 6;
          while (1)
          {
            if (v44)
            {
              unint64_t v49 = __clz(__rbit64(v44));
              v44 &= v44 - 1;
              unint64_t v50 = v49 | (v40 << 6);
              goto LABEL_44;
            }
            int64_t v51 = v40 + 1;
            if (__OFADD__(v40, 1))
            {
              __break(1u);
LABEL_54:
              __break(1u);
              goto LABEL_55;
            }
            if (v51 >= v75) {
              goto LABEL_48;
            }
            unint64_t v52 = *(void *)(v74 + 8 * v51);
            ++v40;
            if (!v52)
            {
              int64_t v40 = v51 + 1;
              if (v51 + 1 >= v75) {
                goto LABEL_48;
              }
              unint64_t v52 = *(void *)(v74 + 8 * v40);
              if (!v52)
              {
                int64_t v40 = v51 + 2;
                if (v51 + 2 >= v75) {
                  goto LABEL_48;
                }
                unint64_t v52 = *(void *)(v74 + 8 * v40);
                if (!v52) {
                  break;
                }
              }
            }
LABEL_43:
            unint64_t v44 = (v52 - 1) & v52;
            unint64_t v50 = __clz(__rbit64(v52)) + (v40 << 6);
LABEL_44:
            sub_10046C760(*(void *)(v39 + 48) + *(void *)(v76 + 72) * v50, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionMaterialData);
            sub_10046B3B8((uint64_t)v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionMaterialData);
            id v54 = sub_1004662F8((unint64_t)v7);
            if (v54)
            {
              id v55 = v54;
              sub_100726550();
              if (*(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v78 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
                sub_1007265A0();
              }
              sub_1007265C0();
              sub_100726590();
            }
            else
            {
              uint64_t v45 = v73;
              sub_10046C760((uint64_t)v21, v73, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
              uint64_t v46 = v21;
              uint64_t v47 = v72;
              sub_10045FA4C(v72, v45);
              uint64_t v48 = v47;
              uint64_t v21 = v46;
              sub_10046B6C0(v48, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
            }
            uint64_t result = sub_10046B6C0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionMaterialData);
          }
          int64_t v53 = v51 + 3;
          if (v53 < v75) {
            break;
          }
LABEL_48:
          swift_release();
          sub_100466094(v78);
          swift_bridgeObjectRelease();
          id v56 = objc_allocWithZone((Class)NSMutableArray);
          Class isa = sub_100726560().super.isa;
          swift_bridgeObjectRelease();
          id v58 = [v56 initWithArray:isa];

          id v59 = v69;
          [v69 setMaterialInfos:v58];

          id v60 = v59;
          sub_100726550();
          if (*(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v79 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1007265A0();
          }
          sub_1007265C0();
          sub_100726590();

          uint64_t result = sub_10046B6C0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
          unint64_t v27 = v70;
          int64_t v29 = v71;
          if (!v70) {
            goto LABEL_7;
          }
LABEL_51:
          unint64_t v61 = __clz(__rbit64(v27));
          v27 &= v27 - 1;
        }
        unint64_t v52 = *(void *)(v74 + 8 * v53);
        if (!v52)
        {
          while (1)
          {
            int64_t v40 = v53 + 1;
            if (__OFADD__(v53, 1)) {
              goto LABEL_54;
            }
            if (v40 >= v75) {
              goto LABEL_48;
            }
            unint64_t v52 = *(void *)(v74 + 8 * v40);
            ++v53;
            if (v52) {
              goto LABEL_43;
            }
          }
        }
        int64_t v40 = v53;
        goto LABEL_43;
      }
      int64_t v32 = v30 + 3;
      if (v32 < v65)
      {
        unint64_t v31 = *(void *)(v64 + 8 * v32);
        if (v31)
        {
          int64_t v29 = v32;
          goto LABEL_20;
        }
        while (1)
        {
          int64_t v29 = v32 + 1;
          if (__OFADD__(v32, 1)) {
            goto LABEL_56;
          }
          if (v29 >= v65) {
            break;
          }
          unint64_t v31 = *(void *)(v64 + 8 * v29);
          ++v32;
          if (v31) {
            goto LABEL_20;
          }
        }
      }
    }
LABEL_52:
    swift_release();
    return v79;
  }
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
  return result;
}

uint64_t sub_100466094(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_100726BA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = &_swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  uint64_t v13 = &_swiftEmptyArrayStorage;
  uint64_t result = sub_10046B8A8(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        sub_100726A10();
        sub_100462C50(0, (unint64_t *)&unk_100A45600);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10046B8A8(0, v3[2] + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = v3[2];
        unint64_t v6 = v3[3];
        if (v7 >= v6 >> 1)
        {
          sub_10046B8A8(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        v3[2] = v7 + 1;
        sub_100450794(v12, &v3[4 * v7 + 4]);
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      sub_100462C50(0, (unint64_t *)&unk_100A45600);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_10046B8A8(0, v3[2] + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1)
        {
          sub_10046B8A8(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        v3[2] = v11 + 1;
        sub_100450794(v12, &v3[4 * v11 + 4]);
        ++v8;
        --v2;
      }
      while (v2);
    }
    return (uint64_t)v3;
  }
  __break(1u);
  return result;
}

id sub_1004662F8(unint64_t a1)
{
  uint64_t v2 = v1;
  unint64_t v98 = a1;
  uint64_t v3 = sub_100725D30();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  unint64_t v11 = (char *)&v91 - v10;
  uint64_t v12 = sub_100726470();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12, v14);
  uint64_t v16 = (char *)&v91 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_1004DADB4())
  {
    unint64_t v18 = *(void *)(v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_sessionID);
    uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_sessionID + 8);
    sub_100726460();
    unint64_t v96 = v18;
    uint64_t v97 = v17;
    uint64_t v19 = sub_100726440();
    unint64_t v21 = v20;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    if (v21 >> 60 == 15)
    {
      return 0;
    }
    else
    {
      uint64_t v95 = v11;
      uint64_t v92 = v4;
      uint64_t v93 = v3;
      uint64_t v102 = v19;
      unint64_t v103 = v21;
      uint64_t v39 = sub_100511CB8();
      unint64_t v41 = v40;
      sub_100725B70();
      sub_100442248(v39, v41);
      uint64_t v43 = *(void *)(v2
                      + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_cryptoHandler
                      + 24);
      uint64_t v42 = *(void *)(v2
                      + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_cryptoHandler
                      + 32);
      sub_10044C0F4((void *)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_cryptoHandler), v43);
      uint64_t v45 = v102;
      unint64_t v44 = v103;
      uint64_t v94 = v2;
      uint64_t v47 = *(void *)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_service);
      uint64_t v46 = *(void *)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_service + 8);
      uint64_t v48 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 64);
      sub_100441FD4(v102, v103);
      uint64_t v49 = v48(v45, v44, v47, v46, v43, v42);
      unint64_t v51 = v50;
      char v53 = v52;
      sub_100442248(v45, v44);
      if (v53)
      {
        swift_errorRetain();
        swift_errorRetain();
        unint64_t v79 = sub_100725EB0();
        os_log_type_t v80 = sub_1007266C0();
        if (os_log_type_enabled(v79, v80))
        {
          uint64_t v81 = swift_slowAlloc();
          unint64_t v98 = v44;
          uint64_t v82 = v81;
          unint64_t v83 = (void *)swift_slowAlloc();
          uint64_t v84 = swift_slowAlloc();
          uint64_t v97 = v45;
          uint64_t v100 = v84;
          *(_DWORD *)uint64_t v82 = 136315394;
          unint64_t v96 = v51;
          uint64_t v99 = sub_10043E578(0xD000000000000035, 0x80000001008C1970, &v100);
          sub_100726830();
          *(_WORD *)(v82 + 12) = 2112;
          swift_errorRetain();
          uint64_t v85 = v49;
          uint64_t v86 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v99 = v86;
          sub_100726830();
          *unint64_t v83 = v86;
          unint64_t v87 = v96;
          sub_10044C144(v85, v96, 1);
          sub_10044C144(v85, v87, 1);
          _os_log_impl((void *)&_mh_execute_header, v79, v80, "%s: error signing: %@", (uint8_t *)v82, 0x16u);
          sub_100431F80(&qword_100A44F10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_10044C144(v85, v87, 1);
          uint64_t v88 = v97;
          unint64_t v89 = v98;
        }
        else
        {
          sub_10044C144(v49, v51, 1);
          sub_10044C144(v49, v51, 1);
          swift_errorRelease();

          uint64_t v88 = v45;
          unint64_t v89 = v44;
        }
        sub_100442248(v88, v89);
        return 0;
      }
      else
      {
        id v54 = objc_allocWithZone((Class)IDSQRProtoMaterialInfo);
        sub_100441FD4(v49, v51);
        id v22 = [v54 init];
        if (v22)
        {
          sub_100511E44((uint64_t)v95);
          uint64_t v100 = sub_100725D10();
          LOWORD(v101) = v55;
          BYTE2(v101) = v56;
          BYTE3(v101) = v57;
          BYTE4(v101) = v58;
          BYTE5(v101) = v59;
          BYTE6(v101) = v60;
          HIBYTE(v101) = v61;
          uint64_t v62 = sub_100466C6C((uint64_t)&v100, (uint64_t)&v102);
          unint64_t v64 = v63;
          Class isa = sub_100725B20().super.isa;
          sub_100442248(v62, v64);
          [v22 setMaterialId:isa];

          [v22 setMaterialType:sub_100512070()];
          sub_100431F80((uint64_t *)&unk_100A45610);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_100794E70;
          uint64_t v100 = 0x64616F6C796170;
          unint64_t v101 = 0xE700000000000000;
          sub_1007269A0();
          uint64_t v67 = sub_100511CB8();
          *(void *)(inited + 96) = &type metadata for Data;
          *(void *)(inited + 72) = v67;
          *(void *)(inited + 80) = v68;
          uint64_t v100 = 0x496E6F6973736573;
          unint64_t v101 = 0xE900000000000044;
          sub_1007269A0();
          *(void *)(inited + 168) = &type metadata for String;
          uint64_t v69 = v97;
          *(void *)(inited + 144) = v96;
          *(void *)(inited + 152) = v69;
          uint64_t v100 = 0x727574616E676973;
          unint64_t v101 = 0xE900000000000065;
          swift_bridgeObjectRetain();
          sub_1007269A0();
          *(void *)(inited + 240) = &type metadata for Data;
          *(void *)(inited + 216) = v49;
          *(void *)(inited + 224) = v51;
          sub_10044E7C0(inited);
          Class v70 = sub_100726380().super.isa;
          swift_bridgeObjectRelease();
          Class v71 = (Class)(id)JWEncodeDictionary();

          if (v71)
          {
            uint64_t v72 = sub_100725B50();
            unint64_t v74 = v73;

            Class v71 = sub_100725B20().super.isa;
            sub_100442248(v72, v74);
          }
          uint64_t v76 = v92;
          uint64_t v75 = v93;
          [v22 setMaterialContent:v71];

          [v22 setShortMaterialIdLength:sub_100511F64()];
          sub_10044C144(v49, v51, 0);
          (*(void (**)(char *, uint64_t))(v76 + 8))(v95, v75);
          uint64_t v77 = v102;
          unint64_t v78 = v103;
        }
        else
        {
          sub_10044C144(v49, v51, 0);
          sub_10044C144(v49, v51, 0);
          uint64_t v77 = v45;
          unint64_t v78 = v44;
        }
        sub_100442248(v77, v78);
      }
    }
  }
  else
  {
    id v22 = [objc_allocWithZone((Class)IDSQRProtoMaterialInfo) init];
    if (v22)
    {
      sub_100511E44((uint64_t)v8);
      uint64_t v102 = sub_100725D10();
      LOWORD(v103) = v23;
      BYTE2(v103) = v24;
      BYTE3(v103) = v25;
      BYTE4(v103) = v26;
      BYTE5(v103) = v27;
      BYTE6(v103) = v28;
      HIBYTE(v103) = v29;
      uint64_t v30 = sub_100466C6C((uint64_t)&v102, (uint64_t)&v104);
      unint64_t v32 = v31;
      Class v33 = sub_100725B20().super.isa;
      sub_100442248(v30, v32);
      [v22 setMaterialId:v33];

      [v22 setMaterialType:sub_100512070()];
      uint64_t v34 = sub_100511CB8();
      unint64_t v36 = v35;
      uint64_t v37 = v4;
      Class v38 = sub_100725B20().super.isa;
      sub_100442248(v34, v36);
      [v22 setMaterialContent:v38];

      (*(void (**)(char *, uint64_t))(v37 + 8))(v8, v3);
    }
  }
  return v22;
}

uint64_t sub_100466C6C(uint64_t a1, uint64_t a2)
{
  v8[3] = &type metadata for UnsafeRawBufferPointer;
  v8[4] = &protocol witness table for UnsafeRawBufferPointer;
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v2 = sub_10044C0F4(v8, (uint64_t)&type metadata for UnsafeRawBufferPointer);
  uint64_t v3 = (unsigned char *)*v2;
  if (*v2 && (v4 = (unsigned char *)v2[1], uint64_t v5 = v4 - v3, v4 != v3))
  {
    if (v5 <= 14)
    {
      uint64_t v6 = sub_10044D6EC(v3, v4);
    }
    else if ((unint64_t)v5 >= 0x7FFFFFFF)
    {
      uint64_t v6 = sub_10044D7B0((uint64_t)v3, (uint64_t)v4);
    }
    else
    {
      uint64_t v6 = sub_10044D82C((uint64_t)v3, (uint64_t)v4);
    }
  }
  else
  {
    uint64_t v6 = 0;
  }
  sub_10044C6AC((uint64_t)v8);
  return v6;
}

void *sub_100466D28()
{
  uint64_t v33 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  __chkstk_darwin(v33, v1);
  uint64_t v34 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v9);
  unint64_t v11 = (char *)&v29 - v10;
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
    goto LABEL_29;
  }
LABEL_2:
  uint64_t v12 = &_swiftEmptySetSingleton;
  while (1)
  {
    Class v38 = v12;
    uint64_t v30 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock;
    uint64_t v13 = *(os_unfair_lock_s **)((char *)v0
                               + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock);
    swift_retain();
    os_unfair_lock_lock(v13 + 4);
    swift_release();
    uint64_t v14 = *(void *)((char *)v0
                    + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlyAcked);
    uint64_t v15 = *(void *)(v14 + 56);
    uint64_t v35 = v14 + 56;
    uint64_t v16 = 1 << *(unsigned char *)(v14 + 32);
    uint64_t v17 = -1;
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    unint64_t v18 = v17 & v15;
    unint64_t v31 = v0;
    unint64_t v32 = v34 + 8;
    int64_t v36 = (unint64_t)(v16 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v19 = 0;
    uint64_t v20 = (uint64_t)v34;
    while (v18)
    {
      while (1)
      {
        unint64_t v21 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v22 = v21 | (v19 << 6);
LABEL_23:
        uint64_t v0 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer;
        sub_10046C760(*(void *)(v14 + 48) + *(void *)(v4 + 72) * v22, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        sub_10046B3B8((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        if (swift_getEnumCaseMultiPayload()) {
          break;
        }
        sub_10046B3B8((uint64_t)v8, v20, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        uint64_t v0 = (uint64_t (*)())&v38;
        sub_10046B420(&v37, *(id *)&v32[*(int *)(v33 + 24)]);

        sub_10046B6C0(v20, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        if (!v18) {
          goto LABEL_9;
        }
      }
      sub_10046B6C0((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    }
LABEL_9:
    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v36) {
      break;
    }
    unint64_t v24 = *(void *)(v35 + 8 * v23);
    ++v19;
    if (v24) {
      goto LABEL_22;
    }
    int64_t v19 = v23 + 1;
    if (v23 + 1 >= v36) {
      break;
    }
    unint64_t v24 = *(void *)(v35 + 8 * v19);
    if (v24) {
      goto LABEL_22;
    }
    int64_t v19 = v23 + 2;
    if (v23 + 2 >= v36) {
      break;
    }
    unint64_t v24 = *(void *)(v35 + 8 * v19);
    if (v24) {
      goto LABEL_22;
    }
    int64_t v25 = v23 + 3;
    if (v25 >= v36) {
      break;
    }
    unint64_t v24 = *(void *)(v35 + 8 * v25);
    if (v24)
    {
      int64_t v19 = v25;
LABEL_22:
      unint64_t v18 = (v24 - 1) & v24;
      unint64_t v22 = __clz(__rbit64(v24)) + (v19 << 6);
      goto LABEL_23;
    }
    while (1)
    {
      int64_t v19 = v25 + 1;
      if (__OFADD__(v25, 1)) {
        break;
      }
      if (v19 >= v36) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v35 + 8 * v19);
      ++v25;
      if (v24) {
        goto LABEL_22;
      }
    }
LABEL_28:
    __break(1u);
LABEL_29:
    if (!sub_100726BA0()) {
      goto LABEL_2;
    }
    sub_10046BA4C((unint64_t)&_swiftEmptyArrayStorage);
  }
LABEL_26:
  swift_release();
  char v26 = v38;
  char v27 = *(os_unfair_lock_s **)((char *)v31 + v30);
  swift_retain();
  os_unfair_lock_unlock(v27 + 4);
  swift_release();
  return v26;
}

uint64_t sub_1004670FC(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_handlers;
  swift_beginAccess();
  uint64_t v4 = *(void *)(*(void *)v3 + 16);
  if (v4)
  {
    uint64_t v5 = *(void *)v3 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_10046BDA8();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v7 = Strong;
        swift_unknownObjectRelease();
        sub_100461218((uint64_t)v13);
        if (v7 == a1) {
          return swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_100461218((uint64_t)v13);
      }
      v5 += 8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  uint64_t v9 = *(void **)v3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v3 = v9;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v9 = sub_1004691C4(0, v9[2] + 1, 1, (unint64_t)v9);
    *(void *)uint64_t v3 = v9;
  }
  unint64_t v12 = v9[2];
  unint64_t v11 = v9[3];
  if (v12 >= v11 >> 1)
  {
    uint64_t v9 = sub_1004691C4((void *)(v11 > 1), v12 + 1, 1, (unint64_t)v9);
    *(void *)uint64_t v3 = v9;
  }
  v9[2] = v12 + 1;
  sub_10046BDB8();
  return swift_endAccess();
}

uint64_t sub_1004672D8(uint64_t a1)
{
  uint64_t v3 = (unint64_t *)(v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_handlers);
  swift_beginAccess();
  swift_unknownObjectRetain();
  uint64_t v4 = sub_10046BEBC(v3, a1);
  uint64_t result = swift_unknownObjectRelease();
  int64_t v6 = *(void *)(*v3 + 16);
  if (v6 < v4)
  {
    __break(1u);
  }
  else
  {
    sub_10046C154(v4, v6);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_100467410()
{
  *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent) = &_swiftEmptySetSingleton;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10046744C()
{
  uint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_10046C520(&v4);
  os_unfair_lock_unlock(v1 + 4);
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_100467550(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v149 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v154 = *(void *)(v149 - 8);
  uint64_t v8 = __chkstk_darwin(v149, v7);
  uint64_t v150 = (uint64_t)&v136 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  v141 = (char *)&v136 - v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v145 = (uint64_t)&v136 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v151 = (uint64_t)&v136 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  v142 = (char *)&v136 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v146 = (uint64_t)&v136 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v152 = (uint64_t)&v136 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  unint64_t v31 = (char *)&v136 - v30;
  __chkstk_darwin(v29, v32);
  uint64_t v147 = (uint64_t)&v136 - v33;
  v138 = v3;
  uint64_t v136 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock;
  uint64_t v34 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_lock];
  swift_retain();
  os_unfair_lock_lock(v34 + 4);
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v155 = a1;
  uint64_t v35 = sub_100725EB0();
  os_log_type_t v36 = sub_1007266E0();
  if (os_log_type_enabled(v35, v36))
  {
    id v37 = (uint8_t *)swift_slowAlloc();
    v157[0] = swift_slowAlloc();
    *(_DWORD *)id v37 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v156 = sub_10043E578(a2, a3, v157);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "%sQUICMaterialExchangeController", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  Class v38 = v138;
  uint64_t v39 = sub_100725EB0();
  os_log_type_t v40 = sub_1007266E0();
  BOOL v41 = os_log_type_enabled(v39, v40);
  uint64_t v153 = a2;
  if (v41)
  {
    uint64_t v42 = swift_slowAlloc();
    *(void *)&long long v148 = swift_slowAlloc();
    v157[0] = v148;
    *(_DWORD *)uint64_t v42 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v156 = sub_10043E578(a2, a3, v157);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v42 + 12) = 2080;
    uint64_t v43 = *(void *)&v38[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_service];
    unint64_t v44 = *(void *)&v38[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_service + 8];
    swift_bridgeObjectRetain();
    uint64_t v156 = sub_10043E578(v43, v44, v157);
    sub_100726830();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "%s    service=%s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  uint64_t v45 = v38;
  uint64_t v46 = sub_100725EB0();
  os_log_type_t v47 = sub_1007266E0();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = swift_slowAlloc();
    v157[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v156 = sub_10043E578(v153, a3, v157);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v48 + 12) = 2048;
    uint64_t v49 = *(void *)&v45[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_setGenerationCount];

    uint64_t v156 = v49;
    sub_100726830();

    _os_log_impl((void *)&_mh_execute_header, v46, v47, "%s    setGenerationCount=%ld", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  unint64_t v50 = v45;
  unint64_t v51 = sub_100725EB0();
  os_log_type_t v52 = sub_1007266E0();
  BOOL v53 = os_log_type_enabled(v51, v52);
  v139 = v50;
  if (v53)
  {
    uint64_t v54 = swift_slowAlloc();
    v157[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v54 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v156 = sub_10043E578(v153, a3, v157);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v54 + 12) = 2048;
    uint64_t v55 = *(void *)&v139[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_sendGenerationCount];

    uint64_t v156 = v55;
    sub_100726830();

    _os_log_impl((void *)&_mh_execute_header, v51, v52, "%s    sendGenerationCount=%ld", (uint8_t *)v54, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  char v56 = sub_100725EB0();
  os_log_type_t v57 = sub_1007266E0();
  if (os_log_type_enabled(v56, v57))
  {
    char v58 = (uint8_t *)swift_slowAlloc();
    v157[0] = swift_slowAlloc();
    *(_DWORD *)char v58 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v59 = v153;
    uint64_t v156 = sub_10043E578(v153, a3, v157);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v56, v57, "%s    ", v58, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v59 = v153;
  }
  swift_bridgeObjectRetain_n();
  char v60 = sub_100725EB0();
  os_log_type_t v61 = sub_1007266E0();
  if (os_log_type_enabled(v60, v61))
  {
    uint64_t v62 = (uint8_t *)swift_slowAlloc();
    v157[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v62 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v156 = sub_10043E578(v59, a3, v157);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v60, v61, "%s    Desired Materials:", v62, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v137 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_desired;
  uint64_t v63 = *(void *)&v139[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_desired];
  uint64_t v64 = *(void *)(v63 + 56);
  uint64_t v143 = v63 + 56;
  uint64_t v65 = 1 << *(unsigned char *)(v63 + 32);
  uint64_t v66 = -1;
  if (v65 < 64) {
    uint64_t v66 = ~(-1 << v65);
  }
  unint64_t v67 = v66 & v64;
  int64_t v144 = (unint64_t)(v65 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v69 = 0;
  *(void *)&long long v70 = 136315394;
  long long v148 = v70;
  v140 = (char *)&type metadata for Any + 8;
  uint64_t v71 = v152;
  if (v67) {
    goto LABEL_24;
  }
LABEL_25:
  int64_t v74 = v69 + 1;
  if (__OFADD__(v69, 1))
  {
    __break(1u);
    goto LABEL_102;
  }
  if (v74 < v144)
  {
    unint64_t v75 = *(void *)(v143 + 8 * v74);
    ++v69;
    if (v75) {
      goto LABEL_38;
    }
    int64_t v69 = v74 + 1;
    if (v74 + 1 >= v144) {
      goto LABEL_42;
    }
    unint64_t v75 = *(void *)(v143 + 8 * v69);
    if (v75) {
      goto LABEL_38;
    }
    int64_t v69 = v74 + 2;
    if (v74 + 2 >= v144) {
      goto LABEL_42;
    }
    unint64_t v75 = *(void *)(v143 + 8 * v69);
    if (v75)
    {
LABEL_38:
      unint64_t v67 = (v75 - 1) & v75;
      for (unint64_t i = __clz(__rbit64(v75)) + (v69 << 6); ; unint64_t i = v72 | (v69 << 6))
      {
        uint64_t v77 = v147;
        sub_10046C760(*(void *)(v63 + 48) + *(void *)(v154 + 72) * i, v147, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        sub_10046B3B8(v77, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        sub_10046C760((uint64_t)v31, v71, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        swift_bridgeObjectRetain_n();
        unint64_t v78 = sub_100725EB0();
        os_log_type_t v79 = sub_1007266E0();
        if (os_log_type_enabled(v78, v79))
        {
          uint64_t v80 = swift_slowAlloc();
          v157[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v80 = v148;
          swift_bridgeObjectRetain();
          *(void *)(v80 + 4) = sub_10043E578(v153, a3, v157);
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v80 + 12) = 2080;
          sub_10046C718(&qword_100A454D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
          uint64_t v81 = sub_100726D00();
          *(void *)(v80 + 14) = sub_10043E578(v81, v82, v157);
          swift_bridgeObjectRelease();
          sub_10046B6C0(v152, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
          _os_log_impl((void *)&_mh_execute_header, v78, v79, "%s        %s", (uint8_t *)v80, 0x16u);
          swift_arrayDestroy();
          uint64_t v71 = v152;
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t result = sub_10046B6C0((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
          if (!v67) {
            goto LABEL_25;
          }
        }
        else
        {
          swift_bridgeObjectRelease_n();
          sub_10046B6C0(v71, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);

          uint64_t result = sub_10046B6C0((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
          if (!v67) {
            goto LABEL_25;
          }
        }
LABEL_24:
        unint64_t v72 = __clz(__rbit64(v67));
        v67 &= v67 - 1;
      }
    }
    int64_t v76 = v74 + 3;
    if (v76 < v144)
    {
      unint64_t v75 = *(void *)(v143 + 8 * v76);
      if (v75)
      {
        int64_t v69 = v76;
        goto LABEL_38;
      }
      while (1)
      {
        int64_t v69 = v76 + 1;
        if (__OFADD__(v76, 1)) {
          goto LABEL_104;
        }
        if (v69 >= v144) {
          break;
        }
        unint64_t v75 = *(void *)(v143 + 8 * v69);
        ++v76;
        if (v75) {
          goto LABEL_38;
        }
      }
    }
  }
LABEL_42:
  swift_release();
  swift_bridgeObjectRetain_n();
  unint64_t v83 = sub_100725EB0();
  os_log_type_t v84 = sub_1007266E0();
  if (os_log_type_enabled(v83, v84))
  {
    uint64_t v85 = (uint8_t *)swift_slowAlloc();
    v157[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v85 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v86 = v153;
    uint64_t v156 = sub_10043E578(v153, a3, v157);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "%s    ", v85, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v86 = v153;
  }
  swift_bridgeObjectRetain_n();
  unint64_t v87 = sub_100725EB0();
  os_log_type_t v88 = sub_1007266E0();
  if (os_log_type_enabled(v87, v88))
  {
    unint64_t v89 = (uint8_t *)swift_slowAlloc();
    v157[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v89 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v156 = sub_10043E578(v86, a3, v157);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v87, v88, "%s    Sent Materials:", v89, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v90 = v151;
  uint64_t v91 = (uint64_t)v142;
  int64_t v144 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent;
  uint64_t v92 = *(void *)&v139[OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent];
  uint64_t v93 = *(void *)(v92 + 56);
  uint64_t v152 = v92 + 56;
  uint64_t v94 = 1 << *(unsigned char *)(v92 + 32);
  uint64_t v95 = -1;
  if (v94 < 64) {
    uint64_t v95 = ~(-1 << v94);
  }
  unint64_t v96 = v95 & v93;
  int64_t v97 = (unint64_t)(v94 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v98 = 0;
  uint64_t v147 = (uint64_t)&type metadata for Any + 8;
  if (v96) {
    goto LABEL_53;
  }
LABEL_54:
  int64_t v101 = v98 + 1;
  if (__OFADD__(v98, 1))
  {
LABEL_102:
    __break(1u);
LABEL_103:
    __break(1u);
LABEL_104:
    __break(1u);
    goto LABEL_105;
  }
  if (v101 >= v97) {
    goto LABEL_71;
  }
  unint64_t v102 = *(void *)(v152 + 8 * v101);
  ++v98;
  if (v102)
  {
LABEL_67:
    unint64_t v96 = (v102 - 1) & v102;
    for (unint64_t j = __clz(__rbit64(v102)) + (v98 << 6); ; unint64_t j = v99 | (v98 << 6))
    {
      uint64_t v104 = v146;
      sub_10046C760(*(void *)(v92 + 48) + *(void *)(v154 + 72) * j, v146, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      sub_10046B3B8(v104, v91, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      sub_10046C760(v91, v90, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      swift_bridgeObjectRetain_n();
      uint64_t v105 = sub_100725EB0();
      os_log_type_t v106 = sub_1007266E0();
      if (os_log_type_enabled(v105, v106))
      {
        uint64_t v107 = swift_slowAlloc();
        v157[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v107 = v148;
        swift_bridgeObjectRetain();
        *(void *)(v107 + 4) = sub_10043E578(v153, a3, v157);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v107 + 12) = 2080;
        sub_10046C718(&qword_100A454D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        uint64_t v108 = sub_100726D00();
        *(void *)(v107 + 14) = sub_10043E578(v108, v109, v157);
        swift_bridgeObjectRelease();
        sub_10046B6C0(v151, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        _os_log_impl((void *)&_mh_execute_header, v105, v106, "%s        %s", (uint8_t *)v107, 0x16u);
        swift_arrayDestroy();
        uint64_t v90 = v151;
        swift_slowDealloc();
        uint64_t v91 = (uint64_t)v142;
        swift_slowDealloc();

        uint64_t result = sub_10046B6C0(v91, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        if (!v96) {
          goto LABEL_54;
        }
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_10046B6C0(v90, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);

        uint64_t result = sub_10046B6C0(v91, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        if (!v96) {
          goto LABEL_54;
        }
      }
LABEL_53:
      unint64_t v99 = __clz(__rbit64(v96));
      v96 &= v96 - 1;
    }
  }
  int64_t v98 = v101 + 1;
  if (v101 + 1 >= v97)
  {
LABEL_71:
    swift_release();
    swift_bridgeObjectRetain_n();
    id v110 = sub_100725EB0();
    os_log_type_t v111 = sub_1007266E0();
    if (os_log_type_enabled(v110, v111))
    {
      uint64_t v112 = (uint8_t *)swift_slowAlloc();
      v157[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v112 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v156 = sub_10043E578(v153, a3, v157);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v110, v111, "%s    Delta:", v112, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v113 = (uint64_t)v141;
    uint64_t v114 = *(void *)&v139[v137];
    if (*(void *)(*(void *)&v139[v144] + 16) <= *(void *)(v114 + 16) >> 3)
    {
      v157[0] = *(void *)&v139[v137];
      swift_bridgeObjectRetain();
      uint64_t v117 = swift_bridgeObjectRetain();
      sub_1004692F8(v117);
      uint64_t result = swift_bridgeObjectRelease();
      v116 = (unsigned char *)v157[0];
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v115 = swift_bridgeObjectRetain();
      v116 = sub_1004697A4(v115, v114);
      uint64_t result = swift_bridgeObjectRelease();
    }
    uint64_t v118 = 0;
    v119 = v116 + 56;
    uint64_t v120 = 1 << v116[32];
    uint64_t v121 = -1;
    if (v120 < 64) {
      uint64_t v121 = ~(-1 << v120);
    }
    unint64_t v122 = v121 & *((void *)v116 + 7);
    uint64_t v152 = (unint64_t)(v120 + 63) >> 6;
    uint64_t v151 = (uint64_t)&type metadata for Any + 8;
    uint64_t v123 = v150;
    while (1)
    {
      if (v122)
      {
        unint64_t v124 = __clz(__rbit64(v122));
        v122 &= v122 - 1;
        unint64_t v125 = v124 | (v118 << 6);
      }
      else
      {
        uint64_t v126 = v118 + 1;
        if (__OFADD__(v118, 1)) {
          goto LABEL_103;
        }
        if (v126 >= v152)
        {
LABEL_100:
          swift_release();
          v135 = *(os_unfair_lock_s **)&v138[v136];
          swift_retain();
          os_unfair_lock_unlock(v135 + 4);
          return swift_release();
        }
        unint64_t v127 = *(void *)&v119[8 * v126];
        ++v118;
        if (!v127)
        {
          uint64_t v118 = v126 + 1;
          if (v126 + 1 >= v152) {
            goto LABEL_100;
          }
          unint64_t v127 = *(void *)&v119[8 * v118];
          if (!v127)
          {
            uint64_t v118 = v126 + 2;
            if (v126 + 2 >= v152) {
              goto LABEL_100;
            }
            unint64_t v127 = *(void *)&v119[8 * v118];
            if (!v127)
            {
              uint64_t v128 = v126 + 3;
              if (v128 >= v152) {
                goto LABEL_100;
              }
              unint64_t v127 = *(void *)&v119[8 * v128];
              if (!v127)
              {
                while (1)
                {
                  uint64_t v118 = v128 + 1;
                  if (__OFADD__(v128, 1)) {
                    goto LABEL_106;
                  }
                  if (v118 >= v152) {
                    goto LABEL_100;
                  }
                  unint64_t v127 = *(void *)&v119[8 * v118];
                  ++v128;
                  if (v127) {
                    goto LABEL_97;
                  }
                }
              }
              uint64_t v118 = v128;
            }
          }
        }
LABEL_97:
        unint64_t v122 = (v127 - 1) & v127;
        unint64_t v125 = __clz(__rbit64(v127)) + (v118 << 6);
      }
      uint64_t v129 = v145;
      sub_10046C760(*((void *)v116 + 6) + *(void *)(v154 + 72) * v125, v145, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      sub_10046B3B8(v129, v113, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      sub_10046C760(v113, v123, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      swift_bridgeObjectRetain_n();
      uint64_t v130 = sub_100725EB0();
      os_log_type_t v131 = sub_1007266E0();
      if (os_log_type_enabled(v130, v131))
      {
        uint64_t v132 = swift_slowAlloc();
        v157[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v132 = v148;
        swift_bridgeObjectRetain();
        *(void *)(v132 + 4) = sub_10043E578(v153, a3, v157);
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v132 + 12) = 2080;
        sub_10046C718(&qword_100A454D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        uint64_t v133 = sub_100726D00();
        *(void *)(v132 + 14) = sub_10043E578(v133, v134, v157);
        swift_bridgeObjectRelease();
        sub_10046B6C0(v150, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        _os_log_impl((void *)&_mh_execute_header, v130, v131, "%s        %s", (uint8_t *)v132, 0x16u);
        swift_arrayDestroy();
        uint64_t v123 = v150;
        swift_slowDealloc();
        uint64_t v113 = (uint64_t)v141;
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
        sub_10046B6C0(v123, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      }

      uint64_t result = sub_10046B6C0(v113, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    }
  }
  unint64_t v102 = *(void *)(v152 + 8 * v98);
  if (v102) {
    goto LABEL_67;
  }
  int64_t v98 = v101 + 2;
  if (v101 + 2 >= v97) {
    goto LABEL_71;
  }
  unint64_t v102 = *(void *)(v152 + 8 * v98);
  if (v102) {
    goto LABEL_67;
  }
  int64_t v103 = v101 + 3;
  if (v103 >= v97) {
    goto LABEL_71;
  }
  unint64_t v102 = *(void *)(v152 + 8 * v103);
  if (v102)
  {
    int64_t v98 = v103;
    goto LABEL_67;
  }
  while (1)
  {
    int64_t v98 = v103 + 1;
    if (__OFADD__(v103, 1)) {
      break;
    }
    if (v98 >= v97) {
      goto LABEL_71;
    }
    unint64_t v102 = *(void *)(v152 + 8 * v98);
    ++v103;
    if (v102) {
      goto LABEL_67;
    }
  }
LABEL_105:
  __break(1u);
LABEL_106:
  __break(1u);
  return result;
}

id sub_100468D50()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSGroupQUICMaterialExchangeController();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_100468EA0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x180))();
}

uint64_t sub_100468EFC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1A8))();
}

uint64_t sub_100468F58()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1B0))();
}

uint64_t sub_100468FB4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1B8))();
}

uint64_t sub_100469010(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **v2) + 0x1C8))(a1, a2 & 0xFFFFFFFFFFLL);
}

uint64_t sub_100469070()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1C0))();
}

uint64_t sub_1004690CC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1F0))();
}

uint64_t sub_100469128()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100469150()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100469188()
{
  return sub_100463858();
}

uint64_t sub_1004691AC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004691BC()
{
  return swift_release();
}

void *sub_1004691C4(void *result, int64_t a2, char a3, unint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *(void *)(a4 + 16);
    if (v7 <= v8) {
      uint64_t v9 = *(void *)(a4 + 16);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100431F80(&qword_100A455E8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = &_swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage + 4;
      if (result)
      {
LABEL_15:
        if ((unint64_t)v10 < a4 || (unint64_t)v13 >= a4 + 32 + 8 * v8)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != (void *)a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(a4 + 16) = 0;
        goto LABEL_26;
      }
    }
    sub_10046BDC8(0, v8, (unint64_t)v13, a4);
LABEL_26:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004692F8(uint64_t a1)
{
  uint64_t v3 = sub_100431F80(&qword_100A455E0);
  __chkstk_darwin(v3 - 8, v4);
  unint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7 - 8, v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10, v13);
  uint64_t v16 = (char *)&v28 - v15;
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v17 = *(void *)(a1 + 56);
  uint64_t v29 = a1 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v22 = 0;
  while (1)
  {
    if (v20)
    {
      unint64_t v23 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v24 = v23 | (v22 << 6);
      goto LABEL_6;
    }
    int64_t v25 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v25 >= v21) {
      return swift_release();
    }
    unint64_t v26 = *(void *)(v29 + 8 * v25);
    ++v22;
    if (!v26)
    {
      int64_t v22 = v25 + 1;
      if (v25 + 1 >= v21) {
        return swift_release();
      }
      unint64_t v26 = *(void *)(v29 + 8 * v22);
      if (!v26)
      {
        int64_t v22 = v25 + 2;
        if (v25 + 2 >= v21) {
          return swift_release();
        }
        unint64_t v26 = *(void *)(v29 + 8 * v22);
        if (!v26)
        {
          int64_t v22 = v25 + 3;
          if (v25 + 3 >= v21) {
            return swift_release();
          }
          unint64_t v26 = *(void *)(v29 + 8 * v22);
          if (!v26) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v20 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v22 << 6);
LABEL_6:
    sub_10046C760(*(void *)(a1 + 48) + *(void *)(v8 + 72) * v24, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_10046B3B8((uint64_t)v16, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_100469E24((uint64_t)v6);
    sub_10046CA10((uint64_t)v6);
    uint64_t result = sub_10046B6C0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
  }
  int64_t v27 = v25 + 4;
  if (v27 >= v21) {
    return swift_release();
  }
  unint64_t v26 = *(void *)(v29 + 8 * v27);
  if (v26)
  {
    int64_t v22 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v22 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v22 >= v21) {
      return swift_release();
    }
    unint64_t v26 = *(void *)(v29 + 8 * v22);
    ++v27;
    if (v26) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

Swift::Int sub_1004695AC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100431F80((uint64_t *)&unk_100A455F0);
    uint64_t v2 = sub_1007269D0();
    uint64_t v14 = v2;
    sub_1007268E0();
    if (sub_100726950())
    {
      sub_100462C50(0, (unint64_t *)&qword_100A47A80);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10046A0F4();
          uint64_t v2 = v14;
        }
        Swift::Int result = sub_1007267E0(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_100726950());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

void *sub_1004697A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A455E0);
  __chkstk_darwin(v4 - 8, v5);
  unint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v16 = (char *)&v48 - v15;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  os_log_type_t v52 = v7;
  uint64_t v53 = v14;
  uint64_t v17 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = ~v17;
  uint64_t v20 = a1 + 56;
  uint64_t v19 = *(void *)(a1 + 56);
  uint64_t v21 = -v17;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v23 = v22 & v19;
  uint64_t v55 = a1;
  uint64_t v56 = a1 + 56;
  uint64_t v57 = v18;
  int64_t v58 = 0;
  unint64_t v59 = v22 & v19;
  unint64_t v50 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  unint64_t v51 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  uint64_t v24 = a2 + 56;
  swift_bridgeObjectRetain();
  int64_t v25 = 0;
  while (1)
  {
    unint64_t v48 = v23;
    int64_t v49 = v25;
    if (v23)
    {
      uint64_t v54 = (v23 - 1) & v23;
      unint64_t v26 = __clz(__rbit64(v23)) | (v25 << 6);
      int64_t v27 = v25;
      uint64_t v28 = (uint64_t)v52;
LABEL_9:
      sub_10046C760(*(void *)(a1 + 48) + *(void *)(v53 + 72) * v26, v28, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      uint64_t v29 = 0;
      goto LABEL_29;
    }
    int64_t v27 = v25 + 1;
    uint64_t v28 = (uint64_t)v52;
    if (__OFADD__(v25, 1)) {
      __break(1u);
    }
    int64_t v30 = (unint64_t)(v18 + 64) >> 6;
    if (v27 >= v30)
    {
LABEL_28:
      uint64_t v54 = 0;
      uint64_t v29 = 1;
      int64_t v27 = v25;
      goto LABEL_29;
    }
    unint64_t v31 = *(void *)(v20 + 8 * v27);
    if (v31) {
      goto LABEL_13;
    }
    v25 += 2;
    if (v27 + 1 >= v30) {
      goto LABEL_35;
    }
    unint64_t v31 = *(void *)(v20 + 8 * v25);
    if (v31) {
      goto LABEL_16;
    }
    if (v27 + 2 >= v30) {
      goto LABEL_28;
    }
    unint64_t v31 = *(void *)(v20 + 8 * (v27 + 2));
    if (v31)
    {
      v27 += 2;
      goto LABEL_13;
    }
    int64_t v25 = v27 + 3;
    if (v27 + 3 < v30)
    {
      unint64_t v31 = *(void *)(v20 + 8 * v25);
      if (v31)
      {
LABEL_16:
        int64_t v27 = v25;
LABEL_13:
        uint64_t v54 = (v31 - 1) & v31;
        unint64_t v26 = __clz(__rbit64(v31)) + (v27 << 6);
        goto LABEL_9;
      }
      v27 += 4;
      if (v27 >= v30) {
        goto LABEL_28;
      }
      unint64_t v31 = *(void *)(v20 + 8 * v27);
      if (v31) {
        goto LABEL_13;
      }
      int64_t v27 = v30 - 1;
      uint64_t v32 = v49 + 6;
      while (v30 != v32)
      {
        unint64_t v31 = *(void *)(v20 + 8 * v32++);
        if (v31)
        {
          int64_t v27 = v32 - 1;
          goto LABEL_13;
        }
      }
LABEL_35:
      uint64_t v54 = 0;
      uint64_t v29 = 1;
      goto LABEL_29;
    }
    uint64_t v54 = 0;
    uint64_t v29 = 1;
    v27 += 2;
LABEL_29:
    (*v51)(v28, v29, 1, v8);
    uint64_t v55 = a1;
    uint64_t v56 = v20;
    uint64_t v57 = v18;
    int64_t v58 = v27;
    unint64_t v59 = v54;
    if ((*v50)(v28, 1, v8) == 1)
    {
      sub_100462C48();
      sub_10046CA10(v28);
      return (void *)a2;
    }
    sub_10046B3B8(v28, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_10046C718((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    uint64_t v33 = sub_1007263D0();
    uint64_t v34 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v35 = v33 & ~v34;
    if ((*(void *)(v24 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35)) {
      break;
    }
LABEL_6:
    sub_10046B6C0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    int64_t v25 = v58;
    unint64_t v23 = v59;
    a1 = v55;
    uint64_t v20 = v56;
    uint64_t v18 = v57;
  }
  uint64_t v36 = ~v34;
  uint64_t v37 = *(void *)(v53 + 72);
  while (1)
  {
    sub_10046C760(*(void *)(a2 + 48) + v37 * v35, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_10046C718((unint64_t *)&unk_100A45430, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    char v38 = sub_100726410();
    sub_10046B6C0((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    if (v38) {
      break;
    }
    unint64_t v35 = (v35 + 1) & v36;
    if (((*(void *)(v24 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
      goto LABEL_6;
    }
  }
  uint64_t isStackAllocationSafe = sub_10046B6C0((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
  char v41 = *(unsigned char *)(a2 + 32);
  unint64_t v42 = (unint64_t)((1 << v41) + 63) >> 6;
  size_t v43 = 8 * v42;
  if ((v41 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v40);
    memcpy((char *)&v48 - ((v43 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(a2 + 56), v43);
    unint64_t v44 = sub_10046A418((unint64_t *)((char *)&v48 - ((v43 + 15) & 0x3FFFFFFFFFFFFFF0)), v42, a2, v35, &v55);
    swift_release();
    sub_100462C48();
    return v44;
  }
  else
  {
    uint64_t v45 = (void *)swift_slowAlloc();
    memcpy(v45, (const void *)(a2 + 56), v43);
    uint64_t v46 = sub_10046A418((unint64_t *)v45, v42, a2, v35, &v55);
    swift_release();
    sub_100462C48();
    swift_slowDealloc();
    return v46;
  }
}

uint64_t sub_100469E24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  unint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  sub_10046C718((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
  swift_bridgeObjectRetain();
  uint64_t v24 = v3;
  uint64_t v9 = sub_1007263D0();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v21 = v1;
    uint64_t v22 = v4;
    uint64_t v23 = a1;
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v4 + 72);
    while (1)
    {
      sub_10046C760(*(void *)(v8 + 48) + v13 * v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      sub_10046C718((unint64_t *)&unk_100A45430, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      char v14 = sub_100726410();
      sub_10046B6C0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      if (v14) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = 1;
        uint64_t v4 = v22;
        a1 = v23;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v15, 1, v24);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v21;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v16;
    uint64_t v25 = *v16;
    *uint64_t v16 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1004603D0();
      uint64_t v18 = v25;
    }
    a1 = v23;
    sub_10046B3B8(*(void *)(v18 + 48) + v13 * v11, v23, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_10046B0CC(v11);
    *uint64_t v16 = v25;
    swift_bridgeObjectRelease();
    uint64_t v15 = 0;
    uint64_t v4 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v15, 1, v24);
}

uint64_t sub_10046A0F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100431F80((uint64_t *)&unk_100A455F0);
  uint64_t v3 = sub_1007269C0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_1007267E0(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

unint64_t sub_10046A394(uint64_t a1, void *a2)
{
  sub_1007267E0(a2[5]);
  unint64_t result = sub_1007268C0();
  *(void *)((char *)a2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) |= 1 << result;
  *(void *)(a2[6] + 8 * result) = a1;
  ++a2[2];
  return result;
}

void *sub_10046A418(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v51 = a2;
  uint64_t v9 = sub_100431F80(&qword_100A455E0);
  __chkstk_darwin(v9 - 8, v10);
  int64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v15 = __chkstk_darwin(v13, v14);
  unint64_t v17 = (char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = (void *)__chkstk_darwin(v15, v18);
  unint64_t v21 = (char *)&v50 - v20;
  uint64_t v22 = *(void *)(a3 + 16);
  uint64_t v23 = (a4 >> 3) & 0x1FFFFFFFFFFFFFF8;
  uint64_t v24 = *(unint64_t *)((char *)a1 + v23) & ((-1 << a4) - 1);
  uint64_t v53 = a1;
  uint64_t v54 = v12;
  *(unint64_t *)((char *)a1 + v23) = v24;
  uint64_t v25 = v22 - 1;
  uint64_t v57 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56);
  uint64_t v58 = v26;
  uint64_t v55 = a5;
  uint64_t v56 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  uint64_t v27 = a3;
  uint64_t v61 = a3 + 56;
  uint64_t v28 = (uint64_t)v12;
  while (2)
  {
    uint64_t v52 = v25;
    do
    {
      while (1)
      {
        uint64_t v29 = *a5;
        uint64_t v30 = a5[1];
        uint64_t v31 = a5[2];
        int64_t v32 = a5[3];
        unint64_t v33 = a5[4];
        uint64_t v59 = v31;
        uint64_t v60 = v30;
        if (v33)
        {
          uint64_t v34 = (v33 - 1) & v33;
          unint64_t v35 = __clz(__rbit64(v33)) | (v32 << 6);
LABEL_6:
          sub_10046C760(*(void *)(v29 + 48) + *(void *)(v58 + 72) * v35, v28, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
          uint64_t v36 = 0;
          goto LABEL_7;
        }
        int64_t v44 = v32 + 1;
        if (__OFADD__(v32, 1))
        {
          __break(1u);
          goto LABEL_41;
        }
        int64_t v45 = (unint64_t)(v31 + 64) >> 6;
        if (v44 >= v45)
        {
          uint64_t v34 = 0;
          uint64_t v36 = 1;
          goto LABEL_7;
        }
        unint64_t v46 = *(void *)(v30 + 8 * v44);
        if (v46) {
          goto LABEL_16;
        }
        if (v32 + 2 >= v45) {
          goto LABEL_33;
        }
        unint64_t v46 = *(void *)(v30 + 8 * (v32 + 2));
        if (v46)
        {
          int64_t v44 = v32 + 2;
LABEL_16:
          uint64_t v34 = (v46 - 1) & v46;
          unint64_t v35 = __clz(__rbit64(v46)) + (v44 << 6);
          int64_t v32 = v44;
          goto LABEL_6;
        }
        if (v32 + 3 >= v45)
        {
          uint64_t v34 = 0;
          uint64_t v36 = 1;
          v32 += 2;
          goto LABEL_7;
        }
        unint64_t v46 = *(void *)(v30 + 8 * (v32 + 3));
        if (v46)
        {
          int64_t v44 = v32 + 3;
          goto LABEL_16;
        }
        int64_t v44 = v32 + 4;
        if (v32 + 4 < v45)
        {
          unint64_t v46 = *(void *)(v30 + 8 * v44);
          if (v46) {
            goto LABEL_16;
          }
          int64_t v44 = v45 - 1;
          int64_t v49 = v32 + 5;
          while (v45 != v49)
          {
            unint64_t v46 = *(void *)(v30 + 8 * v49++);
            if (v46)
            {
              int64_t v44 = v49 - 1;
              goto LABEL_16;
            }
          }
LABEL_33:
          uint64_t v34 = 0;
          uint64_t v36 = 1;
          int64_t v32 = v44;
          goto LABEL_7;
        }
        uint64_t v34 = 0;
        uint64_t v36 = 1;
        v32 += 3;
LABEL_7:
        (*v57)(v28, v36, 1, v13);
        uint64_t v37 = v60;
        *a5 = v29;
        a5[1] = v37;
        a5[2] = v59;
        a5[3] = v32;
        a5[4] = v34;
        if ((*v56)(v28, 1, v13) == 1)
        {
          sub_10046CA10(v28);
          swift_retain();
          return (void *)sub_10046A944(v53, v51, v52, v27);
        }
        sub_10046B3B8(v28, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        sub_10046C718((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        uint64_t v38 = sub_1007263D0();
        uint64_t v39 = -1 << *(unsigned char *)(v27 + 32);
        unint64_t v40 = v38 & ~v39;
        if ((*(void *)(v61 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40)) {
          break;
        }
LABEL_3:
        unint64_t result = (void *)sub_10046B6C0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        uint64_t v28 = (uint64_t)v54;
        a5 = v55;
      }
      uint64_t v41 = ~v39;
      uint64_t v42 = *(void *)(v58 + 72);
      while (1)
      {
        sub_10046C760(*(void *)(v27 + 48) + v42 * v40, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        sub_10046C718((unint64_t *)&unk_100A45430, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        char v43 = sub_100726410();
        sub_10046B6C0((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        if (v43) {
          break;
        }
        unint64_t v40 = (v40 + 1) & v41;
        if (((*(void *)(v61 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0) {
          goto LABEL_3;
        }
      }
      unint64_t result = (void *)sub_10046B6C0((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      uint64_t v47 = (v40 >> 3) & 0x1FFFFFFFFFFFFFF8;
      uint64_t v28 = (uint64_t)v54;
      uint64_t v48 = *(unint64_t *)((char *)v53 + v47);
      *(unint64_t *)((char *)v53 + v47) = v48 & ~(1 << v40);
      a5 = v55;
    }
    while ((v48 & (1 << v40)) == 0);
    uint64_t v25 = v52 - 1;
    if (__OFSUB__(v52, 1))
    {
LABEL_41:
      __break(1u);
      return result;
    }
    if (v52 != 1) {
      continue;
    }
    return &_swiftEmptySetSingleton;
  }
}

uint64_t sub_10046A944(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v35 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v9);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_100431F80((uint64_t *)&unk_100A47A90);
  uint64_t result = sub_1007269E0();
  uint64_t v12 = result;
  unint64_t v33 = a1;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *a1;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 56;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_40;
      }
      if (v19 >= v34)
      {
LABEL_37:
        swift_release();
        return v12;
      }
      unint64_t v20 = v33[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v34) {
          goto LABEL_37;
        }
        unint64_t v20 = v33[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v34) {
            goto LABEL_37;
          }
          unint64_t v20 = v33[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v34) {
              goto LABEL_37;
            }
            unint64_t v20 = v33[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v15 >= v34) {
                  goto LABEL_37;
                }
                unint64_t v20 = v33[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = *(void *)(v35 + 72);
    sub_10046C760(*(void *)(a4 + 48) + v22 * v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_10046C718((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    uint64_t result = sub_1007263D0();
    uint64_t v23 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v16 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v26 = __clz(__rbit64((-1 << v24) & ~*(void *)(v16 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v25 == v28;
        if (v25 == v28) {
          unint64_t v25 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v16 + 8 * v25);
      }
      while (v30 == -1);
      unint64_t v26 = __clz(__rbit64(~v30)) + (v25 << 6);
    }
    *(void *)(v16 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
    uint64_t result = sub_10046B3B8((uint64_t)v11, *(void *)(v12 + 48) + v26 * v22, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    if (!a3) {
      goto LABEL_37;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

id sub_10046ACA4()
{
  uint64_t v1 = v0;
  sub_100431F80((uint64_t *)&unk_100A455F0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1007269B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10046AE50()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100431F80((uint64_t *)&unk_100A455F0);
  uint64_t v3 = sub_1007269C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  unint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1007267E0(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10046B0CC(int64_t a1)
{
  uint64_t v29 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v3 = *(void *)(v29 - 8);
  uint64_t result = __chkstk_darwin(v29, v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = *v1 + 56;
  uint64_t v10 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(v9 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v27 = v1;
    uint64_t v12 = ~v10;
    swift_retain();
    uint64_t v13 = sub_1007268A0();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v28 = (v13 + 1) & v12;
      uint64_t v14 = *(void *)(v3 + 72);
      do
      {
        uint64_t v15 = v9;
        int64_t v16 = v14 * v11;
        sub_10046C760(*(void *)(v8 + 48) + v14 * v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        sub_10046C718((unint64_t *)&unk_100A455D0, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        uint64_t v17 = sub_1007263D0();
        sub_10046B6C0((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        unint64_t v18 = v17 & v12;
        if (a1 >= (uint64_t)v28)
        {
          if (v18 >= v28 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            int64_t v21 = v14 * a1;
            uint64_t v9 = v15;
            if (v14 * a1 < v16
              || *(void *)(v8 + 48) + v14 * a1 >= (unint64_t)(*(void *)(v8 + 48) + v16 + v14))
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
            }
            else
            {
              a1 = v11;
              if (v21 != v16)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v28 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v15;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v27;
  }
  else
  {
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v22 = *v1;
  uint64_t v23 = *(void *)(*v1 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v22 + 16) = v25;
    ++*(_DWORD *)(v22 + 36);
  }
  return result;
}

uint64_t sub_10046B3B8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10046B420(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_100726930();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100462C50(0, (unint64_t *)&qword_100A47A80);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_100726920();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_1004695AC(v7, result + 1);
    unint64_t v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_10046A0F4();
      uint64_t v23 = v28;
    }
    else
    {
      uint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_10046A394((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = sub_1007267E0(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100462C50(0, (unint64_t *)&qword_100A47A80);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = sub_1007267F0();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        id v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = sub_1007267F0();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_10046B720((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_10046B6C0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10046B720(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_10046A0F4();
  }
  else
  {
    if (v7 > v6)
    {
      sub_10046ACA4();
      goto LABEL_14;
    }
    sub_10046AE50();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = sub_1007267E0(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100462C50(0, (unint64_t *)&qword_100A47A80);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1007267F0();

    if (v12)
    {
LABEL_13:
      sub_100726D30();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1007267F0();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

uint64_t sub_10046B8A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_10046B8C8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_10046B8C8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_100431F80(&qword_100A44D50);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  id v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

void *sub_10046BA38(unint64_t a1)
{
  return sub_1004691C4(0, *(void *)(a1 + 16), 0, a1);
}

void sub_10046BA4C(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100431F80((uint64_t *)&unk_100A455F0);
      uint64_t v3 = (void *)sub_1007269E0();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_100726BA0();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  int64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = sub_100726A10();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = sub_1007267E0(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_100462C50(0, (unint64_t *)&qword_100A47A80);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = sub_1007267F0();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = sub_1007267F0();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = sub_1007267E0(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_100462C50(0, (unint64_t *)&qword_100A47A80);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = sub_1007267F0();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = sub_1007267F0();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v30) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

uint64_t sub_10046BDA8()
{
  return swift_unknownObjectWeakCopyInit();
}

uint64_t sub_10046BDB8()
{
  return swift_unknownObjectWeakTakeInit();
}

uint64_t sub_10046BDC8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_10046BEBC(unint64_t *a1, uint64_t a2)
{
  unint64_t v2 = *a1;
  uint64_t v3 = *(void *)(*a1 + 16);
  if (!v3) {
    return 0;
  }
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  for (uint64_t i = 40; ; i += 8)
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {
      sub_10046BDA8();
      goto LABEL_7;
    }
    uint64_t v9 = Strong;
    swift_unknownObjectRelease();
    sub_10046BDA8();
    if (v9 == a2) {
      break;
    }
LABEL_7:
    uint64_t v10 = swift_unknownObjectWeakLoadStrong();
    sub_100461218((uint64_t)v22);
    if (!v10) {
      goto LABEL_11;
    }
    swift_unknownObjectRelease();
    if (v3 == ++v6)
    {
      swift_bridgeObjectRelease();
      return *(void *)(v2 + 16);
    }
  }
  sub_100461218((uint64_t)v22);
LABEL_11:
  uint64_t result = swift_bridgeObjectRelease();
  if (__OFADD__(v6, 1)) {
    goto LABEL_45;
  }
  unint64_t v12 = *(void *)(v2 + 16);
  if (v6 + 1 == v12) {
    return v6;
  }
  unint64_t v13 = v6 + 1;
  while (2)
  {
    if (v13 < v12)
    {
      sub_10046BDA8();
      uint64_t v14 = swift_unknownObjectWeakLoadStrong();
      if (v14)
      {
        uint64_t v15 = v14;
        swift_unknownObjectRelease();
        sub_10046BDA8();
        if (v15 == a2)
        {
          sub_100461218((uint64_t)v21);
          goto LABEL_33;
        }
      }
      else
      {
        sub_10046BDA8();
      }
      uint64_t v16 = swift_unknownObjectWeakLoadStrong();
      sub_100461218((uint64_t)v21);
      if (v16)
      {
        swift_unknownObjectRelease();
        uint64_t result = sub_100461218((uint64_t)v22);
        if (v13 != v6)
        {
          if ((v6 & 0x8000000000000000) != 0) {
            goto LABEL_40;
          }
          unint64_t v17 = *a1;
          unint64_t v18 = *(void *)(*a1 + 16);
          if (v6 >= v18) {
            goto LABEL_41;
          }
          uint64_t result = sub_10046BDA8();
          if (v13 >= v18) {
            goto LABEL_42;
          }
          sub_10046BDA8();
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          *a1 = v17;
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_10046BA38(v17);
            unint64_t v17 = result;
            *a1 = result;
          }
          if (v6 >= *(void *)(v17 + 16)) {
            goto LABEL_43;
          }
          uint64_t result = sub_10046CA70();
          if (v13 >= *(void *)(*a1 + 16)) {
            goto LABEL_44;
          }
          uint64_t result = sub_10046CA70();
        }
        if (__OFADD__(v6++, 1)) {
          goto LABEL_39;
        }
      }
      else
      {
LABEL_33:
        uint64_t result = sub_100461218((uint64_t)v22);
      }
      unint64_t v20 = v13 + 1;
      if (__OFADD__(v13, 1)) {
        goto LABEL_38;
      }
      unint64_t v12 = *(void *)(*a1 + 16);
      ++v13;
      i += 8;
      if (v20 == v12) {
        return v6;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_10046C154(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_1004691C4(isUniquelyReferenced_nonNull_native, v11, 1, (unint64_t)v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_22;
  }
  uint64_t v13 = v4[2];
  uint64_t v14 = v13 - a2;
  if (__OFSUB__(v13, a2)) {
    goto LABEL_28;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    if (a1 < a2 || &v4[a1 + 4] >= &v4[a2 + 4 + v14])
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (a1 != a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v15 = v4[2];
    BOOL v16 = __OFADD__(v15, v8);
    uint64_t v17 = v15 - v7;
    if (!v16)
    {
      v4[2] = v17;
LABEL_22:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_10046C2E0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_desired;
  int64_t v5 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0x198);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v14 = v5(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = v3;
  uint64_t v8 = sub_100725EB0();
  os_log_type_t v9 = sub_1007266E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v13 = v4;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315394;
    sub_10043E578(0xD000000000000019, 0x80000001008C1910, &v15);
    sub_100726830();
    *(_WORD *)(v10 + 12) = 2048;
    uint64_t v11 = v13;
    sub_100726830();

    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: desired: %ld", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v11 = v4;
  }
  *(void *)((char *)v7 + OBJC_IVAR____TtC17identityservicesd38IDSGroupQUICMaterialExchangeController_currentlySent) = *(void *)((char *)v3 + v11);
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v14;
  return result;
}

void *sub_10046C520@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_10046C564()
{
  return type metadata accessor for IDSGroupQUICMaterialExchangeController();
}

uint64_t sub_10046C56C()
{
  uint64_t result = sub_100725ED0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

uint64_t getEnumTagSinglePayload for WeakHandler(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for WeakHandler(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 8) = v3;
  return result;
}

ValueMetadata *type metadata accessor for WeakHandler()
{
  return &type metadata for WeakHandler;
}

uint64_t sub_10046C6C4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_10046C70C(char a1)
{
  return sub_100464C20(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_10046C718(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10046C760(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10046C7C8()
{
  uint64_t v1 = (int *)(type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;

  swift_bridgeObjectRelease();
  uint64_t v6 = (id *)(v0 + v3 + v1[8]);

  uint64_t v7 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v8 = (char *)v6 + *(int *)(v7 + 24);
  uint64_t v9 = sub_100725CC0();
  (*(void (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);

  return _swift_deallocObject(v0, v4, v5);
}

void sub_10046C8F4()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0xB8))();
  if (v3)
  {
    uint64_t v5 = v4;
    id v7 = (id)v3;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 8))(v0 + ((v2 + 24) & ~v2), *(void *)(v0 + ((v2 + 24) & ~v2) + *(int *)(v1 + 28)), ObjectType, v5);
  }
}

uint64_t sub_10046CA10(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A455E0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10046CA70()
{
  return swift_unknownObjectWeakTakeAssign();
}

uint64_t sub_10046CA94@<X0>(uint64_t a1@<X8>)
{
  return sub_10046CB2C(&OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sentKeyMaterial, &qword_100A45628, a1);
}

uint64_t sub_10046CAA8(uint64_t a1)
{
  return sub_10046CBA0(a1, &OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sentKeyMaterial, &qword_100A45628);
}

uint64_t (*sub_10046CABC())()
{
  return j__swift_endAccess;
}

uint64_t sub_10046CB18@<X0>(uint64_t a1@<X8>)
{
  return sub_10046CB2C(&OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sendingKeyMaterial, &qword_100A45628, a1);
}

uint64_t sub_10046CB2C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  return sub_1004546B8(v6, a3, a2);
}

uint64_t sub_10046CB8C(uint64_t a1)
{
  return sub_10046CBA0(a1, &OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sendingKeyMaterial, &qword_100A45628);
}

uint64_t sub_10046CBA0(uint64_t a1, void *a2, uint64_t *a3)
{
  uint64_t v6 = v3 + *a2;
  swift_beginAccess();
  sub_10046E91C(a1, v6, a3);
  return swift_endAccess();
}

uint64_t (*sub_10046CC08())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10046CC64@<X0>(uint64_t a1@<X8>)
{
  return sub_10046CB2C(&OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiredKeyMaterial, &qword_100A45628, a1);
}

uint64_t sub_10046CC78(uint64_t a1)
{
  return sub_10046CBA0(a1, &OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiredKeyMaterial, &qword_100A45628);
}

uint64_t (*sub_10046CC8C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10046CCE8()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiresCache);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_10046CD30(char a1)
{
  uint64_t v3 = (unsigned char *)(v1
               + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiresCache);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_10046CD7C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10046CDD8(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v6 = __chkstk_darwin(v3, v5);
  uint64_t v66 = (uint64_t)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6, v8);
  uint64_t v58 = (uint64_t)&v55 - v9;
  uint64_t v10 = sub_100431F80(&qword_100A45630);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v64 = (uint64_t)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v14);
  BOOL v16 = (char *)&v55 - v15;
  uint64_t v17 = sub_100431F80(&qword_100A45628);
  uint64_t v19 = __chkstk_darwin(v17 - 8, v18);
  uint64_t v57 = (uint64_t)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v62 = (char *)&v55 - v23;
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v63 = (uint64_t)&v55 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  unint64_t v30 = (char *)&v55 - v29;
  uint64_t v32 = __chkstk_darwin(v28, v31);
  id v34 = (char *)&v55 - v33;
  __chkstk_darwin(v32, v35);
  id v37 = (char *)&v55 - v36;
  uint64_t v65 = a1;
  sub_1004828A0(a1, (uint64_t)&v55 - v36, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  uint64_t v59 = *(uint64_t (**)(char *, void, uint64_t, uint64_t))(v4 + 56);
  uint64_t v38 = v59(v37, 0, 1, v3);
  uint64_t v39 = *(void (**)(uint64_t))(*(void *)v1 + 112);
  uint64_t v60 = v1;
  v39(v38);
  uint64_t v61 = v10;
  uint64_t v40 = (uint64_t)&v16[*(int *)(v10 + 48)];
  sub_1004546B8((uint64_t)v37, (uint64_t)v16, &qword_100A45628);
  sub_1004546B8((uint64_t)v34, v40, &qword_100A45628);
  unint64_t v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v41((uint64_t)v16, 1, v3) == 1)
  {
    sub_10044C150((uint64_t)v34, &qword_100A45628);
    sub_10044C150((uint64_t)v37, &qword_100A45628);
    if (v41(v40, 1, v3) == 1)
    {
      sub_10044C150((uint64_t)v16, &qword_100A45628);
      uint64_t v42 = v66;
      sub_1004828A0(v65, v66, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
LABEL_14:
      sub_100482970(v42, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      goto LABEL_15;
    }
    goto LABEL_6;
  }
  sub_1004546B8((uint64_t)v16, (uint64_t)v30, &qword_100A45628);
  if (v41(v40, 1, v3) == 1)
  {
    sub_10044C150((uint64_t)v34, &qword_100A45628);
    sub_10044C150((uint64_t)v37, &qword_100A45628);
    sub_100482970((uint64_t)v30, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
LABEL_6:
    sub_10044C150((uint64_t)v16, &qword_100A45630);
    uint64_t v42 = v66;
    sub_1004828A0(v65, v66, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    goto LABEL_7;
  }
  uint64_t v55 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet;
  uint64_t v50 = v58;
  sub_100482908(v40, v58, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  sub_10048156C(&qword_100A45638, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  int v56 = sub_100726410();
  uint64_t v51 = v50;
  uint64_t v52 = v55;
  sub_100482970(v51, (uint64_t (*)(void))v55);
  sub_10044C150((uint64_t)v34, &qword_100A45628);
  sub_10044C150((uint64_t)v37, &qword_100A45628);
  sub_100482970((uint64_t)v30, (uint64_t (*)(void))v52);
  sub_10044C150((uint64_t)v16, &qword_100A45628);
  uint64_t v42 = v66;
  sub_1004828A0(v65, v66, (uint64_t (*)(void))v52);
  if (v56) {
    goto LABEL_14;
  }
LABEL_7:
  uint64_t v43 = v63;
  sub_1004828A0(v42, v63, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  uint64_t v44 = v59((char *)v43, 0, 1, v3);
  uint64_t v45 = (uint64_t)v62;
  (*(void (**)(uint64_t))(*(void *)v60 + 136))(v44);
  uint64_t v46 = v64;
  uint64_t v47 = v64 + *(int *)(v61 + 48);
  sub_1004546B8(v43, v64, &qword_100A45628);
  sub_1004546B8(v45, v47, &qword_100A45628);
  if (v41(v46, 1, v3) == 1)
  {
    sub_10044C150(v45, &qword_100A45628);
    sub_10044C150(v43, &qword_100A45628);
    sub_100482970(v42, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    if (v41(v47, 1, v3) == 1)
    {
      sub_10044C150(v46, &qword_100A45628);
LABEL_15:
      char v49 = 1;
      return v49 & 1;
    }
  }
  else
  {
    uint64_t v48 = v57;
    sub_1004546B8(v46, v57, &qword_100A45628);
    if (v41(v47, 1, v3) != 1)
    {
      uint64_t v53 = v58;
      sub_100482908(v47, v58, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      sub_10048156C(&qword_100A45638, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      char v49 = sub_100726410();
      sub_100482970(v53, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      sub_10044C150(v45, &qword_100A45628);
      sub_10044C150(v43, &qword_100A45628);
      sub_100482970(v42, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      sub_100482970(v48, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      sub_10044C150(v46, &qword_100A45628);
      return v49 & 1;
    }
    sub_10044C150(v45, &qword_100A45628);
    sub_10044C150(v43, &qword_100A45628);
    sub_100482970(v42, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    sub_100482970(v48, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  }
  sub_10044C150(v46, &qword_100A45630);
  char v49 = 0;
  return v49 & 1;
}

uint64_t sub_10046D59C(uint64_t a1)
{
  uint64_t v3 = sub_100431F80(&qword_100A45628);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004828A0(a1, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  uint64_t v7 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 0, 1, v7);
  return (*(uint64_t (**)(char *))(*(void *)v1 + 144))(v6);
}

uint64_t sub_10046D698(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v37 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100431F80(&qword_100A45630);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A45628);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v39 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v15, v17);
  uint64_t v41 = (uint64_t)&v36 - v19;
  uint64_t v21 = __chkstk_darwin(v18, v20);
  uint64_t v23 = (char *)&v36 - v22;
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v27 = (char *)&v36 - v26;
  (*(void (**)(uint64_t))(*(void *)v1 + 136))(v25);
  uint64_t v40 = a1;
  sub_1004828A0(a1, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  uint64_t v38 = *(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56);
  v38(v23, 0, 1, v4);
  uint64_t v28 = (uint64_t)&v12[*(int *)(v9 + 56)];
  sub_1004546B8((uint64_t)v27, (uint64_t)v12, &qword_100A45628);
  sub_1004546B8((uint64_t)v23, v28, &qword_100A45628);
  uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v29((uint64_t)v12, 1, v4) != 1)
  {
    sub_1004546B8((uint64_t)v12, v41, &qword_100A45628);
    if (v29(v28, 1, v4) != 1)
    {
      uint64_t v31 = v37;
      sub_100482908(v28, v37, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      sub_10048156C(&qword_100A45638, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      uint64_t v32 = v41;
      char v33 = sub_100726410();
      sub_100482970(v31, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      sub_10044C150((uint64_t)v23, &qword_100A45628);
      sub_10044C150((uint64_t)v27, &qword_100A45628);
      sub_100482970(v32, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      uint64_t result = sub_10044C150((uint64_t)v12, &qword_100A45628);
      if ((v33 & 1) == 0) {
        return result;
      }
      goto LABEL_8;
    }
    sub_10044C150((uint64_t)v23, &qword_100A45628);
    sub_10044C150((uint64_t)v27, &qword_100A45628);
    sub_100482970(v41, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    return sub_10044C150((uint64_t)v12, &qword_100A45630);
  }
  sub_10044C150((uint64_t)v23, &qword_100A45628);
  sub_10044C150((uint64_t)v27, &qword_100A45628);
  if (v29(v28, 1, v4) != 1) {
    return sub_10044C150((uint64_t)v12, &qword_100A45630);
  }
  sub_10044C150((uint64_t)v12, &qword_100A45628);
LABEL_8:
  uint64_t v35 = (void (*)(uint64_t, void, uint64_t, uint64_t))v38;
  uint64_t v34 = (uint64_t)v39;
  v38(v39, 1, 1, v4);
  (*(void (**)(uint64_t))(*(void *)v2 + 144))(v34);
  sub_1004828A0(v40, v34, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  v35(v34, 0, 1, v4);
  return (*(uint64_t (**)(uint64_t))(*(void *)v2 + 120))(v34);
}

uint64_t sub_10046DB6C()
{
  uint64_t v1 = sub_100431F80(&qword_100A45628);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
  v6(v4, 1, 1, v5);
  (*(void (**)(char *))(*(void *)v0 + 144))(v4);
  v6(v4, 1, 1, v5);
  (*(void (**)(char *))(*(void *)v0 + 120))(v4);
  return (*(uint64_t (**)(uint64_t))(*(void *)v0 + 192))(1);
}

uint64_t sub_10046DCBC()
{
  sub_10044C150(v0 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sentKeyMaterial, &qword_100A45628);
  sub_10044C150(v0 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sendingKeyMaterial, &qword_100A45628);
  sub_10044C150(v0 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiredKeyMaterial, &qword_100A45628);

  return swift_deallocClassInstance();
}

uint64_t sub_10046DD5C()
{
  uint64_t v0 = swift_allocObject();
  uint64_t v1 = v0 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sentKeyMaterial;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56);
  v3(v1, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sendingKeyMaterial, 1, 1, v2);
  v3(v0 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiredKeyMaterial, 1, 1, v2);
  *(unsigned char *)(v0
           + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiresCache) = 1;
  return v0;
}

uint64_t type metadata accessor for IDSGroupPushMaterialExchangeParticipantKeyMaterialState(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A4D650);
}

uint64_t sub_10046DE68()
{
  return swift_retain();
}

uint64_t sub_10046DEA0(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 40) = a1;
  return swift_release();
}

uint64_t (*sub_10046DEE8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10046DF3C()
{
  return swift_retain();
}

uint64_t sub_10046DF74(uint64_t a1)
{
  swift_beginAccess();
  *(void *)(v1 + 48) = a1;
  return swift_release();
}

uint64_t (*sub_10046DFBC())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10046E010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  sub_10046E068(a1, a2, a3);
  return v6;
}

void *sub_10046E068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  type metadata accessor for IDSGroupPushMaterialExchangeParticipantKeyMaterialState(0);
  uint64_t v4 = swift_allocObject();
  uint64_t v5 = v4 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sentKeyMaterial;
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  v7(v4 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sendingKeyMaterial, 1, 1, v6);
  v7(v4 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiredKeyMaterial, 1, 1, v6);
  *(unsigned char *)(v4
           + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiresCache) = 1;
  v3[5] = v4;
  uint64_t v8 = swift_allocObject();
  v7(v8 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sentKeyMaterial, 1, 1, v6);
  v7(v8 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_sendingKeyMaterial, 1, 1, v6);
  v7(v8 + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiredKeyMaterial, 1, 1, v6);
  *(unsigned char *)(v8
           + OBJC_IVAR____TtC17identityservicesd55IDSGroupPushMaterialExchangeParticipantKeyMaterialState_desiresCache) = 1;
  v3[6] = v8;
  v3[2] = a1;
  v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t sub_10046E218()
{
  uint64_t v1 = v0;
  sub_1007269F0(77);
  v13._countAndFlagsBits = 0xD000000000000021;
  v13._object = (void *)0x80000001008C19D0;
  sub_1007264C0(v13);
  id v2 = v0[3];
  id v3 = [v2 description];
  uint64_t v4 = sub_100726430();
  uint64_t v6 = v5;

  v14._countAndFlagsBits = v4;
  v14._object = v6;
  sub_1007264C0(v14);

  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 32;
  v15._object = (void *)0xE100000000000000;
  sub_1007264C0(v15);
  id v7 = v1[2];
  id v8 = [v7 description];
  uint64_t v9 = sub_100726430();
  uint64_t v11 = v10;

  v16._countAndFlagsBits = v9;
  v16._object = v11;
  sub_1007264C0(v16);

  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 32;
  v17._object = (void *)0xE100000000000000;
  sub_1007264C0(v17);
  v18._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v18);
  swift_bridgeObjectRelease();
  v19._object = (void *)0x80000001008C1A00;
  v19._countAndFlagsBits = 0xD000000000000010;
  sub_1007264C0(v19);
  (*((void (**)(void))*v1 + 15))();
  type metadata accessor for IDSGroupPushMaterialExchangeParticipantKeyMaterialState(0);
  v20._countAndFlagsBits = sub_100726480();
  sub_1007264C0(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0x6D6B73202020200ALL;
  v21._object = (void *)0xEF203A6574617453;
  sub_1007264C0(v21);
  (*((void (**)(void))*v1 + 18))();
  v22._countAndFlagsBits = sub_100726480();
  sub_1007264C0(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 62;
  v23._object = (void *)0xE100000000000000;
  sub_1007264C0(v23);
  return 0;
}

uint64_t sub_10046E480(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100431F80(&qword_100A45628);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)v1 + 120))(v10);
  (*(void (**)(uint64_t))(*(void *)v13 + 112))(v13);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3))
  {
    sub_10044C150((uint64_t)v12, &qword_100A45628);
    char v14 = 0;
  }
  else
  {
    sub_1004828A0((uint64_t)v12, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    sub_10044C150((uint64_t)v12, &qword_100A45628);
    uint64_t v15 = *((void *)v7 + 1);
    swift_bridgeObjectRetain();
    sub_100482970((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    char v14 = sub_10046E66C(a1, v15);
    swift_bridgeObjectRelease();
  }
  return v14 & 1;
}

uint64_t sub_10046E66C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  id v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a2 + 16)
    && (sub_10048156C(&qword_100A44D18, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent), uint64_t v8 = sub_1007263D0(), v9 = -1 << *(unsigned char *)(a2 + 32), v10 = v8 & ~v9, ((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v4 + 72);
    do
    {
      sub_1004828A0(*(void *)(a2 + 48) + v12 * v10, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10048156C(&qword_100A44D20, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      char v13 = sub_100726410();
      sub_100482970((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      if (v13) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
    }
    while (((*(void *)(a2 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  else
  {
    char v13 = 0;
  }
  return v13 & 1;
}

uint64_t sub_10046E860()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10046E8B0()
{
  return (*(uint64_t (**)(void))(**(void **)v0 + 176))();
}

uint64_t sub_10046E8F4@<X0>(uint64_t a1@<X8>)
{
  return sub_10046CB2C(&OBJC_IVAR____TtC17identityservicesd34IDSGroupPushMaterialExchangeMember_sentPublicIdentity, &qword_100A45640, a1);
}

uint64_t sub_10046E908(uint64_t a1)
{
  return sub_10046CBA0(a1, &OBJC_IVAR____TtC17identityservicesd34IDSGroupPushMaterialExchangeMember_sentPublicIdentity, &qword_100A45640);
}

uint64_t sub_10046E91C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100431F80(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*sub_10046E980())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10046E9DC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = v2 + OBJC_IVAR____TtC17identityservicesd34IDSGroupPushMaterialExchangeMember_sentPublicIdentity;
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  *(void *)(v2 + 16) = a1;
  return v2;
}

uint64_t sub_10046EA6C()
{
  sub_10044C150(v0 + OBJC_IVAR____TtC17identityservicesd34IDSGroupPushMaterialExchangeMember_sentPublicIdentity, &qword_100A45640);

  return swift_deallocClassInstance();
}

uint64_t sub_10046EAE0()
{
  return sub_10046EF48();
}

void sub_10046EAEC(void *a1, uint64_t a2)
{
  uint64_t v5 = v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_delegate;
  swift_beginAccess();
  *(void *)(v5 + 8) = a2;
  swift_unknownObjectWeakAssign();
}

void (*sub_10046EB54(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100462DE8;
}

unint64_t sub_10046EBDC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A459D8);
  uint64_t v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_retain();
    unint64_t result = sub_10047B0C4((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10046ECE8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80((uint64_t *)&unk_100A48A90);
  uint64_t v2 = sub_100726BE0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1004546B8(v6, (uint64_t)&v15, &qword_100A459D0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10045C784(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    BOOL v11 = (uint64_t *)(v3[6] + 16 * result);
    *BOOL v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_100450794(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_10046EE20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_desiredPublicIdentity;
  swift_beginAccess();
  return sub_1004546B8(v3, a1, &qword_100A45640);
}

uint64_t sub_10046EE7C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_desiredPublicIdentity;
  swift_beginAccess();
  sub_10046E91C(a1, v3, &qword_100A45640);
  return swift_endAccess();
}

uint64_t (*sub_10046EEE0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_10046EF3C()
{
  return sub_10046EF48();
}

uint64_t sub_10046EF48()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_10046EF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cachedKeyPropagationProvider;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_10046F000(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cachedKeyPropagationProvider;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100455C48;
}

id sub_10046F088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v17 = objc_allocWithZone(v8);
  id v18 = sub_100480A28(a1, a2, a3, a4, a5, a6, a7, a8);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v18;
}

uint64_t sub_10046F12C(uint64_t a1)
{
  uint64_t v94 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock;
  uint64_t v3 = *(os_unfair_lock_s **)(v1 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  swift_release();
  if ((a1 & 0xC000000000000001) == 0) {
    goto LABEL_5;
  }
  uint64_t v4 = sub_100726920();
  if (v4)
  {
    uint64_t v5 = v4;
    sub_100726A60();
    uint64_t v100 = sub_1007268D0();
    uint64_t v101 = v6;
    LOBYTE(v102) = 1;
    if ((v5 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
LABEL_5:
    uint64_t v5 = *(void *)(a1 + 16);
    if (v5)
    {
      sub_100726A60();
      uint64_t v100 = sub_1004805BC(a1);
      uint64_t v101 = v7;
      LOBYTE(v102) = v8 & 1;
      do
      {
LABEL_9:
        while (1)
        {
          sub_1004802B4(v100, v101, v102, a1);
          uint64_t v15 = v14;
          id v16 = *(id *)&v14[OBJC_IVAR____TtC17identityservicesd34IDSGroupEncryptionControllerMember_uri];

          sub_100726A40();
          sub_100726A70();
          sub_100726A80();
          sub_100726A50();
          if ((a1 & 0xC000000000000001) != 0) {
            break;
          }
          int64_t v9 = sub_1004801D0(v100, v101, v102, a1);
          uint64_t v11 = v10;
          char v13 = v12;
          sub_100482640(v100, v101, v102);
          uint64_t v100 = v9;
          uint64_t v101 = v11;
          LOBYTE(v102) = v13 & 1;
          if (!--v5) {
            goto LABEL_14;
          }
        }
        if ((v102 & 1) == 0) {
          goto LABEL_108;
        }
        if (sub_1007268F0()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100431F80(&qword_100A45648);
        id v17 = (void (*)(void *, void))sub_100726670();
        sub_100726970();
        v17(v105, 0);
        --v5;
      }
      while (v5);
LABEL_14:
      sub_100482640(v100, v101, v102);
    }
  }
  uint64_t v18 = sub_100481658((unint64_t)&_swiftEmptyArrayStorage, (unint64_t *)&unk_100A47EC0, (uint64_t)IDSURI_ptr, (unint64_t *)&unk_100A46850, &qword_100A459E0);
  swift_bridgeObjectRelease();
  Swift::String v19 = (uint64_t *)(v95 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_membersByURI);
  swift_beginAccess();
  unint64_t v20 = swift_bridgeObjectRetain();
  sub_10046FDF4(v20);
  uint64_t v22 = v21;
  swift_bridgeObjectRetain();
  unint64_t v23 = (unint64_t)sub_1004700E8(v22, v18);
  uint64_t v24 = sub_1004700E8(v18, v22);
  swift_bridgeObjectRelease();
  if ((v23 & 0xC000000000000001) != 0)
  {
    sub_1007268E0();
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    sub_100726680();
    unint64_t v23 = v100;
    int64_t v97 = (char *)v101;
    uint64_t v25 = v102;
    uint64_t v26 = v103;
    unint64_t v27 = v104;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v28 = -1 << *(unsigned char *)(v23 + 32);
    int64_t v97 = (char *)(v23 + 56);
    uint64_t v29 = ~v28;
    uint64_t v30 = -v28;
    if (v30 < 64) {
      uint64_t v31 = ~(-1 << v30);
    }
    else {
      uint64_t v31 = -1;
    }
    unint64_t v27 = v31 & *(void *)(v23 + 56);
    uint64_t v25 = v29;
  }
  int64_t v96 = (unint64_t)(v25 + 64) >> 6;
  unint64_t v93 = (unint64_t)v24;
  while ((v23 & 0x8000000000000000) != 0)
  {
    uint64_t v36 = sub_100726950();
    if (!v36) {
      goto LABEL_60;
    }
    unint64_t v99 = (void *)v36;
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v37 = (id)v105[0];
    swift_unknownObjectRelease();
    uint64_t v35 = v26;
    uint64_t v33 = v27;
    if (!v37) {
      goto LABEL_60;
    }
LABEL_45:
    type metadata accessor for IDSGroupPushMaterialExchangeMember(0);
    uint64_t v41 = swift_allocObject();
    uint64_t v42 = v41 + OBJC_IVAR____TtC17identityservicesd34IDSGroupPushMaterialExchangeMember_sentPublicIdentity;
    uint64_t v43 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 1, 1, v43);
    *(void *)(v41 + 16) = v37;
    swift_beginAccess();
    uint64_t v44 = *v19;
    if ((*v19 & 0xC000000000000001) != 0)
    {
      if (v44 >= 0) {
        v44 &= 0xFFFFFFFFFFFFFF8uLL;
      }
      id v45 = v37;
      uint64_t v46 = sub_100726B10();
      if (__OFADD__(v46, 1)) {
        goto LABEL_103;
      }
      *Swift::String v19 = sub_10047C1F8(v44, v46 + 1);
    }
    else
    {
      id v47 = v37;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v49 = *v19;
    unint64_t v99 = (void *)*v19;
    *Swift::String v19 = 0x8000000000000000;
    unint64_t v51 = sub_10047B0C4((uint64_t)v37);
    uint64_t v52 = *(void *)(v49 + 16);
    BOOL v53 = (v50 & 1) == 0;
    uint64_t v54 = v52 + v53;
    if (__OFADD__(v52, v53))
    {
      __break(1u);
LABEL_103:
      __break(1u);
LABEL_104:
      __break(1u);
LABEL_105:
      __break(1u);
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      __break(1u);
LABEL_109:
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      uint64_t result = sub_100726D40();
      __break(1u);
      return result;
    }
    char v55 = v50;
    if (*(void *)(v49 + 24) >= v54)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_10047D34C();
      }
    }
    else
    {
      sub_10047C434(v54, isUniquelyReferenced_nonNull_native);
      unint64_t v56 = sub_10047B0C4((uint64_t)v37);
      if ((v55 & 1) != (v57 & 1)) {
        goto LABEL_109;
      }
      unint64_t v51 = v56;
    }
    uint64_t v58 = 8 * v51;
    if (v55)
    {
      uint64_t v32 = v99[7];
      swift_release();
      *(void *)(v32 + v58) = v41;
    }
    else
    {
      v99[(v51 >> 6) + 8] |= 1 << v51;
      *(void *)(v99[6] + 8 * v51) = v37;
      *(void *)(v99[7] + 8 * v51) = v41;
      uint64_t v59 = v99[2];
      BOOL v60 = __OFADD__(v59, 1);
      uint64_t v61 = v59 + 1;
      if (v60) {
        goto LABEL_104;
      }
      v99[2] = v61;
      id v62 = v37;
    }
    *Swift::String v19 = (uint64_t)v99;
    swift_bridgeObjectRelease();
    swift_endAccess();

    uint64_t v26 = v35;
    unint64_t v27 = v33;
  }
  if (v27)
  {
    uint64_t v33 = (v27 - 1) & v27;
    unint64_t v34 = __clz(__rbit64(v27)) | (v26 << 6);
    uint64_t v35 = v26;
    goto LABEL_44;
  }
  int64_t v38 = v26 + 1;
  if (__OFADD__(v26, 1)) {
    goto LABEL_106;
  }
  if (v38 < v96)
  {
    unint64_t v39 = *(void *)&v97[8 * v38];
    uint64_t v35 = v26 + 1;
    if (!v39)
    {
      uint64_t v35 = v26 + 2;
      if (v26 + 2 >= v96) {
        goto LABEL_60;
      }
      unint64_t v39 = *(void *)&v97[8 * v35];
      if (!v39)
      {
        uint64_t v35 = v26 + 3;
        if (v26 + 3 >= v96) {
          goto LABEL_60;
        }
        unint64_t v39 = *(void *)&v97[8 * v35];
        if (!v39)
        {
          uint64_t v35 = v26 + 4;
          if (v26 + 4 >= v96) {
            goto LABEL_60;
          }
          unint64_t v39 = *(void *)&v97[8 * v35];
          if (!v39)
          {
            uint64_t v40 = v26 + 5;
            do
            {
              if (v96 == v40) {
                goto LABEL_60;
              }
              unint64_t v39 = *(void *)&v97[8 * v40++];
            }
            while (!v39);
            uint64_t v35 = v40 - 1;
          }
        }
      }
    }
    uint64_t v33 = (v39 - 1) & v39;
    unint64_t v34 = __clz(__rbit64(v39)) + (v35 << 6);
LABEL_44:
    id v37 = *(id *)(*(void *)(v23 + 48) + 8 * v34);
    if (!v37) {
      goto LABEL_60;
    }
    goto LABEL_45;
  }
LABEL_60:
  sub_100462C48();
  unint64_t v63 = v93;
  if ((v93 & 0xC000000000000001) != 0)
  {
    sub_1007268E0();
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    sub_100726680();
    unint64_t v63 = v105[0];
    uint64_t v64 = (char *)v105[1];
    uint64_t v65 = v105[2];
    uint64_t v66 = v105[3];
    unint64_t v67 = v105[4];
  }
  else
  {
    uint64_t v66 = 0;
    uint64_t v68 = -1 << *(unsigned char *)(v93 + 32);
    uint64_t v64 = (char *)(v93 + 56);
    uint64_t v65 = ~v68;
    uint64_t v69 = -v68;
    if (v69 < 64) {
      uint64_t v70 = ~(-1 << v69);
    }
    else {
      uint64_t v70 = -1;
    }
    unint64_t v67 = v70 & *(void *)(v93 + 56);
  }
  int64_t v71 = (unint64_t)(v65 + 64) >> 6;
  while (2)
  {
    uint64_t v77 = v66;
    if ((v63 & 0x8000000000000000) != 0)
    {
      if (!sub_100726950()) {
        goto LABEL_101;
      }
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v80 = v99;
      swift_unknownObjectRelease();
      if (!v99) {
        goto LABEL_101;
      }
      goto LABEL_91;
    }
    if (v67)
    {
      unint64_t v78 = __clz(__rbit64(v67));
      v67 &= v67 - 1;
      unint64_t v79 = v78 | (v66 << 6);
LABEL_90:
      id v80 = *(id *)(*(void *)(v63 + 48) + 8 * v79);
      if (!v80) {
        goto LABEL_101;
      }
LABEL_91:
      swift_beginAccess();
      uint64_t v84 = *v19;
      if ((*v19 & 0xC000000000000001) != 0)
      {
        if (v84 < 0) {
          uint64_t v85 = *v19;
        }
        else {
          uint64_t v85 = v84 & 0xFFFFFFFFFFFFFF8;
        }
        id v86 = v80;
        swift_bridgeObjectRetain();
        if (!sub_100726B40())
        {
          swift_bridgeObjectRelease();
          goto LABEL_69;
        }
        swift_unknownObjectRelease();
        uint64_t v72 = sub_100726B10();
        Swift::Int v73 = sub_10047C1F8(v85, v72);
        swift_retain();
        unint64_t v74 = sub_10047B0C4((uint64_t)v86);
        char v76 = v75;
        swift_release();
        if ((v76 & 1) == 0) {
          goto LABEL_105;
        }
      }
      else
      {
        id v87 = v80;
        swift_bridgeObjectRetain();
        unint64_t v74 = sub_10047B0C4((uint64_t)v87);
        char v89 = v88;
        swift_bridgeObjectRelease();
        if ((v89 & 1) == 0) {
          goto LABEL_69;
        }
        char v90 = swift_isUniquelyReferenced_nonNull_native();
        Swift::Int v73 = *v19;
        Swift::Int v98 = *v19;
        *Swift::String v19 = 0x8000000000000000;
        if ((v90 & 1) == 0)
        {
          sub_10047D34C();
          Swift::Int v73 = v98;
        }
      }

      sub_10047CCC4(v74, v73);
      *Swift::String v19 = v73;
      swift_bridgeObjectRelease();
LABEL_69:
      swift_endAccess();
      swift_release();

      continue;
    }
    break;
  }
  int64_t v81 = v66 + 1;
  if (__OFADD__(v66, 1)) {
    goto LABEL_107;
  }
  if (v81 >= v71) {
    goto LABEL_101;
  }
  unint64_t v82 = *(void *)&v64[8 * v81];
  ++v66;
  if (v82) {
    goto LABEL_89;
  }
  uint64_t v66 = v77 + 2;
  if (v77 + 2 >= v71) {
    goto LABEL_101;
  }
  unint64_t v82 = *(void *)&v64[8 * v66];
  if (v82) {
    goto LABEL_89;
  }
  uint64_t v66 = v77 + 3;
  if (v77 + 3 >= v71) {
    goto LABEL_101;
  }
  unint64_t v82 = *(void *)&v64[8 * v66];
  if (v82) {
    goto LABEL_89;
  }
  uint64_t v66 = v77 + 4;
  if (v77 + 4 >= v71) {
    goto LABEL_101;
  }
  unint64_t v82 = *(void *)&v64[8 * v66];
  if (v82)
  {
LABEL_89:
    unint64_t v67 = (v82 - 1) & v82;
    unint64_t v79 = __clz(__rbit64(v82)) + (v66 << 6);
    goto LABEL_90;
  }
  uint64_t v83 = v77 + 5;
  while (v71 != v83)
  {
    unint64_t v82 = *(void *)&v64[8 * v83++];
    if (v82)
    {
      uint64_t v66 = v83 - 1;
      goto LABEL_89;
    }
  }
LABEL_101:
  sub_100462C48();
  uint64_t v91 = *(os_unfair_lock_s **)(v95 + v94);
  swift_retain();
  os_unfair_lock_unlock(v91 + 4);
  return swift_release();
}

void *sub_10046FBF4(uint64_t a1)
{
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    uint64_t v3 = sub_100726B10();
  }
  else {
    uint64_t v3 = *(void *)(a1 + 16);
  }
  uint64_t result = &_swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t v24 = &_swiftEmptyArrayStorage;
    sub_100726A60();
    uint64_t result = (void *)sub_100480644(a1);
    uint64_t v21 = result;
    uint64_t v22 = v5;
    char v23 = v6 & 1;
    if (v3 < 0)
    {
      __break(1u);
LABEL_16:
      __break(1u);
    }
    else
    {
      do
      {
        while (1)
        {
          uint64_t v13 = (uint64_t)v21;
          uint64_t v14 = v22;
          char v15 = v23;
          sub_100480708(v20, (uint64_t)v21, v22, v23, a1);
          id v17 = v16;
          id v18 = *(id *)(v20[0] + 16);
          swift_release();

          sub_100726A40();
          sub_100726A70();
          sub_100726A80();
          uint64_t result = (void *)sub_100726A50();
          if (v2) {
            break;
          }
          sub_10047FD14(v13, v14, v15, a1);
          uint64_t v8 = v7;
          uint64_t v10 = v9;
          char v12 = v11;
          sub_100482640(v13, v14, v15);
          uint64_t v21 = (void *)v8;
          uint64_t v22 = v10;
          char v23 = v12 & 1;
          if (!--v3) {
            goto LABEL_13;
          }
        }
        if ((v15 & 1) == 0) {
          goto LABEL_16;
        }
        if (sub_100726AE0()) {
          swift_isUniquelyReferenced_nonNull_native();
        }
        sub_100431F80(&qword_100A45668);
        Swift::String v19 = (void (*)(void *, void))sub_1007263B0();
        sub_100726B70();
        v19(v20, 0);
        --v3;
      }
      while (v3);
LABEL_13:
      sub_100482640((uint64_t)v21, v22, v23);
      return v24;
    }
  }
  return result;
}

void sub_10046FDF4(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    sub_100726B10();
  }
  sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
  sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
  v19[1] = (id)sub_100726660();
  if (v2)
  {
    uint64_t v3 = sub_100726AB0();
    unint64_t v18 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v1 = v3 | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(v1 + 32);
    unint64_t v18 = v1 + 64;
    uint64_t v4 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v1 + 64);
  }
  uint64_t v9 = 0;
  int64_t v17 = (unint64_t)(v4 + 64) >> 6;
  while ((v1 & 0x8000000000000000) != 0)
  {
    if (!sub_100726B60()) {
      goto LABEL_34;
    }
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v13 = v19[0];
    swift_unknownObjectRelease();
    if (!v13) {
      goto LABEL_34;
    }
    uint64_t v10 = v5;
    uint64_t v12 = v9;
LABEL_12:
    sub_10047B3D4(v19, v13, (unint64_t *)&unk_100A47EC0, (uint64_t)IDSURI_ptr, &qword_100A459E0);

    uint64_t v9 = v12;
    unint64_t v5 = v10;
  }
  if (v5)
  {
    uint64_t v10 = (v5 - 1) & v5;
    unint64_t v11 = __clz(__rbit64(v5)) | (v9 << 6);
    uint64_t v12 = v9;
LABEL_11:
    id v13 = *(id *)(*(void *)(v1 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_34;
    }
    goto LABEL_12;
  }
  int64_t v14 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v14 >= v17) {
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v18 + 8 * v14);
    uint64_t v12 = v9 + 1;
    if (!v15)
    {
      uint64_t v12 = v9 + 2;
      if (v9 + 2 >= v17) {
        goto LABEL_34;
      }
      unint64_t v15 = *(void *)(v18 + 8 * v12);
      if (!v15)
      {
        uint64_t v12 = v9 + 3;
        if (v9 + 3 >= v17) {
          goto LABEL_34;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v12);
        if (!v15)
        {
          uint64_t v12 = v9 + 4;
          if (v9 + 4 >= v17) {
            goto LABEL_34;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v9 + 5;
            if (v9 + 5 >= v17) {
              goto LABEL_34;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v16 = v9 + 6;
              while (v17 != v16)
              {
                unint64_t v15 = *(void *)(v18 + 8 * v16++);
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_100462C48();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
    goto LABEL_11;
  }
  __break(1u);
}

void *sub_1004700E8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_100726920();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_10047B6A0(a1);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= sub_100726920() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100726920();
  Swift::Int v7 = sub_10047B998(v5, v6, &qword_100A459E0, (unint64_t *)&unk_100A47EC0);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_10047BB9C(a1, v2);
}

uint64_t sub_100470208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_100450794((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_10047D18C(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_10044C150(a1, &qword_100A44F00);
    sub_10047C0F4(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_10044C150((uint64_t)v9, &qword_100A44F00);
  }
}

uint64_t sub_1004702E0()
{
  unint64_t v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock);
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_100469128();
  os_unfair_lock_unlock(v1 + 4);
  return swift_release();
}

uint64_t sub_100470364(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v204 = sub_100725EF0();
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204, v4);
  v202 = (char *)&v195 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v201 = sub_100725F20();
  uint64_t v200 = *(void *)(v201 - 8);
  __chkstk_darwin(v201, v6);
  v199 = (char *)&v195 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v196 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v198 = (uint64_t)&v195 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v205 = (uint64_t)&v195 - v14;
  uint64_t v197 = v15;
  __chkstk_darwin(v13, v16);
  v210 = (uint64_t *)((char *)&v195 - v17);
  uint64_t v18 = sub_100431F80(&qword_100A45640);
  uint64_t v20 = __chkstk_darwin(v18 - 8, v19);
  v206 = (char *)&v195 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  v208 = (char *)&v195 - v24;
  __chkstk_darwin(v23, v25);
  unint64_t v27 = (char *)&v195 - v26;
  uint64_t v232 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
  unint64_t v28 = *(void *)(v232 - 8);
  uint64_t v30 = __chkstk_darwin(v232, v29);
  uint64_t v209 = (uint64_t)&v195 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30, v32);
  uint64_t v228 = (uint64_t)&v195 - v33;
  uint64_t v34 = sub_100431F80(&qword_100A45628);
  __chkstk_darwin(v34 - 8, v35);
  uint64_t v224 = (uint64_t)&v195 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v38 = *(void *)(v37 - 8);
  uint64_t v40 = __chkstk_darwin(v37, v39);
  uint64_t v221 = (uint64_t)&v195 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __chkstk_darwin(v40, v42);
  uint64_t v223 = (uint64_t)&v195 - v44;
  __chkstk_darwin(v43, v45);
  id v47 = (char *)&v195 - v46;
  uint64_t v48 = (void *)type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  v242 = (uint64_t *)*(v48 - 1);
  uint64_t v50 = __chkstk_darwin(v48, v49);
  uint64_t v52 = (uint64_t)&v195 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v50, v53);
  unint64_t v241 = (unint64_t)&v195 - v54;
  uint64_t v55 = *(void *)(a1 + 56);
  uint64_t v239 = a1 + 56;
  uint64_t v56 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v57 = -1;
  if (v56 < 64) {
    uint64_t v57 = ~(-1 << v56);
  }
  uint64_t v58 = v57 & v55;
  uint64_t v59 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock;
  v227 = (char *)v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_l;
  uint64_t v240 = (unint64_t)(v56 + 63) >> 6;
  unint64_t v207 = v28;
  v229 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56);
  v215 = &v246;
  v222 = (void (**)(uint64_t, void, uint64_t, int *))(v38 + 56);
  uint64_t v60 = swift_bridgeObjectRetain();
  uint64_t v61 = 0;
  *(void *)&long long v62 = 136315394;
  long long v213 = v62;
  unint64_t v216 = (unint64_t)"ata:desiredMaterial:)";
  unint64_t v212 = 0x80000001008C19B0;
  v211 = (char *)&type metadata for Any + 8;
  *(void *)&long long v62 = 136315650;
  long long v214 = v62;
  v230 = v27;
  uint64_t v236 = v59;
  unint64_t v63 = v60;
  unint64_t v235 = v60;
  v238 = (int *)v37;
  v234 = v47;
  v237 = v48;
  v233 = v2;
  uint64_t v225 = v52;
  while (1)
  {
    if (v58)
    {
      unint64_t v69 = __clz(__rbit64(v58));
      v58 &= v58 - 1;
      unint64_t v70 = v69 | (v61 << 6);
      goto LABEL_21;
    }
    uint64_t v71 = v61 + 1;
    if (__OFADD__(v61, 1)) {
      goto LABEL_105;
    }
    if (v71 >= v240) {
      break;
    }
    unint64_t v72 = *(void *)(v239 + 8 * v71);
    ++v61;
    if (!v72)
    {
      uint64_t v61 = v71 + 1;
      if (v71 + 1 >= v240) {
        break;
      }
      unint64_t v72 = *(void *)(v239 + 8 * v61);
      if (!v72)
      {
        uint64_t v61 = v71 + 2;
        if (v71 + 2 >= v240) {
          break;
        }
        unint64_t v72 = *(void *)(v239 + 8 * v61);
        if (!v72)
        {
          uint64_t v73 = v71 + 3;
          if (v73 >= v240) {
            break;
          }
          unint64_t v72 = *(void *)(v239 + 8 * v73);
          if (!v72)
          {
            while (1)
            {
              uint64_t v61 = v73 + 1;
              if (__OFADD__(v73, 1)) {
                goto LABEL_106;
              }
              if (v61 >= v240) {
                goto LABEL_39;
              }
              unint64_t v72 = *(void *)(v239 + 8 * v61);
              ++v73;
              if (v72) {
                goto LABEL_20;
              }
            }
          }
          uint64_t v61 = v73;
        }
      }
    }
LABEL_20:
    uint64_t v58 = (v72 - 1) & v72;
    unint64_t v70 = __clz(__rbit64(v72)) + (v61 << 6);
LABEL_21:
    unint64_t v28 = v241;
    sub_1004828A0(*(void *)(v63 + 48) + v242[9] * v70, v241, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_100482908(v28, v52, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_100482970(v52, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        continue;
      case 2u:
        unint64_t v28 = (unint64_t)type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet;
        uint64_t v64 = v228;
        sub_100482908(v52, v228, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
        uint64_t v65 = *(os_unfair_lock_s **)((char *)v2 + v59);
        swift_retain();
        os_unfair_lock_lock(v65 + 4);
        swift_release();
        uint64_t v66 = (uint64_t)v230;
        sub_1004828A0(v64, (uint64_t)v230, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
        (*v229)(v66, 0, 1, v232);
        (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0xF8))(v66);
        unint64_t v67 = *(os_unfair_lock_s **)((char *)v2 + v59);
        swift_retain();
        uint64_t v48 = v237;
        os_unfair_lock_unlock(v67 + 4);
        swift_release();
        uint64_t v68 = v64;
        id v47 = v234;
        unint64_t v63 = v235;
        sub_100482970(v68, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
        continue;
      case 3u:
        sub_100442248(*(void *)(v52 + 8), *(void *)(v52 + 16));
        continue;
      default:
        sub_100482908(v52, (uint64_t)v47, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        unint64_t v74 = (id *)&v47[v238[6]];
        if (*v74)
        {
          id v75 = [*v74 prefixedURI];
          sub_100726430();

          NSString v76 = sub_100726420();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v76 = 0;
        }
        uint64_t v77 = (uint64_t)v47;
        id v78 = sub_1003EA6DC(v76);

        if (!v78) {
          goto LABEL_111;
        }
        sub_100726430();

        id v79 = objc_allocWithZone((Class)IDSURI);
        NSString v80 = sub_100726420();
        swift_bridgeObjectRelease();
        id v81 = [v79 initWithPrefixedURI:v80];

        if (v81)
        {
          uint64_t v82 = v77;
          uint64_t v83 = v233;
          uint64_t v84 = *(uint64_t (**)(void))((swift_isaMask & *v233) + 0x190);
          id v85 = v74[1];
          uint64_t v86 = v84();

          uint64_t v59 = v236;
          id v87 = *(os_unfair_lock_s **)((char *)v83 + v236);
          swift_retain();
          os_unfair_lock_lock(v87 + 4);
          swift_release();
          uint64_t v88 = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v83) + 0x160))(v82, v86);
          if (v88)
          {
            unint64_t v28 = v88;
            id v226 = v81;
            uint64_t v89 = v223;
            sub_1004828A0(v82, v223, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
            uint64_t v231 = v86;
            swift_retain_n();
            char v90 = sub_100725EB0();
            os_log_type_t v91 = sub_1007266E0();
            int v92 = v91;
            BOOL v93 = os_log_type_enabled(v90, v91);
            uint64_t v52 = v225;
            if (v93)
            {
              uint64_t v94 = swift_slowAlloc();
              uint64_t v220 = swift_slowAlloc();
              aBlock[0] = v220;
              *(_DWORD *)uint64_t v94 = v214;
              int v219 = v92;
              id v245 = (id)sub_10043E578(0xD000000000000017, v216 | 0x8000000000000000, aBlock);
              sub_100726830();
              os_log_t v218 = v90;
              *(_WORD *)(v94 + 12) = 2080;
              sub_10048156C(&qword_100A45658, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
              uint64_t v95 = v238;
              uint64_t v96 = sub_100726D00();
              id v245 = (id)sub_10043E578(v96, v97, aBlock);
              sub_100726830();
              swift_bridgeObjectRelease();
              sub_100482970(v89, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
              *(_WORD *)(v94 + 22) = 2080;
              uint64_t v217 = v94 + 24;
              Swift::Int v98 = *(uint64_t (**)(uint64_t))(*(void *)v231 + 176);
              uint64_t v99 = swift_retain();
              uint64_t v100 = v98(v99);
              unint64_t v102 = v101;
              swift_release();
              id v245 = (id)sub_10043E578(v100, v102, aBlock);
              sub_100726830();
              swift_release_n();
              uint64_t v59 = v236;
              swift_bridgeObjectRelease();
              os_log_t v103 = v218;
              _os_log_impl((void *)&_mh_execute_header, v218, (os_log_type_t)v219, "%s: send keyMaterial:%s toParticipant:%s)", (uint8_t *)v94, 0x20u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              sub_100482970(v89, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
              swift_release_n();
              uint64_t v95 = v238;
            }
            id v47 = v234;
            uint64_t v111 = v224;
            sub_1004828A0((uint64_t)v234, v224, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
            (*v222)(v111, 0, 1, v95);
            (*(void (**)(uint64_t))(*(void *)v28 + 168))(v111);
            uint64_t v2 = v233;
            uint64_t v112 = *(os_unfair_lock_s **)((char *)v233 + v59);
            swift_retain();
            uint64_t v59 = v236;
            os_unfair_lock_unlock(v112 + 4);
            swift_release();

            swift_release();
            swift_release();
            sub_100482970((uint64_t)v47, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
            unint64_t v63 = v235;
            uint64_t v48 = v237;
          }
          else
          {
            unint64_t v28 = *(void *)((char *)v83 + v59) + 16;
            swift_retain();
            os_unfair_lock_unlock((os_unfair_lock_t)v28);
            swift_release();
            swift_release();

            sub_100482970(v82, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
            unint64_t v63 = v235;
            id v47 = (char *)v82;
            uint64_t v2 = v83;
            uint64_t v48 = v237;
            uint64_t v52 = v225;
          }
        }
        else
        {
          id v47 = (char *)v77;
          uint64_t v104 = v221;
          sub_1004828A0(v77, v221, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
          uint64_t v105 = sub_100725EB0();
          os_log_type_t v106 = sub_1007266E0();
          if (os_log_type_enabled(v105, v106))
          {
            unint64_t v28 = swift_slowAlloc();
            aBlock[0] = swift_slowAlloc();
            *(_DWORD *)unint64_t v28 = v213;
            *(void *)(v28 + 4) = sub_10043E578(0xD000000000000017, v212, aBlock);
            *(_WORD *)(v28 + 12) = 2080;
            id v245 = *(id *)(v104 + v238[6]);
            id v107 = v245;
            sub_100431F80(&qword_100A45650);
            uint64_t v108 = sub_100726480();
            *(void *)(v28 + 14) = sub_10043E578(v108, v109, aBlock);
            swift_bridgeObjectRelease();
            id v47 = v234;
            sub_100482970(v104, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
            _os_log_impl((void *)&_mh_execute_header, v105, v106, "%s: could not get IDSURI from %s", (uint8_t *)v28, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            uint64_t v110 = (uint64_t)v47;
          }
          else
          {
            unint64_t v28 = (unint64_t)type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet;
            sub_100482970(v104, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);

            uint64_t v110 = v77;
          }
          sub_100482970(v110, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
          uint64_t v59 = v236;
          uint64_t v48 = v237;
          uint64_t v2 = v233;
        }
        break;
    }
  }
LABEL_39:
  swift_release();
  uint64_t v113 = *(os_unfair_lock_s **)((char *)v2 + v59);
  swift_retain();
  os_unfair_lock_lock(v113 + 4);
  swift_release();
  uint64_t v114 = (void *)((char *)v2
                  + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_participantsById);
  swift_beginAccess();
  unint64_t v28 = *v114;
  unint64_t v63 = *v114 + 64;
  uint64_t v115 = 1 << *(unsigned char *)(*v114 + 32);
  uint64_t v116 = -1;
  if (v115 < 64) {
    uint64_t v116 = ~(-1 << v115);
  }
  uint64_t v52 = v116 & *(void *)(*v114 + 64);
  uint64_t v58 = (unint64_t)(v115 + 63) >> 6;
  swift_bridgeObjectRetain();
  uint64_t v117 = 0;
  while (2)
  {
    if (v52)
    {
      unint64_t v118 = __clz(__rbit64(v52));
      v52 &= v52 - 1;
      unint64_t v119 = v118 | (v117 << 6);
LABEL_43:
      uint64_t v48 = *(void **)(*(void *)(v28 + 56) + 8 * v119);
      uint64_t v120 = *(void (**)(uint64_t))((swift_isaMask & *v2) + 0x178);
      uint64_t v121 = swift_retain();
      v120(v121);
      swift_release();
      continue;
    }
    break;
  }
  uint64_t v122 = v117 + 1;
  if (__OFADD__(v117, 1))
  {
    __break(1u);
LABEL_105:
    __break(1u);
LABEL_106:
    __break(1u);
    goto LABEL_107;
  }
  if (v122 >= v58) {
    goto LABEL_61;
  }
  unint64_t v123 = *(void *)(v63 + 8 * v122);
  ++v117;
  if (v123) {
    goto LABEL_60;
  }
  uint64_t v117 = v122 + 1;
  if (v122 + 1 >= v58) {
    goto LABEL_61;
  }
  unint64_t v123 = *(void *)(v63 + 8 * v117);
  if (v123) {
    goto LABEL_60;
  }
  uint64_t v117 = v122 + 2;
  if (v122 + 2 >= v58) {
    goto LABEL_61;
  }
  unint64_t v123 = *(void *)(v63 + 8 * v117);
  if (v123) {
    goto LABEL_60;
  }
  uint64_t v117 = v122 + 3;
  if (v122 + 3 >= v58) {
    goto LABEL_61;
  }
  unint64_t v123 = *(void *)(v63 + 8 * v117);
  if (v123)
  {
LABEL_60:
    uint64_t v52 = (v123 - 1) & v123;
    unint64_t v119 = __clz(__rbit64(v123)) + (v117 << 6);
    goto LABEL_43;
  }
  uint64_t v124 = v122 + 4;
  if (v124 < v58)
  {
    unint64_t v123 = *(void *)(v63 + 8 * v124);
    if (v123)
    {
      uint64_t v117 = v124;
      goto LABEL_60;
    }
    while (1)
    {
      uint64_t v117 = v124 + 1;
      if (__OFADD__(v124, 1)) {
        break;
      }
      if (v117 >= v58) {
        goto LABEL_61;
      }
      unint64_t v123 = *(void *)(v63 + 8 * v117);
      ++v124;
      if (v123) {
        goto LABEL_60;
      }
    }
LABEL_107:
    __break(1u);
LABEL_108:
    swift_bridgeObjectRetain();
    uint64_t v145 = v209;
    int64_t v146 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (v146 < 1) {
      goto LABEL_109;
    }
LABEL_69:
    swift_bridgeObjectRetain_n();
    uint64_t v147 = sub_100725EB0();
    os_log_type_t v148 = sub_1007266E0();
    BOOL v149 = os_log_type_enabled(v147, v148);
    uint64_t v240 = v58;
    unint64_t v241 = v63;
    uint64_t v239 = v52;
    if (v149)
    {
      uint64_t v150 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v150 = v213;
      v243 = (void *)sub_10043E578(0xD000000000000017, v216 | 0x8000000000000000, aBlock);
      sub_100726830();
      *(_WORD *)(v150 + 12) = 2080;
      v238 = (int *)(v150 + 14);
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      swift_bridgeObjectRetain();
      uint64_t v151 = sub_100726580();
      unint64_t v153 = v152;
      swift_bridgeObjectRelease();
      v243 = (void *)sub_10043E578(v151, v153, aBlock);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v147, v148, "%s: Sending PreKey to %s", (uint8_t *)v150, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    aBlock[0] = (uint64_t)&_swiftEmptyArrayStorage;
    sub_100455590(0, v146, 0);
    uint64_t v154 = 0;
    uint64_t v155 = aBlock[0];
    unint64_t v156 = v28 & 0xC000000000000001;
    do
    {
      if (v156) {
        id v157 = (id)sub_100726A10();
      }
      else {
        id v157 = *(id *)(v28 + 8 * v154 + 32);
      }
      v158 = v157;
      id v159 = [v157 prefixedURI];
      uint64_t v160 = sub_100726430();
      uint64_t v162 = v161;

      aBlock[0] = v155;
      unint64_t v164 = *(void *)(v155 + 16);
      unint64_t v163 = *(void *)(v155 + 24);
      if (v164 >= v163 >> 1)
      {
        sub_100455590((char *)(v163 > 1), v164 + 1, 1);
        uint64_t v155 = aBlock[0];
      }
      ++v154;
      *(void *)(v155 + 16) = v164 + 1;
      uint64_t v165 = v155 + 16 * v164;
      *(void *)(v165 + 32) = v160;
      *(void *)(v165 + 40) = v162;
    }
    while (v146 != v154);
    sub_1004815C0(v155);
    swift_bridgeObjectRelease();
    Class isa = sub_100726630().super.isa;
    swift_bridgeObjectRelease();
    v237 = [self destinationWithStrings:isa];

    v238 = (int *)(id)im_primary_queue();
    if (!v238) {
      goto LABEL_112;
    }
    uint64_t v167 = v198;
    sub_1004828A0((uint64_t)v210, v198, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    unint64_t v168 = (*(unsigned __int8 *)(v196 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80);
    unint64_t v169 = (v197 + v168 + 7) & 0xFFFFFFFFFFFFFFF8;
    v170 = (void *)swift_allocObject();
    uint64_t v171 = v240;
    unint64_t v172 = v241;
    v170[2] = v2;
    v170[3] = v171;
    v170[4] = v172;
    sub_100482908(v167, (uint64_t)v170 + v168, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    id v173 = v237;
    *(void *)((char *)v170 + v169) = v237;
    aBlock[4] = (uint64_t)sub_100482220;
    aBlock[5] = (uint64_t)v170;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_100435714;
    aBlock[3] = (uint64_t)&unk_10098E048;
    v174 = _Block_copy(aBlock);
    v175 = v2;
    sub_100482480(v171, v172);
    v176 = v173;
    v177 = v199;
    sub_100725F00();
    v243 = &_swiftEmptyArrayStorage;
    sub_10048156C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_100482494();
    v178 = v202;
    uint64_t v179 = v204;
    sub_100726890();
    v180 = v238;
    sub_100726750();
    _Block_release(v174);

    (*(void (**)(char *, uint64_t))(v203 + 8))(v178, v179);
    (*(void (**)(char *, uint64_t))(v200 + 8))(v177, v201);
    swift_release();
    v237 = v176;
    if (v239)
    {
      swift_bridgeObjectRetain();
      uint64_t v181 = sub_100726BA0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v181 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v182 = (uint64_t)v210;
    if (v181)
    {
      if (v181 >= 1)
      {
        uint64_t v183 = 0;
        while (1)
        {
          if (v156) {
            id v184 = (id)sub_100726A10();
          }
          else {
            id v184 = *(id *)(v28 + 8 * v183 + 32);
          }
          v185 = v184;
          uint64_t v186 = *v242;
          if ((*v242 & 0xC000000000000001) != 0)
          {
            swift_bridgeObjectRetain();
            uint64_t v187 = sub_100726B40();
            if (v187)
            {
              v243 = (void *)v187;
              type metadata accessor for IDSGroupPushMaterialExchangeMember(0);
              swift_unknownObjectRetain();
              swift_dynamicCast();
              uint64_t v188 = aBlock[0];
              swift_unknownObjectRelease();
              goto LABEL_98;
            }
          }
          else
          {
            if (!*(void *)(v186 + 16)) {
              goto LABEL_88;
            }
            swift_bridgeObjectRetain();
            id v189 = v185;
            unint64_t v190 = sub_10047B0C4((uint64_t)v189);
            if (v191)
            {
              uint64_t v188 = *(void *)(*(void *)(v186 + 56) + 8 * v190);
              swift_retain();

LABEL_98:
              swift_bridgeObjectRelease();
              uint64_t v192 = (uint64_t)v230;
              if (v188)
              {
                sub_1004828A0(v209, (uint64_t)v230, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
                (*v229)(v192, 0, 1, v232);
                (*(void (**)(uint64_t))(*(void *)v188 + 104))(v192);
                swift_release();
              }
              goto LABEL_88;
            }
          }
          swift_bridgeObjectRelease();
LABEL_88:
          ++v183;

          uint64_t v182 = (uint64_t)v210;
          if (v181 == v183) {
            goto LABEL_100;
          }
        }
      }
      __break(1u);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
      JUMPOUT(0x10047206CLL);
    }
LABEL_100:

    sub_10044CE88(v240, v241);
    swift_bridgeObjectRelease();
    uint64_t v144 = v182;
    goto LABEL_101;
  }
LABEL_61:
  swift_release();
  unint64_t v125 = (void *)((char *)v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_membersByURI);
  swift_beginAccess();
  v242 = v125;
  __chkstk_darwin(*v125, v126);
  *(&v195 - 2) = (uint64_t)v2;
  uint64_t v127 = swift_bridgeObjectRetain();
  Swift::Int v128 = sub_100481E0C(v127, (uint64_t (*)(id, uint64_t))sub_1004815B4, (uint64_t)(&v195 - 4));
  unint64_t v28 = (unint64_t)sub_10046FBF4(v128);
  uint64_t v129 = swift_bridgeObjectRelease();
  uint64_t v130 = *(void (**)(uint64_t))((swift_isaMask & *v2) + 0xF0);
  uint64_t v131 = (uint64_t)v208;
  v130(v129);
  uint64_t v132 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v207 + 48);
  if (v132(v131, 1, v232) != 1)
  {
    uint64_t v133 = v131;
    uint64_t v134 = v209;
    uint64_t v135 = sub_100482908(v133, v209, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
    uint64_t v136 = (uint64_t)v206;
    v130(v135);
    uint64_t v137 = v232;
    if (v132(v136, 1, v232))
    {
      sub_10044C150(v136, &qword_100A45640);
      swift_bridgeObjectRelease();
      uint64_t v138 = v134;
LABEL_102:
      sub_100482970(v138, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
      goto LABEL_103;
    }
    uint64_t v139 = v228;
    sub_1004828A0(v136, v228, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
    sub_10044C150(v136, &qword_100A45640);
    uint64_t v140 = v205;
    sub_100482908(v139 + *(int *)(v137 + 20), v205, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    uint64_t v141 = v140;
    uint64_t v48 = v210;
    sub_100482908(v141, (uint64_t)v210, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    v142 = sub_1005353E4();
    if (v143 >> 60 != 15)
    {
      uint64_t v58 = (uint64_t)v142;
      unint64_t v63 = v143;
      uint64_t v52 = v28 >> 62;
      uint64_t v145 = v209;
      if (v28 >> 62) {
        goto LABEL_108;
      }
      int64_t v146 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v146 >= 1) {
        goto LABEL_69;
      }
LABEL_109:
      sub_10044CE88(v58, v63);
      swift_bridgeObjectRelease();
      sub_100482970((uint64_t)v48, type metadata accessor for IDSGroupEncryptionPublicIdentity);
      uint64_t v138 = v145;
      goto LABEL_102;
    }
    swift_bridgeObjectRelease();
    uint64_t v144 = (uint64_t)v48;
LABEL_101:
    sub_100482970(v144, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    uint64_t v138 = v209;
    goto LABEL_102;
  }
  swift_bridgeObjectRelease();
  sub_10044C150(v131, &qword_100A45640);
LABEL_103:
  v193 = *(os_unfair_lock_s **)((char *)v2 + v236);
  swift_retain();
  os_unfair_lock_unlock(v193 + 4);
  return swift_release();
}

uint64_t sub_10047207C(uint64_t a1, void *a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v34 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100431F80(&qword_100A45680);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100431F80(&qword_100A45640);
  uint64_t v15 = __chkstk_darwin(v13 - 8, v14);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v21 = (char *)&v33 - v20;
  uint64_t v23 = __chkstk_darwin(v19, v22);
  uint64_t v25 = (char *)&v33 - v24;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(*(void *)a1 + 96))(v23);
  (*(void (**)(uint64_t))((swift_isaMask & *a2) + 0xF0))(v26);
  uint64_t v27 = (uint64_t)&v12[*(int *)(v9 + 56)];
  sub_1004546B8((uint64_t)v25, (uint64_t)v12, &qword_100A45640);
  sub_1004546B8((uint64_t)v21, v27, &qword_100A45640);
  unint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v28((uint64_t)v12, 1, v4) != 1)
  {
    sub_1004546B8((uint64_t)v12, (uint64_t)v17, &qword_100A45640);
    if (v28(v27, 1, v4) != 1)
    {
      uint64_t v30 = v34;
      sub_100482908(v27, v34, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
      sub_10048156C(&qword_100A44E20, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
      char v31 = sub_100726410();
      sub_100482970(v30, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
      sub_10044C150((uint64_t)v21, &qword_100A45640);
      sub_10044C150((uint64_t)v25, &qword_100A45640);
      sub_100482970((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
      sub_10044C150((uint64_t)v12, &qword_100A45640);
      char v29 = v31 ^ 1;
      return v29 & 1;
    }
    sub_10044C150((uint64_t)v21, &qword_100A45640);
    sub_10044C150((uint64_t)v25, &qword_100A45640);
    sub_100482970((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
    goto LABEL_6;
  }
  sub_10044C150((uint64_t)v21, &qword_100A45640);
  sub_10044C150((uint64_t)v25, &qword_100A45640);
  if (v28(v27, 1, v4) != 1)
  {
LABEL_6:
    sub_10044C150((uint64_t)v12, &qword_100A45680);
    char v29 = 1;
    return v29 & 1;
  }
  sub_10044C150((uint64_t)v12, &qword_100A45640);
  char v29 = 0;
  return v29 & 1;
}

void sub_100472470(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100725EF0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100725F20();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v83 = ((char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v17 = sub_1005353E4();
  if (v18 >> 60 == 15)
  {
    uint64_t v83 = sub_100725EB0();
    os_log_type_t v19 = sub_1007266E0();
    if (os_log_type_enabled(v83, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v86 = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      *(void *)&v85[0] = sub_10043E578(0xD000000000000031, 0x80000001008C1A20, (uint64_t *)&v86);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v83, v19, "%s: cannot send keyRecoveryRequest because we could not get public identity data", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unint64_t v70 = v83;
    }
  }
  else
  {
    uint64_t v80 = a2;
    uint64_t v74 = v14;
    uint64_t v75 = v13;
    uint64_t v82 = v12;
    uint64_t v76 = v9;
    uint64_t v77 = v8;
    uint64_t v21 = (uint64_t)v17;
    unint64_t v22 = v18;
    uint64_t v23 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    uint64_t v24 = sub_1005350E0(*(unsigned char *)(a3 + *(int *)(v23 + 32)));
    sub_100431F80(&qword_100A45660);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007955D0;
    *(void *)(inited + 32) = sub_100726430();
    *(void *)(inited + 40) = v26;
    id v81 = v4;
    uint64_t v27 = *(void *)&v4[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_groupID];
    uint64_t v28 = *(void *)&v4[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_groupID + 8];
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = v27;
    *(void *)(inited + 56) = v28;
    *(void *)(inited + 80) = sub_100726430();
    *(void *)(inited + 88) = v29;
    uint64_t v30 = *a1;
    uint64_t v31 = a1[1];
    *(void *)(inited + 120) = &type metadata for String;
    *(void *)(inited + 96) = v30;
    *(void *)(inited + 104) = v31;
    *(void *)(inited + 128) = sub_100726430();
    *(void *)(inited + 136) = v32;
    *(void *)(inited + 168) = &type metadata for Data;
    *(void *)(inited + 144) = v21;
    *(void *)(inited + 152) = v22;
    *(void *)(inited + 176) = sub_100726430();
    *(void *)(inited + 184) = v33;
    *(void *)(inited + 216) = &type metadata for Int;
    *(void *)(inited + 192) = v24;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v78 = v22;
    uint64_t v79 = v21;
    sub_100482480(v21, v22);
    unint64_t v34 = sub_10046ECE8(inited);
    uint64_t v35 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
    if (*((unsigned char *)a1 + *(int *)(v35 + 28)) == 1)
    {
      uint64_t v36 = sub_100726430();
      uint64_t v38 = v37;
      uint64_t v88 = &type metadata for Bool;
      LOBYTE(v86) = 1;
      sub_100450794(&v86, v85);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v84 = v34;
      sub_10047D18C(v85, v36, v38, isUniquelyReferenced_nonNull_native);
      unint64_t v34 = v84;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    int v40 = *((unsigned __int8 *)a1 + *(int *)(v35 + 32));
    uint64_t v42 = v80;
    uint64_t v41 = v81;
    if (v40 == 1)
    {
      uint64_t v43 = sub_100726430();
      uint64_t v45 = v44;
      uint64_t v88 = &type metadata for Bool;
      LOBYTE(v86) = 1;
      sub_100450794(&v86, v85);
      char v46 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v84 = v34;
      sub_10047D18C(v85, v43, v45, v46);
      unint64_t v34 = v84;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    id v47 = v82;
    NSString v48 = sub_100726420();
    id v49 = sub_1003EA6DC(v48);

    id v50 = [*(id *)(v42 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken) rawToken];
    uint64_t v51 = sub_100725B50();
    unint64_t v53 = v52;

    Class isa = sub_100725B20().super.isa;
    sub_100442248(v51, v53);
    uint64_t v55 = (void *)_IDSCopyIDForTokenWithURI();

    if (v55)
    {
      uint64_t v56 = sub_100726430();
      uint64_t v58 = v57;

      sub_100431F80((uint64_t *)&unk_100A45170);
      uint64_t v59 = swift_initStackObject();
      *(_OWORD *)(v59 + 16) = xmmword_100794E30;
      *(void *)(v59 + 32) = v56;
      *(void *)(v59 + 40) = v58;
      sub_1004818F4(v59);
      swift_setDeallocating();
      swift_arrayDestroy();
      Class v60 = sub_100726630().super.isa;
      swift_bridgeObjectRelease();
      id v61 = [self destinationWithStrings:v60];

      id v62 = (id)im_primary_queue();
      if (v62)
      {
        unint64_t v63 = v62;
        uint64_t v64 = (void *)swift_allocObject();
        v64[2] = v41;
        v64[3] = v34;
        v64[4] = v61;
        uint64_t v89 = sub_100482538;
        char v90 = v64;
        *(void *)&long long v86 = _NSConcreteStackBlock;
        *((void *)&v86 + 1) = 1107296256;
        id v87 = sub_100435714;
        uint64_t v88 = &unk_10098E098;
        uint64_t v65 = _Block_copy(&v86);
        id v66 = v41;
        id v67 = v61;
        uint64_t v68 = v83;
        sub_100725F00();
        *(void *)&v85[0] = &_swiftEmptyArrayStorage;
        sub_10048156C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100431F80((uint64_t *)&unk_100A454C0);
        sub_100482494();
        uint64_t v69 = v77;
        sub_100726890();
        sub_100726750();
        _Block_release(v65);

        sub_10044CE88(v79, v78);
        (*(void (**)(char *, uint64_t))(v76 + 8))(v47, v69);
        (*(void (**)(NSObject *, uint64_t))(v74 + 8))(v68, v75);
        swift_release();
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v71 = sub_100725EB0();
      os_log_type_t v72 = sub_1007266C0();
      if (os_log_type_enabled(v71, v72))
      {
        uint64_t v73 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v86 = swift_slowAlloc();
        *(_DWORD *)uint64_t v73 = 136315138;
        *(void *)&v85[0] = sub_10043E578(0xD000000000000031, 0x80000001008C1A20, (uint64_t *)&v86);
        sub_100726830();
        _os_log_impl((void *)&_mh_execute_header, v71, v72, "%s: cannot send keyRecoveryRequest because we could not get destination ID", v73, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      sub_10044CE88(v79, v78);
    }
  }
}

uint64_t sub_100472D40(unsigned int *a1)
{
  return (*(uint64_t (**)(unint64_t))((swift_isaMask & *v1) + 0x168))(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32));
}

uint64_t sub_100472D88(uint64_t a1, uint64_t *a2)
{
  if (BYTE4(a1))
  {
    uint64_t v2 = sub_100725EB0();
    os_log_type_t v3 = sub_1007266C0();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = swift_slowAlloc();
      uint64_t v9 = swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 136315394;
      sub_10043E578(0xD00000000000001BLL, 0x80000001008C1A60, &v9);
      sub_100726830();
      *(_WORD *)(v4 + 12) = 2080;
      uint64_t v5 = sub_100726480();
      sub_10043E578(v5, v6, &v9);
      sub_100726830();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: unknown kind %s", (uint8_t *)v4, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 0;
  }
  else
  {
    uint64_t v8 = *a2;
    if (a1) {
      return (*(uint64_t (**)(void))(v8 + 144))();
    }
    else {
      return (*(uint64_t (**)(void))(v8 + 120))();
    }
  }
}

uint64_t sub_100472F84(uint64_t a1, uint64_t a2)
{
  os_log_type_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock;
  uint64_t v7 = *(os_unfair_lock_s **)((char *)v3
                            + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  swift_release();
  id v8 = objc_allocWithZone((Class)IDSURI);
  swift_bridgeObjectRetain();
  NSString v9 = sub_100726420();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithPrefixedURI:v9];

  if (v10)
  {
    uint64_t v11 = sub_1004776F0(*(void **)(a1 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken), v10, *(void *)(a1 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID));
    uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0x168))(a2 & 0xFFFFFFFFFFLL, v11);
    if (v12)
    {
      (*(void (**)(uint64_t))(*(void *)v12 + 232))(v12);

      swift_release();
    }
    else
    {
    }
    swift_release();
  }
  uint64_t v13 = *(os_unfair_lock_s **)((char *)v3 + v6);
  swift_retain();
  os_unfair_lock_unlock(v13 + 4);

  return swift_release();
}

void sub_100473148(void *a1)
{
  uint64_t v2 = sub_100725EF0();
  uint64_t v423 = *(void *)(v2 - 8);
  uint64_t v424 = v2;
  __chkstk_darwin(v2, v3);
  v421 = (char *)&v414 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v422 = sub_100725F20();
  uint64_t v420 = *(void *)(v422 - 8);
  __chkstk_darwin(v422, v5);
  v419 = (char *)&v414 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v463 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v460 = *(void *)(v463 - 8);
  uint64_t v8 = __chkstk_darwin(v463, v7);
  v459 = (char *)&v414 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  uint64_t v452 = (uint64_t)&v414 - v12;
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v456 = (uint64_t)&v414 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  uint64_t v455 = (uint64_t)&v414 - v18;
  uint64_t v20 = __chkstk_darwin(v17, v19);
  v449 = (uint64_t *)((char *)&v414 - v21);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  *(void *)&long long v448 = (char *)&v414 - v24;
  uint64_t v26 = __chkstk_darwin(v23, v25);
  v454 = (char *)&v414 - v27;
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v416 = (uint64_t)&v414 - v30;
  uint64_t v32 = __chkstk_darwin(v29, v31);
  uint64_t v418 = (uint64_t)&v414 - v33;
  uint64_t v35 = __chkstk_darwin(v32, v34);
  uint64_t v428 = (uint64_t)&v414 - v36;
  uint64_t v38 = __chkstk_darwin(v35, v37);
  uint64_t v415 = (uint64_t)&v414 - v39;
  uint64_t v41 = __chkstk_darwin(v38, v40);
  uint64_t v417 = (uint64_t)&v414 - v42;
  __chkstk_darwin(v41, v43);
  uint64_t v427 = (uint64_t)&v414 - v44;
  uint64_t v45 = sub_100431F80(&qword_100A44A50);
  uint64_t v47 = __chkstk_darwin(v45 - 8, v46);
  uint64_t v429 = (uint64_t)&v414 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __chkstk_darwin(v47, v49);
  uint64_t v426 = (uint64_t)&v414 - v51;
  uint64_t v53 = __chkstk_darwin(v50, v52);
  uint64_t v440 = (uint64_t)&v414 - v54;
  uint64_t v56 = __chkstk_darwin(v53, v55);
  uint64_t v450 = (uint64_t)&v414 - v57;
  uint64_t v59 = __chkstk_darwin(v56, v58);
  uint64_t v425 = (uint64_t)&v414 - v60;
  __chkstk_darwin(v59, v61);
  uint64_t v443 = (uint64_t)&v414 - v62;
  uint64_t v457 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v461 = *(void *)(v457 - 8);
  uint64_t v64 = __chkstk_darwin(v457, v63);
  uint64_t v447 = (uint64_t)&v414 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = __chkstk_darwin(v64, v66);
  unint64_t v464 = (unint64_t)&v414 - v68;
  uint64_t v70 = __chkstk_darwin(v67, v69);
  uint64_t v435 = (uint64_t)&v414 - v71;
  uint64_t v73 = __chkstk_darwin(v70, v72);
  uint64_t v434 = (uint64_t)&v414 - v74;
  uint64_t v76 = __chkstk_darwin(v73, v75);
  uint64_t v442 = (uint64_t)&v414 - v77;
  uint64_t v79 = __chkstk_darwin(v76, v78);
  uint64_t v438 = (uint64_t)&v414 - v80;
  __chkstk_darwin(v79, v81);
  *(void *)&long long v436 = (char *)&v414 - v82;
  uint64_t v83 = sub_100431F80(&qword_100A45628);
  uint64_t v85 = __chkstk_darwin(v83, v84);
  uint64_t v451 = (uint64_t)&v414 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __chkstk_darwin(v85, v87);
  v462 = (char *)&v414 - v89;
  uint64_t v91 = __chkstk_darwin(v88, v90);
  os_log_t v446 = (os_log_t)((char *)&v414 - v92);
  uint64_t v94 = __chkstk_darwin(v91, v93);
  uint64_t v445 = (uint64_t)&v414 - v95;
  uint64_t v97 = __chkstk_darwin(v94, v96);
  uint64_t v441 = (uint64_t)&v414 - v98;
  uint64_t v100 = __chkstk_darwin(v97, v99);
  v437 = (uint64_t *)((char *)&v414 - v101);
  uint64_t v103 = __chkstk_darwin(v100, v102);
  uint64_t v105 = (char *)&v414 - v104;
  uint64_t v107 = __chkstk_darwin(v103, v106);
  unint64_t v109 = (char *)&v414 - v108;
  uint64_t v110 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 120);
  uint64_t v430 = *(void *)a1 + 120;
  v431 = v110;
  uint64_t v111 = ((uint64_t (*)(uint64_t))v110)(v107);
  uint64_t v112 = *(uint64_t (**)(void))(*(void *)a1 + 144);
  id v468 = a1;
  uint64_t v113 = v112();
  uint64_t v433 = swift_allocBox();
  uint64_t v114 = *(void (**)(void))(*(void *)v111 + 160);
  uint64_t v465 = v115;
  v114();
  uint64_t v432 = swift_allocBox();
  uint64_t v116 = *(uint64_t (**)(void))(*(void *)v113 + 160);
  v453 = v117;
  uint64_t v444 = v113;
  uint64_t v118 = v116();
  uint64_t v439 = v111;
  ((void (*)(uint64_t))v114)(v118);
  v466 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v461 + 48);
  unint64_t v467 = v461 + 48;
  if (v466(v109, 1, v457))
  {
    uint64_t v119 = v436;
    uint64_t v120 = sub_10044C150((uint64_t)v109, &qword_100A45628);
    uint64_t v121 = &_swiftEmptySetSingleton;
  }
  else
  {
    uint64_t v122 = v436;
    sub_1004828A0((uint64_t)v109, v436, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    sub_10044C150((uint64_t)v109, &qword_100A45628);
    uint64_t v121 = *(void **)(v122 + 8);
    swift_bridgeObjectRetain();
    uint64_t v119 = v122;
    uint64_t v120 = sub_100482970(v122, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  }
  v480 = v121;
  ((void (*)(uint64_t))v116)(v120);
  uint64_t v123 = v457;
  unsigned int v124 = v466(v105, 1, v457);
  id v125 = v468;
  uint64_t v126 = v465;
  uint64_t v127 = (uint64_t)v454;
  if (v124)
  {
    sub_10044C150((uint64_t)v105, &qword_100A45628);
    Swift::Int v128 = &_swiftEmptySetSingleton;
  }
  else
  {
    sub_1004828A0((uint64_t)v105, v119, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    sub_10044C150((uint64_t)v105, &qword_100A45628);
    Swift::Int v128 = *(void **)(v119 + 8);
    swift_bridgeObjectRetain();
    sub_100482970(v119, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  }
  uint64_t v129 = v439;
  v479 = v128;
  uint64_t v130 = (uint64_t)v437;
  sub_1004546B8(v126, (uint64_t)v437, &qword_100A45628);
  unsigned int v131 = v466((char *)v130, 1, v123);
  uint64_t v132 = v438;
  if (v131 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10044C150(v130, &qword_100A45628);
    uint64_t v133 = v444;
LABEL_11:
    sub_10044C150(v126, &qword_100A45628);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v461 + 56))(v126, 1, 1, v123);
    v480 = &_swiftEmptySetSingleton;
    goto LABEL_13;
  }
  sub_100482908(v130, v438, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  char v134 = (*(uint64_t (**)(uint64_t))(*(void *)v129 + 208))(v132);
  uint64_t v133 = v444;
  if (v134)
  {
    sub_100482970(v132, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  (*(void (**)(uint64_t))(*(void *)v129 + 216))(v132);
  sub_100482970(v132, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
LABEL_13:
  uint64_t v135 = v441;
  sub_1004546B8((uint64_t)v453, v441, &qword_100A45628);
  unsigned int v136 = v466((char *)v135, 1, v123);
  os_log_t v137 = (os_log_t)v442;
  if (v136 == 1)
  {
    swift_bridgeObjectRelease();
    sub_10044C150(v135, &qword_100A45628);
LABEL_17:
    uint64_t v138 = v453;
    sub_10044C150((uint64_t)v453, &qword_100A45628);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v461 + 56))(v138, 1, 1, v123);
    v479 = &_swiftEmptySetSingleton;
    goto LABEL_19;
  }
  sub_100482908(v135, v442, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  if ((*(uint64_t (**)(os_log_t))(*(void *)v133 + 208))(v137))
  {
    sub_100482970((uint64_t)v137, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  (*(void (**)(os_log_t))(*(void *)v133 + 216))(v137);
  sub_100482970((uint64_t)v137, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
LABEL_19:
  uint64_t v139 = swift_allocObject();
  sub_100431F80(&qword_100A45660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007955E0;
  *(void *)(inited + 32) = sub_100726430();
  *(void *)(inited + 40) = v141;
  v142 = v458;
  uint64_t v143 = *(void *)((char *)v458 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_groupID);
  uint64_t v144 = *(void *)((char *)v458
                   + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_groupID
                   + 8);
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v143;
  *(void *)(inited + 56) = v144;
  *(void *)(inited + 80) = sub_100726430();
  *(void *)(inited + 88) = v145;
  uint64_t v146 = *(void *)((char *)v142 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_sessionID);
  uint64_t v147 = *(void *)((char *)v142
                   + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_sessionID
                   + 8);
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v146;
  *(void *)(inited + 104) = v147;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v148 = sub_10046ECE8(inited);
  uint64_t v441 = v139;
  *(void *)(v139 + 16) = v148;
  uint64_t v149 = v443;
  sub_100476798((uint64_t)v480, v443);
  uint64_t v150 = v445;
  sub_1004546B8(v465, v445, &qword_100A45628);
  unsigned int v151 = v466((char *)v150, 1, v123);
  uint64_t v461 = v139 + 16;
  if (v151 != 1)
  {
    uint64_t v152 = v434;
    sub_100482908(v150, v434, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    uint64_t v153 = v149;
    uint64_t v154 = v425;
    sub_1004546B8(v153, v425, &qword_100A44A50);
    int v155 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v460 + 48))(v154, 1, v463);
    uint64_t v156 = v456;
    if (v155 == 1)
    {
      sub_100482970(v152, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      sub_10044C150(v154, &qword_100A44A50);
    }
    else
    {
      uint64_t v157 = v427;
      sub_100482908(v154, v427, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v158 = (uint64_t)v458 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_l;
      uint64_t v159 = v157;
      uint64_t v160 = v417;
      sub_1004828A0(v159, v417, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      swift_retain_n();
      uint64_t v445 = v158;
      uint64_t v161 = sub_100725EB0();
      os_log_type_t v162 = sub_1007266E0();
      if (os_log_type_enabled(v161, v162))
      {
        uint64_t v163 = swift_slowAlloc();
        uint64_t v442 = swift_slowAlloc();
        v472[0] = v442;
        *(_DWORD *)uint64_t v163 = 136315650;
        uint64_t v477 = sub_10043E578(0xD00000000000002ELL, 0x80000001008C1A80, v472);
        sub_100726830();
        *(_WORD *)(v163 + 12) = 2080;
        unint64_t v164 = *(uint64_t (**)(uint64_t))(*(void *)v468 + 176);
        uint64_t v165 = swift_retain();
        uint64_t v166 = v164(v165);
        unint64_t v168 = v167;
        swift_release();
        uint64_t v477 = sub_10043E578(v166, v168, v472);
        sub_100726830();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v163 + 22) = 2080;
        sub_100725D30();
        sub_10048156C(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v123 = v457;
        uint64_t v169 = sub_100726D00();
        uint64_t v477 = sub_10043E578(v169, v170, v472);
        uint64_t v156 = v456;
        uint64_t v127 = (uint64_t)v454;
        sub_100726830();
        swift_bridgeObjectRelease();
        sub_100482970(v160, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        _os_log_impl((void *)&_mh_execute_header, v161, v162, "%s: participant: %s should include MKI %s", (uint8_t *)v163, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        id v125 = v468;
        swift_slowDealloc();
      }
      else
      {
        swift_release_n();

        sub_100482970(v160, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      }
      uint64_t v171 = v450;
      uint64_t v172 = v427;
      sub_10047DA64(v450);
      sub_10044C150(v171, &qword_100A44A50);
      uint64_t v173 = v434;
      unint64_t v174 = sub_100476FBC(v172, v434 + *(int *)(v123 + 24));
      if (v174)
      {
        uint64_t v175 = v174;
        uint64_t v176 = v415;
        sub_1004828A0(v172, v415, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        v177 = sub_100725EB0();
        os_log_type_t v178 = sub_1007266E0();
        int v179 = v178;
        if (os_log_type_enabled(v177, v178))
        {
          uint64_t v180 = swift_slowAlloc();
          uint64_t v445 = swift_slowAlloc();
          v472[0] = v445;
          *(_DWORD *)uint64_t v180 = 136315906;
          uint64_t v442 = (uint64_t)v177;
          uint64_t v477 = sub_10043E578(0xD00000000000002ELL, 0x80000001008C1A80, v472);
          sub_100726830();
          LODWORD(v438) = v179;
          *(_WORD *)(v180 + 12) = 2080;
          uint64_t v181 = *(uint64_t (**)(uint64_t))(*(void *)v468 + 176);
          uint64_t v182 = swift_retain();
          uint64_t v183 = v181(v182);
          unint64_t v185 = v184;
          swift_release();
          uint64_t v477 = sub_10043E578(v183, v185, v472);
          sub_100726830();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v180 + 22) = 2080;
          sub_100725D30();
          sub_10048156C(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v186 = sub_100726D00();
          uint64_t v477 = sub_10043E578(v186, v187, v472);
          sub_100726830();
          swift_bridgeObjectRelease();
          sub_100482970(v176, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          *(_WORD *)(v180 + 32) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v188 = sub_1007263A0();
          unint64_t v190 = v189;
          swift_bridgeObjectRelease();
          uint64_t v191 = v188;
          uint64_t v123 = v457;
          uint64_t v477 = sub_10043E578(v191, v190, v472);
          id v125 = v468;
          sub_100726830();
          swift_bridgeObjectRelease_n();
          uint64_t v127 = (uint64_t)v454;
          swift_bridgeObjectRelease();
          os_log_t v192 = (os_log_t)v442;
          _os_log_impl((void *)&_mh_execute_header, (os_log_t)v442, (os_log_type_t)v438, "%s: participant: %s, MKI: %s dict: %s", (uint8_t *)v180, 0x2Au);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();

          sub_100482970(v176, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          swift_bridgeObjectRelease_n();
        }
        uint64_t v194 = sub_100726430();
        uint64_t v196 = v195;
        v473 = (void *)sub_100431F80(&qword_100A45678);
        v472[0] = v175;
        sub_100470208((uint64_t)v472, v194, v196);
        sub_100482970(v427, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        sub_100482970(v434, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        LODWORD(v438) = 1;
        goto LABEL_33;
      }
      sub_100482970(v172, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_100482970(v173, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    }
    LODWORD(v438) = 0;
    uint64_t v193 = v440;
    goto LABEL_34;
  }
  sub_10044C150(v150, &qword_100A45628);
  LODWORD(v438) = 0;
LABEL_33:
  uint64_t v193 = v440;
  uint64_t v156 = v456;
LABEL_34:
  sub_100476798((uint64_t)v479, v193);
  os_log_t v197 = v446;
  sub_1004546B8((uint64_t)v453, (uint64_t)v446, &qword_100A45628);
  if (v466((char *)v197, 1, v123) == 1)
  {
    uint64_t v198 = &qword_100A45628;
    uint64_t v199 = (uint64_t)v197;
LABEL_38:
    uint64_t v203 = sub_10044C150(v199, v198);
    uint64_t v206 = (uint64_t)v459;
    goto LABEL_39;
  }
  uint64_t v200 = v435;
  sub_100482908((uint64_t)v197, v435, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  uint64_t v201 = v193;
  uint64_t v202 = v426;
  sub_1004546B8(v201, v426, &qword_100A44A50);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v460 + 48))(v202, 1, v463) == 1)
  {
    sub_100482970(v200, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    uint64_t v198 = &qword_100A44A50;
    uint64_t v199 = v202;
    goto LABEL_38;
  }
  uint64_t v254 = v428;
  sub_100482908(v202, v428, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  v255 = (void *)((char *)v458 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_l);
  uint64_t v256 = v254;
  uint64_t v257 = v418;
  sub_1004828A0(v256, v418, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  swift_retain_n();
  v453 = v255;
  v258 = sub_100725EB0();
  os_log_type_t v259 = sub_1007266E0();
  BOOL v260 = os_log_type_enabled(v258, v259);
  uint64_t v206 = (uint64_t)v459;
  if (v260)
  {
    uint64_t v261 = swift_slowAlloc();
    os_log_t v446 = (os_log_t)swift_slowAlloc();
    v472[0] = (uint64_t)v446;
    *(_DWORD *)uint64_t v261 = 136315650;
    uint64_t v477 = sub_10043E578(0xD00000000000002ELL, 0x80000001008C1A80, v472);
    sub_100726830();
    *(_WORD *)(v261 + 12) = 2080;
    v262 = *(uint64_t (**)(uint64_t))(*(void *)v468 + 176);
    uint64_t v263 = swift_retain();
    uint64_t v264 = v262(v263);
    uint64_t v206 = (uint64_t)v459;
    uint64_t v265 = v264;
    unint64_t v267 = v266;
    swift_release();
    uint64_t v477 = sub_10043E578(v265, v267, v472);
    sub_100726830();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v261 + 22) = 2080;
    sub_100725D30();
    sub_10048156C(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v123 = v457;
    uint64_t v268 = sub_100726D00();
    uint64_t v477 = sub_10043E578(v268, v269, v472);
    uint64_t v156 = v456;
    uint64_t v127 = (uint64_t)v454;
    sub_100726830();
    swift_bridgeObjectRelease();
    sub_100482970(v257, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    _os_log_impl((void *)&_mh_execute_header, v258, v259, "%s: participant: %s should include SKI %s", (uint8_t *)v261, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    id v125 = v468;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();

    sub_100482970(v257, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  }
  uint64_t v270 = v450;
  uint64_t v271 = v428;
  sub_10047DA64(v450);
  sub_10044C150(v270, &qword_100A44A50);
  uint64_t v272 = v435;
  unint64_t v273 = sub_10047731C(v271, v435 + *(int *)(v123 + 24));
  if (v273)
  {
    unint64_t v274 = v273;
    uint64_t v275 = v416;
    sub_1004828A0(v271, v416, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    swift_retain_n();
    uint64_t v276 = v274;
    swift_bridgeObjectRetain_n();
    v277 = sub_100725EB0();
    os_log_type_t v278 = sub_1007266E0();
    int v279 = v278;
    if (os_log_type_enabled(v277, v278))
    {
      uint64_t v280 = swift_slowAlloc();
      v453 = (void *)swift_slowAlloc();
      v472[0] = (uint64_t)v453;
      *(_DWORD *)uint64_t v280 = 136315906;
      os_log_t v446 = v277;
      uint64_t v477 = sub_10043E578(0xD00000000000002ELL, 0x80000001008C1A80, v472);
      sub_100726830();
      *(_WORD *)(v280 + 12) = 2080;
      LODWORD(v445) = v279;
      v281 = *(uint64_t (**)(uint64_t))(*(void *)v468 + 176);
      uint64_t v282 = swift_retain();
      uint64_t v283 = v281(v282);
      unint64_t v285 = v284;
      swift_release();
      uint64_t v477 = sub_10043E578(v283, v285, v472);
      sub_100726830();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v280 + 22) = 2080;
      sub_100725D30();
      sub_10048156C(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v286 = sub_100726D00();
      uint64_t v477 = sub_10043E578(v286, v287, v472);
      sub_100726830();
      swift_bridgeObjectRelease();
      sub_100482970(v275, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      *(_WORD *)(v280 + 32) = 2080;
      uint64_t v206 = (uint64_t)v459;
      swift_bridgeObjectRetain();
      uint64_t v288 = sub_1007263A0();
      unint64_t v290 = v289;
      swift_bridgeObjectRelease();
      uint64_t v291 = v288;
      uint64_t v123 = v457;
      uint64_t v477 = sub_10043E578(v291, v290, v472);
      id v125 = v468;
      sub_100726830();
      swift_bridgeObjectRelease_n();
      uint64_t v127 = (uint64_t)v454;
      swift_bridgeObjectRelease();
      os_log_t v292 = v446;
      _os_log_impl((void *)&_mh_execute_header, v446, (os_log_type_t)v445, "%s: participant: %s, SKI: %s dict: %s", (uint8_t *)v280, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();

      sub_100482970(v275, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      swift_bridgeObjectRelease_n();
    }
    uint64_t v411 = sub_100726430();
    uint64_t v413 = v412;
    v473 = (void *)sub_100431F80(&qword_100A45678);
    v472[0] = v276;
    sub_100470208((uint64_t)v472, v411, v413);
    sub_100482970(v428, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v203 = sub_100482970(v435, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    LODWORD(v438) = 1;
    uint64_t v156 = v456;
  }
  else
  {
    sub_100482970(v271, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v203 = sub_100482970(v272, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  }
LABEL_39:
  unint64_t v207 = v480;
  if (v480[2])
  {
    os_log_t v446 = (os_log_t)((char *)v458 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_l);
    v437 = &v478;
    v453 = &_swiftEmptyArrayStorage;
    v208 = &qword_100A45628;
    *(void *)&long long v205 = 136315650;
    long long v436 = v205;
    uint64_t v435 = 0x80000001008C1A80;
    uint64_t v434 = (uint64_t)&type metadata for Any + 8;
    uint64_t v204 = (uint64_t)v462;
    while (1)
    {
      uint64_t v209 = v208;
      v210 = v208;
      uint64_t v211 = v204;
      sub_1004546B8(v465, v204, v209);
      if (v466((char *)v211, 1, v123) != 1) {
        break;
      }
      uint64_t v203 = sub_10044C150(v211, v210);
      v208 = v210;
LABEL_42:
      unint64_t v207 = v480;
      uint64_t v204 = (uint64_t)v462;
      if (!v480[2]) {
        goto LABEL_77;
      }
    }
    sub_100482908(v211, v464, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    unint64_t v212 = v207[7];
    char v213 = *((unsigned char *)v207 + 32);
    uint64_t v214 = 1 << v213;
    if (v212)
    {
      uint64_t v215 = 0;
      v208 = v210;
      goto LABEL_46;
    }
    unsigned int v232 = v213 & 0x3F;
    v208 = v210;
    if (v232 >= 7)
    {
      unint64_t v212 = v207[8];
      if (v212)
      {
        uint64_t v215 = 1;
        goto LABEL_46;
      }
      if (v232 >= 8)
      {
        unint64_t v212 = v207[9];
        if (v212)
        {
          uint64_t v215 = 2;
        }
        else
        {
          unint64_t v212 = v207[10];
          if (v212)
          {
            uint64_t v215 = 3;
          }
          else
          {
            uint64_t v239 = 0;
            unint64_t v240 = (unint64_t)(v214 + 63) >> 6;
            if (v240 <= 4) {
              unint64_t v240 = 4;
            }
            unint64_t v241 = v240 - 4;
            do
            {
              if (v241 == v239) {
                goto LABEL_63;
              }
              unint64_t v212 = v207[v239++ + 11];
            }
            while (!v212);
            uint64_t v215 = v239 + 3;
          }
        }
LABEL_46:
        unint64_t v216 = __clz(__rbit64(v212));
        uint64_t v217 = v216 + (v215 << 6);
        if (v217 != v214)
        {
          if (v217 < 0 || v217 >= v214)
          {
LABEL_171:
            __break(1u);
LABEL_172:
            __break(1u);
            goto LABEL_173;
          }
          if (((*(void *)((char *)v207 + (((unint64_t)v217 >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) >> v216) & 1) == 0) {
            goto LABEL_172;
          }
          uint64_t v218 = v448;
          sub_1004828A0(v207[6] + *(void *)(v460 + 72) * v217, v448, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          sub_100482908(v218, v127, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v219 = v127;
          uint64_t v220 = (uint64_t)v449;
          sub_1004828A0(v219, (uint64_t)v449, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          swift_retain_n();
          uint64_t v221 = sub_100725EB0();
          os_log_type_t v222 = sub_1007266E0();
          int v223 = v222;
          if (os_log_type_enabled(v221, v222))
          {
            uint64_t v224 = swift_slowAlloc();
            uint64_t v445 = swift_slowAlloc();
            v472[0] = v445;
            *(_DWORD *)uint64_t v224 = v436;
            LODWORD(v442) = v223;
            uint64_t v477 = sub_10043E578(0xD00000000000002ELL, v435, v472);
            sub_100726830();
            *(_WORD *)(v224 + 12) = 2080;
            uint64_t v225 = *(uint64_t (**)(uint64_t))(*(void *)v468 + 176);
            uint64_t v226 = swift_retain();
            v208 = v210;
            uint64_t v227 = v225(v226);
            unint64_t v229 = v228;
            swift_release();
            uint64_t v477 = sub_10043E578(v227, v229, v472);
            sub_100726830();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v224 + 22) = 2080;
            sub_100725D30();
            sub_10048156C(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v123 = v457;
            uint64_t v230 = sub_100726D00();
            uint64_t v477 = sub_10043E578(v230, v231, v472);
            uint64_t v206 = (uint64_t)v459;
            sub_100726830();
            swift_bridgeObjectRelease();
            sub_100482970(v220, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            _os_log_impl((void *)&_mh_execute_header, v221, (os_log_type_t)v442, "%s: participant: %s should include local additional MKI %s", (uint8_t *)v224, 0x20u);
            swift_arrayDestroy();
            uint64_t v156 = v456;
            swift_slowDealloc();
            id v125 = v468;
            swift_slowDealloc();
          }
          else
          {
            swift_release_n();

            sub_100482970(v220, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          }
          uint64_t v233 = v450;
          uint64_t v127 = (uint64_t)v454;
          sub_10047DA64(v450);
          sub_10044C150(v233, &qword_100A44A50);
          unint64_t v234 = sub_100476FBC(v127, v464 + *(int *)(v123 + 24));
          if (v234)
          {
            unint64_t v235 = v234;
            if (swift_isUniquelyReferenced_nonNull_native()) {
              uint64_t v236 = v453;
            }
            else {
              uint64_t v236 = sub_10047AFB4(0, v453[2] + 1, 1, v453);
            }
            unint64_t v238 = v236[2];
            unint64_t v237 = v236[3];
            if (v238 >= v237 >> 1) {
              uint64_t v236 = sub_10047AFB4((void *)(v237 > 1), v238 + 1, 1, v236);
            }
            v236[2] = v238 + 1;
            v453 = v236;
            v236[v238 + 4] = v235;
            uint64_t v206 = (uint64_t)v459;
            uint64_t v156 = v456;
          }
          sub_100482970(v127, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        }
      }
    }
LABEL_63:
    uint64_t v203 = sub_100482970(v464, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    goto LABEL_42;
  }
  v453 = &_swiftEmptyArrayStorage;
LABEL_77:
  uint64_t v242 = v431(v203, v204);
  char v243 = (*(uint64_t (**)(uint64_t))(*(void *)v242 + 184))(v242);
  swift_release();
  uint64_t v244 = v429;
  sub_1004546B8(v443, v429, &qword_100A44A50);
  if (v243)
  {
    int v245 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v460 + 48))(v244, 1, v463);
    uint64_t v246 = sub_10044C150(v244, &qword_100A44A50);
    if (v245 != 1)
    {
      uint64_t v247 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v458) + 0x120))(v246);
      uint64_t v250 = v452;
      if (v247)
      {
        uint64_t v251 = v248;
        uint64_t ObjectType = swift_getObjectType();
        v253 = (void *)(*(uint64_t (**)(void, uint64_t, uint64_t))(v251 + 8))(*((void *)v125 + 2), ObjectType, v251);
        swift_unknownObjectRelease();
      }
      else
      {
        v253 = &_swiftEmptySetSingleton;
      }
      uint64_t v293 = 0;
      uint64_t v294 = v253[7];
      v449 = v253 + 7;
      uint64_t v295 = 1 << *((unsigned char *)v253 + 32);
      uint64_t v296 = -1;
      if (v295 < 64) {
        uint64_t v296 = ~(-1 << v295);
      }
      unint64_t v297 = v296 & v294;
      v454 = (char *)v458 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_l;
      uint64_t v450 = (unint64_t)(v295 + 63) >> 6;
      *(void *)&long long v249 = 136315650;
      long long v448 = v249;
      uint64_t v442 = (uint64_t)"state(forKind:participant:)";
      os_log_t v446 = (os_log_t)0x80000001008C1A80;
      uint64_t v445 = (uint64_t)&type metadata for Any + 8;
      v462 = (char *)v253;
      while (1)
      {
        while (1)
        {
          if (v297)
          {
            unint64_t v464 = (v297 - 1) & v297;
            unint64_t v298 = __clz(__rbit64(v297)) | (v293 << 6);
          }
          else
          {
            uint64_t v299 = v293 + 1;
            if (__OFADD__(v293, 1))
            {
              __break(1u);
              goto LABEL_171;
            }
            if (v299 >= v450) {
              goto LABEL_129;
            }
            unint64_t v300 = v449[v299];
            ++v293;
            if (!v300)
            {
              uint64_t v293 = v299 + 1;
              if (v299 + 1 >= v450) {
                goto LABEL_129;
              }
              unint64_t v300 = v449[v293];
              if (!v300)
              {
                uint64_t v293 = v299 + 2;
                if (v299 + 2 >= v450) {
                  goto LABEL_129;
                }
                unint64_t v300 = v449[v293];
                if (!v300)
                {
                  uint64_t v301 = v299 + 3;
                  if (v301 >= v450)
                  {
LABEL_129:
                    uint64_t v337 = swift_release();
                    uint64_t v338 = ((uint64_t (*)(uint64_t))v431)(v337);
                    (*(void (**)(void))(*(void *)v338 + 192))(0);
                    swift_release();
                    goto LABEL_130;
                  }
                  unint64_t v300 = v449[v301];
                  if (!v300)
                  {
                    while (1)
                    {
                      uint64_t v293 = v301 + 1;
                      if (__OFADD__(v301, 1)) {
                        break;
                      }
                      if (v293 >= v450) {
                        goto LABEL_129;
                      }
                      unint64_t v300 = v449[v293];
                      ++v301;
                      if (v300) {
                        goto LABEL_110;
                      }
                    }
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
                    goto LABEL_177;
                  }
                  uint64_t v293 = v301;
                }
              }
            }
LABEL_110:
            unint64_t v464 = (v300 - 1) & v300;
            unint64_t v298 = __clz(__rbit64(v300)) + (v293 << 6);
          }
          uint64_t v302 = v455;
          sub_1004828A0(v253[6] + *(void *)(v460 + 72) * v298, v455, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          sub_100482908(v302, v156, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v303 = v156 + *(int *)(v463 + 52);
          if ((*(unsigned char *)(v303 + 8) & 1) != 0 || *(void *)v303 != *((void *)v125 + 4)) {
            break;
          }
          sub_1004828A0(v156, v250, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          swift_retain_n();
          v304 = sub_100725EB0();
          os_log_type_t v305 = sub_1007266E0();
          if (os_log_type_enabled(v304, v305))
          {
            uint64_t v306 = swift_slowAlloc();
            v472[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v306 = v448;
            *(void *)(v306 + 4) = sub_10043E578(0xD00000000000002ELL, v442 | 0x8000000000000000, v472);
            *(_WORD *)(v306 + 12) = 2080;
            v307 = *(uint64_t (**)(uint64_t))(*(void *)v125 + 176);
            uint64_t v308 = swift_retain();
            uint64_t v309 = v307(v308);
            id v125 = v468;
            uint64_t v310 = v309;
            unint64_t v312 = v311;
            swift_release();
            *(void *)(v306 + 14) = sub_10043E578(v310, v312, v472);
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v306 + 22) = 2080;
            sub_100725D30();
            sub_10048156C(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v206 = (uint64_t)v459;
            uint64_t v313 = sub_100726D00();
            *(void *)(v306 + 24) = sub_10043E578(v313, v314, v472);
            swift_bridgeObjectRelease();
            sub_100482970(v452, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            _os_log_impl((void *)&_mh_execute_header, v304, v305, "%s: participant: %s should not include its own MKI %s", (uint8_t *)v306, 0x20u);
            swift_arrayDestroy();
            uint64_t v250 = v452;
            swift_slowDealloc();
            uint64_t v156 = v456;
            swift_slowDealloc();
          }
          else
          {
            swift_release_n();
            sub_100482970(v250, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          }

          sub_100482970(v156, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          v253 = v462;
          unint64_t v297 = v464;
        }
        sub_1004828A0(v156, v206, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        swift_retain_n();
        v315 = sub_100725EB0();
        os_log_type_t v316 = sub_1007266E0();
        if (os_log_type_enabled(v315, v316))
        {
          uint64_t v317 = swift_slowAlloc();
          v472[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v317 = v448;
          *(void *)(v317 + 4) = sub_10043E578(0xD00000000000002ELL, (unint64_t)v446, v472);
          *(_WORD *)(v317 + 12) = 2080;
          v318 = *(uint64_t (**)(uint64_t))(*(void *)v125 + 176);
          uint64_t v319 = swift_retain();
          uint64_t v320 = v318(v319);
          id v125 = v468;
          uint64_t v321 = v320;
          unint64_t v323 = v322;
          swift_release();
          *(void *)(v317 + 14) = sub_10043E578(v321, v323, v472);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v317 + 22) = 2080;
          sub_100725D30();
          sub_10048156C(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v206 = (uint64_t)v459;
          uint64_t v324 = sub_100726D00();
          *(void *)(v317 + 24) = sub_10043E578(v324, v325, v472);
          swift_bridgeObjectRelease();
          sub_100482970(v206, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          _os_log_impl((void *)&_mh_execute_header, v315, v316, "%s: participant: %s should include cached MKI %s", (uint8_t *)v317, 0x20u);
          swift_arrayDestroy();
          uint64_t v250 = v452;
          swift_slowDealloc();
          uint64_t v156 = v456;
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();

          sub_100482970(v206, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        }
        uint64_t v326 = v451;
        sub_1004546B8(v465, v451, &qword_100A45628);
        uint64_t v327 = v457;
        unsigned int v328 = v466((char *)v326, 1, v457);
        v253 = v462;
        if (v328 == 1) {
          break;
        }
        uint64_t v329 = v326;
        uint64_t v330 = v447;
        sub_100482908(v329, v447, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        unint64_t v331 = sub_100476FBC(v156, v330 + *(int *)(v327 + 24));
        if (v331)
        {
          unint64_t v332 = v331;
          if (swift_isUniquelyReferenced_nonNull_native()) {
            v333 = v453;
          }
          else {
            v333 = sub_10047AFB4(0, v453[2] + 1, 1, v453);
          }
          unint64_t v335 = v333[2];
          unint64_t v334 = v333[3];
          uint64_t v336 = v447;
          if (v335 >= v334 >> 1)
          {
            v333 = sub_10047AFB4((void *)(v334 > 1), v335 + 1, 1, v333);
            uint64_t v336 = v447;
          }
          v333[2] = v335 + 1;
          v453 = v333;
          v333[v335 + 4] = v332;
          sub_100482970(v336, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
          uint64_t v156 = v456;
          sub_100482970(v456, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v206 = (uint64_t)v459;
          unint64_t v297 = v464;
        }
        else
        {
          sub_100482970(v330, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
          sub_100482970(v156, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
LABEL_94:
          unint64_t v297 = v464;
        }
      }
      sub_100482970(v156, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10044C150(v326, &qword_100A45628);
      goto LABEL_94;
    }
  }
  else
  {
    sub_10044C150(v244, &qword_100A44A50);
  }
LABEL_130:
  v339 = v453;
  if (v453[2])
  {
    uint64_t v340 = sub_100726430();
    uint64_t v342 = v341;
    v473 = (void *)sub_100431F80(&qword_100A45670);
    v472[0] = (uint64_t)v339;
    swift_bridgeObjectRetain();
    sub_100470208((uint64_t)v472, v340, v342);
    LODWORD(v438) = 1;
  }
  uint64_t v343 = sub_100726430();
  uint64_t v463 = v344;
  unint64_t v464 = v343;
  v345 = (void *)((char *)v458
                  + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_membersByURI);
  swift_beginAccess();
  uint64_t v346 = *v345;
  unint64_t v467 = *v345 & 0xC000000000000001;
  if (v467)
  {
    swift_bridgeObjectRetain();
    uint64_t v347 = sub_100726B10();
  }
  else
  {
    uint64_t v347 = *(void *)(v346 + 16);
    swift_bridgeObjectRetain();
  }
  if (v347)
  {
    v476 = &_swiftEmptyArrayStorage;
    sub_100455590(0, v347 & ~(v347 >> 63), 0);
    if (v467)
    {
      uint64_t v348 = sub_100726AA0();
      char v350 = 1;
    }
    else
    {
      uint64_t v348 = sub_100480080(v346);
      char v350 = v352 & 1;
    }
    uint64_t v469 = v348;
    uint64_t v470 = v349;
    char v471 = v350;
    if (v347 < 0) {
      goto LABEL_174;
    }
    uint64_t v353 = v346 & 0xFFFFFFFFFFFFFF8;
    if (v346 < 0) {
      uint64_t v353 = v346;
    }
    uint64_t v465 = v353;
    v466 = (unsigned int (*)(char *, uint64_t, uint64_t))v346;
    do
    {
      while (1)
      {
        uint64_t v360 = v469;
        uint64_t v361 = v470;
        char v362 = v471;
        sub_10047FEB4(v469, v470, v471, v346);
        v364 = v363;
        id v365 = [v363 prefixedURI];
        uint64_t v366 = sub_100726430();
        uint64_t v368 = v367;

        v369 = v476;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100455590(0, v369[2] + 1, 1);
          v369 = v476;
        }
        unint64_t v371 = v369[2];
        unint64_t v370 = v369[3];
        if (v371 >= v370 >> 1)
        {
          sub_100455590((char *)(v370 > 1), v371 + 1, 1);
          v369 = v476;
        }
        v369[2] = v371 + 1;
        v372 = &v369[2 * v371];
        v372[4] = v366;
        v372[5] = v368;
        if (v467) {
          break;
        }
        uint64_t v346 = (uint64_t)v466;
        sub_10047FD14(v360, v361, v362, (uint64_t)v466);
        uint64_t v355 = v354;
        uint64_t v357 = v356;
        char v359 = v358;
        sub_100482640(v360, v361, v362);
        uint64_t v469 = v355;
        uint64_t v470 = v357;
        char v471 = v359 & 1;
        id v125 = v468;
        if (!--v347) {
          goto LABEL_154;
        }
      }
      uint64_t v346 = (uint64_t)v466;
      if ((v362 & 1) == 0) {
        goto LABEL_175;
      }
      uint64_t v373 = sub_100726AE0();
      id v125 = v468;
      if (v373) {
        swift_isUniquelyReferenced_nonNull_native();
      }
      sub_100431F80(&qword_100A45668);
      v374 = (void (*)(uint64_t *, void))sub_1007263B0();
      sub_100726B70();
      v374(v472, 0);
      --v347;
    }
    while (v347);
LABEL_154:
    sub_100482640(v469, v470, v471);
    swift_bridgeObjectRelease();
    v351 = v476;
  }
  else
  {
    swift_bridgeObjectRelease();
    v351 = &_swiftEmptyArrayStorage;
  }
  v473 = (void *)sub_100431F80(&qword_100A468E0);
  v472[0] = (uint64_t)v351;
  sub_100470208((uint64_t)v472, v464, v463);
  v375 = (char *)v458 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_l;
  swift_retain_n();
  unint64_t v467 = (unint64_t)v375;
  v376 = sub_100725EB0();
  os_log_type_t v377 = sub_1007266E0();
  if (os_log_type_enabled(v376, v377))
  {
    uint64_t v378 = swift_slowAlloc();
    v472[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v378 = 136315394;
    uint64_t v469 = sub_10043E578(0xD00000000000002ELL, 0x80000001008C1A80, v472);
    sub_100726830();
    *(_WORD *)(v378 + 12) = 2080;
    v466 = (unsigned int (*)(char *, uint64_t, uint64_t))(v378 + 14);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v379 = sub_1007263A0();
    unint64_t v381 = v380;
    swift_bridgeObjectRelease();
    v476 = (void *)sub_10043E578(v379, v381, v472);
    sub_100726830();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v376, v377, "%s: message: %s", (uint8_t *)v378, 0x16u);
    id v125 = v468;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  if (!v438)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v408 = sub_100725EB0();
    os_log_type_t v409 = sub_1007266E0();
    if (os_log_type_enabled(v408, v409))
    {
      v410 = (uint8_t *)swift_slowAlloc();
      v472[0] = swift_slowAlloc();
      *(_DWORD *)v410 = 136315138;
      v476 = (void *)sub_10043E578(0xD00000000000002ELL, 0x80000001008C1A80, v472);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v408, v409, "%s: do not need to send as there is no data to send", v410, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    swift_release();
    swift_release();

    sub_10044C150(v440, &qword_100A44A50);
    sub_10044C150(v443, &qword_100A44A50);
    swift_release();
    swift_release();
    goto LABEL_167;
  }
  sub_100431F80((uint64_t *)&unk_100A45170);
  uint64_t v382 = swift_initStackObject();
  *(_OWORD *)(v382 + 16) = xmmword_100794E30;
  id v383 = [*((id *)v125 + 2) rawToken];
  uint64_t v384 = sub_100725B50();
  unint64_t v386 = v385;

  v387.super.Class isa = sub_100725B20().super.isa;
  sub_100442248(v384, v386);
  NSString v388 = [*((id *)v125 + 3) prefixedURI];
  if (!v388)
  {
    sub_100726430();
    NSString v388 = sub_100726420();
    swift_bridgeObjectRelease();
  }
  v389 = (void *)_IDSCopyIDForTokenWithURI();

  if (!v389) {
    goto LABEL_176;
  }
  uint64_t v390 = sub_100726430();
  uint64_t v392 = v391;

  *(void *)(v382 + 32) = v390;
  *(void *)(v382 + 40) = v392;
  sub_1004818F4(v382);
  swift_setDeallocating();
  swift_arrayDestroy();
  Class isa = sub_100726630().super.isa;
  swift_bridgeObjectRelease();
  id v394 = [self destinationWithStrings:isa];

  id v468 = (id)im_primary_queue();
  if (v468)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v395 = (void *)swift_allocObject();
    v396 = v458;
    uint64_t v397 = v441;
    v395[2] = v458;
    v395[3] = v397;
    uint64_t v398 = v432;
    uint64_t v399 = v433;
    v395[4] = v394;
    v395[5] = v399;
    v395[6] = v439;
    v395[7] = v125;
    uint64_t v400 = v444;
    v395[8] = v398;
    v395[9] = v400;
    v474 = sub_1004826BC;
    v475 = v395;
    v472[0] = (uint64_t)_NSConcreteStackBlock;
    v472[1] = 1107296256;
    v472[2] = (uint64_t)sub_100435714;
    v473 = &unk_10098E110;
    v401 = _Block_copy(v472);
    swift_retain();
    swift_retain();
    id v402 = v396;
    id v403 = v394;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    v404 = v419;
    sub_100725F00();
    v476 = &_swiftEmptyArrayStorage;
    sub_10048156C((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_100482494();
    v405 = v421;
    uint64_t v406 = v424;
    sub_100726890();
    v407 = v468;
    sub_100726750();
    _Block_release(v401);

    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v423 + 8))(v405, v406);
    (*(void (**)(char *, uint64_t))(v420 + 8))(v404, v422);
    sub_10044C150(v440, &qword_100A44A50);
    sub_10044C150(v443, &qword_100A44A50);
    swift_release();
    swift_release();
    swift_release();
LABEL_167:
    swift_release();
    return;
  }
LABEL_177:
  __break(1u);
}

uint64_t sub_100476798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100480130(a1);
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_10048050C(result, v5, a1, a2);
    uint64_t v12 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }

  return v8(v10, v11, 1, v9);
}

void sub_10047687C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v65 = a7;
  uint64_t v60 = a3;
  uint64_t v61 = a6;
  uint64_t v63 = a4;
  uint64_t v8 = sub_100431F80(&qword_100A45628);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v12 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  uint64_t v15 = (char *)&v59 - v14;
  uint64_t v16 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v62 = (uint64_t)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19, v21);
  uint64_t v23 = (char *)&v59 - v22;
  uint64_t v24 = swift_projectBox();
  uint64_t v64 = swift_projectBox();
  swift_beginAccess();
  sub_1004546B8(v24, (uint64_t)v15, &qword_100A45628);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v25(v15, 1, v16) == 1)
  {
    sub_10044C150((uint64_t)v15, &qword_100A45628);
    uint64_t v26 = a2;
  }
  else
  {
    uint64_t v27 = sub_100482908((uint64_t)v15, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    uint64_t v59 = (uint64_t)&v59;
    uint64_t v28 = *(os_unfair_lock_s **)((char *)a2
                               + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock);
    uint64_t v30 = __chkstk_darwin(v27, v29);
    *(&v59 - 2) = v60;
    *(&v59 - 1) = (uint64_t)v23;
    __chkstk_darwin(v30, v31);
    *(&v59 - 2) = (uint64_t)sub_100482E00;
    *(&v59 - 1) = v32;
    swift_retain();
    os_unfair_lock_lock(v28 + 4);
    sub_100482E74();
    os_unfair_lock_unlock(v28 + 4);
    uint64_t v33 = swift_release();
    uint64_t v34 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a2) + 0xA8))(v33);
    uint64_t v26 = a2;
    if (v34)
    {
      uint64_t v36 = (void *)v34;
      uint64_t v37 = v35;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 8))(v23, *(void *)(v63 + 32), ObjectType, v37);
    }
    sub_100482970((uint64_t)v23, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  }
  uint64_t v39 = v64;
  swift_beginAccess();
  sub_1004546B8(v39, (uint64_t)v12, &qword_100A45628);
  if (v25(v12, 1, v16) == 1)
  {
    sub_10044C150((uint64_t)v12, &qword_100A45628);
  }
  else
  {
    uint64_t v40 = v62;
    uint64_t v41 = sub_100482908((uint64_t)v12, v62, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    uint64_t v42 = *(os_unfair_lock_s **)((char *)v26
                               + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock);
    uint64_t v44 = __chkstk_darwin(v41, v43);
    *(&v59 - 2) = v61;
    *(&v59 - 1) = v40;
    __chkstk_darwin(v44, v45);
    *(&v59 - 2) = (uint64_t)sub_100482E00;
    *(&v59 - 1) = v46;
    swift_retain();
    os_unfair_lock_lock(v42 + 4);
    sub_100482E74();
    os_unfair_lock_unlock(v42 + 4);
    uint64_t v47 = swift_release();
    uint64_t v48 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v26) + 0xA8))(v47);
    if (v48)
    {
      uint64_t v50 = (void *)v48;
      uint64_t v51 = v49;
      uint64_t v52 = swift_getObjectType();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 8))(v40, *(void *)(v63 + 32), v52, v51);
    }
    sub_100482970(v40, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  }
  swift_retain_n();
  uint64_t v53 = sub_100725EB0();
  os_log_type_t v54 = sub_1007266E0();
  if (os_log_type_enabled(v53, v54))
  {
    uint64_t v55 = swift_slowAlloc();
    uint64_t v68 = swift_slowAlloc();
    *(_DWORD *)uint64_t v55 = 136315394;
    uint64_t v67 = sub_10043E578(0xD00000000000002ELL, 0x80000001008C1A80, &v68);
    sub_100726830();
    *(_WORD *)(v55 + 12) = 2080;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v56 = sub_1007263A0();
    unint64_t v58 = v57;
    swift_bridgeObjectRelease();
    uint64_t v66 = sub_10043E578(v56, v58, &v68);
    sub_100726830();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v53, v54, "%s: sent: %s", (uint8_t *)v55, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }
}

uint64_t sub_100476F10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a1 + 32);
  uint64_t v4 = sub_100726430();
  uint64_t v6 = v5;
  uint64_t v7 = sub_100726430();
  uint64_t v9 = v8;
  swift_retain();
  v3(a2, v4, v6, v7, v9);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

unint64_t sub_100476FBC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cryptoHandler + 24);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cryptoHandler + 32);
  sub_10044C0F4((void *)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cryptoHandler), v5);
  uint64_t v7 = (int *)type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v8 = (*(uint64_t (**)(void, void, uint64_t, uint64_t, uint64_t))(v6 + 8))(*(void *)(a1 + v7[7]), *(void *)(a1 + v7[7] + 8), a2, v5, v6);
  uint64_t v10 = v8;
  unint64_t v11 = v9;
  if (v12)
  {
    sub_10044C144(v8, v9, 1);
    return 0;
  }
  else
  {
    sub_100431F80(&qword_100A45660);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007955F0;
    *(void *)(inited + 32) = sub_100726430();
    *(void *)(inited + 40) = v14;
    uint64_t v15 = (uint64_t *)(a1 + v7[6]);
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    *(void *)(inited + 72) = &type metadata for Data;
    *(void *)(inited + 48) = v16;
    *(void *)(inited + 56) = v17;
    *(void *)(inited + 80) = sub_100726430();
    *(void *)(inited + 88) = v18;
    *(void *)(inited + 120) = &type metadata for Data;
    *(void *)(inited + 96) = v10;
    *(void *)(inited + 104) = v11;
    *(void *)(inited + 128) = sub_100726430();
    *(void *)(inited + 136) = v19;
    int v20 = *(_DWORD *)(a1 + v7[10]);
    *(void *)(inited + 168) = &type metadata for UInt32;
    *(_DWORD *)(inited + 144) = v20;
    *(void *)(inited + 176) = sub_100726430();
    *(void *)(inited + 184) = v21;
    unsigned __int8 v22 = *(unsigned char *)(a2 + *(int *)(type metadata accessor for IDSGroupEncryptionPublicIdentity(0) + 32));
    sub_100441FD4(v10, v11);
    sub_10044C138(v10, v11, 0);
    sub_100441FD4(v16, v17);
    uint64_t v23 = sub_1005350E0(v22);
    *(void *)(inited + 216) = &type metadata for Int;
    *(void *)(inited + 192) = v23;
    *(void *)(inited + 224) = sub_100726430();
    *(void *)(inited + 232) = v24;
    char v25 = *(unsigned char *)(a1 + v7[12]);
    *(void *)(inited + 264) = &type metadata for UInt8;
    *(unsigned char *)(inited + 240) = v25;
    unint64_t v26 = sub_10046ECE8(inited);
    Class isa = sub_100725CE0().super.isa;
    id v28 = (id)IDSGetUUIDDataFromNSUUID();

    if (v28)
    {
      uint64_t v29 = sub_100725B50();
      unint64_t v31 = v30;

      uint64_t v32 = sub_100726430();
      uint64_t v34 = v33;
      uint64_t v45 = &type metadata for Data;
      *(void *)&long long v44 = v29;
      *((void *)&v44 + 1) = v31;
      sub_100450794(&v44, v43);
      sub_100441FD4(v29, v31);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_10047D18C(v43, v32, v34, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100442248(v29, v31);
    }
    uint64_t v36 = (uint64_t *)(a1 + v7[13]);
    if (*((unsigned char *)v36 + 8) != 1)
    {
      uint64_t v37 = *v36;
      uint64_t v38 = sub_100726430();
      uint64_t v40 = v39;
      uint64_t v45 = &type metadata for UInt64;
      *(void *)&long long v44 = v37;
      sub_100450794(&v44, v43);
      char v41 = swift_isUniquelyReferenced_nonNull_native();
      sub_10047D18C(v43, v38, v40, v41);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_10044C144(v10, v11, 0);
    sub_10044C144(v10, v11, 0);
  }
  return v26;
}

unint64_t sub_10047731C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cryptoHandler + 24);
  uint64_t v6 = *(void *)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cryptoHandler + 32);
  sub_10044C0F4((void *)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cryptoHandler), v5);
  uint64_t v7 = (int *)type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v8 = (*(uint64_t (**)(void, void, uint64_t, uint64_t, uint64_t))(v6 + 8))(*(void *)(a1 + v7[7]), *(void *)(a1 + v7[7] + 8), a2, v5, v6);
  uint64_t v10 = v8;
  unint64_t v11 = v9;
  if (v12)
  {
    sub_10044C144(v8, v9, 1);
    return 0;
  }
  else
  {
    sub_100431F80(&qword_100A45660);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1007955D0;
    *(void *)(inited + 32) = sub_100726430();
    *(void *)(inited + 40) = v14;
    uint64_t v15 = (uint64_t *)(a1 + v7[6]);
    uint64_t v16 = *v15;
    unint64_t v17 = v15[1];
    *(void *)(inited + 72) = &type metadata for Data;
    *(void *)(inited + 48) = v16;
    *(void *)(inited + 56) = v17;
    *(void *)(inited + 80) = sub_100726430();
    *(void *)(inited + 88) = v18;
    *(void *)(inited + 120) = &type metadata for Data;
    *(void *)(inited + 96) = v10;
    *(void *)(inited + 104) = v11;
    *(void *)(inited + 128) = sub_100726430();
    *(void *)(inited + 136) = v19;
    int v20 = *(_DWORD *)(a1 + v7[10]);
    *(void *)(inited + 168) = &type metadata for UInt32;
    *(_DWORD *)(inited + 144) = v20;
    *(void *)(inited + 176) = sub_100726430();
    *(void *)(inited + 184) = v21;
    unsigned __int8 v22 = *(unsigned char *)(a2 + *(int *)(type metadata accessor for IDSGroupEncryptionPublicIdentity(0) + 32));
    sub_100441FD4(v10, v11);
    sub_10044C138(v10, v11, 0);
    sub_100441FD4(v16, v17);
    uint64_t v23 = sub_1005350E0(v22);
    *(void *)(inited + 216) = &type metadata for Int;
    *(void *)(inited + 192) = v23;
    unint64_t v24 = sub_10046ECE8(inited);
    Class isa = sub_100725CE0().super.isa;
    id v26 = (id)IDSGetUUIDDataFromNSUUID();

    if (v26)
    {
      uint64_t v27 = sub_100725B50();
      unint64_t v29 = v28;

      uint64_t v30 = sub_100726430();
      uint64_t v32 = v31;
      uint64_t v43 = &type metadata for Data;
      *(void *)&long long v42 = v27;
      *((void *)&v42 + 1) = v29;
      sub_100450794(&v42, v41);
      sub_100441FD4(v27, v29);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_10047D18C(v41, v30, v32, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100442248(v27, v29);
    }
    uint64_t v34 = (uint64_t *)(a1 + v7[13]);
    if (*((unsigned char *)v34 + 8) != 1)
    {
      uint64_t v35 = *v34;
      uint64_t v36 = sub_100726430();
      uint64_t v38 = v37;
      uint64_t v43 = &type metadata for UInt64;
      *(void *)&long long v42 = v35;
      sub_100450794(&v42, v41);
      char v39 = swift_isUniquelyReferenced_nonNull_native();
      sub_10047D18C(v41, v36, v38, v39);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_10044C144(v10, v11, 0);
    sub_10044C144(v10, v11, 0);
  }
  return v24;
}

uint64_t sub_100477650(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock;
  uint64_t v8 = *(os_unfair_lock_s **)(v3 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock);
  swift_retain();
  os_unfair_lock_lock(v8 + 4);
  swift_release();
  uint64_t v9 = sub_1004776F0(a1, a2, a3);
  uint64_t v10 = *(os_unfair_lock_s **)(v3 + v7);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  return v9;
}

uint64_t sub_1004776F0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v7 = (uint64_t *)(v3 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_participantsById);
  swift_beginAccess();
  uint64_t v8 = *v7;
  if (*(void *)(*v7 + 16) && (unint64_t v9 = sub_10045C7FC(a3), (v10 & 1) != 0))
  {
    uint64_t v11 = *(void *)(*(void *)(v8 + 56) + 8 * v9);
    swift_retain();
  }
  else
  {
    type metadata accessor for IDSGroupPushMaterialExchangeParticipant();
    uint64_t v11 = swift_allocObject();
    sub_10046E068((uint64_t)a1, (uint64_t)a2, a3);
    swift_beginAccess();
    id v12 = a1;
    id v13 = a2;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v7;
    *uint64_t v7 = 0x8000000000000000;
    sub_10047D050(v11, a3, isUniquelyReferenced_nonNull_native);
    *uint64_t v7 = v24;
    swift_bridgeObjectRelease();
    swift_endAccess();
    swift_retain_n();
    uint64_t v15 = sub_100725EB0();
    os_log_type_t v16 = sub_1007266E0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      v25[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136315394;
      sub_10043E578(0xD000000000000034, 0x80000001008C1D60, v25);
      sub_100726830();
      *(_WORD *)(v17 + 12) = 2080;
      uint64_t v18 = *(uint64_t (**)(uint64_t))(*(void *)v11 + 176);
      uint64_t v19 = swift_retain();
      uint64_t v20 = v18(v19);
      unint64_t v22 = v21;
      swift_release();
      sub_10043E578(v20, v22, v25);
      sub_100726830();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: creating %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
    }
  }
  return v11;
}

uint64_t sub_1004779C8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock;
  uint64_t v5 = *(os_unfair_lock_s **)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock);
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  swift_release();
  uint64_t v6 = (uint64_t *)(v2 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_participantsById);
  swift_beginAccess();
  uint64_t v7 = *v6;
  v18[2] = a1;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_100477BE0((uint64_t)sub_1004829D0, (uint64_t)v18, v7);
  unint64_t v9 = v8;
  if (!(v8 >> 62))
  {
    uint64_t v10 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v10) {
      goto LABEL_3;
    }
LABEL_11:
    swift_bridgeObjectRelease();
    uint64_t v15 = &_swiftEmptyArrayStorage;
LABEL_12:
    uint64_t v16 = sub_100481658((unint64_t)v15, (unint64_t *)&qword_100A47A80, (uint64_t)IDSPushToken_ptr, (unint64_t *)&qword_100A48110, (uint64_t *)&unk_100A455F0);
    swift_bridgeObjectRelease();
    uint64_t v17 = *(os_unfair_lock_s **)(v2 + v4);
    swift_retain();
    os_unfair_lock_unlock(v17 + 4);
    swift_release();
    return v16;
  }
  uint64_t v10 = sub_100726BA0();
  if (!v10) {
    goto LABEL_11;
  }
LABEL_3:
  uint64_t v19 = &_swiftEmptyArrayStorage;
  uint64_t result = sub_100726A60();
  if ((v10 & 0x8000000000000000) == 0)
  {
    uint64_t v12 = 0;
    do
    {
      if ((v9 & 0xC000000000000001) != 0)
      {
        uint64_t v13 = sub_100726A10();
      }
      else
      {
        uint64_t v13 = *(void *)(v9 + 8 * v12 + 32);
        swift_retain();
      }
      ++v12;
      id v14 = *(id *)(v13 + 16);
      swift_release();
      sub_100726A40();
      sub_100726A70();
      sub_100726A80();
      sub_100726A50();
    }
    while (v10 != v12);
    uint64_t v15 = v19;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_100477BE0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (uint64_t (*)(uint64_t *))result;
  int64_t v6 = 0;
  uint64_t v20 = &_swiftEmptyArrayStorage;
  uint64_t v7 = *(void *)(a3 + 64);
  uint64_t v17 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v18 = (unint64_t)(v8 + 63) >> 6;
  if ((v9 & v7) != 0) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v6++, 1))
  {
    __break(1u);
    goto LABEL_31;
  }
  if (v6 >= v18) {
    goto LABEL_29;
  }
  unint64_t v14 = *(void *)(v17 + 8 * v6);
  if (v14) {
    goto LABEL_19;
  }
  int64_t v15 = v6 + 1;
  if (v6 + 1 >= v18)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v20;
  }
  unint64_t v14 = *(void *)(v17 + 8 * v15);
  if (!v14)
  {
    int64_t v15 = v6 + 2;
    if (v6 + 2 >= v18) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v17 + 8 * v15);
    if (!v14)
    {
      int64_t v15 = v6 + 3;
      if (v6 + 3 >= v18) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v17 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v6 + 4;
        if (v6 + 4 < v18)
        {
          unint64_t v14 = *(void *)(v17 + 8 * v15);
          if (v14) {
            goto LABEL_18;
          }
          while (1)
          {
            int64_t v6 = v15 + 1;
            if (__OFADD__(v15, 1)) {
              break;
            }
            if (v6 >= v18) {
              goto LABEL_29;
            }
            unint64_t v14 = *(void *)(v17 + 8 * v6);
            ++v15;
            if (v14) {
              goto LABEL_19;
            }
          }
LABEL_31:
          __break(1u);
          return result;
        }
        goto LABEL_29;
      }
    }
  }
LABEL_18:
  int64_t v6 = v15;
LABEL_19:
  unint64_t v10 = (v14 - 1) & v14;
  for (unint64_t i = __clz(__rbit64(v14)) + (v6 << 6); ; unint64_t i = v11 | (v6 << 6))
  {
    uint64_t v19 = *(void *)(*(void *)(a3 + 56) + 8 * i);
    swift_retain();
    char v16 = v5(&v19);
    if (v3) {
      break;
    }
    if (v16)
    {
      sub_100726A40();
      sub_100726A70();
      sub_100726A80();
      uint64_t result = sub_100726A50();
      if (!v10) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t result = swift_release();
      if (!v10) {
        goto LABEL_7;
      }
    }
LABEL_6:
    unint64_t v11 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
  }
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_100477E1C(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v292 = a2;
  uint64_t v289 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  uint64_t v254 = *(void *)(v289 - 8);
  __chkstk_darwin(v289, v6);
  uint64_t v283 = (uint64_t)&v252 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100431F80(&qword_100A45628);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v276 = (char *)&v252 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v275 = (char *)&v252 - v14;
  uint64_t v16 = __chkstk_darwin(v13, v15);
  unint64_t v274 = (char *)&v252 - v17;
  uint64_t v19 = __chkstk_darwin(v16, v18);
  unint64_t v273 = (char *)&v252 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v272 = (char *)&v252 - v23;
  __chkstk_darwin(v22, v24);
  uint64_t v271 = (char *)&v252 - v25;
  uint64_t v268 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
  uint64_t v26 = *(void *)(v268 - 8);
  __chkstk_darwin(v268 - 8, v27);
  uint64_t v256 = (uint64_t)&v252 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v267 = sub_100431F80(&qword_100A45680);
  __chkstk_darwin(v267, v29);
  uint64_t v277 = (uint64_t)&v252 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v270 = sub_100431F80(&qword_100A45640);
  uint64_t v32 = __chkstk_darwin(v270, v31);
  uint64_t v257 = (uint64_t)&v252 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = __chkstk_darwin(v32, v34);
  uint64_t v286 = (uint64_t *)((char *)&v252 - v36);
  uint64_t v38 = __chkstk_darwin(v35, v37);
  uint64_t v285 = (uint64_t)&v252 - v39;
  __chkstk_darwin(v38, v40);
  unint64_t v269 = (char *)&v252 - v41;
  v255 = v3;
  uint64_t v253 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock;
  long long v42 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock];
  swift_retain();
  os_unfair_lock_lock(v42 + 4);
  swift_release();
  unint64_t v293 = a3;
  swift_bridgeObjectRetain_n();
  uint64_t v43 = sub_100725EB0();
  os_log_type_t v44 = sub_1007266E0();
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = (uint8_t *)swift_slowAlloc();
    uint64_t v298 = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 136315138;
    unint64_t v46 = v293;
    swift_bridgeObjectRetain();
    unint64_t v297 = (void *)sub_10043E578(v292, v46, &v298);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "%sPushExchangeController", v45, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  uint64_t v47 = v255;
  uint64_t v48 = sub_100725EB0();
  os_log_type_t v49 = sub_1007266E0();
  BOOL v50 = os_log_type_enabled(v48, v49);
  uint64_t v290 = a1;
  uint64_t v288 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))v47;
  if (v50)
  {
    uint64_t v51 = swift_slowAlloc();
    uint64_t v298 = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 136315394;
    unint64_t v52 = v293;
    swift_bridgeObjectRetain();
    unint64_t v297 = (void *)sub_10043E578(v292, v52, &v298);
    sub_100726830();
    uint64_t v53 = v288;
    uint64_t v54 = swift_bridgeObjectRelease_n();
    *(_WORD *)(v51 + 12) = 2080;
    (*(void (**)(uint64_t))((swift_isaMask & *v53) + 0xF0))(v54);
    uint64_t v55 = sub_100726480();
    unint64_t v297 = (void *)sub_10043E578(v55, v56, &v298);
    sub_100726830();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "%s    desiredPublicIdentity: %s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  unint64_t v57 = sub_100725EB0();
  os_log_type_t v58 = sub_1007266E0();
  if (os_log_type_enabled(v57, v58))
  {
    uint64_t v59 = (uint8_t *)swift_slowAlloc();
    uint64_t v298 = swift_slowAlloc();
    *(_DWORD *)uint64_t v59 = 136315138;
    unint64_t v60 = v293;
    swift_bridgeObjectRetain();
    unint64_t v297 = (void *)sub_10043E578(v292, v60, &v298);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s    ", v59, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  uint64_t v61 = sub_100725EB0();
  os_log_type_t v62 = sub_1007266E0();
  if (os_log_type_enabled(v61, v62))
  {
    uint64_t v63 = (uint8_t *)swift_slowAlloc();
    uint64_t v298 = swift_slowAlloc();
    *(_DWORD *)uint64_t v63 = 136315138;
    unint64_t v64 = v293;
    swift_bridgeObjectRetain();
    unint64_t v297 = (void *)sub_10043E578(v292, v64, &v298);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v61, v62, "%s    Members:", v63, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v65 = v288;
  uint64_t v66 = (unint64_t *)((char *)v288
                           + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_membersByURI);
  swift_beginAccess();
  unint64_t v67 = *v66;
  if ((*v66 & 0xC000000000000001) != 0)
  {
    uint64_t v68 = sub_100726AB0();
    unint64_t v261 = 0;
    uint64_t v69 = 0;
    unint64_t v70 = 0;
    unint64_t v71 = v68 | 0x8000000000000000;
  }
  else
  {
    uint64_t v72 = -1 << *(unsigned char *)(v67 + 32);
    uint64_t v69 = ~v72;
    uint64_t v73 = *(void *)(v67 + 64);
    unint64_t v261 = v67 + 64;
    uint64_t v74 = -v72;
    if (v74 < 64) {
      uint64_t v75 = ~(-1 << v74);
    }
    else {
      uint64_t v75 = -1;
    }
    unint64_t v70 = v75 & v73;
    unint64_t v71 = v67;
  }
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v77 = 0;
  uint64_t v259 = v71 & 0x7FFFFFFFFFFFFFFFLL;
  int64_t v260 = (unint64_t)(v69 + 64) >> 6;
  unint64_t v287 = &v295;
  uint64_t v265 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48);
  *(void *)&long long v78 = 136315906;
  long long v264 = v78;
  uint64_t v263 = (char *)&type metadata for Any + 8;
  v258 = (char *)&type metadata for Swift.AnyObject + 8;
  uint64_t v262 = v69;
  unint64_t v266 = v71;
  if ((v71 & 0x8000000000000000) == 0) {
    goto LABEL_25;
  }
LABEL_22:
  uint64_t v79 = v65;
  uint64_t v80 = sub_100726B50();
  if (v80)
  {
    uint64_t v82 = v81;
    uint64_t v294 = (uint64_t (*)(void))v80;
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v83 = v297;
    swift_unknownObjectRelease();
    uint64_t v294 = (uint64_t (*)(void))v82;
    type metadata accessor for IDSGroupPushMaterialExchangeMember(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    uint64_t v84 = v297;
    swift_unknownObjectRelease();
    uint64_t v85 = v77;
    *(void *)&long long v291 = v70;
    uint64_t v65 = v79;
    if (v83)
    {
      while (1)
      {

        swift_retain_n();
        swift_bridgeObjectRetain_n();
        uint64_t v91 = v65;
        uint64_t v92 = sub_100725EB0();
        int v93 = sub_1007266E0();
        if (!os_log_type_enabled(v92, (os_log_type_t)v93))
        {

          swift_bridgeObjectRelease_n();
          uint64_t result = swift_release_n();
          uint64_t v77 = v85;
          unint64_t v70 = v291;
          if ((v71 & 0x8000000000000000) != 0) {
            goto LABEL_22;
          }
          goto LABEL_25;
        }
        LODWORD(v281) = v93;
        uint64_t v284 = v85;
        uint64_t v94 = swift_slowAlloc();
        uint64_t v95 = (void *)swift_slowAlloc();
        uint64_t v282 = swift_slowAlloc();
        unint64_t v297 = (void *)v282;
        *(_DWORD *)uint64_t v94 = v264;
        unint64_t v96 = v293;
        swift_bridgeObjectRetain();
        uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v292, v96, (uint64_t *)&v297);
        sub_100726830();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v94 + 12) = 2112;
        uint64_t v97 = (uint64_t (*)(void))v84[2];
        uint64_t v294 = v97;
        uint64_t v98 = v97;
        sub_100726830();
        *(void *)&long long v280 = v95;
        *uint64_t v95 = v97;
        uint64_t v99 = swift_release_n();
        *(_WORD *)(v94 + 22) = 2080;
        uint64_t v100 = (uint64_t (**)(uint64_t))(*v84 + 96);
        uint64_t v101 = v285;
        int v279 = *v100;
        int64_t v278 = (int64_t)v100;
        uint64_t v102 = v279(v99);
        uint64_t v103 = (uint64_t)v286;
        (*(void (**)(uint64_t))((swift_isaMask & *v91) + 0xF0))(v102);
        uint64_t v104 = v277;
        uint64_t v105 = v277 + *(int *)(v267 + 48);
        sub_1004546B8(v101, v277, &qword_100A45640);
        uint64_t v106 = v103;
        uint64_t v107 = v265;
        sub_1004546B8(v106, v105, &qword_100A45640);
        uint64_t v108 = *v107;
        uint64_t v109 = v268;
        if ((*v107)(v104, 1, v268) == 1) {
          break;
        }
        uint64_t v112 = v257;
        sub_1004546B8(v104, v257, &qword_100A45640);
        if (v108(v105, 1, v109) == 1)
        {
          sub_100482970(v112, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
LABEL_48:
          sub_10044C150(v277, &qword_100A45680);
          sub_10044C150((uint64_t)v286, &qword_100A45640);
          sub_10044C150(v285, &qword_100A45640);
          goto LABEL_51;
        }
        uint64_t v113 = v105;
        uint64_t v114 = v256;
        sub_100482908(v113, v256, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
        sub_10048156C(&qword_100A44E20, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
        char v115 = sub_100726410();
        sub_100482970(v112, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
        sub_100482970(v114, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
        sub_10044C150(v104, &qword_100A45640);
        sub_10044C150((uint64_t)v286, &qword_100A45640);
        sub_10044C150(v285, &qword_100A45640);
        if (v115)
        {
          unint64_t v110 = 0xE700000000000000;
          uint64_t v111 = 0x746E6572727563;
          goto LABEL_52;
        }
LABEL_51:
        unint64_t v110 = 0xE500000000000000;
        uint64_t v111 = 0x656C617473;
LABEL_52:
        unint64_t v116 = v291;
        uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v111, v110, (uint64_t *)&v297);
        sub_100726830();

        swift_release_n();
        uint64_t v117 = swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 32) = 2080;
        v279(v117);
        uint64_t v118 = sub_100726480();
        uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v118, v119, (uint64_t *)&v297);
        sub_100726830();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v281, "%s        %@: %s; sentPublicIdentity: %s",
          (uint8_t *)v94,
          0x2Au);
        sub_100431F80(&qword_100A44F10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t result = swift_release();
        uint64_t v77 = v284;
        unint64_t v70 = v116;
        unint64_t v71 = v266;
        uint64_t v65 = v288;
        if ((v266 & 0x8000000000000000) != 0) {
          goto LABEL_22;
        }
LABEL_25:
        if (v70)
        {
          *(void *)&long long v291 = (v70 - 1) & v70;
          unint64_t v86 = __clz(__rbit64(v70)) | (v77 << 6);
          uint64_t v85 = v77;
        }
        else
        {
          int64_t v87 = v77 + 1;
          if (__OFADD__(v77, 1)) {
            goto LABEL_134;
          }
          if (v87 >= v260) {
            goto LABEL_54;
          }
          unint64_t v88 = *(void *)(v261 + 8 * v87);
          uint64_t v85 = v77 + 1;
          if (!v88)
          {
            uint64_t v85 = v77 + 2;
            if (v77 + 2 >= v260) {
              goto LABEL_54;
            }
            unint64_t v88 = *(void *)(v261 + 8 * v85);
            if (!v88)
            {
              uint64_t v85 = v77 + 3;
              if (v77 + 3 >= v260) {
                goto LABEL_54;
              }
              unint64_t v88 = *(void *)(v261 + 8 * v85);
              if (!v88)
              {
                uint64_t v85 = v77 + 4;
                if (v77 + 4 >= v260) {
                  goto LABEL_54;
                }
                unint64_t v88 = *(void *)(v261 + 8 * v85);
                if (!v88)
                {
                  uint64_t v89 = v77 + 5;
                  while (v260 != v89)
                  {
                    unint64_t v88 = *(void *)(v261 + 8 * v89++);
                    if (v88)
                    {
                      uint64_t v85 = v89 - 1;
                      goto LABEL_40;
                    }
                  }
                  goto LABEL_54;
                }
              }
            }
          }
LABEL_40:
          *(void *)&long long v291 = (v88 - 1) & v88;
          unint64_t v86 = __clz(__rbit64(v88)) + (v85 << 6);
        }
        uint64_t v90 = 8 * v86;
        uint64_t v84 = *(void **)(*(void *)(v71 + 56) + v90);
        id v83 = *(id *)(*(void *)(v71 + 48) + v90);
        swift_retain();
        if (!v83) {
          goto LABEL_54;
        }
      }
      if (v108(v105, 1, v109) == 1)
      {
        sub_10044C150(v277, &qword_100A45640);
        sub_10044C150((uint64_t)v286, &qword_100A45640);
        sub_10044C150(v285, &qword_100A45640);
        unint64_t v110 = 0xE700000000000000;
        uint64_t v111 = 0x746E6572727563;
        goto LABEL_52;
      }
      goto LABEL_48;
    }
  }
LABEL_54:
  sub_100462C48();
  swift_bridgeObjectRetain_n();
  uint64_t v120 = sub_100725EB0();
  os_log_type_t v121 = sub_1007266E0();
  if (os_log_type_enabled(v120, v121))
  {
    uint64_t v122 = (uint8_t *)swift_slowAlloc();
    unint64_t v297 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v122 = 136315138;
    unint64_t v123 = v293;
    swift_bridgeObjectRetain();
    uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v292, v123, (uint64_t *)&v297);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v120, v121, "%s    ", v122, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  unsigned int v124 = sub_100725EB0();
  os_log_type_t v125 = sub_1007266E0();
  if (os_log_type_enabled(v124, v125))
  {
    uint64_t v126 = (uint8_t *)swift_slowAlloc();
    unint64_t v297 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v126 = 136315138;
    unint64_t v127 = v293;
    swift_bridgeObjectRetain();
    uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v292, v127, (uint64_t *)&v297);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v124, v125, "%s    Participants:", v126, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  Swift::Int v128 = (char *)v288 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_participantsById;
  swift_beginAccess();
  uint64_t v129 = *(void *)v128;
  uint64_t v130 = *(void *)(*(void *)v128 + 64);
  uint64_t v277 = *(void *)v128 + 64;
  uint64_t v131 = 1 << *(unsigned char *)(v129 + 32);
  uint64_t v132 = -1;
  if (v131 < 64) {
    uint64_t v132 = ~(-1 << v131);
  }
  unint64_t v133 = v132 & v130;
  int64_t v278 = (unint64_t)(v131 + 63) >> 6;
  uint64_t v286 = (uint64_t *)&v297;
  v281 = (char *)&v296 + 4;
  unint64_t v287 = &v295;
  uint64_t v288 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v254 + 48);
  uint64_t v282 = v129;
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v134 = 0;
  *(void *)&long long v135 = 136315650;
  long long v270 = v135;
  unint64_t v269 = (char *)&type metadata for Any + 8;
  *(void *)&long long v135 = 136315138;
  long long v280 = v135;
  *(void *)&long long v135 = 136315394;
  long long v291 = v135;
  while (1)
  {
    if (v133)
    {
      uint64_t v284 = (v133 - 1) & v133;
      uint64_t v285 = v134;
      unint64_t v136 = __clz(__rbit64(v133)) | (v134 << 6);
      goto LABEL_81;
    }
    int64_t v137 = v134 + 1;
    if (__OFADD__(v134, 1))
    {
      __break(1u);
      goto LABEL_133;
    }
    if (v137 >= v278) {
      goto LABEL_131;
    }
    unint64_t v138 = *(void *)(v277 + 8 * v137);
    uint64_t v139 = v134 + 1;
    if (!v138)
    {
      uint64_t v139 = v134 + 2;
      if (v134 + 2 >= v278) {
        goto LABEL_131;
      }
      unint64_t v138 = *(void *)(v277 + 8 * v139);
      if (!v138)
      {
        uint64_t v139 = v134 + 3;
        if (v134 + 3 >= v278) {
          goto LABEL_131;
        }
        unint64_t v138 = *(void *)(v277 + 8 * v139);
        if (!v138) {
          break;
        }
      }
    }
LABEL_80:
    uint64_t v284 = (v138 - 1) & v138;
    uint64_t v285 = v139;
    unint64_t v136 = __clz(__rbit64(v138)) + (v139 << 6);
LABEL_81:
    uint64_t v141 = *(void **)(*(void *)(v282 + 56) + 8 * v136);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    v142 = sub_100725EB0();
    os_log_type_t v143 = sub_1007266E0();
    if (os_log_type_enabled(v142, v143))
    {
      uint64_t v144 = swift_slowAlloc();
      uint64_t v145 = (void *)swift_slowAlloc();
      int v279 = (uint64_t (*)(uint64_t))swift_slowAlloc();
      uint64_t v294 = v279;
      *(_DWORD *)uint64_t v144 = v270;
      unint64_t v146 = v293;
      swift_bridgeObjectRetain();
      uint64_t v296 = sub_10043E578(v292, v146, (uint64_t *)&v294);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v144 + 12) = 2112;
      uint64_t v147 = (void *)v141[3];
      uint64_t v296 = (uint64_t)v147;
      id v148 = v147;
      sub_100726830();
      *uint64_t v145 = v147;
      swift_release_n();
      *(_WORD *)(v144 + 22) = 2112;
      uint64_t v149 = (void *)v141[2];
      uint64_t v296 = (uint64_t)v149;
      id v150 = v149;
      sub_100726830();
      v145[1] = v149;
      swift_release_n();
      _os_log_impl((void *)&_mh_execute_header, v142, v143, "%s        Participant %@: pushToken=%@:", (uint8_t *)v144, 0x20u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }

    swift_bridgeObjectRetain_n();
    unsigned int v151 = sub_100725EB0();
    os_log_type_t v152 = sub_1007266E0();
    if (os_log_type_enabled(v151, v152))
    {
      uint64_t v153 = (uint8_t *)swift_slowAlloc();
      uint64_t v294 = (uint64_t (*)(void))swift_slowAlloc();
      *(_DWORD *)uint64_t v153 = v280;
      unint64_t v154 = v293;
      swift_bridgeObjectRetain();
      uint64_t v296 = sub_10043E578(v292, v154, (uint64_t *)&v294);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v151, v152, "%s            MKM:", v153, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_bridgeObjectRetain_n();
    swift_retain_n();
    int v155 = sub_100725EB0();
    os_log_type_t v156 = sub_1007266E0();
    if (os_log_type_enabled(v155, v156))
    {
      uint64_t v157 = swift_slowAlloc();
      uint64_t v294 = (uint64_t (*)(void))swift_slowAlloc();
      *(_DWORD *)uint64_t v157 = v291;
      unint64_t v158 = v293;
      swift_bridgeObjectRetain();
      uint64_t v296 = sub_10043E578(v292, v158, (uint64_t *)&v294);
      sub_100726830();
      uint64_t v159 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v157 + 12) = 1024;
      uint64_t v160 = (*(uint64_t (**)(uint64_t))(*v141 + 120))(v159);
      char v161 = (*(uint64_t (**)(uint64_t))(*(void *)v160 + 184))(v160);
      swift_release();
      swift_release();
      LODWORD(v296) = v161 & 1;
      sub_100726830();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v155, v156, "%s                desiresCache: %{BOOL}d", (uint8_t *)v157, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    os_log_type_t v162 = sub_100725EB0();
    os_log_type_t v163 = sub_1007266E0();
    if (os_log_type_enabled(v162, v163))
    {
      uint64_t v164 = swift_slowAlloc();
      uint64_t v296 = swift_slowAlloc();
      *(_DWORD *)uint64_t v164 = v291;
      unint64_t v165 = v293;
      swift_bridgeObjectRetain();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v292, v165, &v296);
      sub_100726830();
      uint64_t v166 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v164 + 12) = 2080;
      uint64_t v167 = (*(uint64_t (**)(uint64_t))(*v141 + 120))(v166);
      uint64_t v168 = (uint64_t)v271;
      (*(void (**)(uint64_t))(*(void *)v167 + 160))(v167);
      swift_release();
      if ((*v288)(v168, 1, v289))
      {
        sub_10044C150(v168, &qword_100A45628);
        uint64_t v169 = 0;
        uint64_t v170 = 0;
      }
      else
      {
        uint64_t v171 = v283;
        sub_1004828A0(v168, v283, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        sub_10044C150(v168, &qword_100A45628);
        uint64_t v169 = sub_100531ED0();
        uint64_t v170 = v172;
        sub_100482970(v171, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      }
      uint64_t v294 = (uint64_t (*)(void))v169;
      uint64_t v295 = v170;
      sub_100431F80(&qword_100A45688);
      uint64_t v173 = sub_100726480();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v173, v174, &v296);
      sub_100726830();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v162, v163, "%s                desiredKeyMaterial: %s", (uint8_t *)v164, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v175 = sub_100725EB0();
    os_log_type_t v176 = sub_1007266E0();
    if (os_log_type_enabled(v175, v176))
    {
      uint64_t v177 = swift_slowAlloc();
      uint64_t v296 = swift_slowAlloc();
      *(_DWORD *)uint64_t v177 = v291;
      unint64_t v178 = v293;
      swift_bridgeObjectRetain();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v292, v178, &v296);
      sub_100726830();
      uint64_t v179 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v177 + 12) = 2080;
      uint64_t v180 = (*(uint64_t (**)(uint64_t))(*v141 + 120))(v179);
      uint64_t v181 = (uint64_t)v272;
      (*(void (**)(uint64_t))(*(void *)v180 + 136))(v180);
      swift_release();
      if ((*v288)(v181, 1, v289))
      {
        sub_10044C150(v181, &qword_100A45628);
        uint64_t v182 = 0;
        uint64_t v183 = 0;
      }
      else
      {
        uint64_t v184 = v283;
        sub_1004828A0(v181, v283, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        sub_10044C150(v181, &qword_100A45628);
        uint64_t v182 = sub_100531ED0();
        uint64_t v183 = v185;
        sub_100482970(v184, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      }
      uint64_t v294 = (uint64_t (*)(void))v182;
      uint64_t v295 = v183;
      sub_100431F80(&qword_100A45688);
      uint64_t v186 = sub_100726480();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v186, v187, &v296);
      sub_100726830();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v175, v176, "%s                sendingKeyMaterial: %s", (uint8_t *)v177, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v188 = sub_100725EB0();
    os_log_type_t v189 = sub_1007266E0();
    if (os_log_type_enabled(v188, v189))
    {
      uint64_t v190 = swift_slowAlloc();
      uint64_t v296 = swift_slowAlloc();
      *(_DWORD *)uint64_t v190 = v291;
      unint64_t v191 = v293;
      swift_bridgeObjectRetain();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v292, v191, &v296);
      sub_100726830();
      uint64_t v192 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v190 + 12) = 2080;
      uint64_t v193 = (*(uint64_t (**)(uint64_t))(*v141 + 120))(v192);
      uint64_t v194 = (uint64_t)v273;
      (*(void (**)(uint64_t))(*(void *)v193 + 112))(v193);
      swift_release();
      if ((*v288)(v194, 1, v289))
      {
        sub_10044C150(v194, &qword_100A45628);
        uint64_t v195 = 0;
        uint64_t v196 = 0;
      }
      else
      {
        uint64_t v197 = v283;
        sub_1004828A0(v194, v283, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        sub_10044C150(v194, &qword_100A45628);
        uint64_t v195 = sub_100531ED0();
        uint64_t v196 = v198;
        sub_100482970(v197, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      }
      uint64_t v294 = (uint64_t (*)(void))v195;
      uint64_t v295 = v196;
      sub_100431F80(&qword_100A45688);
      uint64_t v199 = sub_100726480();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v199, v200, &v296);
      sub_100726830();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v188, v189, "%s                sentKeyMaterial: %s", (uint8_t *)v190, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    uint64_t v201 = sub_100725EB0();
    os_log_type_t v202 = sub_1007266E0();
    if (os_log_type_enabled(v201, v202))
    {
      uint64_t v203 = (uint8_t *)swift_slowAlloc();
      uint64_t v294 = (uint64_t (*)(void))swift_slowAlloc();
      *(_DWORD *)uint64_t v203 = v280;
      unint64_t v204 = v293;
      swift_bridgeObjectRetain();
      uint64_t v296 = sub_10043E578(v292, v204, (uint64_t *)&v294);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v201, v202, "%s            SKM:", v203, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    swift_bridgeObjectRetain_n();
    swift_retain_n();
    long long v205 = sub_100725EB0();
    os_log_type_t v206 = sub_1007266E0();
    if (os_log_type_enabled(v205, v206))
    {
      uint64_t v207 = swift_slowAlloc();
      uint64_t v294 = (uint64_t (*)(void))swift_slowAlloc();
      *(_DWORD *)uint64_t v207 = v291;
      unint64_t v208 = v293;
      swift_bridgeObjectRetain();
      uint64_t v296 = sub_10043E578(v292, v208, (uint64_t *)&v294);
      sub_100726830();
      uint64_t v209 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v207 + 12) = 1024;
      uint64_t v210 = (*(uint64_t (**)(uint64_t))(*v141 + 144))(v209);
      char v211 = (*(uint64_t (**)(uint64_t))(*(void *)v210 + 184))(v210);
      swift_release();
      swift_release();
      LODWORD(v296) = v211 & 1;
      sub_100726830();
      swift_release();
      _os_log_impl((void *)&_mh_execute_header, v205, v206, "%s                desiresCache: %{BOOL}d", (uint8_t *)v207, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      swift_release_n();
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    unint64_t v212 = sub_100725EB0();
    os_log_type_t v213 = sub_1007266E0();
    if (os_log_type_enabled(v212, v213))
    {
      uint64_t v214 = swift_slowAlloc();
      uint64_t v296 = swift_slowAlloc();
      *(_DWORD *)uint64_t v214 = v291;
      unint64_t v215 = v293;
      swift_bridgeObjectRetain();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v292, v215, &v296);
      sub_100726830();
      uint64_t v216 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v214 + 12) = 2080;
      uint64_t v217 = (*(uint64_t (**)(uint64_t))(*v141 + 144))(v216);
      uint64_t v218 = (uint64_t)v274;
      (*(void (**)(uint64_t))(*(void *)v217 + 160))(v217);
      swift_release();
      if ((*v288)(v218, 1, v289))
      {
        sub_10044C150(v218, &qword_100A45628);
        uint64_t v219 = 0;
        uint64_t v220 = 0;
      }
      else
      {
        uint64_t v221 = v283;
        sub_1004828A0(v218, v283, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        sub_10044C150(v218, &qword_100A45628);
        uint64_t v219 = sub_100531ED0();
        uint64_t v220 = v222;
        sub_100482970(v221, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      }
      uint64_t v294 = (uint64_t (*)(void))v219;
      uint64_t v295 = v220;
      sub_100431F80(&qword_100A45688);
      uint64_t v223 = sub_100726480();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v223, v224, &v296);
      sub_100726830();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v212, v213, "%s                desiredKeyMaterial: %s", (uint8_t *)v214, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    uint64_t v225 = sub_100725EB0();
    os_log_type_t v226 = sub_1007266E0();
    if (os_log_type_enabled(v225, v226))
    {
      uint64_t v227 = swift_slowAlloc();
      uint64_t v296 = swift_slowAlloc();
      *(_DWORD *)uint64_t v227 = v291;
      unint64_t v228 = v293;
      swift_bridgeObjectRetain();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v292, v228, &v296);
      sub_100726830();
      uint64_t v229 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v227 + 12) = 2080;
      uint64_t v230 = (*(uint64_t (**)(uint64_t))(*v141 + 144))(v229);
      uint64_t v231 = (uint64_t)v275;
      (*(void (**)(uint64_t))(*(void *)v230 + 136))(v230);
      swift_release();
      if ((*v288)(v231, 1, v289))
      {
        sub_10044C150(v231, &qword_100A45628);
        uint64_t v232 = 0;
        uint64_t v233 = 0;
      }
      else
      {
        uint64_t v234 = v283;
        sub_1004828A0(v231, v283, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        sub_10044C150(v231, &qword_100A45628);
        uint64_t v232 = sub_100531ED0();
        uint64_t v233 = v235;
        sub_100482970(v234, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      }
      uint64_t v294 = (uint64_t (*)(void))v232;
      uint64_t v295 = v233;
      sub_100431F80(&qword_100A45688);
      uint64_t v236 = sub_100726480();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v236, v237, &v296);
      sub_100726830();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v225, v226, "%s                sendingKeyMaterial: %s", (uint8_t *)v227, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    unint64_t v238 = sub_100725EB0();
    os_log_type_t v239 = sub_1007266E0();
    if (os_log_type_enabled(v238, v239))
    {
      uint64_t v240 = swift_slowAlloc();
      uint64_t v296 = swift_slowAlloc();
      *(_DWORD *)uint64_t v240 = v291;
      unint64_t v241 = v293;
      swift_bridgeObjectRetain();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v292, v241, &v296);
      sub_100726830();
      uint64_t v242 = swift_bridgeObjectRelease_n();
      *(_WORD *)(v240 + 12) = 2080;
      uint64_t v243 = (*(uint64_t (**)(uint64_t))(*v141 + 144))(v242);
      uint64_t v244 = (uint64_t)v276;
      (*(void (**)(uint64_t))(*(void *)v243 + 112))(v243);
      swift_release();
      if ((*v288)(v244, 1, v289))
      {
        sub_10044C150(v244, &qword_100A45628);
        uint64_t v245 = 0;
        uint64_t v246 = 0;
      }
      else
      {
        uint64_t v247 = v283;
        sub_1004828A0(v244, v283, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        sub_10044C150(v244, &qword_100A45628);
        uint64_t v245 = sub_100531ED0();
        uint64_t v246 = v248;
        sub_100482970(v247, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      }
      uint64_t v294 = (uint64_t (*)(void))v245;
      uint64_t v295 = v246;
      sub_100431F80(&qword_100A45688);
      uint64_t v249 = sub_100726480();
      uint64_t v294 = (uint64_t (*)(void))sub_10043E578(v249, v250, &v296);
      sub_100726830();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v238, v239, "%s                sentKeyMaterial: %s", (uint8_t *)v240, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t result = swift_release();
    }
    else
    {
      swift_bridgeObjectRelease_n();

      uint64_t result = swift_release_n();
    }
    unint64_t v133 = v284;
    uint64_t v134 = v285;
  }
  uint64_t v140 = v134 + 4;
  if (v134 + 4 >= v278)
  {
LABEL_131:
    swift_release();
    uint64_t v251 = *(os_unfair_lock_s **)&v255[v253];
    swift_retain();
    os_unfair_lock_unlock(v251 + 4);
    return swift_release();
  }
  unint64_t v138 = *(void *)(v277 + 8 * v140);
  if (v138)
  {
    uint64_t v139 = v134 + 4;
    goto LABEL_80;
  }
  while (1)
  {
    uint64_t v139 = v140 + 1;
    if (__OFADD__(v140, 1)) {
      break;
    }
    if (v139 >= v278) {
      goto LABEL_131;
    }
    unint64_t v138 = *(void *)(v277 + 8 * v139);
    ++v140;
    if (v138) {
      goto LABEL_80;
    }
  }
LABEL_133:
  __break(1u);
LABEL_134:
  __break(1u);
  return result;
}

id sub_10047ABD4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSGroupPushMaterialExchangeController(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_10047AD2C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x150))();
}

uint64_t sub_10047AD88()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1A0))();
}

uint64_t sub_10047ADE4()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x158))();
}

uint64_t sub_10047AE40()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x140))();
}

uint64_t sub_10047AE9C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & **v2) + 0x170))(a1, a2 & 0xFFFFFFFFFFLL);
}

uint64_t sub_10047AEFC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x148))();
}

uint64_t sub_10047AF58()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x1A8))();
}

void *sub_10047AFB4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100431F80(&qword_100A459C0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = &_swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage + 4;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004817E8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_10047B0C4(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1007267E0(*(void *)(v2 + 40));

  return sub_10047B108(a1, v4);
}

unint64_t sub_10047B108(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1007267F0();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1007267F0();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_10047B224(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_100726DD0();
  swift_bridgeObjectRetain();
  sub_100726490();
  Swift::Int v8 = sub_100726E30();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_100726D20() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      uint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_100726D20() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_10047F74C(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_10047B3D4(void *a1, void *a2, unint64_t *a3, uint64_t a4, uint64_t *a5)
{
  Swift::Int v8 = v5;
  uint64_t v11 = *v5;
  if ((*v5 & 0xC000000000000001) != 0)
  {
    if (v11 < 0) {
      uint64_t v12 = *v5;
    }
    else {
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v13 = a2;
    uint64_t v14 = sub_100726930();

    if (v14)
    {
      swift_bridgeObjectRelease();

      sub_100462C50(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v37;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_100726920();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v27 = sub_10047B998(v12, result + 1, a5, a3);
    uint64_t v38 = (void *)v27;
    unint64_t v28 = *(void *)(v27 + 16);
    if (*(void *)(v27 + 24) <= v28)
    {
      uint64_t v33 = v28 + 1;
      id v34 = v13;
      sub_10047E014(v33, a5);
      uint64_t v29 = v38;
    }
    else
    {
      uint64_t v29 = (void *)v27;
      id v30 = v13;
    }
    sub_10046A394((uint64_t)v13, v29);
    *Swift::Int v8 = (uint64_t)v29;
    swift_bridgeObjectRelease();
    *a1 = v13;
  }
  else
  {
    Swift::Int v16 = *(void *)(v11 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v17 = sub_1007267E0(v16);
    uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v19 = v17 & ~v18;
    if ((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19))
    {
      sub_100462C50(0, a3);
      id v20 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
      char v21 = sub_1007267F0();

      if (v21)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v25 = *(void **)(*(void *)(*v8 + 48) + 8 * v19);
        *a1 = v25;
        id v26 = v25;
        return 0;
      }
      uint64_t v22 = ~v18;
      while (1)
      {
        unint64_t v19 = (v19 + 1) & v22;
        if (((*(void *)(v11 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
          break;
        }
        id v23 = *(id *)(*(void *)(v11 + 48) + 8 * v19);
        char v24 = sub_1007267F0();

        if (v24) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *v8;
    *Swift::Int v8 = 0x8000000000000000;
    id v32 = a2;
    sub_10047F8E8((uint64_t)v32, v19, isUniquelyReferenced_nonNull_native, a5, a3);
    *Swift::Int v8 = v39;
    swift_bridgeObjectRelease();
    *a1 = v32;
  }
  return 1;
}

void sub_10047B6A0(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_100726920()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1007268E0();
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
      sub_100726680();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v10 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v12 = v4;
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v12 = v4 + 1;
        if (!v15)
        {
          uint64_t v12 = v4 + 2;
          if (v4 + 2 >= v9) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 3;
            if (v4 + 3 >= v9) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v9) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v18 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v4 + 5;
                if (v4 + 5 >= v9) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v18 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_100462C48();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_36;
      }
      while (1)
      {
        Swift::Int v17 = (void *)sub_10047D884(v13);

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (sub_100726950())
        {
          sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v19;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

Swift::Int sub_10047B998(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4)
{
  if (a2)
  {
    sub_100431F80(a3);
    uint64_t v6 = sub_1007269D0();
    uint64_t v19 = v6;
    sub_1007268E0();
    if (sub_100726950())
    {
      sub_100462C50(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v6 = v19;
        unint64_t v13 = *(void *)(v19 + 16);
        if (*(void *)(v19 + 24) <= v13)
        {
          sub_10047E014(v13 + 1, a3);
          uint64_t v6 = v19;
        }
        Swift::Int result = sub_1007267E0(*(void *)(v6 + 40));
        uint64_t v8 = v6 + 56;
        uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v10 = result & ~v9;
        unint64_t v11 = v10 >> 6;
        if (((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6))) != 0)
        {
          unint64_t v12 = __clz(__rbit64((-1 << v10) & ~*(void *)(v6 + 56 + 8 * (v10 >> 6)))) | v10 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v14 = 0;
          unint64_t v15 = (unint64_t)(63 - v9) >> 6;
          do
          {
            if (++v11 == v15 && (v14 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v16 = v11 == v15;
            if (v11 == v15) {
              unint64_t v11 = 0;
            }
            v14 |= v16;
            uint64_t v17 = *(void *)(v8 + 8 * v11);
          }
          while (v17 == -1);
          unint64_t v12 = __clz(__rbit64(~v17)) + (v11 << 6);
        }
        *(void *)(v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
        *(void *)(*(void *)(v6 + 48) + 8 * v12) = v18;
        ++*(void *)(v6 + 16);
      }
      while (sub_100726950());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v6;
}

void *sub_10047BB9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1007268E0();
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    sub_100726680();
    uint64_t v3 = v47;
    uint64_t v4 = v48;
    uint64_t v6 = v49;
    int64_t v5 = v50;
    unint64_t v7 = v51;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  uint64_t v44 = v6;
  int64_t v45 = v5;
  unint64_t v46 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        char v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        char v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v43 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          char v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v45 = v5;
          unint64_t v46 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v43 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v43 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v43 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          char v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      char v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = sub_100726950();
    if (!v16
      || (uint64_t v40 = v16,
          sub_100462C50(0, (unint64_t *)&unk_100A47EC0),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          char v14 = v41,
          swift_unknownObjectRelease(),
          !v41))
    {
LABEL_53:
      sub_100462C48();
      return (void *)v2;
    }
LABEL_19:
    Swift::Int v17 = sub_1007267E0(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = sub_1007267F0();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = sub_1007267F0();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v42;
    uint64_t v6 = v44;
    int64_t v5 = v45;
    unint64_t v7 = v46;
  }
LABEL_47:

  char v32 = *(unsigned char *)(v2 + 32);
  unint64_t v33 = (unint64_t)((1 << v32) + 63) >> 6;
  size_t v34 = 8 * v33;
  if ((v32 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v31);
    memcpy((char *)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v34);
    sub_10047E2B0((unint64_t *)((char *)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0)), v33, v2, v19, &v42);
    uint64_t v36 = v35;
    swift_release();
    sub_100462C48();
  }
  else
  {
    uint64_t v37 = (void *)swift_slowAlloc();
    memcpy(v37, (const void *)(v2 + 56), v34);
    sub_10047E2B0((unint64_t *)v37, v33, v2, v19, &v42);
    uint64_t v36 = v38;
    swift_release();
    sub_100462C48();
    swift_slowDealloc();
  }
  return (void *)v36;
}

double sub_10047C0F4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_10045C784(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    *uint64_t v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_10047D69C();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_100450794((_OWORD *)(*(void *)(v11 + 56) + 32 * v8), a3);
    sub_10047CE78(v8, v11);
    *uint64_t v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

Swift::Int sub_10047C1F8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100431F80(&qword_100A459D8);
    uint64_t v2 = sub_100726BD0();
    uint64_t v18 = v2;
    sub_100726AB0();
    uint64_t v3 = sub_100726B50();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      do
      {
        swift_dynamicCast();
        type metadata accessor for IDSGroupPushMaterialExchangeMember(0);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_10047C434(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = sub_1007267E0(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_100726B50();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptyDictionarySingleton;
  }
  return v2;
}

uint64_t sub_10047C434(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A459D8);
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    id v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_retain();
    }
    uint64_t result = sub_1007267E0(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  id v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10047C70C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A459C8);
  uint64_t result = sub_100726BC0();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v10;
    uint64_t v32 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v19 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v20 = v19 | (v8 << 6);
      }
      else
      {
        int64_t v21 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v33) {
          goto LABEL_33;
        }
        unint64_t v22 = v9[v21];
        ++v8;
        if (!v22)
        {
          int64_t v8 = v21 + 1;
          if (v21 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v22 = v9[v8];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v33);
                }
                else {
                  uint64_t *v9 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v9[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v8 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v22 = v9[v8];
                ++v23;
                if (v22) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v23;
          }
        }
LABEL_30:
        unint64_t v12 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v8 << 6);
      }
      uint64_t v28 = 8 * v20;
      uint64_t v29 = *(void *)(*(void *)(v5 + 48) + v28);
      uint64_t v30 = *(void *)(*(void *)(v5 + 56) + v28);
      if ((a2 & 1) == 0) {
        swift_retain();
      }
      uint64_t result = sub_100726DC0();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v13 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v26 = v16 == v25;
          if (v16 == v25) {
            unint64_t v16 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v16);
        }
        while (v27 == -1);
        unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
      }
      *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = 8 * v17;
      *(void *)(*(void *)(v7 + 48) + v18) = v29;
      *(void *)(*(void *)(v7 + 56) + v18) = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_10047C9C4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80((uint64_t *)&unk_100A48A90);
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      char v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_100450794(v24, v35);
      }
      else
      {
        sub_10044C6FC((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_100726DD0();
      sub_100726490();
      uint64_t result = sub_100726E30();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_100450794(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_10047CCC4(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1007268A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = sub_1007267E0(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            unint64_t v17 = (void *)(v16 + 8 * v3);
            int64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *unint64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            int64_t v20 = (void *)(v19 + 8 * v3);
            int64_t v21 = (void *)(v19 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *int64_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *uint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_10047CE78(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1007268A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_100726DD0();
        swift_bridgeObjectRetain();
        sub_100726490();
        Swift::Int v10 = sub_100726E30();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 < v8) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(a2 + 48);
          Swift::Int v13 = (_OWORD *)(v12 + 16 * v3);
          unint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v3 != v6 || v13 >= v14 + 1) {
            *Swift::Int v13 = *v14;
          }
          uint64_t v15 = *(void *)(a2 + 56);
          uint64_t v16 = (_OWORD *)(v15 + 32 * v3);
          unint64_t v17 = (_OWORD *)(v15 + 32 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 2))
          {
            long long v9 = v17[1];
            *uint64_t v16 = *v17;
            v16[1] = v9;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  uint64_t *v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_10047D050(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10045C7FC(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_10047D4F8();
LABEL_7:
    uint64_t v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_release();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
LABEL_11:
    v16[(v10 >> 6) + 8] |= 1 << v10;
    uint64_t v19 = 8 * v10;
    *(void *)(v16[6] + v19) = a2;
    *(void *)(v16[7] + v19) = a1;
    uint64_t v20 = v16[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (!v21)
    {
      v16[2] = v22;
      return result;
    }
    goto LABEL_14;
  }
  sub_10047C70C(result, a3 & 1);
  uint64_t result = sub_10045C7FC(a2);
  if ((v14 & 1) == (v18 & 1))
  {
    unint64_t v10 = result;
    uint64_t v16 = (void *)*v4;
    if (v14) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_100726D40();
  __break(1u);
  return result;
}

_OWORD *sub_10047D18C(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_10045C784(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_10047D69C();
      goto LABEL_7;
    }
    sub_10047C9C4(v15, a4 & 1);
    unint64_t v21 = sub_10045C784(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      char v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_100726D40();
    __break(1u);
    return result;
  }
LABEL_7:
  char v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    sub_10044C6AC((uint64_t)v19);
    return sub_100450794(a1, v19);
  }
LABEL_13:
  sub_10047D2E0(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

_OWORD *sub_10047D2E0(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_100450794(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

void *sub_10047D34C()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A459D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10047D4F8()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A459C8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    uint64_t result = (void *)swift_retain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_10047D69C()
{
  uint64_t v1 = v0;
  sub_100431F80((uint64_t *)&unk_100A48A90);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 32 * v15;
    sub_10044C6FC(*(void *)(v2 + 56) + 32 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_100450794(v26, (_OWORD *)(*(void *)(v4 + 56) + v20));
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10047D884(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = sub_100726960();

    if (v6)
    {
      uint64_t v7 = sub_10047E888();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = sub_1007267E0(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = sub_1007267F0();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = sub_1007267F0();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10047EBF0(&qword_100A459E0);
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_10047F2BC(v11);
  uint64_t *v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10047DA64@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  sub_10048156C(&qword_100A44D18, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  swift_bridgeObjectRetain();
  uint64_t v24 = v3;
  uint64_t v9 = sub_1007263D0();
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  unint64_t v11 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    unint64_t v21 = v1;
    uint64_t v22 = v4;
    uint64_t v23 = a1;
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v4 + 72);
    while (1)
    {
      sub_1004828A0(*(void *)(v8 + 48) + v13 * v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10048156C(&qword_100A44D20, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      char v14 = sub_100726410();
      sub_100482970((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      if (v14) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      if (((*(void *)(v8 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v15 = 1;
        uint64_t v4 = v22;
        a1 = v23;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v15, 1, v24);
      }
    }
    swift_bridgeObjectRelease();
    char v16 = v21;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v16;
    uint64_t v25 = *v16;
    *char v16 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10043FD98();
      uint64_t v18 = v25;
    }
    a1 = v23;
    sub_100482908(*(void *)(v18 + 48) + v13 * v11, v23, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_10047F460(v11);
    *char v16 = v25;
    swift_bridgeObjectRelease();
    uint64_t v15 = 0;
    uint64_t v4 = v22;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v15 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(a1, v15, 1, v24);
}

uint64_t sub_10047DD34()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100431F80(&qword_100A46D30);
  uint64_t v3 = sub_1007269C0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      uint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_100726DD0();
      sub_100726490();
      uint64_t result = sub_100726E30();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_10047E014(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100431F80(a2);
  uint64_t v5 = sub_1007269C0();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    BOOL v30 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    int64_t v8 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v4 + 56);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v12 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v11) {
            goto LABEL_33;
          }
          unint64_t v19 = v8[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v11) {
              goto LABEL_33;
            }
            unint64_t v19 = v8[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v4 + 32);
                if (v29 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v29;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v11) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v8[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v4 + 48) + 8 * v17);
      uint64_t result = sub_1007267E0(*(void *)(v6 + 40));
      uint64_t v22 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v6 + 48) + 8 * v15) = v21;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

void sub_10047E2B0(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a5;
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v37 = a3 + 56;
  while (2)
  {
    uint64_t v34 = v8;
    do
    {
      while (1)
      {
        if ((*v5 & 0x8000000000000000) == 0)
        {
          int64_t v10 = v5[3];
          unint64_t v9 = v5[4];
          if (v9)
          {
            uint64_t v11 = (v9 - 1) & v9;
            unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_7:
            uint64_t v13 = *(void **)(*(void *)(*v5 + 48) + 8 * v12);
            id v14 = v13;
            goto LABEL_8;
          }
          int64_t v27 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_47;
          }
          int64_t v28 = (unint64_t)(v5[2] + 64) >> 6;
          if (v27 >= v28)
          {
            uint64_t v13 = 0;
            uint64_t v11 = 0;
            goto LABEL_8;
          }
          uint64_t v29 = v5[1];
          unint64_t v30 = *(void *)(v29 + 8 * v27);
          if (v30)
          {
LABEL_22:
            uint64_t v11 = (v30 - 1) & v30;
            unint64_t v12 = __clz(__rbit64(v30)) + (v27 << 6);
            int64_t v10 = v27;
            goto LABEL_7;
          }
          if (v10 + 2 < v28)
          {
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 2));
            if (v30)
            {
              int64_t v27 = v10 + 2;
              goto LABEL_22;
            }
            if (v10 + 3 >= v28)
            {
              uint64_t v13 = 0;
              uint64_t v11 = 0;
              v10 += 2;
              goto LABEL_8;
            }
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 3));
            if (v30)
            {
              int64_t v27 = v10 + 3;
              goto LABEL_22;
            }
            int64_t v27 = v10 + 4;
            if (v10 + 4 >= v28)
            {
              uint64_t v13 = 0;
              uint64_t v11 = 0;
              v10 += 3;
LABEL_8:
              v5[3] = v10;
              v5[4] = v11;
              if (!v13) {
                goto LABEL_45;
              }
              goto LABEL_12;
            }
            unint64_t v30 = *(void *)(v29 + 8 * v27);
            if (v30) {
              goto LABEL_22;
            }
            int64_t v27 = v28 - 1;
            int64_t v32 = v10 + 5;
            while (v28 != v32)
            {
              unint64_t v30 = *(void *)(v29 + 8 * v32++);
              if (v30)
              {
                int64_t v27 = v32 - 1;
                goto LABEL_22;
              }
            }
          }
          uint64_t v13 = 0;
          uint64_t v11 = 0;
          int64_t v10 = v27;
          goto LABEL_8;
        }
        if (!sub_100726950()
          || (sub_100462C50(0, (unint64_t *)&unk_100A47EC0),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              uint64_t v13 = v38,
              swift_unknownObjectRelease(),
              !v38))
        {
LABEL_45:
          swift_retain();
          sub_10047E628(a1, a2, v34, a3);
          return;
        }
LABEL_12:
        Swift::Int v15 = sub_1007267E0(*(void *)(a3 + 40));
        uint64_t v16 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v17 = v15 & ~v16;
        unint64_t v18 = v17 >> 6;
        uint64_t v19 = 1 << v17;
        if (((1 << v17) & *(void *)(v37 + 8 * (v17 >> 6))) == 0) {
          goto LABEL_3;
        }
        sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
        id v20 = *(id *)(*(void *)(a3 + 48) + 8 * v17);
        char v21 = sub_1007267F0();

        if (v21) {
          break;
        }
        uint64_t v22 = ~v16;
        for (unint64_t i = v17 + 1; ; unint64_t i = v24 + 1)
        {
          unint64_t v24 = i & v22;
          if (((*(void *)(v37 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0) {
            break;
          }
          id v25 = *(id *)(*(void *)(a3 + 48) + 8 * v24);
          char v26 = sub_1007267F0();

          if (v26)
          {

            unint64_t v18 = v24 >> 6;
            uint64_t v19 = 1 << v24;
            goto LABEL_25;
          }
        }
LABEL_3:

        uint64_t v5 = a5;
      }

LABEL_25:
      uint64_t v5 = a5;
      unint64_t v31 = a1[v18];
      a1[v18] = v31 & ~v19;
    }
    while ((v19 & v31) == 0);
    uint64_t v8 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v34 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_10047E628(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100431F80(&qword_100A459E0);
  uint64_t result = sub_1007269E0();
  unint64_t v9 = (void *)result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1007267E0(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10047E888()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_100726920();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_10047B998(v3, v2, &qword_100A459E0, (unint64_t *)&unk_100A47EC0);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = sub_1007267E0(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = sub_1007267F0();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_10047F2BC(v8);
      if (sub_1007267F0())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = sub_1007267F0();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void *sub_10047EA3C()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A46D30);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1007269B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    id v19 = (void *)(*(void *)(v4 + 48) + v16);
    *id v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_10047EBF0(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_100431F80(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1007269B0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v2 = v5;
    return result;
  }
  id result = (id)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20)
      {
        int64_t v10 = v19 + 2;
        if (v19 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v20 = *(void *)(v7 + 8 * v10);
        if (!v20) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 3;
  if (v21 >= v14) {
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_10047ED94()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100431F80(&qword_100A46D30);
  uint64_t v3 = sub_1007269C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    int64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_100726DD0();
    swift_bridgeObjectRetain();
    sub_100726490();
    uint64_t result = sub_100726E30();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10047F044(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_100431F80(a2);
  uint64_t v5 = sub_1007269C0();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  unint64_t v30 = v2;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v11 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v12 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v8 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v11) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v8 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    Swift::Int v21 = *(void *)(v6 + 40);
    id v22 = *(id *)(*(void *)(v4 + 48) + 8 * v17);
    uint64_t result = sub_1007267E0(v21);
    uint64_t v23 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v6 + 48) + 8 * v15) = v22;
    ++*(void *)(v6 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v11)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v30;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v8 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v11) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v8 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_10047F2BC(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1007268A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = sub_1007267E0(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            unint64_t v17 = (void *)(v16 + 8 * v2);
            int64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *unint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_10047F460(int64_t a1)
{
  uint64_t v29 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v3 = *(void *)(v29 - 8);
  uint64_t result = __chkstk_darwin(v29, v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v9 = *v1 + 56;
  uint64_t v10 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(v9 + 8 * (v11 >> 6))) != 0)
  {
    unint64_t v27 = v1;
    uint64_t v12 = ~v10;
    swift_retain();
    uint64_t v13 = sub_1007268A0();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v28 = (v13 + 1) & v12;
      uint64_t v14 = *(void *)(v3 + 72);
      do
      {
        uint64_t v15 = v9;
        int64_t v16 = v14 * v11;
        sub_1004828A0(*(void *)(v8 + 48) + v14 * v11, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        sub_10048156C(&qword_100A44D18, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v17 = sub_1007263D0();
        sub_100482970((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        unint64_t v18 = v17 & v12;
        if (a1 >= (uint64_t)v28)
        {
          if (v18 >= v28 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            int64_t v21 = v14 * a1;
            uint64_t v9 = v15;
            if (v14 * a1 < v16
              || *(void *)(v8 + 48) + v14 * a1 >= (unint64_t)(*(void *)(v8 + 48) + v16 + v14))
            {
              swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
            }
            else
            {
              a1 = v11;
              if (v21 != v16)
              {
                swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v28 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v15;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v27;
  }
  else
  {
    *(void *)(v9 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v22 = *v1;
  uint64_t v23 = *(void *)(*v1 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v22 + 16) = v25;
    ++*(_DWORD *)(v22 + 36);
  }
  return result;
}

Swift::Int sub_10047F74C(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_10047DD34();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_10047EA3C();
      goto LABEL_22;
    }
    sub_10047ED94();
  }
  uint64_t v11 = *v4;
  sub_100726DD0();
  sub_100726490();
  uint64_t result = sub_100726E30();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_100726D20(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_100726D30();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_100726D20();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  int64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *int64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void sub_10047F8E8(uint64_t a1, unint64_t a2, char a3, uint64_t *a4, unint64_t *a5)
{
  unint64_t v9 = *(void *)(*v5 + 16);
  unint64_t v10 = *(void *)(*v5 + 24);
  if (v10 > v9 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v11 = v9 + 1;
  if (a3)
  {
    sub_10047E014(v11, a4);
  }
  else
  {
    if (v10 > v9)
    {
      sub_10047EBF0(a4);
      goto LABEL_14;
    }
    sub_10047F044(v11, a4);
  }
  uint64_t v12 = *v5;
  Swift::Int v13 = sub_1007267E0(*(void *)(*v5 + 40));
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100462C50(0, a5);
    id v15 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
    char v16 = sub_1007267F0();

    if (v16)
    {
LABEL_13:
      sub_100726D30();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v14;
      while (1)
      {
        a2 = (a2 + 1) & v17;
        if (((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v12 + 48) + 8 * a2);
        char v19 = sub_1007267F0();

        if (v19) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v20 + 48) + 8 * a2) = a1;
  uint64_t v21 = *(void *)(v20 + 16);
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v23;
  }
}

uint64_t sub_10047FA7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_100431F80(&qword_100A459D8);
  uint64_t result = sub_100726BE0();
  uint64_t v8 = result;
  uint64_t v31 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 64;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
    }
    else
    {
      uint64_t v14 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_40;
      }
      if (v14 >= v31) {
        return v8;
      }
      unint64_t v15 = a1[v14];
      ++v10;
      if (!v15)
      {
        uint64_t v10 = v14 + 1;
        if (v14 + 1 >= v31) {
          return v8;
        }
        unint64_t v15 = a1[v10];
        if (!v15)
        {
          uint64_t v10 = v14 + 2;
          if (v14 + 2 >= v31) {
            return v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v16 = v14 + 3;
            if (v16 >= v31) {
              return v8;
            }
            unint64_t v15 = a1[v16];
            if (!v15)
            {
              while (1)
              {
                uint64_t v10 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_41;
                }
                if (v10 >= v31) {
                  return v8;
                }
                unint64_t v15 = a1[v10];
                ++v16;
                if (v15) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v10 = v16;
          }
        }
      }
LABEL_24:
      unint64_t v9 = (v15 - 1) & v15;
      unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
    }
    uint64_t v17 = 8 * v13;
    uint64_t v18 = *(void *)(*(void *)(v4 + 56) + v17);
    Swift::Int v19 = *(void *)(v8 + 40);
    id v20 = *(id *)(*(void *)(v4 + 48) + v17);
    swift_retain();
    uint64_t result = sub_1007267E0(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v24 = __clz(__rbit64((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v27 = v23 == v26;
        if (v23 == v26) {
          unint64_t v23 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v23);
      }
      while (v28 == -1);
      unint64_t v24 = __clz(__rbit64(~v28)) + (v23 << 6);
    }
    *(void *)(v11 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    uint64_t v29 = 8 * v24;
    *(void *)(*(void *)(v8 + 48) + v29) = v20;
    *(void *)(*(void *)(v8 + 56) + v29) = v18;
    ++*(void *)(v8 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v8;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void sub_10047FD14(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  if ((a3 & 1) == 0)
  {
    if (a1 < 0 || -(-1 << *(unsigned char *)(a4 + 32)) <= a1)
    {
      __break(1u);
    }
    else if ((*(void *)(a4 + 64 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a1))
    {
      if (*(_DWORD *)(a4 + 36) == a2)
      {
        sub_1007268B0();
        return;
      }
      goto LABEL_12;
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (sub_100726AF0() != *(_DWORD *)(a4 + 36))
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_100726B00();
  sub_100482D78(a1, a2, 1);
  sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  swift_unknownObjectRelease();
  sub_10047B0C4((uint64_t)v8);
  char v7 = v6;

  if (v7)
  {
    sub_100726AD0();
    sub_100726B20();
    sub_100482640(a1, a2, 1);
    swift_unknownObjectRelease();
    return;
  }
LABEL_14:
  __break(1u);
}

void sub_10047FEB4(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v5 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_100726AC0();
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_19;
  }
  if (a3)
  {
LABEL_10:
    if (sub_100726AF0() == *(_DWORD *)(a4 + 36))
    {
      sub_100726B00();
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v5 = sub_10047B0C4((uint64_t)v10);
      char v7 = v6;

      if (v7) {
        goto LABEL_12;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 64) >> a1) & 1) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v8 = *(void **)(*(void *)(a4 + 48) + 8 * v5);

  id v9 = v8;
}

uint64_t sub_100480080(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  id v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100480130(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  id v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1004801D0(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1004802B4(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_100726940();
      type metadata accessor for IDSGroupEncryptionControllerMember();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (sub_100726900() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_100726910();
  type metadata accessor for IDSGroupEncryptionControllerMember();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = sub_1007267E0(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = sub_1007267F0();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = sub_1007267F0();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  uint64_t v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_10048050C@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    uint64_t v6 = *(void *)(a3 + 48);
    uint64_t v7 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
    return sub_1004828A0(v6 + *(void *)(*(void *)(v7 - 8) + 72) * v4, a4, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1004805BC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_100480644(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0) {
    return sub_100726AA0();
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2)
  {
    uint64_t v3 = 0;
    return __clz(__rbit64(v2)) + v3;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v1 = 1 << v5;
  if (v6 < 7) {
    return v1;
  }
  unint64_t v2 = *(void *)(a1 + 72);
  if (v2)
  {
    uint64_t v3 = 64;
    return __clz(__rbit64(v2)) + v3;
  }
  unint64_t v7 = (unint64_t)(v1 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  id v9 = (unint64_t *)(a1 + 80);
  uint64_t v3 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v2 = v10;
    --v8;
    v3 += 64;
    if (v10) {
      return __clz(__rbit64(v2)) + v3;
    }
  }
  return v1;
}

void sub_100480708(void *a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  unint64_t v6 = a2;
  if ((a5 & 0xC000000000000001) != 0)
  {
    if (a4)
    {
      sub_100726B30();
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      type metadata accessor for IDSGroupPushMaterialExchangeMember(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v11;
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_18;
  }
  if (a4)
  {
LABEL_10:
    if (sub_100726AF0() == *(_DWORD *)(a5 + 36))
    {
      sub_100726B00();
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v6 = sub_10047B0C4((uint64_t)v11);
      char v9 = v8;

      if (v9) {
        goto LABEL_12;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      __break(1u);
      return;
    }
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(_DWORD *)(a5 + 36) != a3)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  unint64_t v10 = *(void **)(*(void *)(a5 + 48) + 8 * v6);
  *a1 = *(void *)(*(void *)(a5 + 56) + 8 * v6);
  v10;
  swift_retain();
}

unint64_t sub_100480928(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100431F80(&qword_100A459C8);
  uint64_t v3 = (void *)sub_100726BE0();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_10045C7FC(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v3;
  }
  char v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    char v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_retain();
    unint64_t result = sub_10045C7FC(v5);
    char v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

id sub_100480A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = v8;
  sub_1004DFE9C(2);
  *(void *)&v16[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  uint64_t v17 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_participantsById;
  *(void *)&v16[v17] = sub_100480928(_swiftEmptyArrayStorage);
  uint64_t v18 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_membersByURI;
  *(void *)&v16[v18] = sub_10046EBDC((uint64_t)_swiftEmptyArrayStorage);
  Swift::Int v19 = &v16[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_desiredPublicIdentity];
  uint64_t v20 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
  uint64_t v21 = OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_lock;
  sub_100431F80((uint64_t *)&unk_100A454B0);
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 16) = 0;
  *(void *)&v16[v21] = v22;
  unint64_t v23 = &v16[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cachedKeyPropagationProvider];
  *(void *)&v16[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cachedKeyPropagationProvider
                + 8] = 0;
  swift_unknownObjectWeakInit();
  unint64_t v24 = &v16[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_groupID];
  *(void *)unint64_t v24 = a1;
  *((void *)v24 + 1) = a2;
  char v25 = &v16[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_sessionID];
  *(void *)char v25 = a3;
  *((void *)v25 + 1) = a4;
  *(void *)&v16[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_pushHandler] = a7;
  sub_1004407E0(a8, (uint64_t)&v16[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_cryptoHandler]);
  swift_beginAccess();
  *((void *)v23 + 1) = a6;
  swift_unknownObjectWeakAssign();
  swift_unknownObjectRetain();

  v28.receiver = v16;
  v28.super_class = (Class)type metadata accessor for IDSGroupPushMaterialExchangeController(0);
  id v26 = objc_msgSendSuper2(&v28, "init");
  sub_10044C6AC(a8);
  return v26;
}

uint64_t sub_100480C20(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100462C50(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for IDSGroupPushMaterialExchangeMember(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A4D660);
}

uint64_t sub_100480C90()
{
  uint64_t v1 = *(void *)(v0 + 24);
  id v2 = *(id *)(v0 + 16);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = (char *)v2;
  uint64_t v4 = sub_100725EB0();
  os_log_type_t v5 = sub_1007266E0();
  unint64_t v6 = &qword_100794000;
  if (os_log_type_enabled(v4, v5))
  {
    os_log_type_t typea = v5;
    uint64_t v7 = swift_slowAlloc();
    v66[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315650;
    sub_10043E578(0xD000000000000019, 0x80000001008C1DA0, v66);
    sub_100726830();
    *(_WORD *)(v7 + 12) = 2080;
    swift_beginAccess();
    type metadata accessor for IDSGroupPushMaterialExchangeParticipant();
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1007263C0();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_10043E578(v8, v10, v66);
    sub_100726830();
    swift_bridgeObjectRelease();

    *(_WORD *)(v7 + 22) = 2080;
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    sub_10048156C((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100726650();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    v65[0] = sub_10043E578(v11, v13, v66);
    sub_100726830();
    unint64_t v6 = &qword_100794000;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, typea, "%s: updating active participants from %s to:%s)", (uint8_t *)v7, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v58 = v3;
  unint64_t v59 = sub_100480928(&_swiftEmptyArrayStorage);
  if ((v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1007268E0();
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    sub_10048156C((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
    sub_100726680();
    uint64_t v1 = v66[0];
    uint64_t v62 = v66[1];
    uint64_t v14 = v66[2];
    uint64_t v15 = v66[3];
    unint64_t v16 = v66[4];
  }
  else
  {
    uint64_t v17 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v62 = v1 + 56;
    uint64_t v14 = ~v17;
    uint64_t v18 = -v17;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v16 = v19 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v15 = 0;
  }
  int64_t v60 = (unint64_t)(v14 + 64) >> 6;
  int v61 = v6[23];
  *(void *)type = v1;
  if ((v1 & 0x8000000000000000) == 0) {
    goto LABEL_14;
  }
LABEL_32:
  uint64_t v27 = sub_100726950();
  if (!v27) {
    goto LABEL_49;
  }
  v66[7] = v27;
  type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  id v26 = (char *)v65[0];
  swift_unknownObjectRelease();
  uint64_t v22 = v15;
  uint64_t v20 = v16;
  if (!v26) {
    goto LABEL_49;
  }
  while (1)
  {
    objc_super v28 = (uint64_t *)&v26[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_allocatedURI];
    id v29 = objc_allocWithZone((Class)IDSURI);
    swift_bridgeObjectRetain();
    NSString v30 = sub_100726420();
    swift_bridgeObjectRelease();
    id v31 = [v29 initWithPrefixedURI:v30];

    if (v31)
    {
      uint64_t v38 = *(void *)&v26[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID];
      id v39 = *(id *)&v26[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken];
      uint64_t v57 = sub_1004776F0(v39, v31, v38);

      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v65[0] = v59;
      unint64_t v42 = sub_10045C7FC(v38);
      uint64_t v43 = *(void *)(v59 + 16);
      BOOL v44 = (v41 & 1) == 0;
      uint64_t v45 = v43 + v44;
      if (__OFADD__(v43, v44)) {
        goto LABEL_51;
      }
      unint64_t v46 = (void *)v59;
      char v47 = v41;
      if (*(void *)(v59 + 24) >= v45)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_10047D4F8();
          unint64_t v46 = (void *)v65[0];
        }
      }
      else
      {
        sub_10047C70C(v45, isUniquelyReferenced_nonNull_native);
        uint64_t v48 = v65[0];
        unint64_t v49 = sub_10045C7FC(v38);
        if ((v47 & 1) != (v50 & 1)) {
          goto LABEL_53;
        }
        unint64_t v42 = v49;
        unint64_t v46 = (void *)v48;
      }
      unint64_t v59 = (unint64_t)v46;
      if (v47)
      {
        uint64_t v51 = v46[7];
        swift_release();
        *(void *)(v51 + 8 * v42) = v57;
      }
      else
      {
        v46[(v42 >> 6) + 8] |= 1 << v42;
        *(void *)(v46[6] + 8 * v42) = v38;
        *(void *)(v46[7] + 8 * v42) = v57;
        uint64_t v52 = v46[2];
        BOOL v53 = __OFADD__(v52, 1);
        uint64_t v54 = v52 + 1;
        if (v53) {
          goto LABEL_52;
        }
        v46[2] = v54;
      }
      swift_bridgeObjectRelease();

      uint64_t v1 = *(void *)type;
      unint64_t v16 = v20;
      uint64_t v15 = v22;
      if ((*(void *)type & 0x8000000000000000) != 0) {
        goto LABEL_32;
      }
    }
    else
    {
      int64_t v32 = v26;
      int64_t v33 = sub_100725EB0();
      os_log_type_t v34 = sub_1007266E0();
      if (os_log_type_enabled(v33, v34))
      {
        uint64_t v35 = swift_slowAlloc();
        v65[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v35 = v61;
        *(void *)(v35 + 4) = sub_10043E578(0xD000000000000019, 0x80000001008C1DA0, v65);
        *(_WORD *)(v35 + 12) = 2048;
        *(void *)(v35 + 14) = *(void *)&v32[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID];

        *(_WORD *)(v35 + 22) = 2080;
        uint64_t v36 = *v28;
        unint64_t v37 = v28[1];
        swift_bridgeObjectRetain();
        *(void *)(v35 + 24) = sub_10043E578(v36, v37, v65);
        swift_bridgeObjectRelease();

        _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s: participant %llu has no URI:%s)", (uint8_t *)v35, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v15 = v22;
      unint64_t v16 = v20;
      uint64_t v1 = *(void *)type;
      if ((*(void *)type & 0x8000000000000000) != 0) {
        goto LABEL_32;
      }
    }
LABEL_14:
    if (!v16) {
      break;
    }
    uint64_t v20 = (v16 - 1) & v16;
    unint64_t v21 = __clz(__rbit64(v16)) | (v15 << 6);
    uint64_t v22 = v15;
LABEL_30:
    id v26 = (char *)*(id *)(*(void *)(v1 + 48) + 8 * v21);
    if (!v26) {
      goto LABEL_49;
    }
  }
  int64_t v23 = v15 + 1;
  if (__OFADD__(v15, 1))
  {
    __break(1u);
LABEL_51:
    __break(1u);
LABEL_52:
    __break(1u);
LABEL_53:
    uint64_t result = sub_100726D40();
    __break(1u);
    return result;
  }
  if (v23 >= v60) {
    goto LABEL_49;
  }
  unint64_t v24 = *(void *)(v62 + 8 * v23);
  uint64_t v22 = v15 + 1;
  if (v24) {
    goto LABEL_29;
  }
  uint64_t v22 = v15 + 2;
  if (v15 + 2 >= v60) {
    goto LABEL_49;
  }
  unint64_t v24 = *(void *)(v62 + 8 * v22);
  if (v24) {
    goto LABEL_29;
  }
  uint64_t v22 = v15 + 3;
  if (v15 + 3 >= v60) {
    goto LABEL_49;
  }
  unint64_t v24 = *(void *)(v62 + 8 * v22);
  if (v24) {
    goto LABEL_29;
  }
  uint64_t v22 = v15 + 4;
  if (v15 + 4 >= v60) {
    goto LABEL_49;
  }
  unint64_t v24 = *(void *)(v62 + 8 * v22);
  if (v24)
  {
LABEL_29:
    uint64_t v20 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v22 << 6);
    goto LABEL_30;
  }
  uint64_t v25 = v15 + 5;
  while (v60 != v25)
  {
    unint64_t v24 = *(void *)(v62 + 8 * v25++);
    if (v24)
    {
      uint64_t v22 = v25 - 1;
      goto LABEL_29;
    }
  }
LABEL_49:
  sub_100462C48();
  uint64_t v55 = (unint64_t *)&v58[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_participantsById];
  swift_beginAccess();
  unint64_t *v55 = v59;
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048156C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004815B4(uint64_t a1, uint64_t a2)
{
  return sub_10047207C(a2, *(void **)(v2 + 16));
}

uint64_t sub_1004815C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_100726660();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10047B224(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_100481658(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  unint64_t v10 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_100726BA0();
    swift_bridgeObjectRelease();
  }
  sub_100462C50(0, a2);
  sub_100480C20(a4, a2);
  uint64_t result = sub_100726660();
  uint64_t v18 = result;
  if (v10)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_100726BA0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v12) {
      return v18;
    }
  }
  else
  {
    uint64_t v12 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v12) {
      return v18;
    }
  }
  if (v12 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v12; ++i)
      {
        uint64_t v14 = (void *)sub_100726A10();
        sub_10047B3D4(&v17, v14, a2, a3, a5);
      }
    }
    else
    {
      uint64_t v15 = (void **)(a1 + 32);
      do
      {
        unint64_t v16 = *v15++;
        sub_10047B3D4(&v17, v16, a2, a3, a5);

        --v12;
      }
      while (v12);
    }
    return v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004817E8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100431F80(&qword_100A45678);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

Swift::Int sub_1004818F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100431F80(&qword_100A46D30);
    uint64_t v3 = sub_1007269E0();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      unint64_t v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_100726DD0();
      swift_bridgeObjectRetain();
      sub_100726490();
      Swift::Int result = sub_100726E30();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        unint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = sub_100726D20(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          uint64_t v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = sub_100726D20();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      unint64_t v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *unint64_t v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

uint64_t sub_100481A98(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(id, uint64_t))
{
  uint64_t v20 = (unint64_t *)result;
  uint64_t v21 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v23 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v23) {
      return sub_10047FA7C(v20, a2, v21, a3);
    }
    unint64_t v16 = *(void *)(v22 + 8 * v15);
    ++v6;
    if (!v16)
    {
      int64_t v6 = v15 + 1;
      if (v15 + 1 >= v23) {
        return sub_10047FA7C(v20, a2, v21, a3);
      }
      unint64_t v16 = *(void *)(v22 + 8 * v6);
      if (!v16)
      {
        int64_t v6 = v15 + 2;
        if (v15 + 2 >= v23) {
          return sub_10047FA7C(v20, a2, v21, a3);
        }
        unint64_t v16 = *(void *)(v22 + 8 * v6);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v11 = __clz(__rbit64(v16)) + (v6 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(*(void *)(a3 + 56) + 8 * v11);
    id v13 = *(id *)(*(void *)(a3 + 48) + 8 * v11);
    swift_retain();
    char v14 = a4(v13, v12);

    Swift::Int result = swift_release();
    if (v14)
    {
      *(unint64_t *)((char *)v20 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v21++, 1))
      {
        __break(1u);
        return sub_10047FA7C(v20, a2, v21, a3);
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v23) {
    return sub_10047FA7C(v20, a2, v21, a3);
  }
  unint64_t v16 = *(void *)(v22 + 8 * v17);
  if (v16)
  {
    int64_t v6 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v23) {
      return sub_10047FA7C(v20, a2, v21, a3);
    }
    unint64_t v16 = *(void *)(v22 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_100481C94(uint64_t isStackAllocationSafe, uint64_t (*a2)(id, uint64_t), uint64_t a3)
{
  uint64_t v6 = isStackAllocationSafe;
  char v7 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v8 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v9 = 8 * v8;
  if ((v7 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v9);
    uint64_t v10 = sub_100481A98((uint64_t)&v13 - ((v9 + 15) & 0x3FFFFFFFFFFFFFF0), v8, v6, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      return v10;
    }
  }
  else
  {
    unint64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v9);
    a3 = sub_100481A98((uint64_t)v11, v8, v6, a2);
    swift_slowDealloc();
  }
  return a3;
}

Swift::Int sub_100481E0C(uint64_t a1, uint64_t (*a2)(id, uint64_t), uint64_t a3)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = &_swiftEmptyDictionarySingleton;
    sub_100726AB0();
    if (sub_100726B50())
    {
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      do
      {
        swift_dynamicCast();
        type metadata accessor for IDSGroupPushMaterialExchangeMember(0);
        swift_dynamicCast();
        id v7 = v22;
        swift_retain();
        char v8 = ((uint64_t (*)(id))a2)(v7);

        swift_release();
        if (v8)
        {
          unint64_t v9 = *((void *)&_swiftEmptyDictionarySingleton + 2);
          if (*((void *)&_swiftEmptyDictionarySingleton + 3) <= v9)
          {
            uint64_t v11 = v9 + 1;
            id v12 = v7;
            swift_retain();
            sub_10047C434(v11, 1);
          }
          else
          {
            id v10 = v7;
            swift_retain();
          }
          Swift::Int result = sub_1007267E0(*((void *)&_swiftEmptyDictionarySingleton + 5));
          char v14 = (char *)&_swiftEmptyDictionarySingleton + 64;
          uint64_t v15 = -1 << *((unsigned char *)&_swiftEmptyDictionarySingleton + 32);
          unint64_t v16 = result & ~v15;
          unint64_t v17 = v16 >> 6;
          if (((-1 << v16) & ~*((void *)&_swiftEmptyDictionarySingleton + (v16 >> 6) + 8)) != 0)
          {
            unint64_t v5 = __clz(__rbit64((-1 << v16) & ~*((void *)&_swiftEmptyDictionarySingleton + (v16 >> 6) + 8))) | v16 & 0x7FFFFFFFFFFFFFC0;
          }
          else
          {
            char v18 = 0;
            unint64_t v19 = (unint64_t)(63 - v15) >> 6;
            do
            {
              if (++v17 == v19 && (v18 & 1) != 0)
              {
                __break(1u);
                return result;
              }
              BOOL v20 = v17 == v19;
              if (v17 == v19) {
                unint64_t v17 = 0;
              }
              v18 |= v20;
              uint64_t v21 = *(void *)&v14[8 * v17];
            }
            while (v21 == -1);
            unint64_t v5 = __clz(__rbit64(~v21)) + (v17 << 6);
          }
          *(void *)&v14[(v5 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v5;
          uint64_t v6 = 8 * v5;
          *(void *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + v6) = v7;
          *(void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + v6) = v23;
          ++*((void *)&_swiftEmptyDictionarySingleton + 2);
        }
        swift_release();
      }
      while (sub_100726B50());
      uint64_t v4 = &_swiftEmptyDictionarySingleton;
    }
    sub_100462C48();
  }
  else
  {
    uint64_t v4 = (void *)sub_100481C94(a1, a2, a3);
    swift_bridgeObjectRelease();
  }
  return (Swift::Int)v4;
}

uint64_t sub_1004820EC()
{
  uint64_t v1 = (int *)(type metadata accessor for IDSGroupEncryptionPublicIdentity(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 40) & ~v2;
  uint64_t v4 = v2 | 7;
  unint64_t v5 = (*(void *)(*(void *)v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  sub_100442248(*(void *)(v0 + 24), *(void *)(v0 + 32));
  uint64_t v6 = v0 + v3;

  uint64_t v7 = v0 + v3 + v1[8];
  uint64_t v8 = sub_100725CC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  return _swift_deallocObject(v0, v5 + 8, v4);
}

void sub_100482220()
{
  uint64_t v1 = (int *)(type metadata accessor for IDSGroupEncryptionPublicIdentity(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  unint64_t v5 = v0[4];
  BOOL v20 = (char *)v0 + v2;
  uint64_t v21 = *(void *)((char *)v0 + ((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *(void **)(v3 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_pushHandler);
  sub_100431F80(&qword_100A45660);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1007955D0;
  *(void *)(inited + 32) = sub_100726430();
  *(void *)(inited + 40) = v8;
  uint64_t v9 = *(void *)(v3 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_groupID);
  uint64_t v10 = *(void *)(v3 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_groupID + 8);
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 48) = v9;
  *(void *)(inited + 56) = v10;
  *(void *)(inited + 80) = sub_100726430();
  *(void *)(inited + 88) = v11;
  uint64_t v13 = *(void *)(v3 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_sessionID);
  uint64_t v12 = *(void *)(v3 + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_sessionID + 8);
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 96) = v13;
  *(void *)(inited + 104) = v12;
  *(void *)(inited + 128) = sub_100726430();
  *(void *)(inited + 136) = v14;
  *(void *)(inited + 168) = &type metadata for Data;
  *(void *)(inited + 144) = v4;
  *(void *)(inited + 152) = v5;
  *(void *)(inited + 176) = sub_100726430();
  *(void *)(inited + 184) = v15;
  LOBYTE(v1) = v20[v1[10]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100441FD4(v4, v5);
  uint64_t v16 = sub_1005350E0(v1);
  *(void *)(inited + 216) = &type metadata for Int;
  *(void *)(inited + 192) = v16;
  sub_10046ECE8(inited);
  Class isa = sub_100726380().super.isa;
  swift_bridgeObjectRelease();
  NSString v18 = sub_100726420();
  NSString v19 = sub_100726420();
  [v6 sendPreKeyMessage:isa toDestination:v21 forGroup:v18 sessionID:v19];
}

uint64_t sub_100482468(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100482478()
{
  return swift_release();
}

uint64_t sub_100482480(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_100441FD4(a1, a2);
  }
  return a1;
}

unint64_t sub_100482494()
{
  unint64_t result = qword_100A468A0;
  if (!qword_100A468A0)
  {
    sub_100440798((uint64_t *)&unk_100A454C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A468A0);
  }
  return result;
}

uint64_t sub_1004824F0()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_100482538()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void **)(*(void *)(v0 + 16)
                + OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_pushHandler);
  Class isa = sub_100726380().super.isa;
  NSString v3 = sub_100726420();
  NSString v4 = sub_100726420();
  [v2 sendKeyMaterialRequestMessage:isa toDestination:v1 forGroup:v3 sessionID:v4];
}

uint64_t sub_100482608()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_100482640(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_10048264C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_1004826BC()
{
  uint64_t v2 = (char *)v0[2];
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v4 = v0[7];
  uint64_t v7 = v0[8];
  uint64_t v6 = v0[9];
  uint64_t v14 = *(void **)&v2[OBJC_IVAR____TtC17identityservicesd38IDSGroupPushMaterialExchangeController_pushHandler];
  uint64_t v15 = v0[4];
  swift_beginAccess();
  swift_bridgeObjectRetain();
  Class isa = sub_100726380().super.isa;
  swift_bridgeObjectRelease();
  NSString v12 = sub_100726420();
  NSString v8 = sub_100726420();
  uint64_t v9 = (void *)swift_allocObject();
  _OWORD v9[2] = v3;
  v9[3] = v2;
  v9[4] = v5;
  v9[5] = v4;
  v9[6] = v7;
  v9[7] = v6;
  v9[8] = v1;
  aBlock[4] = sub_100482DEC;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100476F10;
  aBlock[3] = &unk_10098E1B0;
  uint64_t v10 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v11 = v2;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [v14 sendKeyMaterialMessage:isa toDestination:v15 forGroup:v12 sessionID:v8 completion:v10];
  _Block_release(v10);
}

uint64_t sub_1004828A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100482908(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100482970(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004829D0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(**(void **)a1 + 184))(*(void *)(v1 + 16)) & 1;
}

uint64_t type metadata accessor for IDSGroupPushMaterialExchangeController(uint64_t a1)
{
  return sub_100440FD0(a1, qword_100A4D670);
}

uint64_t sub_100482A48()
{
  return type metadata accessor for IDSGroupPushMaterialExchangeParticipantKeyMaterialState(0);
}

void sub_100482A50()
{
  sub_100482BF0(319, (unint64_t *)&unk_100A456B8, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t type metadata accessor for IDSGroupPushMaterialExchangeParticipant()
{
  return self;
}

uint64_t sub_100482B2C()
{
  return type metadata accessor for IDSGroupPushMaterialExchangeMember(0);
}

void sub_100482B34()
{
  sub_100482BF0(319, (unint64_t *)&unk_100A458F8, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100482BF0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_100726810();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100482C44()
{
  return type metadata accessor for IDSGroupPushMaterialExchangeController(0);
}

void sub_100482C4C()
{
  sub_100725ED0();
  if (v0 <= 0x3F)
  {
    sub_100482BF0(319, (unint64_t *)&unk_100A458F8, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_100482D78(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100482D84()
{
  swift_release();

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

void sub_100482DEC()
{
  sub_10047687C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t sub_100482E00()
{
  return sub_100482E18();
}

uint64_t sub_100482E18()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 224))(*(void *)(v0 + 24));
}

uint64_t sub_100482E74()
{
  return sub_100469128();
}

void *sub_100482E98()
{
  return &unk_1007957F4;
}

unint64_t sub_100482EA4(unsigned int a1, uint64_t a2)
{
  return a1 | (unint64_t)(a2 << 32);
}

uint64_t type metadata accessor for IDSGroupEncryptionKeyMaterialContent()
{
  uint64_t result = qword_100A4D800;
  if (!qword_100A4D800) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100482F00()
{
  unint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v3 = UUID.getData.getter();
  unint64_t v5 = v4;
  uint64_t v6 = sub_100484DAC(v3, v4);
  sub_100442248(v3, v5);
  if (v6[2] == 16)
  {
    int v7 = *((unsigned __int8 *)v6 + 38);
    swift_release();
    if (!v7)
    {
      sub_1007269F0(190);
      v31._countAndFlagsBits = 0xD00000000000002DLL;
      v31._object = (void *)0x80000001008C1F00;
      sub_1007264C0(v31);
      if (*v1) {
        v8._countAndFlagsBits = 1702195828;
      }
      else {
        v8._countAndFlagsBits = 0x65736C6166;
      }
      if (*v1) {
        uint64_t v9 = (void *)0xE400000000000000;
      }
      else {
        uint64_t v9 = (void *)0xE500000000000000;
      }
      v8._object = v9;
      sub_1007264C0(v8);
      swift_bridgeObjectRelease();
      v32._countAndFlagsBits = 0x203A6469202CLL;
      v32._object = (void *)0xE600000000000000;
      sub_1007264C0(v32);
      sub_100725D30();
      sub_10048517C(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
      v33._countAndFlagsBits = sub_100726D00();
      sub_1007264C0(v33);
      swift_bridgeObjectRelease();
      v34._object = (void *)0x80000001008C1F90;
      v34._countAndFlagsBits = 0xD000000000000010;
      sub_1007264C0(v34);
      sub_1004837EC();
      sub_100431F80(&qword_100A459F8);
      v35._countAndFlagsBits = sub_100726480();
      sub_1007264C0(v35);
      swift_bridgeObjectRelease();
      v36._countAndFlagsBits = 0x3A746C6173202C5DLL;
      v36._object = (void *)0xE900000000000020;
      sub_1007264C0(v36);
      uint64_t v10 = (uint64_t *)&v1[v2[6]];
      uint64_t v11 = *v10;
      unint64_t v12 = v10[1];
      sub_100441FD4(*v10, v12);
      v37._countAndFlagsBits = sub_100725AA0();
      sub_1007264C0(v37);
      swift_bridgeObjectRelease();
      sub_100442248(v11, v12);
      v38._countAndFlagsBits = 0x203A79656B202CLL;
      v38._object = (void *)0xE700000000000000;
      sub_1007264C0(v38);
      uint64_t v13 = (uint64_t *)&v1[v2[7]];
      uint64_t v14 = *v13;
      unint64_t v15 = v13[1];
      sub_100441FD4(*v13, v15);
      v39._countAndFlagsBits = sub_100725AA0();
      sub_1007264C0(v39);
      swift_bridgeObjectRelease();
      sub_100442248(v14, v15);
      v40._object = (void *)0xEB00000000203A64;
      v40._countAndFlagsBits = 0x657461657263202CLL;
      sub_1007264C0(v40);
      sub_100725CC0();
      sub_10048517C(&qword_100A459E8, (void (*)(uint64_t))&type metadata accessor for Date);
      v41._countAndFlagsBits = sub_100726D00();
      sub_1007264C0(v41);
      swift_bridgeObjectRelease();
      v42._countAndFlagsBits = 0x4970756F7267202CLL;
      v42._object = (void *)0xEB00000000203A44;
      sub_1007264C0(v42);
      uint64_t v16 = (uint64_t *)&v1[v2[9]];
      uint64_t v17 = *v16;
      NSString v18 = (void *)v16[1];
      swift_bridgeObjectRetain();
      v43._countAndFlagsBits = v17;
      v43._object = v18;
      sub_1007264C0(v43);
      swift_bridgeObjectRelease();
      v44._countAndFlagsBits = 0xD000000000000015;
      v44._object = (void *)0x80000001008C1F30;
      sub_1007264C0(v44);
      v45._countAndFlagsBits = sub_100726D00();
      sub_1007264C0(v45);
      swift_bridgeObjectRelease();
      v46._countAndFlagsBits = 0xD000000000000011;
      v46._object = (void *)0x80000001008C1F50;
      sub_1007264C0(v46);
      sub_100431F80(&qword_100A459F0);
      v47._countAndFlagsBits = sub_100726480();
      sub_1007264C0(v47);
      swift_bridgeObjectRelease();
      v48._object = (void *)0x80000001008C1F70;
      v48._countAndFlagsBits = 0xD000000000000010;
      sub_1007264C0(v48);
      v49._countAndFlagsBits = sub_100726D00();
      sub_1007264C0(v49);
      swift_bridgeObjectRelease();
      v50._countAndFlagsBits = 0x3A6C696B6D73202CLL;
      v50._object = (void *)0xE900000000000020;
      sub_1007264C0(v50);
      v51._countAndFlagsBits = sub_100726D00();
      sub_1007264C0(v51);
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    swift_release();
  }
  sub_1007269F0(171);
  v52._countAndFlagsBits = 0xD00000000000002DLL;
  v52._object = (void *)0x80000001008C1F00;
  sub_1007264C0(v52);
  if (*v1) {
    v20._countAndFlagsBits = 1702195828;
  }
  else {
    v20._countAndFlagsBits = 0x65736C6166;
  }
  if (*v1) {
    uint64_t v21 = (void *)0xE400000000000000;
  }
  else {
    uint64_t v21 = (void *)0xE500000000000000;
  }
  v20._object = v21;
  sub_1007264C0(v20);
  swift_bridgeObjectRelease();
  v53._countAndFlagsBits = 0x203A6469202CLL;
  v53._object = (void *)0xE600000000000000;
  sub_1007264C0(v53);
  sub_100725D30();
  sub_10048517C(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
  v54._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v54);
  swift_bridgeObjectRelease();
  v55._countAndFlagsBits = 0x203A746C6173202CLL;
  v55._object = (void *)0xE800000000000000;
  sub_1007264C0(v55);
  uint64_t v22 = (uint64_t *)&v1[v2[6]];
  uint64_t v23 = *v22;
  unint64_t v24 = v22[1];
  sub_100441FD4(*v22, v24);
  v56._countAndFlagsBits = sub_100725AA0();
  sub_1007264C0(v56);
  swift_bridgeObjectRelease();
  sub_100442248(v23, v24);
  v57._countAndFlagsBits = 0x203A79656B202CLL;
  v57._object = (void *)0xE700000000000000;
  sub_1007264C0(v57);
  uint64_t v25 = (uint64_t *)&v1[v2[7]];
  uint64_t v26 = *v25;
  unint64_t v27 = v25[1];
  sub_100441FD4(*v25, v27);
  v58._countAndFlagsBits = sub_100725AA0();
  sub_1007264C0(v58);
  swift_bridgeObjectRelease();
  sub_100442248(v26, v27);
  v59._object = (void *)0xEB00000000203A64;
  v59._countAndFlagsBits = 0x657461657263202CLL;
  sub_1007264C0(v59);
  sub_100725CC0();
  sub_10048517C(&qword_100A459E8, (void (*)(uint64_t))&type metadata accessor for Date);
  v60._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v60);
  swift_bridgeObjectRelease();
  v61._countAndFlagsBits = 0x4970756F7267202CLL;
  v61._object = (void *)0xEB00000000203A44;
  sub_1007264C0(v61);
  objc_super v28 = (uint64_t *)&v1[v2[9]];
  uint64_t v29 = *v28;
  NSString v30 = (void *)v28[1];
  swift_bridgeObjectRetain();
  v62._countAndFlagsBits = v29;
  v62._object = v30;
  sub_1007264C0(v62);
  swift_bridgeObjectRelease();
  v63._countAndFlagsBits = 0xD000000000000015;
  v63._object = (void *)0x80000001008C1F30;
  sub_1007264C0(v63);
  v64._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v64);
  swift_bridgeObjectRelease();
  v65._countAndFlagsBits = 0xD000000000000011;
  v65._object = (void *)0x80000001008C1F50;
  sub_1007264C0(v65);
  sub_100431F80(&qword_100A459F0);
  v66._countAndFlagsBits = sub_100726480();
  sub_1007264C0(v66);
  swift_bridgeObjectRelease();
  v67._object = (void *)0x80000001008C1F70;
  v67._countAndFlagsBits = 0xD000000000000010;
  sub_1007264C0(v67);
  v68._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v68);
  swift_bridgeObjectRelease();
  v69._countAndFlagsBits = 0x3A6C696B6D73202CLL;
  v69._object = (void *)0xE900000000000020;
  sub_1007264C0(v69);
  v70._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v70);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1004837EC()
{
  type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v0 = UUID.getData.getter();
  unint64_t v2 = v1;
  uint64_t v3 = sub_100484DAC(v0, v1);
  sub_100442248(v0, v2);
  if (v3[2] != 16)
  {
LABEL_5:
    swift_release();
    return 0;
  }
  int v4 = *((unsigned __int8 *)v3 + 38);
  swift_release();
  if (!v4)
  {
    uint64_t v5 = UUID.getData.getter();
    unint64_t v7 = v6;
    Swift::String v8 = sub_100484DAC(v5, v6);
    sub_100442248(v5, v7);
    if (v8[2] == 16)
    {
      unint64_t v9 = *((unsigned __int8 *)v8 + 33);
      uint64_t v10 = v9 & 0xF;
      uint64_t v11 = (v9 >> 4) | (16 * *((unsigned __int8 *)v8 + 32));
      swift_release();
      return v11 | (v10 << 32);
    }
    goto LABEL_5;
  }
  return 0;
}

id sub_10048391C()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100431F80(&qword_100A44D30);
  __chkstk_darwin(v6 - 8, v7);
  unint64_t v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = (int *)type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v11 = (uint64_t *)&v0[v10[7]];
  uint64_t v13 = *v11;
  unint64_t v12 = v11[1];
  uint64_t v14 = (uint64_t *)&v0[v10[6]];
  uint64_t v16 = *v14;
  unint64_t v15 = v14[1];
  Swift::String v52 = &v1[v10[5]];
  uint64_t v17 = v52;
  unint64_t v53 = v12;
  uint64_t v18 = sub_100725D30();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v19 + 16))(v9, v17, v18);
  Swift::String v20 = *(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56);
  Swift::String v50 = v9;
  v20(v9, 0, 1, v18);
  uint64_t v21 = v10[8];
  uint64_t v22 = (uint64_t *)&v1[v10[9]];
  uint64_t v23 = v22[1];
  uint64_t v49 = *v22;
  int v55 = *v1;
  unint64_t v24 = &v1[v21];
  uint64_t v25 = sub_100725CC0();
  uint64_t v26 = *(void *)(v25 - 8);
  (*(void (**)(char *, unsigned __int8 *, uint64_t))(v26 + 16))(v5, v24, v25);
  unint64_t v27 = *(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56);
  Swift::String v51 = v5;
  v27(v5, 0, 1, v25);
  int v48 = *(_DWORD *)&v1[v10[10]];
  objc_super v28 = &v1[v10[13]];
  if (v28[8]) {
    uint64_t v29 = 0;
  }
  else {
    uint64_t v29 = *(void *)v28;
  }
  uint64_t v47 = v29;
  uint64_t v30 = v13;
  uint64_t v31 = v13;
  unint64_t v32 = v53;
  sub_100441FD4(v31, v53);
  uint64_t v56 = v16;
  sub_100441FD4(v16, v15);
  uint64_t v54 = v23;
  swift_bridgeObjectRetain();
  uint64_t v33 = UUID.getData.getter();
  unint64_t v35 = v34;
  Swift::String v36 = sub_100484DAC(v33, v34);
  sub_100442248(v33, v35);
  if (v36[2] == 16)
  {
    int v37 = *((unsigned __int8 *)v36 + 38);
    swift_release();
    if (v37) {
      char v38 = 0;
    }
    else {
      char v38 = v1[v10[12]];
    }
  }
  else
  {
    swift_release();
    char v38 = 0;
  }
  uint64_t v39 = v30;
  uint64_t v41 = (uint64_t)v50;
  uint64_t v40 = (uint64_t)v51;
  uint64_t v42 = v49;
  int v43 = v48;
  uint64_t v44 = v47;
  id v45 = objc_allocWithZone((Class)IDSGroupEncryptionKeyMaterial);
  id result = sub_100484A3C(v39, v32, v56, v15, v41, v42, v54, v55, v40, v43, v44, v38);
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100483C5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v3 = UUID.getData.getter();
  unint64_t v5 = v4;
  uint64_t v6 = sub_100484DAC(v3, v4);
  sub_100442248(v3, v5);
  if (v6[2] == 16)
  {
    int v7 = *((unsigned __int8 *)v6 + 38);
    uint64_t result = swift_release();
    if (!v7)
    {
      uint64_t v9 = v1 + *(int *)(v2 + 52);
      if (*(unsigned char *)(v9 + 8) == 1)
      {
        uint64_t result = sub_1004837EC();
        if ((v11 & 1) == 0)
        {
          *(void *)uint64_t v9 = v10;
          *(unsigned char *)(v9 + 8) = 0;
        }
      }
    }
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_100483D2C@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1007265B0();
  *(void *)(v6 + 16) = 16;
  *(void *)(v6 + 34) = 0;
  int v7 = (unsigned char *)(v6 + 34);
  *(void *)(v6 + 40) = 0;
  if ((a1 & 0xFFFFF000) != 0)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = v6;
  *(unsigned char *)(v6 + 32) = a1 >> 4;
  *(unsigned char *)(v6 + 33) = BYTE4(a1) & 0xF | (16 * a1);
  unint64_t v16 = bswap64(a2);
  uint64_t v17 = &_swiftEmptyArrayStorage;
  sub_100483F30((uint64_t)&v16, (char *)&v17);
  uint64_t v9 = v17;
  if (*((void *)v17 + 2) != 8)
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_100725D30();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a3, 1, 1, v14);
    return swift_bridgeObjectRelease();
  }
  unint64_t v10 = *(void *)(v8 + 16);
  if (v10 < 3) {
    goto LABEL_15;
  }
  *int v7 = v17[32];
  if (v10 == 3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  *(unsigned char *)(v8 + 35) = v9[33];
  if (v10 < 5)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  *(unsigned char *)(v8 + 36) = v9[34];
  if (v10 == 5)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  *(unsigned char *)(v8 + 37) = v9[35];
  if (v10 < 8)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(unsigned char *)(v8 + 39) = v9[36];
  if (v10 == 8)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  *(unsigned char *)(v8 + 40) = v9[37];
  if (v10 < 0xA)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
  }
  *(unsigned char *)(v8 + 41) = v9[38];
  if (v10 == 10) {
    goto LABEL_22;
  }
  *(unsigned char *)(v8 + 42) = v9[39];
  uint64_t v11 = sub_100484F68(v8);
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  static UUID.initFrom(data:)(v11, v13, a3);
  sub_100442248(v11, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100483F30(uint64_t result, char *a2)
{
  int64_t v5 = (int64_t)&a2[-result];
  if (result) {
    int64_t v6 = (int64_t)&a2[-result];
  }
  else {
    int64_t v6 = 0;
  }
  uint64_t v7 = *v2;
  int64_t v8 = *(void *)(*v2 + 16);
  int64_t v9 = v8 + v6;
  if (__OFADD__(v8, v6))
  {
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v3 = a2;
  unint64_t v4 = (char *)result;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if (!result || (int64_t v10 = *(void *)(v7 + 24) >> 1, v10 < v9))
  {
    if (v8 <= v9) {
      int64_t v11 = v8 + v6;
    }
    else {
      int64_t v11 = v8;
    }
    uint64_t result = (uint64_t)sub_100484CC0((char *)result, v11, 1, (char *)v7);
    uint64_t v7 = result;
    int64_t v10 = *(void *)(result + 24) >> 1;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  int64_t v13 = v10 - v12;
  int64_t v14 = 0;
  if (v4 && v3 && v4 < v3 && v10 != v12)
  {
    if (v5 >= v13) {
      int64_t v14 = v10 - v12;
    }
    else {
      int64_t v14 = v5;
    }
    if (v14 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t result = (uint64_t)memmove((void *)(v7 + v12 + 32), v4, v14);
    v4 += v14;
  }
  if (v14 < v6) {
    goto LABEL_27;
  }
  if (v14)
  {
    uint64_t v15 = *(void *)(v7 + 16);
    BOOL v16 = __OFADD__(v15, v14);
    int64_t v17 = v15 + v14;
    if (v16)
    {
      __break(1u);
      goto LABEL_33;
    }
    *(void *)(v7 + 16) = v17;
  }
  if (v14 != v13) {
    goto LABEL_25;
  }
LABEL_28:
  int64_t v17 = *(void *)(v7 + 16);
  if (!v4)
  {
LABEL_33:
    if (!v3) {
      goto LABEL_25;
    }
    unint64_t v4 = 0;
    goto LABEL_35;
  }
  if (!v3 || v4 != v3)
  {
LABEL_35:
    char v20 = *v4;
    uint64_t v18 = v4 + 1;
    char v19 = v20;
    while (1)
    {
      while (1)
      {
        unint64_t v21 = *(void *)(v7 + 24);
        int64_t v22 = v21 >> 1;
        uint64_t v23 = v17 + 1;
        if ((uint64_t)(v21 >> 1) >= v17 + 1) {
          break;
        }
        uint64_t v26 = (char *)v7;
        int64_t v27 = v17;
        uint64_t result = (uint64_t)sub_100484CC0((char *)(v21 > 1), v17 + 1, 1, v26);
        int64_t v17 = v27;
        uint64_t v7 = result;
        int64_t v22 = *(void *)(result + 24) >> 1;
        if (v17 < v22) {
          goto LABEL_39;
        }
LABEL_36:
        *(void *)(v7 + 16) = v17;
      }
      if (v17 >= v22) {
        goto LABEL_36;
      }
LABEL_39:
      *(unsigned char *)(v7 + v17 + 32) = v19;
      if (v3 && v3 == v18)
      {
LABEL_49:
        *(void *)(v7 + 16) = v23;
        break;
      }
      uint64_t v24 = 0;
      while (1)
      {
        uint64_t v25 = (uint64_t)&v18[v24 + 1];
        char v19 = v18[v24];
        if (~v17 + v22 == v24) {
          break;
        }
        *(unsigned char *)(v7 + v17 + 33 + v24++) = v19;
        if (v3 && (char *)v25 == v3)
        {
          uint64_t v23 = v17 + v24 + 1;
          goto LABEL_49;
        }
      }
      v18 += v24 + 1;
      int64_t v17 = v22;
      *(void *)(v7 + 16) = v22;
    }
  }
LABEL_25:
  uint64_t *v2 = v7;
  return result;
}

uint64_t sub_100484138@<X0>(int a1@<W0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = v2;
  int v84 = a1;
  uint64_t v90 = a2;
  uint64_t v4 = sub_100725CC0();
  uint64_t v82 = *(void *)(v4 - 8);
  uint64_t v83 = v4;
  __chkstk_darwin(v4, v5);
  int64_t v87 = &v74[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100725D30();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  unint64_t v86 = &v74[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10, v12);
  uint64_t v85 = &v74[-v13];
  uint64_t v14 = sub_100431F80(&qword_100A44D30);
  uint64_t v16 = __chkstk_darwin(v14 - 8, v15);
  uint64_t v18 = &v74[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = __chkstk_darwin(v16, v19);
  int64_t v22 = &v74[-v21];
  __chkstk_darwin(v20, v23);
  uint64_t v25 = &v74[-v24];
  uint64_t v88 = v8;
  uint64_t v89 = v7;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(&v74[-v24], 1, 1, v7);
  uint64_t v26 = (int *)type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v27 = UUID.getData.getter();
  unint64_t v29 = v28;
  uint64_t v30 = sub_100484DAC(v27, v28);
  sub_100442248(v27, v29);
  if (v30[2] != 16)
  {
    swift_release();
    goto LABEL_7;
  }
  int v31 = *((unsigned __int8 *)v30 + 38);
  swift_release();
  if (v31)
  {
LABEL_7:
    type metadata accessor for IDSHKDFWrapper();
    uint64_t v35 = UUID.getData.getter();
    unint64_t v37 = v36;
    uint64_t v38 = ((uint64_t (*)(void))sub_100486344)();
    unint64_t v40 = v39;
    sub_100442248(v35, v37);
    static UUID.initFrom(data:)(v38, v40, (uint64_t)v22);
    sub_100442248(v38, v40);
    goto LABEL_8;
  }
  uint64_t v32 = sub_1004837EC();
  if ((v34 & 1) != 0 || HIDWORD(v32) >= 0xF)
  {
    uint64_t v53 = (uint64_t)v25;
    goto LABEL_13;
  }
  sub_100483D2C((unint64_t)&_mh_execute_header + v32, v33, (uint64_t)v22);
LABEL_8:
  sub_100485004((uint64_t)v25);
  sub_100485064((uint64_t)v22, (uint64_t)v25);
  type metadata accessor for IDSHKDFWrapper();
  uint64_t v41 = &v3[v26[9]];
  uint64_t v42 = *(void *)v41;
  uint64_t v43 = *((void *)v41 + 1);
  uint64_t v44 = sub_100486344(*(void *)&v3[v26[6]], *(void *)&v3[v26[6] + 8], *(void *)v41, v43);
  unint64_t v46 = v45;
  uint64_t v47 = sub_100485DE8(*(void *)&v3[v26[7]], *(void *)&v3[v26[7] + 8], v42, v43);
  uint64_t v81 = v3;
  uint64_t v48 = v47;
  unint64_t v50 = v49;
  sub_1004850CC((uint64_t)v25, (uint64_t)v18);
  uint64_t v51 = v88;
  uint64_t v52 = v89;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v88 + 48))(v18, 1, v89) == 1)
  {
    sub_100485004((uint64_t)v25);
    sub_100442248(v44, v46);
    sub_100442248(v48, v50);
    uint64_t v53 = (uint64_t)v18;
LABEL_13:
    sub_100485004(v53);
    return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, int *))(*((void *)v26 - 1) + 56))(v90, 1, 1, v26);
  }
  uint64_t v77 = v48;
  unint64_t v78 = v50;
  uint64_t v79 = v44;
  unint64_t v80 = v46;
  uint64_t v54 = v85;
  uint64_t v76 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v51 + 32);
  v76(v85, v18, v52);
  int v55 = v81;
  int v75 = *v81;
  uint64_t v56 = v86;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v51 + 16))(v86, v54, v52);
  Swift::String v57 = v87;
  sub_100725C80();
  (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v54, v52);
  uint64_t result = sub_100485004((uint64_t)v25);
  int v59 = *(_DWORD *)&v55[v26[11]];
  int v60 = v59 + 1;
  if (__OFADD__(v59, 1))
  {
    __break(1u);
  }
  else
  {
    Swift::String v63 = v41;
    uint64_t v61 = *(void *)v41;
    uint64_t v62 = *((void *)v63 + 1);
    unsigned __int8 v64 = v55[v26[12]];
    Swift::String v65 = &v55[v26[13]];
    uint64_t v88 = *(void *)v65;
    LODWORD(v85) = v65[8];
    Swift::String v66 = v57;
    Swift::String v67 = v90;
    *uint64_t v90 = v75;
    v76(&v67[v26[5]], v56, v52);
    Swift::String v68 = (uint64_t *)&v67[v26[6]];
    unint64_t v69 = v80;
    *Swift::String v68 = v79;
    v68[1] = v69;
    Swift::String v70 = (uint64_t *)&v67[v26[7]];
    unint64_t v71 = v78;
    *Swift::String v70 = v77;
    v70[1] = v71;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v82 + 32))(&v67[v26[8]], v66, v83);
    uint64_t v72 = &v67[v26[9]];
    *uint64_t v72 = v61;
    v72[1] = v62;
    *(_DWORD *)&v67[v26[10]] = v84;
    *(_DWORD *)&v67[v26[11]] = v60;
    v67[v26[12]] = v64;
    uint64_t v73 = &v67[v26[13]];
    *(void *)uint64_t v73 = v88;
    v73[8] = (_BYTE)v85;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(*((void *)v26 - 1) + 56))(v67, 0, 1, v26);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1004846FC@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned char *a9@<X8>, uint64_t a10, int a11, int a12, char a13, uint64_t a14, char a15)
{
  *a9 = a1;
  uint64_t v21 = (int *)type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  int64_t v22 = &a9[v21[5]];
  uint64_t v23 = sub_100725D30();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v22, a2, v23);
  uint64_t v24 = &a9[v21[6]];
  *uint64_t v24 = a3;
  v24[1] = a4;
  uint64_t v25 = &a9[v21[7]];
  *uint64_t v25 = a5;
  v25[1] = a6;
  uint64_t v26 = &a9[v21[8]];
  uint64_t v27 = sub_100725CC0();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(v26, a7, v27);
  unint64_t v29 = &a9[v21[9]];
  *unint64_t v29 = a8;
  v29[1] = a10;
  *(_DWORD *)&a9[v21[10]] = a11;
  *(_DWORD *)&a9[v21[11]] = a12;
  a9[v21[12]] = a13;
  uint64_t v30 = &a9[v21[13]];
  *(void *)uint64_t v30 = a14;
  v30[8] = a15 & 1;
  return result;
}

Swift::Int sub_100484884()
{
  return sub_100726E30();
}

uint64_t sub_100484918()
{
  return sub_1007263E0();
}

Swift::Int sub_100484998()
{
  return sub_100726E30();
}

uint64_t sub_100484A28()
{
  return sub_100725CF0();
}

id sub_100484A3C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, int a10, uint64_t a11, char a12)
{
  if (a2 >> 60 == 15)
  {
    Class isa = 0;
  }
  else
  {
    Class isa = sub_100725B20().super.isa;
    sub_10044CE88(a1, a2);
  }
  if (a4 >> 60 == 15)
  {
    Class v18 = 0;
  }
  else
  {
    Class v18 = sub_100725B20().super.isa;
    sub_10044CE88(a3, a4);
  }
  uint64_t v19 = sub_100725D30();
  uint64_t v20 = *(void *)(v19 - 8);
  Class v21 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v20 + 48))(a5, 1, v19) != 1)
  {
    Class v21 = sub_100725CE0().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(a5, v19);
  }
  if (a7)
  {
    NSString v22 = sub_100726420();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v22 = 0;
  }
  uint64_t v23 = sub_100725CC0();
  uint64_t v24 = *(void *)(v23 - 8);
  Class v25 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(a9, 1, v23) != 1)
  {
    Class v25 = sub_100725BE0().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(a9, v23);
  }
  LOBYTE(v29) = a12;
  LODWORD(v28) = a10;
  id v26 = [v32 initWithKeyMaterial:isa keySalt:v18 keyIndex:v21 groupID:v22 isGeneratedLocally:a8 & 1 createdAt:v25 generationCounter:v28 participantID:a11 shortKeyIndexLength:v29];

  return v26;
}

char *sub_100484CC0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_100431F80((uint64_t *)&unk_100A45440);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_100484DAC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_100725B90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  int64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = &_swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_12;
      }
      uint64_t v10 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (v10)
      {
        if (v10 >= 1)
        {
          sub_100431F80((uint64_t *)&unk_100A45440);
          int64_t v9 = (void *)swift_allocObject();
          size_t v13 = j__malloc_size(v9);
          _OWORD v9[2] = v10;
          v9[3] = 2 * v13 - 64;
        }
        sub_100441FD4(a1, a2);
        uint64_t v14 = sub_100725AB0();
        sub_100442248(a1, a2);
        (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
        if (v14 != v10)
        {
          __break(1u);
LABEL_12:
          __break(1u);
LABEL_13:
          __break(1u);
          JUMPOUT(0x100484F58);
        }
      }
      return v9;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v11 = *(void *)(a1 + 24);
      uint64_t v10 = v11 - v12;
      if (!__OFSUB__(v11, v12)) {
        goto LABEL_6;
      }
      goto LABEL_13;
    case 3uLL:
      return v9;
    default:
      uint64_t v10 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_100484F68(uint64_t a1)
{
  uint64_t v9 = sub_100431F80(&qword_100A45AA0);
  unint64_t v10 = sub_100485D8C();
  v8[0] = a1;
  uint64_t v2 = sub_10044C0F4(v8, v9);
  uint64_t v3 = (unsigned char *)(*v2 + 32);
  uint64_t v4 = &v3[*(void *)(*v2 + 16)];
  swift_bridgeObjectRetain();
  sub_10044D424(v3, v4, &v7);
  uint64_t v5 = v7;
  sub_10044C6AC((uint64_t)v8);
  return v5;
}

uint64_t sub_100485004(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A44D30);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100485064(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A44D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004850CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A44D30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100485134()
{
  return sub_10048517C(&qword_100A44D20, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
}

uint64_t sub_10048517C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IDSGroupEncryptionKeyMaterialShortKIInfo(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for IDSGroupEncryptionKeyMaterialShortKIInfo(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionKeyMaterialShortKIInfo()
{
  return &type metadata for IDSGroupEncryptionKeyMaterialShortKIInfo;
}

void *sub_10048521C(unsigned char *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v34 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v34 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    int64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100725D30();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    uint64_t v11 = a3[6];
    uint64_t v12 = (void *)((char *)v4 + v11);
    size_t v13 = (void *)((char *)a2 + v11);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    sub_100441FD4(*v13, v15);
    *uint64_t v12 = v14;
    v12[1] = v15;
    uint64_t v16 = a3[7];
    uint64_t v17 = (void *)((char *)v4 + v16);
    Class v18 = (void *)((char *)a2 + v16);
    uint64_t v19 = *v18;
    unint64_t v20 = v18[1];
    sub_100441FD4(*v18, v20);
    *uint64_t v17 = v19;
    v17[1] = v20;
    uint64_t v21 = a3[8];
    NSString v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    uint64_t v24 = sub_100725CC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
    uint64_t v25 = a3[9];
    uint64_t v26 = a3[10];
    uint64_t v27 = (void *)((char *)v4 + v25);
    uint64_t v28 = (void *)((char *)a2 + v25);
    uint64_t v29 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v29;
    *(_DWORD *)((char *)v4 + v26) = *(_DWORD *)((char *)a2 + v26);
    uint64_t v30 = a3[12];
    *(_DWORD *)((char *)v4 + a3[11]) = *(_DWORD *)((char *)a2 + a3[11]);
    *((unsigned char *)v4 + v30) = *((unsigned char *)a2 + v30);
    uint64_t v31 = a3[13];
    id v32 = (char *)v4 + v31;
    unint64_t v33 = (char *)a2 + v31;
    v32[8] = v33[8];
    *(void *)id v32 = *(void *)v33;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1004853D0(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_100725D30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_100442248(*(void *)(a1 + a2[6]), *(void *)(a1 + a2[6] + 8));
  sub_100442248(*(void *)(a1 + a2[7]), *(void *)(a1 + a2[7] + 8));
  uint64_t v6 = a1 + a2[8];
  uint64_t v7 = sub_100725CC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  return swift_bridgeObjectRelease();
}

unsigned char *sub_1004854B8(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int64_t v8 = &a2[v6];
  uint64_t v9 = sub_100725D30();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t *)&a1[v10];
  uint64_t v12 = (uint64_t *)&a2[v10];
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  sub_100441FD4(*v12, v14);
  *uint64_t v11 = v13;
  v11[1] = v14;
  uint64_t v15 = a3[7];
  uint64_t v16 = (uint64_t *)&a1[v15];
  uint64_t v17 = (uint64_t *)&a2[v15];
  uint64_t v18 = *v17;
  unint64_t v19 = v17[1];
  sub_100441FD4(*v17, v19);
  *uint64_t v16 = v18;
  v16[1] = v19;
  uint64_t v20 = a3[8];
  uint64_t v21 = &a1[v20];
  NSString v22 = &a2[v20];
  uint64_t v23 = sub_100725CC0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = a3[10];
  uint64_t v26 = &a1[v24];
  uint64_t v27 = &a2[v24];
  uint64_t v28 = v27[1];
  *uint64_t v26 = *v27;
  v26[1] = v28;
  *(_DWORD *)&a1[v25] = *(_DWORD *)&a2[v25];
  uint64_t v29 = a3[12];
  *(_DWORD *)&a1[a3[11]] = *(_DWORD *)&a2[a3[11]];
  a1[v29] = a2[v29];
  uint64_t v30 = a3[13];
  uint64_t v31 = &a1[v30];
  id v32 = &a2[v30];
  v31[8] = v32[8];
  *(void *)uint64_t v31 = *(void *)v32;
  swift_bridgeObjectRetain();
  return a1;
}

unsigned char *sub_10048561C(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int64_t v8 = &a2[v6];
  uint64_t v9 = sub_100725D30();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (uint64_t *)&a1[v10];
  uint64_t v12 = (uint64_t *)&a2[v10];
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  sub_100441FD4(*v12, v14);
  uint64_t v15 = *v11;
  unint64_t v16 = v11[1];
  *uint64_t v11 = v13;
  v11[1] = v14;
  sub_100442248(v15, v16);
  uint64_t v17 = a3[7];
  uint64_t v18 = (uint64_t *)&a1[v17];
  unint64_t v19 = (uint64_t *)&a2[v17];
  uint64_t v20 = *v19;
  unint64_t v21 = v19[1];
  sub_100441FD4(*v19, v21);
  uint64_t v22 = *v18;
  unint64_t v23 = v18[1];
  uint64_t *v18 = v20;
  v18[1] = v21;
  sub_100442248(v22, v23);
  uint64_t v24 = a3[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = sub_100725CC0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v27 - 8) + 24))(v25, v26, v27);
  uint64_t v28 = a3[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  *uint64_t v29 = *v30;
  v29[1] = v30[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)&a1[a3[10]] = *(_DWORD *)&a2[a3[10]];
  *(_DWORD *)&a1[a3[11]] = *(_DWORD *)&a2[a3[11]];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v31 = a3[13];
  id v32 = &a1[v31];
  unint64_t v33 = &a2[v31];
  uint64_t v34 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)id v32 = v34;
  return a1;
}

unsigned char *sub_1004857AC(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int64_t v8 = &a2[v6];
  uint64_t v9 = sub_100725D30();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)&a1[a3[6]] = *(_OWORD *)&a2[a3[6]];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  uint64_t v11 = a3[8];
  uint64_t v12 = &a1[v11];
  uint64_t v13 = &a2[v11];
  uint64_t v14 = sub_100725CC0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 32))(v12, v13, v14);
  uint64_t v15 = a3[10];
  *(_OWORD *)&a1[a3[9]] = *(_OWORD *)&a2[a3[9]];
  *(_DWORD *)&a1[v15] = *(_DWORD *)&a2[v15];
  uint64_t v16 = a3[12];
  *(_DWORD *)&a1[a3[11]] = *(_DWORD *)&a2[a3[11]];
  a1[v16] = a2[v16];
  uint64_t v17 = a3[13];
  uint64_t v18 = &a1[v17];
  unint64_t v19 = &a2[v17];
  v18[8] = v19[8];
  *(void *)uint64_t v18 = *(void *)v19;
  return a1;
}

unsigned char *sub_1004858D8(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  int64_t v8 = &a2[v6];
  uint64_t v9 = sub_100725D30();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = *(void *)&a1[v10];
  unint64_t v12 = *(void *)&a1[v10 + 8];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  sub_100442248(v11, v12);
  uint64_t v13 = a3[7];
  uint64_t v14 = *(void *)&a1[v13];
  unint64_t v15 = *(void *)&a1[v13 + 8];
  *(_OWORD *)&a1[v13] = *(_OWORD *)&a2[v13];
  sub_100442248(v14, v15);
  uint64_t v16 = a3[8];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_100725CC0();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v19 - 8) + 40))(v17, v18, v19);
  uint64_t v20 = a3[9];
  unint64_t v21 = &a1[v20];
  uint64_t v22 = (uint64_t *)&a2[v20];
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  *unint64_t v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[11];
  *(_DWORD *)&a1[a3[10]] = *(_DWORD *)&a2[a3[10]];
  *(_DWORD *)&a1[v25] = *(_DWORD *)&a2[v25];
  uint64_t v26 = a3[13];
  a1[a3[12]] = a2[a3[12]];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  *(void *)uint64_t v27 = *(void *)v28;
  v27[8] = v28[8];
  return a1;
}

uint64_t sub_100485A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100485A44);
}

uint64_t sub_100485A44(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100725D30();
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_5:
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v11(a1 + v9, a2, v7);
  }
  uint64_t v10 = sub_100725CC0();
  if (*(_DWORD *)(*(void *)(v10 - 8) + 84) == a2)
  {
    uint64_t v7 = v10;
    uint64_t v8 = *(void *)(v10 - 8);
    uint64_t v9 = a3[8];
    goto LABEL_5;
  }
  unint64_t v13 = *(void *)(a1 + a3[9] + 8);
  if (v13 >= 0xFFFFFFFF) {
    LODWORD(v13) = -1;
  }
  return (v13 + 1);
}

uint64_t sub_100485B58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100485B6C);
}

uint64_t sub_100485B6C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100725D30();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
  }
  else
  {
    uint64_t result = sub_100725CC0();
    if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
    {
      *(void *)(a1 + a4[9] + 8) = (a2 - 1);
      return result;
    }
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[8];
  }
  unint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);

  return v13(a1 + v11, a2, a2, v9);
}

uint64_t sub_100485C7C()
{
  uint64_t result = sub_100725D30();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_100725CC0();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_100485D8C()
{
  unint64_t result = qword_100A45AA8;
  if (!qword_100A45AA8)
  {
    sub_100440798(&qword_100A45AA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A45AA8);
  }
  return result;
}

uint64_t sub_100485DEC(unint64_t a1, unint64_t a2)
{
  *(void *)&long long v40 = a1;
  *((void *)&v40 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_100431F80(&qword_100A45AD8);
  if (swift_dynamicCast())
  {
    sub_10048712C(v38, (uint64_t)&v41);
    sub_10044C0F4(&v41, v43);
    sub_100725960();
    swift_bridgeObjectRelease();
    v38[0] = v40;
    sub_10044C6AC((uint64_t)&v41);
    return *(void *)&v38[0];
  }
  uint64_t v39 = 0;
  memset(v38, 0, sizeof(v38));
  sub_100487060((uint64_t)v38);
  unint64_t v2 = a1;
  unint64_t v3 = a2;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = a1;
      uint64_t v42 = a2 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v6 = (char *)&v41 + (HIBYTE(a2) & 0xF);
      uint64_t v7 = &v41;
    }
    else
    {
      if ((a1 & 0x1000000000000000) != 0)
      {
        uint64_t v4 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        uint64_t v4 = sub_100726A30();
      }
      if (v4) {
        uint64_t v6 = (unsigned char *)(v4 + v5);
      }
      else {
        uint64_t v6 = 0;
      }
      uint64_t v7 = (uint64_t *)v4;
    }
    uint64_t v8 = sub_100486AE4(v7, v6);
    unint64_t v10 = v9;
    if (v9 >> 60 != 15)
    {
      swift_bridgeObjectRelease();
      *(void *)&v38[0] = v8;
      *((void *)&v38[0] + 1) = v10;
      return *(void *)&v38[0];
    }
    unint64_t v2 = a1;
    unint64_t v3 = a2;
    if ((a2 & 0x1000000000000000) == 0) {
      goto LABEL_14;
    }
LABEL_70:
    Swift::Int v11 = sub_1007264D0();
    goto LABEL_17;
  }
LABEL_69:
  uint64_t v8 = 0;
  unint64_t v10 = 0xF000000000000000;
  if ((v3 & 0x1000000000000000) != 0) {
    goto LABEL_70;
  }
LABEL_14:
  if ((v3 & 0x2000000000000000) != 0) {
    Swift::Int v11 = HIBYTE(v3) & 0xF;
  }
  else {
    Swift::Int v11 = v2 & 0xFFFFFFFFFFFFLL;
  }
LABEL_17:
  *(void *)&v38[0] = sub_10044D628(v11);
  *((void *)&v38[0] + 1) = v12;
  __chkstk_darwin(*(void *)&v38[0], v12);
  unint64_t v13 = (unint64_t)sub_100486500((void *(*)(uint64_t *__return_ptr, char *, char *))sub_1004870C0);
  uint64_t v16 = *((void *)&v38[0] + 1) >> 62;
  uint64_t v17 = v13;
  uint64_t v18 = v3;
  unint64_t v19 = v14;
  switch(*((void *)&v38[0] + 1) >> 62)
  {
    case 1:
      LODWORD(v20) = DWORD1(v38[0]) - LODWORD(v38[0]);
      if (__OFSUB__(DWORD1(v38[0]), v38[0])) {
        goto LABEL_73;
      }
      uint64_t v20 = (int)v20;
LABEL_23:
      if (v15 != v20)
      {
        if (v16)
        {
          if (v16 == 1) {
            uint64_t v24 = *(uint64_t *)&v38[0] >> 32;
          }
          else {
            uint64_t v24 = *(void *)(*(void *)&v38[0] + 24);
          }
        }
        else
        {
          uint64_t v24 = BYTE14(v38[0]);
        }
LABEL_61:
        if (v24 < v15)
        {
          __break(1u);
LABEL_73:
          __break(1u);
LABEL_74:
          __break(1u);
        }
        sub_100725AE0();
LABEL_63:
        swift_bridgeObjectRelease();
        goto LABEL_64;
      }
LABEL_29:
      if ((v3 & 0x2000000000000000) != 0) {
        unint64_t v25 = HIBYTE(v3) & 0xF;
      }
      else {
        unint64_t v25 = v13 & 0xFFFFFFFFFFFFLL;
      }
      *(void *)((char *)&v40 + 7) = 0;
      *(void *)&long long v40 = 0;
      if (4 * v25 == v14 >> 14) {
        goto LABEL_58;
      }
      LOBYTE(v26) = 0;
      uint64_t v27 = (v13 >> 59) & 1;
      if ((v3 & 0x1000000000000000) == 0) {
        LOBYTE(v27) = 1;
      }
      uint64_t v28 = 4 << v27;
      uint64_t v35 = v3 & 0xFFFFFFFFFFFFFFLL;
      uint64_t v33 = (uint64_t)v8;
      uint64_t v34 = (v3 & 0xFFFFFFFFFFFFFFFLL) + 32;
      break;
    case 2:
      uint64_t v22 = *(void *)(*(void *)&v38[0] + 16);
      uint64_t v21 = *(void *)(*(void *)&v38[0] + 24);
      BOOL v23 = __OFSUB__(v21, v22);
      uint64_t v20 = v21 - v22;
      if (!v23) {
        goto LABEL_23;
      }
      goto LABEL_74;
    case 3:
      if (!v15) {
        goto LABEL_29;
      }
      uint64_t v24 = 0;
      goto LABEL_61;
    default:
      uint64_t v20 = BYTE14(v38[0]);
      goto LABEL_23;
  }
  do
  {
    unint64_t v29 = v19 & 0xC;
    unint64_t v2 = v19;
    if (v29 == v28) {
      unint64_t v2 = sub_100486928(v19, v17, v18);
    }
    unint64_t v30 = v2 >> 16;
    if (v2 >> 16 >= v25)
    {
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
      goto LABEL_69;
    }
    if ((v18 & 0x1000000000000000) != 0)
    {
      unint64_t v2 = sub_100726500();
      char v31 = v2;
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else if ((v18 & 0x2000000000000000) != 0)
    {
      uint64_t v41 = v17;
      uint64_t v42 = v35;
      char v31 = *((unsigned char *)&v41 + v30);
      if (v29 != v28) {
        goto LABEL_47;
      }
    }
    else
    {
      unint64_t v2 = v34;
      if ((v17 & 0x1000000000000000) == 0) {
        unint64_t v2 = sub_100726A30();
      }
      char v31 = *(unsigned char *)(v2 + v30);
      if (v29 != v28)
      {
LABEL_47:
        if ((v18 & 0x1000000000000000) == 0) {
          goto LABEL_48;
        }
        goto LABEL_51;
      }
    }
    unint64_t v2 = sub_100486928(v19, v17, v18);
    unint64_t v19 = v2;
    if ((v18 & 0x1000000000000000) == 0)
    {
LABEL_48:
      unint64_t v19 = (v19 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_53;
    }
LABEL_51:
    if (v25 <= v19 >> 16) {
      goto LABEL_68;
    }
    unint64_t v2 = sub_1007264E0();
    unint64_t v19 = v2;
LABEL_53:
    *((unsigned char *)&v40 + v26) = v31;
    unsigned int v26 = v26 + 1;
    if ((v26 >> 8)) {
      goto LABEL_67;
    }
    BYTE14(v40) = v26;
    if (v26 == 14)
    {
      uint64_t v41 = v40;
      LODWORD(v42) = DWORD2(v40);
      WORD2(v42) = WORD6(v40);
      sub_100725AF0();
      LOBYTE(v26) = 0;
      BYTE14(v40) = 0;
    }
  }
  while (4 * v25 != v19 >> 14);
  uint64_t v8 = (unsigned char *)v33;
  if ((_BYTE)v26)
  {
    uint64_t v41 = v40;
    LODWORD(v42) = DWORD2(v40);
    WORD2(v42) = WORD6(v40);
    sub_100725AF0();
    sub_10044CE88(v33, v10);
    goto LABEL_63;
  }
LABEL_58:
  swift_bridgeObjectRelease();
  sub_10044CE88((uint64_t)v8, v10);
LABEL_64:
  swift_bridgeObjectRelease();
  return *(void *)&v38[0];
}

uint64_t sub_100486314@<X0>(size_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_100486348(a1, a2, a3);
}

uint64_t sub_100486348@<X0>(size_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v4 = sub_100486A30(a1, a2);
  uint64_t v5 = sub_100484F68(v4);
  uint64_t v7 = v6;
  uint64_t result = swift_release();
  *a3 = v5;
  a3[1] = v7;
  return result;
}

Class sub_1004863B8(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t (*a5)(uint64_t, unint64_t, uint64_t, uint64_t))
{
  id v7 = a3;
  id v8 = a4;
  uint64_t v9 = sub_100725B50();
  unint64_t v11 = v10;

  uint64_t v12 = sub_100726430();
  uint64_t v14 = v13;

  uint64_t v15 = a5(v9, v11, v12, v14);
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  sub_100442248(v9, v11);
  v18.super.Class isa = sub_100725B20().super.isa;
  sub_100442248(v15, v17);

  return v18.super.isa;
}

id sub_1004864CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSHKDFWrapper();
  return objc_msgSendSuper2(&v2, "dealloc");
}

char *sub_100486500(void *(*a1)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v4 = *v1;
  unint64_t v3 = v1[1];
  uint64_t v5 = v1;
  switch(v3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)unint64_t v1 = xmmword_100794E40;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v11 = v4 >> 32;
      if (isUniquelyReferenced_nonNull_native) {
        goto LABEL_16;
      }
      if (v11 < (int)v4) {
        goto LABEL_23;
      }
      if (sub_100725910() && __OFSUB__((int)v4, sub_100725940())) {
        goto LABEL_24;
      }
      sub_100725950();
      swift_allocObject();
      uint64_t v13 = sub_1007258F0();
      swift_release();
      uint64_t v9 = v13;
      uint64_t v11 = v4 >> 32;
LABEL_16:
      if (v11 < (int)v4)
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
      }
      uint64_t result = sub_100486874((int)v4, v11, a1);
      unint64_t v12 = v9 | 0x4000000000000000;
      if (v2)
      {
        *uint64_t v5 = v4;
        goto LABEL_19;
      }
      *uint64_t v5 = v4;
      v5[1] = v12;
      break;
    case 2uLL:
      uint64_t v14 = *v1;
      uint64_t v15 = v3 & 0x3FFFFFFFFFFFFFFFLL;
      sub_100725A80();
      uint64_t result = sub_100486874(*(void *)(v14 + 16), *(void *)(v14 + 24), a1);
      unint64_t v12 = v15 | 0x8000000000000000;
      if (v2)
      {
        uint64_t *v1 = v14;
LABEL_19:
        v5[1] = v12;
      }
      else
      {
        uint64_t *v1 = v14;
        v1[1] = v12;
      }
      break;
    case 3uLL:
      memset(v16, 0, 15);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16);
      if (!v2) {
        return (char *)v14;
      }
      return result;
    default:
      v16[0] = *v1;
      LOWORD(v16[1]) = v3;
      BYTE2(v16[1]) = BYTE2(v3);
      BYTE3(v16[1]) = BYTE3(v3);
      BYTE4(v16[1]) = BYTE4(v3);
      BYTE5(v16[1]) = BYTE5(v3);
      BYTE6(v16[1]) = BYTE6(v3);
      uint64_t result = (char *)a1(&v14, (char *)v16, (char *)v16 + BYTE6(v3));
      if (!v2) {
        uint64_t result = (char *)v14;
      }
      unint64_t v8 = LODWORD(v16[1]) | ((unint64_t)BYTE4(v16[1]) << 32) | ((unint64_t)BYTE5(v16[1]) << 40) | ((unint64_t)BYTE6(v16[1]) << 48);
      uint64_t *v1 = v16[0];
      v1[1] = v8;
      return result;
  }
  return result;
}

void *sub_100486804(void *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t result = a1(&v6, a3, a4 - a3);
    if (v4) {
      return result;
    }
    return (void *)v6;
  }
  uint64_t result = a1(&v6, 0, 0);
  if (!v4) {
    return (void *)v6;
  }
  return result;
}

char *sub_100486874(uint64_t a1, uint64_t a2, void *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t result = (char *)sub_100725910();
  if (!result) {
    goto LABEL_12;
  }
  unint64_t v8 = result;
  uint64_t result = (char *)sub_100725940();
  uint64_t v9 = a1 - (void)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  BOOL v10 = __OFSUB__(a2, a1);
  uint64_t v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v12 = sub_100725930();
  if (v12 >= v11) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v12;
  }
  uint64_t result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3) {
    return (char *)v14;
  }
  return result;
}

uint64_t sub_100486928(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_100726510();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_1007264F0();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_1004869A4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100726A00();
    if ((v3 & 1) == 0)
    {
      uint64_t v4 = result;
      uint64_t result = swift_bridgeObjectRelease();
      *a2 = 0;
      a2[1] = 0xE000000000000000;
      a2[2] = 15;
      a2[3] = v4;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

size_t sub_100486A30(size_t result, unint64_t a2)
{
  if (!result) {
    return (size_t)&_swiftEmptyArrayStorage;
  }
  char v3 = (const void *)result;
  int64_t v4 = a2 - result;
  if (a2 == result) {
    return (size_t)&_swiftEmptyArrayStorage;
  }
  if (v4 < 1)
  {
    uint64_t v5 = &_swiftEmptyArrayStorage;
    if (!a2) {
      goto LABEL_13;
    }
  }
  else
  {
    sub_100431F80((uint64_t *)&unk_100A45440);
    uint64_t v5 = (void *)swift_allocObject();
    uint64_t result = j__malloc_size(v5);
    v5[2] = v4;
    v5[3] = 2 * result - 64;
    if (!a2) {
      goto LABEL_13;
    }
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

unsigned char *sub_100486AE4(unsigned char *result, unsigned char *a2)
{
  if (result)
  {
    uint64_t v2 = a2 - result;
    if (a2 == result)
    {
      return 0;
    }
    else if (v2 <= 14)
    {
      return (unsigned char *)sub_10044D6EC(result, a2);
    }
    else if ((unint64_t)v2 >= 0x7FFFFFFF)
    {
      return (unsigned char *)sub_10044D7B0((uint64_t)result, (uint64_t)a2);
    }
    else
    {
      return (unsigned char *)sub_10044D82C((uint64_t)result, (uint64_t)a2);
    }
  }
  return result;
}

uint64_t sub_100486B48(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_100726030();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  unint64_t v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11, v14);
  unint64_t v16 = &v22[-v15];
  uint64_t v23 = a1;
  unint64_t v24 = a2;
  sub_100441FD4(a1, a2);
  sub_100726020();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_100485DEC(a3, a4);
  unint64_t v24 = v17;
  uint64_t v18 = v23;
  unint64_t v19 = v17;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_5;
      }
      __break(1u);
LABEL_7:
      __break(1u);
      JUMPOUT(0x100486D84);
    case 2uLL:
      if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_7;
    default:
LABEL_5:
      sub_1007260B0();
      sub_100486FB4();
      sub_10048700C();
      sub_100726050();
      sub_100442248(v18, v19);
      sub_100726010();
      uint64_t v20 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
      v20(v13, v8);
      v20(v16, v8);
      return v23;
  }
}

uint64_t sub_100486D94(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_100726030();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = a1;
  unint64_t v21 = a2;
  swift_bridgeObjectRetain();
  uint64_t v18 = sub_100485DEC(a3, a4);
  unint64_t v19 = v13;
  uint64_t v14 = v18;
  unint64_t v15 = v13;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (!__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_5;
      }
      __break(1u);
LABEL_7:
      __break(1u);
      JUMPOUT(0x100486F80);
    case 2uLL:
      if (!__OFSUB__(*(void *)(a1 + 24), *(void *)(a1 + 16))) {
        goto LABEL_5;
      }
      goto LABEL_7;
    default:
LABEL_5:
      sub_1007260B0();
      sub_100486FB4();
      sub_10048700C();
      sub_100726040();
      sub_100442248(v14, v15);
      sub_100726010();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
      return v20;
  }
}

uint64_t type metadata accessor for IDSHKDFWrapper()
{
  return self;
}

unint64_t sub_100486FB4()
{
  unint64_t result = qword_100A44D60;
  if (!qword_100A44D60)
  {
    sub_1007260B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A44D60);
  }
  return result;
}

unint64_t sub_10048700C()
{
  unint64_t result = qword_100A47B80;
  if (!qword_100A47B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A47B80);
  }
  return result;
}

uint64_t sub_100487060(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A45AE0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_1004870C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *(uint64_t **)(v3 + 16);
  uint64_t v7 = *v5;
  uint64_t v6 = v5[1];
  v13[0] = v7;
  v13[1] = v6;
  _OWORD v12[2] = v13;
  unint64_t result = sub_100486804((void *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_100487144, (uint64_t)v12, a1, a2);
  *a3 = result;
  a3[1] = v9;
  a3[2] = v10;
  a3[3] = v11;
  return result;
}

uint64_t sub_10048712C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_100487144@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1004869A4(a1, a2);
}

uint64_t sub_100487164(uint64_t a1, uint64_t a2, unint64_t a3)
{
  sub_1007269F0(59);
  v6._object = (void *)0x80000001008C1FF0;
  v6._countAndFlagsBits = 0xD000000000000038;
  sub_1007264C0(v6);
  sub_100441FD4(a2, a3);
  v7._countAndFlagsBits = sub_100725AA0();
  sub_1007264C0(v7);
  swift_bridgeObjectRelease();
  sub_100442248(a2, a3);
  v8._countAndFlagsBits = 62;
  v8._object = (void *)0xE100000000000000;
  sub_1007264C0(v8);
  return 0;
}

unint64_t sub_100487220(char a1)
{
  return a1 & 1 | ((unint64_t)(a1 & 1) << 40) | (unint64_t)&_mh_execute_header;
}

void *sub_100487230(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  char v6 = BYTE5(a2);
  sub_100431F80(&qword_100A45AE8);
  uint64_t v7 = *(void *)(type metadata accessor for IDSGroupEncryptionMaterialData() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_100794E30;
  unint64_t v10 = v9 + v8;
  *(unsigned char *)unint64_t v10 = v6 & 1;
  *(void *)(v10 + 8) = a3;
  *(void *)(v10 + 16) = a4;
  swift_storeEnumTagMultiPayload();
  sub_100441FD4(a3, a4);
  uint64_t v11 = sub_100487890(v9);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v11;
}

uint64_t sub_100487358(unint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6)
{
  if (!sub_100512630(a1 & 0xFFFFFFFFFFLL, a4 & 0xFFFFFFFFFFLL) || !sub_100513FD8((a1 >> 40) & 1, (a4 >> 40) & 1)) {
    return 0;
  }

  return sub_100453588(a2, a3, a5, a6);
}

void *sub_1004873F4()
{
  char v1 = *(unsigned char *)(v0 + 5);
  uint64_t v2 = *(void *)(v0 + 8);
  unint64_t v3 = *(void *)(v0 + 16);
  sub_100431F80(&qword_100A45AE8);
  uint64_t v4 = *(void *)(type metadata accessor for IDSGroupEncryptionMaterialData() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_100794E30;
  unint64_t v7 = v6 + v5;
  *(unsigned char *)unint64_t v7 = v1;
  *(void *)(v7 + 8) = v2;
  *(void *)(v7 + 16) = v3;
  swift_storeEnumTagMultiPayload();
  sub_100441FD4(v2, v3);
  unint64_t v8 = sub_100487890(v6);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v8;
}

uint64_t sub_100487514()
{
  sub_1007269F0(59);
  v1._object = (void *)0x80000001008C1FF0;
  v1._countAndFlagsBits = 0xD000000000000038;
  sub_1007264C0(v1);
  v2._countAndFlagsBits = sub_100725AA0();
  sub_1007264C0(v2);
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 62;
  v3._object = (void *)0xE100000000000000;
  sub_1007264C0(v3);
  return 0;
}

Swift::Int sub_1004875B4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_100726DD0();
  sub_10044F12C();
  sub_1007263E0();
  sub_100487AFC();
  sub_1007263E0();
  sub_100441FD4(v1, v2);
  sub_100725B60();
  sub_100442248(v1, v2);
  return sub_100726E30();
}

uint64_t sub_100487678()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_10044F12C();
  sub_1007263E0();
  sub_100487AFC();
  sub_1007263E0();
  sub_100441FD4(v1, v2);
  sub_100725B60();
  return sub_100442248(v1, v2);
}

Swift::Int sub_10048772C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  unint64_t v2 = *(void *)(v0 + 16);
  sub_100726DD0();
  sub_10044F12C();
  sub_1007263E0();
  sub_100487AFC();
  sub_1007263E0();
  sub_100441FD4(v1, v2);
  sub_100725B60();
  sub_100442248(v1, v2);
  return sub_100726E30();
}

uint64_t sub_1004877EC(unsigned int *a1, unsigned int *a2)
{
  int v2 = *((unsigned __int8 *)a1 + 5);
  uint64_t v3 = *((void *)a1 + 1);
  unint64_t v4 = *((void *)a1 + 2);
  int v5 = *((unsigned __int8 *)a2 + 5);
  uint64_t v6 = *((void *)a2 + 1);
  unint64_t v7 = *((void *)a2 + 2);
  if (!sub_100512630(*a1 | ((unint64_t)*((unsigned __int8 *)a1 + 4) << 32), *a2 | ((unint64_t)*((unsigned __int8 *)a2 + 4) << 32))|| !sub_100513FD8(v2, v5))
  {
    return 0;
  }

  return sub_100453588(v3, v4, v6, v7);
}

void *sub_100487890(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionMaterialData();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2, v4);
  unint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5, v8);
  unint64_t v10 = (char *)&v27 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11)
  {
    sub_100431F80(&qword_100A44EE0);
    uint64_t v27 = v11;
    uint64_t v12 = sub_1007269E0();
    uint64_t v13 = 0;
    uint64_t v14 = v12 + 56;
    uint64_t v28 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v15 = *(void *)(v3 + 72);
    while (1)
    {
      sub_100487DEC(v28 + v15 * v13, (uint64_t)v10);
      sub_100487E50(&qword_100A44ED0);
      uint64_t v16 = sub_1007263D0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v12 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v14 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          sub_100487DEC(*(void *)(v12 + 48) + v18 * v15, (uint64_t)v7);
          sub_100487E50(&qword_100A44ED8);
          char v22 = sub_100726410();
          sub_100487E94((uint64_t)v7);
          if (v22) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v14 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        sub_100487E94((uint64_t)v10);
      }
      else
      {
LABEL_8:
        *(void *)(v14 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)sub_100487EF0((uint64_t)v10, *(void *)(v12 + 48) + v18 * v15);
        uint64_t v24 = *(void *)(v12 + 16);
        BOOL v25 = __OFADD__(v24, 1);
        uint64_t v26 = v24 + 1;
        if (v25)
        {
          __break(1u);
          return result;
        }
        *(void *)(v12 + 16) = v26;
      }
      if (++v13 == v27) {
        return (void *)v12;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

unint64_t sub_100487AFC()
{
  unint64_t result = qword_100A45AF0;
  if (!qword_100A45AF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A45AF0);
  }
  return result;
}

unint64_t sub_100487B50(uint64_t a1)
{
  unint64_t result = sub_100487B78();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100487B78()
{
  unint64_t result = qword_100A45AF8;
  if (!qword_100A45AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A45AF8);
  }
  return result;
}

unint64_t sub_100487BD0()
{
  unint64_t result = qword_100A45B00;
  if (!qword_100A45B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A45B00);
  }
  return result;
}

uint64_t destroy for IDSGroupEncryptionDesiredBlobMaterialSet(uint64_t a1)
{
  return sub_100442248(*(void *)(a1 + 8), *(void *)(a1 + 16));
}

uint64_t _s17identityservicesd40IDSGroupEncryptionDesiredBlobMaterialSetVwCP_0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  uint64_t v3 = *(void *)(a2 + 8);
  unint64_t v4 = *(void *)(a2 + 16);
  sub_100441FD4(v3, v4);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  return a1;
}

uint64_t assignWithCopy for IDSGroupEncryptionDesiredBlobMaterialSet(uint64_t a1, int *a2)
{
  int v3 = *a2;
  *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
  *(_DWORD *)a1 = v3;
  *(unsigned char *)(a1 + 5) = *((unsigned char *)a2 + 5);
  uint64_t v4 = *((void *)a2 + 1);
  unint64_t v5 = *((void *)a2 + 2);
  sub_100441FD4(v4, v5);
  uint64_t v6 = *(void *)(a1 + 8);
  unint64_t v7 = *(void *)(a1 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  sub_100442248(v6, v7);
  return a1;
}

__n128 initializeWithTake for IDSGroupEncryptionDesiredBlobMaterialSet(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for IDSGroupEncryptionDesiredBlobMaterialSet(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  uint64_t v3 = *(void *)(a1 + 8);
  unint64_t v4 = *(void *)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  sub_100442248(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSGroupEncryptionDesiredBlobMaterialSet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 5);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSGroupEncryptionDesiredBlobMaterialSet(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 5) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionDesiredBlobMaterialSet()
{
  return &type metadata for IDSGroupEncryptionDesiredBlobMaterialSet;
}

uint64_t sub_100487DEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionMaterialData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100487E50(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for IDSGroupEncryptionMaterialData();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100487E94(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionMaterialData();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100487EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionMaterialData();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_100487F54()
{
  unint64_t result = qword_100A45B10;
  if (!qword_100A45B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A45B10);
  }
  return result;
}

uint64_t sub_100487FA8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_1004880AC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1004881B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004882A4()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_1004883A8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1004884B4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004885A0()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_1004886A4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1004887B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048889C()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  return v0;
}

double sub_1004889C8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_100488AFC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100488BE8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  return v0;
}

double sub_100488D14@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_100488E48()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100488F34()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_10049ECF4(&qword_100A45B40, (void (*)(void))sub_10049ED64);
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048906C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_10049ECF4(&qword_100A45B40, (void (*)(void))sub_10049ED64);
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1004891AC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100482480(v1, v2);
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D80();
  sub_10044CE88(v1, v2);
  return swift_release();
}

uint64_t sub_10048929C(uint64_t a1, unint64_t a2)
{
  return swift_release();
}

uint64_t sub_100489384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  return swift_release();
}

uint64_t sub_100489450()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_10049EE40();
  sub_100726200();
  swift_release();
  return v0;
}

uint64_t sub_100489568@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
  sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  sub_10049EE40();
  sub_100726200();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_100489688()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100489768()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048983C()
{
  return swift_release();
}

void *sub_1004898EC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  swift_allocObject();
  uint64_t v17 = sub_10049EF28(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  sub_10044CE88(a9, a10);
  return v17;
}

uint64_t sub_1004899A4(uint64_t a1)
{
  return sub_10048C418(a1, (void (*)(uint64_t))sub_1004899BC);
}

void *sub_1004899BC(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[6] = sub_100431F80(&qword_100A45B68);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  uint64_t v8 = v7;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v2 + 3);
  sub_1007261C0();
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_100431F80(&qword_100A45688);
  sub_10049EB6C(&qword_100A45B20);
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  *((unsigned char *)v2 + 16) = 0;
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  *((unsigned char *)v2 + 17) = 0;
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_100431F80(&qword_100A45B30);
  sub_10049ECF4(&qword_100A45B38, (void (*)(void))sub_10049ECA0);
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  *((unsigned char *)v2 + 18) = 0;
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_100431F80(&qword_100A45B48);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
  sub_10049EE40();
  sub_1007260C0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  *((unsigned char *)v2 + 19) = 0;
  sub_100725DA0();
  *((_DWORD *)v2 + 4) = 0;
  sub_1004407E0(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_10044C6AC((uint64_t)(v2 + 3));
  sub_10048712C(&v6, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_10044C6AC(a1);
  return v2;
}

uint64_t sub_100489D58()
{
  return sub_10049A1CC(OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV121IDSQuerySDAddressable___observationRegistrar);
}

uint64_t sub_100489D64()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_100489E6C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_100489F7C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10048A06C()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10048A170@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_10048A27C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048A368()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048A470@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048A580(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10048A670()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048A778@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048A888(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10048A978()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100726210();
  swift_release();
  return v1;
}

uint64_t sub_10048AA7C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100726210();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10048AB88()
{
  return swift_release();
}

uint64_t sub_10048AC58()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100726210();
  swift_release();
  return v1;
}

uint64_t sub_10048AD5C@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100726210();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10048AE68()
{
  return swift_release();
}

uint64_t sub_10048AF38()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048B064@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048B198()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048B284()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100726210();
  swift_release();
  return v1;
}

uint64_t sub_10048B388@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100726210();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_10048B494()
{
  return swift_release();
}

uint64_t sub_10048B564()
{
  return sub_10048B570();
}

uint64_t sub_10048B570()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049ECF4(&qword_100A45B40, (void (*)(void))sub_10049ED64);
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048B6A0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_10048B6AC(a1, a2);
}

double sub_10048B6AC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049ECF4(&qword_100A45B40, (void (*)(void))sub_10049ED64);
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048B7E8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100482480(v1, v2);
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D80();
  sub_10044CE88(v1, v2);
  return swift_release();
}

uint64_t sub_10048B8D8()
{
  return sub_10048B570();
}

double sub_10048B8E4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return sub_10048B6AC(a1, a2);
}

uint64_t sub_10048B8F0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100482480(v1, v2);
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D80();
  sub_10044CE88(v1, v2);
  return swift_release();
}

double sub_10048B9E0@<D0>(uint64_t a1@<X8>)
{
  *(double *)&long long v4 = v1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049FED4();
  sub_100726210();
  swift_release();
  double result = v1;
  *(_OWORD *)a1 = v4;
  *(_OWORD *)(a1 + 16) = v5;
  *(_WORD *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 34) = v7;
  *(_OWORD *)(a1 + 40) = v8;
  *(_OWORD *)(a1 + 56) = v9;
  *(_OWORD *)(a1 + 72) = v10;
  *(_OWORD *)(a1 + 88) = v11;
  return result;
}

double sub_10048BB20@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_10049FED4();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *(_OWORD *)a2 = v4;
  *(_OWORD *)(a2 + 16) = v5;
  *(_WORD *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 34) = v7;
  *(_OWORD *)(a2 + 40) = v8;
  *(_OWORD *)(a2 + 56) = v9;
  *(_OWORD *)(a2 + 72) = v10;
  *(_OWORD *)(a2 + 88) = v11;
  return result;
}

uint64_t sub_10048BC60(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 80);
  v5[4] = *(_OWORD *)(a1 + 64);
  v5[5] = v1;
  uint64_t v6 = *(void *)(a1 + 96);
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  long long v3 = *(_OWORD *)(a1 + 48);
  v5[2] = *(_OWORD *)(a1 + 32);
  v5[3] = v3;
  swift_getKeyPath();
  sub_10049FF54((uint64_t *)v5, (void (*)(uint64_t, uint64_t))sub_100482480);
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D80();
  sub_10049FF54((uint64_t *)v5, (void (*)(uint64_t, uint64_t))sub_10044CE88);
  return swift_release();
}

uint64_t sub_10048BD84()
{
  return swift_release();
}

uint64_t sub_10048BE40()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_1004A001C();
  sub_100726200();
  swift_release();
  return v0;
}

uint64_t sub_10048BF58@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  sub_1004A001C();
  sub_100726200();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10048C078()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048C158()
{
  return swift_release();
}

void *sub_10048C208(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, char a7, char a8, long long a9, char a10, long long a11, long long a12, long long *a13)
{
  swift_allocObject();
  uint64_t v15 = sub_1004A0104(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  sub_10049FF54((uint64_t *)a13, (void (*)(uint64_t, uint64_t))sub_10044CE88);
  sub_10044CE88(a12, *((unint64_t *)&a12 + 1));
  sub_10044CE88(a11, *((unint64_t *)&a11 + 1));
  sub_100442248(a5, a6);
  sub_100442248(a3, a4);
  return v15;
}

void sub_10048C31C(uint64_t *a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v4 = (void *)*a1;
  uint64_t v5 = *a1 + 40;
  if (a2)
  {
    uint64_t v6 = v4[16] + 24;
    sub_1004407E0(*a1, v5);
    swift_beginAccess();
    sub_10044C6AC(v6);
    a3(v5, v6);
    swift_endAccess();
    sub_10044C6AC((uint64_t)v4);
  }
  else
  {
    uint64_t v7 = v4[16] + 24;
    swift_beginAccess();
    sub_10044C6AC(v7);
    a3((uint64_t)v4, v7);
    swift_endAccess();
  }

  free(v4);
}

uint64_t sub_10048C400(uint64_t a1)
{
  return sub_10048C418(a1, (void (*)(uint64_t))sub_10048C468);
}

uint64_t sub_10048C418(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = swift_allocObject();
  a2(a1);
  return v4;
}

void *sub_10048C468(uint64_t a1)
{
  long long v2 = v1;
  uint64_t v3 = *v1;
  v2[6] = sub_100431F80(&qword_100A45BA8);
  *(void *)&long long v6 = v3;
  *((void *)&v6 + 1) = v3;
  uint64_t v7 = sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  uint64_t v8 = v7;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v2 + 3);
  sub_1007261C0();
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_100431F80(&qword_100A45688);
  sub_10049EB6C(&qword_100A45B20);
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  *((unsigned char *)v2 + 16) = 0;
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_100431F80(&qword_100A45B30);
  sub_10049ECF4(&qword_100A45B38, (void (*)(void))sub_10049ECA0);
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  *((unsigned char *)v2 + 17) = 0;
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  *((unsigned char *)v2 + 18) = 0;
  sub_1004407E0((uint64_t)(v2 + 3), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_100431F80(&qword_100A45B88);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  sub_1004A001C();
  sub_1007260C0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  *((unsigned char *)v2 + 19) = 0;
  sub_100725DA0();
  *((_DWORD *)v2 + 4) = 0;
  sub_1004407E0(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_10044C6AC((uint64_t)(v2 + 3));
  sub_10048712C(&v6, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_10044C6AC(a1);
  return v2;
}

uint64_t sub_10048C934()
{
  return sub_10049A1CC(OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV116IDSQuerySDDevice___observationRegistrar);
}

unint64_t sub_10048C940(char a1)
{
  unint64_t result = 0x626167676F4C746BLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000011;
      break;
    case 2:
      unint64_t result = 0x69737265566D676ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    case 4:
    case 7:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000021;
      break;
    case 6:
      unint64_t result = 0xD00000000000001FLL;
      break;
    default:
      return result;
  }
  return result;
}

BOOL sub_10048CA5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

unint64_t sub_10048CA70()
{
  return sub_10048C940(*v0);
}

uint64_t sub_10048CA78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004A16BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10048CAA0()
{
  return 0;
}

void sub_10048CAAC(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_10048CAB8(uint64_t a1)
{
  unint64_t v2 = sub_1004A1600();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10048CAF4(uint64_t a1)
{
  unint64_t v2 = sub_1004A1600();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10048CB30(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100431F80(&qword_100A45BB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  long long v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10044C0F4(a1, a1[3]);
  sub_1004A1600();
  sub_100726E60();
  sub_1004A1654(v3, (uint64_t)v19);
  sub_1004A1654((uint64_t)v19, (uint64_t)v13);
  char v12 = 0;
  sub_10049ECA0();
  sub_100726C80();
  if (!v2)
  {
    sub_1004A1654(v3 + 16, (uint64_t)v18);
    sub_1004A1654((uint64_t)v18, (uint64_t)v13);
    char v12 = 1;
    sub_100726C80();
    v13[0] = 2;
    sub_100726CD0();
    v13[0] = 3;
    sub_100726CC0();
    sub_1004A1654(v3 + 40, (uint64_t)v17);
    sub_1004A1654((uint64_t)v17, (uint64_t)v13);
    char v12 = 4;
    sub_100726C80();
    sub_1004A1654(v3 + 56, (uint64_t)v16);
    sub_1004A1654((uint64_t)v16, (uint64_t)v13);
    char v12 = 5;
    sub_100726C80();
    sub_1004A1654(v3 + 72, (uint64_t)v15);
    sub_1004A1654((uint64_t)v15, (uint64_t)v13);
    char v12 = 6;
    sub_100726C80();
    sub_1004A1654(v3 + 88, (uint64_t)v14);
    sub_1004A1654((uint64_t)v14, (uint64_t)v13);
    char v12 = 7;
    sub_100726C80();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

__n128 sub_10048CE60@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, __int16 a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, long long a10, __n128 a11, uint64_t a12, uint64_t a13)
{
  __n128 result = a11;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(_WORD *)(a9 + 32) = a5;
  *(unsigned char *)(a9 + 34) = a6;
  *(void *)(a9 + 40) = a7;
  *(void *)(a9 + 48) = a8;
  *(_OWORD *)(a9 + 56) = a10;
  *(__n128 *)(a9 + 72) = a11;
  *(void *)(a9 + 88) = a12;
  *(void *)(a9 + 96) = a13;
  return result;
}

__n128 sub_10048CE8C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1004A1A14(a1, v7);
  if (!v2)
  {
    long long v5 = v7[5];
    *(_OWORD *)(a2 + 64) = v7[4];
    *(_OWORD *)(a2 + 80) = v5;
    *(void *)(a2 + 96) = v8;
    long long v6 = v7[1];
    *(_OWORD *)a2 = v7[0];
    *(_OWORD *)(a2 + 16) = v6;
    __n128 result = (__n128)v7[3];
    *(_OWORD *)(a2 + 32) = v7[2];
    *(__n128 *)(a2 + 48) = result;
  }
  return result;
}

uint64_t sub_10048CEEC(void *a1)
{
  return sub_10048CB30(a1);
}

BOOL sub_10048CF38(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 80);
  v11[4] = *(_OWORD *)(a1 + 64);
  v11[5] = v2;
  uint64_t v12 = *(void *)(a1 + 96);
  long long v3 = *(_OWORD *)(a1 + 16);
  v11[0] = *(_OWORD *)a1;
  v11[1] = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  v11[2] = *(_OWORD *)(a1 + 32);
  v11[3] = v4;
  long long v5 = *(_OWORD *)(a2 + 16);
  v13[0] = *(_OWORD *)a2;
  v13[1] = v5;
  long long v6 = *(_OWORD *)(a2 + 32);
  long long v7 = *(_OWORD *)(a2 + 48);
  long long v8 = *(_OWORD *)(a2 + 64);
  long long v9 = *(_OWORD *)(a2 + 80);
  uint64_t v14 = *(void *)(a2 + 96);
  v13[4] = v8;
  v13[5] = v9;
  void v13[2] = v6;
  v13[3] = v7;
  return sub_1004A1254((uint64_t)v11, (uint64_t)v13);
}

uint64_t sub_10048CFA4()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048D0AC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048D1BC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10048D2AC()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10048D3B0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_10048D4BC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048D5A8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10048D6AC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_10048D7B8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048D8A4()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10048D9A8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_10048DAB4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048DBA0()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048DCA8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048DDB8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10048DEA8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048DFB0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048E0C0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10048E1B0()
{
  return swift_release();
}

uint64_t sub_10048E2E8()
{
  return swift_release();
}

uint64_t sub_10048E420(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100725CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  long long v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v14 = *a2;
  uint64_t v9 = v14;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D80();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_10048E5A8()
{
  return swift_release();
}

uint64_t sub_10048E6E0()
{
  return swift_release();
}

uint64_t sub_10048E818(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100725CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  long long v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v14 = *a2;
  uint64_t v9 = v14;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D80();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

double sub_10048E9A0()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048EAA4@<D0>(double *a1@<X0>, double *a2@<X8>)
{
  double v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  sub_100726210();
  swift_release();
  double result = v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048EBB0()
{
  return swift_release();
}

uint64_t sub_10048EC88()
{
  return swift_release();
}

uint64_t *sub_10048ED24(uint64_t a1, void (*a2)(void, void, void), uint64_t a3, void (*a4)(void, void, void), uint64_t a5, void (*a6)(void, void, void), uint64_t a7, unint64_t a8, double a9, uint64_t a10, void (*a11)(void, void, void), uint64_t a12, uint64_t a13)
{
  swift_allocObject();
  unint64_t v19 = sub_1004A2480(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
  sub_100442248(a10, (unint64_t)a11);
  sub_100442248(a7, a8);
  return v19;
}

uint64_t sub_10048EDF8(uint64_t a1)
{
  return sub_10048C418(a1, (void (*)(uint64_t))sub_10048EE10);
}

uint64_t *sub_10048EE10(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[5] = sub_100431F80(&qword_100A45BC8);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  uint64_t v8 = v7;
  v2[6] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v2 + 2);
  sub_1007261C0();
  sub_1004407E0((uint64_t)(v2 + 2), (uint64_t)&v6);
  sub_10044C0F4(&v6, v8);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v6);
  sub_100725DA0();
  sub_1004407E0(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_10044C6AC((uint64_t)(v2 + 2));
  sub_10048712C(&v6, (uint64_t)(v2 + 2));
  swift_endAccess();
  sub_10044C6AC(a1);
  return v2;
}

uint64_t sub_10048EFD0()
{
  return sub_10049D070(OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV117IDSQuerySDSession___observationRegistrar);
}

uint64_t sub_10048EFDC()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048F0E4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048F1F4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10048F2E4()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10048F3E8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_10048F4F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048F5E0()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048F6E8@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048F7F8(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10048F8E8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10048F9EC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_10048FAF8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10048FBE4()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10048FCEC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10048FDFC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10048FEEC()
{
  return swift_release();
}

uint64_t sub_100490024()
{
  return swift_release();
}

uint64_t sub_10049015C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100725CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v14 = *a2;
  uint64_t v9 = v14;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  sub_100725D80();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t *sub_1004902E4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8)
{
  swift_allocObject();
  uint64_t v16 = sub_1004A3348(a1, a2, a3, a4, a5, a6, a7, a8);
  sub_100442248(a7, a8);
  sub_100442248(a3, a4);
  return v16;
}

void sub_100490398(uint64_t *a1, char a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v4 = (void *)*a1;
  uint64_t v5 = *a1 + 40;
  if (a2)
  {
    uint64_t v6 = v4[16] + 16;
    sub_1004407E0(*a1, v5);
    swift_beginAccess();
    sub_10044C6AC(v6);
    a3(v5, v6);
    swift_endAccess();
    sub_10044C6AC((uint64_t)v4);
  }
  else
  {
    uint64_t v7 = v4[16] + 16;
    swift_beginAccess();
    sub_10044C6AC(v7);
    a3((uint64_t)v4, v7);
    swift_endAccess();
  }

  free(v4);
}

uint64_t sub_10049047C(uint64_t a1)
{
  return sub_10048C418(a1, (void (*)(uint64_t))sub_100490494);
}

uint64_t *sub_100490494(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[5] = sub_100431F80(&qword_100A45BE0);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  uint64_t v8 = v7;
  v2[6] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v2 + 2);
  sub_1007261C0();
  sub_100725DA0();
  sub_1004407E0(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_10044C6AC((uint64_t)(v2 + 2));
  sub_10048712C(&v6, (uint64_t)(v2 + 2));
  swift_endAccess();
  sub_10044C6AC(a1);
  return v2;
}

uint64_t sub_1004905E8()
{
  return sub_10049D070(OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV124IDSQuerySDPublicIdentity___observationRegistrar);
}

uint64_t sub_1004905F4()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BE8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_1004906F8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BE8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_100490804()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004908F0()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BE8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_1004909F4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BE8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_100490B00()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100490BEC()
{
  return swift_release();
}

uint64_t sub_100490D2C()
{
  return swift_release();
}

uint64_t sub_100490E6C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004A3E5C(a1, (uint64_t)v7);
  uint64_t v13 = *a2;
  uint64_t v8 = v13;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  sub_10049EA54(&qword_100A45BE8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  sub_100725D80();
  swift_release();
  return sub_1004A3D04((uint64_t)v7);
}

uint64_t sub_100490F98(uint64_t a1)
{
  return sub_1004A3D04(a1);
}

uint64_t sub_10049106C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  sub_1004910D4(a1, a2, a3, a4);
  return v8;
}

void *sub_1004910D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  uint64_t v8 = *v4;
  uint64_t v9 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v9 - 8, v10);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  _OWORD v5[6] = sub_100431F80(&qword_100A45C08);
  unint64_t v19 = (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle;
  uint64_t v13 = sub_10049EA54(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  v24[0] = v8;
  v24[1] = v8;
  v24[2] = v13;
  uint64_t v25 = v13;
  v5[7] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v5 + 3);
  sub_1007261C0();
  *((unsigned char *)v5 + 16) = 1;
  uint64_t v16 = (char *)v5
      + OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV121IDSQuerySDShortHandle___observationRegistrar[0];
  sub_100725DA0();
  sub_1004407E0((uint64_t)(v5 + 3), (uint64_t)v24);
  sub_10044C0F4(v24, v25);
  swift_getKeyPath();
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)v24);
  sub_1004407E0((uint64_t)(v5 + 3), (uint64_t)v24);
  sub_10044C0F4(v24, v25);
  swift_getKeyPath();
  uint64_t v22 = v17;
  uint64_t v23 = v18;
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)v24);
  sub_100725CB0();
  uint64_t v14 = sub_100725CC0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 0, 1, v14);
  v24[0] = v5;
  swift_getKeyPath();
  uint64_t v20 = v5;
  uint64_t v21 = v12;
  sub_10049EA54(&qword_100A45BE8, v19);
  sub_100725D80();
  swift_release();
  sub_1004A3D04((uint64_t)v12);
  return v5;
}

uint64_t sub_100491400(uint64_t a1)
{
  return sub_10048C418(a1, (void (*)(uint64_t))sub_100491418);
}

void *sub_100491418(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[6] = sub_100431F80(&qword_100A45C08);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_10049EA54(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  uint64_t v8 = v7;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v2 + 3);
  sub_1007261C0();
  *((unsigned char *)v2 + 16) = 1;
  sub_100725DA0();
  *((unsigned char *)v2 + 16) = 0;
  sub_1004407E0(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_10044C6AC((uint64_t)(v2 + 3));
  sub_10048712C(&v6, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_10044C6AC(a1);
  return v2;
}

uint64_t sub_100491578()
{
  return sub_10049A1CC(OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV121IDSQuerySDShortHandle___observationRegistrar);
}

uint64_t sub_100491584()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10049168C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10049179C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10049188C()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_100491994@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_100491AA4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_100491B94()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_100491C9C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_100491DAC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_100491E9C()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_100491FA0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1004920AC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100492198()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049229C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_1004923A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100492494()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_10049259C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1004926AC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_10049279C()
{
  return swift_release();
}

uint64_t sub_1004928D4()
{
  return swift_release();
}

uint64_t sub_100492A0C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100725CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v14 = *a2;
  uint64_t v9 = v14;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_100492B94()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  return v0;
}

double sub_100492C9C@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049ED64();
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_100492DAC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_getKeyPath();
  sub_100441FD4(v1, v2);
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  sub_100442248(v1, v2);
  return swift_release();
}

uint64_t sub_100492E9C(uint64_t a1, unint64_t a2)
{
  return swift_release();
}

uint64_t sub_100492F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  return swift_release();
}

uint64_t sub_100493020()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  swift_release();
  return v1;
}

uint64_t sub_100493124@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100493230()
{
  return swift_release();
}

uint64_t sub_100493300()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  swift_release();
  return v1;
}

uint64_t sub_100493404@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100493510()
{
  return swift_release();
}

uint64_t sub_1004935E0()
{
  return swift_release();
}

uint64_t sub_1004936B0()
{
  return swift_release();
}

uint64_t sub_1004937F0()
{
  return swift_release();
}

uint64_t sub_100493930(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004A3E5C(a1, (uint64_t)v7);
  uint64_t v13 = *a2;
  uint64_t v8 = v13;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  swift_release();
  return sub_1004A3D04((uint64_t)v7);
}

uint64_t sub_100493A5C(uint64_t a1)
{
  return sub_1004A3D04(a1);
}

uint64_t sub_100493B30(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  swift_getKeyPath();
  sub_10049EA54(a4, a5);
  sub_1004A3D64(&qword_100A45BF8, &qword_100A46950);
  sub_100726230();

  return swift_release();
}

uint64_t sub_100493BF8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  swift_release();
  return v1;
}

uint64_t sub_100493CFC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100493E08()
{
  return swift_release();
}

uint64_t sub_100493ED8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  swift_release();
  return v1;
}

uint64_t sub_100493FDC@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100726210();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1004940E8()
{
  return swift_release();
}

uint64_t sub_1004941B8()
{
  return swift_release();
}

uint64_t sub_100494288(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  return swift_release();
}

uint64_t sub_100494314()
{
  return swift_release();
}

uint64_t sub_100494454()
{
  return swift_release();
}

uint64_t sub_100494594(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004A3E5C(a1, (uint64_t)v7);
  uint64_t v13 = *a2;
  uint64_t v8 = v13;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  swift_release();
  return sub_1004A3D04((uint64_t)v7);
}

uint64_t sub_1004946C0(uint64_t a1)
{
  return sub_1004A3D04(a1);
}

uint64_t sub_100494794()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  return v0;
}

double sub_1004948C0@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_1004949F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100494AE0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100494BC4()
{
  return swift_release();
}

uint64_t sub_100494D04()
{
  return swift_release();
}

uint64_t sub_100494E44(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004A3E5C(a1, (uint64_t)v7);
  uint64_t v13 = *a2;
  uint64_t v8 = v13;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  swift_release();
  return sub_1004A3D04((uint64_t)v7);
}

uint64_t sub_100494F70(uint64_t a1)
{
  return sub_1004A3D04(a1);
}

uint64_t sub_100495044()
{
  return swift_release();
}

uint64_t sub_100495184()
{
  return swift_release();
}

uint64_t sub_1004952C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004A3E5C(a1, (uint64_t)v7);
  uint64_t v13 = *a2;
  uint64_t v8 = v13;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  swift_release();
  return sub_1004A3D04((uint64_t)v7);
}

uint64_t sub_1004953F0(uint64_t a1)
{
  return sub_1004A3D04(a1);
}

uint64_t sub_1004954C4()
{
  return swift_release();
}

uint64_t sub_100495604()
{
  return swift_release();
}

uint64_t sub_100495744(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004A3E5C(a1, (uint64_t)v7);
  uint64_t v13 = *a2;
  uint64_t v8 = v13;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  sub_100725D80();
  swift_release();
  return sub_1004A3D04((uint64_t)v7);
}

uint64_t sub_100495870(uint64_t a1)
{
  return sub_1004A3D04(a1);
}

void *sub_100495944(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, unsigned __int8 a14, unsigned __int8 a15, unsigned __int8 a16, unsigned __int8 a17)
{
  swift_allocObject();
  uint64_t v17 = sub_1004A4868(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
  sub_100442248(a12, a13);
  sub_100442248(a9, a10);
  sub_100442248(a3, a4);
  sub_100442248(a1, a2);
  return v17;
}

uint64_t sub_100495A48(uint64_t a1)
{
  return sub_10048C418(a1, (void (*)(uint64_t))sub_100495A60);
}

void *sub_100495A60(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[6] = sub_100431F80(&qword_100A45C20);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  uint64_t v8 = v7;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v2 + 3);
  sub_1007261C0();
  *((_DWORD *)v2 + 4) = 16843009;
  *((_WORD *)v2 + 10) = 257;
  sub_100725DA0();
  *((_WORD *)v2 + 10) = 0;
  *((_DWORD *)v2 + 4) = 0;
  sub_1004407E0(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_10044C6AC((uint64_t)(v2 + 3));
  sub_10048712C(&v6, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_10044C6AC(a1);
  return v2;
}

uint64_t sub_100495BCC()
{
  return sub_10049A1CC(OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV131IDSQuerySDSenderKeyDistribution___observationRegistrar);
}

uint64_t sub_100495BD8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C28, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_100495CDC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C28, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_100495DE8()
{
  return swift_release();
}

uint64_t sub_100495EB4()
{
  return swift_release();
}

uint64_t sub_100495F50()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C28, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100726210();
  swift_release();
  return v1;
}

uint64_t sub_100496054@<X0>(_DWORD *a1@<X8>)
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C28, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100726210();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_100496160()
{
  return swift_release();
}

uint64_t sub_100496230()
{
  return swift_release();
}

uint64_t sub_1004962CC()
{
  return swift_release();
}

uint64_t sub_100496404()
{
  return swift_release();
}

uint64_t sub_10049653C(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100725CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v14 = *a2;
  uint64_t v9 = v14;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  sub_10049EA54(&qword_100A45C28, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  sub_100725D80();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1004966C4(uint64_t a1, int a2, char *a3)
{
  uint64_t v6 = swift_allocObject();
  sub_10049671C(a1, a2, a3);
  return v6;
}

uint64_t *sub_10049671C(uint64_t a1, int a2, char *a3)
{
  uint64_t v4 = v3;
  uint64_t v17 = a3;
  HIDWORD(v16) = a2;
  uint64_t v6 = *v3;
  uint64_t v7 = sub_100725CC0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4[5] = sub_100431F80(&qword_100A45C38);
  uint64_t v12 = sub_10049EA54(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  v19[0] = v6;
  v19[1] = v6;
  id v19[2] = v12;
  uint64_t v20 = v12;
  v4[6] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v4 + 2);
  sub_1007261C0();
  sub_100725DA0();
  sub_1004407E0((uint64_t)(v4 + 2), (uint64_t)v19);
  sub_10044C0F4(v19, v20);
  swift_getKeyPath();
  uint64_t v18 = a1;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v19);
  sub_1004407E0((uint64_t)(v4 + 2), (uint64_t)v19);
  sub_10044C0F4(v19, v20);
  swift_getKeyPath();
  LODWORD(v18) = HIDWORD(v16);
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v19);
  uint64_t v13 = v17;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v17, v7);
  sub_1004407E0((uint64_t)(v4 + 2), (uint64_t)v19);
  sub_10044C0F4(v19, v20);
  swift_getKeyPath();
  sub_10049EA54(&qword_100A46950, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1007260D0();
  swift_release();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v8 + 8);
  v14(v11, v7);
  sub_10044C6AC((uint64_t)v19);
  v14(v13, v7);
  return v4;
}

uint64_t sub_100496A70()
{
  return sub_10049D070(OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV130IDSGroupEncryptionKeyRollIndex___observationRegistrar);
}

uint64_t sub_100496A7C()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C40, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_100496B80@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C40, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_100496C8C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100496D78()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C40, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_100496E7C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C40, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_100496F88()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100497074()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C40, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_100497178@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C40, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_100497284()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100497370()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C40, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_100497474@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C40, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_100497580()
{
  return swift_release();
}

uint64_t sub_10049764C()
{
  return swift_release();
}

uint64_t sub_1004976E8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  sub_100497758(a1, a2, a3, a4);
  return v8;
}

uint64_t *sub_100497758(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = *v4;
  v5[5] = sub_100431F80(&qword_100A45C48);
  uint64_t v12 = v8;
  uint64_t v13 = v8;
  uint64_t v14 = sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  uint64_t v15 = v14;
  _OWORD v5[6] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v5 + 2);
  sub_1007261C0();
  sub_100725DA0();
  sub_1004407E0((uint64_t)(v5 + 2), (uint64_t)&v12);
  sub_10044C0F4(&v12, v15);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v12);
  sub_1004407E0((uint64_t)(v5 + 2), (uint64_t)&v12);
  sub_10044C0F4(&v12, v15);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v12);
  sub_1004407E0((uint64_t)(v5 + 2), (uint64_t)&v12);
  sub_10044C0F4(&v12, v15);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v12);
  uint64_t v12 = a3;
  uint64_t v13 = a4;
  swift_bridgeObjectRetain();
  v16._countAndFlagsBits = a1;
  v16._object = a2;
  sub_1007264C0(v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1004407E0((uint64_t)(v5 + 2), (uint64_t)&v12);
  sub_10044C0F4(&v12, v15);
  swift_getKeyPath();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v12);
  return v5;
}

uint64_t sub_100497A80(uint64_t a1)
{
  return sub_10048C418(a1, (void (*)(uint64_t))sub_100497A98);
}

uint64_t *sub_100497A98(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[5] = sub_100431F80(&qword_100A45C48);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  uint64_t v8 = v7;
  v2[6] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v2 + 2);
  sub_1007261C0();
  sub_100725DA0();
  sub_1004407E0(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_10044C6AC((uint64_t)(v2 + 2));
  sub_10048712C(&v6, (uint64_t)(v2 + 2));
  swift_endAccess();
  sub_10044C6AC(a1);
  return v2;
}

uint64_t sub_100497BEC()
{
  return sub_10049D070(OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV131IDSOffGridDeliveryDonatedHandle___observationRegistrar);
}

uint64_t sub_100497BF8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_100497CFC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_100497E08()
{
  return swift_release();
}

uint64_t sub_100497ED4()
{
  return swift_release();
}

uint64_t sub_100497F70()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_100498074@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_100498180()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10049826C()
{
  return swift_release();
}

uint64_t sub_1004983AC()
{
  return swift_release();
}

uint64_t sub_1004984EC(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v4 - 8, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1004A3E5C(a1, (uint64_t)v7);
  uint64_t v13 = *a2;
  uint64_t v8 = v13;
  swift_getKeyPath();
  uint64_t v11 = v8;
  uint64_t v12 = v7;
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D80();
  swift_release();
  return sub_1004A3D04((uint64_t)v7);
}

uint64_t sub_100498618()
{
  return swift_release();
}

uint64_t sub_100498750()
{
  return swift_release();
}

uint64_t sub_100498888(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_100725CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v14 = *a2;
  uint64_t v9 = v14;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D80();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_100498A10(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, void (*a5)(uint64_t))
{
  swift_getKeyPath();
  sub_10049EA54(a4, a5);
  sub_10049EA54(&qword_100A46950, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_100726230();

  return swift_release();
}

uint64_t sub_100498AD0()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_100498BD4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_100498CE0()
{
  return swift_release();
}

uint64_t sub_100498DAC()
{
  return swift_release();
}

uint64_t sub_100498E48()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_100498F4C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_100499058()
{
  return swift_release();
}

uint64_t sub_100499124()
{
  return swift_release();
}

uint64_t sub_1004991C0()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  return v0;
}

double sub_1004992EC@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_100499420()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10049950C()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  return v0;
}

double sub_100499638@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  *(void *)&long long v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  sub_10049EB6C(&qword_100A45B28);
  sub_100726210();
  swift_release();
  double result = *(double *)&v4;
  *a2 = v4;
  return result;
}

uint64_t sub_10049976C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_100499858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  return swift_release();
}

uint64_t sub_100499918(void *a1, uint64_t a2, uint64_t a3, char *a4, void *a5, void *a6, void *a7, uint64_t a8, void *a9, uint64_t a10, void *a11)
{
  uint64_t v19 = swift_allocObject();
  sub_1004999D0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
  return v19;
}

void *sub_1004999D0(void *a1, uint64_t a2, uint64_t a3, char *a4, void *a5, void *a6, void *a7, uint64_t a8, void *a9, uint64_t a10, void *a11)
{
  uint64_t v12 = v11;
  uint64_t v34 = a7;
  uint64_t v35 = a8;
  char v31 = a5;
  id v32 = a6;
  long long v40 = a4;
  uint64_t v33 = a3;
  unint64_t v30 = a1;
  uint64_t v37 = a10;
  uint64_t v38 = a11;
  unint64_t v36 = a9;
  uint64_t v15 = *v11;
  uint64_t v39 = sub_100725CC0();
  uint64_t v41 = *(void *)(v39 - 8);
  __chkstk_darwin(v39, v16);
  uint64_t v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v29, v19);
  uint64_t v21 = (char *)&v28 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[6] = sub_100431F80(&qword_100A45C58);
  uint64_t v22 = sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  v44[0] = v15;
  v44[1] = v15;
  v44[2] = v22;
  uint64_t v45 = v22;
  v12[7] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v12 + 3);
  sub_1007261C0();
  *((_WORD *)v12 + 8) = 257;
  *((unsigned char *)v12 + 18) = 1;
  sub_100725DA0();
  sub_1004407E0((uint64_t)(v12 + 3), (uint64_t)v44);
  sub_10044C0F4(v44, v45);
  swift_getKeyPath();
  uint64_t v42 = v30;
  uint64_t v43 = a2;
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)v44);
  sub_1004A3E5C(a3, (uint64_t)v21);
  sub_1004407E0((uint64_t)(v12 + 3), (uint64_t)v44);
  sub_10044C0F4(v44, v45);
  swift_getKeyPath();
  unint64_t v30 = &protocol conformance descriptor for <A> A?;
  sub_1004A3D64(&qword_100A45BF8, &qword_100A46950);
  sub_1007260D0();
  swift_release();
  sub_1004A3D04((uint64_t)v21);
  sub_10044C6AC((uint64_t)v44);
  *((unsigned char *)v12 + 16) = 0;
  uint64_t v23 = v41;
  uint64_t v24 = v39;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v18, v40, v39);
  sub_1004407E0((uint64_t)(v12 + 3), (uint64_t)v44);
  sub_10044C0F4(v44, v45);
  swift_getKeyPath();
  sub_10049EA54(&qword_100A46950, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v25 = v24;
  sub_1007260D0();
  swift_release();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v41 = v23 + 8;
  v26(v18, v25);
  sub_10044C6AC((uint64_t)v44);
  sub_1004407E0((uint64_t)(v12 + 3), (uint64_t)v44);
  sub_10044C0F4(v44, v45);
  swift_getKeyPath();
  uint64_t v42 = v31;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v44);
  sub_1004407E0((uint64_t)(v12 + 3), (uint64_t)v44);
  sub_10044C0F4(v44, v45);
  swift_getKeyPath();
  uint64_t v42 = v32;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v44);
  sub_1004407E0((uint64_t)(v12 + 3), (uint64_t)v44);
  sub_10044C0F4(v44, v45);
  swift_getKeyPath();
  uint64_t v42 = v34;
  uint64_t v43 = v35;
  sub_100431F80(&qword_100A45688);
  sub_10049EB6C(&qword_100A45B20);
  sub_1007260D0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10044C6AC((uint64_t)v44);
  *((unsigned char *)v12 + 17) = 0;
  sub_1004407E0((uint64_t)(v12 + 3), (uint64_t)v44);
  sub_10044C0F4(v44, v45);
  swift_getKeyPath();
  uint64_t v42 = v36;
  uint64_t v43 = v37;
  sub_1007260D0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10044C6AC((uint64_t)v44);
  *((unsigned char *)v12 + 18) = 0;
  sub_1004407E0((uint64_t)(v12 + 3), (uint64_t)v44);
  sub_10044C0F4(v44, v45);
  swift_getKeyPath();
  uint64_t v42 = v38;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v44);
  v26(v40, v39);
  sub_1004A3D04(v33);
  return v12;
}

uint64_t sub_10049A03C(uint64_t a1)
{
  return sub_10048C418(a1, (void (*)(uint64_t))sub_10049A054);
}

void *sub_10049A054(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[6] = sub_100431F80(&qword_100A45C58);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  uint64_t v8 = v7;
  v2[7] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v2 + 3);
  sub_1007261C0();
  *((_WORD *)v2 + 8) = 257;
  *((unsigned char *)v2 + 18) = 1;
  sub_100725DA0();
  *((_WORD *)v2 + 8) = 0;
  *((unsigned char *)v2 + 18) = 0;
  sub_1004407E0(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_10044C6AC((uint64_t)(v2 + 3));
  sub_10048712C(&v6, (uint64_t)(v2 + 3));
  swift_endAccess();
  sub_10044C6AC(a1);
  return v2;
}

uint64_t sub_10049A1C0()
{
  return sub_10049A1CC(OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV120IDSRegistrationEvent___observationRegistrar);
}

uint64_t sub_10049A1CC(void *a1)
{
  sub_10044C6AC(v1 + 24);
  uint64_t v3 = v1 + *a1;
  uint64_t v4 = sub_100725DB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_10049A274()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049A378@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  a2[1] = v5;
  return result;
}

uint64_t sub_10049A484()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_10049A570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  return swift_release();
}

uint64_t sub_10049A608()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049A70C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10049A818()
{
  return swift_release();
}

uint64_t sub_10049A8E4()
{
  return swift_release();
}

uint64_t sub_10049A980()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049AA84@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10049AB90()
{
  return swift_release();
}

uint64_t sub_10049AC5C()
{
  return swift_release();
}

uint64_t sub_10049ACF8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049ADFC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10049AF08()
{
  return swift_release();
}

uint64_t sub_10049AFD4()
{
  return swift_release();
}

uint64_t sub_10049B070()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049B174@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10049B280()
{
  return swift_release();
}

uint64_t sub_10049B34C()
{
  return swift_release();
}

uint64_t sub_10049B3E8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049B4EC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10049B5F8()
{
  return swift_release();
}

uint64_t sub_10049B6C4()
{
  return swift_release();
}

uint64_t sub_10049B760()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049B864@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10049B970()
{
  return swift_release();
}

uint64_t sub_10049BA3C()
{
  return swift_release();
}

uint64_t sub_10049BAD8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049BBDC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10049BCE8()
{
  return swift_release();
}

uint64_t sub_10049BDB4()
{
  return swift_release();
}

uint64_t sub_10049BE50()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049BF54@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10049C060()
{
  return swift_release();
}

uint64_t sub_10049C12C()
{
  return swift_release();
}

uint64_t sub_10049C1C8()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049C2CC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10049C3D8()
{
  return swift_release();
}

uint64_t sub_10049C4A4()
{
  return swift_release();
}

uint64_t sub_10049C540()
{
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  swift_release();
  return v0;
}

uint64_t sub_10049C644@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  swift_getKeyPath();
  sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100725D90();
  swift_release();
  swift_getKeyPath();
  sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  sub_100726210();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_10049C750()
{
  return swift_release();
}

uint64_t sub_10049C81C()
{
  return swift_release();
}

uint64_t sub_10049C8B8()
{
  uint64_t v0 = swift_allocObject();
  sub_10049C970();
  return v0;
}

uint64_t *sub_10049C970()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  v1[5] = sub_100431F80(&qword_100A45C68);
  v4[0] = v2;
  v4[1] = v2;
  uint64_t v5 = sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  uint64_t v6 = v5;
  v1[6] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v1 + 2);
  sub_1007261C0();
  sub_100725DA0();
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  sub_1004407E0((uint64_t)(v1 + 2), (uint64_t)v4);
  sub_10044C0F4(v4, v6);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v4);
  return v1;
}

uint64_t sub_10049CEF8(uint64_t a1)
{
  return sub_10048C418(a1, (void (*)(uint64_t))sub_10049CF10);
}

uint64_t *sub_10049CF10(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  v2[5] = sub_100431F80(&qword_100A45C68);
  *(void *)&long long v6 = v4;
  *((void *)&v6 + 1) = v4;
  uint64_t v7 = sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  uint64_t v8 = v7;
  v2[6] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v2 + 2);
  sub_1007261C0();
  sub_100725DA0();
  sub_1004407E0(a1, (uint64_t)&v6);
  swift_beginAccess();
  sub_10044C6AC((uint64_t)(v2 + 2));
  sub_10048712C(&v6, (uint64_t)(v2 + 2));
  swift_endAccess();
  sub_10044C6AC(a1);
  return v2;
}

uint64_t sub_10049D064()
{
  return sub_10049D070(OBJC_IVAR____TtCOO17identityservicesd26SDPersistenceMigrationPlan21SDPersistenceSchemaV125IDSQualifiedContactsCount___observationRegistrar);
}

uint64_t sub_10049D070(void *a1)
{
  sub_10044C6AC(v1 + 16);
  uint64_t v3 = v1 + *a1;
  uint64_t v4 = sub_100725DB0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_10049D11C()
{
  return sub_100726310();
}

uint64_t sub_10049D12C()
{
  sub_100431F80(&qword_100A45B08);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100794E30;
  unint64_t v1 = sub_100487F54();
  *(void *)(v0 + 32) = &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1;
  *(void *)(v0 + 40) = v1;
  return v0;
}

void *sub_10049D184()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_10049D190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049E1A0(a1, a2, a3, (void (*)(uint64_t))sub_1004899BC);
}

uint64_t sub_10049D1AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049DFB0(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_10048712C);
}

void (*sub_10049D1C4(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  swift_beginAccess();
  sub_1004407E0(v1 + 24, (uint64_t)v3);
  return sub_10049D240;
}

void sub_10049D240(uint64_t *a1, char a2)
{
}

uint64_t sub_10049D260()
{
  return sub_1007261F0();
}

uint64_t sub_10049D2D8()
{
  return sub_1007261E0();
}

uint64_t sub_10049D34C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);

  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_10049D3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049E1A0(a1, a2, a3, (void (*)(uint64_t))sub_10048C468);
}

uint64_t sub_10049D3E4@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1004407E0(v1 + 24, a1);
}

uint64_t sub_10049D434()
{
  return sub_1007261F0();
}

uint64_t sub_10049D4A8()
{
  return sub_1007261E0();
}

uint64_t sub_10049D51C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);

  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_10049D59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049E1A0(a1, a2, a3, (void (*)(uint64_t))sub_10048EE10);
}

uint64_t sub_10049D5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049E1F0(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_10048712C);
}

void (*sub_10049D5D0(void *a1))(uint64_t *a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[16] = v1;
  swift_beginAccess();
  sub_1004407E0(v1 + 16, (uint64_t)v3);
  return sub_10049D64C;
}

void sub_10049D64C(uint64_t *a1, char a2)
{
}

uint64_t sub_10049D668()
{
  return sub_1007261F0();
}

uint64_t sub_10049D6DC()
{
  return sub_1007261E0();
}

uint64_t sub_10049D750(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);

  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_10049D7D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049E1A0(a1, a2, a3, (void (*)(uint64_t))sub_100490494);
}

uint64_t sub_10049D7E8@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_1004407E0(v1 + 16, a1);
}

uint64_t sub_10049D838()
{
  return sub_1007261F0();
}

uint64_t sub_10049D8AC()
{
  return sub_1007261E0();
}

uint64_t sub_10049D920(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);

  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_10049D9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049E1A0(a1, a2, a3, (void (*)(uint64_t))sub_100491418);
}

uint64_t sub_10049D9BC()
{
  return sub_1007261F0();
}

uint64_t sub_10049DA30()
{
  return sub_1007261E0();
}

uint64_t sub_10049DAA4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10049EA54(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);

  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_10049DB24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049E1A0(a1, a2, a3, (void (*)(uint64_t))sub_100495A60);
}

uint64_t sub_10049DB40()
{
  return sub_1007261F0();
}

uint64_t sub_10049DBB4()
{
  return sub_1007261E0();
}

uint64_t sub_10049DC28(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);

  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_10049DCAC()
{
  return sub_1007261F0();
}

uint64_t sub_10049DD20()
{
  return sub_1007261E0();
}

uint64_t sub_10049DD94(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10049EA54(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);

  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_10049DE14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049E1A0(a1, a2, a3, (void (*)(uint64_t))sub_100497A98);
}

uint64_t sub_10049DE30()
{
  return sub_1007261F0();
}

uint64_t sub_10049DEA4()
{
  return sub_1007261E0();
}

uint64_t sub_10049DF18(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);

  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_10049DF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049E1A0(a1, a2, a3, (void (*)(uint64_t))sub_10049A054);
}

uint64_t sub_10049DFB0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = v4 + 24;
  swift_beginAccess();
  sub_10044C6AC(v7);
  a4(a1, v7);
  return swift_endAccess();
}

uint64_t sub_10049E020()
{
  return sub_1007261F0();
}

uint64_t sub_10049E094()
{
  return sub_1007261E0();
}

uint64_t sub_10049E108(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);

  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_10049E188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10049E1A0(a1, a2, a3, (void (*)(uint64_t))sub_10049CF10);
}

uint64_t sub_10049E1A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = swift_allocObject();
  a4(a1);
  return v6;
}

uint64_t sub_10049E1F0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = v4 + 16;
  swift_beginAccess();
  sub_10044C6AC(v7);
  a4(a1, v7);
  return swift_endAccess();
}

Swift::Int sub_10049E260()
{
  return sub_100726E30();
}

uint64_t sub_10049E2C4()
{
  return sub_1007261F0();
}

Swift::Int sub_10049E338()
{
  return sub_100726E30();
}

uint64_t sub_10049E398()
{
  return sub_1007261E0();
}

uint64_t sub_10049E40C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *a2;
  uint64_t v5 = sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);

  return static PersistentModel.== infix(_:_:)(v3, v4, v2, v5);
}

uint64_t sub_10049E48C(uint64_t a1, unint64_t a2)
{
  v10[3] = &type metadata for Data;
  v10[4] = &protocol witness table for Data;
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = sub_10044C0F4(v10, (uint64_t)&type metadata for Data);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_100441FD4(a1, a2);
      sub_100441FD4(v5, v6);
      sub_10049E6B0((int)v5, v5 >> 32);
      sub_100442248(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_100441FD4(a1, a2);
      swift_retain();
      swift_retain();
      sub_10049E6B0(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_100441FD4(a1, a2);
      sub_100725AF0();
      break;
  }
  return sub_10044C6AC((uint64_t)v10);
}

uint64_t sub_10049E6B0(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_100725910();
  if (!result || (uint64_t result = sub_100725940(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_100725930();
      return sub_100725AF0();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10049E744()
{
  sub_100431F80(&qword_100A48B40);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100795A60;
  uint64_t v1 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
  uint64_t v2 = sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  uint64_t v4 = sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
  uint64_t v6 = sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 72) = v6;
  uint64_t v7 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(0);
  uint64_t v8 = sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  *(void *)(v0 + 80) = v7;
  *(void *)(v0 + 88) = v8;
  uint64_t v9 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
  uint64_t v10 = sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  *(void *)(v0 + 96) = v9;
  *(void *)(v0 + 104) = v10;
  uint64_t v11 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0);
  uint64_t v12 = sub_10049EA54(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  *(void *)(v0 + 112) = v11;
  *(void *)(v0 + 120) = v12;
  uint64_t v13 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0);
  uint64_t v14 = sub_10049EA54(&qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
  *(void *)(v0 + 128) = v13;
  *(void *)(v0 + 136) = v14;
  uint64_t v15 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(0);
  uint64_t v16 = sub_10049EA54((unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
  *(void *)(v0 + 144) = v15;
  *(void *)(v0 + 152) = v16;
  uint64_t v17 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent(0);
  uint64_t v18 = sub_10049EA54(&qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
  *(void *)(v0 + 160) = v17;
  *(void *)(v0 + 168) = v18;
  uint64_t v19 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount(0);
  uint64_t v20 = sub_10049EA54(&qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
  *(void *)(v0 + 176) = v19;
  *(void *)(v0 + 184) = v20;
  return v0;
}

uint64_t type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(uint64_t a1)
{
  return sub_100440FD0(a1, qword_100A4F870);
}

uint64_t sub_10049EA54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10049EA9C()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100795B08, &qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
}

uint64_t sub_10049EB04()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100795B30, &qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
}

uint64_t sub_10049EB6C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100440798(&qword_100A45688);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10049EBD0()
{
  return sub_100499858(v0[2], v0[3], v0[4], (uint64_t)&unk_100795B58, &qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
}

uint64_t sub_10049EC38()
{
  return sub_100499858(v0[2], v0[3], v0[4], (uint64_t)&unk_100795B80, &qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
}

unint64_t sub_10049ECA0()
{
  unint64_t result = qword_100A482D0;
  if (!qword_100A482D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A482D0);
  }
  return result;
}

uint64_t sub_10049ECF4(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100440798(&qword_100A45B30);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10049ED64()
{
  unint64_t result = qword_100A482C0;
  if (!qword_100A482C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A482C0);
  }
  return result;
}

uint64_t sub_10049EDB8()
{
  return sub_100489384(v0[2], v0[3], v0[4], (uint64_t)&unk_100795BA8, &qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
}

uint64_t type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A4F888);
}

unint64_t sub_10049EE40()
{
  unint64_t result = qword_100A45B50;
  if (!qword_100A45B50)
  {
    sub_100440798(&qword_100A45B48);
    sub_1004413A8(&qword_100A45B58, &qword_100A45B60);
    sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A45B50);
  }
  return result;
}

uint64_t sub_10049EEFC()
{
  return sub_10048983C();
}

void *sub_10049EF28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v11 = v10;
  uint64_t v13 = *v10;
  _OWORD v11[6] = sub_100431F80(&qword_100A45B68);
  uint64_t v18 = v13;
  uint64_t v19 = v13;
  uint64_t v20 = sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
  uint64_t v21 = v20;
  v11[7] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v11 + 3);
  sub_1007261C0();
  sub_1004407E0((uint64_t)(v11 + 3), (uint64_t)&v18);
  sub_10044C0F4(&v18, v21);
  swift_getKeyPath();
  sub_100431F80(&qword_100A45688);
  sub_10049EB6C(&qword_100A45B20);
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v18);
  *((unsigned char *)v11 + 16) = 0;
  sub_1004407E0((uint64_t)(v11 + 3), (uint64_t)&v18);
  sub_10044C0F4(&v18, v21);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v18);
  *((unsigned char *)v11 + 17) = 0;
  sub_1004407E0((uint64_t)(v11 + 3), (uint64_t)&v18);
  sub_10044C0F4(&v18, v21);
  swift_getKeyPath();
  sub_100431F80(&qword_100A45B30);
  sub_10049ECF4(&qword_100A45B38, (void (*)(void))sub_10049ECA0);
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v18);
  *((unsigned char *)v11 + 18) = 0;
  sub_1004407E0((uint64_t)(v11 + 3), (uint64_t)&v18);
  sub_10044C0F4(&v18, v21);
  swift_getKeyPath();
  sub_100431F80(&qword_100A45B48);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
  sub_10049EE40();
  sub_1007260C0();
  swift_release();
  sub_10044C6AC((uint64_t)&v18);
  *((unsigned char *)v11 + 19) = 0;
  sub_100725DA0();
  sub_1004407E0((uint64_t)(v11 + 3), (uint64_t)&v18);
  sub_10044C0F4(&v18, v21);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v18);
  sub_1004407E0((uint64_t)(v11 + 3), (uint64_t)&v18);
  sub_10044C0F4(&v18, v21);
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v18);
  sub_1004407E0((uint64_t)(v11 + 3), (uint64_t)&v18);
  sub_10044C0F4(&v18, v21);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10044C6AC((uint64_t)&v18);
  *((unsigned char *)v11 + 16) = 0;
  sub_1004407E0((uint64_t)(v11 + 3), (uint64_t)&v18);
  sub_10044C0F4(&v18, v21);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10044C6AC((uint64_t)&v18);
  *((unsigned char *)v11 + 17) = 0;
  sub_1004407E0((uint64_t)(v11 + 3), (uint64_t)&v18);
  sub_10044C0F4(&v18, v21);
  swift_getKeyPath();
  sub_100482480(a9, a10);
  sub_1007260D0();
  swift_release();
  sub_10044CE88(a9, a10);
  sub_10044C6AC((uint64_t)&v18);
  *((unsigned char *)v11 + 18) = 0;
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = a3;
  v22._object = a4;
  sub_1007264C0(v22);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1004407E0((uint64_t)(v11 + 3), (uint64_t)&v18);
  sub_10044C0F4(&v18, v21);
  swift_getKeyPath();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v18);
  return v11;
}

uint64_t sub_10049F5A4()
{
  uint64_t v0 = sub_1007262B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100431F80(&qword_100A466D0);
  sub_1007262F0();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100795A70;
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  sub_100431F80(&qword_100A466D8);
  sub_100726330();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100794E30;
  sub_100726320();
  uint64_t v6 = sub_100726340();
  swift_allocObject();
  uint64_t v7 = sub_100726350();
  *((void *)&v12 + 1) = v6;
  uint64_t v13 = sub_10049EA54(&qword_100A466E0, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  *(void *)&long long v11 = v7;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  *((void *)&v15 + 1) = sub_100431F80(&qword_100A466F0);
  *(void *)&long long v14 = &_swiftEmptyArrayStorage;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for Schema.Relationship.DeleteRule.nullify(_:), v0);
  uint64_t v8 = sub_1007262C0();
  swift_allocObject();
  uint64_t v9 = sub_1007262D0();
  *((void *)&v12 + 1) = v8;
  uint64_t v13 = sub_10049EA54(&qword_100A466F8, (void (*)(uint64_t))&type metadata accessor for Schema.Relationship);
  *(void *)&long long v11 = v9;
  sub_1007262E0();
  return v5;
}

uint64_t sub_10049FAD8()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100795C20, (unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_10049FB40()
{
  return sub_100492F84(v0[2], v0[3], v0[4], (uint64_t)&unk_100795C48, (unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_10049FBA8()
{
  return sub_100492F84(v0[2], v0[3], v0[4], (uint64_t)&unk_100795C70, (unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_10049FC10()
{
  return sub_100494288(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), (uint64_t)&unk_100795C98, (unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_10049FC78()
{
  return sub_100494288(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), (uint64_t)&unk_100795CC0, (unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_10049FCE0()
{
  return sub_100499858(v0[2], v0[3], v0[4], (uint64_t)&unk_100795CE8, (unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_10049FD48()
{
  return sub_100494288(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), (uint64_t)&unk_100795D10, (unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_10049FDB0()
{
  return sub_100489384(v0[2], v0[3], v0[4], (uint64_t)&unk_100795D38, (unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_10049FE18()
{
  return sub_100489384(v0[2], v0[3], v0[4], (uint64_t)&unk_100795D60, (unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

unint64_t sub_10049FE80()
{
  unint64_t result = qword_100A45B78;
  if (!qword_100A45B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A45B78);
  }
  return result;
}

unint64_t sub_10049FED4()
{
  unint64_t result = qword_100A45B80;
  if (!qword_100A45B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A45B80);
  }
  return result;
}

uint64_t sub_10049FF28()
{
  return sub_10048BD84();
}

uint64_t *sub_10049FF54(uint64_t *a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = a1[2];
  uint64_t v5 = a1[3];
  uint64_t v6 = a1[5];
  uint64_t v7 = a1[6];
  uint64_t v8 = a1[7];
  uint64_t v9 = a1[8];
  uint64_t v10 = a1[9];
  uint64_t v11 = a1[10];
  uint64_t v13 = a1[12];
  uint64_t v14 = a1[11];
  a2(*a1, a1[1]);
  a2(v4, v5);
  a2(v6, v7);
  a2(v8, v9);
  a2(v10, v11);
  a2(v14, v13);
  return a1;
}

unint64_t sub_1004A001C()
{
  unint64_t result = qword_100A45B90;
  if (!qword_100A45B90)
  {
    sub_100440798(&qword_100A45B88);
    sub_1004413A8(&qword_100A45B98, &qword_100A45BA0);
    sub_10049EA54(&qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A45B90);
  }
  return result;
}

uint64_t sub_1004A00D8()
{
  return sub_10048C158();
}

void *sub_1004A0104(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, char a8, long long a9, char a10, long long a11, long long a12, long long *a13)
{
  uint64_t v14 = v13;
  *(void *)&long long v23 = a5;
  *((void *)&v23 + 1) = a6;
  *(void *)&long long v27 = a3;
  *((void *)&v27 + 1) = a4;
  uint64_t v15 = *v13;
  v14[6] = sub_100431F80(&qword_100A45BA8);
  *(void *)&long long v29 = v15;
  *((void *)&v29 + 1) = v15;
  *(void *)&long long v30 = sub_10049EA54((unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
  *((void *)&v30 + 1) = v30;
  v14[7] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v14 + 3);
  sub_1007261C0();
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  LOBYTE(v36) = 0;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  LOBYTE(v36) = 0;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  long long v36 = 0uLL;
  sub_100431F80(&qword_100A45688);
  sub_10049EB6C(&qword_100A45B20);
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  *((unsigned char *)v14 + 16) = 0;
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  LOBYTE(v36) = 0;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  long long v36 = xmmword_100795A50;
  sub_100431F80(&qword_100A45B30);
  sub_10049ECF4(&qword_100A45B38, (void (*)(void))sub_10049ECA0);
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  *((unsigned char *)v14 + 17) = 0;
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  long long v36 = xmmword_100795A50;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  *((unsigned char *)v14 + 18) = 0;
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  *(void *)&long long v36 = _swiftEmptyArrayStorage;
  sub_100431F80(&qword_100A45B88);
  type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
  sub_1004A001C();
  sub_1007260C0();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  *((unsigned char *)v14 + 19) = 0;
  sub_100725DA0();
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  *(void *)&long long v36 = a1;
  *((void *)&v36 + 1) = a2;
  swift_bridgeObjectRetain();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  long long v36 = v27;
  sub_100441FD4(v27, *((unint64_t *)&v27 + 1));
  sub_10049ECA0();
  sub_1007260D0();
  swift_release();
  sub_100442248(v27, *((unint64_t *)&v27 + 1));
  sub_10044C6AC((uint64_t)&v29);
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  long long v36 = v23;
  sub_100441FD4(v23, *((unint64_t *)&v23 + 1));
  sub_1007260D0();
  swift_release();
  sub_100442248(v23, *((unint64_t *)&v23 + 1));
  sub_10044C6AC((uint64_t)&v29);
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  LOBYTE(v36) = a7;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  LOBYTE(v36) = a8;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  long long v36 = a9;
  sub_1007260D0();
  swift_release();
  swift_bridgeObjectRelease();
  sub_10044C6AC((uint64_t)&v29);
  *((unsigned char *)v14 + 16) = 0;
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  LOBYTE(v36) = a10;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v29);
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  long long v36 = a11;
  sub_100482480(a11, *((unint64_t *)&a11 + 1));
  sub_1007260D0();
  swift_release();
  sub_10044CE88(a11, *((unint64_t *)&a11 + 1));
  sub_10044C6AC((uint64_t)&v29);
  *((unsigned char *)v14 + 17) = 0;
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  long long v36 = a12;
  sub_100482480(a12, *((unint64_t *)&a12 + 1));
  sub_1007260D0();
  swift_release();
  sub_10044CE88(a12, *((unint64_t *)&a12 + 1));
  sub_10044C6AC((uint64_t)&v29);
  *((unsigned char *)v14 + 18) = 0;
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v36);
  sub_10044C0F4(&v36, v37);
  swift_getKeyPath();
  long long v16 = a13[5];
  long long v33 = a13[4];
  long long v34 = v16;
  uint64_t v35 = *((void *)a13 + 12);
  long long v17 = a13[1];
  long long v29 = *a13;
  long long v30 = v17;
  long long v18 = a13[3];
  long long v31 = a13[2];
  long long v32 = v18;
  sub_10049FF54((uint64_t *)a13, (void (*)(uint64_t, uint64_t))sub_100482480);
  sub_10049FE80();
  sub_1007260D0();
  swift_release();
  sub_10049FF54((uint64_t *)a13, (void (*)(uint64_t, uint64_t))sub_10044CE88);
  sub_10044C6AC((uint64_t)&v36);
  uint64_t v19 = sub_10044CEBC();
  unint64_t v21 = v20;
  swift_bridgeObjectRelease();
  sub_1004407E0((uint64_t)(v14 + 3), (uint64_t)&v29);
  sub_10044C0F4(&v29, *((uint64_t *)&v30 + 1));
  swift_getKeyPath();
  *(void *)&long long v36 = v19;
  *((void *)&v36 + 1) = v21;
  sub_1007260D0();
  swift_release();
  sub_100442248(v19, v21);
  sub_10044C6AC((uint64_t)&v29);
  return v14;
}

uint64_t sub_1004A0B54()
{
  uint64_t v0 = sub_1007262B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0, v2);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100431F80(&qword_100A466D0);
  sub_1007262F0();
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_100795A80;
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  sub_100431F80(&qword_100A466D8);
  sub_100726330();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100794E30;
  sub_100726320();
  uint64_t v6 = sub_100726340();
  swift_allocObject();
  uint64_t v7 = sub_100726350();
  *((void *)&v12 + 1) = v6;
  uint64_t v13 = sub_10049EA54(&qword_100A466E0, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  *(void *)&long long v11 = v7;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  *((void *)&v15 + 1) = &type metadata for Bool;
  LOBYTE(v14) = 0;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  *((void *)&v15 + 1) = &type metadata for Bool;
  LOBYTE(v14) = 0;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  *((void *)&v15 + 1) = &type metadata for Bool;
  LOBYTE(v14) = 0;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v13 = 0;
  long long v11 = 0u;
  long long v12 = 0u;
  sub_1007262E0();
  swift_getKeyPath();
  *((void *)&v15 + 1) = sub_100431F80(&qword_100A466F0);
  *(void *)&long long v14 = &_swiftEmptyArrayStorage;
  swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v4, enum case for Schema.Relationship.DeleteRule.nullify(_:), v0);
  uint64_t v8 = sub_1007262C0();
  swift_allocObject();
  uint64_t v9 = sub_1007262D0();
  *((void *)&v12 + 1) = v8;
  uint64_t v13 = sub_10049EA54(&qword_100A466F8, (void (*)(uint64_t))&type metadata accessor for Schema.Relationship);
  *(void *)&long long v11 = v9;
  sub_1007262E0();
  return v5;
}

BOOL sub_1004A1254(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)a2;
  unint64_t v7 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    if (v7 >> 60 != 15) {
      goto LABEL_10;
    }
  }
  else
  {
    if (v7 >> 60 == 15) {
      goto LABEL_10;
    }
    sub_100482480(*(void *)a1, v5);
    sub_100482480(v6, v7);
    char v8 = sub_100453588(v4, v5, v6, v7);
    sub_10044CE88(v6, v7);
    sub_10044CE88(v4, v5);
    if ((v8 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v7 = *(void *)(a2 + 24);
  if (v5 >> 60 == 15)
  {
    if (v7 >> 60 != 15) {
      goto LABEL_10;
    }
  }
  else
  {
    if (v7 >> 60 == 15) {
      goto LABEL_10;
    }
    sub_100482480(*(void *)(a1 + 16), *(void *)(a1 + 24));
    sub_100482480(v6, v7);
    char v12 = sub_100453588(v4, v5, v6, v7);
    sub_10044CE88(v6, v7);
    sub_10044CE88(v4, v5);
    if ((v12 & 1) == 0) {
      return 0;
    }
  }
  if (*(unsigned __int16 *)(a1 + 32) != *(unsigned __int16 *)(a2 + 32)
    || *(unsigned __int8 *)(a1 + 34) != *(unsigned __int8 *)(a2 + 34))
  {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 40);
  unint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a2 + 40);
  unint64_t v7 = *(void *)(a2 + 48);
  if (v5 >> 60 == 15)
  {
    if (v7 >> 60 != 15) {
      goto LABEL_10;
    }
  }
  else
  {
    if (v7 >> 60 == 15) {
      goto LABEL_10;
    }
    sub_100482480(*(void *)(a1 + 40), *(void *)(a1 + 48));
    sub_100482480(v6, v7);
    char v13 = sub_100453588(v4, v5, v6, v7);
    sub_10044CE88(v6, v7);
    sub_10044CE88(v4, v5);
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = *(void *)(a1 + 56);
  unint64_t v5 = *(void *)(a1 + 64);
  uint64_t v6 = *(void *)(a2 + 56);
  unint64_t v7 = *(void *)(a2 + 64);
  if (v5 >> 60 == 15)
  {
    if (v7 >> 60 != 15) {
      goto LABEL_10;
    }
  }
  else
  {
    if (v7 >> 60 == 15) {
      goto LABEL_10;
    }
    sub_100482480(*(void *)(a1 + 56), *(void *)(a1 + 64));
    sub_100482480(v6, v7);
    char v14 = sub_100453588(v4, v5, v6, v7);
    sub_10044CE88(v6, v7);
    sub_10044CE88(v4, v5);
    if ((v14 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v4 = *(void *)(a1 + 72);
  unint64_t v5 = *(void *)(a1 + 80);
  uint64_t v6 = *(void *)(a2 + 72);
  unint64_t v7 = *(void *)(a2 + 80);
  if (v5 >> 60 == 15)
  {
    if (v7 >> 60 == 15) {
      goto LABEL_31;
    }
LABEL_10:
    sub_100482480(v4, v5);
    sub_100482480(v6, v7);
    sub_10044CE88(v4, v5);
    uint64_t v9 = v6;
    unint64_t v10 = v7;
LABEL_11:
    sub_10044CE88(v9, v10);
    return 0;
  }
  if (v7 >> 60 == 15) {
    goto LABEL_10;
  }
  sub_100482480(*(void *)(a1 + 72), *(void *)(a1 + 80));
  sub_100482480(v6, v7);
  char v15 = sub_100453588(v4, v5, v6, v7);
  sub_10044CE88(v6, v7);
  sub_10044CE88(v4, v5);
  if ((v15 & 1) == 0) {
    return 0;
  }
LABEL_31:
  uint64_t v17 = *(void *)(a1 + 88);
  unint64_t v16 = *(void *)(a1 + 96);
  uint64_t v19 = *(void *)(a2 + 88);
  unint64_t v18 = *(void *)(a2 + 96);
  if (v16 >> 60 == 15)
  {
    if (v18 >> 60 == 15) {
      return 1;
    }
LABEL_35:
    sub_100482480(v17, v16);
    sub_100482480(v19, v18);
    sub_10044CE88(v17, v16);
    uint64_t v9 = v19;
    unint64_t v10 = v18;
    goto LABEL_11;
  }
  if (v18 >> 60 == 15) {
    goto LABEL_35;
  }
  sub_100482480(v17, v16);
  sub_100482480(v19, v18);
  char v20 = sub_100453588(v17, v16, v19, v18);
  sub_10044CE88(v19, v18);
  sub_10044CE88(v17, v16);
  return (v20 & 1) != 0;
}

unint64_t sub_1004A1600()
{
  unint64_t result = qword_100A4DAB8[0];
  if (!qword_100A4DAB8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A4DAB8);
  }
  return result;
}

uint64_t sub_1004A1654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A45B30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004A16BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x626167676F4C746BLL && a2 == 0xEE0061746144656CLL;
  if (v2 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001008C2A30 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x69737265566D676ELL && a2 == 0xED0000746E496E6FLL || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001008C2A50 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001008C2A70 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x80000001008C2A90 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000001008C2AC0 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000001008C2AE0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    char v6 = sub_100726D20();
    swift_bridgeObjectRelease();
    if (v6) {
      return 7;
    }
    else {
      return 8;
    }
  }
}

uint64_t sub_1004A1A14@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_100431F80(&qword_100A466E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10044C0F4(a1, a1[3]);
  sub_1004A1600();
  sub_100726E50();
  uint64_t v54 = a1;
  if (v2)
  {
    unint64_t v53 = v2;
    uint64_t v55 = 0;
    sub_10044C6AC((uint64_t)v54);
    sub_10044CE88(0, 0xF000000000000000);
    sub_10044CE88(0, 0xF000000000000000);
    sub_10044CE88(0, 0xF000000000000000);
    sub_10044CE88(0, 0xF000000000000000);
    sub_10044CE88(v55, 0xF000000000000000);
    return sub_10044CE88(0, 0xF000000000000000);
  }
  else
  {
    uint64_t v52 = a2;
    char v59 = 0;
    unint64_t v10 = sub_10049ED64();
    sub_100726C20();
    uint64_t v13 = v56;
    unint64_t v12 = v57;
    char v59 = 1;
    sub_100482480(v56, v57);
    sub_100726C20();
    uint64_t v50 = v13;
    unint64_t v51 = v12;
    uint64_t v14 = v56;
    unint64_t v15 = v57;
    LOBYTE(v56) = 2;
    uint64_t v16 = v14;
    sub_100482480(v14, v57);
    int v17 = sub_100726C70();
    uint64_t v48 = v16;
    unint64_t v49 = v15;
    LOBYTE(v56) = 3;
    LODWORD(v15) = sub_100726C60();
    int v58 = v17;
    char v59 = 4;
    sub_100726C20();
    int v45 = v15;
    char v59 = 5;
    unint64_t v46 = v57;
    uint64_t v47 = v56;
    sub_100482480(v56, v57);
    sub_100726C20();
    unint64_t v18 = v10;
    uint64_t v20 = v56;
    unint64_t v19 = v57;
    char v59 = 6;
    sub_100482480(v56, v57);
    unint64_t v53 = v18;
    sub_100726C20();
    char v59 = 7;
    uint64_t v55 = v56;
    unint64_t v21 = v57;
    sub_100482480(v56, v57);
    sub_100726C20();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    unint64_t v53 = 0;
    uint64_t v23 = v56;
    unint64_t v22 = v57;
    sub_100482480(v56, v57);
    sub_10044CE88(0, 0xF000000000000000);
    sub_100482480(v50, v51);
    unint64_t v24 = v49;
    sub_100482480(v48, v49);
    unint64_t v26 = v46;
    uint64_t v25 = v47;
    sub_100482480(v47, v46);
    uint64_t v42 = v20;
    sub_100482480(v20, v19);
    uint64_t v27 = v55;
    sub_100482480(v55, v21);
    unint64_t v43 = v22;
    uint64_t v44 = v23;
    sub_100482480(v23, v22);
    sub_10044CE88(v23, v22);
    sub_10044CE88(v27, v21);
    uint64_t v28 = v20;
    unint64_t v29 = v19;
    sub_10044CE88(v28, v19);
    unint64_t v30 = v26;
    sub_10044CE88(v25, v26);
    uint64_t v31 = v48;
    sub_10044CE88(v48, v24);
    uint64_t v32 = v50;
    unint64_t v33 = v51;
    sub_10044CE88(v50, v51);
    sub_10044C6AC((uint64_t)v54);
    sub_10044CE88(v32, v33);
    sub_10044CE88(v31, v24);
    sub_10044CE88(v25, v30);
    uint64_t v34 = v42;
    unint64_t v35 = v29;
    sub_10044CE88(v42, v29);
    unint64_t v36 = v21;
    sub_10044CE88(v27, v21);
    unint64_t v37 = v43;
    uint64_t v38 = v44;
    uint64_t result = sub_10044CE88(v44, v43);
    uint64_t v39 = v52;
    unint64_t v40 = v51;
    *uint64_t v52 = v50;
    v39[1] = v40;
    unint64_t v41 = v49;
    v39[2] = v31;
    v39[3] = v41;
    *((_WORD *)v39 + 16) = v58;
    *((unsigned char *)v39 + 34) = v45;
    v39[5] = v25;
    v39[6] = v30;
    v39[7] = v34;
    v39[8] = v35;
    v39[9] = v27;
    v39[10] = v36;
    v39[11] = v38;
    v39[12] = v37;
  }
  return result;
}

uint64_t type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A4F898);
}

uint64_t sub_1004A2180()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100795E00, &qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A21E8()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100795E28, &qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A2250()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100795E50, &qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A22B8()
{
  return sub_100492F84(v0[2], v0[3], v0[4], (uint64_t)&unk_100795E78, &qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A2320()
{
  return sub_100492F84(v0[2], v0[3], v0[4], (uint64_t)&unk_100795EA0, &qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A2388()
{
  return sub_100498A10(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100795EC8, &qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A23EC()
{
  return sub_100498A10(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100795EF0, &qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A2450()
{
  return sub_10048EC88();
}

uint64_t *sub_1004A2480(uint64_t a1, void (*a2)(void, void, void), uint64_t a3, void (*a4)(void, void, void), uint64_t a5, void (*a6)(void, void, void), uint64_t a7, unint64_t a8, double a9, uint64_t a10, void (*a11)(void, void, void), uint64_t a12, uint64_t a13)
{
  uint64_t v50 = a7;
  unint64_t v51 = (void (*)(void, void, void))a8;
  unint64_t v49 = a6;
  uint64_t v52 = a4;
  uint64_t v53 = a5;
  uint64_t v40 = a3;
  uint64_t v47 = a1;
  uint64_t v54 = a13;
  uint64_t v55 = a12;
  uint64_t v42 = a11;
  uint64_t v41 = a10;
  unint64_t v18 = v13;
  uint64_t v19 = *v13;
  uint64_t v46 = sub_100725CC0();
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46, v20);
  unint64_t v43 = (char *)v39 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[5] = sub_100431F80(&qword_100A45BC8);
  uint64_t v22 = sub_10049EA54(&qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
  uint64_t v58 = v19;
  uint64_t v59 = v19;
  uint64_t v60 = v22;
  uint64_t v61 = v22;
  v18[6] = swift_getOpaqueTypeConformance2();
  uint64_t v48 = v18;
  sub_10044D5C4(v18 + 2);
  sub_1007261C0();
  sub_1004407E0((uint64_t)(v18 + 2), (uint64_t)&v58);
  sub_10044C0F4(&v58, v61);
  swift_getKeyPath();
  uint64_t v56 = 0;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v58);
  sub_100725DA0();
  sub_1004407E0((uint64_t)(v18 + 2), (uint64_t)&v58);
  sub_10044C0F4(&v58, v61);
  swift_getKeyPath();
  uint64_t v56 = a1;
  unint64_t v57 = a2;
  int v45 = a2;
  swift_bridgeObjectRetain();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v58);
  sub_1004407E0((uint64_t)(v18 + 2), (uint64_t)&v58);
  sub_10044C0F4(&v58, v61);
  swift_getKeyPath();
  uint64_t v56 = a3;
  unint64_t v57 = v52;
  swift_bridgeObjectRetain();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v58);
  sub_1004407E0((uint64_t)(v18 + 2), (uint64_t)&v58);
  sub_10044C0F4(&v58, v61);
  swift_getKeyPath();
  uint64_t v56 = v53;
  unint64_t v57 = v49;
  swift_bridgeObjectRetain();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v58);
  v39[0] = (uint64_t)(v18 + 2);
  sub_1004407E0((uint64_t)(v18 + 2), (uint64_t)&v58);
  sub_10044C0F4(&v58, v61);
  swift_getKeyPath();
  uint64_t v24 = v50;
  unint64_t v23 = (unint64_t)v51;
  uint64_t v56 = v50;
  unint64_t v57 = v51;
  sub_100441FD4(v50, (unint64_t)v51);
  v39[1] = sub_10049ECA0();
  sub_1007260D0();
  swift_release();
  sub_100442248(v24, v23);
  sub_10044C6AC((uint64_t)&v58);
  sub_1004407E0((uint64_t)(v18 + 2), (uint64_t)&v58);
  sub_10044C0F4(&v58, v61);
  swift_getKeyPath();
  uint64_t v25 = v41;
  unint64_t v26 = (unint64_t)v42;
  uint64_t v56 = v41;
  unint64_t v57 = v42;
  sub_100441FD4(v41, (unint64_t)v42);
  sub_1007260D0();
  swift_release();
  sub_100442248(v25, v26);
  sub_10044C6AC((uint64_t)&v58);
  uint64_t v27 = v44;
  uint64_t v42 = *(void (**)(void, void, void))(v44 + 16);
  uint64_t v28 = v43;
  uint64_t v29 = v46;
  v42(v43, v55, v46);
  uint64_t v30 = v39[0];
  sub_1004407E0(v39[0], (uint64_t)&v58);
  sub_10044C0F4(&v58, v61);
  swift_getKeyPath();
  sub_10049EA54(&qword_100A46950, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1007260D0();
  swift_release();
  uint64_t v44 = *(void *)(v27 + 8);
  uint64_t v31 = v28;
  uint64_t v32 = v28;
  uint64_t v33 = v29;
  ((void (*)(char *, uint64_t))v44)(v32, v29);
  sub_10044C6AC((uint64_t)&v58);
  v42(v31, v54, v29);
  sub_1004407E0(v30, (uint64_t)&v58);
  sub_10044C0F4(&v58, v61);
  swift_getKeyPath();
  sub_1007260D0();
  swift_release();
  uint64_t v34 = (void (*)(uint64_t, uint64_t))v44;
  ((void (*)(char *, uint64_t))v44)(v31, v33);
  sub_10044C6AC((uint64_t)&v58);
  sub_1004407E0(v30, (uint64_t)&v58);
  sub_10044C0F4(&v58, v61);
  swift_getKeyPath();
  uint64_t v56 = *(void *)&a9;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)&v58);
  uint64_t v58 = v47;
  uint64_t v59 = (uint64_t)v45;
  swift_bridgeObjectRetain();
  v62._countAndFlagsBits = v40;
  v62._object = v52;
  sub_1007264C0(v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v63._countAndFlagsBits = v53;
  v63._object = v49;
  sub_1007264C0(v63);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_10044CEBC();
  unint64_t v37 = v36;
  swift_bridgeObjectRelease();
  sub_1004407E0(v30, (uint64_t)&v58);
  sub_10044C0F4(&v58, v61);
  swift_getKeyPath();
  uint64_t v56 = v35;
  unint64_t v57 = (void (*)(void, void, void))v37;
  sub_1007260D0();
  swift_release();
  sub_100442248(v35, v37);
  sub_10044C6AC((uint64_t)&v58);
  v34(v54, v33);
  v34(v55, v33);
  return v48;
}

uint64_t sub_1004A2C84()
{
  sub_100431F80(&qword_100A466D0);
  sub_1007262F0();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100795A90;
  swift_getKeyPath();
  sub_100431F80(&qword_100A466D8);
  sub_100726330();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100794E30;
  sub_100726320();
  sub_100726340();
  swift_allocObject();
  sub_100726350();
  sub_10049EA54(&qword_100A466E0, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  return v0;
}

uint64_t type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A4F8A8);
}

uint64_t sub_1004A3144()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100795F68, &qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
}

uint64_t sub_1004A31AC()
{
  return sub_100492F84(v0[2], v0[3], v0[4], (uint64_t)&unk_100795F90, &qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
}

uint64_t sub_1004A3214()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100795FB8, &qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
}

uint64_t sub_1004A327C()
{
  return sub_100492F84(v0[2], v0[3], v0[4], (uint64_t)&unk_100795FE0, &qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
}

uint64_t sub_1004A32E4()
{
  return sub_100498A10(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100796008, &qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
}

uint64_t *sub_1004A3348(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, void *a6, uint64_t a7, unint64_t a8)
{
  unint64_t v35 = a8;
  uint64_t v32 = a1;
  uint64_t v33 = a7;
  unint64_t v39 = a4;
  uint64_t v40 = a5;
  uint64_t v38 = a3;
  unint64_t v12 = v8;
  uint64_t v13 = *v8;
  uint64_t v14 = sub_100725CC0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v36 = v14;
  uint64_t v37 = v15;
  __chkstk_darwin(v14, v16);
  uint64_t v34 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[5] = sub_100431F80(&qword_100A45BE0);
  uint64_t v31 = v12;
  uint64_t v18 = sub_10049EA54(&qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
  uint64_t v43 = v13;
  unint64_t v44 = v13;
  uint64_t v45 = v18;
  uint64_t v46 = v18;
  v12[6] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v12 + 2);
  sub_1007261C0();
  sub_100725DA0();
  sub_1004407E0((uint64_t)(v12 + 2), (uint64_t)&v43);
  sub_10044C0F4(&v43, v46);
  swift_getKeyPath();
  uint64_t v41 = a1;
  unint64_t v42 = a2;
  swift_bridgeObjectRetain();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v43);
  sub_1004407E0((uint64_t)(v12 + 2), (uint64_t)&v43);
  sub_10044C0F4(&v43, v46);
  swift_getKeyPath();
  uint64_t v20 = v38;
  unint64_t v19 = v39;
  uint64_t v41 = v38;
  unint64_t v42 = v39;
  sub_100441FD4(v38, v39);
  sub_10049ECA0();
  sub_1007260D0();
  swift_release();
  sub_100442248(v20, v19);
  sub_10044C6AC((uint64_t)&v43);
  sub_1004407E0((uint64_t)(v12 + 2), (uint64_t)&v43);
  sub_10044C0F4(&v43, v46);
  swift_getKeyPath();
  uint64_t v41 = v40;
  unint64_t v42 = (unint64_t)a6;
  uint64_t v21 = a6;
  swift_bridgeObjectRetain();
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)&v43);
  sub_1004407E0((uint64_t)(v12 + 2), (uint64_t)&v43);
  sub_10044C0F4(&v43, v46);
  swift_getKeyPath();
  uint64_t v22 = v33;
  unint64_t v23 = v35;
  uint64_t v41 = v33;
  unint64_t v42 = v35;
  sub_100441FD4(v33, v35);
  sub_1007260D0();
  swift_release();
  sub_100442248(v22, v23);
  sub_10044C6AC((uint64_t)&v43);
  uint64_t v24 = v34;
  sub_100725CB0();
  sub_1004407E0((uint64_t)(v12 + 2), (uint64_t)&v43);
  sub_10044C0F4(&v43, v46);
  swift_getKeyPath();
  sub_10049EA54(&qword_100A46950, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v25 = v36;
  sub_1007260D0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v25);
  sub_10044C6AC((uint64_t)&v43);
  uint64_t v43 = v32;
  unint64_t v44 = a2;
  swift_bridgeObjectRetain();
  v47._countAndFlagsBits = v40;
  v47._object = v21;
  sub_1007264C0(v47);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = sub_10044CEBC();
  unint64_t v28 = v27;
  swift_bridgeObjectRelease();
  sub_1004407E0((uint64_t)(v12 + 2), (uint64_t)&v43);
  sub_10044C0F4(&v43, v46);
  swift_getKeyPath();
  uint64_t v41 = v26;
  unint64_t v42 = v28;
  sub_1007260D0();
  swift_release();
  sub_100442248(v26, v28);
  sub_10044C6AC((uint64_t)&v43);
  return v31;
}

uint64_t sub_1004A3878()
{
  sub_100431F80(&qword_100A466D0);
  sub_1007262F0();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100795AA0;
  swift_getKeyPath();
  sub_100431F80(&qword_100A466D8);
  sub_100726330();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100794E30;
  sub_100726320();
  sub_100726340();
  swift_allocObject();
  sub_100726350();
  sub_10049EA54(&qword_100A466E0, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  return v0;
}

uint64_t type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A4F8B8);
}

uint64_t sub_1004A3C34()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100796030, &qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
}

uint64_t sub_1004A3C9C()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100796058, &qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
}

uint64_t sub_1004A3D04(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A47D80);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1004A3D64(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100440798(&qword_100A47D80);
    sub_10049EA54(a2, (void (*)(uint64_t))&type metadata accessor for Date);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004A3DF8()
{
  return sub_100493B30(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100796080, &qword_100A45BF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
}

uint64_t sub_1004A3E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004A3EC4()
{
  sub_100431F80(&qword_100A466D0);
  sub_1007262F0();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100794E70;
  swift_getKeyPath();
  sub_100431F80(&qword_100A466D8);
  sub_100726330();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100794E30;
  sub_100726320();
  sub_100726340();
  swift_allocObject();
  sub_100726350();
  sub_10049EA54(&qword_100A466E0, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  return v0;
}

uint64_t type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A4F8C8);
}

uint64_t sub_1004A4198()
{
  return sub_100492F84(v0[2], v0[3], v0[4], (uint64_t)&unk_1007960D0, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A4200()
{
  return sub_100492F84(v0[2], v0[3], v0[4], (uint64_t)&unk_1007960F8, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A4268()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100796120, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A42D0()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100796148, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A4338()
{
  return sub_100492F84(v0[2], v0[3], v0[4], (uint64_t)&unk_100796170, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A43A0()
{
  return sub_100498A10(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100796198, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A4404()
{
  return sub_100492F84(v0[2], v0[3], v0[4], (uint64_t)&unk_1007961C0, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A446C()
{
  return sub_100494288(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), (uint64_t)&unk_1007961E8, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A44D4()
{
  return sub_100494288(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), (uint64_t)&unk_100796210, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A453C()
{
  return sub_100493B30(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100796238, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A45A0()
{
  return sub_100494288(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), (uint64_t)&unk_100796260, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A4608()
{
  return sub_100494288(*(void *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), (uint64_t)&unk_100796288, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A4670()
{
  return sub_100493B30(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1007962B0, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A46D4()
{
  return sub_100499858(v0[2], v0[3], v0[4], (uint64_t)&unk_1007962D8, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A473C()
{
  return sub_100493B30(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100796300, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A47A0()
{
  return sub_100493B30(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100796328, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A4804()
{
  return sub_100493B30(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100796350, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

void *sub_1004A4868(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, unsigned __int8 a14, unsigned __int8 a15, unsigned __int8 a16, unsigned __int8 a17)
{
  uint64_t v18 = v17;
  unint64_t v48 = a8;
  uint64_t v47 = a7;
  unint64_t v45 = a6;
  uint64_t v44 = a5;
  unint64_t v43 = a4;
  int v57 = a16;
  int v58 = a17;
  int v55 = a14;
  int v56 = a15;
  uint64_t v51 = a12;
  unint64_t v52 = a13;
  uint64_t v62 = a11;
  unint64_t v49 = a10;
  uint64_t v60 = a9;
  uint64_t v22 = *v17;
  uint64_t v61 = sub_100725CC0();
  uint64_t v63 = *(void *)(v61 - 8);
  __chkstk_darwin(v61, v23);
  uint64_t v50 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[6] = sub_100431F80(&qword_100A45C20);
  uint64_t v25 = sub_10049EA54(&qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
  v68[0] = v22;
  v68[1] = v22;
  v68[2] = v25;
  uint64_t v69 = v25;
  v18[7] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v18 + 3);
  sub_1007261C0();
  uint64_t v59 = v18;
  *((_DWORD *)v18 + 4) = 16843009;
  *((_WORD *)v18 + 10) = 257;
  sub_100725DA0();
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  uint64_t v66 = a1;
  unint64_t v67 = a2;
  uint64_t v53 = a1;
  unint64_t v54 = a2;
  sub_100441FD4(a1, a2);
  unint64_t v26 = sub_10049ECA0();
  sub_1007260D0();
  swift_release();
  sub_100442248(a1, a2);
  sub_10044C6AC((uint64_t)v68);
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  unint64_t v27 = v43;
  uint64_t v66 = a3;
  unint64_t v67 = v43;
  sub_100441FD4(a3, v43);
  sub_1007260D0();
  swift_release();
  sub_100442248(a3, v27);
  sub_10044C6AC((uint64_t)v68);
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  uint64_t v66 = v44;
  unint64_t v67 = v45;
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)v68);
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  uint64_t v66 = v47;
  unint64_t v67 = v48;
  sub_1007260D0();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10044C6AC((uint64_t)v68);
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  uint64_t v28 = v60;
  unint64_t v29 = v49;
  uint64_t v66 = v60;
  unint64_t v67 = v49;
  sub_100441FD4(v60, v49);
  unint64_t v46 = v26;
  sub_1007260D0();
  swift_release();
  sub_100442248(v28, v29);
  sub_10044C6AC((uint64_t)v68);
  uint64_t v30 = v63;
  uint64_t v31 = v50;
  uint64_t v32 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v50, v62, v61);
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  sub_10049EA54(&qword_100A46950, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1007260D0();
  swift_release();
  uint64_t v33 = v30 + 8;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v63 = v33;
  v34(v31, v32);
  unint64_t v35 = (void (*)(uint64_t, uint64_t))v34;
  sub_10044C6AC((uint64_t)v68);
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  uint64_t v37 = v51;
  unint64_t v36 = v52;
  uint64_t v66 = v51;
  unint64_t v67 = v52;
  sub_100441FD4(v51, v52);
  sub_1007260D0();
  swift_release();
  sub_100442248(v37, v36);
  sub_10044C6AC((uint64_t)v68);
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  LOBYTE(v66) = v55;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v68);
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  LOBYTE(v66) = v56;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v68);
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  LOBYTE(v66) = v57;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v68);
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  LOBYTE(v66) = v58;
  sub_1007260D0();
  swift_release();
  sub_10044C6AC((uint64_t)v68);
  uint64_t v66 = v53;
  unint64_t v67 = v54;
  sub_100441FD4(v53, v54);
  uint64_t v38 = v60;
  sub_100441FD4(v60, v29);
  sub_10049E48C(v38, v29);
  sub_100442248(v38, v29);
  uint64_t v39 = v66;
  unint64_t v40 = v67;
  sub_1004407E0((uint64_t)(v18 + 3), (uint64_t)v68);
  sub_10044C0F4(v68, v69);
  swift_getKeyPath();
  uint64_t v64 = v39;
  unint64_t v65 = v40;
  sub_1007260D0();
  swift_release();
  sub_100442248(v39, v40);
  sub_10044C6AC((uint64_t)v68);
  v35(v62, v61);
  return v59;
}

uint64_t sub_1004A50CC()
{
  sub_100431F80(&qword_100A466D0);
  sub_1007262F0();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100795AB0;
  swift_getKeyPath();
  sub_100431F80(&qword_100A466D8);
  sub_100726330();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100794E30;
  sub_100726320();
  sub_100726340();
  swift_allocObject();
  sub_100726350();
  sub_10049EA54(&qword_100A466E0, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  return v0;
}

uint64_t type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A4F8D8);
}

uint64_t sub_1004A5858()
{
  return sub_100495EB4();
}

uint64_t sub_1004A5884()
{
  return sub_100496230();
}

uint64_t sub_1004A58B4()
{
  return sub_100498A10(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1007963C8, &qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
}

uint64_t sub_1004A5918()
{
  sub_100431F80(&qword_100A466D0);
  sub_1007262F0();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100794E70;
  swift_getKeyPath();
  sub_100431F80(&qword_100A466D8);
  sub_100726330();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100794E30;
  sub_100726320();
  sub_100726340();
  swift_allocObject();
  sub_100726350();
  sub_10049EA54(&qword_100A466E0, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  return v0;
}

uint64_t *sub_1004A5BD0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0);
  uint64_t v3 = (uint64_t *)swift_allocObject();
  v3[5] = sub_100431F80(&qword_100A45C38);
  *(void *)&long long v5 = v2;
  *((void *)&v5 + 1) = v2;
  uint64_t v6 = sub_10049EA54(&qword_100A45C30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
  uint64_t v7 = v6;
  v3[6] = swift_getOpaqueTypeConformance2();
  sub_10044D5C4(v3 + 2);
  sub_1007261C0();
  sub_100725DA0();
  sub_1004407E0(a1, (uint64_t)&v5);
  swift_beginAccess();
  sub_10044C6AC((uint64_t)(v3 + 2));
  sub_10048712C(&v5, (uint64_t)(v3 + 2));
  swift_endAccess();
  sub_10044C6AC(a1);
  return v3;
}

uint64_t type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A4F8E8);
}

uint64_t sub_1004A5D34()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100796418, (unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
}

uint64_t sub_1004A5D9C()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_100796440, (unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
}

uint64_t sub_1004A5E04()
{
  return sub_10049764C();
}

uint64_t sub_1004A5E30()
{
  sub_100431F80(&qword_100A466D0);
  sub_1007262F0();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1007955D0;
  swift_getKeyPath();
  sub_100431F80(&qword_100A466D8);
  sub_100726330();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100794E30;
  sub_100726320();
  sub_100726340();
  swift_allocObject();
  sub_100726350();
  sub_10049EA54(&qword_100A466E0, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  return v0;
}

uint64_t type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A4F8F8);
}

uint64_t sub_1004A6130()
{
  return sub_100497ED4();
}

uint64_t sub_1004A615C()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_1007964B8, &qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
}

uint64_t sub_1004A61C4()
{
  return sub_100493B30(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_1007964E0, &qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
}

uint64_t sub_1004A6228()
{
  return sub_100498A10(*(void *)(v0 + 16), *(void *)(v0 + 24), (uint64_t)&unk_100796508, &qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
}

uint64_t sub_1004A628C()
{
  return sub_100498DAC();
}

uint64_t sub_1004A62B8()
{
  return sub_100499124();
}

uint64_t sub_1004A62E4()
{
  return sub_100499858(v0[2], v0[3], v0[4], (uint64_t)&unk_100796580, &qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
}

uint64_t sub_1004A634C()
{
  return sub_100499858(v0[2], v0[3], v0[4], (uint64_t)&unk_1007965A8, &qword_100A48190, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
}

uint64_t sub_1004A63B4()
{
  sub_100431F80(&qword_100A466D0);
  sub_1007262F0();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100795AC0;
  swift_getKeyPath();
  sub_100431F80(&qword_100A466D8);
  sub_100726330();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100794E30;
  sub_100726320();
  sub_100726340();
  swift_allocObject();
  sub_100726350();
  sub_10049EA54(&qword_100A466E0, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  return v0;
}

uint64_t type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount(uint64_t a1)
{
  return sub_100440FD0(a1, qword_100A4F908);
}

uint64_t sub_1004A6824()
{
  return sub_10049A570(v0[2], v0[3], v0[4], (uint64_t)&unk_1007965D0, &qword_100A48120, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
}

uint64_t sub_1004A688C()
{
  return sub_10049A8E4();
}

uint64_t sub_1004A68B8()
{
  return sub_10049AC5C();
}

uint64_t sub_1004A68E4()
{
  return sub_10049AFD4();
}

uint64_t sub_1004A6910()
{
  return sub_10049B34C();
}

uint64_t sub_1004A693C()
{
  return sub_10049B6C4();
}

uint64_t sub_1004A6968()
{
  return sub_10049BA3C();
}

uint64_t sub_1004A6994()
{
  return sub_10049BDB4();
}

uint64_t sub_1004A69C0()
{
  return sub_10049C12C();
}

uint64_t sub_1004A69EC()
{
  return sub_10049C4A4();
}

uint64_t sub_1004A6A18()
{
  return sub_10049C81C();
}

uint64_t sub_1004A6A44()
{
  sub_100431F80(&qword_100A466D0);
  sub_1007262F0();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_100795AD0;
  swift_getKeyPath();
  sub_100431F80(&qword_100A466D8);
  sub_100726330();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_100794E30;
  sub_100726320();
  sub_100726340();
  swift_allocObject();
  sub_100726350();
  sub_10049EA54(&qword_100A466E0, (void (*)(uint64_t))&type metadata accessor for Schema.Attribute);
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  swift_getKeyPath();
  sub_1007262E0();
  return v0;
}

uint64_t sub_1004A6F68()
{
  return sub_10049EA54(&qword_100A45B18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
}

uint64_t sub_1004A6FB0()
{
  return sub_10049EA54(&qword_100A45C70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
}

uint64_t sub_1004A6FF8()
{
  return sub_10049EA54(&qword_100A45CC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
}

uint64_t sub_1004A7040()
{
  return sub_10049EA54(&qword_100A45CC8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
}

uint64_t sub_1004A7088()
{
  return sub_10049EA54(&qword_100A45CD0, (void (*)(uint64_t))&type metadata accessor for PersistentIdentifier);
}

uint64_t sub_1004A70D0()
{
  return sub_10049EA54(&qword_100A45B70, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_1004A7118()
{
  return sub_10049EA54(&qword_100A45C78, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_1004A7160()
{
  return sub_10049EA54(&qword_100A45CD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_1004A71A8()
{
  return sub_10049EA54(&qword_100A45CE0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_1004A71F0()
{
  return sub_10049EA54(&qword_100A45BB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A7238()
{
  return sub_10049EA54(&qword_100A45C80, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A7280()
{
  return sub_10049EA54(&qword_100A45CE8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A72C8()
{
  return sub_10049EA54(&qword_100A45CF0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A7310()
{
  return sub_10049EA54(&qword_100A45BD0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
}

uint64_t sub_1004A7358()
{
  return sub_10049EA54(&qword_100A45C88, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
}

uint64_t sub_1004A73A0()
{
  return sub_10049EA54(&qword_100A45CF8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
}

uint64_t sub_1004A73E8()
{
  return sub_10049EA54(&qword_100A45D00, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
}

uint64_t sub_1004A7430()
{
  return sub_10049EA54(&qword_100A45BE8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
}

uint64_t sub_1004A7478()
{
  return sub_10049EA54(&qword_100A45C90, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
}

uint64_t sub_1004A74C0()
{
  return sub_10049EA54(&qword_100A45D08, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
}

uint64_t sub_1004A7508()
{
  return sub_10049EA54(&qword_100A45D10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle);
}

uint64_t sub_1004A7550()
{
  return sub_10049EA54(&qword_100A45C10, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A7598()
{
  return sub_10049EA54(&qword_100A45C98, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A75E0()
{
  return sub_10049EA54(&qword_100A45D18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A7628()
{
  return sub_10049EA54(&qword_100A45D20, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A7670()
{
  return sub_10049EA54(&qword_100A45C28, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
}

uint64_t sub_1004A76B8()
{
  return sub_10049EA54(&qword_100A45CA0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
}

uint64_t sub_1004A7700()
{
  return sub_10049EA54(&qword_100A45D28, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
}

uint64_t sub_1004A7748()
{
  return sub_10049EA54(&qword_100A45D30, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex);
}

uint64_t sub_1004A7790()
{
  return sub_10049EA54(&qword_100A45C40, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
}

uint64_t sub_1004A77D8()
{
  return sub_10049EA54(&qword_100A45CA8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
}

uint64_t sub_1004A7820()
{
  return sub_10049EA54(&qword_100A45D38, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
}

uint64_t sub_1004A7868()
{
  return sub_10049EA54(&qword_100A45D40, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
}

uint64_t sub_1004A78B0()
{
  return sub_10049EA54(&qword_100A45C50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
}

uint64_t sub_1004A78F8()
{
  return sub_10049EA54(&qword_100A45CB0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
}

uint64_t sub_1004A7940()
{
  return sub_10049EA54(&qword_100A45D48, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
}

uint64_t sub_1004A7988()
{
  return sub_10049EA54(&qword_100A45D50, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent);
}

uint64_t sub_1004A79D0()
{
  return sub_10049EA54(&qword_100A45C60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
}

uint64_t sub_1004A7A18()
{
  return sub_10049EA54(&qword_100A45CB8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
}

uint64_t sub_1004A7A60()
{
  return sub_10049EA54(&qword_100A45D58, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
}

uint64_t sub_1004A7AA8()
{
  return sub_10049EA54(&qword_100A45D60, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount);
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan()
{
  return &type metadata for SDPersistenceMigrationPlan;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1;
}

uint64_t sub_1004A7B10()
{
  return type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable(0);
}

uint64_t sub_1004A7B18()
{
  uint64_t result = sub_100725DB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable._SwiftDataNoType()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable._SwiftDataNoType;
}

uint64_t sub_1004A7BE8()
{
  return type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice(0);
}

uint64_t sub_1004A7BF0()
{
  uint64_t result = sub_100725DB0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice._SwiftDataNoType()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice._SwiftDataNoType;
}

uint64_t *destroy for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer(uint64_t *result)
{
  unint64_t v1 = result;
  unint64_t v2 = result[1];
  if (v2 >> 60 != 15) {
    uint64_t result = (uint64_t *)sub_100442248(*result, v2);
  }
  unint64_t v3 = v1[3];
  if (v3 >> 60 != 15) {
    uint64_t result = (uint64_t *)sub_100442248(v1[2], v3);
  }
  unint64_t v4 = v1[6];
  if (v4 >> 60 != 15) {
    uint64_t result = (uint64_t *)sub_100442248(v1[5], v4);
  }
  unint64_t v5 = v1[8];
  if (v5 >> 60 != 15) {
    uint64_t result = (uint64_t *)sub_100442248(v1[7], v5);
  }
  unint64_t v6 = v1[10];
  if (v6 >> 60 != 15) {
    uint64_t result = (uint64_t *)sub_100442248(v1[9], v6);
  }
  unint64_t v7 = v1[12];
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = v1[11];
    return (uint64_t *)sub_100442248(v8, v7);
  }
  return result;
}

uint64_t initializeWithCopy for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v5 = *a2;
    sub_100441FD4(*a2, a2[1]);
    *(void *)a1 = v5;
    *(void *)(a1 + 8) = v4;
  }
  unint64_t v6 = a2 + 2;
  unint64_t v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    uint64_t v8 = *v6;
    sub_100441FD4(*v6, a2[3]);
    *(void *)(a1 + 16) = v8;
    *(void *)(a1 + 24) = v7;
  }
  *(_WORD *)(a1 + 32) = *((_WORD *)a2 + 16);
  *(unsigned char *)(a1 + 34) = *((unsigned char *)a2 + 34);
  uint64_t v9 = a2 + 5;
  unint64_t v10 = a2[6];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v9;
  }
  else
  {
    uint64_t v11 = *v9;
    sub_100441FD4(*v9, a2[6]);
    *(void *)(a1 + 40) = v11;
    *(void *)(a1 + 48) = v10;
  }
  unint64_t v12 = a2 + 7;
  unint64_t v13 = a2[8];
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v12;
  }
  else
  {
    uint64_t v14 = *v12;
    sub_100441FD4(*v12, a2[8]);
    *(void *)(a1 + 56) = v14;
    *(void *)(a1 + 64) = v13;
  }
  uint64_t v15 = a2 + 9;
  unint64_t v16 = a2[10];
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v15;
  }
  else
  {
    uint64_t v17 = *v15;
    sub_100441FD4(*v15, a2[10]);
    *(void *)(a1 + 72) = v17;
    *(void *)(a1 + 80) = v16;
  }
  uint64_t v18 = a2 + 11;
  unint64_t v19 = a2[12];
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v18;
  }
  else
  {
    uint64_t v20 = *v18;
    sub_100441FD4(*v18, v19);
    *(void *)(a1 + 88) = v20;
    *(void *)(a1 + 96) = v19;
  }
  return a1;
}

uint64_t assignWithCopy for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v5 = *(void *)a2;
      sub_100441FD4(*(void *)a2, *(void *)(a2 + 8));
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v4;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
    sub_1004A8238(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  uint64_t v6 = *(void *)a2;
  sub_100441FD4(*(void *)a2, *(void *)(a2 + 8));
  uint64_t v7 = *(void *)a1;
  unint64_t v8 = *(void *)(a1 + 8);
  *(void *)a1 = v6;
  *(void *)(a1 + 8) = v4;
  sub_100442248(v7, v8);
LABEL_8:
  uint64_t v9 = (uint64_t *)(a2 + 16);
  unint64_t v10 = *(void *)(a2 + 24);
  if (*(void *)(a1 + 24) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      uint64_t v11 = *v9;
      sub_100441FD4(*v9, *(void *)(a2 + 24));
      *(void *)(a1 + 16) = v11;
      *(void *)(a1 + 24) = v10;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v10 >> 60 == 15)
  {
    sub_1004A8238(a1 + 16);
LABEL_13:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v9;
    goto LABEL_15;
  }
  uint64_t v12 = *v9;
  sub_100441FD4(*v9, *(void *)(a2 + 24));
  uint64_t v13 = *(void *)(a1 + 16);
  unint64_t v14 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v12;
  *(void *)(a1 + 24) = v10;
  sub_100442248(v13, v14);
LABEL_15:
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v15 = (uint64_t *)(a2 + 40);
  unint64_t v16 = *(void *)(a2 + 48);
  if (*(void *)(a1 + 48) >> 60 == 15)
  {
    if (v16 >> 60 != 15)
    {
      uint64_t v17 = *v15;
      sub_100441FD4(*v15, *(void *)(a2 + 48));
      *(void *)(a1 + 40) = v17;
      *(void *)(a1 + 48) = v16;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v16 >> 60 == 15)
  {
    sub_1004A8238(a1 + 40);
LABEL_20:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v15;
    goto LABEL_22;
  }
  uint64_t v18 = *v15;
  sub_100441FD4(*v15, *(void *)(a2 + 48));
  uint64_t v19 = *(void *)(a1 + 40);
  unint64_t v20 = *(void *)(a1 + 48);
  *(void *)(a1 + 40) = v18;
  *(void *)(a1 + 48) = v16;
  sub_100442248(v19, v20);
LABEL_22:
  uint64_t v21 = (uint64_t *)(a2 + 56);
  unint64_t v22 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64) >> 60 == 15)
  {
    if (v22 >> 60 != 15)
    {
      uint64_t v23 = *v21;
      sub_100441FD4(*v21, *(void *)(a2 + 64));
      *(void *)(a1 + 56) = v23;
      *(void *)(a1 + 64) = v22;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v22 >> 60 == 15)
  {
    sub_1004A8238(a1 + 56);
LABEL_27:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)v21;
    goto LABEL_29;
  }
  uint64_t v24 = *v21;
  sub_100441FD4(*v21, *(void *)(a2 + 64));
  uint64_t v25 = *(void *)(a1 + 56);
  unint64_t v26 = *(void *)(a1 + 64);
  *(void *)(a1 + 56) = v24;
  *(void *)(a1 + 64) = v22;
  sub_100442248(v25, v26);
LABEL_29:
  unint64_t v27 = (uint64_t *)(a2 + 72);
  unint64_t v28 = *(void *)(a2 + 80);
  if (*(void *)(a1 + 80) >> 60 == 15)
  {
    if (v28 >> 60 != 15)
    {
      uint64_t v29 = *v27;
      sub_100441FD4(*v27, *(void *)(a2 + 80));
      *(void *)(a1 + 72) = v29;
      *(void *)(a1 + 80) = v28;
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  if (v28 >> 60 == 15)
  {
    sub_1004A8238(a1 + 72);
LABEL_34:
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v27;
    goto LABEL_36;
  }
  uint64_t v30 = *v27;
  sub_100441FD4(*v27, *(void *)(a2 + 80));
  uint64_t v31 = *(void *)(a1 + 72);
  unint64_t v32 = *(void *)(a1 + 80);
  *(void *)(a1 + 72) = v30;
  *(void *)(a1 + 80) = v28;
  sub_100442248(v31, v32);
LABEL_36:
  uint64_t v33 = (uint64_t *)(a2 + 88);
  unint64_t v34 = *(void *)(a2 + 96);
  if (*(void *)(a1 + 96) >> 60 != 15)
  {
    if (v34 >> 60 != 15)
    {
      uint64_t v36 = *v33;
      sub_100441FD4(*v33, v34);
      uint64_t v37 = *(void *)(a1 + 88);
      unint64_t v38 = *(void *)(a1 + 96);
      *(void *)(a1 + 88) = v36;
      *(void *)(a1 + 96) = v34;
      sub_100442248(v37, v38);
      return a1;
    }
    sub_1004A8238(a1 + 88);
    goto LABEL_41;
  }
  if (v34 >> 60 == 15)
  {
LABEL_41:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v33;
    return a1;
  }
  uint64_t v35 = *v33;
  sub_100441FD4(*v33, v34);
  *(void *)(a1 + 88) = v35;
  *(void *)(a1 + 96) = v34;
  return a1;
}

uint64_t sub_1004A8238(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  if (v4 >> 60 == 15) {
    goto LABEL_4;
  }
  unint64_t v5 = *(void *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_1004A8238(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  uint64_t v6 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  sub_100442248(v6, v4);
LABEL_6:
  uint64_t v7 = (_OWORD *)(a2 + 16);
  unint64_t v8 = *(void *)(a1 + 24);
  if (v8 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 16) = *v7;
    goto LABEL_11;
  }
  unint64_t v9 = *(void *)(a2 + 24);
  if (v9 >> 60 == 15)
  {
    sub_1004A8238(a1 + 16);
    goto LABEL_9;
  }
  uint64_t v10 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)v7;
  *(void *)(a1 + 24) = v9;
  sub_100442248(v10, v8);
LABEL_11:
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v11 = (_OWORD *)(a2 + 40);
  unint64_t v12 = *(void *)(a1 + 48);
  if (v12 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 40) = *v11;
    goto LABEL_16;
  }
  unint64_t v13 = *(void *)(a2 + 48);
  if (v13 >> 60 == 15)
  {
    sub_1004A8238(a1 + 40);
    goto LABEL_14;
  }
  uint64_t v14 = *(void *)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)v11;
  *(void *)(a1 + 48) = v13;
  sub_100442248(v14, v12);
LABEL_16:
  uint64_t v15 = (_OWORD *)(a2 + 56);
  unint64_t v16 = *(void *)(a1 + 64);
  if (v16 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)(a1 + 56) = *v15;
    goto LABEL_21;
  }
  unint64_t v17 = *(void *)(a2 + 64);
  if (v17 >> 60 == 15)
  {
    sub_1004A8238(a1 + 56);
    goto LABEL_19;
  }
  uint64_t v18 = *(void *)(a1 + 56);
  *(void *)(a1 + 56) = *(void *)v15;
  *(void *)(a1 + 64) = v17;
  sub_100442248(v18, v16);
LABEL_21:
  uint64_t v19 = (_OWORD *)(a2 + 72);
  unint64_t v20 = *(void *)(a1 + 80);
  if (v20 >> 60 == 15)
  {
LABEL_24:
    *(_OWORD *)(a1 + 72) = *v19;
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(a2 + 80);
  if (v21 >> 60 == 15)
  {
    sub_1004A8238(a1 + 72);
    goto LABEL_24;
  }
  uint64_t v22 = *(void *)(a1 + 72);
  *(void *)(a1 + 72) = *(void *)v19;
  *(void *)(a1 + 80) = v21;
  sub_100442248(v22, v20);
LABEL_26:
  uint64_t v23 = (void *)(a2 + 88);
  unint64_t v24 = *(void *)(a1 + 96);
  if (v24 >> 60 != 15)
  {
    unint64_t v25 = *(void *)(a2 + 96);
    if (v25 >> 60 != 15)
    {
      uint64_t v26 = *(void *)(a1 + 88);
      *(void *)(a1 + 88) = *v23;
      *(void *)(a1 + 96) = v25;
      sub_100442248(v26, v24);
      return a1;
    }
    sub_1004A8238(a1 + 88);
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)v23;
  return a1;
}

uint64_t getEnumTagSinglePayload for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 12;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 104) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer;
}

uint64_t sub_1004A858C()
{
  return type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession(0);
}

uint64_t sub_1004A8594()
{
  uint64_t result = sub_100725DB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession._SwiftDataNoType()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession._SwiftDataNoType;
}

uint64_t sub_1004A865C()
{
  return type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity(0);
}

uint64_t sub_1004A8664()
{
  uint64_t result = sub_100725DB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity._SwiftDataNoType()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity._SwiftDataNoType;
}

uint64_t sub_1004A8728()
{
  return type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle(0);
}

uint64_t sub_1004A8730()
{
  return sub_1004A8854();
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle._SwiftDataNoType()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDShortHandle._SwiftDataNoType;
}

uint64_t sub_1004A8750()
{
  return type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution(0);
}

uint64_t sub_1004A8758()
{
  uint64_t result = sub_100725DB0();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution._SwiftDataNoType()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution._SwiftDataNoType;
}

uint64_t sub_1004A883C()
{
  return type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex(0);
}

uint64_t sub_1004A8844()
{
  return sub_1004A8854();
}

uint64_t sub_1004A8854()
{
  uint64_t result = sub_100725DB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex._SwiftDataNoType()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSGroupEncryptionKeyRollIndex._SwiftDataNoType;
}

uint64_t sub_1004A8910()
{
  return type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle(0);
}

uint64_t sub_1004A8918()
{
  uint64_t result = sub_100725DB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle._SwiftDataNoType()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle._SwiftDataNoType;
}

uint64_t sub_1004A89D8()
{
  return type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent(0);
}

uint64_t sub_1004A89E0()
{
  uint64_t result = sub_100725DB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent._SwiftDataNoType()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSRegistrationEvent._SwiftDataNoType;
}

uint64_t sub_1004A8AB4()
{
  return type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount(0);
}

uint64_t sub_1004A8ABC()
{
  uint64_t result = sub_100725DB0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount._SwiftDataNoType()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQualifiedContactsCount._SwiftDataNoType;
}

uint64_t getEnumTagSinglePayload for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004A8CE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

unsigned char *sub_1004A8D0C(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer.CodingKeys()
{
  return &type metadata for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.DeviceIdentityContainer.CodingKeys;
}

unint64_t sub_1004A8D28()
{
  unint64_t result = qword_100A4FA20[0];
  if (!qword_100A4FA20[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A4FA20);
  }
  return result;
}

unint64_t sub_1004A8D80()
{
  unint64_t result = qword_100A4FB30;
  if (!qword_100A4FB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A4FB30);
  }
  return result;
}

unint64_t sub_1004A8DD8()
{
  unint64_t result = qword_100A4FB38[0];
  if (!qword_100A4FB38[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A4FB38);
  }
  return result;
}

uint64_t sub_1004A8E2C()
{
  return sub_1004A90A8((uint64_t)&unk_1007963F0, (unint64_t *)&unk_100A48570, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSOffGridDeliveryDonatedHandle);
}

uint64_t sub_1004A8E7C()
{
  return sub_1004A8FBC((uint64_t)&unk_1007960A8, &qword_100A45C18, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSenderKeyDistribution);
}

uint64_t sub_1004A8ECC()
{
  return sub_1004A8FBC((uint64_t)&unk_100795F40, &qword_100A45BD8, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDPublicIdentity);
}

uint64_t sub_1004A8F1C()
{
  return sub_1004A8FBC((uint64_t)&unk_100795DD8, &qword_100A45BC0, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDSession);
}

uint64_t sub_1004A8F6C()
{
  return sub_1004A8FBC((uint64_t)&unk_100795BF8, (unint64_t *)&unk_100A48550, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDDevice);
}

uint64_t sub_1004A8FBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  return swift_release();
}

uint64_t sub_1004A9058()
{
  return sub_1004A90A8((uint64_t)&unk_100795AE0, &qword_100A48490, (void (*)(uint64_t))type metadata accessor for SDPersistenceMigrationPlan.SDPersistenceSchemaV1.IDSQuerySDAddressable);
}

uint64_t sub_1004A90A8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  return swift_release();
}

uint64_t sub_1004A9140()
{
  return sub_1004A3DF8();
}

uint64_t sub_1004A9158()
{
  return sub_1004A6A18();
}

uint64_t sub_1004A9170()
{
  return sub_1004A69EC();
}

uint64_t sub_1004A9188()
{
  return sub_1004A69C0();
}

uint64_t sub_1004A91A0()
{
  return sub_1004A6994();
}

uint64_t sub_1004A91B8()
{
  return sub_1004A6968();
}

uint64_t sub_1004A91D0()
{
  return sub_1004A693C();
}

uint64_t sub_1004A91E8()
{
  return sub_1004A6910();
}

uint64_t sub_1004A9200()
{
  return sub_1004A68E4();
}

uint64_t sub_1004A9218()
{
  return sub_1004A68B8();
}

uint64_t sub_1004A9230()
{
  return sub_1004A688C();
}

uint64_t sub_1004A9248()
{
  return sub_1004A62B8();
}

uint64_t sub_1004A9260()
{
  return sub_1004A628C();
}

uint64_t sub_1004A9278()
{
  return sub_1004A6228();
}

uint64_t sub_1004A9290()
{
  return sub_1004A61C4();
}

uint64_t sub_1004A92A8()
{
  return sub_1004A6130();
}

uint64_t sub_1004A92C0()
{
  return sub_1004A5E04();
}

uint64_t sub_1004A92D8()
{
  return sub_1004A58B4();
}

uint64_t sub_1004A92F0()
{
  return sub_1004A5884();
}

uint64_t sub_1004A9308()
{
  return sub_1004A5858();
}

uint64_t sub_1004A9320()
{
  return sub_1004A4804();
}

uint64_t sub_1004A9338()
{
  return sub_1004A47A0();
}

uint64_t sub_1004A9350()
{
  return sub_1004A473C();
}

uint64_t sub_1004A9368()
{
  return sub_1004A4670();
}

uint64_t sub_1004A9380()
{
  return sub_1004A4608();
}

uint64_t sub_1004A9398()
{
  return sub_1004A45A0();
}

uint64_t sub_1004A93B0()
{
  return sub_1004A453C();
}

uint64_t sub_1004A93C8()
{
  return sub_1004A44D4();
}

uint64_t sub_1004A93E0()
{
  return sub_1004A446C();
}

uint64_t sub_1004A93F8()
{
  return sub_1004A43A0();
}

uint64_t sub_1004A9410()
{
  return sub_1004A32E4();
}

uint64_t sub_1004A9428()
{
  return sub_1004A2450();
}

uint64_t sub_1004A9440()
{
  return sub_1004A23EC();
}

uint64_t sub_1004A9458()
{
  return sub_1004A2388();
}

uint64_t sub_1004A9470()
{
  return sub_1004A00D8();
}

uint64_t sub_1004A9488()
{
  return sub_10049FF28();
}

uint64_t sub_1004A94A0()
{
  return sub_10049FD48();
}

uint64_t sub_1004A94B8()
{
  return sub_10049FC78();
}

uint64_t sub_1004A94D0()
{
  return sub_10049FC10();
}

uint64_t sub_1004A94E8()
{
  return sub_10049EEFC();
}

uint64_t sub_1004A9500()
{
  return sub_1004A6824();
}

uint64_t sub_1004A9518()
{
  return sub_1004A634C();
}

uint64_t sub_1004A9530()
{
  return sub_1004A62E4();
}

uint64_t sub_1004A9548()
{
  return sub_1004A615C();
}

uint64_t sub_1004A9560()
{
  return sub_1004A5D9C();
}

uint64_t sub_1004A9578()
{
  return sub_1004A5D34();
}

uint64_t sub_1004A9590()
{
  return sub_1004A46D4();
}

uint64_t sub_1004A95A8()
{
  return sub_1004A4404();
}

uint64_t sub_1004A95C0()
{
  return sub_1004A4338();
}

uint64_t sub_1004A95D8()
{
  return sub_1004A42D0();
}

uint64_t sub_1004A95F0()
{
  return sub_1004A4268();
}

uint64_t sub_1004A9608()
{
  return sub_1004A4200();
}

uint64_t sub_1004A9620()
{
  return sub_1004A4198();
}

uint64_t sub_1004A9638()
{
  return sub_1004A3C9C();
}

uint64_t sub_1004A9650()
{
  return sub_1004A3C34();
}

uint64_t sub_1004A9668()
{
  return sub_1004A327C();
}

uint64_t sub_1004A9680()
{
  return sub_1004A3214();
}

uint64_t sub_1004A9698()
{
  return sub_1004A31AC();
}

uint64_t sub_1004A96B0()
{
  return sub_1004A3144();
}

uint64_t sub_1004A96C8()
{
  return sub_1004A2320();
}

uint64_t sub_1004A96E0()
{
  return sub_1004A22B8();
}

uint64_t sub_1004A96F8()
{
  return sub_1004A2250();
}

uint64_t sub_1004A9710()
{
  return sub_1004A21E8();
}

uint64_t sub_1004A9728()
{
  return sub_1004A2180();
}

uint64_t sub_1004A9740()
{
  return sub_10049FE18();
}

uint64_t sub_1004A9758()
{
  return sub_10049FDB0();
}

uint64_t sub_1004A9770()
{
  return sub_10049FCE0();
}

uint64_t sub_1004A9788()
{
  return sub_10049FBA8();
}

uint64_t sub_1004A97A0()
{
  return sub_10049FB40();
}

uint64_t sub_1004A97B8()
{
  return sub_10049FAD8();
}

uint64_t sub_1004A97D0()
{
  return sub_10049EDB8();
}

uint64_t sub_1004A97E8()
{
  return sub_10049EC38();
}

uint64_t sub_1004A9800()
{
  return sub_10049EBD0();
}

uint64_t sub_1004A9818()
{
  return sub_10049EB04();
}

uint64_t sub_1004A9830()
{
  return sub_10049EA9C();
}

CFIndex sub_1004A9848()
{
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t v0 = (__CFString *)sub_100726420();
  unint64_t v1 = (__CFString *)sub_100726420();
  CFIndex AppIntegerValue = CFPreferencesGetAppIntegerValue(v0, v1, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat) {
    return AppIntegerValue;
  }
  else {
    return 0;
  }
}

uint64_t sub_1004A98F8()
{
  Boolean keyExistsAndHasValidFormat = 0;
  uint64_t v0 = (__CFString *)sub_100726420();
  unint64_t v1 = (__CFString *)sub_100726420();
  int AppBooleanValue = CFPreferencesGetAppBooleanValue(v0, v1, &keyExistsAndHasValidFormat);

  if (keyExistsAndHasValidFormat) {
    return AppBooleanValue != 0;
  }
  else {
    return 2;
  }
}

uint64_t sub_1004A99B0()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 80))();
}

uint64_t sub_1004A99EC()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 88))();
}

id sub_1004A9A10(uint64_t a1, char a2, char a3, char a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  id v21 = objc_allocWithZone(v10);
  return sub_1004A9AB4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

id sub_1004A9AB4(uint64_t a1, char a2, char a3, char a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  *(double *)&v10[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_previousPreKeyExpirationDuration] = a5;
  *(double *)&v10[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_preKeyExpirationDuration] = a6;
  *(double *)&v10[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_preKeyRequestDelayDuration] = a7;
  *(double *)&v10[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_preKeyRequestTimeout] = a8;
  *(double *)&v10[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_mkmExpirationDuration] = a9;
  *(double *)&v10[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_mkmRollDuration] = a10;
  *(void *)&v10[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_numberOfCachedMKMsToBroadcast] = a1;
  v10[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_allowQUICMaterialExchange] = a2;
  v10[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_allowPushMaterialExchange] = a3;
  v10[OBJC_IVAR____TtC17identityservicesd31IDSGroupEncryptionConfiguration_isRatchetEnabled] = a4;
  v12.receiver = v10;
  v12.super_class = (Class)type metadata accessor for IDSGroupEncryptionConfiguration();
  return objc_msgSendSuper2(&v12, "init");
}

uint64_t type metadata accessor for IDSGroupEncryptionConfiguration()
{
  return self;
}

id sub_1004A9C44()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSGroupEncryptionConfiguration();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t type metadata accessor for IDSGroupEncryptionConfigurationDefaults()
{
  return self;
}

uint64_t sub_1004A9C9C(void *a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    swift_unknownObjectRetain();
    NSString v5 = sub_100726420();
    id v6 = [a1 objectForKey:v5];

    swift_unknownObjectRelease();
    if (v6)
    {
      sub_100726870();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v49 = 0u;
      long long v50 = 0u;
    }
    sub_1004AA518((uint64_t)&v49, (uint64_t)&v51);
    if (*((void *)&v52 + 1))
    {
      int v11 = swift_dynamicCast();
      unint64_t v12 = v49;
      if (!v11) {
        unint64_t v12 = 0;
      }
      unint64_t v47 = v12;
      int v13 = v11 ^ 1;
    }
    else
    {
      sub_100450D90((uint64_t)&v51);
      unint64_t v47 = 0;
      int v13 = 1;
    }
    int v46 = v13;
    swift_unknownObjectRetain();
    NSString v14 = sub_100726420();
    id v15 = [a1 objectForKey:v14];

    swift_unknownObjectRelease();
    if (v15)
    {
      sub_100726870();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v49 = 0u;
      long long v50 = 0u;
    }
    sub_1004AA518((uint64_t)&v49, (uint64_t)&v51);
    if (*((void *)&v52 + 1))
    {
      int v16 = swift_dynamicCast();
      unint64_t v17 = v49;
      if (!v16) {
        unint64_t v17 = 0;
      }
      unint64_t v45 = v17;
      int v18 = v16 ^ 1;
    }
    else
    {
      sub_100450D90((uint64_t)&v51);
      unint64_t v45 = 0;
      int v18 = 1;
    }
    int v44 = v18;
    swift_unknownObjectRetain();
    NSString v19 = sub_100726420();
    id v20 = [a1 objectForKey:v19];

    swift_unknownObjectRelease();
    if (v20)
    {
      sub_100726870();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v49 = 0u;
      long long v50 = 0u;
    }
    sub_1004AA518((uint64_t)&v49, (uint64_t)&v51);
    if (*((void *)&v52 + 1))
    {
      int v21 = swift_dynamicCast();
      if (v21) {
        double v7 = *(double *)&v49;
      }
      else {
        double v7 = 0.0;
      }
      int v8 = v21 ^ 1;
    }
    else
    {
      sub_100450D90((uint64_t)&v51);
      double v7 = 0.0;
      int v8 = 1;
    }
    swift_unknownObjectRetain();
    NSString v22 = sub_100726420();
    id v23 = [a1 objectForKey:v22];

    swift_unknownObjectRelease();
    if (v23)
    {
      sub_100726870();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v49 = 0u;
      long long v50 = 0u;
    }
    sub_1004AA518((uint64_t)&v49, (uint64_t)&v51);
    if (*((void *)&v52 + 1))
    {
      if (swift_dynamicCast()) {
        double v9 = (double)(unint64_t)v49;
      }
      else {
        double v9 = 1200.0;
      }
    }
    else
    {
      sub_100450D90((uint64_t)&v51);
      double v9 = 1200.0;
    }
    swift_unknownObjectRetain();
    NSString v24 = sub_100726420();
    id v25 = [a1 objectForKey:v24];

    swift_unknownObjectRelease();
    if (v25)
    {
      sub_100726870();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v49 = 0u;
      long long v50 = 0u;
    }
    sub_1004AA518((uint64_t)&v49, (uint64_t)&v51);
    if (*((void *)&v52 + 1))
    {
      if (swift_dynamicCast()) {
        double v10 = (double)(unint64_t)v49;
      }
      else {
        double v10 = 600.0;
      }
    }
    else
    {
      sub_100450D90((uint64_t)&v51);
      double v10 = 600.0;
    }
    swift_unknownObjectRetain();
    NSString v26 = sub_100726420();
    id v27 = [a1 objectForKey:v26];

    swift_unknownObjectRelease();
    if (v27)
    {
      sub_100726870();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v49 = 0u;
      long long v50 = 0u;
    }
    sub_1004AA518((uint64_t)&v49, (uint64_t)&v51);
    if (*((void *)&v52 + 1))
    {
      if (swift_dynamicCast()) {
        int v28 = v49;
      }
      else {
        int v28 = 2;
      }
      goto LABEL_52;
    }
  }
  else
  {
    long long v51 = 0u;
    long long v52 = 0u;
    sub_100450D90((uint64_t)&v51);
    long long v51 = 0u;
    long long v52 = 0u;
    sub_100450D90((uint64_t)&v51);
    long long v51 = 0u;
    long long v52 = 0u;
    sub_100450D90((uint64_t)&v51);
    long long v51 = 0u;
    long long v52 = 0u;
    sub_100450D90((uint64_t)&v51);
    long long v51 = 0u;
    long long v52 = 0u;
    sub_100450D90((uint64_t)&v51);
    double v7 = 0.0;
    unint64_t v47 = 0;
    unint64_t v45 = 0;
    long long v51 = 0u;
    long long v52 = 0u;
    int v8 = 1;
    double v9 = 1200.0;
    double v10 = 600.0;
    int v46 = 1;
    int v44 = 1;
  }
  sub_100450D90((uint64_t)&v51);
  int v28 = 2;
LABEL_52:
  uint64_t v29 = (*(uint64_t (**)(uint64_t, unint64_t, unint64_t, unint64_t))(*(void *)a2 + 80))(0x6C7070612E6D6F63, 0xED00007364692E65, 0xD000000000000015, 0x80000001008C2FC0);
  if (v29 >= 0) {
    uint64_t v31 = v29;
  }
  else {
    uint64_t v31 = v29 + 1;
  }
  uint64_t v32 = v31 >> 1;
  if ((v30 & 1) == 0)
  {
    double v10 = (double)v32;
    double v9 = (double)v29;
  }
  if (!a1)
  {
    long long v51 = 0u;
    long long v52 = 0u;
LABEL_65:
    sub_100450D90((uint64_t)&v51);
    goto LABEL_66;
  }
  swift_unknownObjectRetain();
  NSString v33 = sub_100726420();
  id v34 = [a1 objectForKey:v33];

  swift_unknownObjectRelease();
  if (v34)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v49 = 0u;
    long long v50 = 0u;
  }
  sub_1004AA518((uint64_t)&v49, (uint64_t)&v51);
  if (!*((void *)&v52 + 1)) {
    goto LABEL_65;
  }
  if (swift_dynamicCast())
  {
    uint64_t v35 = v49;
    goto LABEL_67;
  }
LABEL_66:
  uint64_t v35 = 64;
LABEL_67:
  if (v8) {
    double v36 = 3.0;
  }
  else {
    double v36 = v7;
  }
  if (v46) {
    double v37 = 420.0;
  }
  else {
    double v37 = (double)v47;
  }
  if (v44) {
    double v38 = 3600.0;
  }
  else {
    double v38 = (double)v45;
  }
  uint64_t v39 = *(uint64_t (**)(uint64_t, unint64_t, unint64_t, unint64_t))(*(void *)a2 + 88);
  char v40 = v39(0x6C7070612E6D6F63, 0xED00007364692E65, 0xD000000000000019, 0x80000001008C3010);
  char v41 = (v40 == 2) | v40;
  char v42 = v39(0x6C7070612E6D6F63, 0xED00007364692E65, 0xD000000000000019, 0x80000001008C3030);
  return (*(uint64_t (**)(uint64_t, void, void, void, double, double, double, double, double, double))(a3 + 160))(v35, v41 & 1, (v42 == 2) | (v42 & 1), (v28 == 2) | v28 & 1u, v37, v38, v36, 30.0, v9, v10);
}

uint64_t sub_1004AA518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A44F00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1004AA580()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR___IDSSenderKeyDistributionManager_persistenceManager);
  swift_beginAccess();
  objc_super v2 = *v1;

  return v2;
}

void sub_1004AA5D8(void *a1)
{
  int v3 = (void **)(v1 + OBJC_IVAR___IDSSenderKeyDistributionManager_persistenceManager);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *int v3 = a1;
}

uint64_t (*sub_1004AA62C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1004AA688()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___IDSSenderKeyDistributionManager_service);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1004AA6E0(uint64_t a1, uint64_t a2)
{
  NSString v5 = (void *)(v2 + OBJC_IVAR___IDSSenderKeyDistributionManager_service);
  swift_beginAccess();
  *NSString v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1004AA740())()
{
  return j_j__swift_endAccess;
}

void sub_1004AA79C()
{
  uint64_t v0 = self;
  NSString v1 = sub_100726420();
  id v2 = [v0 sharedInstanceWithPortName:v1];

  if (v2)
  {
    id v3 = [v2 pushToken];

    if (v3)
    {
      sub_100725B50();
    }
  }
  else
  {
    __break(1u);
  }
}

void *sub_1004AA868()
{
  unint64_t result = [self sharedInstance];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  id v2 = result;
  unint64_t result = [self sharedInstance];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  id v3 = result;
  (*(void (**)(void))((swift_isaMask & *v0) + 0xC0))();
  NSString v4 = sub_100726420();
  swift_bridgeObjectRelease();
  id v5 = [v3 serviceWithIdentifier:v4];

  id v6 = [v2 registeredAccountsOnService:v5];
  if (!v6) {
    return _swiftEmptyArrayStorage;
  }
  sub_100462C50(0, (unint64_t *)&unk_100A46830);
  uint64_t v7 = sub_100726570();

  return (void *)v7;
}

void *sub_1004AA9C0()
{
  return &unk_100797A38;
}

uint64_t sub_1004AA9CC()
{
  uint64_t v1 = OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___rollKeysTimer;
  if (*(void *)&v0[OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___rollKeysTimer])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___rollKeysTimer];
  }
  else
  {
    sub_1004AAA34(v0);
    uint64_t v2 = v3;
    *(void *)&v0[v1] = v3;
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_unknownObjectRetain();
  return v2;
}

void sub_1004AAA34(void *a1)
{
  char v40 = a1;
  uint64_t v1 = sub_100725EF0();
  uint64_t v44 = *(void *)(v1 - 8);
  uint64_t v45 = v1;
  __chkstk_darwin(v1, v2);
  char v42 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100725F20();
  uint64_t v41 = *(void *)(v43 - 8);
  __chkstk_darwin(v43, v4);
  uint64_t v39 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100725EE0();
  uint64_t v37 = *(void *)(v6 - 8);
  uint64_t v38 = v6;
  uint64_t v8 = __chkstk_darwin(v6, v7);
  double v10 = (uint64_t *)((char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8, v11);
  int v13 = (uint64_t *)((char *)&v35 - v12);
  uint64_t v14 = sub_100725F50();
  uint64_t v35 = *(void *)(v14 - 8);
  uint64_t v36 = v14;
  __chkstk_darwin(v14, v15);
  int v46 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100726770();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17, v19);
  int v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100462C50(0, (unint64_t *)&unk_100A46DC0);
  id v22 = (id)im_primary_queue();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_1004CC294((unint64_t *)&unk_100A48030, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
  sub_100431F80((uint64_t *)&unk_100A46DD0);
  sub_1004D10A4(&qword_100A48040, (uint64_t *)&unk_100A46DD0);
  sub_100726890();
  sub_100726780();

  (*(void (**)(char *, uint64_t))(v18 + 8))(v21, v17);
  id v23 = v46;
  swift_getObjectType();
  sub_100725F30();
  double v24 = sub_1004CA980();
  if ((~*(void *)&v24 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v24 < 9.22337204e18)
  {
    *int v13 = (uint64_t)v24;
    uint64_t v26 = v37;
    uint64_t v25 = v38;
    id v27 = *(void (**)(void *, void, uint64_t))(v37 + 104);
    v27(v13, enum case for DispatchTimeInterval.seconds(_:), v38);
    *double v10 = 0;
    v27(v10, enum case for DispatchTimeInterval.nanoseconds(_:), v25);
    sub_1007267D0();
    int v28 = *(void (**)(void *, uint64_t))(v26 + 8);
    v28(v10, v25);
    v28(v13, v25);
    (*(void (**)(char *, uint64_t))(v35 + 8))(v23, v36);
    uint64_t v29 = swift_allocObject();
    char v30 = v40;
    *(void *)(v29 + 16) = v40;
    aBlock[4] = sub_1004D10E8;
    aBlock[5] = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100435714;
    aBlock[3] = &unk_10098F070;
    uint64_t v31 = _Block_copy(aBlock);
    id v32 = v30;
    NSString v33 = v39;
    sub_100725F00();
    id v34 = v42;
    sub_1004AAFF4();
    sub_100726790();
    _Block_release(v31);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v34, v45);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v43);
    swift_release();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1004AAFF4()
{
  return sub_100726890();
}

uint64_t sub_1004AB0D0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___rollKeysTimer) = a1;
  return swift_unknownObjectRelease();
}

uint64_t (*sub_1004AB0E8(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = sub_1004AA9CC();
  return sub_1004AB130;
}

uint64_t sub_1004AB130(void *a1)
{
  *(void *)(a1[1] + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___rollKeysTimer) = *a1;
  return swift_unknownObjectRelease();
}

id sub_1004AB148()
{
  uint64_t v1 = OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___unsentRateLimiter;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___unsentRateLimiter);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___unsentRateLimiter);
LABEL_5:
    id v7 = v2;
    return v3;
  }
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2E8))();
  id result = [objc_allocWithZone((Class)IDSRateLimiter) initWithLimit:v4 timeLimit:(*(double (**)(void))((swift_isaMask & *v0) + 0x2F0))()];
  if (result)
  {
    uint64_t v6 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = result;
    id v3 = result;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004AB258(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___unsentRateLimiter) = a1;
  return _objc_release_x1();
}

void (*sub_1004AB26C(id *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1004AB148();
  return sub_1004AB2B4;
}

void sub_1004AB2B4(uint64_t *a1, uint64_t a2)
{
}

id sub_1004AB2C0()
{
  uint64_t v1 = OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___iMessageReceiveRateLimiter;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___iMessageReceiveRateLimiter);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___iMessageReceiveRateLimiter);
LABEL_5:
    id v7 = v2;
    return v3;
  }
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2F8))();
  id result = [objc_allocWithZone((Class)IDSRateLimiter) initWithLimit:v4 timeLimit:(*(double (**)(void))((swift_isaMask & *v0) + 0x300))()];
  if (result)
  {
    uint64_t v6 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = result;
    id v3 = result;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004AB3D0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___iMessageReceiveRateLimiter) = a1;
  return _objc_release_x1();
}

void (*sub_1004AB3E4(id *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1004AB2C0();
  return sub_1004AB42C;
}

void sub_1004AB42C(uint64_t *a1, uint64_t a2)
{
}

id sub_1004AB438()
{
  uint64_t v1 = OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastActiveRateLimiter;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastActiveRateLimiter);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastActiveRateLimiter);
LABEL_5:
    id v7 = v2;
    return v3;
  }
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x308))();
  id result = [objc_allocWithZone((Class)IDSRateLimiter) initWithLimit:v4 timeLimit:(*(double (**)(void))((swift_isaMask & *v0) + 0x310))()];
  if (result)
  {
    uint64_t v6 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = result;
    id v3 = result;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004AB548(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastActiveRateLimiter) = a1;
  return _objc_release_x1();
}

void (*sub_1004AB55C(id *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1004AB438();
  return sub_1004AB5A4;
}

void sub_1004AB5A4(uint64_t *a1, uint64_t a2)
{
}

id sub_1004AB5B0()
{
  uint64_t v1 = OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastIMessagedRateLimiter;
  uint64_t v2 = *(void **)((char *)v0 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastIMessagedRateLimiter);
  if (v2)
  {
    id v3 = *(id *)((char *)v0 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastIMessagedRateLimiter);
LABEL_5:
    id v7 = v2;
    return v3;
  }
  uint64_t v4 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x320))();
  id result = [objc_allocWithZone((Class)IDSRateLimiter) initWithLimit:v4 timeLimit:(*(double (**)(void))((swift_isaMask & *v0) + 0x328))()];
  if (result)
  {
    uint64_t v6 = *(void **)((char *)v0 + v1);
    *(void *)((char *)v0 + v1) = result;
    id v3 = result;

    uint64_t v2 = 0;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004AB6C0(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastIMessagedRateLimiter) = a1;
  return _objc_release_x1();
}

void (*sub_1004AB6D4(id *a1))(uint64_t *a1, uint64_t a2)
{
  a1[1] = v1;
  *a1 = sub_1004AB5B0();
  return sub_1004AB71C;
}

void sub_1004AB71C(uint64_t *a1, uint64_t a2)
{
}

void sub_1004AB728(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = *(void **)(v3 + *a3);
  *(void *)(v3 + *a3) = v4;
}

unint64_t sub_1004AB73C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A46DA8);
  uint64_t v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_10047B0C4((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004AB848(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A46D60);
  uint64_t v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 48);
  while (1)
  {
    long long v13 = *((_OWORD *)v4 - 1);
    uint64_t v5 = *v4;
    id v6 = (id)v13;
    id v7 = *((id *)&v13 + 1);
    swift_retain();
    unint64_t result = sub_1004BECC8(v6, v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(_OWORD *)(v2[6] + 16 * result) = v13;
    *(void *)(v2[7] + 8 * result) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004AB984(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A46D38);
  uint64_t v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    id v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_10045C784(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004ABAA0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A46CE0);
  uint64_t v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_10045C784(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

id sub_1004ABBBC@<X0>(void *a1@<X8>)
{
  return sub_1004ABBF4(&qword_100A46820, (uint64_t)&off_10098E9C8, a1);
}

id sub_1004ABBD8@<X0>(void *a1@<X8>)
{
  return sub_1004ABBF4(&qword_100A46828, (uint64_t)&off_10098E9E8, a1);
}

id sub_1004ABBF4@<X0>(unint64_t *a1@<X1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  id result = [self sharedInstance];
  if (result)
  {
    id v7 = result;
    id result = (id)sub_100462C50(0, a1);
    a3[3] = result;
    a3[4] = a2;
    *a3 = v7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1004ABC70(void *a1, uint64_t a2, unint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return sub_1004ABCBC(a1, a2, a3);
}

void *sub_1004ABCBC(void *a1, uint64_t a2, unint64_t a3)
{
  void (*v13)(uint64_t *__return_ptr);
  void *v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(void *, uint64_t, uint64_t);
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(void *, uint64_t, uint64_t);
  void *v23;
  uint64_t v24;
  id v25;
  NSObject *v26;
  os_log_type_t v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v31;
  void *v32;
  uint64_t v35[3];
  uint64_t v36;
  uint64_t v37;
  objc_super v38;

  uint64_t v5 = &v3[OBJC_IVAR___IDSSenderKeyDistributionManager_logger];
  uint64_t v6 = v3;
  sub_1004DFE9C(10);
  *(void *)&v6[OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___rollKeysTimer] = 0;
  uint64_t v7 = OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___unsentRateLimiter;
  *(void *)&v6[OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___unsentRateLimiter] = 0;
  uint64_t v8 = OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___iMessageReceiveRateLimiter;
  *(void *)&v6[OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___iMessageReceiveRateLimiter] = 0;
  uint64_t v9 = OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastActiveRateLimiter;
  *(void *)&v6[OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastActiveRateLimiter] = 0;
  uint64_t v10 = OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastIMessagedRateLimiter;
  *(void *)&v6[OBJC_IVAR___IDSSenderKeyDistributionManager____lazy_storage___lastIMessagedRateLimiter] = 0;
  uint64_t v31 = OBJC_IVAR___IDSSenderKeyDistributionManager_recoveryWorkItems;
  *(void *)&v6[v31] = sub_1004AB848((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v11 = OBJC_IVAR___IDSSenderKeyDistributionManager_deviceUpdateWorkItems;
  *(void *)&v6[v11] = sub_1004AB848((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v6[OBJC_IVAR___IDSSenderKeyDistributionManager_firstDataProtectionLockQueue] = _swiftEmptyArrayStorage;
  if (a1)
  {
    *(void *)&v6[OBJC_IVAR___IDSSenderKeyDistributionManager_persistenceManager] = a1;
    BOOL v12 = (uint64_t *)&v6[OBJC_IVAR___IDSSenderKeyDistributionManager_service];
    *BOOL v12 = a2;
    v12[1] = a3;
    id v32 = a1;
    swift_bridgeObjectRetain();

    v38.receiver = v6;
    v38.super_class = (Class)type metadata accessor for SenderKeyDistributionManager(0);
    a1 = objc_msgSendSuper2(&v38, "init");
    uint64_t v13 = *(void (**)(uint64_t *__return_ptr))((swift_isaMask & *a1) + 0x190);
    uint64_t v14 = a1;
    v13(v35);
    uint64_t v15 = v36;
    uint64_t v16 = v37;
    sub_10044C0F4(v35, v36);
    uint64_t v17 = *(void (**)(void *, uint64_t, uint64_t))(v16 + 8);
    uint64_t v18 = v14;
    v17(a1, v15, v16);

    uint64_t v19 = sub_10044C6AC((uint64_t)v35);
    (*(void (**)(uint64_t *__return_ptr, uint64_t))((swift_isaMask & *v18) + 0x1B0))(v35, v19);
    uint64_t v20 = v36;
    int v21 = v37;
    sub_10044C0F4(v35, v36);
    id v22 = *(void (**)(void *, uint64_t, uint64_t))(v21 + 8);
    id v23 = v18;
    v22(a1, v20, v21);

    sub_10044C6AC((uint64_t)v35);
    double v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    uint64_t v25 = sub_1004D598C();
    registerSysdiagnoseBlock(title:queue:block:)(0x646E65532D534449, 0xEE0079654B2D7265, (uint64_t)v25, (uint64_t)sub_1004BB0B0, v24);

    swift_release_n();
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_100725EB0();
    id v27 = sub_1007266E0();
    if (os_log_type_enabled(v26, v27))
    {
      int v28 = (uint8_t *)swift_slowAlloc();
      v35[0] = swift_slowAlloc();
      *(_DWORD *)int v28 = 136315138;
      swift_bridgeObjectRetain();
      sub_10043E578(a2, a3, v35);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Successfully initialized SenderKeyDistributionManager with service %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(void))((swift_isaMask & *v23) + 0xE8))();
    swift_getObjectType();
    sub_1007267C0();

    swift_unknownObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_100725ED0();
    (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v5, v29);
    swift_unknownObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    type metadata accessor for SenderKeyDistributionManager(0);
    swift_deallocPartialClassInstance();
  }
  return a1;
}

uint64_t type metadata accessor for SenderKeyDistributionManager(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A50B50);
}

uint64_t sub_1004AC234()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

id sub_1004AC2BC()
{
  (*(void (**)(void *__return_ptr))((swift_isaMask & *v0) + 0x190))(v12);
  uint64_t v1 = v13;
  uint64_t v2 = v14;
  sub_10044C0F4(v12, v13);
  uint64_t v3 = *(void (**)(void *, uint64_t, uint64_t))(v2 + 16);
  uint64_t v4 = v0;
  v3(v0, v1, v2);

  uint64_t v5 = sub_10044C6AC((uint64_t)v12);
  (*(void (**)(void *__return_ptr, uint64_t))((swift_isaMask & *v4) + 0x1B0))(v12, v5);
  uint64_t v6 = v13;
  uint64_t v7 = v14;
  sub_10044C0F4(v12, v13);
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v9 = v4;
  v8(v0, v6, v7);

  sub_10044C6AC((uint64_t)v12);
  v11.receiver = v9;
  v11.super_class = (Class)type metadata accessor for SenderKeyDistributionManager(0);
  return objc_msgSendSuper2(&v11, "dealloc");
}

id sub_1004AC56C(uint64_t a1)
{
  uint64_t v2 = self;
  sub_1004AA868();
  sub_100462C50(0, (unint64_t *)&unk_100A46830);
  Class isa = sub_100726560().super.isa;
  swift_bridgeObjectRelease();
  sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
  Class v4 = sub_100726560().super.isa;
  id v5 = [v2 accountToQueryFrom:isa fromURI:a1 destinationURIs:v4 allowLocalAccount:0];

  return v5;
}

uint64_t sub_1004AC648(void *a1, uint64_t a2, void *a3, int64_t a4, uint64_t a5, uint64_t a6, void *a7, void (*a8)(uint64_t), uint64_t a9)
{
  v89._countAndFlagsBits = a6;
  v89._object = a7;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_1004AB73C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v116 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v92 = swift_allocObject();
  *(void *)(v92 + 16) = _swiftEmptyArrayStorage;
  int v93 = (void *)(v92 + 16);
  sub_100431F80((uint64_t *)&unk_100A46840);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100797A20;
  *(void *)(inited + 32) = a3;
  unint64_t aBlock = inited;
  sub_100726590();
  id v99 = a3;
  unint64_t v13 = swift_bridgeObjectRetain();
  sub_1004BA248(v13, (uint64_t (*)(uint64_t, void, unint64_t))sub_1004C954C);
  unint64_t v14 = aBlock;
  if (aBlock >> 62) {
    goto LABEL_70;
  }
  uint64_t v15 = *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v107 = v11;
    int64_t v98 = a4;
    if (!v15) {
      break;
    }
    unint64_t v96 = v14;
    id v97 = self;
    unint64_t v100 = v14 & 0xC000000000000001;
    uint64_t v16 = 4;
    id v94 = (id)v15;
    while (1)
    {
      id v17 = v100 ? (id)sub_100726A10() : *(id *)(v14 + 8 * v16);
      uint64_t v18 = v17;
      uint64_t v11 = (uint64_t)v99;
      if (__OFADD__(v16 - 4, 1)) {
        break;
      }
      id v103 = (id)(v16 - 3);
      id v19 = [v97 sharedInstance];
      if (!v19)
      {
        __break(1u);
LABEL_76:
        __break(1u);
LABEL_77:
        __break(1u);
        goto LABEL_78;
      }
      uint64_t v20 = v19;
      id v21 = v18;
      NSString v22 = sub_100726420();
      unsigned int v23 = [v20 cachedIDStatusForID:v21 fromURI:v99 fromService:v22 respectExpiry:1];

      id v24 = [self sharedInstance];
      if (!v24) {
        goto LABEL_76;
      }
      uint64_t v25 = v24;
      id v26 = v21;
      NSString v27 = sub_100726420();
      unsigned __int8 v28 = [v25 hasPeerTokensForURI:v26 fromURI:v99 service:v27];

      id v29 = v26;
      if ((v28 & 1) != 0 || v23 == 2)
      {
        sub_100726550();
        if (*(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1007265A0();
        }
      }
      else
      {
        sub_100726550();
        if (*(void *)((*v93 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v93 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1007265A0();
        }
      }
      sub_1007265C0();
      uint64_t v11 = v107;
      a4 = v98;
      sub_100726590();

      ++v16;
      unint64_t v14 = v96;
      if (v103 == v94) {
        goto LABEL_19;
      }
    }
LABEL_67:
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_100726BA0();
    swift_bridgeObjectRelease();
  }
LABEL_19:
  swift_bridgeObjectRelease();
  id v95 = self;
  id v30 = [v95 sharedInstance];
  if (!v30) {
    goto LABEL_77;
  }
  uint64_t v31 = v30;
  sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
  swift_bridgeObjectRetain();
  Class isa = sub_100726560().super.isa;
  swift_bridgeObjectRelease();
  NSString v33 = sub_100726420();
  id v34 = [v31 endpointsForURIs:isa service:v33 fromURI:v99];

  if (v34)
  {
    sub_100431F80((uint64_t *)&unk_100A47F10);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    uint64_t v35 = sub_100726390();

    a4 = 0;
    uint64_t v36 = 1 << *(unsigned char *)(v35 + 32);
    uint64_t v37 = -1;
    if (v36 < 64) {
      uint64_t v37 = ~(-1 << v36);
    }
    unint64_t v14 = v37 & *(void *)(v35 + 64);
    uint64_t v101 = v35 + 64;
    int64_t v104 = (unint64_t)(v36 + 63) >> 6;
    while (1)
    {
      if (v14)
      {
        unint64_t v39 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v40 = v39 | (a4 << 6);
      }
      else
      {
        BOOL v41 = __OFADD__(a4++, 1);
        if (v41) {
          goto LABEL_68;
        }
        if (a4 >= v104)
        {
LABEL_54:
          swift_release();
          if (*v93 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v85 = sub_100726BA0();
            swift_bridgeObjectRelease();
            if (!v85) {
              goto LABEL_72;
            }
LABEL_56:
            swift_retain_n();
            uint64_t v63 = sub_100725EB0();
            os_log_type_t v64 = sub_1007266E0();
            if (os_log_type_enabled(v63, v64))
            {
              unint64_t v65 = (uint8_t *)swift_slowAlloc();
              unint64_t aBlock = swift_slowAlloc();
              *(_DWORD *)unint64_t v65 = 136315138;
              swift_beginAccess();
              swift_bridgeObjectRetain();
              uint64_t v66 = sub_100726580();
              unint64_t v68 = v67;
              uint64_t v11 = v107;
              swift_bridgeObjectRelease();
              uint64_t v115 = sub_10043E578(v66, v68, (uint64_t *)&aBlock);
              sub_100726830();
              swift_bridgeObjectRelease();
              swift_release_n();
              _os_log_impl((void *)&_mh_execute_header, v63, v64, "We don't have cached results for %s - need to query", v65, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_release_n();
            }
            id v69 = [a1 _registrationCert];
            if (!v69)
            {
              swift_bridgeObjectRelease();
              uint64_t v82 = sub_100725EB0();
              os_log_type_t v83 = sub_1007266C0();
              if (os_log_type_enabled(v82, v83))
              {
                int v84 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)int v84 = 0;
                _os_log_impl((void *)&_mh_execute_header, v82, v83, "Cannot query without a cert - returning", v84, 2u);
                swift_slowDealloc();
              }

              goto LABEL_73;
            }
            Swift::String v70 = v69;
            uint64_t v71 = sub_100725B50();
            unint64_t v73 = v72;

            id v74 = [v95 sharedInstance];
            if (!v74) {
              goto LABEL_79;
            }
            int v75 = v74;
            swift_bridgeObjectRelease();
            swift_beginAccess();
            swift_bridgeObjectRetain();
            Class v105 = sub_100726560().super.isa;
            swift_bridgeObjectRelease();
            uint64_t v108 = v71;
            Class v76 = sub_100725B20().super.isa;
            NSString v77 = sub_100726420();
            unint64_t aBlock = 0;
            unint64_t v110 = 0xE000000000000000;
            sub_1007269F0(26);
            swift_bridgeObjectRelease();
            unint64_t aBlock = 0xD000000000000017;
            unint64_t v110 = 0x80000001008C32A0;
            sub_1007264C0(v89);
            v117._countAndFlagsBits = 93;
            v117._object = (void *)0xE100000000000000;
            sub_1007264C0(v117);
            unint64_t v102 = v73;
            NSString v78 = sub_100726420();
            swift_bridgeObjectRelease();
            uint64_t v79 = (void *)swift_allocObject();
            v79[2] = v106;
            v79[3] = v92;
            v79[4] = v11;
            v79[5] = a8;
            v79[6] = a9;
            uint64_t v113 = sub_1004CAD24;
            uint64_t v114 = v79;
            unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
            unint64_t v110 = 1107296256;
            uint64_t v111 = sub_1004AD668;
            uint64_t v112 = &unk_10098E748;
            unint64_t v80 = _Block_copy(&aBlock);
            id v81 = v106;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_release();
            LOBYTE(v88) = 0;
            [v75 startQueryForURIs:v105 fromIdentity:v76 fromURI:v99 fromService:v77 forSending:0 forRefresh:0 isForced:v88 reason:v78 completionBlock:v80];
            _Block_release(v80);

            sub_100442248(v108, v102);
          }
          else
          {
            if (*(void *)((*v93 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_56;
            }
LABEL_72:
            swift_bridgeObjectRelease();
LABEL_73:
            uint64_t v86 = swift_bridgeObjectRetain();
            a8(v86);
            swift_bridgeObjectRelease();
          }
          swift_release();
          return swift_release();
        }
        unint64_t v42 = *(void *)(v101 + 8 * a4);
        if (!v42)
        {
          int64_t v43 = a4 + 1;
          if (a4 + 1 >= v104) {
            goto LABEL_54;
          }
          unint64_t v42 = *(void *)(v101 + 8 * v43);
          if (!v42)
          {
            int64_t v43 = a4 + 2;
            if (a4 + 2 >= v104) {
              goto LABEL_54;
            }
            unint64_t v42 = *(void *)(v101 + 8 * v43);
            if (!v42)
            {
              int64_t v43 = a4 + 3;
              if (a4 + 3 >= v104) {
                goto LABEL_54;
              }
              unint64_t v42 = *(void *)(v101 + 8 * v43);
              if (!v42)
              {
                while (1)
                {
                  a4 = v43 + 1;
                  if (__OFADD__(v43, 1)) {
                    goto LABEL_69;
                  }
                  if (a4 >= v104) {
                    goto LABEL_54;
                  }
                  unint64_t v42 = *(void *)(v101 + 8 * a4);
                  ++v43;
                  if (v42) {
                    goto LABEL_38;
                  }
                }
              }
            }
          }
          a4 = v43;
        }
LABEL_38:
        unint64_t v14 = (v42 - 1) & v42;
        unint64_t v40 = __clz(__rbit64(v42)) + (a4 << 6);
      }
      uint64_t v44 = *(void **)(*(void *)(v35 + 48) + 8 * v40);
      uint64_t v45 = v106;
      id v46 = v44;
      unint64_t v47 = swift_bridgeObjectRetain();
      unint64_t v48 = sub_1004CB650(v47, v45);

      swift_bridgeObjectRelease();
      id v49 = v46;
      long long v50 = *(void **)(v11 + 16);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t aBlock = (unint64_t)v50;
      *(void *)(v11 + 16) = 0x8000000000000000;
      unint64_t v53 = sub_10047B0C4((uint64_t)v49);
      uint64_t v54 = v50[2];
      BOOL v55 = (v52 & 1) == 0;
      uint64_t v56 = v54 + v55;
      if (__OFADD__(v54, v55))
      {
        __break(1u);
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
      uint64_t v11 = v52;
      if (v50[3] >= v56)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v59 = 8 * v53;
          if (v52) {
            goto LABEL_24;
          }
        }
        else
        {
          sub_1004BFE80();
          long long v50 = (void *)aBlock;
          uint64_t v59 = 8 * v53;
          if (v11) {
            goto LABEL_24;
          }
        }
      }
      else
      {
        sub_1004BF3F4(v56, isUniquelyReferenced_nonNull_native);
        long long v50 = (void *)aBlock;
        unint64_t v57 = sub_10047B0C4((uint64_t)v49);
        if ((v11 & 1) != (v58 & 1)) {
          goto LABEL_80;
        }
        unint64_t v53 = v57;
        uint64_t v59 = 8 * v57;
        if (v11)
        {
LABEL_24:
          uint64_t v38 = v50[7];
          swift_bridgeObjectRelease();
          *(void *)(v38 + v59) = v48;
          goto LABEL_25;
        }
      }
      v50[(v53 >> 6) + 8] |= 1 << v53;
      *(void *)(v50[6] + v59) = v49;
      *(void *)(v50[7] + v59) = v48;
      uint64_t v60 = v50[2];
      BOOL v41 = __OFADD__(v60, 1);
      uint64_t v61 = v60 + 1;
      if (v41) {
        goto LABEL_66;
      }
      v50[2] = v61;
      id v62 = v49;
LABEL_25:
      uint64_t v11 = v107;
      *(void *)(v107 + 16) = v50;
      swift_bridgeObjectRelease();
    }
  }
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  uint64_t result = sub_100726D40();
  __break(1u);
  return result;
}

uint64_t sub_1004AD218(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0x657571655279656BLL;
    }
    else {
      unint64_t v3 = 0xD000000000000012;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xEA00000000007473;
    }
    else {
      unint64_t v4 = 0x80000001008C3240;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0x657571655279656BLL;
      }
      else {
        unint64_t v6 = 0xD000000000000012;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xEA00000000007473;
      }
      else {
        unint64_t v7 = 0x80000001008C3240;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v3 = 0x727473694479656BLL;
    unint64_t v4 = 0xEF6E6F6974756269;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xEF6E6F6974756269;
  if (v3 != 0x727473694479656BLL)
  {
LABEL_21:
    char v8 = sub_100726D20();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1004AD348(char a1, char a2)
{
  if (*(void *)&aVersion_3[8 * a1] == *(void *)&aVersion_3[8 * a2]
    && *(void *)&aMessagetkeyinf[8 * a1 + 24] == *(void *)&aMessagetkeyinf[8 * a2 + 24])
  {
    char v3 = 1;
  }
  else
  {
    char v3 = sub_100726D20();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1004AD3D0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v26 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v25 = (uint64_t)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9, v11);
  unint64_t v14 = (char *)v22 - v13;
  uint64_t v15 = _swiftEmptyArrayStorage;
  NSString v27 = _swiftEmptyArrayStorage;
  uint64_t v24 = *(void *)(a3 + 16);
  if (v24)
  {
    unint64_t v16 = 0;
    id v17 = _swiftEmptyArrayStorage;
    v22[1] = a2;
    uint64_t v23 = a3;
    v22[0] = a1;
    while (v16 < *(void *)(a3 + 16))
    {
      unint64_t v18 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
      uint64_t v15 = *(void **)(v26 + 72);
      sub_1004CBF18(a3 + v18 + (void)v15 * v16, (uint64_t)v14, type metadata accessor for SenderKeyInfo);
      char v19 = a1(v14);
      if (v3)
      {
        sub_1004CBE50((uint64_t)v14, type metadata accessor for SenderKeyInfo);
        swift_release();
        swift_bridgeObjectRelease();
        return (uint64_t)v15;
      }
      if (v19)
      {
        sub_1004CBEB0((uint64_t)v14, v25, type metadata accessor for SenderKeyInfo);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1004C01F8(0, v17[2] + 1, 1);
        }
        id v17 = v27;
        unint64_t v21 = v27[2];
        unint64_t v20 = v27[3];
        if (v21 >= v20 >> 1)
        {
          sub_1004C01F8(v20 > 1, v21 + 1, 1);
          id v17 = v27;
        }
        v17[2] = v21 + 1;
        uint64_t result = sub_1004CBEB0(v25, (uint64_t)v17 + v18 + v21 * (void)v15, type metadata accessor for SenderKeyInfo);
        a3 = v23;
        a1 = (uint64_t (*)(char *))v22[0];
      }
      else
      {
        uint64_t result = sub_1004CBE50((uint64_t)v14, type metadata accessor for SenderKeyInfo);
      }
      if (v24 == ++v16)
      {
        uint64_t v15 = v27;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  return result;
}

uint64_t sub_1004AD668(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, unsigned int a8, uint64_t a9)
{
  uint64_t v11 = a4;
  char v19 = *(void (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, void, uint64_t))(a1 + 32);
  if (a3)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100462C50(0, (unint64_t *)&unk_100A468F0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    uint64_t v17 = sub_100726390();
    if (!v11) {
      goto LABEL_4;
    }
    goto LABEL_3;
  }
  uint64_t v17 = 0;
  if (a4)
  {
LABEL_3:
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100462C50(0, (unint64_t *)&unk_100A468F0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    uint64_t v11 = sub_100726390();
  }
LABEL_4:
  if (a5)
  {
    uint64_t v12 = sub_100726430();
    a5 = v13;
    if (!a7) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v12 = 0;
  if (a7)
  {
LABEL_6:
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100431F80(&qword_100A46DA0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    a7 = sub_100726390();
  }
LABEL_7:
  if (a9)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100431F80((uint64_t *)&unk_100A47F10);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    uint64_t v14 = sub_100726390();
  }
  else
  {
    uint64_t v14 = 0;
  }
  swift_retain();
  id v15 = a2;
  v19(a2, v17, v11, v12, a5, a6, a7, a8, v14);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004AD940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void *, uint64_t, uint64_t))((swift_isaMask & *v6) + 0x1D8))(a1, a2, a3, a4, 0, &_swiftEmptyArrayStorage, a5, a6);
}

id sub_1004ADAEC(unint64_t a1, void *a2, uint64_t a3, unint64_t a4, char a5, uint64_t a6, uint64_t (*a7)(void), uint64_t a8)
{
  void (*v42)(uint64_t *__return_ptr);
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char **v48;
  char *v49;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v51;
  unint64_t v52;
  char *v53;
  NSObject *v54;
  os_log_type_t v55;
  uint8_t *v56;
  uint64_t v57;
  void (*v58)(id);
  id v59;
  id v60;
  uint64_t v61;
  os_log_type_t v62;
  NSObject *log;
  id v64;
  uint64_t v65;
  id v66;
  id v67;
  uint64_t (*v68)(void);
  uint64_t (*v69)(void);
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75[3];
  uint64_t v76;
  uint64_t v77;

  swift_bridgeObjectRetain_n();
  id v16 = a2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v17 = v16;
  unint64_t v18 = sub_100725EB0();
  os_log_type_t v19 = sub_1007266E0();
  id v74 = a3;
  unint64_t v72 = a6;
  if (os_log_type_enabled(v18, v19))
  {
    id v62 = v19;
    log = v18;
    unint64_t v68 = a7;
    unint64_t v65 = a8;
    uint64_t v20 = swift_slowAlloc();
    unint64_t v21 = (void *)swift_slowAlloc();
    v75[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136316162;
    Swift::String v70 = a4;
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_100726580();
    unint64_t v24 = v23;
    swift_bridgeObjectRelease();
    sub_10043E578(v22, v24, v75);
    sub_100726830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 2112;
    id v25 = v17;
    sub_100726830();
    os_log_type_t v64 = v17;
    *unint64_t v21 = v17;

    *(_WORD *)(v20 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_10043E578(a3, a4, v75);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 32) = 2080;
    if (a5)
    {
      if (a5 == 1) {
        uint64_t v26 = 0x657571655279656BLL;
      }
      else {
        uint64_t v26 = 0xD000000000000012;
      }
      if (a5 == 1) {
        unint64_t v27 = 0xEA00000000007473;
      }
      else {
        unint64_t v27 = 0x80000001008C3240;
      }
    }
    else
    {
      unint64_t v27 = 0xEF6E6F6974756269;
      uint64_t v26 = 0x727473694479656BLL;
    }
    id v29 = v73;
    sub_10043E578(v26, v27, v75);
    sub_100726830();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 42) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_100726580();
    unint64_t v32 = v31;
    swift_bridgeObjectRelease();
    sub_10043E578(v30, v32, v75);
    sub_100726830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, log, v62, "generateAndSendKeyIfNeeded called with toURIs: %s fromURI: %@ context: %s keyMessageType: %s requestedKeyIDs: %s", (uint8_t *)v20, 0x34u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unsigned __int8 v28 = v64;
    a8 = v65;
    a7 = v68;
    a4 = v70;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    unsigned __int8 v28 = v17;
    id v29 = v73;
  }
  NSString v33 = v29;
  unint64_t v34 = (unint64_t)sub_1004CAAE8(a1);

  id result = [v28 prefixedURI];
  if (result)
  {
    uint64_t v36 = result;
    if (([result _appearsToBeDSID] & 1) != 0
      || ([v36 _appearsToBePseudonymID] & 1) != 0
      || ([v36 _appearsToBeTemporaryID] & 1) != 0)
    {

LABEL_17:
      swift_bridgeObjectRelease();
      return (id)a7(0);
    }
    uint64_t v37 = v28;
    id v38 = [v28 tokenFreeURI];

    if (!v38) {
      goto LABEL_17;
    }
    if (v34 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v61 = sub_100726BA0();
      swift_bridgeObjectRelease();
      if (!v61) {
        goto LABEL_17;
      }
    }
    else if (!*(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_17;
    }
    uint64_t v39 = (*(uint64_t (**)(void *, unint64_t))((swift_isaMask & *v33) + 0x1C0))(v37, v34);
    if (!v39)
    {
      swift_bridgeObjectRelease();
      uint64_t v54 = sub_100725EB0();
      BOOL v55 = sub_1007266C0();
      if (os_log_type_enabled(v54, v55))
      {
        uint64_t v56 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v56 = 0;
        _os_log_impl((void *)&_mh_execute_header, v54, v55, "Failed to find a sending account - aborting", v56, 2u);
        swift_slowDealloc();
      }

      return (id)a7(0);
    }
    unint64_t v40 = (void *)v39;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = v33;
    *(void *)(v41 + 24) = v40;
    *(void *)(v41 + 32) = v34;
    *(void *)(v41 + 40) = v37;
    *(void *)(v41 + 48) = a3;
    *(void *)(v41 + 56) = a4;
    *(void *)(v41 + 64) = a7;
    *(void *)(v41 + 72) = a8;
    *(void *)(v41 + 80) = v72;
    uint64_t v71 = v41;
    *(unsigned char *)(v41 + 88) = a5;
    id v69 = a7;
    unint64_t v42 = *(void (**)(uint64_t *__return_ptr))((swift_isaMask & *v33) + 0x190);
    uint64_t v66 = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v43 = v33;
    swift_bridgeObjectRetain();
    swift_retain();
    unint64_t v67 = v40;
    v42(v75);
    uint64_t v44 = v76;
    uint64_t v45 = v77;
    sub_10044C0F4(v75, v76);
    LOBYTE(v44) = (*(uint64_t (**)(uint64_t, uint64_t))(v45 + 24))(v44, v45);
    id v46 = sub_10044C6AC((uint64_t)v75);
    if (v44)
    {
      swift_bridgeObjectRelease();
      unint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = sub_1004CB3C0;
      *(void *)(v47 + 24) = v71;
      unint64_t v48 = (char **)((char *)v43 + OBJC_IVAR___IDSSenderKeyDistributionManager_firstDataProtectionLockQueue);
      swift_beginAccess();
      id v49 = *v48;
      swift_retain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *unint64_t v48 = v49;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        id v49 = sub_10043E468(0, *((void *)v49 + 2) + 1, 1, v49);
        *unint64_t v48 = v49;
      }
      uint64_t v52 = *((void *)v49 + 2);
      long long v51 = *((void *)v49 + 3);
      if (v52 >= v51 >> 1)
      {
        id v49 = sub_10043E468((char *)(v51 > 1), v52 + 1, 1, v49);
        *unint64_t v48 = v49;
      }
      *((void *)v49 + 2) = v52 + 1;
      unint64_t v53 = &v49[16 * v52];
      *((void *)v53 + 4) = sub_10044C574;
      *((void *)v53 + 5) = v47;
      swift_endAccess();

      return (id)swift_release();
    }
    else
    {
      (*(void (**)(uint64_t))((swift_isaMask & *v43) + 0xC0))(v46);
      unint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v69;
      *(void *)(v57 + 24) = a8;
      *(void *)(v57 + 32) = v66;
      *(void *)(v57 + 40) = v43;
      *(void *)(v57 + 48) = v74;
      *(void *)(v57 + 56) = a4;
      *(void *)(v57 + 64) = v72;
      *(unsigned char *)(v57 + 72) = a5;
      *(void *)(v57 + 80) = v67;
      char v58 = *(void (**)(id))((swift_isaMask & *v43) + 0x1C8);
      uint64_t v59 = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v43;
      swift_retain();
      uint64_t v60 = v67;
      v58(v60);
      swift_release();
      swift_bridgeObjectRelease();

      swift_release();
      return (id)swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004AE464(char a1)
{
  if (!a1) {
    return 0x727473694479656BLL;
  }
  if (a1 == 1) {
    return 0x657571655279656BLL;
  }
  return 0xD000000000000012;
}

void *sub_1004AE4D0(uint64_t a1)
{
  uint64_t v2 = a1 + 56;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  id result = (void *)swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (v5)
  {
    unint64_t v9 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
    unint64_t v10 = v9 | (v8 << 6);
LABEL_22:
    uint64_t v14 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v10);
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    id v17 = objc_allocWithZone((Class)IDSPushToken);
    sub_100441FD4(v15, v16);
    Class isa = sub_100725B20().super.isa;
    id v19 = [v17 initWithData:isa];

    id result = (void *)sub_100442248(v15, v16);
    if (v19)
    {
      sub_100726550();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1007265A0();
      }
      sub_1007265C0();
      id result = (void *)sub_100726590();
    }
  }
  int64_t v11 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v11 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v11);
  ++v8;
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 1;
  if (v11 + 1 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 2;
  if (v11 + 2 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12) {
    goto LABEL_21;
  }
  int64_t v8 = v11 + 3;
  if (v11 + 3 >= v6) {
    goto LABEL_26;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v8);
  if (v12)
  {
LABEL_21:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    goto LABEL_22;
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v6)
  {
LABEL_26:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v13);
  if (v12)
  {
    int64_t v8 = v13;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v8 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_26;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v8);
    ++v13;
    if (v12) {
      goto LABEL_21;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1004AE6E8(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9, uint64_t a10)
{
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
LABEL_36:
    a2(v10 & 1);
    return;
  }
  uint64_t v12 = a1;
  uint64_t v35 = a2;
  id v13 = a4;
  unint64_t v14 = sub_10047B0C4((uint64_t)v13);
  if (v15)
  {
    uint64_t v37 = *(void **)(*(void *)(v12 + 56) + 8 * v14);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v37 = _swiftEmptyArrayStorage;
  }

  uint64_t v16 = v12 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v12 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & *(void *)(v12 + 64);
  int64_t v43 = (unint64_t)(v17 + 63) >> 6;
  swift_bridgeObjectRetain();
  char v36 = 0;
  int64_t v20 = 0;
  uint64_t v38 = v12 + 64;
  uint64_t v39 = v12;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v20 << 6);
      goto LABEL_25;
    }
    int64_t v23 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
      __break(1u);
      goto LABEL_38;
    }
    if (v23 >= v43) {
      goto LABEL_35;
    }
    unint64_t v24 = *(void *)(v16 + 8 * v23);
    ++v20;
    if (!v24)
    {
      int64_t v20 = v23 + 1;
      if (v23 + 1 >= v43) {
        goto LABEL_35;
      }
      unint64_t v24 = *(void *)(v16 + 8 * v20);
      if (!v24)
      {
        int64_t v20 = v23 + 2;
        if (v23 + 2 >= v43) {
          goto LABEL_35;
        }
        unint64_t v24 = *(void *)(v16 + 8 * v20);
        if (!v24) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v19 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
LABEL_25:
    uint64_t v26 = 8 * v22;
    unint64_t v27 = *(void **)(*(void *)(v12 + 48) + v26);
    unint64_t v28 = *(void *)(*(void *)(v12 + 56) + v26);
    if (v28 >> 62)
    {
      id v34 = v27;
      swift_bridgeObjectRetain();
      uint64_t v29 = sub_100726BA0();
    }
    else
    {
      uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v30 = v27;
      swift_bridgeObjectRetain();
    }
    if (v29
      && ((*(uint64_t (**)(id, void *, uint64_t, uint64_t))((swift_isaMask & *a5) + 0x1E0))(v13, v27, a6, a7) & 1) == 0
      && ((*(uint64_t (**)(id, void *))((swift_isaMask & *a5) + 0x270))(v13, v27) & 1) != 0)
    {
      id v31 = v13;
      uint64_t v32 = (*(uint64_t (**)(id, void *, unint64_t))((swift_isaMask & *a5) + 0x1F0))(v13, v27, v28);
      uint64_t v33 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *a5) + 0x1F8))(a8);
      if (*(void *)(v32 + 16) || *(void *)(v33 + 16))
      {
        char v36 = 1;
        (*(void (**)(uint64_t, void *, id, uint64_t, void, uint64_t, uint64_t, unint64_t, void *))((swift_isaMask & *a5) + 0x1E8))(a10, v27, v31, 1, a9, v32, v33, v28, v37);
        swift_bridgeObjectRelease();
        id v13 = v31;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v16 = v38;
        uint64_t v12 = v39;
      }
      else
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v13 = v31;
        uint64_t v16 = v38;
        uint64_t v12 = v39;
      }
    }
    else
    {

      swift_bridgeObjectRelease();
    }
  }
  int64_t v25 = v23 + 3;
  if (v25 >= v43)
  {
LABEL_35:
    swift_bridgeObjectRelease();
    swift_release();
    a2 = v35;
    LOBYTE(v10) = v36;
    goto LABEL_36;
  }
  unint64_t v24 = *(void *)(v16 + 8 * v25);
  if (v24)
  {
    int64_t v20 = v25;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v20 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v20 >= v43) {
      goto LABEL_35;
    }
    unint64_t v24 = *(void *)(v16 + 8 * v20);
    ++v25;
    if (v24) {
      goto LABEL_24;
    }
  }
LABEL_38:
  __break(1u);
}

uint64_t sub_1004AEB28(id a1, void *a2, uint64_t a3, uint64_t a4)
{
  unint64_t v5 = v4;
  if (qword_100A4FBD0 != -1) {
    swift_once();
  }
  BOOL v10 = qword_100A53380 == a3 && *(void *)algn_100A53388 == a4;
  if (v10 || (uint64_t v11 = 0, (sub_100726D20() & 1) != 0))
  {
    id v12 = [a1 prefixedURI];
    sub_100726430();

    id v13 = [a2 prefixedURI];
    sub_100726430();

    swift_bridgeObjectRetain();
    sub_100726520();
    sub_1007264B0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v14 = sub_100726420();
    uint64_t v15 = swift_bridgeObjectRelease();
    uint64_t v16 = *(uint64_t (**)(void))((swift_isaMask & *v5) + 0x118);
    uint64_t v17 = (void *)((uint64_t (*)(uint64_t))v16)(v15);
    unsigned int v18 = [v17 underLimitForItem:v14];

    if (v18)
    {
      unint64_t v19 = v16();
      [v19 noteItem:v14];
      int64_t v20 = v14;
      unint64_t v14 = v19;
    }
    else
    {
      id v21 = a1;
      id v22 = a2;
      id v23 = v21;
      id v24 = v22;
      int64_t v20 = sub_100725EB0();
      os_log_type_t v25 = sub_1007266E0();
      if (os_log_type_enabled(v20, v25))
      {
        os_log_type_t type = v25;
        uint64_t v26 = swift_slowAlloc();
        id v30 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 138412546;
        id v27 = v23;
        sub_100726830();
        *id v30 = v23;

        *(_WORD *)(v26 + 12) = 2112;
        id v28 = v24;
        sub_100726830();
        v30[1] = v24;

        _os_log_impl((void *)&_mh_execute_header, v20, type, "Too many attempts to generateAndSendKeyIfNeeded on iMessageReceive for fromURI: %@ toURI: %@ - aborting", (uint8_t *)v26, 0x16u);
        sub_100431F80(&qword_100A44F10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    uint64_t v11 = v18 ^ 1;
  }
  return v11;
}

void sub_1004AEEC8(void *a1, void *a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v17 = sub_100725D30();
  uint64_t v81 = *(void *)(v17 - 8);
  uint64_t v82 = v17;
  __chkstk_darwin(v17, v18);
  unint64_t v80 = (char *)&v71 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *))((swift_isaMask & *v8) + 0x290);
  int v83 = a5;
  uint64_t v21 = v20(a4, a5, a6, a7, a8);
  if (v22 >> 60 != 15)
  {
    uint64_t v32 = v21;
    unint64_t v33 = v22;
    Class v76 = a2;
    NSString v77 = v8;
    unint64_t v86 = (unint64_t)&_swiftEmptySetSingleton;
    aBlock[0] = a8;
    uint64_t v78 = a6;
    swift_bridgeObjectRetain();
    uint64_t v79 = a7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v34 = swift_bridgeObjectRetain();
    sub_1004BA248(v34, (uint64_t (*)(uint64_t, void, unint64_t))sub_1004C9780);
    unint64_t v35 = (unint64_t)aBlock[0];
    if ((unint64_t)aBlock[0] >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_100726BA0();
      swift_bridgeObjectRelease();
      if (v36)
      {
LABEL_6:
        unint64_t v72 = a1;
        unint64_t v73 = a3;
        uint64_t v74 = v32;
        unint64_t v75 = v33;
        id v84 = self;
        if (v36 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v37 = 0;
        unint64_t v38 = v35 & 0xC000000000000001;
        unint64_t v39 = v35;
        uint64_t v40 = v36;
        do
        {
          if (v38) {
            id v41 = (id)sub_100726A10();
          }
          else {
            id v41 = *(id *)(v35 + 8 * v37 + 32);
          }
          unint64_t v42 = v41;
          ++v37;
          id v43 = [v41 URI];
          id v44 = [v43 prefixedURI];

          sub_100726430();
          id v45 = [v42 pushToken];
          uint64_t v46 = sub_100725B50();
          unint64_t v48 = v47;

          NSString v49 = sub_100726420();
          swift_bridgeObjectRelease();
          Class isa = sub_100725B20().super.isa;
          id v51 = [v84 destinationWithAlias:v49 pushToken:isa];
          sub_100442248(v46, v48);

          id v52 = v51;
          sub_1004C298C(aBlock, v52);

          unint64_t v35 = v39;
        }
        while (v40 != v37);
        swift_bridgeObjectRelease();
        unint64_t v53 = (void *)v86;
        uint64_t v32 = v74;
        unint64_t v33 = v75;
        a1 = v72;
        a3 = v73;
        if ((v86 & 0xC000000000000001) != 0)
        {
LABEL_13:
          swift_bridgeObjectRetain();
          uint64_t v54 = sub_100726920();
          swift_bridgeObjectRelease();
          if (v54)
          {
LABEL_14:
            BOOL v55 = v80;
            sub_100725D20();
            uint64_t v56 = sub_100725CD0();
            uint64_t v58 = v57;
            (*(void (**)(char *, uint64_t))(v81 + 8))(v55, v82);
            sub_100462C50(0, &qword_100A46860);
            sub_100480C20(&qword_100A46868, &qword_100A46860);
            uint64_t v26 = sub_100726630().super.isa;
            swift_bridgeObjectRelease();
            NSString v59 = sub_100726420();
            Class v60 = sub_100725B20().super.isa;
            uint64_t v61 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v62 = swift_allocObject();
            *(void *)(v62 + 16) = v61;
            *(void *)(v62 + 24) = v56;
            *(void *)(v62 + 32) = v58;
            *(unsigned char *)(v62 + 40) = v83;
            uint64_t v63 = v76;
            *(void *)(v62 + 48) = v76;
            *(void *)(v62 + 56) = a3;
            uint64_t v64 = v79;
            *(void *)(v62 + 64) = v78;
            *(void *)(v62 + 72) = v64;
            aBlock[4] = sub_1004CB5F8;
            aBlock[5] = (id)v62;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = (id)1107296256;
            void aBlock[2] = sub_1004B0490;
            aBlock[3] = &unk_10098E810;
            unint64_t v65 = _Block_copy(aBlock);
            id v66 = v63;
            id v67 = a3;
            swift_release();
            [a1 sendSenderKeyMessageToDestinations:v26 fromURI:v67 guid:v59 messageData:v60 completionBlock:v65];
            sub_10044CE88(v32, v33);
            _Block_release(v65);

            goto LABEL_24;
          }
LABEL_21:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v26 = sub_100725EB0();
          os_log_type_t v69 = sub_1007266C0();
          if (os_log_type_enabled(v26, v69))
          {
            Swift::String v70 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)Swift::String v70 = 0;
            _os_log_impl((void *)&_mh_execute_header, v26, v69, "No destinations to send to - aborting", v70, 2u);
            swift_slowDealloc();
          }
          sub_10044CE88(v32, v33);
          goto LABEL_24;
        }
LABEL_20:
        if (v53[2]) {
          goto LABEL_14;
        }
        goto LABEL_21;
      }
    }
    else
    {
      uint64_t v36 = *(void *)(((unint64_t)aBlock[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v36) {
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v53 = &_swiftEmptySetSingleton;
    if (((unint64_t)&_swiftEmptySetSingleton & 0xC000000000000001) != 0) {
      goto LABEL_13;
    }
    goto LABEL_20;
  }
  id v23 = a2;
  id v24 = a3;
  id v25 = v23;
  id v84 = v24;
  uint64_t v26 = sub_100725EB0();
  os_log_type_t v27 = sub_1007266C0();
  if (os_log_type_enabled(v26, v27))
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v29 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 138412546;
    aBlock[0] = v25;
    id v30 = v25;
    sub_100726830();
    *uint64_t v29 = v25;

    *(_WORD *)(v28 + 12) = 2112;
    aBlock[0] = v84;
    id v31 = v84;
    sub_100726830();
    v29[1] = v84;

    _os_log_impl((void *)&_mh_execute_header, v26, v27, "Failed to serialize message to send to URI: %@ fromURI: %@", (uint8_t *)v28, 0x16u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_24:

    return;
  }

  id v68 = v84;
}

void sub_1004AF698(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6, void *a7, void *a8, uint64_t a9, uint64_t a10)
{
  LODWORD(v124) = a6;
  uint64_t v16 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v125 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16 - 8, v17);
  int64_t v20 = &v113[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = __chkstk_darwin(v18, v21);
  id v24 = &v113[-v23];
  __chkstk_darwin(v22, v25);
  os_log_type_t v27 = &v113[-v26];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v29 = (void *)Strong;
    unint64_t v123 = (uint64_t *)a4;
    uint64_t v126 = a10;
    uint64_t v127 = a9;
    if ((a1 & 1) != 0 && !a2)
    {
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      id v30 = a7;
      id v31 = a8;
      swift_bridgeObjectRetain_n();
      uint64_t v32 = v30;
      id v33 = v31;
      unint64_t v34 = sub_100725EB0();
      int v35 = sub_1007266E0();
      BOOL v36 = os_log_type_enabled(v34, (os_log_type_t)v35);
      os_log_type_t v121 = v32;
      uint64_t v122 = v29;
      unint64_t v119 = a5;
      id v120 = v33;
      if (v36)
      {
        int v114 = v35;
        uint64_t v37 = swift_slowAlloc();
        Swift::String v117 = (void *)swift_slowAlloc();
        uint64_t v115 = swift_slowAlloc();
        uint64_t v129 = v115;
        *(_DWORD *)uint64_t v37 = 136316674;
        swift_bridgeObjectRetain();
        uint64_t v128 = sub_10043E578((uint64_t)v123, a5, &v129);
        sub_100726830();
        swift_bridgeObjectRelease_n();
        uint64_t v118 = v37;
        *(_WORD *)(v37 + 12) = 2080;
        os_log_t v116 = v34;
        if ((_BYTE)v124)
        {
          if (v124 == 1) {
            uint64_t v38 = 0x657571655279656BLL;
          }
          else {
            uint64_t v38 = 0xD000000000000012;
          }
          if (v124 == 1) {
            unint64_t v39 = 0xEA00000000007473;
          }
          else {
            unint64_t v39 = 0x80000001008C3240;
          }
        }
        else
        {
          uint64_t v38 = 0x727473694479656BLL;
          unint64_t v39 = 0xEF6E6F6974756269;
        }
        id v65 = v120;
        uint64_t v64 = v121;
        id v66 = (_WORD *)v118;
        uint64_t v128 = sub_10043E578(v38, v39, &v129);
        sub_100726830();
        swift_bridgeObjectRelease();
        v66[11] = 2112;
        uint64_t v128 = (uint64_t)v64;
        id v67 = v64;
        sub_100726830();
        id v68 = v117;
        *Swift::String v117 = v64;

        v66[16] = 2112;
        uint64_t v128 = (uint64_t)v65;
        id v69 = v65;
        sub_100726830();
        v68[1] = v65;

        v66[21] = 2048;
        uint64_t v70 = v127;
        uint64_t v71 = *(void *)(v127 + 16);
        swift_bridgeObjectRelease();
        uint64_t v128 = v71;
        unsigned int v124 = &v129;
        sub_100726830();
        swift_bridgeObjectRelease();
        v66[26] = 2080;
        if (v71)
        {
          uint64_t v72 = v70 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
          uint64_t v73 = *(void *)(v125 + 72);
          swift_bridgeObjectRetain();
          uint64_t v74 = _swiftEmptyArrayStorage;
          do
          {
            sub_1004CBF18(v72, (uint64_t)v27, type metadata accessor for SenderKeyInfo);
            uint64_t v75 = sub_100725B30(0);
            uint64_t v77 = v76;
            sub_1004CBE50((uint64_t)v27, type metadata accessor for SenderKeyInfo);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v74 = sub_1004BEBB8(0, v74[2] + 1, 1, v74);
            }
            unint64_t v79 = v74[2];
            unint64_t v78 = v74[3];
            if (v79 >= v78 >> 1) {
              uint64_t v74 = sub_1004BEBB8((void *)(v78 > 1), v79 + 1, 1, v74);
            }
            v74[2] = v79 + 1;
            unint64_t v80 = &v74[2 * v79];
            v80[4] = v75;
            v80[5] = v77;
            v72 += v73;
            --v71;
          }
          while (v71);
          uint64_t v81 = v127;
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v81 = v70;
        }
        uint64_t v82 = v118;
        uint64_t v83 = sub_100726580();
        unint64_t v85 = v84;
        swift_bridgeObjectRelease();
        uint64_t v128 = sub_10043E578(v83, v85, &v129);
        sub_100726830();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v82 + 62) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v86 = sub_100726580();
        unint64_t v88 = v87;
        swift_bridgeObjectRelease();
        uint64_t v128 = sub_10043E578(v86, v88, &v129);
        sub_100726830();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        os_log_t v89 = v116;
        _os_log_impl((void *)&_mh_execute_header, v116, (os_log_type_t)v114, "Successfully sent sender key message with GUID: %s of type %s to URI: %@ fromURI: %@ key count: %ld keyIDs: %s requestedKeyIDs: %s", (uint8_t *)v82, 0x48u);
        sub_100431F80(&qword_100A44F10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v52 = v81;
        uint64_t v51 = (uint64_t)v123;
        uint64_t v53 = *(void *)(v81 + 16);
        if (!v53) {
          goto LABEL_43;
        }
      }
      else
      {
        swift_bridgeObjectRelease_n();

        swift_bridgeObjectRelease_n();
        uint64_t v50 = v127;
        swift_bridgeObjectRelease_n();
        uint64_t v51 = (uint64_t)v123;
        uint64_t v52 = v50;
        uint64_t v53 = *(void *)(v50 + 16);
        if (!v53)
        {
LABEL_43:
          uint64_t v56 = _swiftEmptyArrayStorage;
LABEL_44:
          uint64_t v90 = v122;
          (*(void (**)(void *, id, NSObject *, uint64_t, unint64_t))((swift_isaMask & *v122) + 0x200))(v56, v120, v121, v51, v119);
          swift_bridgeObjectRelease();

          return;
        }
      }
      uint64_t v54 = v52 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
      uint64_t v55 = *(void *)(v125 + 72);
      swift_bridgeObjectRetain();
      uint64_t v56 = _swiftEmptyArrayStorage;
      do
      {
        sub_1004CBF18(v54, (uint64_t)v24, type metadata accessor for SenderKeyInfo);
        uint64_t v57 = *((void *)v24 + 2);
        unint64_t v58 = *((void *)v24 + 3);
        sub_100441FD4(v57, v58);
        sub_1004CBE50((uint64_t)v24, type metadata accessor for SenderKeyInfo);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v56 = sub_1004BE840(0, v56[2] + 1, 1, v56);
        }
        unint64_t v60 = v56[2];
        unint64_t v59 = v56[3];
        if (v60 >= v59 >> 1) {
          uint64_t v56 = sub_1004BE840((void *)(v59 > 1), v60 + 1, 1, v56);
        }
        v56[2] = v60 + 1;
        uint64_t v61 = &v56[2 * v60];
        v61[4] = v57;
        v61[5] = v58;
        v54 += v55;
        --v53;
      }
      while (v53);
      swift_bridgeObjectRelease();
      goto LABEL_44;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v40 = a7;
    id v41 = a8;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v120 = v40;
    id v42 = v41;
    swift_bridgeObjectRetain();
    swift_errorRetain();
    id v43 = sub_100725EB0();
    int v44 = sub_1007266C0();
    os_log_type_t v121 = v43;
    if (os_log_type_enabled(v43, (os_log_type_t)v44))
    {
      unint64_t v45 = a5;
      uint64_t v122 = v29;
      uint64_t v46 = swift_slowAlloc();
      unint64_t v47 = (uint64_t *)swift_slowAlloc();
      uint64_t v118 = swift_slowAlloc();
      uint64_t v129 = v118;
      *(_DWORD *)uint64_t v46 = 138413826;
      LODWORD(v117) = v44;
      if (a2)
      {
        swift_errorRetain();
        uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v128 = v48;
        sub_100726830();
      }
      else
      {
        uint64_t v128 = 0;
        sub_100726830();
        uint64_t v48 = 0;
      }
      *unint64_t v47 = v48;
      swift_errorRelease();
      swift_errorRelease();
      *(_WORD *)(v46 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v128 = sub_10043E578((uint64_t)v123, v45, &v129);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v46 + 22) = 2080;
      if ((_BYTE)v124)
      {
        if (v124 == 1) {
          uint64_t v62 = 0x657571655279656BLL;
        }
        else {
          uint64_t v62 = 0xD000000000000012;
        }
        if (v124 == 1) {
          unint64_t v63 = 0xEA00000000007473;
        }
        else {
          unint64_t v63 = 0x80000001008C3240;
        }
      }
      else
      {
        uint64_t v62 = 0x727473694479656BLL;
        unint64_t v63 = 0xEF6E6F6974756269;
      }
      uint64_t v91 = v42;
      id v92 = v120;
      uint64_t v128 = sub_10043E578(v62, v63, &v129);
      sub_100726830();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 32) = 2112;
      uint64_t v128 = (uint64_t)v92;
      id v93 = v92;
      sub_100726830();
      v47[1] = (uint64_t)v92;

      *(_WORD *)(v46 + 42) = 2112;
      uint64_t v128 = (uint64_t)v91;
      id v94 = v91;
      unint64_t v123 = &v129;
      sub_100726830();
      unsigned int v124 = v47;
      v47[2] = (uint64_t)v91;

      *(_WORD *)(v46 + 52) = 2080;
      uint64_t v95 = *(void *)(v127 + 16);
      if (v95)
      {
        uint64_t v96 = v127 + ((*(unsigned __int8 *)(v125 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80));
        uint64_t v97 = *(void *)(v125 + 72);
        swift_bridgeObjectRetain();
        int64_t v98 = _swiftEmptyArrayStorage;
        do
        {
          sub_1004CBF18(v96, (uint64_t)v20, type metadata accessor for SenderKeyInfo);
          uint64_t v99 = sub_100725B30(0);
          uint64_t v101 = v100;
          sub_1004CBE50((uint64_t)v20, type metadata accessor for SenderKeyInfo);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int64_t v98 = sub_1004BEBB8(0, v98[2] + 1, 1, v98);
          }
          unint64_t v103 = v98[2];
          unint64_t v102 = v98[3];
          if (v103 >= v102 >> 1) {
            int64_t v98 = sub_1004BEBB8((void *)(v102 > 1), v103 + 1, 1, v98);
          }
          v98[2] = v103 + 1;
          int64_t v104 = &v98[2 * v103];
          v104[4] = v99;
          v104[5] = v101;
          v96 += v97;
          --v95;
        }
        while (v95);
        swift_bridgeObjectRelease();
      }
      Class v105 = v122;
      uint64_t v106 = sub_100726580();
      unint64_t v108 = v107;
      swift_bridgeObjectRelease();
      uint64_t v128 = sub_10043E578(v106, v108, &v129);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v46 + 62) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v109 = sub_100726580();
      unint64_t v111 = v110;
      swift_bridgeObjectRelease();
      uint64_t v128 = sub_10043E578(v109, v111, &v129);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      uint64_t v112 = v121;
      _os_log_impl((void *)&_mh_execute_header, v121, (os_log_type_t)v117, "Failed to send sender key message with error: %@ GUID: %s of type %s to URI: %@ fromURI: %@ keyIDs: %s requestedKeyIDs: %s", (uint8_t *)v46, 0x48u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      id v49 = v120;
      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_1004B0490(uint64_t a1, uint64_t a2, void *a3)
{
  unint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void *sub_1004B0508(uint64_t *a1, uint64_t *a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100431F80((uint64_t *)&unk_100A46870);
  __chkstk_darwin(v8 - 8, v9);
  uint64_t v11 = &v99[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v106 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v12 = *(void *)(v106 - 8);
  uint64_t v14 = __chkstk_darwin(v106, v13);
  unint64_t v103 = (uint64_t *)&v99[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __chkstk_darwin(v14, v16);
  unint64_t v102 = &v99[-v18];
  uint64_t v20 = __chkstk_darwin(v17, v19);
  uint64_t v101 = &v99[-v21];
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v25 = &v99[-v24];
  uint64_t v113 = &_swiftEmptySetSingleton;
  uint64_t v26 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & (uint64_t)v3->isa) + 0xA8))(v23);
  os_log_t v109 = (os_log_t)sub_1005585B0(a3);

  v112[0] = (uint64_t)_swiftEmptyArrayStorage;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    id result = (void *)sub_100726BA0();
    uint64_t v27 = (uint64_t)result;
    unint64_t v107 = v11;
    uint64_t v108 = v12;
    if (result) {
      goto LABEL_3;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    id v33 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  uint64_t v27 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id result = (void *)swift_bridgeObjectRetain();
  unint64_t v107 = v11;
  uint64_t v108 = v12;
  if (!v27) {
    goto LABEL_15;
  }
LABEL_3:
  if (v27 < 1)
  {
    __break(1u);
    return result;
  }
  int64_t v104 = a1;
  Class v105 = (uint64_t *)a2;
  for (uint64_t i = 0; i != v27; ++i)
  {
    if ((a3 & 0xC000000000000001) != 0) {
      id v30 = (id)sub_100726A10();
    }
    else {
      id v30 = *(id *)(a3 + 8 * i + 32);
    }
    id v31 = v30;
    id v32 = [v30 pushTokenObject];

    if (v32)
    {
      sub_100726550();
      if (*(void *)((v112[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1007265A0();
      }
      sub_1007265C0();
      sub_100726590();
    }
  }
  swift_bridgeObjectRelease();
  id v33 = (void *)v112[0];
  a1 = v104;
  a2 = v105;
LABEL_16:
  uint64_t v34 = sub_1004B65D8(a1, a2);
  char v36 = v35;
  uint64_t v37 = swift_bridgeObjectRetain();
  sub_1004CBCD8(v37);
  swift_bridgeObjectRelease();
  uint64_t v38 = *(void *)(v34 + 16);
  if (!v38)
  {
    swift_bridgeObjectRelease();
    if (v36)
    {
      swift_bridgeObjectRelease();
      os_log_t v60 = v109;
    }
    else
    {
      char v92 = (*(uint64_t (**)(uint64_t *, uint64_t *, void *))((swift_isaMask & (uint64_t)v4->isa) + 0x250))(a1, (uint64_t *)a2, v33);
      swift_bridgeObjectRelease();
      os_log_t v60 = v109;
      if ((v92 & 1) == 0
        && ((*(uint64_t (**)(uint64_t *, uint64_t *))((swift_isaMask & (uint64_t)v4->isa) + 0x2B8))(a1, (uint64_t *)a2) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        int64_t v98 = sub_1004BEFE8((uint64_t)v113);
        swift_bridgeObjectRelease();
        return v98;
      }
    }
    uint64_t v93 = (uint64_t)v107;
    (*(void (**)(uint64_t *, uint64_t *, unint64_t))((swift_isaMask & (uint64_t)v4->isa) + 0x268))(a1, (uint64_t *)a2, a3);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v108 + 48))(v93, 1, v106) == 1)
    {
      sub_10044C150(v93, (uint64_t *)&unk_100A46870);
    }
    else
    {
      id v94 = v101;
      sub_1004CBEB0(v93, (uint64_t)v101, type metadata accessor for SenderKeyInfo);
      uint64_t v95 = v103;
      sub_1004CBF18((uint64_t)v94, (uint64_t)v103, type metadata accessor for SenderKeyInfo);
      uint64_t v96 = v102;
      sub_1004C0EA4((uint64_t)v102, v95);
      sub_1004CBE50((uint64_t)v96, type metadata accessor for SenderKeyInfo);
      sub_1004CBE50((uint64_t)v94, type metadata accessor for SenderKeyInfo);
    }
    uint64_t v97 = sub_1004B6098((uint64_t)a1, (uint64_t)a2, (uint64_t)v60);
    swift_bridgeObjectRelease();
    sub_1004CBCD8((uint64_t)v97);
    swift_bridgeObjectRelease();
    unint64_t v80 = sub_1004BEFE8((uint64_t)v113);
    goto LABEL_38;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_log_t v109 = v4;
  unint64_t v39 = (char *)v4 + OBJC_IVAR___IDSSenderKeyDistributionManager_logger;
  id v40 = a1;
  id v41 = a2;
  swift_bridgeObjectRetain();
  id v42 = v40;
  id v43 = (uint64_t *)v41;
  int v44 = sub_100725EB0();
  int v45 = sub_1007266E0();
  if (os_log_type_enabled(v44, (os_log_type_t)v45))
  {
    int v100 = v45;
    unint64_t v103 = (uint64_t *)v44;
    uint64_t v106 = (uint64_t)v39;
    uint64_t v46 = (unsigned char *)swift_slowAlloc();
    unint64_t v107 = (void *)swift_slowAlloc();
    uint64_t v101 = (unsigned char *)swift_slowAlloc();
    v112[0] = (uint64_t)v101;
    *(_DWORD *)uint64_t v46 = 138412802;
    uint64_t v110 = (uint64_t)v42;
    int64_t v104 = &v111;
    unint64_t v47 = v43;
    uint64_t v48 = v42;
    sub_100726830();
    Class v105 = v42;
    id v49 = v107;
    void *v107 = v42;

    *((_WORD *)v46 + 6) = 2112;
    uint64_t v110 = (uint64_t)v47;
    uint64_t v50 = v47;
    sub_100726830();
    int64_t v104 = v47;
    v49[1] = v47;

    unint64_t v102 = v46;
    *((_WORD *)v46 + 11) = 2080;
    uint64_t v51 = v34 + ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80));
    uint64_t v52 = *(void *)(v108 + 72);
    swift_bridgeObjectRetain();
    uint64_t v53 = _swiftEmptyArrayStorage;
    do
    {
      sub_1004CBF18(v51, (uint64_t)v25, type metadata accessor for SenderKeyInfo);
      uint64_t v54 = sub_100725B30(0);
      uint64_t v56 = v55;
      sub_1004CBE50((uint64_t)v25, type metadata accessor for SenderKeyInfo);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v53 = sub_1004BEBB8(0, v53[2] + 1, 1, v53);
      }
      unint64_t v58 = v53[2];
      unint64_t v57 = v53[3];
      if (v58 >= v57 >> 1) {
        uint64_t v53 = sub_1004BEBB8((void *)(v57 > 1), v58 + 1, 1, v53);
      }
      v53[2] = v58 + 1;
      unint64_t v59 = &v53[2 * v58];
      v59[4] = v54;
      v59[5] = v56;
      v51 += v52;
      --v38;
    }
    while (v38);
    swift_bridgeObjectRelease();
    uint64_t v61 = v102;
    uint64_t v62 = sub_100726580();
    unint64_t v64 = v63;
    swift_bridgeObjectRelease();
    uint64_t v110 = sub_10043E578(v62, v64, v112);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    os_log_t v65 = (os_log_t)v103;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v103, (os_log_type_t)v100, "Not regenerating for senderURI: %@ receiverURI: %@ - we have unsent keys to send: %s", v61, 0x20u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v42 = v105;
    id v43 = v104;
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  id v66 = [v42 prefixedURI];
  uint64_t v67 = sub_100726430();
  uint64_t v69 = v68;

  id v70 = [v43 prefixedURI];
  uint64_t v71 = sub_100726430();
  uint64_t v73 = v72;

  v112[0] = v71;
  v112[1] = v73;
  uint64_t v110 = v67;
  uint64_t v111 = v69;
  swift_bridgeObjectRetain();
  uint64_t v110 = sub_100726520();
  uint64_t v111 = v74;
  sub_1007264B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v75 = sub_100726420();
  uint64_t v76 = swift_bridgeObjectRelease();
  uint64_t v77 = *(uint64_t (**)(void))((swift_isaMask & (uint64_t)v109->isa) + 0x100);
  unint64_t v78 = (void *)((uint64_t (*)(uint64_t))v77)(v76);
  [v78 noteItem:v75];

  unint64_t v79 = (void *)v77();
  LODWORD(v77) = [v79 underLimitForItem:v75];

  if (v77)
  {
    unint64_t v80 = sub_1004BEFE8((uint64_t)v113);

LABEL_38:
    swift_bridgeObjectRelease();
    return v80;
  }
  swift_bridgeObjectRelease();
  uint64_t v81 = v42;
  uint64_t v82 = v43;
  uint64_t v83 = v81;
  unint64_t v84 = v82;
  unint64_t v85 = sub_100725EB0();
  os_log_type_t v86 = sub_1007266E0();
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v87 = swift_slowAlloc();
    unint64_t v88 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v87 = 138412546;
    v112[0] = (uint64_t)v83;
    os_log_t v89 = v83;
    os_log_t v109 = v85;
    id v90 = v89;
    sub_100726830();
    *unint64_t v88 = v83;

    *(_WORD *)(v87 + 12) = 2112;
    v112[0] = (uint64_t)v84;
    uint64_t v91 = v84;
    sub_100726830();
    v88[1] = v84;

    unint64_t v85 = v109;
    _os_log_impl((void *)&_mh_execute_header, v109, v86, "Too many attempts to send unsent keys for senderURI: %@ receiverURI: %@ - aborting send", (uint8_t *)v87, 0x16u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  return _swiftEmptyArrayStorage;
}

void *sub_1004B10F4(uint64_t a1)
{
  if (*(void *)(a1 + 16)) {
    return (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x348))();
  }
  else {
    return &_swiftEmptyArrayStorage;
  }
}

void sub_1004B1144(uint64_t a1, void *a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (*(void *)(a1 + 16))
  {
    id v11 = (id)(*(uint64_t (**)(void))((swift_isaMask & *v5) + 0xA8))();
    sub_10055B8B4(a2, a3, a1, a4, a5, 0, 0);
  }
}

void sub_1004B1220(void *a1, void *a2, id a3)
{
  uint64_t v4 = v3;
  id v8 = [a3 prefixedURI];
  sub_100726430();

  id v9 = [a2 prefixedURI];
  sub_100726430();

  swift_bridgeObjectRetain();
  sub_100726520();
  sub_1007264B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v10 = sub_100726420();
  uint64_t v11 = swift_bridgeObjectRelease();
  uint64_t v12 = *(uint64_t (**)(void))((swift_isaMask & *v4) + 0x130);
  uint64_t v13 = (void *)((uint64_t (*)(uint64_t))v12)(v11);
  unsigned int v14 = [v13 underLimitForItem:v10];

  if (v14)
  {
    id v15 = a1;
    uint64_t v16 = sub_100725EB0();
    os_log_type_t v17 = sub_1007266E0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138412290;
      id v19 = v15;
      sub_100726830();
      *uint64_t v22 = v15;

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Noting last active peer token: %@", v18, 0xCu);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v20 = (void *)v12();
    [v20 noteItem:v10];

    uint64_t v21 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v4) + 0xA8))();
    sub_10055BFB4(v15, a2, a3);
  }
}

void sub_1004B15EC(void *a1, void *a2, id a3)
{
  uint64_t v4 = v3;
  id v8 = [a3 prefixedURI];
  sub_100726430();

  id v9 = [a2 prefixedURI];
  sub_100726430();

  swift_bridgeObjectRetain();
  sub_100726520();
  sub_1007264B0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v10 = sub_100726420();
  uint64_t v11 = swift_bridgeObjectRelease();
  uint64_t v12 = *(uint64_t (**)(void))((swift_isaMask & *v4) + 0x148);
  uint64_t v13 = (void *)((uint64_t (*)(uint64_t))v12)(v11);
  unsigned int v14 = [v13 underLimitForItem:v10];

  if (v14)
  {
    id v15 = a1;
    uint64_t v16 = sub_100725EB0();
    os_log_type_t v17 = sub_1007266E0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 138412290;
      id v19 = v15;
      sub_100726830();
      *uint64_t v22 = v15;

      _os_log_impl((void *)&_mh_execute_header, v16, v17, "Noting last iMessaged peer token: %@", v18, 0xCu);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v20 = (void *)v12();
    [v20 noteItem:v10];

    uint64_t v21 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v4) + 0xA8))();
    sub_10055BFF4(v15, a2, a3);
  }
}

NSObject *sub_1004B19B8(void *a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v48)(long long *__return_ptr, uint64_t, unint64_t);
  int v49;
  id v50;
  uint64_t v51;
  void *v52;
  id v53;
  id v54;
  id v55;
  id v56;
  NSObject *v57;
  int v58;
  BOOL v59;
  uint64_t v60;
  void *v61;
  unint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unint64_t v65;
  void *v66;
  uint64_t v67;
  id v68;
  id v69;
  id v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  NSObject *v74;
  id v75;
  id v76;
  id v77;
  id v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  void *v82;
  id v83;
  id v84;
  void *v85;
  id v86;
  id v87;
  id v88;
  id v89;
  NSObject *v90;
  os_log_type_t v91;
  BOOL v92;
  uint64_t v93;
  uint64_t v94;
  void *v95;
  id v96;
  id v97;
  uint64_t v98;
  void *v99;
  NSObject *result;
  NSObject *v101;
  void *v102;
  id v103;
  void *v104;
  void *v105;
  id v106;
  id v107;
  void *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  NSObject *v112;
  os_log_type_t v113;
  uint8_t *v114;
  uint64_t v115;
  void *v116;
  uint64_t v117;
  uint64_t v118;
  long long v119;
  uint64_t v120;
  uint64_t *v121;
  unint64_t v122;
  uint64_t v123;
  id v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v129;
  id v130;
  NSObject *v131;
  os_log_type_t v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  unint64_t v136;
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t v149;
  objc_class *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  NSObject *v154;
  NSObject *v155;
  NSObject *v156;
  NSObject *v157;
  os_log_type_t v158;
  uint8_t *v159;
  uint64_t v160;
  unint64_t v161;
  void *v162;
  char v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  objc_class *v167;
  objc_class *v168;
  id v169;
  NSObject *v170;
  unint64_t v171;
  unint64_t isa;
  NSObject *v173;
  uint64_t v174;
  uint64_t v175;
  id v176;
  NSObject *v177;
  os_log_type_t v178;
  uint64_t v179;
  uint64_t v180;
  void *v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t v185;
  int v186;
  uint64_t v187;
  uint64_t v188;
  long long v189;
  void *v190;
  unint64_t v191;
  id v192;
  long long v193;
  NSObject *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  void *v200;
  uint64_t v201;
  NSObject *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  id v207;
  void *v208;
  uint64_t v209;
  uint64_t *v210;
  uint64_t v211;
  long long aBlock;
  uint64_t (*v213)();
  void *v214;
  uint64_t (*v215)();
  void *v216;
  uint64_t v217[2];
  objc_super v218;
  void *v219;
  unsigned __int8 v220;
  void *v221;
  uint64_t v222;
  void *v223;
  long long v224;

  uint64_t v7 = v6;
  unint64_t v204 = a6;
  uint64_t v203 = a5;
  uint64_t v12 = sub_100726030();
  __chkstk_darwin(v12 - 8, v13);
  os_log_type_t v206 = (char *)&v185 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100725E30();
  __chkstk_darwin(v15 - 8, v16);
  uint64_t v18 = (char *)&v185 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = type metadata accessor for SenderKeyAndState(0);
  uint64_t v20 = __chkstk_darwin(v199, v19);
  uint64_t v196 = (uint64_t)&v185 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v198 = (uint64_t)&v185 - v24;
  __chkstk_darwin(v23, v25);
  uint64_t v201 = (uint64_t)&v185 - v26;
  uint64_t v209 = type metadata accessor for SenderKeyInfo(0);
  char v211 = *(void *)(v209 - 8);
  __chkstk_darwin(v209, v27);
  uint64_t v210 = (uint64_t *)((char *)&v185 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v29 = sub_100725EF0();
  unint64_t v208 = *(void **)(v29 - 8);
  __chkstk_darwin(v29, v30);
  id v32 = (char *)&v185 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100725F20();
  __chkstk_darwin(v33, v34);
  uint64_t v37 = (char *)&v185 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4 >> 60 == 15)
  {
    id v38 = a1;
    id v39 = a2;
    id v40 = v38;
    id v41 = v39;
    id v42 = sub_100725EB0();
    os_log_type_t v43 = sub_1007266C0();
    if (os_log_type_enabled(v42, v43))
    {
      uint64_t v44 = swift_slowAlloc();
      int v45 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v44 = 138412546;
      *(void *)&unint64_t aBlock = v40;
      id v46 = v40;
      sub_100726830();
      *int v45 = v40;

      *(_WORD *)(v44 + 12) = 2112;
      *(void *)&unint64_t aBlock = v41;
      id v47 = v41;
      sub_100726830();
      v45[1] = v41;

      _os_log_impl((void *)&_mh_execute_header, v42, v43, "Received nil messageData remoteURI: %@ localURI: %@", (uint8_t *)v44, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return _swiftEmptyArrayStorage;
  }
  os_log_type_t v202 = v35;
  long long v205 = v18;
  uint64_t v207 = a1;
  uint64_t v48 = *(void (**)(long long *__return_ptr, uint64_t, unint64_t))((swift_isaMask & *v7) + 0x298);
  sub_100441FD4(a3, a4);
  uint64_t v195 = a3;
  v48(&aBlock, a3, a4);
  if (!v214)
  {
    sub_10044C150((uint64_t)&aBlock, &qword_100A44F00);
    NSString v75 = v207;
    uint64_t v76 = a2;
    uint64_t v77 = v75;
    unint64_t v78 = v76;
    unint64_t v79 = sub_100725EB0();
    unint64_t v80 = sub_1007266C0();
    if (os_log_type_enabled(v79, v80))
    {
      uint64_t v81 = swift_slowAlloc();
      uint64_t v82 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v81 = 138412546;
      unint64_t v191 = a4;
      *(void *)&unint64_t aBlock = v77;
      uint64_t v83 = v77;
      sub_100726830();
      *uint64_t v82 = v77;

      *(_WORD *)(v81 + 12) = 2112;
      *(void *)&unint64_t aBlock = v78;
      unint64_t v84 = v78;
      a4 = v191;
      sub_100726830();
      v82[1] = v78;

      _os_log_impl((void *)&_mh_execute_header, v79, v80, "Failed to de-serialize message remoteURI: %@ localURI: %@", (uint8_t *)v81, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    int64_t v98 = v195;

    sub_10044CE88(v98, a4);
    return _swiftEmptyArrayStorage;
  }
  sub_100450794(&aBlock, &v224);
  uint64_t v223 = _swiftEmptyArrayStorage;
  sub_10044C6FC((uint64_t)&v224, (uint64_t)&aBlock);
  id v49 = swift_dynamicCast();
  unint64_t v200 = v7;
  uint64_t v50 = v207;
  if (!v49)
  {
    sub_10044C6FC((uint64_t)&v224, (uint64_t)&aBlock);
    sub_100431F80(&qword_100A46880);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v112 = sub_100725EB0();
      uint64_t v113 = sub_1007266C0();
      if (os_log_type_enabled(v112, v113))
      {
        int v114 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v114 = 0;
        _os_log_impl((void *)&_mh_execute_header, v112, v113, "Invalid serialization received - aborting", v114, 2u);
        swift_slowDealloc();
      }

      sub_10044CE88(v195, a4);
      sub_10044C6AC((uint64_t)&v224);
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    unint64_t v85 = v219;
    os_log_type_t v86 = v50;
    uint64_t v87 = a2;
    unint64_t v88 = v86;
    os_log_t v89 = v87;
    id v90 = sub_100725EB0();
    uint64_t v91 = sub_1007266E0();
    char v92 = os_log_type_enabled(v90, v91);
    unint64_t v191 = a4;
    if (v92)
    {
      uint64_t v93 = swift_slowAlloc();
      unint64_t v208 = v85;
      id v94 = v93;
      uint64_t v95 = (void *)swift_slowAlloc();
      *(_DWORD *)id v94 = 134218498;
      os_log_type_t v202 = v90;
      swift_beginAccess();
      *(void *)&unint64_t aBlock = v223[2];
      sub_100726830();
      *(_WORD *)(v94 + 12) = 2112;
      *(void *)&unint64_t aBlock = v88;
      uint64_t v96 = v88;
      sub_100726830();
      *uint64_t v95 = v88;

      *(_WORD *)(v94 + 22) = 2112;
      *(void *)&unint64_t aBlock = v89;
      uint64_t v97 = v89;
      uint64_t v50 = v207;
      id v90 = v202;
      sub_100726830();
      v95[1] = v89;

      _os_log_impl((void *)&_mh_execute_header, v90, v91, "Processing keyInfos with key count: %ld remoteURI: %@ localURI: %@", (uint8_t *)v94, 0x20u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v85 = v208;
      swift_slowDealloc();
    }
    else
    {
    }
    swift_beginAccess();
    uint64_t v223 = v85;
    swift_bridgeObjectRelease();
    uint64_t v110 = v195;
LABEL_36:
    uint64_t v111 = (uint64_t)v210;
    uint64_t v99 = &unk_100A53000;
    goto LABEL_37;
  }
  uint64_t v188 = v29;
  *(void *)&os_log_type_t v189 = v33;
  LODWORD(v197) = v220;
  uint64_t v52 = v221;
  uint64_t v51 = v222;
  uint64_t v223 = v221;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v53 = v50;
  uint64_t v54 = a2;
  uint64_t v55 = v53;
  uint64_t v56 = v54;
  unint64_t v57 = sub_100725EB0();
  unint64_t v58 = sub_1007266E0();
  uint64_t v194 = v57;
  unint64_t v59 = os_log_type_enabled(v57, (os_log_type_t)v58);
  *(void *)&uint64_t v193 = v55;
  uint64_t v192 = v56;
  unint64_t v191 = a4;
  if (v59)
  {
    uint64_t v186 = v58;
    uint64_t v185 = v51;
    os_log_t v60 = swift_slowAlloc();
    uint64_t v61 = (void *)swift_slowAlloc();
    unint64_t v187 = swift_slowAlloc();
    *(void *)&unint64_t aBlock = v187;
    *(_DWORD *)os_log_t v60 = 136316162;
    uint64_t v62 = 0x80000001008C3240;
    unint64_t v63 = 0xD000000000000012;
    if (v197 == 1)
    {
      unint64_t v63 = 0x657571655279656BLL;
      uint64_t v62 = 0xEA00000000007473;
    }
    if (v197) {
      unint64_t v64 = v63;
    }
    else {
      unint64_t v64 = 0x727473694479656BLL;
    }
    if (v197) {
      os_log_t v65 = v62;
    }
    else {
      os_log_t v65 = 0xEF6E6F6974756269;
    }
    uint64_t v219 = (void *)sub_10043E578(v64, v65, (uint64_t *)&aBlock);
    sub_100726830();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 12) = 2048;
    id v66 = (void *)v52[2];
    uint64_t v190 = v52;
    swift_bridgeObjectRelease();
    uint64_t v219 = v66;
    sub_100726830();
    swift_bridgeObjectRelease();
    *(_WORD *)(v60 + 22) = 2112;
    uint64_t v67 = v193;
    uint64_t v219 = (void *)v193;
    uint64_t v68 = (id)v193;
    sub_100726830();
    uint8_t *v61 = v67;

    *(_WORD *)(v60 + 32) = 2112;
    uint64_t v69 = v192;
    uint64_t v219 = v192;
    id v70 = v192;
    sub_100726830();
    v61[1] = v69;

    *(_WORD *)(v60 + 42) = 2080;
    uint64_t v51 = v185;
    swift_bridgeObjectRetain();
    uint64_t v71 = sub_100726580();
    uint64_t v73 = v72;
    swift_bridgeObjectRelease();
    uint64_t v219 = (void *)sub_10043E578(v71, v73, (uint64_t *)&aBlock);
    sub_100726830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    uint64_t v74 = v194;
    _os_log_impl((void *)&_mh_execute_header, v194, (os_log_type_t)v186, "Processing key message of type: %s key count: %ld remoteURI: %@ localURI: %@ requestedKeyIDs: %s", (uint8_t *)v60, 0x34u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v52 = v190;
    uint64_t v7 = v200;
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
  }
  uint64_t v50 = v207;
  uint64_t v99 = (void *)&unk_100A53000;
  if (v197 == 1 && *(void *)(v51 + 16))
  {
    uint64_t v190 = v52;
    id result = (id)im_primary_queue();
    if (!result)
    {
      __break(1u);
      return result;
    }
    uint64_t v101 = result;
    unint64_t v102 = (void *)swift_allocObject();
    v102[2] = v7;
    v102[3] = v51;
    unint64_t v103 = v192;
    int64_t v104 = (void *)v193;
    v102[4] = v192;
    v102[5] = v104;
    unint64_t v215 = sub_1004CBFD0;
    uint64_t v216 = v102;
    *(void *)&unint64_t aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    os_log_type_t v213 = sub_100435714;
    uint64_t v214 = &unk_10098E860;
    Class v105 = _Block_copy(&aBlock);
    uint64_t v106 = v104;
    unint64_t v107 = v103;
    uint64_t v108 = v7;
    sub_100725F00();
    uint64_t v219 = _swiftEmptyArrayStorage;
    sub_1004CC294((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    os_log_t v109 = v188;
    sub_100726890();
    sub_100726750();
    _Block_release(v105);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v208[1])(v32, v109);
    ((void (*)(char *, void))v202[1].isa)(v37, v189);
    swift_release();
    uint64_t v110 = v195;
    uint64_t v50 = v207;
    goto LABEL_36;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v110 = v195;
  uint64_t v111 = (uint64_t)v210;
LABEL_37:
  swift_beginAccess();
  uint64_t v115 = v223[2];
  if (v115)
  {
    os_log_t v116 = v200;
    os_log_type_t v202 = ((char *)v200 + v99[120]);
    Swift::String v117 = (uint64_t)v223
         + ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80));
    unint64_t v208 = *(void **)(v211 + 72);
    uint64_t v190 = v223;
    swift_bridgeObjectRetain();
    uint64_t v118 = 0;
    uint64_t v194 = _swiftEmptyArrayStorage;
    *(void *)&unint64_t v119 = 136315394;
    uint64_t v193 = v119;
    uint64_t v192 = (char *)&type metadata for Any + 8;
    *(void *)&unint64_t v119 = 138412546;
    os_log_type_t v189 = v119;
    while (1)
    {
      char v211 = v115;
      sub_1004CBF18(v117, v111, type metadata accessor for SenderKeyInfo);
      os_log_type_t v121 = (uint64_t *)(v111 + *(int *)(v209 + 28));
      unint64_t v123 = *v121;
      uint64_t v122 = v121[1];
      swift_bridgeObjectRetain();
      unsigned int v124 = [v50 prefixedURI];
      uint64_t v125 = sub_100726430();
      uint64_t v127 = v126;

      if (v123 == v125 && v122 == v127)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v129 = sub_100726D20();
        swift_bridgeObjectRelease();
        if ((v129 & 1) == 0)
        {
          uint64_t v130 = v50;
          swift_bridgeObjectRetain();
          uint64_t v131 = sub_100725EB0();
          uint64_t v132 = sub_1007266C0();
          if (os_log_type_enabled(v131, v132))
          {
            unint64_t v133 = swift_slowAlloc();
            uint64_t v134 = (void *)swift_slowAlloc();
            v217[0] = swift_slowAlloc();
            *(_DWORD *)unint64_t v133 = v193;
            swift_bridgeObjectRetain();
            *(void *)(v133 + 4) = sub_10043E578(v123, v122, v217);
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v133 + 12) = 2112;
            *(void *)(v133 + 14) = v130;
            *uint64_t v134 = v207;

            _os_log_impl((void *)&_mh_execute_header, v131, v132, "Received a key but senderURI: %s and remoteURI: %@ don't match - dropping! This should never happen.", (uint8_t *)v133, 0x16u);
            sub_100431F80(&qword_100A44F10);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v50 = v207;
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          uint64_t v111 = (uint64_t)v210;
          id v120 = v211;
          id v150 = (objc_class *)type metadata accessor for SenderKeyDistributionManager.SenderKeyURIMismatchMetric();
          unsigned int v151 = (char *)objc_allocWithZone(v150);
          os_log_type_t v152 = &v151[OBJC_IVAR____TtCC17identityservicesd28SenderKeyDistributionManagerP33_E220278C37BF7A52CA212AA0DEF6BDED26SenderKeyURIMismatchMetric_messageGUID];
          uint64_t v153 = v204;
          *(void *)os_log_type_t v152 = v203;
          *((void *)v152 + 1) = v153;
          v218.receiver = v151;
          v218.super_class = v150;
          swift_bridgeObjectRetain();
          unint64_t v154 = objc_msgSendSuper2(&v218, "init");
          int v155 = [self defaultLogger];
          os_log_t v116 = v200;
          if (v155)
          {
            os_log_type_t v156 = v155;
            [v155 logMetric:v154];
          }
          else
          {
            uint64_t v157 = sub_100725EB0();
            unint64_t v158 = sub_1007266C0();
            if (os_log_type_enabled(v157, v158))
            {
              uint64_t v159 = (uint8_t *)swift_slowAlloc();
              *(_WORD *)uint64_t v159 = 0;
              _os_log_impl((void *)&_mh_execute_header, v157, v158, "Failed to initialize CoreAnalyticsLogger.", v159, 2u);
              uint64_t v50 = v207;
              swift_slowDealloc();
              os_log_type_t v156 = v157;
            }
            else
            {
              os_log_type_t v156 = v154;
              unint64_t v154 = v157;
            }
          }

          sub_1004CBE50(v111, type metadata accessor for SenderKeyInfo);
          goto LABEL_42;
        }
      }
      swift_bridgeObjectRelease();
      type metadata accessor for SenderKeyUtils();
      long long v135 = sub_1005299CC(v123, v122, v121[2], v121[3]);
      if (v136 >> 60 == 15)
      {
        uint64_t v111 = (uint64_t)v210;
      }
      else
      {
        int64_t v137 = v135;
        unint64_t v138 = v136;
        uint64_t v111 = (uint64_t)v210;
        uint64_t v139 = v210[1];
        v217[0] = *v210;
        v217[1] = v139;
        sub_100441FD4(v217[0], v139);
        sub_100726020();
        sub_100441FD4(v137, v138);
        uint64_t v140 = (uint64_t)v205;
        sub_100725E20();
        if (!v118)
        {
          uint64_t v197 = 0;
          uint64_t v141 = sub_100725DF0();
          os_log_type_t v143 = v142;
          sub_10044CE88(v137, v138);
          sub_1004CBE50(v140, (uint64_t (*)(void))&type metadata accessor for PaddyIncomingSymmetricRatchet);
          uint64_t v144 = v198;
          sub_1004CBF18(v111, v198, type metadata accessor for SenderKeyInfo);
          uint64_t v145 = (uint64_t *)(v144 + *(int *)(v199 + 20));
          *uint64_t v145 = v141;
          v145[1] = v143;
          unint64_t v146 = v201;
          uint64_t v147 = sub_1004CBEB0(v144, v201, type metadata accessor for SenderKeyAndState);
          id v148 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v116) + 0xD8))(v147);
          if (v149 >> 60 == 15)
          {
            sub_1004CBE50(v146, type metadata accessor for SenderKeyAndState);
          }
          else
          {
            uint64_t v160 = v148;
            char v161 = v149;
            os_log_type_t v162 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v116) + 0xA8))();
            os_log_type_t v163 = sub_10055D994(v146, v160, v161);

            if (v163)
            {
              uint64_t v164 = *(void *)(v146 + 16);
              unint64_t v165 = *(void *)(v146 + 24);
              sub_100441FD4(v164, v165);
              uint64_t v166 = sub_100725B30(0);
              uint64_t v168 = v167;
              sub_100442248(v164, v165);
              if (swift_isUniquelyReferenced_nonNull_native())
              {
                uint64_t v169 = v207;
                uint64_t v170 = v194;
              }
              else
              {
                uint64_t v170 = sub_1004BEBB8(0, (int64_t)v194[2].isa + 1, 1, v194);
                uint64_t v169 = v207;
              }
              Class isa = (unint64_t)v170[2].isa;
              uint64_t v171 = (unint64_t)v170[3].isa;
              if (isa >= v171 >> 1) {
                uint64_t v170 = sub_1004BEBB8((void *)(v171 > 1), isa + 1, 1, v170);
              }
              v170[2].Class isa = (Class)(isa + 1);
              uint64_t v194 = v170;
              uint64_t v173 = &v170[2 * isa];
              v173[4].Class isa = (Class)v166;
              v173[5].Class isa = v168;
              unint64_t v174 = v201;
              uint64_t v175 = v196;
              sub_1004CBF18(v201, v196, type metadata accessor for SenderKeyAndState);
              os_log_type_t v176 = v169;
              uint64_t v177 = sub_100725EB0();
              unint64_t v178 = sub_1007266E0();
              if (os_log_type_enabled(v177, v178))
              {
                uint64_t v179 = v175;
                uint64_t v180 = swift_slowAlloc();
                uint64_t v181 = (void *)swift_slowAlloc();
                uint64_t v188 = swift_slowAlloc();
                v217[0] = v188;
                *(_DWORD *)uint64_t v180 = v189;
                *(void *)(v180 + 4) = v176;
                *uint64_t v181 = v207;

                *(_WORD *)(v180 + 12) = 2080;
                uint64_t v182 = sub_100725B30(0);
                *(void *)(v180 + 14) = sub_10043E578(v182, v183, v217);
                swift_bridgeObjectRelease();
                sub_1004CBE50(v179, type metadata accessor for SenderKeyAndState);
                _os_log_impl((void *)&_mh_execute_header, v177, v178, "Successfully unpacked and saved received sender key from uri: %@ keyID: %s", (uint8_t *)v180, 0x16u);
                sub_100431F80(&qword_100A44F10);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
                sub_10044CE88(v160, v161);

                uint64_t v184 = v201;
              }
              else
              {
                sub_10044CE88(v160, v161);

                sub_1004CBE50(v175, type metadata accessor for SenderKeyAndState);
                uint64_t v184 = v174;
              }
            }
            else
            {
              sub_10044CE88(v160, v161);
              uint64_t v184 = v146;
            }
            sub_1004CBE50(v184, type metadata accessor for SenderKeyAndState);
            uint64_t v111 = (uint64_t)v210;
          }
          sub_1004CBE50(v111, type metadata accessor for SenderKeyInfo);
          uint64_t v50 = v207;
          uint64_t v118 = v197;
          goto LABEL_41;
        }
        sub_10044CE88(v137, v138);
        swift_errorRelease();
        uint64_t v118 = 0;
      }
      sub_1004CBE50(v111, type metadata accessor for SenderKeyInfo);
LABEL_41:
      id v120 = v211;
LABEL_42:
      v117 += (uint64_t)v208;
      uint64_t v115 = v120 - 1;
      if (!v115)
      {
        sub_10044CE88(v195, v191);
        swift_bridgeObjectRelease();
        goto LABEL_77;
      }
    }
  }
  swift_bridgeObjectRetain();
  sub_10044CE88(v110, v191);
  swift_bridgeObjectRelease();
  uint64_t v194 = _swiftEmptyArrayStorage;
LABEL_77:
  sub_10044C6AC((uint64_t)&v224);
  swift_bridgeObjectRelease();
  return v194;
}

void sub_1004B353C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_100725F50();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = &v129[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12, v15);
  uint64_t v17 = &v129[-v16];
  uint64_t v141 = sub_100725EF0();
  __chkstk_darwin(v141, v18);
  unint64_t v138 = &v129[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  os_log_type_t v143 = v4;
  uint64_t v20 = (char *)v4 + OBJC_IVAR___IDSSenderKeyDistributionManager_logger;
  id v21 = a1;
  id v22 = a2;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v23 = v21;
  id v24 = v22;
  uint64_t v144 = v20;
  uint64_t v25 = sub_100725EB0();
  os_log_type_t v26 = sub_1007266E0();
  int v27 = v26;
  *(void *)&long long v142 = v25;
  BOOL v28 = os_log_type_enabled(v25, v26);
  uint64_t v136 = v10;
  uint64_t v137 = v9;
  long long v135 = v17;
  uint64_t v134 = v14;
  id v139 = v24;
  id v140 = v23;
  if (v28)
  {
    uint64_t v29 = v24;
    uint64_t v30 = v23;
    uint64_t v31 = swift_slowAlloc();
    id v32 = (void *)swift_slowAlloc();
    uint64_t v133 = swift_slowAlloc();
    aBlock[0] = v133;
    *(_DWORD *)uint64_t v31 = 138413058;
    LODWORD(v132) = v27;
    uint64_t v147 = (uint64_t)v30;
    id v33 = v30;
    sub_100726830();
    *id v32 = v30;

    *(_WORD *)(v31 + 12) = 2112;
    uint64_t v147 = (uint64_t)v29;
    id v34 = v29;
    sub_100726830();
    v32[1] = v29;

    *(_WORD *)(v31 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_100726580();
    unint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v147 = sub_10043E578(v35, v37, aBlock);
    sub_100726830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v31 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v38 = sub_100726580();
    unint64_t v40 = v39;
    swift_bridgeObjectRelease();
    uint64_t v147 = sub_10043E578(v38, v40, aBlock);
    sub_100726830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    id v41 = (void *)v142;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v142, (os_log_type_t)v132, "triggerKeyRecovery called with toURI: %@ fromURI: %@ keysToSend: %s keysToRequest: %s", (uint8_t *)v31, 0x2Au);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v42 = a3;
  if (!*(void *)(a3 + 16) && !*(void *)(a4 + 16)) {
    return;
  }
  *(void *)&long long v142 = a4;
  os_log_type_t v43 = (char *)v143 + OBJC_IVAR___IDSSenderKeyDistributionManager_recoveryWorkItems;
  swift_beginAccess();
  uint64_t v44 = *(void *)v43;
  uint64_t v45 = *(void *)(*(void *)v43 + 16);
  id v46 = v140;
  id v47 = v139;
  uint64_t v133 = (uint64_t)v43;
  if (!v45) {
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  unint64_t v48 = sub_1004BECC8(v46, v47);
  if ((v49 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_11:
    id v65 = v46;
    id v140 = v47;
    id v66 = v47;
    id v67 = v65;
    id v68 = v66;
    uint64_t v69 = sub_100725EB0();
    os_log_type_t v70 = sub_1007266E0();
    if (os_log_type_enabled(v69, v70))
    {
      uint64_t v71 = swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      id v139 = v46;
      uint64_t v73 = (void *)v72;
      *(_DWORD *)uint64_t v71 = 138412546;
      aBlock[0] = (uint64_t)v67;
      os_log_t v132 = v69;
      id v74 = v67;
      sub_100726830();
      void *v73 = v67;

      *(_WORD *)(v71 + 12) = 2112;
      aBlock[0] = (uint64_t)v68;
      id v75 = v68;
      sub_100726830();
      v73[1] = v68;

      os_log_t v76 = v132;
      _os_log_impl((void *)&_mh_execute_header, v132, v70, "Scheduling new recovery work item for toURI: %@ fromURI: %@", (uint8_t *)v71, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      id v46 = v139;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v47 = v140;
    goto LABEL_17;
  }
  uint64_t v50 = *(void *)(*(void *)(v44 + 56) + 8 * v48);
  swift_retain();
  swift_bridgeObjectRelease();
  id v51 = v46;
  id v52 = v47;
  id v53 = v51;
  id v54 = v52;
  uint64_t v55 = sub_100725EB0();
  os_log_type_t v56 = sub_1007266E0();
  int v57 = v56;
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v58 = swift_slowAlloc();
    id v139 = v46;
    uint64_t v59 = v58;
    uint64_t v60 = swift_slowAlloc();
    os_log_t v132 = v55;
    uint64_t v61 = (void *)v60;
    *(_DWORD *)uint64_t v59 = 138412546;
    uint64_t v131 = v50;
    int v130 = v57;
    aBlock[0] = (uint64_t)v53;
    id v140 = v47;
    uint64_t v62 = v54;
    id v63 = v53;
    sub_100726830();
    void *v61 = v53;

    *(_WORD *)(v59 + 12) = 2112;
    aBlock[0] = (uint64_t)v62;
    id v64 = v62;
    id v47 = v140;
    id v54 = v62;
    sub_100726830();
    v61[1] = v62;

    _os_log_impl((void *)&_mh_execute_header, v132, (os_log_type_t)v130, "Cancelling existing recovery work item for toURI: %@ fromURI: %@", (uint8_t *)v59, 0x16u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    uint64_t v55 = v132;
    swift_slowDealloc();
    id v46 = v139;
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100725F70();
  swift_beginAccess();
  id v77 = v53;
  id v78 = v54;
  sub_1004BF320(v77, v78);
  swift_endAccess();

  swift_release();
  swift_release();
LABEL_17:
  uint64_t v79 = swift_allocObject();
  swift_unknownObjectWeakInit();
  unint64_t v80 = (void *)swift_allocObject();
  v80[2] = v79;
  v80[3] = v46;
  v80[4] = v47;
  v80[5] = v42;
  v80[6] = v142;
  v80[7] = v46;
  v80[8] = v47;
  aBlock[4] = (uint64_t)sub_1004CC344;
  aBlock[5] = (uint64_t)v80;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_100435714;
  aBlock[3] = (uint64_t)&unk_10098E8B0;
  _Block_copy(aBlock);
  uint64_t v145 = _swiftEmptyArrayStorage;
  sub_1004CC294((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  id v81 = v46;
  id v82 = v47;
  id v83 = v81;
  id v84 = v82;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_100431F80((uint64_t *)&unk_100A454C0);
  sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
  sub_100726890();
  sub_100725F80();
  swift_allocObject();
  uint64_t v85 = sub_100725F60();
  swift_release();
  swift_release();
  uint64_t v86 = v133;
  swift_beginAccess();
  id v87 = v83;
  id v88 = v84;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v145 = *(void **)v86;
  *(void *)uint64_t v86 = 0x8000000000000000;
  sub_1004BFCFC(v85, v87, v88, isUniquelyReferenced_nonNull_native);
  *(void *)uint64_t v86 = v145;
  swift_bridgeObjectRelease();
  id v140 = v87;

  id v139 = v88;
  swift_endAccess();
  id v90 = (id)im_primary_queue();
  if (!v90) {
    goto LABEL_47;
  }
  uint64_t v91 = v90;
  char v92 = v134;
  uint64_t v93 = sub_100725F30();
  (*(void (**)(uint64_t))((swift_isaMask & *v143) + 0x228))(v93);
  id v94 = v135;
  sub_100725FA0();
  uint64_t v95 = *(void (**)(unsigned char *, uint64_t))(v136 + 8);
  uint64_t v96 = v92;
  uint64_t v97 = v137;
  v95(v96, v137);
  uint64_t v141 = v85;
  sub_100726720();

  v95(v94, v97);
  int64_t v98 = sub_100725EB0();
  os_log_type_t v99 = sub_1007266E0();
  if (os_log_type_enabled(v98, v99))
  {
    int v100 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v100 = 0;
    _os_log_impl((void *)&_mh_execute_header, v98, v99, "Currently scheduled key recovery work items:", v100, 2u);
    swift_slowDealloc();
  }

  uint64_t v101 = *(void **)v86;
  uint64_t v102 = *(void *)(*(void *)v86 + 64);
  os_log_type_t v143 = (void *)(*(void *)v86 + 64);
  uint64_t v103 = 1 << *((unsigned char *)v101 + 32);
  uint64_t v104 = -1;
  if (v103 < 64) {
    uint64_t v104 = ~(-1 << v103);
  }
  unint64_t v105 = v104 & v102;
  int64_t v106 = (unint64_t)(v103 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v107 = 0;
  *(void *)&long long v108 = 138412546;
  long long v142 = v108;
  while (1)
  {
    if (v105)
    {
      unint64_t v112 = __clz(__rbit64(v105));
      v105 &= v105 - 1;
      unint64_t v113 = v112 | (v107 << 6);
      goto LABEL_41;
    }
    int64_t v114 = v107 + 1;
    if (__OFADD__(v107, 1))
    {
      __break(1u);
      goto LABEL_46;
    }
    if (v114 >= v106) {
      goto LABEL_43;
    }
    unint64_t v115 = v143[v114];
    ++v107;
    if (!v115)
    {
      int64_t v107 = v114 + 1;
      if (v114 + 1 >= v106) {
        goto LABEL_43;
      }
      unint64_t v115 = v143[v107];
      if (!v115)
      {
        int64_t v107 = v114 + 2;
        if (v114 + 2 >= v106) {
          goto LABEL_43;
        }
        unint64_t v115 = v143[v107];
        if (!v115) {
          break;
        }
      }
    }
LABEL_40:
    unint64_t v105 = (v115 - 1) & v115;
    unint64_t v113 = __clz(__rbit64(v115)) + (v107 << 6);
LABEL_41:
    uint64_t v117 = v101[6] + 16 * v113;
    uint64_t v118 = *(void **)(v117 + 8);
    id v119 = *(id *)v117;
    id v120 = v118;
    id v121 = v119;
    id v122 = v120;
    id v123 = v121;
    id v124 = v122;
    uint64_t v111 = v123;
    uint64_t v110 = v124;
    uint64_t v125 = sub_100725EB0();
    os_log_type_t v126 = sub_1007266E0();
    if (os_log_type_enabled(v125, v126))
    {
      uint64_t v127 = swift_slowAlloc();
      uint64_t v128 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v127 = v142;
      *(void *)(v127 + 4) = v111;
      *uint64_t v128 = v111;

      *(_WORD *)(v127 + 12) = 2112;
      *(void *)(v127 + 14) = v110;
      v128[1] = v110;

      _os_log_impl((void *)&_mh_execute_header, v125, v126, "Scheduled item - toURI: %@, fromURI: %@", (uint8_t *)v127, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      os_log_t v109 = v125;
    }
    else
    {

      os_log_t v109 = v111;
      uint64_t v110 = v111;
      uint64_t v111 = v125;
    }
  }
  int64_t v116 = v114 + 3;
  if (v116 >= v106)
  {
LABEL_43:

    swift_release();
    swift_release();

    return;
  }
  unint64_t v115 = v143[v116];
  if (v115)
  {
    int64_t v107 = v116;
    goto LABEL_40;
  }
  while (1)
  {
    int64_t v107 = v116 + 1;
    if (__OFADD__(v116, 1)) {
      break;
    }
    if (v107 >= v106) {
      goto LABEL_43;
    }
    unint64_t v115 = v143[v107];
    ++v116;
    if (v115) {
      goto LABEL_40;
    }
  }
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
}

double sub_1004B449C()
{
  return 60.0;
}

void sub_1004B44A8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  if (!a1 || *(void *)(a1 + 16))
  {
    id v7 = a2;
    id v8 = a3;
    swift_bridgeObjectRetain_n();
    id v9 = v7;
    id v10 = v8;
    uint64_t v11 = sub_100725EB0();
    os_log_type_t v12 = sub_1007266E0();
    if (os_log_type_enabled(v11, v12))
    {
      os_log_type_t type = v12;
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412802;
      id v15 = v9;
      sub_100726830();
      *uint64_t v14 = v9;

      *(_WORD *)(v13 + 12) = 2112;
      id v16 = v10;
      sub_100726830();
      v14[1] = v10;

      *(_WORD *)(v13 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_100726580();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      sub_10043E578(v17, v19, &v22);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v11, type, "Resetting key state for senderURI: %@ receiverURI: %@ keyIDs: %s", (uint8_t *)v13, 0x20u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    uint64_t v20 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v4) + 0xA8))();
    sub_10055D4A4(v9, v10, a1);
  }
}

void sub_1004B4844(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v124 = sub_100725F50();
  uint64_t v6 = *(void *)(v124 - 8);
  uint64_t v8 = __chkstk_darwin(v124, v7);
  id v10 = &v116[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8, v11);
  uint64_t v13 = &v116[-v12];
  *(void *)&long long v126 = sub_100725EF0();
  uint64_t v15 = __chkstk_darwin(v126, v14);
  uint64_t v128 = &v116[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xA8))(v15);
  char v18 = sub_1005523C8(a1, a2);

  unint64_t v19 = (char *)v3 + OBJC_IVAR___IDSSenderKeyDistributionManager_logger;
  id v20 = a1;
  id v21 = a2;
  id v22 = v20;
  id v129 = v21;
  id v23 = sub_100725EB0();
  os_log_type_t v24 = sub_1007266E0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  if ((v18 & 1) == 0)
  {
    if (v25)
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 138412546;
      aBlock[0] = v22;
      id v32 = v22;
      sub_100726830();
      void *v31 = v22;

      *(_WORD *)(v30 + 12) = 2112;
      aBlock[0] = v129;
      id v33 = v129;
      sub_100726830();
      v31[1] = v129;

      _os_log_impl((void *)&_mh_execute_header, v23, v24, "Unknown {remoteURI: %@ localURI: %@} for key distribution - not handling remote device update", (uint8_t *)v30, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v52 = v129;
    }
    return;
  }
  uint64_t v127 = v19;
  uint64_t v125 = v6;
  id v121 = v10;
  id v122 = v13;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    int v27 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 138412546;
    aBlock[0] = v22;
    id v28 = v22;
    sub_100726830();
    *int v27 = v22;

    *(_WORD *)(v26 + 12) = 2112;
    aBlock[0] = v129;
    id v29 = v129;
    sub_100726830();
    v27[1] = v129;

    _os_log_impl((void *)&_mh_execute_header, v23, v24, "Handling remote device update for remoteURI: %@ localURI: %@", (uint8_t *)v26, 0x16u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v34 = (char *)v3 + OBJC_IVAR___IDSSenderKeyDistributionManager_deviceUpdateWorkItems;
  swift_beginAccess();
  id v123 = v34;
  uint64_t v35 = *(void *)(*(void *)v34 + 16);
  id v36 = v22;
  id v37 = v129;
  if (!v35) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  sub_1004BECC8(v36, v37);
  if ((v38 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    id v129 = v3;
    id v53 = v36;
    id v54 = v37;
    id v55 = v53;
    id v56 = v54;
    int v57 = sub_100725EB0();
    os_log_type_t v58 = sub_1007266E0();
    int v59 = v58;
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      id v120 = v37;
      uint64_t v62 = (void *)v61;
      *(_DWORD *)uint64_t v60 = 138412546;
      aBlock[0] = v55;
      LODWORD(v119) = v59;
      id v63 = v55;
      sub_100726830();
      void *v62 = v55;

      *(_WORD *)(v60 + 12) = 2112;
      aBlock[0] = v56;
      id v64 = v56;
      sub_100726830();
      v62[1] = v56;

      _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v119, "Scheduling new device update work item for remoteURI: %@ localURI: %@", (uint8_t *)v60, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      id v37 = v120;
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v3 = v129;
    goto LABEL_21;
  }
  swift_retain();
  swift_bridgeObjectRelease();
  id v39 = v36;
  id v40 = v37;
  id v41 = v39;
  id v42 = v40;
  os_log_type_t v43 = sub_100725EB0();
  os_log_type_t v44 = sub_1007266E0();
  int v45 = v44;
  BOOL v46 = os_log_type_enabled(v43, v44);
  id v119 = v41;
  if (v46)
  {
    uint64_t v47 = swift_slowAlloc();
    int v117 = v45;
    uint64_t v48 = v47;
    char v49 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 138412546;
    uint64_t v118 = v43;
    id v120 = v37;
    aBlock[0] = v41;
    id v129 = v3;
    id v50 = v41;
    sub_100726830();
    *char v49 = v41;

    *(_WORD *)(v48 + 12) = 2112;
    aBlock[0] = v42;
    id v51 = v42;
    uint64_t v3 = v129;
    os_log_type_t v43 = v118;
    sub_100726830();
    v49[1] = v42;

    id v37 = v120;
    _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v117, "Cancelling existing device update work item for remoteURI: %@ localURI: %@", (uint8_t *)v48, 0x16u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  sub_100725F70();
  swift_beginAccess();
  id v65 = v119;
  id v66 = v42;
  sub_1004BF320(v65, v66);
  swift_endAccess();

  swift_release();
  swift_release();
LABEL_21:
  uint64_t v67 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v68 = (void *)swift_allocObject();
  v68[2] = v67;
  void v68[3] = v36;
  v68[4] = v37;
  v68[5] = v36;
  v68[6] = v37;
  aBlock[4] = sub_1004CC890;
  aBlock[5] = v68;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100435714;
  aBlock[3] = &unk_10098E900;
  _Block_copy(aBlock);
  int v130 = _swiftEmptyArrayStorage;
  sub_1004CC294((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  id v69 = v36;
  id v70 = v37;
  id v71 = v69;
  id v72 = v70;
  swift_retain();
  sub_100431F80((uint64_t *)&unk_100A454C0);
  sub_1004D10A4((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
  sub_100726890();
  sub_100725F80();
  swift_allocObject();
  uint64_t v73 = sub_100725F60();
  swift_release();
  swift_release();
  id v74 = v123;
  swift_beginAccess();
  id v75 = v71;
  id v76 = v72;
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  int v130 = *(void **)v74;
  *(void *)id v74 = 0x8000000000000000;
  sub_1004BFCFC(v73, v75, v76, isUniquelyReferenced_nonNull_native);
  *(void *)id v74 = v130;
  swift_bridgeObjectRelease();
  id v120 = v75;

  id v119 = v76;
  swift_endAccess();
  id v78 = (id)im_primary_queue();
  if (!v78) {
    goto LABEL_51;
  }
  uint64_t v79 = v78;
  unint64_t v80 = v121;
  uint64_t v81 = sub_100725F30();
  (*(void (**)(uint64_t))((swift_isaMask & *v3) + 0x240))(v81);
  id v82 = v122;
  sub_100725FA0();
  id v83 = *(void (**)(unsigned char *, uint64_t))(v125 + 8);
  id v84 = v80;
  uint64_t v85 = v124;
  v83(v84, v124);
  uint64_t v125 = v73;
  sub_100726720();

  v83(v82, v85);
  uint64_t v86 = sub_100725EB0();
  os_log_type_t v87 = sub_1007266E0();
  if (os_log_type_enabled(v86, v87))
  {
    id v88 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v88 = 0;
    _os_log_impl((void *)&_mh_execute_header, v86, v87, "Currently scheduled device update work items:", v88, 2u);
    swift_slowDealloc();
  }

  os_log_t v89 = *(void **)v74;
  uint64_t v90 = *(void *)(*(void *)v74 + 64);
  uint64_t v128 = (unsigned char *)(*(void *)v74 + 64);
  uint64_t v91 = 1 << *((unsigned char *)v89 + 32);
  uint64_t v92 = -1;
  if (v91 < 64) {
    uint64_t v92 = ~(-1 << v91);
  }
  unint64_t v93 = v92 & v90;
  id v129 = (id)((unint64_t)(v91 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v94 = 0;
  *(void *)&long long v95 = 138412546;
  long long v126 = v95;
  while (1)
  {
    if (v93)
    {
      unint64_t v99 = __clz(__rbit64(v93));
      v93 &= v93 - 1;
      unint64_t v100 = v99 | (v94 << 6);
      goto LABEL_45;
    }
    uint64_t v101 = v94 + 1;
    if (__OFADD__(v94, 1))
    {
      __break(1u);
      goto LABEL_50;
    }
    if (v101 >= (uint64_t)v129) {
      goto LABEL_47;
    }
    unint64_t v102 = *(void *)&v128[8 * v101];
    ++v94;
    if (!v102)
    {
      uint64_t v94 = v101 + 1;
      if (v101 + 1 >= (uint64_t)v129) {
        goto LABEL_47;
      }
      unint64_t v102 = *(void *)&v128[8 * v94];
      if (!v102)
      {
        uint64_t v94 = v101 + 2;
        if (v101 + 2 >= (uint64_t)v129) {
          goto LABEL_47;
        }
        unint64_t v102 = *(void *)&v128[8 * v94];
        if (!v102) {
          break;
        }
      }
    }
LABEL_44:
    unint64_t v93 = (v102 - 1) & v102;
    unint64_t v100 = __clz(__rbit64(v102)) + (v94 << 6);
LABEL_45:
    uint64_t v104 = v89[6] + 16 * v100;
    unint64_t v105 = *(void **)(v104 + 8);
    id v106 = *(id *)v104;
    id v107 = v105;
    id v108 = v106;
    id v109 = v107;
    id v110 = v108;
    id v111 = v109;
    int64_t v98 = v110;
    uint64_t v97 = v111;
    unint64_t v112 = sub_100725EB0();
    os_log_type_t v113 = sub_1007266E0();
    if (os_log_type_enabled(v112, v113))
    {
      uint64_t v114 = swift_slowAlloc();
      unint64_t v115 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v114 = v126;
      *(void *)(v114 + 4) = v98;
      *unint64_t v115 = v98;

      *(_WORD *)(v114 + 12) = 2112;
      *(void *)(v114 + 14) = v97;
      v115[1] = v97;

      _os_log_impl((void *)&_mh_execute_header, v112, v113, "Scheduled item - toURI: %@, fromURI: %@", (uint8_t *)v114, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v96 = v112;
    }
    else
    {

      uint64_t v96 = v98;
      uint64_t v97 = v98;
      int64_t v98 = v112;
    }
  }
  uint64_t v103 = v101 + 3;
  if (v103 >= (uint64_t)v129)
  {
LABEL_47:

    swift_release();
    swift_release();

    return;
  }
  unint64_t v102 = *(void *)&v128[8 * v103];
  if (v102)
  {
    uint64_t v94 = v103;
    goto LABEL_44;
  }
  while (1)
  {
    uint64_t v94 = v103 + 1;
    if (__OFADD__(v103, 1)) {
      break;
    }
    if (v94 >= (uint64_t)v129) {
      goto LABEL_47;
    }
    unint64_t v102 = *(void *)&v128[8 * v94];
    ++v103;
    if (v102) {
      goto LABEL_44;
    }
  }
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
}

void sub_1004B5760(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain_n();
  id v6 = a2;
  uint64_t v7 = sub_100725EB0();
  os_log_type_t v8 = sub_1007266E0();
  int v27 = v6;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    id v10 = (void *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v26 = v3;
    uint64_t v11 = sub_100726580();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_10043E578(v11, v13, &v28);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2112;
    id v14 = v6;
    uint64_t v3 = v26;
    sub_100726830();
    *id v10 = v6;

    _os_log_impl((void *)&_mh_execute_header, v7, v8, "Updating delivered state for keyIDs: %s pushToken: %@", (uint8_t *)v9, 0x16u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  uint64_t v16 = *(void *)(a1 + 16);
  if (v16)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = a1 + 40;
    char v18 = _swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_100725AC0();
      unint64_t v22 = v21;
      swift_bridgeObjectRelease();
      if (v22 >> 60 != 15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v18 = sub_1004BE840(0, v18[2] + 1, 1, v18);
        }
        unint64_t v24 = v18[2];
        unint64_t v23 = v18[3];
        if (v24 >= v23 >> 1) {
          char v18 = sub_1004BE840((void *)(v23 > 1), v24 + 1, 1, v18);
        }
        v18[2] = v24 + 1;
        unint64_t v19 = &v18[2 * v24];
        v19[4] = v20;
        v19[5] = v22;
      }
      v17 += 16;
      --v16;
    }
    while (v16);
    uint64_t v15 = swift_bridgeObjectRelease();
    if (v18[2]) {
      goto LABEL_14;
    }
  }
  else
  {
    char v18 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2])
    {
LABEL_14:
      BOOL v25 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xA8))(v15);
      sub_10055B1B8(v27, (uint64_t)v18, 0, 0);
      swift_bridgeObjectRelease();

      return;
    }
  }
  swift_bridgeObjectRelease();
}

uint64_t sub_1004B5B58(void *a1, void *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_100726BA0();
    uint64_t v7 = result;
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
  }
  int v45 = a1;
  uint64_t v47 = a2;
  if (!v7)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    goto LABEL_16;
  }
  if (v7 >= 1)
  {
    uint64_t v9 = 0;
    unint64_t v10 = v4 & 0xC000000000000001;
    uint64_t v11 = _swiftEmptyArrayStorage;
    unint64_t v12 = v4;
    do
    {
      if (v10) {
        id v13 = (id)sub_100726A10();
      }
      else {
        id v13 = *(id *)(v4 + 8 * v9 + 32);
      }
      id v14 = v13;
      id v15 = [v13 rawToken];
      uint64_t v16 = sub_100725B50();
      uint64_t v18 = v17;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v11 = sub_1004BE840(0, v11[2] + 1, 1, v11);
      }
      unint64_t v20 = v11[2];
      unint64_t v19 = v11[3];
      if (v20 >= v19 >> 1) {
        uint64_t v11 = sub_1004BE840((void *)(v19 > 1), v20 + 1, 1, v11);
      }
      ++v9;
      v11[2] = v20 + 1;
      unint64_t v21 = &v11[2 * v20];
      v21[4] = v16;
      v21[5] = v18;
      unint64_t v4 = v12;
    }
    while (v7 != v9);
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t v22 = sub_1004CCCD4((uint64_t)v11);
    uint64_t v23 = swift_bridgeObjectRelease();
    unint64_t v24 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xA8))(v23);
    BOOL v25 = sub_100552334((uint64_t)v45, (uint64_t)v47);

    if (v25[2] <= *(void *)(v22 + 16) >> 3)
    {
      uint64_t v48 = v22;
      sub_1004C6B6C((uint64_t)v25);
      swift_bridgeObjectRelease();
      uint64_t v26 = (void *)v22;
      uint64_t v27 = *(void *)(v22 + 16);
      if (!v27) {
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v26 = sub_1004C6D28((uint64_t)v25, v22);
      swift_bridgeObjectRelease();
      uint64_t v27 = v26[2];
      if (!v27)
      {
LABEL_18:
        swift_bridgeObjectRelease();
        return v27 != 0;
      }
    }
    swift_bridgeObjectRetain_n();
    id v28 = v45;
    id v29 = v47;
    id v30 = v28;
    id v31 = v29;
    swift_bridgeObjectRetain();
    id v32 = sub_100725EB0();
    os_log_type_t v33 = sub_1007266E0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 138413058;
      uint64_t v46 = v27;
      log = v32;
      id v36 = v30;
      sub_100726830();
      *uint64_t v35 = v30;

      *(_WORD *)(v34 + 12) = 2112;
      id v37 = v31;
      sub_100726830();
      v35[1] = v31;

      *(_WORD *)(v34 + 22) = 2080;
      sub_100462C50(0, (unint64_t *)&qword_100A47A80);
      swift_bridgeObjectRetain();
      uint64_t v38 = sub_100726580();
      unint64_t v40 = v39;
      swift_bridgeObjectRelease();
      sub_10043E578(v38, v40, &v48);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      uint64_t v27 = v46;
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 32) = 2080;
      sub_1004AE4D0((uint64_t)v26);
      uint64_t v41 = sub_100726580();
      unint64_t v43 = v42;
      swift_bridgeObjectRelease();
      sub_10043E578(v41, v43, &v48);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      id v32 = log;
      _os_log_impl((void *)&_mh_execute_header, log, v33, "Detected device missing keys! senderURI: %@ receiverURI: %@ currentPeerTokens: %s missingTokens: %s", (uint8_t *)v34, 0x2Au);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    return v27 != 0;
  }
  __break(1u);
  return result;
}

void *sub_1004B6098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_100431F80((uint64_t *)&unk_100A468B0);
  __chkstk_darwin(v7 - 8, v8);
  unint64_t v10 = (char *)&v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100431F80((uint64_t *)&unk_100A46870);
  __chkstk_darwin(v11 - 8, v12);
  uint64_t v50 = (uint64_t)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v51 = *(void *)(v49 - 8);
  uint64_t v15 = __chkstk_darwin(v49, v14);
  uint64_t v47 = (uint64_t)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15, v17);
  uint64_t v48 = (uint64_t)&v46 - v18;
  uint64_t v19 = sub_100431F80((uint64_t *)&unk_100A46D70);
  uint64_t v21 = __chkstk_darwin(v19, v20);
  uint64_t v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v21, v24);
  uint64_t v27 = (char *)&v46 - v26;
  id v28 = (char *)&v46 + *(int *)(v25 + 48) - v26;
  id v29 = (char *)&v46 + *(int *)(v25 + 64) - v26;
  id v30 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xA8))();
  sub_1005548A4((uint64_t)v27, (uint64_t)v28, (uint64_t)v29, a1, a2, a3);

  uint64_t v31 = type metadata accessor for SenderKeyAndState(0);
  id v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48);
  if (v32(v27, 1, v31) != 1)
  {
    id v36 = (uint64_t *)&unk_100A46D70;
    uint64_t v37 = (uint64_t)v27;
LABEL_7:
    sub_10044C150(v37, v36);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v33 = (uint64_t)&v23[*(int *)(v19 + 48)];
  uint64_t v34 = (uint64_t)&v23[*(int *)(v19 + 64)];
  sub_1004CD250((uint64_t)v27, (uint64_t)v23);
  sub_1004CD250((uint64_t)v28, v33);
  sub_1004CD250((uint64_t)v29, v34);
  sub_100462BE4(v33, (uint64_t)v10, (uint64_t *)&unk_100A468B0);
  if (v32(v10, 1, v31) == 1)
  {
    sub_10044C150(v34, (uint64_t *)&unk_100A468B0);
    sub_10044C150((uint64_t)v23, (uint64_t *)&unk_100A468B0);
    sub_10044C150((uint64_t)v10, (uint64_t *)&unk_100A468B0);
    uint64_t v35 = v50;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v50, 1, 1, v49);
LABEL_6:
    sub_10044C150((uint64_t)v27, (uint64_t *)&unk_100A46D70);
    id v36 = (uint64_t *)&unk_100A46870;
    uint64_t v37 = v35;
    goto LABEL_7;
  }
  uint64_t v35 = v50;
  sub_1004CBF18((uint64_t)v10, v50, type metadata accessor for SenderKeyInfo);
  sub_1004CBE50((uint64_t)v10, type metadata accessor for SenderKeyAndState);
  uint64_t v38 = v51;
  uint64_t v39 = v49;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v51 + 56))(v35, 0, 1, v49);
  sub_10044C150(v34, (uint64_t *)&unk_100A468B0);
  sub_10044C150((uint64_t)v23, (uint64_t *)&unk_100A468B0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v35, 1, v39) == 1) {
    goto LABEL_6;
  }
  uint64_t v42 = v48;
  sub_1004CBEB0(v35, v48, type metadata accessor for SenderKeyInfo);
  uint64_t v43 = v47;
  sub_1004CBF18(v42, v47, type metadata accessor for SenderKeyInfo);
  unint64_t v40 = sub_1004BE950(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v45 = *(void *)(v40 + 16);
  unint64_t v44 = *(void *)(v40 + 24);
  if (v45 >= v44 >> 1) {
    unint64_t v40 = sub_1004BE950(v44 > 1, v45 + 1, 1, v40);
  }
  *(void *)(v40 + 16) = v45 + 1;
  sub_1004CBEB0(v43, v40+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v45, type metadata accessor for SenderKeyInfo);
  sub_1004CBE50(v42, type metadata accessor for SenderKeyInfo);
  sub_10044C150((uint64_t)v27, (uint64_t *)&unk_100A46D70);
  return (void *)v40;
}

uint64_t sub_1004B65D8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6 - 8, v8);
  unint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100725CC0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  uint64_t v19 = (char *)&v41 - v18;
  sub_100725CB0();
  sub_100725BD0();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v12 + 8);
  uint64_t v47 = v12 + 8;
  uint64_t v48 = v11;
  unint64_t v45 = v20;
  uint64_t v21 = ((uint64_t (*)(char *, uint64_t))v20)(v16, v11);
  uint64_t v22 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xA8);
  uint64_t v23 = (void *)v22(v21);
  uint64_t v24 = sub_1005532FC(a1, a2);

  id v52 = v19;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_1004AD3D0((uint64_t (*)(char *))sub_1004D0D0C, (uint64_t)v51, v24);
  uint64_t v46 = v19;
  uint64_t v50 = v19;
  swift_bridgeObjectRetain();
  uint64_t v26 = sub_1004AD3D0((uint64_t (*)(char *))sub_1004D0D5C, (uint64_t)v49, v24);
  uint64_t v27 = *(void *)(v24 + 16);
  uint64_t v28 = swift_bridgeObjectRelease();
  if (v27) {
    LODWORD(v27) = *(void *)(v25 + 16) == 0;
  }
  if (*(void *)(v26 + 16))
  {
    int v44 = v27;
    uint64_t v29 = v22(v28);
    id v30 = (void *)v29;
    uint64_t v31 = *(void *)(v26 + 16);
    if (v31)
    {
      uint64_t v42 = (void *)v29;
      uint64_t v43 = v25;
      uint64_t v32 = v26 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
      uint64_t v33 = *(void *)(v7 + 72);
      swift_bridgeObjectRetain();
      uint64_t v34 = _swiftEmptyArrayStorage;
      do
      {
        sub_1004CBF18(v32, (uint64_t)v10, type metadata accessor for SenderKeyInfo);
        uint64_t v36 = *((void *)v10 + 2);
        unint64_t v35 = *((void *)v10 + 3);
        sub_100441FD4(v36, v35);
        sub_1004CBE50((uint64_t)v10, type metadata accessor for SenderKeyInfo);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v34 = sub_1004BE840(0, v34[2] + 1, 1, v34);
        }
        unint64_t v38 = v34[2];
        unint64_t v37 = v34[3];
        if (v38 >= v37 >> 1) {
          uint64_t v34 = sub_1004BE840((void *)(v37 > 1), v38 + 1, 1, v34);
        }
        v34[2] = v38 + 1;
        uint64_t v39 = &v34[2 * v38];
        v39[4] = v36;
        v39[5] = v35;
        v32 += v33;
        --v31;
      }
      while (v31);
      swift_bridgeObjectRelease_n();
      id v30 = v42;
      uint64_t v25 = v43;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v34 = _swiftEmptyArrayStorage;
    }
    sub_100569CC0((uint64_t)v34);
  }
  swift_bridgeObjectRelease();
  v45(v46, v48);
  return v25;
}

uint64_t sub_1004B69B8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v67 = a3;
  uint64_t v68 = a4;
  uint64_t v7 = sub_100431F80((uint64_t *)&unk_100A468B0);
  __chkstk_darwin(v7 - 8, v8);
  unint64_t v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SenderKeyAndState(0);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v17);
  uint64_t v19 = (char *)&v65 - v18;
  (*(void (**)(void *, void *))((swift_isaMask & *v4) + 0x280))(a1, a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10044C150((uint64_t)v10, (uint64_t *)&unk_100A468B0);
    id v20 = a2;
    id v21 = a1;
    uint64_t v22 = v20;
    uint64_t v23 = v21;
    uint64_t v24 = sub_100725EB0();
    os_log_type_t v25 = sub_1007266C0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = 138412546;
      id v70 = v22;
      uint64_t v28 = v22;
      sub_100726830();
      *uint64_t v27 = v22;

      *(_WORD *)(v26 + 12) = 2112;
      id v70 = v23;
      uint64_t v29 = v23;
      sub_100726830();
      v27[1] = v23;

      _os_log_impl((void *)&_mh_execute_header, v24, v25, "Failed to generate new sender key and state for URI: %@ fromURI: %@", (uint8_t *)v26, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_15:
    uint64_t v64 = type metadata accessor for SenderKeyInfo(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v68, 1, 1, v64);
  }
  uint64_t v30 = sub_1004CBEB0((uint64_t)v10, (uint64_t)v19, type metadata accessor for SenderKeyAndState);
  uint64_t v31 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v4) + 0xA8))(v30);
  char v32 = sub_10055A858((uint64_t)v19, (uint64_t)v67);

  uint64_t v33 = (uint64_t)v19;
  if ((v32 & 1) == 0)
  {
    id v50 = a2;
    id v51 = a1;
    id v52 = v50;
    id v53 = v51;
    id v54 = sub_100725EB0();
    os_log_type_t v55 = sub_1007266C0();
    int v56 = v55;
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v57 = swift_slowAlloc();
      os_log_type_t v58 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v57 = 138412546;
      LODWORD(v67) = v56;
      id v70 = v52;
      int v59 = v52;
      sub_100726830();
      void *v58 = v52;

      *(_WORD *)(v57 + 12) = 2112;
      id v70 = v53;
      uint64_t v60 = v53;
      sub_100726830();
      v58[1] = v53;

      _os_log_impl((void *)&_mh_execute_header, v54, (os_log_type_t)v67, "Failed to save new sender key and state for URI: %@ fromURI: %@", (uint8_t *)v57, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      id v54 = v52;
    }

    sub_1004CBE50(v33, type metadata accessor for SenderKeyAndState);
    goto LABEL_15;
  }
  uint64_t v34 = (uint64_t)v19;
  uint64_t v35 = (uint64_t)v16;
  sub_1004CBF18(v34, (uint64_t)v16, type metadata accessor for SenderKeyAndState);
  id v36 = a2;
  id v37 = a1;
  id v38 = v36;
  id v39 = v37;
  unint64_t v40 = sub_100725EB0();
  os_log_type_t v41 = sub_1007266E0();
  int v42 = v41;
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v43 = swift_slowAlloc();
    int v44 = (void *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v69 = (uint64_t)v38;
    id v70 = v67;
    *(_DWORD *)uint64_t v43 = 138412802;
    int v66 = v42;
    os_log_t v65 = v40;
    id v45 = v38;
    sub_100726830();
    *int v44 = v38;

    *(_WORD *)(v43 + 12) = 2112;
    uint64_t v69 = (uint64_t)v39;
    id v46 = v39;
    sub_100726830();
    v44[1] = v39;

    *(_WORD *)(v43 + 22) = 2080;
    uint64_t v47 = sub_100725B30(0);
    uint64_t v69 = sub_10043E578(v47, v48, (uint64_t *)&v70);
    sub_100726830();
    swift_bridgeObjectRelease();
    sub_1004CBE50(v35, type metadata accessor for SenderKeyAndState);
    os_log_t v49 = v65;
    _os_log_impl((void *)&_mh_execute_header, v65, (os_log_type_t)v66, "Successfully generated and saved new sender key for URI: %@ fromURI: %@ keyID: %s", (uint8_t *)v43, 0x20u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_1004CBE50((uint64_t)v16, type metadata accessor for SenderKeyAndState);
  }
  uint64_t v61 = v68;
  sub_1004CBF18(v33, v68, type metadata accessor for SenderKeyInfo);
  sub_1004CBE50(v33, type metadata accessor for SenderKeyAndState);
  uint64_t v62 = type metadata accessor for SenderKeyInfo(0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
}

uint64_t sub_1004B71DC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100725CC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (char *)&v27 - v17;
  uint64_t v19 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xA8))(v16);
  sub_10055F6E8(a1, a2, (uint64_t)v8);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10044C150((uint64_t)v8, &qword_100A47D80);
    return 1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
  sub_100725CB0();
  sub_100725BC0();
  double v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v14, v9);
  if (v21 > 300.0)
  {
    v22(v18, v9);
    return 1;
  }
  uint64_t v24 = sub_100725EB0();
  os_log_type_t v25 = sub_1007266E0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "We are still within cool down period, not regenerating", v26, 2u);
    swift_slowDealloc();
  }

  v22(v18, v9);
  return 0;
}

uint64_t sub_1004B74A8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v76 = sub_100725CC0();
  uint64_t v74 = *(void *)(v76 - 8);
  __chkstk_darwin(v76, v6);
  id v72 = (char *)&v62 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = type metadata accessor for SenderKeyInfo(0);
  __chkstk_darwin(v73, v8);
  id v75 = (_OWORD *)((char *)&v62 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_100431F80((uint64_t *)&unk_100A468C0);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  id v77 = (char *)&v62 - v16;
  uint64_t v17 = sub_100725EA0();
  __chkstk_darwin(v17 - 8, v18);
  double v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SenderKeyUtils();
  id v70 = a1;
  id v21 = [a1 prefixedURI];
  uint64_t v22 = sub_100726430();
  uint64_t v24 = v23;

  id v71 = a2;
  id v25 = [a2 prefixedURI];
  uint64_t v26 = sub_100726430();
  uint64_t v28 = v27;

  uint64_t v29 = sub_1005299CC(v22, v24, v26, v28);
  unint64_t v31 = v30;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v31 >> 60 == 15)
  {
    uint64_t v32 = type metadata accessor for SenderKeyAndState(0);
    uint64_t v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
    return v33(a3, 1, 1, v32);
  }
  else
  {
    uint64_t v69 = a3;
    sub_100441FD4(v29, v31);
    sub_100725E50();
    uint64_t v35 = sub_100725E40();
    uint64_t v67 = v36;
    uint64_t v68 = v35;
    uint64_t v37 = sub_100725E70();
    uint64_t v65 = v38;
    uint64_t v66 = v37;
    uint64_t v39 = *(int *)(v10 + 48);
    unint64_t v40 = v77;
    uint64_t v41 = sub_100725E60();
    *(void *)&v40[v39] = v41;
    id v42 = [v70 prefixedURI];
    id v70 = (id)sub_100726430();
    uint64_t v64 = v43;

    id v44 = [v71 prefixedURI];
    id v71 = (id)sub_100726430();
    uint64_t v63 = v45;

    uint64_t v46 = *(int *)(v10 + 48);
    uint64_t v47 = sub_100726030();
    uint64_t v48 = *(void *)(v47 - 8);
    uint64_t v49 = (uint64_t)v77;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v14, v77, v47);
    *(void *)&v14[v46] = v41;
    id v50 = v72;
    sub_100725CB0();
    sub_100726010();
    (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v47);
    uint64_t v51 = v74;
    uint64_t v52 = (uint64_t)v75;
    *id v75 = v78;
    uint64_t v53 = v65;
    *(void *)(v52 + 16) = v66;
    *(void *)(v52 + 24) = v53;
    uint64_t v54 = v73;
    (*(void (**)(uint64_t, char *, uint64_t))(v51 + 32))(v52 + *(int *)(v73 + 24), v50, v76);
    sub_10044CE88(v29, v31);
    os_log_type_t v55 = (void *)(v52 + *(int *)(v54 + 28));
    uint64_t v56 = v64;
    void *v55 = v70;
    v55[1] = v56;
    uint64_t v57 = v63;
    v55[2] = v71;
    v55[3] = v57;
    sub_10044C150(v49, (uint64_t *)&unk_100A468C0);
    sub_1004CBE50((uint64_t)v20, (uint64_t (*)(void))&type metadata accessor for PaddyOutgoingSymmetricRatchet);
    uint64_t v58 = v69;
    sub_1004CBEB0(v52, v69, type metadata accessor for SenderKeyInfo);
    uint64_t v59 = type metadata accessor for SenderKeyAndState(0);
    uint64_t v60 = (uint64_t *)(v58 + *(int *)(v59 + 20));
    uint64_t v61 = v67;
    *uint64_t v60 = v68;
    v60[1] = v61;
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v58, 0, 1, v59);
  }
}

uint64_t sub_1004B7A38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_1004CBEB0(a1, a4, type metadata accessor for SenderKeyInfo);
  uint64_t result = type metadata accessor for SenderKeyAndState(0);
  uint64_t v8 = (void *)(a4 + *(int *)(result + 20));
  *uint64_t v8 = a2;
  v8[1] = a3;
  return result;
}

uint64_t sub_1004B7A98(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  sub_1007258E0();
  swift_allocObject();
  sub_1007258D0();
  uint64_t v9 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v4) + 0xA8))();
  sub_100462C50(0, (unint64_t *)&unk_100A48020);
  Class isa = sub_100726560().super.isa;
  unsigned int v11 = [v9 senderKeyMessageSupportedFor:isa];

  if (v11)
  {
    uint64_t v36 = a1;
    char v37 = a2;
    uint64_t v38 = a3;
    uint64_t v39 = a4;
    sub_1004CCD70();
    uint64_t v24 = sub_1007258C0();
LABEL_10:
    swift_release();
    return v24;
  }
  swift_allocObject();
  sub_1007258D0();
  uint64_t v12 = sub_1004CB9A8(a3);
  int64_t v13 = v12[2];
  if (v13)
  {
    uint64_t v36 = _swiftEmptyArrayStorage;
    sub_100455590(0, v13, 0);
    uint64_t v14 = _swiftEmptyArrayStorage;
    uint64_t v15 = v12 + 5;
    do
    {
      uint64_t v16 = *(v15 - 1);
      unint64_t v17 = *v15;
      sub_100441FD4(v16, *v15);
      uint64_t v18 = sub_100725B30(0);
      uint64_t v20 = v19;
      sub_100442248(v16, v17);
      uint64_t v36 = v14;
      unint64_t v22 = v14[2];
      unint64_t v21 = v14[3];
      if (v22 >= v21 >> 1)
      {
        sub_100455590((char *)(v21 > 1), v22 + 1, 1);
        uint64_t v14 = v36;
      }
      v15 += 2;
      v14[2] = v22 + 1;
      uint64_t v23 = &v14[2 * v22];
      v23[4] = v18;
      v23[5] = v20;
      --v13;
    }
    while (v13);
  }
  swift_bridgeObjectRelease();
  id v25 = self;
  Class v26 = sub_100726560().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v36 = 0;
  id v27 = [v25 dataWithJSONObject:v26 options:0 error:&v36];

  uint64_t v28 = v36;
  if (v27)
  {
    uint64_t v24 = sub_100725B50();
    unint64_t v30 = v29;
    swift_release();

    if (v30 >> 60 != 15) {
      goto LABEL_10;
    }
  }
  else
  {
    unint64_t v31 = v28;
    sub_100725A20();

    swift_willThrow();
    swift_release();
    swift_errorRelease();
  }
  uint64_t v32 = sub_100725EB0();
  os_log_type_t v33 = sub_1007266C0();
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v34 = 0;
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "Failed to serialize [SenderKeyInfo]", v34, 2u);
    swift_slowDealloc();
  }

  swift_release();
  return 0;
}

double sub_1004B7F94@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_100431F80((uint64_t *)&unk_100A46870);
  uint64_t v6 = __chkstk_darwin(v4 - 8, v5);
  __chkstk_darwin(v6, v7);
  v18[5] = (char *)v18 - v8;
  uint64_t v9 = type metadata accessor for SenderKeyInfo(0);
  v18[6] = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9, v10);
  v18[11] = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11, v13);
  v18[4] = (char *)v18 - v14;
  sub_1007258B0();
  swift_allocObject();
  sub_1007258A0();
  sub_1004CCDC4();
  *(void *)&long long v19 = a1;
  sub_100725890();
  uint64_t v15 = v20;
  LOBYTE(a1) = v21;
  long long v19 = v22;
  a2[3] = (uint64_t)&type metadata for SenderKeyMessage;
  uint64_t v16 = swift_allocObject();
  *a2 = v16;
  swift_release();
  *(void *)(v16 + 16) = v15;
  *(unsigned char *)(v16 + 24) = a1;
  double result = *(double *)&v19;
  *(_OWORD *)(v16 + 32) = v19;
  return result;
}

void sub_1004B87C4()
{
  uint64_t v0 = sub_100725EB0();
  os_log_type_t v1 = sub_1007266E0();
  if (os_log_type_enabled(v0, v1))
  {
    uint64_t v2 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v0, v1, "Roll keys timer fired!", v2, 2u);
    swift_slowDealloc();
  }

  uint64_t v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v29) + 0xA8))();
  unint64_t v4 = sub_10055FEA8();

  int64_t v5 = 0;
  uint64_t v6 = *(void *)(v4 + 64);
  unint64_t v26 = v4 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v6;
  int64_t v27 = (unint64_t)(v7 + 63) >> 6;
  unint64_t v28 = v4;
  if ((v8 & v6) == 0) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  int64_t v30 = v5;
  for (unint64_t i = v10 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    uint64_t v16 = 8 * i;
    uint64_t v17 = *(void *)(*(void *)(v28 + 56) + v16);
    uint64_t v18 = qword_100A4FBE0;
    id v19 = *(id *)(*(void *)(v28 + 48) + v16);
    swift_bridgeObjectRetain();
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_100A533A0;
    uint64_t v21 = *(void *)algn_100A533A8;
    long long v22 = (void *)swift_allocObject();
    void v22[2] = v29;
    v22[3] = v17;
    v22[4] = v19;
    uint64_t v23 = *(void (**)(uint64_t, id, uint64_t, uint64_t, void (*)(), void *))((swift_isaMask & *v29) + 0x1D0);
    id v24 = v19;
    swift_bridgeObjectRetain();
    id v25 = v29;
    v23(v17, v24, v20, v21, sub_1004CCE5C, v22);
    swift_release();
    swift_bridgeObjectRelease();

    int64_t v5 = v30;
    if (v9) {
      goto LABEL_6;
    }
LABEL_7:
    int64_t v12 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return;
    }
    if (v12 >= v27) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v26 + 8 * v12);
    int64_t v14 = v5 + 1;
    if (!v13)
    {
      int64_t v14 = v5 + 2;
      if (v5 + 2 >= v27) {
        goto LABEL_25;
      }
      unint64_t v13 = *(void *)(v26 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v5 + 3;
        if (v5 + 3 >= v27) {
          goto LABEL_25;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v14);
        if (!v13) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v13 - 1) & v13;
    int64_t v30 = v14;
  }
  uint64_t v15 = v5 + 4;
  if (v5 + 4 < v27)
  {
    unint64_t v13 = *(void *)(v26 + 8 * v15);
    if (!v13)
    {
      while (1)
      {
        int64_t v14 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_29;
        }
        if (v14 >= v27) {
          goto LABEL_25;
        }
        unint64_t v13 = *(void *)(v26 + 8 * v14);
        ++v15;
        if (v13) {
          goto LABEL_20;
        }
      }
    }
    int64_t v14 = v5 + 4;
    goto LABEL_20;
  }
LABEL_25:

  swift_release();
}

uint64_t sub_1004B8B2C(void *a1, void *a2)
{
  uint64_t v5 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100725CC0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  int64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (char *)&v39 - v17;
  id v19 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xA8))(v16);
  sub_10055F6E8((uint64_t)a1, (uint64_t)a2, (uint64_t)v8);

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10044C150((uint64_t)v8, &qword_100A47D80);
    return 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v18, v8, v9);
    sub_100725CB0();
    double v21 = sub_1004CA980();
    sub_100725C50();
    double v23 = v22;
    sub_100725C50();
    double v25 = v23 - v24;
    BOOL v20 = v21 + -3600.0 < v25;
    if (v21 + -3600.0 < v25)
    {
      id v26 = a1;
      id v27 = a2;
      id v28 = v26;
      id v29 = v27;
      int64_t v30 = sub_100725EB0();
      os_log_type_t v31 = sub_1007266E0();
      int v32 = v31;
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v33 = swift_slowAlloc();
        int v41 = v32;
        uint64_t v34 = v33;
        uint64_t v43 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v34 = 134218498;
        double v44 = v21;
        id v42 = v30;
        sub_100726830();
        *(_WORD *)(v34 + 12) = 2112;
        uint64_t v39 = v34 + 22;
        uint64_t v40 = v34 + 14;
        double v44 = *(double *)&v28;
        id v35 = v28;
        sub_100726830();
        *uint64_t v43 = v28;

        *(_WORD *)(v34 + 22) = 2112;
        uint64_t v40 = v34 + 32;
        double v44 = *(double *)&v29;
        id v36 = v29;
        int64_t v30 = v42;
        sub_100726830();
        v43[1] = v29;

        _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v41, "We need to roll! currentRollInterval: %f { senderURI %@ receiverURI %@ }", (uint8_t *)v34, 0x20u);
        sub_100431F80(&qword_100A44F10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    char v37 = *(void (**)(char *, uint64_t))(v10 + 8);
    v37(v14, v9);
    v37(v18, v9);
  }
  return v20;
}

double sub_1004B8F30()
{
  id v0 = [self sharedInstance];
  NSString v1 = sub_100726420();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100462BE4((uint64_t)v6, (uint64_t)v7, &qword_100A44F00);
  if (v8)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A468F0);
    if (swift_dynamicCast())
    {
      id v3 = [v5 integerValue];

      return (double)(uint64_t)v3;
    }
  }
  else
  {
    sub_10044C150((uint64_t)v7, &qword_100A44F00);
  }
  return 3456000.0;
}

double sub_1004B9084()
{
  id v0 = [self sharedInstance];
  NSString v1 = sub_100726420();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100462BE4((uint64_t)v6, (uint64_t)v7, &qword_100A44F00);
  if (v8)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A468F0);
    if (swift_dynamicCast())
    {
      id v3 = [v5 integerValue];

      return (double)(uint64_t)v3;
    }
  }
  else
  {
    sub_10044C150((uint64_t)v7, &qword_100A44F00);
  }
  return 6048000.0;
}

double sub_1004B91D8()
{
  return sub_1004B9678();
}

uint64_t sub_1004B91F4()
{
  id v0 = [self sharedInstance];
  NSString v1 = sub_100726420();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100462BE4((uint64_t)v6, (uint64_t)v7, &qword_100A44F00);
  if (!v8)
  {
    sub_10044C150((uint64_t)v7, &qword_100A44F00);
    return 5;
  }
  sub_100462C50(0, (unint64_t *)&unk_100A468F0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 5;
  }
  id v3 = [v5 integerValue];

  return (uint64_t)v3;
}

double sub_1004B9340()
{
  return sub_1004B97FC();
}

uint64_t sub_1004B935C()
{
  return sub_1004B93B0();
}

double sub_1004B9378()
{
  return sub_1004B9510();
}

uint64_t sub_1004B9394()
{
  return sub_1004B93B0();
}

uint64_t sub_1004B93B0()
{
  id v0 = [self sharedInstance];
  NSString v1 = sub_100726420();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100462BE4((uint64_t)v6, (uint64_t)v7, &qword_100A44F00);
  if (!v8)
  {
    sub_10044C150((uint64_t)v7, &qword_100A44F00);
    return 1;
  }
  sub_100462C50(0, (unint64_t *)&unk_100A468F0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 1;
  }
  id v3 = [v5 integerValue];

  return (uint64_t)v3;
}

double sub_1004B94F4()
{
  return sub_1004B9510();
}

double sub_1004B9510()
{
  id v0 = [self sharedInstance];
  NSString v1 = sub_100726420();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100462BE4((uint64_t)v6, (uint64_t)v7, &qword_100A44F00);
  if (v8)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A468F0);
    if (swift_dynamicCast())
    {
      id v3 = [v5 integerValue];

      return (double)(uint64_t)v3;
    }
  }
  else
  {
    sub_10044C150((uint64_t)v7, &qword_100A44F00);
  }
  return 600.0;
}

double sub_1004B965C()
{
  return sub_1004B9678();
}

double sub_1004B9678()
{
  id v0 = [self sharedInstance];
  NSString v1 = sub_100726420();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100462BE4((uint64_t)v6, (uint64_t)v7, &qword_100A44F00);
  if (v8)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A468F0);
    if (swift_dynamicCast())
    {
      id v3 = [v5 integerValue];

      return (double)(uint64_t)v3;
    }
  }
  else
  {
    sub_10044C150((uint64_t)v7, &qword_100A44F00);
  }
  return 86400.0;
}

uint64_t sub_1004B97C4()
{
  return sub_1004B93B0();
}

double sub_1004B97E0()
{
  return sub_1004B97FC();
}

double sub_1004B97FC()
{
  id v0 = [self sharedInstance];
  NSString v1 = sub_100726420();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100462BE4((uint64_t)v6, (uint64_t)v7, &qword_100A44F00);
  if (v8)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A468F0);
    if (swift_dynamicCast())
    {
      id v3 = [v5 integerValue];

      return (double)(uint64_t)v3;
    }
  }
  else
  {
    sub_10044C150((uint64_t)v7, &qword_100A44F00);
  }
  return 3600.0;
}

double sub_1004B9948()
{
  id v0 = [self sharedInstance];
  NSString v1 = sub_100726420();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100462BE4((uint64_t)v6, (uint64_t)v7, &qword_100A44F00);
  if (v8)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A468F0);
    if (swift_dynamicCast())
    {
      id v3 = [v5 integerValue];

      return (double)(uint64_t)v3;
    }
  }
  else
  {
    sub_10044C150((uint64_t)v7, &qword_100A44F00);
  }
  return 1209600.0;
}

void sub_1004B9A9C(void *a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for SenderKeyInfo(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v78 = (uint64_t)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80((uint64_t *)&unk_100A468B0);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  uint64_t v77 = (uint64_t)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v11, v13);
  uint64_t v79 = (uint64_t)&v74 - v15;
  uint64_t v17 = __chkstk_darwin(v14, v16);
  id v19 = (char *)&v74 - v18;
  uint64_t v21 = __chkstk_darwin(v17, v20);
  uint64_t v81 = (uint64_t)&v74 - v22;
  __chkstk_darwin(v21, v23);
  uint64_t v80 = (uint64_t)&v74 - v24;
  id v84 = &_swiftEmptySetSingleton;
  id v83 = _swiftEmptyArrayStorage;
  id v25 = [self sharedInstance];
  if (!v25)
  {
LABEL_34:
    __break(1u);
    return;
  }
  id v26 = v25;
  sub_100431F80((uint64_t *)&unk_100A46840);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_100797A20;
  *(void *)(v27 + 32) = a1;
  Swift::Int v82 = v27;
  sub_100726590();
  sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
  id v74 = a1;
  Class isa = sub_100726560().super.isa;
  swift_bridgeObjectRelease();
  id v29 = (void *)IDSServiceNameiMessage;
  sub_100431F80((uint64_t *)&unk_100A47F00);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_100794E30;
  *(void *)(inited + 32) = sub_100726430();
  *(void *)(inited + 40) = v31;
  id v32 = objc_allocWithZone((Class)NSNumber);
  id v33 = v29;
  *(void *)(inited + 48) = [v32 initWithInteger:1];
  sub_1004AB984(inited);
  sub_100462C50(0, (unint64_t *)&unk_100A468F0);
  Class v34 = sub_100726380().super.isa;
  swift_bridgeObjectRelease();
  id v35 = [v26 endpointsForURIs:isa service:v33 fromURI:a2 withCapabilities:v34];

  id v75 = v19;
  uint64_t v76 = a2;
  if (v35)
  {
    sub_100431F80((uint64_t *)&unk_100A47F10);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    unint64_t v36 = sub_100726390();
  }
  else
  {
    unint64_t v36 = sub_1004AB73C((uint64_t)_swiftEmptyArrayStorage);
  }
  int64_t v37 = 0;
  unint64_t v38 = v36 + 64;
  uint64_t v39 = 1 << *(unsigned char *)(v36 + 32);
  uint64_t v40 = -1;
  if (v39 < 64) {
    uint64_t v40 = ~(-1 << v39);
  }
  unint64_t v41 = v40 & *(void *)(v36 + 64);
  int64_t v42 = (unint64_t)(v39 + 63) >> 6;
  while (1)
  {
    if (v41)
    {
      unint64_t v43 = __clz(__rbit64(v41));
      v41 &= v41 - 1;
      unint64_t v44 = v43 | (v37 << 6);
      goto LABEL_9;
    }
    int64_t v50 = v37 + 1;
    if (__OFADD__(v37, 1))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v50 >= v42) {
      goto LABEL_25;
    }
    unint64_t v51 = *(void *)(v38 + 8 * v50);
    ++v37;
    if (!v51)
    {
      int64_t v37 = v50 + 1;
      if (v50 + 1 >= v42) {
        goto LABEL_25;
      }
      unint64_t v51 = *(void *)(v38 + 8 * v37);
      if (!v51)
      {
        int64_t v37 = v50 + 2;
        if (v50 + 2 >= v42) {
          goto LABEL_25;
        }
        unint64_t v51 = *(void *)(v38 + 8 * v37);
        if (!v51) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v41 = (v51 - 1) & v51;
    unint64_t v44 = __clz(__rbit64(v51)) + (v37 << 6);
LABEL_9:
    unint64_t v45 = *(void *)(*(void *)(v36 + 56) + 8 * v44);
    uint64_t v46 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xA8);
    uint64_t v47 = swift_bridgeObjectRetain();
    uint64_t v48 = (void *)v46(v47);
    uint64_t v49 = sub_1005585B0(v45);

    swift_bridgeObjectRelease();
    sub_1004BA41C(v49);
  }
  int64_t v52 = v50 + 3;
  if (v52 < v42)
  {
    unint64_t v51 = *(void *)(v38 + 8 * v52);
    if (!v51)
    {
      while (1)
      {
        int64_t v37 = v52 + 1;
        if (__OFADD__(v52, 1)) {
          goto LABEL_33;
        }
        if (v37 >= v42) {
          goto LABEL_25;
        }
        unint64_t v51 = *(void *)(v38 + 8 * v37);
        ++v52;
        if (v51) {
          goto LABEL_24;
        }
      }
    }
    int64_t v37 = v52;
    goto LABEL_24;
  }
LABEL_25:
  uint64_t v53 = swift_release();
  uint64_t v54 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v3) + 0xA8))(v53);
  uint64_t v56 = v80;
  uint64_t v55 = v81;
  uint64_t v57 = (uint64_t)v75;
  sub_1005548A4(v80, v81, (uint64_t)v75, v76, (uint64_t)v74, (uint64_t)v83);

  swift_bridgeObjectRelease();
  sub_10044C150(v57, (uint64_t *)&unk_100A468B0);
  uint64_t v58 = v79;
  sub_1004CD250(v56, v79);
  uint64_t v59 = type metadata accessor for SenderKeyAndState(0);
  uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48);
  if (v60(v58, 1, v59) == 1)
  {
    sub_10044C150(v58, (uint64_t *)&unk_100A468B0);
  }
  else
  {
    uint64_t v61 = v78;
    sub_1004CBF18(v58, v78, type metadata accessor for SenderKeyInfo);
    sub_1004CBE50(v58, type metadata accessor for SenderKeyAndState);
    uint64_t v62 = *(void *)(v61 + 16);
    unint64_t v63 = *(void *)(v61 + 24);
    sub_100441FD4(v62, v63);
    sub_1004CBE50(v61, type metadata accessor for SenderKeyInfo);
    Swift::Int v64 = sub_100725B30(0);
    Swift::Int v66 = v65;
    sub_100442248(v62, v63);
    sub_10047B224(&v82, v64, v66);
    swift_bridgeObjectRelease();
  }
  uint64_t v67 = v77;
  sub_1004CD250(v55, v77);
  if (v60(v67, 1, v59) == 1)
  {
    sub_10044C150(v67, (uint64_t *)&unk_100A468B0);
  }
  else
  {
    uint64_t v68 = v78;
    sub_1004CBF18(v67, v78, type metadata accessor for SenderKeyInfo);
    sub_1004CBE50(v67, type metadata accessor for SenderKeyAndState);
    uint64_t v69 = *(void *)(v68 + 16);
    unint64_t v70 = *(void *)(v68 + 24);
    sub_100441FD4(v69, v70);
    sub_1004CBE50(v68, type metadata accessor for SenderKeyInfo);
    Swift::Int v71 = sub_100725B30(0);
    Swift::Int v73 = v72;
    sub_100442248(v69, v70);
    sub_10047B224(&v82, v71, v73);
    swift_bridgeObjectRelease();
  }
  sub_1004BF13C((uint64_t)v84);
  swift_bridgeObjectRelease();
  sub_10044C150(v55, (uint64_t *)&unk_100A468B0);
  sub_10044C150(v56, (uint64_t *)&unk_100A468B0);
}

uint64_t sub_1004BA248(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_100726BA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_100726BA0();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_100726A20();
    swift_bridgeObjectRelease();
    uint64_t *v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_100726BA0();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_100726590();
}

uint64_t sub_1004BA41C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  id v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  id v3 = sub_1004BE840(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

void *sub_1004BA588(uint64_t a1, uint64_t a2)
{
  int64_t v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xA8))();
  id v6 = [v5 decryptingKeyIDsWithSenderURI:a1 receiverURI:a2];

  uint64_t v7 = sub_100726570();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = (unint64_t *)(v7 + 40);
    uint64_t v10 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v11 = *(v9 - 1);
      unint64_t v12 = *v9;
      sub_100441FD4(v11, *v9);
      uint64_t v13 = sub_100725B30(0);
      uint64_t v15 = v14;
      sub_100442248(v11, v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v10 = sub_1004BEBB8(0, v10[2] + 1, 1, v10);
      }
      unint64_t v17 = v10[2];
      unint64_t v16 = v10[3];
      if (v17 >= v16 >> 1) {
        uint64_t v10 = sub_1004BEBB8((void *)(v16 > 1), v17 + 1, 1, v10);
      }
      v9 += 2;
      v10[2] = v17 + 1;
      uint64_t v18 = &v10[2 * v17];
      v18[4] = v13;
      v18[5] = v15;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  return v10;
}

Class sub_1004BA738(void *a1, uint64_t a2, void *a3, void *a4, void (*a5)(id, id))
{
  id v8 = a3;
  id v9 = a4;
  id v10 = a1;
  a5(v8, v9);

  v11.super.Class isa = sub_100726560().super.isa;
  swift_bridgeObjectRelease();

  return v11.super.isa;
}

void *sub_1004BA7D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  id v3 = v1;
  int64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
  int64_t v5 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_100725AC0();
    if (v9 >> 60 == 15) {
      goto LABEL_4;
    }
    uint64_t v10 = v8;
    unint64_t v11 = v9;
    unint64_t v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v3) + 0xA8))();
    char v13 = sub_10055E8EC(v10, v11);

    if (v13)
    {
      sub_10044CE88(v10, v11);
LABEL_4:
      swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v5 = sub_1004BEBB8(0, v5[2] + 1, 1, v5);
    }
    unint64_t v15 = v5[2];
    unint64_t v14 = v5[3];
    if (v15 >= v14 >> 1) {
      int64_t v5 = sub_1004BEBB8((void *)(v14 > 1), v15 + 1, 1, v5);
    }
    v5[2] = v15 + 1;
    unint64_t v16 = &v5[2 * v15];
    v16[4] = v7;
    v16[5] = v6;
    sub_10044CE88(v10, v11);
LABEL_5:
    v4 += 2;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1004BAA00(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))((swift_isaMask & *v3) + 0x338))(a2, a3);
  uint64_t v6 = result;
  uint64_t v22 = *(void *)(result + 16);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v7 = 0;
  uint64_t v8 = a1[2];
  uint64_t v21 = result + 32;
  unint64_t v9 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v7 >= *(void *)(v6 + 16))
    {
      __break(1u);
      goto LABEL_34;
    }
    unint64_t v11 = (uint64_t *)(v21 + 16 * v7);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    if (!v8) {
      goto LABEL_13;
    }
    uint64_t result = a1[4];
    if (result != v12 || a1[5] != v13)
    {
      uint64_t result = sub_100726D20();
      if ((result & 1) == 0)
      {
        if (v8 == 1) {
          goto LABEL_13;
        }
        uint64_t result = a1[6];
        if (result != v12 || a1[7] != v13)
        {
          uint64_t result = sub_100726D20();
          if ((result & 1) == 0) {
            break;
          }
        }
      }
    }
LABEL_4:
    if (++v7 == v22)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v9;
    }
  }
  if (v8 == 2)
  {
LABEL_13:
    swift_bridgeObjectRetain();
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_1004BEBB8(0, v9[2] + 1, 1, v9);
      unint64_t v9 = (void *)result;
    }
    unint64_t v16 = v9[2];
    unint64_t v15 = v9[3];
    if (v16 >= v15 >> 1)
    {
      uint64_t result = (uint64_t)sub_1004BEBB8((void *)(v15 > 1), v16 + 1, 1, v9);
      unint64_t v9 = (void *)result;
    }
    _OWORD v9[2] = v16 + 1;
    uint64_t v10 = &v9[2 * v16];
    v10[4] = v12;
    void v10[5] = v13;
    goto LABEL_4;
  }
  unint64_t v17 = a1 + 9;
  uint64_t v18 = 2;
  while (1)
  {
    uint64_t v19 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    uint64_t result = *(v17 - 1);
    if (result == v12 && *v17 == v13) {
      goto LABEL_4;
    }
    uint64_t result = sub_100726D20();
    if (result) {
      goto LABEL_4;
    }
    v17 += 2;
    ++v18;
    if (v19 == v8) {
      goto LABEL_13;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1004BACE0(void *a1, void *a2)
{
  int64_t v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xA8))();
  LOBYTE(a2) = sub_10055F18C(a1, a2);

  return a2 & 1;
}

uint64_t sub_1004BAE08(uint64_t a1)
{
  id v3 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA8))();
  LOBYTE(a1) = sub_10055F274(a1);

  return a1 & 1;
}

id sub_1004BB084()
{
  return sub_1004BE6B4(type metadata accessor for SenderKeyDistributionManager.SenderKeyURIMismatchMetric);
}

uint64_t sub_1004BB0B0()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    uint64_t v2 = *(uint64_t (**)(void))((swift_isaMask & *Strong) + 0xA8);
    id v3 = (void *)v2();
    sub_1005618D8(0);

    *(void *)(swift_allocObject() + 16) = v1;
    sub_1004D0EE0();
    id v4 = v1;
    sub_100726850();
    swift_release();
    uint64_t v5 = swift_bridgeObjectRelease();
    uint64_t v6 = (void *)((uint64_t (*)(uint64_t))v2)(v5);
    sub_100561E28(0, v7);

    *(void *)(swift_allocObject() + 16) = v4;
    id v8 = v4;
    sub_100726850();

    swift_release();
    swift_bridgeObjectRelease();
  }
  return 0;
}

unint64_t sub_1004BB268(unint64_t a1)
{
  id v3 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0xA8);
  id v4 = (void *)v3();
  unint64_t v5 = sub_1005618D8(a1);

  uint64_t v6 = (void *)v3();
  id v8 = sub_100561E28(a1, v7);
  uint64_t v10 = v9;

  v12._countAndFlagsBits = (uint64_t)v8;
  v12._object = v10;
  sub_1007264C0(v12);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1004BB484()
{
  uint64_t v1 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xA8))();
  uint64_t v2 = sub_10056334C();

  return v2;
}

uint64_t sub_1004BB5A0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  swift_bridgeObjectRetain_n();
  id v13 = a2;
  unint64_t v14 = sub_100725EB0();
  os_log_type_t v15 = sub_1007266E0();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = swift_slowAlloc();
    id v32 = (void *)swift_slowAlloc();
    uint64_t v36 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315906;
    uint64_t v33 = a5;
    uint64_t v34 = a6;
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    uint64_t v35 = a3;
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_100726650();
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    sub_10043E578(v17, v19, &v36);
    sub_100726830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2112;
    id v20 = v13;
    a3 = v35;
    sub_100726830();
    *id v32 = v13;

    *(_WORD *)(v16 + 22) = 2048;
    a5 = v33;
    a6 = v34;
    sub_100726830();
    *(_WORD *)(v16 + 32) = 1024;
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "Processing donated handles: %s fromURI: %@ priority: %ld isInitialDonation: %{BOOL}d", (uint8_t *)v16, 0x26u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v21 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v7) + 0xA8))();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a5;
  *(void *)(v22 + 24) = a6;
  swift_retain();
  sub_10055FD84(a1, v13, a3, (uint64_t)sub_1004CD2B8, v22);
  swift_release();

  uint64_t v23 = swift_bridgeObjectRetain();
  uint64_t v24 = sub_1004BF224(v23);
  swift_bridgeObjectRelease();
  if (qword_100A4FBD8 != -1) {
    swift_once();
  }
  uint64_t v25 = qword_100A53390;
  uint64_t v26 = *(void *)algn_100A53398;
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = v7;
  v27[3] = a1;
  v27[4] = v13;
  id v28 = *(void (**)(void *, id, uint64_t, uint64_t, void (*)(), void *))((swift_isaMask & *v7) + 0x1D0);
  swift_bridgeObjectRetain();
  id v29 = v13;
  int64_t v30 = v7;
  v28(v24, v29, v25, v26, sub_1004CD32C, v27);
  swift_release();
  return swift_release();
}

id sub_1004BBB74(uint64_t a1)
{
  return [*v1 addListener:a1];
}

id sub_1004BBB88(uint64_t a1)
{
  return [*v1 removeListener:a1];
}

id sub_1004BBB9C()
{
  return [*v0 isUnderFirstDataProtectionLock];
}

uint64_t sub_1004BBBC0()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___IDSSenderKeyDistributionManager_firstDataProtectionLockQueue);
  swift_beginAccess();
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 40;
    do
    {
      unint64_t v5 = *(void (**)(uint64_t))(v4 - 8);
      uint64_t v6 = swift_retain();
      v5(v6);
      swift_release();
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  uint64_t *v1 = (uint64_t)_swiftEmptyArrayStorage;
  return swift_bridgeObjectRelease();
}

void *sub_1004BBCD4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  Swift::String v12 = _swiftEmptyArrayStorage;
  sub_100455590(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_10044C6FC(i, (uint64_t)v11);
      if (!swift_dynamicCast()) {
        break;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100455590(0, v3[2] + 1, 1);
        uint64_t v3 = v12;
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1)
      {
        sub_100455590((char *)(v5 > 1), v6 + 1, 1);
        uint64_t v3 = v12;
      }
      v3[2] = v6 + 1;
      uint64_t v7 = &v3[2 * v6];
      v7[4] = v9;
      v7[5] = v10;
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v3;
}

void *sub_1004BBE1C(uint64_t a1)
{
  unint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100726A60();
  if (!v2) {
    return v6;
  }
  for (uint64_t i = a1 + 32; ; i += 32)
  {
    sub_10044C6FC(i, (uint64_t)v5);
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    if (!swift_dynamicCast()) {
      break;
    }
    sub_100726A40();
    sub_100726A70();
    sub_100726A80();
    sub_100726A50();
    if (!--v2) {
      return v6;
    }
  }
  swift_release();

  return 0;
}

uint64_t sub_1004BBFB0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1004AD218(*a1, *a2);
}

Swift::Int sub_1004BBFBC()
{
  return sub_1004BBFC4();
}

Swift::Int sub_1004BBFC4()
{
  return sub_100726E30();
}

Swift::Int sub_1004BC07C()
{
  return sub_100726E30();
}

uint64_t sub_1004BC0E8()
{
  return sub_1004BC0F0();
}

uint64_t sub_1004BC0F0()
{
  sub_100726490();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004BC190()
{
  sub_100726490();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004BC1E4()
{
  return sub_1004BC254();
}

Swift::Int sub_1004BC1EC()
{
  return sub_100726E30();
}

Swift::Int sub_1004BC254()
{
  return sub_100726E30();
}

uint64_t sub_1004BC308@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1004CDC18(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1004BC338@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1004AE464(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1004BC364()
{
  return sub_100726540();
}

uint64_t sub_1004BC3C4()
{
  return sub_100726530();
}

uint64_t sub_1004BC414(char a1)
{
  return *(void *)&aVersion_3[8 * a1];
}

uint64_t sub_1004BC434(char *a1, char *a2)
{
  return sub_1004AD348(*a1, *a2);
}

Swift::Int sub_1004BC440()
{
  return sub_1004BC07C();
}

uint64_t sub_1004BC448()
{
  return sub_1004BC190();
}

Swift::Int sub_1004BC450()
{
  return sub_1004BC1EC();
}

uint64_t sub_1004BC458@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1004CDC64(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

uint64_t sub_1004BC488@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1004BC414(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1004BC4B4()
{
  return sub_1004BC414(*v0);
}

uint64_t sub_1004BC4BC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004CDC64(a1, a2);
  *a3 = result;
  return result;
}

void sub_1004BC4E4(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1004BC4F0(uint64_t a1)
{
  unint64_t v2 = sub_1004CDFAC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004BC52C(uint64_t a1)
{
  unint64_t v2 = sub_1004CDFAC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004BC568(void *a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v16 = a5;
  int v18 = a3;
  uint64_t v8 = sub_100431F80(&qword_100A46900);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8, v10);
  Swift::String v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10044C0F4(a1, a1[3]);
  sub_1004CDFAC();
  sub_100726E60();
  LOBYTE(v17) = 0;
  sub_100726CA0();
  if (!v5)
  {
    uint64_t v13 = a4;
    uint64_t v14 = v16;
    LOBYTE(v17) = v18;
    char v19 = 1;
    sub_1004CE000();
    sub_100726CB0();
    uint64_t v17 = v13;
    char v19 = 2;
    sub_100431F80(&qword_100A46880);
    sub_1004D0930(&qword_100A46918, (unint64_t *)&unk_100A46920);
    sub_100726CB0();
    uint64_t v17 = v14;
    char v19 = 3;
    sub_100431F80(&qword_100A468E0);
    sub_1004D09C4(&qword_100A483A0);
    sub_100726CB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_1004BC7E8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_1004CDCB0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_1004BC81C(void *a1)
{
  return sub_1004BC568(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1004BC840(void **a1, void **a2)
{
  return sub_1004CA804(*a1, a1[1], *a2, a2[1]);
}

Swift::Int sub_1004BC854()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  sub_100726DD0();
  id v3 = [v1 prefixedURI];
  sub_100726430();

  sub_100726490();
  swift_bridgeObjectRelease();
  id v4 = [v2 prefixedURI];
  sub_100726430();

  sub_100726490();
  swift_bridgeObjectRelease();
  return sub_100726E30();
}

uint64_t sub_1004BC924()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  id v3 = [v1 prefixedURI];
  sub_100726430();

  sub_100726490();
  swift_bridgeObjectRelease();
  id v4 = [v2 prefixedURI];
  sub_100726430();

  sub_100726490();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004BC9E4()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  sub_100726DD0();
  id v3 = [v1 prefixedURI];
  sub_100726430();

  sub_100726490();
  swift_bridgeObjectRelease();
  id v4 = [v2 prefixedURI];
  sub_100726430();

  sub_100726490();
  swift_bridgeObjectRelease();
  return sub_100726E30();
}

uint64_t sub_1004BCAB0(char a1)
{
  if (a1) {
    return 0x7265766965636572;
  }
  else {
    return 0x52557265646E6573;
  }
}

uint64_t sub_1004BCAFC()
{
  return sub_1004BCAB0(*v0);
}

uint64_t sub_1004BCB04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004CE0A8(a1, a2);
  *a3 = result;
  return result;
}

void sub_1004BCB2C(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1004BCB38(uint64_t a1)
{
  unint64_t v2 = sub_1004CE054();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004BCB74(uint64_t a1)
{
  unint64_t v2 = sub_1004CE054();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004BCBB0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v13[0] = a4;
  v13[1] = a5;
  uint64_t v7 = sub_100431F80(&qword_100A46930);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7, v9);
  uint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10044C0F4(a1, a1[3]);
  sub_1004CE054();
  sub_100726E60();
  char v15 = 0;
  sub_100726C90();
  if (!v5)
  {
    char v14 = 1;
    sub_100726C90();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
}

uint64_t sub_1004BCD24@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1004CE1AC(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1004BCD54(void *a1)
{
  return sub_1004BCBB0(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1004BCD74(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_100726D20(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_100726D20();
    }
  }
  return result;
}

Swift::Int sub_1004BCE18()
{
  return sub_100726E30();
}

uint64_t sub_1004BCEA0()
{
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_100726490();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004BCF24()
{
  return sub_100726E30();
}

uint64_t sub_1004BCFA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  v14[3] = &type metadata for UnsafeRawBufferPointer;
  v14[4] = &protocol witness table for UnsafeRawBufferPointer;
  v14[0] = a1;
  v14[1] = a2;
  uint64_t v4 = sub_10044C0F4(v14, (uint64_t)&type metadata for UnsafeRawBufferPointer);
  uint64_t v5 = (unsigned char *)*v4;
  if (*v4 && (BOOL v6 = (unsigned char *)v4[1], v7 = v6 - v5, v6 != v5))
  {
    if (v7 <= 14)
    {
      uint64_t v8 = sub_10044D6EC(v5, v6);
      unint64_t v9 = v12 & 0xFFFFFFFFFFFFFFLL;
    }
    else if ((unint64_t)v7 >= 0x7FFFFFFF)
    {
      uint64_t v8 = sub_10044D7B0((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v13 | 0x8000000000000000;
    }
    else
    {
      uint64_t v8 = sub_10044D82C((uint64_t)v5, (uint64_t)v6);
      unint64_t v9 = v11 | 0x4000000000000000;
    }
  }
  else
  {
    uint64_t v8 = 0;
    unint64_t v9 = 0xC000000000000000;
  }
  uint64_t result = sub_10044C6AC((uint64_t)v14);
  *a3 = v8;
  a3[1] = v9;
  return result;
}

uint64_t sub_1004BD074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  uint64_t v15 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v16 = (char *)a9 + *(int *)(v15 + 24);
  uint64_t v17 = sub_100725CC0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 32))(v16, a5, v17);
  char v19 = (void *)((char *)a9 + *(int *)(v15 + 28));
  *char v19 = a6;
  v19[1] = a7;
  id v19[2] = a8;
  void v19[3] = a10;
  return result;
}

uint64_t sub_1004BD128()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[2];
  unint64_t v3 = v1[3];
  sub_100441FD4(v2, v3);
  sub_100725B60();
  sub_100442248(v2, v3);
  uint64_t v4 = *v1;
  unint64_t v5 = v1[1];
  sub_100441FD4(*v1, v5);
  sub_100725B60();
  sub_100442248(v4, v5);
  type metadata accessor for SenderKeyInfo(0);
  sub_100725CC0();
  sub_1004CC294(&qword_100A46938, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1007263E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease_n();
}

unint64_t sub_1004BD278(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x444979656BLL;
      break;
    case 2:
      unint64_t result = 0x4164657461657263;
      break;
    case 3:
      return result;
    default:
      unint64_t result = 0x6174614479656BLL;
      break;
  }
  return result;
}

unint64_t sub_1004BD310()
{
  return sub_1004BD278(*v0);
}

uint64_t sub_1004BD318@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004CE528(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004BD340(uint64_t a1)
{
  unint64_t v2 = sub_1004CE3B4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004BD37C(uint64_t a1)
{
  unint64_t v2 = sub_1004CE3B4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004BD3B8(void *a1)
{
  unint64_t v3 = v1;
  uint64_t v5 = sub_100431F80((uint64_t *)&unk_100A46940);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  unint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10044C0F4(a1, a1[3]);
  sub_1004CE3B4();
  sub_100726E60();
  long long v16 = *v3;
  char v19 = 0;
  sub_10049ECA0();
  sub_100726CB0();
  if (!v2)
  {
    long long v16 = v3[1];
    char v19 = 1;
    sub_100726CB0();
    uint64_t v10 = type metadata accessor for SenderKeyInfo(0);
    LOBYTE(v16) = 2;
    sub_100725CC0();
    sub_1004CC294(&qword_100A46950, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_100726CB0();
    uint64_t v11 = (char *)v3 + *(int *)(v10 + 28);
    long long v12 = *(_OWORD *)v11;
    uint64_t v14 = *((void *)v11 + 2);
    uint64_t v13 = *((void *)v11 + 3);
    long long v16 = v12;
    uint64_t v17 = v14;
    uint64_t v18 = v13;
    char v19 = 3;
    sub_1004CE408();
    sub_100726CB0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
}

Swift::Int sub_1004BD61C()
{
  uint64_t v1 = v0;
  sub_100726DD0();
  uint64_t v2 = v0[2];
  unint64_t v3 = v1[3];
  sub_100441FD4(v2, v3);
  sub_100725B60();
  sub_100442248(v2, v3);
  uint64_t v4 = *v1;
  unint64_t v5 = v1[1];
  sub_100441FD4(*v1, v5);
  sub_100725B60();
  sub_100442248(v4, v5);
  type metadata accessor for SenderKeyInfo(0);
  sub_100725CC0();
  sub_1004CC294(&qword_100A46938, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1007263E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return sub_100726E30();
}

uint64_t sub_1004BD77C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  uint64_t v28 = sub_100725CC0();
  uint64_t v26 = *(void *)(v28 - 8);
  __chkstk_darwin(v28, v3);
  unint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100431F80((uint64_t *)&unk_100A46960);
  uint64_t v27 = *(void *)(v29 - 8);
  __chkstk_darwin(v29, v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SenderKeyInfo(0);
  __chkstk_darwin(v9, v10);
  long long v12 = (_OWORD *)((char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10044C0F4(a1, a1[3]);
  sub_1004CE3B4();
  uint64_t v13 = (uint64_t)v30;
  sub_100726E50();
  if (v13) {
    return sub_10044C6AC((uint64_t)a1);
  }
  uint64_t v23 = v5;
  uint64_t v24 = v9;
  int64_t v30 = a1;
  uint64_t v14 = v28;
  char v34 = 0;
  sub_10049ED64();
  uint64_t v15 = v29;
  sub_100726C50();
  uint64_t v16 = (uint64_t)v12;
  *long long v12 = v31;
  char v34 = 1;
  sub_100726C50();
  v12[1] = v31;
  LOBYTE(v31) = 2;
  sub_1004CC294(&qword_100A46970, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v17 = v23;
  sub_100726C50();
  uint64_t v18 = v24;
  (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v16 + *(int *)(v24 + 24), v17, v14);
  char v34 = 3;
  sub_1004CE45C();
  sub_100726C50();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v8, v15);
  uint64_t v19 = v32;
  uint64_t v20 = v33;
  uint64_t v21 = v16 + *(int *)(v18 + 28);
  *(_OWORD *)uint64_t v21 = v31;
  *(void *)(v21 + 16) = v19;
  *(void *)(v21 + 24) = v20;
  sub_1004CBF18(v16, v25, type metadata accessor for SenderKeyInfo);
  sub_10044C6AC((uint64_t)v30);
  return sub_1004CBE50(v16, type metadata accessor for SenderKeyInfo);
}

uint64_t sub_1004BDC28@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004BD77C(a1, a2);
}

uint64_t sub_1004BDC40(void *a1)
{
  return sub_1004BD3B8(a1);
}

Swift::Int sub_1004BDC64()
{
  uint64_t v1 = v0;
  sub_100726DD0();
  uint64_t v2 = v0[2];
  unint64_t v3 = v1[3];
  sub_100441FD4(v2, v3);
  sub_100725B60();
  sub_100442248(v2, v3);
  uint64_t v4 = *v1;
  unint64_t v5 = v1[1];
  sub_100441FD4(*v1, v5);
  sub_100725B60();
  sub_100442248(v4, v5);
  sub_100725CC0();
  sub_1004CC294(&qword_100A46938, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1007263E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return sub_100726E30();
}

uint64_t sub_1004BDDB8(char a1)
{
  if (a1) {
    return 0x7A696C6169726573;
  }
  else {
    return 0x6F666E4979656BLL;
  }
}

uint64_t sub_1004BDDFC()
{
  return sub_1004BDDB8(*v0);
}

uint64_t sub_1004BDE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1004CE6C8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1004BDE2C(uint64_t a1)
{
  unint64_t v2 = sub_1004CE4B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1004BDE68(uint64_t a1)
{
  unint64_t v2 = sub_1004CE4B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1004BDEA4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100431F80(&qword_100A46980);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10044C0F4(a1, a1[3]);
  sub_1004CE4B0();
  sub_100726E60();
  LOBYTE(v12) = 0;
  type metadata accessor for SenderKeyInfo(0);
  sub_1004CC294((unint64_t *)&unk_100A46920, (void (*)(uint64_t))type metadata accessor for SenderKeyInfo);
  sub_100726CB0();
  if (!v2)
  {
    long long v12 = *(_OWORD *)(v3 + *(int *)(type metadata accessor for SenderKeyAndState(0) + 20));
    v11[15] = 1;
    sub_10049ECA0();
    sub_100726CB0();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v9, v5);
}

uint64_t sub_1004BE070@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = type metadata accessor for SenderKeyInfo(0);
  __chkstk_darwin(v4, v5);
  uint64_t v22 = (uint64_t)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100431F80(&qword_100A46988);
  uint64_t v20 = *(void *)(v7 - 8);
  uint64_t v21 = v7;
  __chkstk_darwin(v7, v8);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SenderKeyAndState(0);
  __chkstk_darwin(v11, v12);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10044C0F4(a1, a1[3]);
  sub_1004CE4B0();
  sub_100726E50();
  if (v2) {
    return sub_10044C6AC((uint64_t)a1);
  }
  uint64_t v15 = (uint64_t)v14;
  uint64_t v16 = v20;
  LOBYTE(v23) = 0;
  sub_1004CC294(&qword_100A468E8, (void (*)(uint64_t))type metadata accessor for SenderKeyInfo);
  uint64_t v17 = v21;
  sub_100726C50();
  sub_1004CBEB0(v22, v15, type metadata accessor for SenderKeyInfo);
  char v24 = 1;
  sub_10049ED64();
  sub_100726C50();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v10, v17);
  *(_OWORD *)(v15 + *(int *)(v11 + 20)) = v23;
  sub_1004CBF18(v15, v19, type metadata accessor for SenderKeyAndState);
  sub_10044C6AC((uint64_t)a1);
  return sub_1004CBE50(v15, type metadata accessor for SenderKeyAndState);
}

uint64_t sub_1004BE38C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1004BE070(a1, a2);
}

uint64_t sub_1004BE3A4(void *a1)
{
  return sub_1004BDEA4(a1);
}

uint64_t sub_1004BE3BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_1004CA430(a1, a2) & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  unint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (uint64_t *)(a2 + v6);
  uint64_t v10 = *v9;
  unint64_t v11 = v9[1];

  return sub_100453588(v7, v8, v10, v11);
}

void sub_1004BE42C()
{
  qword_100A53360 = 0x6C6F6F74736469;
  *(void *)algn_100A53368 = 0xE700000000000000;
}

void sub_1004BE478()
{
  algn_100A53378[5] = 0;
  *(_WORD *)&algn_100A53378[6] = -5120;
}

void sub_1004BE4CC()
{
  qword_100A53380 = 0x6567617373654D69;
  *(void *)algn_100A53388 = 0xEF65766965636552;
}

void sub_1004BE524()
{
  algn_100A53398[7] = -18;
}

void sub_1004BE57C()
{
  qword_100A533A0 = 0x6C6C6F5279654BLL;
  *(void *)algn_100A533A8 = 0xE700000000000000;
}

void sub_1004BE5C8()
{
  qword_100A533B0 = 0x766F63655279654BLL;
  *(void *)algn_100A533B8 = 0xEB00000000797265;
}

id sub_1004BE69C()
{
  return sub_1004BE6B4(type metadata accessor for IDSSenderKeySendContext);
}

id sub_1004BE6B4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, "dealloc");
}

Swift::Int sub_1004BE6F0()
{
  uint64_t v1 = *v0;
  sub_100726DD0();
  sub_100726DE0(v1 + 1);
  return sub_100726E30();
}

void sub_1004BE738()
{
  sub_100726DE0(*v0 + 1);
}

Swift::Int sub_1004BE768()
{
  uint64_t v1 = *v0;
  sub_100726DD0();
  sub_100726DE0(v1 + 1);
  return sub_100726E30();
}

uint64_t sub_1004BE7AC@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1004CE7CC(*a1);
  *a2 = result;
  return result;
}

void sub_1004BE7D8(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

uint64_t sub_1004BE7E8(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1004D07E0();
  unint64_t v5 = sub_1004D0834();

  return Error<>._code.getter(a1, a2, v4, v5);
}

void *sub_1004BE840(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100431F80((uint64_t *)&unk_100A47170);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004CB8B4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004BE950(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80((uint64_t *)&unk_100A46D40);
  uint64_t v10 = *(void *)(type metadata accessor for SenderKeyInfo(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_100726B80();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for SenderKeyInfo(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1004CBB80(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_1004BEBB8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100431F80((uint64_t *)&unk_100A45170);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004CCBE0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1004BECC8(void *a1, void *a2)
{
  sub_100726DD0();
  id v4 = [a1 prefixedURI];
  sub_100726430();

  sub_100726490();
  swift_bridgeObjectRelease();
  id v5 = [a2 prefixedURI];
  sub_100726430();

  sub_100726490();
  swift_bridgeObjectRelease();
  Swift::Int v6 = sub_100726E30();

  return sub_1004BEDC4(a1, a2, v6);
}

unint64_t sub_1004BEDC4(void *a1, void *a2, uint64_t a3)
{
  id v31 = a2;
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a3 & ~v4;
  if ((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v32 = ~v4;
    do
    {
      uint64_t v6 = *(void *)(v3 + 48) + 16 * v5;
      uint64_t v7 = *(void **)(v6 + 8);
      id v8 = *(id *)v6;
      id v9 = v7;
      id v10 = [v8 prefixedURI];
      uint64_t v11 = sub_100726430();
      uint64_t v13 = v12;

      id v14 = [a1 prefixedURI];
      uint64_t v15 = sub_100726430();
      uint64_t v17 = v16;

      if (v11 == v15 && v13 == v17)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v19 = sub_100726D20();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v19 & 1) == 0)
        {

          goto LABEL_4;
        }
      }
      id v20 = objc_msgSend(v9, "prefixedURI", v31);
      uint64_t v21 = sub_100726430();
      uint64_t v23 = v22;

      id v24 = [v31 prefixedURI];
      uint64_t v25 = sub_100726430();
      uint64_t v27 = v26;

      if (v21 == v25 && v23 == v27)
      {

        swift_bridgeObjectRelease_n();
        return v5;
      }
      char v29 = sub_100726D20();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v29) {
        return v5;
      }
LABEL_4:
      unint64_t v5 = (v5 + 1) & v32;
    }
    while (((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

void *sub_1004BEFE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100431F80((uint64_t *)&unk_100A46D40);
  uint64_t v3 = *(void *)(type metadata accessor for SenderKeyInfo(0) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      _OWORD v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = sub_1004C9C10(&v10, (uint64_t)v6 + v5, v1, a1);
      swift_bridgeObjectRetain();
      sub_100462C48();
      if (v9 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_1004BF13C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100431F80((uint64_t *)&unk_100A45170);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 17;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 4);
  uint64_t v6 = sub_1004C9F24((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_100462C48();
  if (v6 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_1004BF224(uint64_t a1)
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_100726920();
    if (v2) {
      goto LABEL_3;
    }
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
LABEL_3:
  if (v2 <= 0)
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  else
  {
    sub_100431F80((uint64_t *)&unk_100A46840);
    uint64_t v3 = (void *)swift_allocObject();
    int64_t v4 = j__malloc_size(v3);
    uint64_t v5 = v4 - 32;
    if (v4 < 32) {
      uint64_t v5 = v4 - 25;
    }
    v3[2] = v2;
    v3[3] = (2 * (v5 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_1004CA124(&v8, v3 + 4, v2, a1);
  uint64_t result = (void *)sub_100462C48();
  if (v6 == (void *)v2) {
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004BF320(void *a1, void *a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1004BECC8(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v14 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1004C002C();
    uint64_t v9 = v14;
  }
  uint64_t v10 = *(void *)(v9 + 48) + 16 * v6;
  uint64_t v11 = *(void **)v10;

  uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1004BFA74(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1004BF3F4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A46DA8);
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    id v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_1007267E0(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1004BF6CC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A46D60);
  char v40 = a2;
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v38 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v37) {
      break;
    }
    unint64_t v24 = v38;
    unint64_t v25 = v38[v23];
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v25 = v38[v13];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = v38[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v37) {
              goto LABEL_33;
            }
            unint64_t v25 = v38[v13];
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = *(void *)(*(void *)(v5 + 56) + 8 * v22);
    long long v41 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v22);
    uint64_t v32 = *(void **)(*(void *)(v5 + 48) + 16 * v22 + 8);
    if ((v40 & 1) == 0)
    {
      id v33 = (id)v41;
      id v34 = v32;
      swift_retain();
    }
    sub_100726DD0();
    id v14 = [(id)v41 prefixedURI];
    sub_100726430();

    sub_100726490();
    swift_bridgeObjectRelease();
    id v15 = [v32 prefixedURI];
    sub_100726430();

    sub_100726490();
    swift_bridgeObjectRelease();
    uint64_t result = sub_100726E30();
    uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v11 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v11 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      long long v20 = v41;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      long long v20 = v41;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v11 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v19) = v20;
    *(void *)(*(void *)(v7 + 56) + 8 * v19) = v31;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v36;
  unint64_t v24 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v24, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v24 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

void sub_1004BFA74(unint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1007268A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      uint64_t v33 = v2;
      uint64_t v34 = v4;
      do
      {
        uint64_t v10 = *(void *)(v2 + 48) + 16 * v6;
        uint64_t v11 = v7;
        uint64_t v12 = *(void **)v10;
        int64_t v13 = *(void **)(v10 + 8);
        unint64_t v14 = v9;
        sub_100726DD0();
        id v15 = v12;
        id v16 = v13;
        id v17 = [v15 prefixedURI];
        sub_100726430();

        sub_100726490();
        swift_bridgeObjectRelease();
        id v18 = [v16 prefixedURI];
        sub_100726430();

        sub_100726490();
        swift_bridgeObjectRelease();
        Swift::Int v19 = sub_100726E30();

        uint64_t v7 = v11;
        unint64_t v9 = v14;
        Swift::Int v20 = v19 & v11;
        if (v3 >= (uint64_t)v14)
        {
          if (v20 < v14)
          {
            uint64_t v2 = v33;
            uint64_t v4 = v34;
          }
          else
          {
            uint64_t v2 = v33;
            uint64_t v4 = v34;
            if (v3 >= v20) {
              goto LABEL_12;
            }
          }
        }
        else
        {
          uint64_t v2 = v33;
          uint64_t v4 = v34;
          if (v20 >= v9 || v3 >= v20)
          {
LABEL_12:
            uint64_t v21 = *(void *)(v2 + 48);
            unint64_t v22 = (_OWORD *)(v21 + 16 * v3);
            int64_t v23 = (_OWORD *)(v21 + 16 * v6);
            if (v3 != v6 || v22 >= v23 + 1) {
              *unint64_t v22 = *v23;
            }
            uint64_t v24 = *(void *)(v2 + 56);
            unint64_t v25 = (void *)(v24 + 8 * v3);
            int64_t v26 = (void *)(v24 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v25 >= v26 + 1))
            {
              *unint64_t v25 = *v26;
              int64_t v3 = v6;
            }
          }
        }
        unint64_t v6 = (v6 + 1) & v11;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    char v27 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v28 = *v27;
    uint64_t v29 = (-1 << v3) - 1;
  }
  else
  {
    char v27 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v29 = *v27;
    uint64_t v28 = (-1 << a1) - 1;
  }
  *char v27 = v29 & v28;
  uint64_t v30 = *(void *)(v2 + 16);
  BOOL v31 = __OFSUB__(v30, 1);
  uint64_t v32 = v30 - 1;
  if (v31)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v32;
    ++*(_DWORD *)(v2 + 36);
  }
}

id sub_1004BFCFC(uint64_t a1, void *a2, void *a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v9 = *v4;
  unint64_t v11 = sub_1004BECC8(a2, a3);
  uint64_t v12 = *(void *)(v9 + 16);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v15 = v10;
  uint64_t v16 = *(void *)(v9 + 24);
  if (v16 >= v14 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v16 >= v14 && (a4 & 1) == 0)
  {
    sub_1004C002C();
LABEL_7:
    id v17 = (void *)*v5;
    if (v15)
    {
LABEL_8:
      uint64_t v18 = v17[7];
      id result = (id)swift_release();
      *(void *)(v18 + 8 * v11) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1004BF6CC(v14, a4 & 1);
  unint64_t v20 = sub_1004BECC8(a2, a3);
  if ((v15 & 1) != (v21 & 1))
  {
LABEL_17:
    id result = (id)sub_100726D40();
    __break(1u);
    return result;
  }
  unint64_t v11 = v20;
  id v17 = (void *)*v5;
  if (v15) {
    goto LABEL_8;
  }
LABEL_11:
  v17[(v11 >> 6) + 8] |= 1 << v11;
  unint64_t v22 = (void *)(v17[6] + 16 * v11);
  *unint64_t v22 = a2;
  v22[1] = a3;
  *(void *)(v17[7] + 8 * v11) = a1;
  uint64_t v23 = v17[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v17[2] = v25;
  id v26 = a2;

  return a3;
}

void *sub_1004BFE80()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A46DA8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    id v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004C002C()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A46D60);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v17);
    long long v24 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v24;
    *(void *)(*(void *)(v4 + 56) + v17) = v18;
    id v19 = (id)v24;
    id v20 = *((id *)&v24 + 1);
    id result = (void *)swift_retain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1004C01F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1004C0218(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1004C0218(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    int64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80((uint64_t *)&unk_100A46D40);
  uint64_t v10 = *(void *)(type metadata accessor for SenderKeyInfo(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  int64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(type metadata accessor for SenderKeyInfo(0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  id v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  int64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_1004C0458(uint64_t *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = *v3;
  sub_100726DD0();
  swift_bridgeObjectRetain();
  sub_100725B60();
  Swift::Int v7 = sub_100726E30();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_116:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)__s1 = *(void *)v81;
    *(void *)uint64_t v81 = 0x8000000000000000;
    sub_100441FD4(a2, a3);
    sub_1004C3804(a2, a3, v9, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v81 = *(void *)__s1;
    swift_bridgeObjectRelease();
    *a1 = a2;
    a1[1] = a3;
    return 1;
  }
  uint64_t v86 = ~v8;
  unint64_t v11 = a3 >> 62;
  BOOL v12 = __OFSUB__(HIDWORD(a2), a2);
  BOOL v84 = v12;
  uint64_t v83 = v6;
  size_t __n = BYTE6(a3);
  uint64_t v85 = v6 + 56;
  uint64_t v79 = (a2 >> 32) - (int)a2;
  uint64_t v80 = a2 >> 32;
  unint64_t v78 = a3;
  while (2)
  {
    int64_t v13 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v9);
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v16 = 0;
    switch(v15 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v14), v14))
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
        }
        uint64_t v16 = HIDWORD(v14) - (int)v14;
LABEL_14:
        sub_100441FD4(v14, v15);
        break;
      case 2uLL:
        uint64_t v18 = *(void *)(v14 + 16);
        uint64_t v17 = *(void *)(v14 + 24);
        uint64_t v16 = v17 - v18;
        if (!__OFSUB__(v17, v18)) {
          goto LABEL_14;
        }
        goto LABEL_120;
      case 3uLL:
        break;
      default:
        uint64_t v16 = BYTE6(v15);
        break;
    }
    size_t v19 = __n;
    switch((int)v11)
    {
      case 1:
        size_t v19 = HIDWORD(a2) - (int)a2;
        if (v84) {
          goto LABEL_121;
        }
        goto LABEL_19;
      case 2:
        uint64_t v21 = *(void *)(a2 + 16);
        uint64_t v20 = *(void *)(a2 + 24);
        BOOL v22 = __OFSUB__(v20, v21);
        size_t v19 = v20 - v21;
        if (!v22) {
          goto LABEL_19;
        }
        goto LABEL_122;
      case 3:
        if (v16) {
          goto LABEL_7;
        }
        goto LABEL_117;
      default:
LABEL_19:
        if (v16 != v19)
        {
LABEL_7:
          sub_100442248(v14, v15);
          goto LABEL_8;
        }
        if (v16 >= 1)
        {
          switch(v15 >> 62)
          {
            case 1uLL:
              if ((int)v14 > v14 >> 32) {
                goto LABEL_123;
              }
              char v27 = (char *)sub_100725910();
              if (!v27) {
                goto LABEL_33;
              }
              uint64_t v28 = sub_100725940();
              if (__OFSUB__((int)v14, v28)) {
                goto LABEL_125;
              }
              v27 += (int)v14 - v28;
LABEL_33:
              sub_100725930();
              uint64_t v10 = v85;
              if (v11)
              {
                if (v11 == 1)
                {
                  if (v80 < (int)a2) {
                    goto LABEL_134;
                  }
                  swift_retain();
                  uint64_t v29 = (char *)sub_100725910();
                  if (v29)
                  {
                    uint64_t v30 = sub_100725940();
                    if (__OFSUB__((int)a2, v30)) {
                      goto LABEL_141;
                    }
                    v29 += (int)a2 - v30;
                  }
                  uint64_t v31 = sub_100725930();
                  size_t v32 = (a2 >> 32) - (int)a2;
                  if (v31 < v79) {
                    size_t v32 = v31;
                  }
                  if (!v27) {
                    goto LABEL_143;
                  }
                  if (!v29) {
                    goto LABEL_144;
                  }
                  int v33 = memcmp(v27, v29, v32);
                  sub_100442248(a2, a3);
                }
                else
                {
                  uint64_t v66 = *(void *)(a2 + 16);
                  uint64_t v65 = *(void *)(a2 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v67 = (char *)sub_100725910();
                  if (v67)
                  {
                    uint64_t v68 = sub_100725940();
                    if (__OFSUB__(v66, v68)) {
                      goto LABEL_140;
                    }
                    v67 += v66 - v68;
                  }
                  BOOL v22 = __OFSUB__(v65, v66);
                  int64_t v69 = v65 - v66;
                  if (v22) {
                    goto LABEL_135;
                  }
                  uint64_t v70 = sub_100725930();
                  if (v70 >= v69) {
                    size_t v71 = v69;
                  }
                  else {
                    size_t v71 = v70;
                  }
                  if (!v27) {
                    goto LABEL_154;
                  }
                  a3 = v78;
                  uint64_t v6 = v83;
                  if (!v67) {
                    goto LABEL_155;
                  }
                  int v33 = memcmp(v27, v67, v71);
                  swift_release();
LABEL_112:
                  swift_release();
                }
                sub_100442248(v14, v15);
LABEL_114:
                uint64_t v10 = v85;
                if (!v33) {
                  goto LABEL_118;
                }
              }
              else
              {
                *(void *)__s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v27) {
                  goto LABEL_153;
                }
                uint64_t v47 = (uint64_t *)__s1;
                uint64_t v46 = v27;
LABEL_99:
                int v45 = memcmp(v46, v47, __n);
LABEL_100:
                sub_100442248(v14, v15);
                if (!v45) {
                  goto LABEL_118;
                }
              }
              break;
            case 2uLL:
              uint64_t v34 = *(void *)(v14 + 16);
              swift_retain();
              swift_retain();
              uint64_t v35 = (char *)sub_100725910();
              if (!v35) {
                goto LABEL_47;
              }
              uint64_t v36 = sub_100725940();
              if (__OFSUB__(v34, v36)) {
                goto LABEL_124;
              }
              v35 += v34 - v36;
LABEL_47:
              sub_100725930();
              uint64_t v6 = v83;
              if (!v11)
              {
                *(void *)__s1 = a2;
                *(_WORD *)&__s1[8] = a3;
                __s1[10] = BYTE2(a3);
                __s1[11] = BYTE3(a3);
                __s1[12] = BYTE4(a3);
                __s1[13] = BYTE5(a3);
                if (!v35) {
                  goto LABEL_150;
                }
                int v33 = memcmp(v35, __s1, __n);
                swift_release();
                goto LABEL_112;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_128;
                }
                swift_retain();
                int64_t v37 = (char *)sub_100725910();
                if (v37)
                {
                  uint64_t v38 = sub_100725940();
                  if (__OFSUB__((int)a2, v38)) {
                    goto LABEL_139;
                  }
                  v37 += (int)a2 - v38;
                }
                uint64_t v39 = sub_100725930();
                size_t v40 = (a2 >> 32) - (int)a2;
                if (v39 < v79) {
                  size_t v40 = v39;
                }
                if (!v35) {
                  goto LABEL_145;
                }
                if (!v37) {
                  goto LABEL_146;
                }
                int v33 = memcmp(v35, v37, v40);
                sub_100442248(a2, a3);
                swift_release();
              }
              else
              {
                uint64_t v59 = *(void *)(a2 + 16);
                uint64_t v77 = *(void *)(a2 + 24);
                swift_retain();
                swift_retain();
                uint64_t v60 = (char *)sub_100725910();
                if (v60)
                {
                  uint64_t v61 = sub_100725940();
                  if (__OFSUB__(v59, v61)) {
                    goto LABEL_138;
                  }
                  v60 += v59 - v61;
                }
                BOOL v22 = __OFSUB__(v77, v59);
                int64_t v62 = v77 - v59;
                if (v22) {
                  goto LABEL_133;
                }
                uint64_t v63 = sub_100725930();
                if (v63 >= v62) {
                  size_t v64 = v62;
                }
                else {
                  size_t v64 = v63;
                }
                if (!v35) {
                  goto LABEL_151;
                }
                a3 = v78;
                if (!v60) {
                  goto LABEL_152;
                }
                int v33 = memcmp(v35, v60, v64);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              sub_100442248(v14, v15);
              uint64_t v6 = v83;
              goto LABEL_114;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v11) {
                goto LABEL_67;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_127;
                }
                sub_100441FD4(a2, a3);
                uint64_t v41 = sub_100725910();
                if (!v41) {
                  goto LABEL_147;
                }
                uint64_t v24 = v41;
                uint64_t v42 = sub_100725940();
                uint64_t v26 = (int)a2 - v42;
                if (__OFSUB__((int)a2, v42)) {
                  goto LABEL_132;
                }
LABEL_63:
                uint64_t v43 = sub_100725930();
                if (v43 >= v79) {
                  size_t v44 = (a2 >> 32) - (int)a2;
                }
                else {
                  size_t v44 = v43;
                }
                int v45 = memcmp(__s1, (const void *)(v24 + v26), v44);
                a3 = v78;
                sub_100442248(a2, v78);
                goto LABEL_100;
              }
              uint64_t v54 = *(void *)(a2 + 16);
              uint64_t v55 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              int64_t v50 = (char *)sub_100725910();
              if (v50)
              {
                uint64_t v56 = sub_100725940();
                if (__OFSUB__(v54, v56)) {
                  goto LABEL_137;
                }
                v50 += v54 - v56;
              }
              BOOL v22 = __OFSUB__(v55, v54);
              int64_t v52 = v55 - v54;
              if (v22) {
                goto LABEL_130;
              }
              uint64_t v53 = sub_100725930();
              if (!v50) {
                goto LABEL_149;
              }
LABEL_79:
              if (v53 >= v52) {
                size_t v57 = v52;
              }
              else {
                size_t v57 = v53;
              }
              int v58 = memcmp(__s1, v50, v57);
              swift_release();
              swift_release();
              sub_100442248(v14, v15);
              uint64_t v6 = v83;
              uint64_t v10 = v85;
              if (!v58) {
                goto LABEL_118;
              }
              break;
            default:
              *(void *)__s1 = v14;
              *(_WORD *)&__s1[8] = v15;
              __s1[10] = BYTE2(v15);
              __s1[11] = BYTE3(v15);
              __s1[12] = BYTE4(v15);
              __s1[13] = BYTE5(v15);
              if (!v11)
              {
LABEL_67:
                uint64_t v88 = a2;
                __int16 v89 = a3;
                char v90 = BYTE2(a3);
                char v91 = BYTE3(a3);
                char v92 = BYTE4(a3);
                char v93 = BYTE5(a3);
                uint64_t v46 = __s1;
                uint64_t v47 = &v88;
                goto LABEL_99;
              }
              if (v11 == 1)
              {
                if (v80 < (int)a2) {
                  goto LABEL_126;
                }
                sub_100441FD4(a2, a3);
                uint64_t v23 = sub_100725910();
                if (!v23)
                {
                  sub_100725930();
                  __break(1u);
LABEL_143:
                  __break(1u);
LABEL_144:
                  __break(1u);
LABEL_145:
                  __break(1u);
LABEL_146:
                  __break(1u);
LABEL_147:
                  sub_100725930();
                  __break(1u);
LABEL_148:
                  __break(1u);
LABEL_149:
                  __break(1u);
LABEL_150:
                  __break(1u);
LABEL_151:
                  __break(1u);
LABEL_152:
                  __break(1u);
LABEL_153:
                  __break(1u);
LABEL_154:
                  __break(1u);
LABEL_155:
                  __break(1u);
                  JUMPOUT(0x1004C0E74);
                }
                uint64_t v24 = v23;
                uint64_t v25 = sub_100725940();
                uint64_t v26 = (int)a2 - v25;
                if (__OFSUB__((int)a2, v25)) {
                  goto LABEL_131;
                }
                goto LABEL_63;
              }
              uint64_t v48 = *(void *)(a2 + 16);
              uint64_t v49 = *(void *)(a2 + 24);
              swift_retain();
              swift_retain();
              int64_t v50 = (char *)sub_100725910();
              if (v50)
              {
                uint64_t v51 = sub_100725940();
                if (__OFSUB__(v48, v51)) {
                  goto LABEL_136;
                }
                v50 += v48 - v51;
              }
              BOOL v22 = __OFSUB__(v49, v48);
              int64_t v52 = v49 - v48;
              if (v22) {
                goto LABEL_129;
              }
              uint64_t v53 = sub_100725930();
              if (!v50) {
                goto LABEL_148;
              }
              goto LABEL_79;
          }
LABEL_8:
          unint64_t v9 = (v9 + 1) & v86;
          if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_116;
          }
          continue;
        }
LABEL_117:
        sub_100442248(v14, v15);
LABEL_118:
        swift_bridgeObjectRelease();
        sub_100442248(a2, a3);
        id v74 = (uint64_t *)(*(void *)(*(void *)v81 + 48) + 16 * v9);
        uint64_t v75 = *v74;
        unint64_t v76 = v74[1];
        *a1 = *v74;
        a1[1] = v76;
        sub_100441FD4(v75, v76);
        return 0;
    }
  }
}

uint64_t sub_1004C0EA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v222 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  uint64_t v218 = (uint64_t)&v209 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8, v10);
  int64_t v13 = (char *)&v209 - v12;
  uint64_t v15 = __chkstk_darwin(v11, v14);
  uint64_t v17 = (char *)&v209 - v16;
  uint64_t v19 = __chkstk_darwin(v15, v18);
  uint64_t v225 = (uint64_t)&v209 - v20;
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v227 = (uint64_t *)((char *)&v209 - v23);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v226 = (uint64_t)&v209 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v30 = (char *)&v209 - v29;
  __chkstk_darwin(v28, v31);
  os_log_type_t v213 = (uint64_t *)((char *)&v209 - v32);
  uint64_t v33 = *v2;
  sub_100726DD0();
  uint64_t v34 = a2[2];
  unint64_t v35 = a2[3];
  swift_bridgeObjectRetain();
  sub_100441FD4(v34, v35);
  sub_100725B60();
  sub_100442248(v34, v35);
  uint64_t v36 = *a2;
  unint64_t v37 = a2[1];
  sub_100441FD4(*a2, v37);
  sub_100725B60();
  sub_100442248(v36, v37);
  sub_100725CC0();
  sub_1004CC294(&qword_100A46938, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1007263E0();
  uint64_t v215 = v6;
  uint64_t v217 = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  Swift::Int v38 = sub_100726E30();
  uint64_t v39 = -1 << *(unsigned char *)(v33 + 32);
  unint64_t v40 = v38 & ~v39;
  uint64_t v224 = v33 + 56;
  if ((*(void *)(v33 + 56 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40))
  {
    uint64_t v210 = v3;
    uint64_t v211 = a1;
    uint64_t v219 = ~v39;
    uint64_t v222 = *(void *)(v222 + 72);
    uint64_t v41 = (uint64_t)v217;
    uint64_t v42 = v218;
    uint64_t v220 = v13;
    uint64_t v221 = v33;
    uint64_t v223 = v17;
    while (1)
    {
      unint64_t v49 = v222 * v40;
      sub_1004CBF18(*(void *)(v33 + 48) + v222 * v40, (uint64_t)v30, type metadata accessor for SenderKeyInfo);
      uint64_t v50 = *((void *)v30 + 2);
      unint64_t v51 = *((void *)v30 + 3);
      uint64_t v52 = *(void *)(v41 + 16);
      unint64_t v53 = *(void *)(v41 + 24);
      uint64_t v54 = 0;
      switch(v51 >> 62)
      {
        case 1uLL:
          LODWORD(v54) = HIDWORD(v50) - v50;
          if (__OFSUB__(HIDWORD(v50), v50))
          {
            __break(1u);
LABEL_254:
            __break(1u);
LABEL_255:
            __break(1u);
LABEL_256:
            __break(1u);
LABEL_257:
            __break(1u);
LABEL_258:
            __break(1u);
LABEL_259:
            __break(1u);
LABEL_260:
            __break(1u);
LABEL_261:
            __break(1u);
LABEL_262:
            __break(1u);
LABEL_263:
            __break(1u);
LABEL_264:
            __break(1u);
LABEL_265:
            __break(1u);
LABEL_266:
            __break(1u);
LABEL_267:
            __break(1u);
LABEL_268:
            __break(1u);
LABEL_269:
            __break(1u);
LABEL_270:
            __break(1u);
LABEL_271:
            __break(1u);
LABEL_272:
            __break(1u);
LABEL_273:
            __break(1u);
LABEL_274:
            __break(1u);
LABEL_275:
            __break(1u);
LABEL_276:
            __break(1u);
LABEL_277:
            __break(1u);
LABEL_278:
            __break(1u);
LABEL_279:
            __break(1u);
LABEL_280:
            __break(1u);
LABEL_281:
            __break(1u);
LABEL_282:
            __break(1u);
LABEL_283:
            __break(1u);
LABEL_284:
            __break(1u);
LABEL_285:
            __break(1u);
LABEL_286:
            __break(1u);
LABEL_287:
            __break(1u);
LABEL_288:
            __break(1u);
LABEL_289:
            __break(1u);
LABEL_290:
            __break(1u);
LABEL_291:
            __break(1u);
LABEL_292:
            __break(1u);
LABEL_293:
            __break(1u);
LABEL_294:
            __break(1u);
LABEL_295:
            __break(1u);
LABEL_296:
            __break(1u);
LABEL_297:
            __break(1u);
LABEL_298:
            __break(1u);
          }
          uint64_t v54 = (int)v54;
          break;
        case 2uLL:
          uint64_t v56 = *(void *)(v50 + 16);
          uint64_t v55 = *(void *)(v50 + 24);
          BOOL v57 = __OFSUB__(v55, v56);
          uint64_t v54 = v55 - v56;
          if (!v57) {
            break;
          }
          goto LABEL_254;
        case 3uLL:
          break;
        default:
          uint64_t v54 = BYTE6(v51);
          break;
      }
      unint64_t v58 = v53 >> 62;
      switch(v53 >> 62)
      {
        case 1uLL:
          LODWORD(v59) = HIDWORD(v52) - v52;
          if (__OFSUB__(HIDWORD(v52), v52)) {
            goto LABEL_256;
          }
          uint64_t v59 = (int)v59;
LABEL_20:
          if (v54 == v59)
          {
            if (v54 < 1)
            {
LABEL_30:
              unint64_t v216 = v49;
              uint64_t v67 = v226;
              sub_1004CBF18((uint64_t)v30, v226, type metadata accessor for SenderKeyInfo);
              size_t v44 = v227;
              sub_1004CBF18(v41, (uint64_t)v227, type metadata accessor for SenderKeyInfo);
              int v45 = (uint64_t *)v67;
LABEL_125:
              uint64_t v124 = *v45;
              unint64_t v125 = v45[1];
              uint64_t v126 = *v44;
              unint64_t v127 = v44[1];
              uint64_t v128 = 0;
              switch(v125 >> 62)
              {
                case 1uLL:
                  LODWORD(v128) = HIDWORD(v124) - v124;
                  if (__OFSUB__(HIDWORD(v124), v124)) {
                    goto LABEL_257;
                  }
                  uint64_t v128 = (int)v128;
                  break;
                case 2uLL:
                  uint64_t v130 = *(void *)(v124 + 16);
                  uint64_t v129 = *(void *)(v124 + 24);
                  BOOL v57 = __OFSUB__(v129, v130);
                  uint64_t v128 = v129 - v130;
                  if (!v57) {
                    break;
                  }
                  goto LABEL_258;
                case 3uLL:
                  break;
                default:
                  uint64_t v128 = BYTE6(v125);
                  break;
              }
              unint64_t v131 = v127 >> 62;
              switch(v127 >> 62)
              {
                case 1uLL:
                  LODWORD(v132) = HIDWORD(v126) - v126;
                  if (__OFSUB__(HIDWORD(v126), v126)) {
                    goto LABEL_260;
                  }
                  uint64_t v132 = (int)v132;
LABEL_137:
                  size_t v44 = v227;
                  if (v128 != v132) {
                    goto LABEL_5;
                  }
                  if (v128 >= 1)
                  {
                    uint64_t v135 = v126;
                    switch(v125 >> 62)
                    {
                      case 1uLL:
                        if ((int)v124 > v124 >> 32) {
                          goto LABEL_274;
                        }
                        sub_100441FD4(*v45, v125);
                        uint64_t v142 = sub_100725910();
                        if (v142)
                        {
                          uint64_t v143 = v142;
                          uint64_t v144 = sub_100725940();
                          if (__OFSUB__((int)v124, v144)) {
                            goto LABEL_282;
                          }
                          uint64_t v214 = (const void *)(v143 + (int)v124 - v144);
                        }
                        else
                        {
                          uint64_t v214 = 0;
                        }
                        uint64_t v41 = (uint64_t)v217;
                        sub_100725930();
                        uint64_t v42 = v218;
                        if (v131)
                        {
                          if (v131 == 1)
                          {
                            if (v135 >> 32 < (int)v135) {
                              goto LABEL_291;
                            }
                            swift_retain();
                            uint64_t v159 = (char *)sub_100725910();
                            if (v159)
                            {
                              uint64_t v160 = sub_100725940();
                              if (__OFSUB__((int)v135, v160)) {
                                goto LABEL_298;
                              }
                              v159 += (int)v135 - v160;
                            }
                            uint64_t v41 = (uint64_t)v217;
                            uint64_t v161 = sub_100725930();
                            if (v161 >= (v135 >> 32) - (int)v135) {
                              size_t v162 = (v135 >> 32) - (int)v135;
                            }
                            else {
                              size_t v162 = v161;
                            }
                            if (!v214) {
                              goto LABEL_315;
                            }
                            uint64_t v42 = v218;
                            if (!v159) {
                              goto LABEL_316;
                            }
                            int v154 = memcmp(v214, v159, v162);
                            sub_100442248(v135, v127);
                          }
                          else
                          {
                            uint64_t v181 = *(void *)(v135 + 16);
                            uint64_t v180 = *(void *)(v135 + 24);
                            swift_retain();
                            swift_retain();
                            uint64_t v182 = sub_100725910();
                            if (v182)
                            {
                              uint64_t v183 = v182;
                              uint64_t v184 = sub_100725940();
                              if (__OFSUB__(v181, v184)) {
                                goto LABEL_297;
                              }
                              uint64_t v185 = (const void *)(v183 + v181 - v184);
                            }
                            else
                            {
                              uint64_t v185 = 0;
                            }
                            BOOL v57 = __OFSUB__(v180, v181);
                            int64_t v193 = v180 - v181;
                            uint64_t v42 = v218;
                            if (v57) {
                              goto LABEL_292;
                            }
                            uint64_t v194 = sub_100725930();
                            if (v194 >= v193) {
                              size_t v195 = v193;
                            }
                            else {
                              size_t v195 = v194;
                            }
                            if (!v214) {
                              goto LABEL_324;
                            }
                            uint64_t v41 = (uint64_t)v217;
                            if (!v185) {
                              goto LABEL_325;
                            }
                            int v154 = memcmp(v214, v185, v195);
                            swift_release();
                            swift_release();
                          }
                        }
                        else
                        {
                          *(void *)__s1 = v135;
                          *(_WORD *)&__s1[8] = v127;
                          __s1[10] = BYTE2(v127);
                          __s1[11] = BYTE3(v127);
                          __s1[12] = BYTE4(v127);
                          __s1[13] = BYTE5(v127);
                          if (!v214) {
                            goto LABEL_317;
                          }
                          int v154 = memcmp(v214, __s1, BYTE6(v127));
                        }
                        sub_100442248(v124, v125);
LABEL_240:
                        uint64_t v48 = (uint64_t)v220;
                        uint64_t v47 = (uint64_t)v223;
                        goto LABEL_241;
                      case 2uLL:
                        uint64_t v145 = *(void *)(v124 + 16);
                        swift_retain();
                        swift_retain();
                        uint64_t v146 = sub_100725910();
                        uint64_t v214 = (const void *)(v125 & 0x3FFFFFFFFFFFFFFFLL);
                        if (v146)
                        {
                          uint64_t v147 = v146;
                          uint64_t v148 = sub_100725940();
                          uint64_t v47 = (uint64_t)v223;
                          if (__OFSUB__(v145, v148)) {
                            goto LABEL_281;
                          }
                          unint64_t v212 = (const void *)(v147 + v145 - v148);
                          uint64_t v41 = (uint64_t)v217;
                        }
                        else
                        {
                          unint64_t v212 = 0;
                          uint64_t v41 = (uint64_t)v217;
                          uint64_t v47 = (uint64_t)v223;
                        }
                        sub_100725930();
                        uint64_t v42 = v218;
                        if (!v131)
                        {
                          *(void *)__s1 = v135;
                          *(_WORD *)&__s1[8] = v127;
                          __s1[10] = BYTE2(v127);
                          __s1[11] = BYTE3(v127);
                          __s1[12] = BYTE4(v127);
                          __s1[13] = BYTE5(v127);
                          if (!v212) {
                            goto LABEL_326;
                          }
                          int v154 = memcmp(v212, __s1, BYTE6(v127));
LABEL_229:
                          swift_release();
                          goto LABEL_230;
                        }
                        if (v131 == 1)
                        {
                          if (v135 >> 32 < (int)v135) {
                            goto LABEL_285;
                          }
                          swift_retain();
                          uint64_t v155 = sub_100725910();
                          if (v155)
                          {
                            uint64_t v156 = v155;
                            uint64_t v157 = sub_100725940();
                            if (__OFSUB__((int)v135, v157)) {
                              goto LABEL_296;
                            }
                            unint64_t v158 = (const void *)(v156 + (int)v135 - v157);
                          }
                          else
                          {
                            unint64_t v158 = 0;
                          }
                          uint64_t v41 = (uint64_t)v217;
                          uint64_t v191 = sub_100725930();
                          if (v191 >= (v135 >> 32) - (int)v135) {
                            size_t v192 = (v135 >> 32) - (int)v135;
                          }
                          else {
                            size_t v192 = v191;
                          }
                          uint64_t v42 = v218;
                          if (!v212) {
                            goto LABEL_322;
                          }
                          uint64_t v47 = (uint64_t)v223;
                          if (!v158) {
                            goto LABEL_323;
                          }
                          int v154 = memcmp(v212, v158, v192);
                          sub_100442248(v135, v127);
                          goto LABEL_229;
                        }
                        uint64_t v174 = *(void *)(v135 + 16);
                        uint64_t v175 = *(void *)(v135 + 24);
                        swift_retain();
                        swift_retain();
                        uint64_t v176 = sub_100725910();
                        if (v176)
                        {
                          uint64_t v177 = v176;
                          uint64_t v178 = sub_100725940();
                          if (__OFSUB__(v174, v178)) {
                            goto LABEL_295;
                          }
                          uint64_t v179 = (const void *)(v177 + v174 - v178);
                        }
                        else
                        {
                          uint64_t v179 = 0;
                        }
                        uint64_t v42 = v218;
                        if (__OFSUB__(v175, v174)) {
                          goto LABEL_290;
                        }
                        uint64_t v189 = sub_100725930();
                        if (v189 >= v175 - v174) {
                          size_t v190 = v175 - v174;
                        }
                        else {
                          size_t v190 = v189;
                        }
                        uint64_t v47 = (uint64_t)v223;
                        if (!v212) {
                          goto LABEL_320;
                        }
                        uint64_t v41 = (uint64_t)v217;
                        if (!v179) {
                          goto LABEL_321;
                        }
                        int v154 = memcmp(v212, v179, v190);
                        swift_release();
                        swift_release();
                        swift_release();
LABEL_230:
                        swift_release();
                        uint64_t v48 = (uint64_t)v220;
LABEL_241:
                        uint64_t v46 = v225;
                        sub_1004CBE50(v226, type metadata accessor for SenderKeyInfo);
                        sub_1004CBE50((uint64_t)v227, type metadata accessor for SenderKeyInfo);
                        sub_1004CBF18((uint64_t)v30, v46, type metadata accessor for SenderKeyInfo);
                        sub_1004CBF18(v41, v47, type metadata accessor for SenderKeyInfo);
                        if (!v154) {
                          goto LABEL_242;
                        }
                        goto LABEL_6;
                      case 3uLL:
                        *(void *)&__s1[6] = 0;
                        *(void *)__s1 = 0;
                        uint64_t v47 = (uint64_t)v223;
                        if (v131)
                        {
                          if (v131 == 1)
                          {
                            uint64_t v149 = (int)v126;
                            uint64_t v137 = (v126 >> 32) - (int)v126;
                            if (v126 >> 32 < (int)v126) {
                              goto LABEL_284;
                            }
                            swift_retain();
                            uint64_t v150 = sub_100725910();
                            if (!v150) {
                              goto LABEL_314;
                            }
                            uint64_t v139 = v150;
                            uint64_t v151 = sub_100725940();
                            uint64_t v141 = v149 - v151;
                            if (__OFSUB__(v149, v151)) {
                              goto LABEL_289;
                            }
LABEL_161:
                            uint64_t v152 = sub_100725930();
                            if (v152 >= v137) {
                              size_t v153 = v137;
                            }
                            else {
                              size_t v153 = v152;
                            }
                            int v154 = memcmp(__s1, (const void *)(v139 + v141), v153);
                            sub_100442248(v135, v127);
                            uint64_t v41 = (uint64_t)v217;
                            uint64_t v42 = v218;
                            uint64_t v48 = (uint64_t)v220;
                          }
                          else
                          {
                            uint64_t v169 = *(void *)(v126 + 16);
                            uint64_t v170 = *(void *)(v126 + 24);
                            swift_retain();
                            swift_retain();
                            uint64_t v171 = sub_100725910();
                            if (v171)
                            {
                              uint64_t v172 = v171;
                              uint64_t v173 = sub_100725940();
                              if (__OFSUB__(v169, v173)) {
                                goto LABEL_294;
                              }
                              uint64_t v168 = (const void *)(v172 + v169 - v173);
                            }
                            else
                            {
                              uint64_t v168 = 0;
                            }
                            int64_t v186 = v170 - v169;
                            uint64_t v42 = v218;
                            if (__OFSUB__(v170, v169)) {
                              goto LABEL_287;
                            }
                            uint64_t v187 = sub_100725930();
                            uint64_t v48 = (uint64_t)v220;
                            if (!v168) {
                              goto LABEL_319;
                            }
LABEL_210:
                            if (v187 >= v186) {
                              size_t v188 = v186;
                            }
                            else {
                              size_t v188 = v187;
                            }
                            int v154 = memcmp(__s1, v168, v188);
                            swift_release();
                            swift_release();
                            uint64_t v41 = (uint64_t)v217;
                          }
                        }
                        else
                        {
                          uint64_t __s2 = v126;
                          __int16 v229 = v127;
                          char v230 = BYTE2(v127);
                          char v231 = BYTE3(v127);
                          char v232 = BYTE4(v127);
                          char v233 = BYTE5(v127);
                          int v154 = memcmp(__s1, &__s2, BYTE6(v127));
                          uint64_t v48 = (uint64_t)v220;
                        }
                        goto LABEL_241;
                      default:
                        *(void *)__s1 = *v45;
                        *(_WORD *)&__s1[8] = v125;
                        __s1[10] = BYTE2(v125);
                        __s1[11] = BYTE3(v125);
                        __s1[12] = BYTE4(v125);
                        __s1[13] = BYTE5(v125);
                        if (!v131)
                        {
                          uint64_t __s2 = v126;
                          __int16 v229 = v127;
                          char v230 = BYTE2(v127);
                          char v231 = BYTE3(v127);
                          char v232 = BYTE4(v127);
                          char v233 = BYTE5(v127);
                          int v154 = memcmp(__s1, &__s2, BYTE6(v127));
                          goto LABEL_240;
                        }
                        uint64_t v47 = (uint64_t)v223;
                        if (v131 == 1)
                        {
                          uint64_t v136 = (int)v126;
                          uint64_t v137 = (v126 >> 32) - (int)v126;
                          if (v126 >> 32 < (int)v126) {
                            goto LABEL_283;
                          }
                          swift_retain();
                          uint64_t v138 = sub_100725910();
                          if (!v138) {
                            goto LABEL_313;
                          }
                          uint64_t v139 = v138;
                          uint64_t v140 = sub_100725940();
                          uint64_t v141 = v136 - v140;
                          if (__OFSUB__(v136, v140)) {
                            goto LABEL_288;
                          }
                          goto LABEL_161;
                        }
                        uint64_t v163 = *(void *)(v126 + 16);
                        uint64_t v164 = *(void *)(v126 + 24);
                        swift_retain();
                        swift_retain();
                        uint64_t v165 = sub_100725910();
                        if (v165)
                        {
                          uint64_t v166 = v165;
                          uint64_t v167 = sub_100725940();
                          if (__OFSUB__(v163, v167)) {
                            goto LABEL_293;
                          }
                          uint64_t v168 = (const void *)(v166 + v163 - v167);
                        }
                        else
                        {
                          uint64_t v168 = 0;
                        }
                        int64_t v186 = v164 - v163;
                        uint64_t v42 = v218;
                        if (__OFSUB__(v164, v163)) {
                          goto LABEL_286;
                        }
                        uint64_t v187 = sub_100725930();
                        uint64_t v48 = (uint64_t)v220;
                        if (!v168) {
                          goto LABEL_318;
                        }
                        goto LABEL_210;
                    }
                  }
LABEL_148:
                  sub_1004CBE50((uint64_t)v45, type metadata accessor for SenderKeyInfo);
                  sub_1004CBE50((uint64_t)v44, type metadata accessor for SenderKeyInfo);
                  uint64_t v46 = v225;
                  sub_1004CBF18((uint64_t)v30, v225, type metadata accessor for SenderKeyInfo);
                  uint64_t v47 = (uint64_t)v223;
                  sub_1004CBF18(v41, (uint64_t)v223, type metadata accessor for SenderKeyInfo);
                  uint64_t v48 = (uint64_t)v220;
LABEL_242:
                  char v196 = sub_100725C60();
                  sub_1004CBE50(v47, type metadata accessor for SenderKeyInfo);
                  sub_1004CBE50(v46, type metadata accessor for SenderKeyInfo);
                  sub_1004CBF18((uint64_t)v30, v48, type metadata accessor for SenderKeyInfo);
                  uint64_t v42 = v218;
                  sub_1004CBF18(v41, v218, type metadata accessor for SenderKeyInfo);
                  if ((v196 & 1) == 0) {
                    goto LABEL_7;
                  }
                  uint64_t v197 = *(int *)(v215 + 28);
                  uint64_t v198 = *(void *)(v48 + v197);
                  uint64_t v199 = *(void *)(v48 + v197 + 8);
                  uint64_t v200 = *(void *)(v48 + v197 + 16);
                  uint64_t v201 = *(void *)(v48 + v197 + 24);
                  os_log_type_t v202 = (void *)(v42 + v197);
                  uint64_t v203 = v202[2];
                  uint64_t v204 = v202[3];
                  if ((v198 != *v202 || v199 != v202[1]) && (sub_100726D20() & 1) == 0) {
                    goto LABEL_7;
                  }
                  if ((v200 != v203 || v201 != v204) && (sub_100726D20() & 1) == 0) {
                    goto LABEL_7;
                  }
                  sub_1004CBE50(v48, type metadata accessor for SenderKeyInfo);
                  sub_1004CBE50(v42, type metadata accessor for SenderKeyInfo);
                  sub_1004CBE50((uint64_t)v30, type metadata accessor for SenderKeyInfo);
                  swift_bridgeObjectRelease();
                  sub_1004CBE50(v41, type metadata accessor for SenderKeyInfo);
                  sub_1004CBF18(*(void *)(*v210 + 48) + v216, v211, type metadata accessor for SenderKeyInfo);
                  uint64_t result = 0;
                  break;
                case 2uLL:
                  uint64_t v134 = *(void *)(v126 + 16);
                  uint64_t v133 = *(void *)(v126 + 24);
                  BOOL v57 = __OFSUB__(v133, v134);
                  uint64_t v132 = v133 - v134;
                  if (!v57) {
                    goto LABEL_137;
                  }
                  goto LABEL_259;
                case 3uLL:
                  if (!v128) {
                    goto LABEL_148;
                  }
                  goto LABEL_5;
                default:
                  uint64_t v132 = BYTE6(v127);
                  goto LABEL_137;
              }
              return result;
            }
            unint64_t v216 = v49;
            switch(v51 >> 62)
            {
              case 1uLL:
                if ((int)v50 > v50 >> 32) {
                  goto LABEL_261;
                }
                sub_100441FD4(v50, v51);
                uint64_t v68 = sub_100725910();
                if (v68)
                {
                  uint64_t v69 = v68;
                  uint64_t v70 = sub_100725940();
                  if (__OFSUB__((int)v50, v70)) {
                    goto LABEL_263;
                  }
                  uint64_t v214 = (const void *)(v69 + (int)v50 - v70);
                }
                else
                {
                  uint64_t v214 = 0;
                }
                sub_100725930();
                uint64_t v41 = (uint64_t)v217;
                uint64_t v42 = v218;
                if (v58)
                {
                  if (v58 == 1)
                  {
                    if (v52 >> 32 < (int)v52) {
                      goto LABEL_272;
                    }
                    swift_retain();
                    uint64_t v86 = (char *)sub_100725910();
                    if (v86)
                    {
                      uint64_t v87 = sub_100725940();
                      if (__OFSUB__((int)v52, v87)) {
                        goto LABEL_280;
                      }
                      v86 += (int)v52 - v87;
                    }
                    uint64_t v41 = (uint64_t)v217;
                    uint64_t v88 = sub_100725930();
                    if (v88 >= (v52 >> 32) - (int)v52) {
                      size_t v89 = (v52 >> 32) - (int)v52;
                    }
                    else {
                      size_t v89 = v88;
                    }
                    if (!v214) {
                      goto LABEL_301;
                    }
                    uint64_t v42 = v218;
                    if (!v86) {
                      goto LABEL_302;
                    }
                    int v81 = memcmp(v214, v86, v89);
                    sub_100442248(v52, v53);
                  }
                  else
                  {
                    uint64_t v109 = *(void *)(v52 + 16);
                    uint64_t v108 = *(void *)(v52 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v110 = sub_100725910();
                    if (v110)
                    {
                      uint64_t v111 = v110;
                      uint64_t v112 = sub_100725940();
                      if (__OFSUB__(v109, v112)) {
                        goto LABEL_279;
                      }
                      os_log_type_t v113 = (const void *)(v111 + v109 - v112);
                    }
                    else
                    {
                      os_log_type_t v113 = 0;
                    }
                    BOOL v57 = __OFSUB__(v108, v109);
                    int64_t v120 = v108 - v109;
                    uint64_t v42 = v218;
                    if (v57) {
                      goto LABEL_273;
                    }
                    uint64_t v121 = sub_100725930();
                    if (v121 >= v120) {
                      size_t v122 = v120;
                    }
                    else {
                      size_t v122 = v121;
                    }
                    if (!v214) {
                      goto LABEL_311;
                    }
                    uint64_t v41 = (uint64_t)v217;
                    if (!v113) {
                      goto LABEL_312;
                    }
                    int v81 = memcmp(v214, v113, v122);
                    swift_release();
                    swift_release();
                  }
                }
                else
                {
                  *(void *)__s1 = v52;
                  *(_WORD *)&__s1[8] = v53;
                  __s1[10] = BYTE2(v53);
                  __s1[11] = BYTE3(v53);
                  __s1[12] = BYTE4(v53);
                  __s1[13] = BYTE5(v53);
                  if (!v214) {
                    goto LABEL_305;
                  }
                  int v81 = memcmp(v214, __s1, BYTE6(v53));
                }
                sub_100442248(v50, v51);
                goto LABEL_124;
              case 2uLL:
                size_t v71 = (const void *)(v51 & 0x3FFFFFFFFFFFFFFFLL);
                uint64_t v72 = *(void *)(v50 + 16);
                swift_retain();
                swift_retain();
                uint64_t v73 = sub_100725910();
                if (v73)
                {
                  uint64_t v74 = v73;
                  uint64_t v75 = sub_100725940();
                  if (__OFSUB__(v72, v75)) {
                    goto LABEL_262;
                  }
                  unint64_t v76 = (const void *)(v74 + v72 - v75);
                }
                else
                {
                  unint64_t v76 = 0;
                }
                sub_100725930();
                uint64_t v41 = (uint64_t)v217;
                uint64_t v42 = v218;
                if (!v58)
                {
                  *(void *)__s1 = v52;
                  *(_WORD *)&__s1[8] = v53;
                  __s1[10] = BYTE2(v53);
                  __s1[11] = BYTE3(v53);
                  __s1[12] = BYTE4(v53);
                  __s1[13] = BYTE5(v53);
                  if (!v76) {
                    goto LABEL_304;
                  }
                  int v81 = memcmp(v76, __s1, BYTE6(v53));
LABEL_113:
                  swift_release();
                  goto LABEL_114;
                }
                uint64_t v214 = v76;
                unint64_t v212 = v71;
                if (v58 == 1)
                {
                  if (v52 >> 32 < (int)v52) {
                    goto LABEL_266;
                  }
                  swift_retain();
                  uint64_t v82 = sub_100725910();
                  if (v82)
                  {
                    uint64_t v83 = v82;
                    uint64_t v84 = sub_100725940();
                    if (__OFSUB__((int)v52, v84)) {
                      goto LABEL_278;
                    }
                    uint64_t v85 = (const void *)(v83 + (int)v52 - v84);
                  }
                  else
                  {
                    uint64_t v85 = 0;
                  }
                  uint64_t v118 = sub_100725930();
                  if (v118 >= (v52 >> 32) - (int)v52) {
                    size_t v119 = (v52 >> 32) - (int)v52;
                  }
                  else {
                    size_t v119 = v118;
                  }
                  uint64_t v42 = v218;
                  if (!v214) {
                    goto LABEL_309;
                  }
                  if (!v85) {
                    goto LABEL_310;
                  }
                  int v81 = memcmp(v214, v85, v119);
                  sub_100442248(v52, v53);
                  goto LABEL_113;
                }
                uint64_t v102 = *(void *)(v52 + 16);
                uint64_t v103 = *(void *)(v52 + 24);
                swift_retain();
                swift_retain();
                uint64_t v104 = sub_100725910();
                if (v104)
                {
                  uint64_t v105 = v104;
                  uint64_t v106 = sub_100725940();
                  if (__OFSUB__(v102, v106)) {
                    goto LABEL_277;
                  }
                  id v107 = (const void *)(v105 + v102 - v106);
                }
                else
                {
                  id v107 = 0;
                }
                uint64_t v42 = v218;
                if (__OFSUB__(v103, v102)) {
                  goto LABEL_271;
                }
                uint64_t v116 = sub_100725930();
                if (v116 >= v103 - v102) {
                  size_t v117 = v103 - v102;
                }
                else {
                  size_t v117 = v116;
                }
                if (!v214) {
                  goto LABEL_307;
                }
                uint64_t v41 = (uint64_t)v217;
                if (!v107) {
                  goto LABEL_308;
                }
                int v81 = memcmp(v214, v107, v117);
                swift_release();
                swift_release();
                swift_release();
LABEL_114:
                swift_release();
LABEL_124:
                uint64_t v123 = v226;
                sub_1004CBF18((uint64_t)v30, v226, type metadata accessor for SenderKeyInfo);
                size_t v44 = v227;
                sub_1004CBF18(v41, (uint64_t)v227, type metadata accessor for SenderKeyInfo);
                int v45 = (uint64_t *)v123;
                if (!v81) {
                  goto LABEL_125;
                }
                break;
              case 3uLL:
                *(void *)&__s1[6] = 0;
                *(void *)__s1 = 0;
                if (!v58) {
                  goto LABEL_47;
                }
                if (v58 == 1)
                {
                  uint64_t v62 = (v52 >> 32) - (int)v52;
                  if (v52 >> 32 < (int)v52) {
                    goto LABEL_265;
                  }
                  swift_retain();
                  uint64_t v77 = sub_100725910();
                  if (!v77) {
                    goto LABEL_300;
                  }
                  uint64_t v64 = v77;
                  uint64_t v78 = sub_100725940();
                  uint64_t v66 = (int)v52 - v78;
                  if (__OFSUB__((int)v52, v78)) {
                    goto LABEL_270;
                  }
                  goto LABEL_43;
                }
                uint64_t v96 = *(void *)(v52 + 16);
                uint64_t v97 = *(void *)(v52 + 24);
                swift_retain();
                swift_retain();
                int64_t v98 = (char *)sub_100725910();
                if (v98)
                {
                  uint64_t v99 = sub_100725940();
                  if (__OFSUB__(v96, v99)) {
                    goto LABEL_276;
                  }
                  v98 += v96 - v99;
                }
                if (__OFSUB__(v97, v96)) {
                  goto LABEL_267;
                }
                uint64_t v100 = sub_100725930();
                if (!v98) {
                  goto LABEL_303;
                }
                if (v100 >= v97 - v96) {
                  size_t v101 = v97 - v96;
                }
                else {
                  size_t v101 = v100;
                }
                int v81 = memcmp(__s1, v98, v101);
                swift_release();
                swift_release();
                goto LABEL_80;
              default:
                *(void *)__s1 = v50;
                *(_WORD *)&__s1[8] = v51;
                __s1[10] = BYTE2(v51);
                __s1[11] = BYTE3(v51);
                __s1[12] = BYTE4(v51);
                __s1[13] = BYTE5(v51);
                if (v58)
                {
                  if (v58 == 1)
                  {
                    uint64_t v62 = (v52 >> 32) - (int)v52;
                    if (v52 >> 32 < (int)v52) {
                      goto LABEL_264;
                    }
                    swift_retain();
                    uint64_t v63 = sub_100725910();
                    if (!v63)
                    {
                      sub_100725930();
                      __break(1u);
LABEL_300:
                      sub_100725930();
                      __break(1u);
LABEL_301:
                      __break(1u);
LABEL_302:
                      __break(1u);
LABEL_303:
                      __break(1u);
LABEL_304:
                      __break(1u);
LABEL_305:
                      __break(1u);
LABEL_306:
                      __break(1u);
LABEL_307:
                      __break(1u);
LABEL_308:
                      __break(1u);
LABEL_309:
                      __break(1u);
LABEL_310:
                      __break(1u);
LABEL_311:
                      __break(1u);
LABEL_312:
                      __break(1u);
LABEL_313:
                      sub_100725930();
                      __break(1u);
LABEL_314:
                      sub_100725930();
                      __break(1u);
LABEL_315:
                      __break(1u);
LABEL_316:
                      __break(1u);
LABEL_317:
                      __break(1u);
LABEL_318:
                      __break(1u);
LABEL_319:
                      __break(1u);
LABEL_320:
                      __break(1u);
LABEL_321:
                      __break(1u);
LABEL_322:
                      __break(1u);
LABEL_323:
                      __break(1u);
LABEL_324:
                      __break(1u);
LABEL_325:
                      __break(1u);
LABEL_326:
                      __break(1u);
                      JUMPOUT(0x1004C292CLL);
                    }
                    uint64_t v64 = v63;
                    uint64_t v65 = sub_100725940();
                    uint64_t v66 = (int)v52 - v65;
                    if (__OFSUB__((int)v52, v65)) {
                      goto LABEL_269;
                    }
LABEL_43:
                    uint64_t v79 = sub_100725930();
                    if (v79 >= v62) {
                      size_t v80 = v62;
                    }
                    else {
                      size_t v80 = v79;
                    }
                    int v81 = memcmp(__s1, (const void *)(v64 + v66), v80);
                    sub_100442248(v52, v53);
LABEL_80:
                    uint64_t v41 = (uint64_t)v217;
                    uint64_t v42 = v218;
                  }
                  else
                  {
                    uint64_t v90 = *(void *)(v52 + 16);
                    uint64_t v91 = *(void *)(v52 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v92 = sub_100725910();
                    if (v92)
                    {
                      uint64_t v93 = v92;
                      uint64_t v94 = sub_100725940();
                      if (__OFSUB__(v90, v94)) {
                        goto LABEL_275;
                      }
                      long long v95 = (const void *)(v93 + v90 - v94);
                    }
                    else
                    {
                      long long v95 = 0;
                    }
                    uint64_t v42 = v218;
                    if (__OFSUB__(v91, v90)) {
                      goto LABEL_268;
                    }
                    uint64_t v114 = sub_100725930();
                    if (!v95) {
                      goto LABEL_306;
                    }
                    if (v114 >= v91 - v90) {
                      size_t v115 = v91 - v90;
                    }
                    else {
                      size_t v115 = v114;
                    }
                    int v81 = memcmp(__s1, v95, v115);
                    swift_release();
                    swift_release();
                    uint64_t v41 = (uint64_t)v217;
                  }
                }
                else
                {
LABEL_47:
                  uint64_t __s2 = v52;
                  __int16 v229 = v53;
                  char v230 = BYTE2(v53);
                  char v231 = BYTE3(v53);
                  char v232 = BYTE4(v53);
                  char v233 = BYTE5(v53);
                  int v81 = memcmp(__s1, &__s2, BYTE6(v53));
                }
                goto LABEL_124;
            }
          }
          else
          {
LABEL_4:
            uint64_t v43 = v226;
            sub_1004CBF18((uint64_t)v30, v226, type metadata accessor for SenderKeyInfo);
            size_t v44 = v227;
            sub_1004CBF18(v41, (uint64_t)v227, type metadata accessor for SenderKeyInfo);
            int v45 = (uint64_t *)v43;
          }
LABEL_5:
          sub_1004CBE50((uint64_t)v45, type metadata accessor for SenderKeyInfo);
          sub_1004CBE50((uint64_t)v44, type metadata accessor for SenderKeyInfo);
          uint64_t v46 = v225;
          sub_1004CBF18((uint64_t)v30, v225, type metadata accessor for SenderKeyInfo);
          uint64_t v47 = (uint64_t)v223;
          sub_1004CBF18(v41, (uint64_t)v223, type metadata accessor for SenderKeyInfo);
          uint64_t v48 = (uint64_t)v220;
LABEL_6:
          sub_1004CBE50(v47, type metadata accessor for SenderKeyInfo);
          sub_1004CBE50(v46, type metadata accessor for SenderKeyInfo);
          sub_1004CBF18((uint64_t)v30, v48, type metadata accessor for SenderKeyInfo);
          sub_1004CBF18(v41, v42, type metadata accessor for SenderKeyInfo);
LABEL_7:
          sub_1004CBE50(v48, type metadata accessor for SenderKeyInfo);
          sub_1004CBE50(v42, type metadata accessor for SenderKeyInfo);
          sub_1004CBE50((uint64_t)v30, type metadata accessor for SenderKeyInfo);
          unint64_t v40 = (v40 + 1) & v219;
          uint64_t v33 = v221;
          if (((*(void *)(v224 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v40) & 1) == 0)
          {
            swift_bridgeObjectRelease();
            a1 = v211;
            uint64_t v3 = v210;
            goto LABEL_252;
          }
          break;
        case 2uLL:
          uint64_t v61 = *(void *)(v52 + 16);
          uint64_t v60 = *(void *)(v52 + 24);
          BOOL v57 = __OFSUB__(v60, v61);
          uint64_t v59 = v60 - v61;
          if (!v57) {
            goto LABEL_20;
          }
          goto LABEL_255;
        case 3uLL:
          if (v54) {
            goto LABEL_4;
          }
          goto LABEL_30;
        default:
          uint64_t v59 = BYTE6(v53);
          goto LABEL_20;
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_252:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v207 = (uint64_t)v217;
  unint64_t v208 = v213;
  sub_1004CBF18((uint64_t)v217, (uint64_t)v213, type metadata accessor for SenderKeyInfo);
  *(void *)__s1 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  sub_1004C4228(v208, v40, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = *(void *)__s1;
  swift_bridgeObjectRelease();
  sub_1004CBEB0(v207, a1, type metadata accessor for SenderKeyInfo);
  return 1;
}

uint64_t sub_1004C298C(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v8 = a2;
    uint64_t v9 = sub_100726930();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_100462C50(0, &qword_100A46860);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v27;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_100726920();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int v22 = sub_1004C2C2C(v7, result + 1);
    uint64_t v28 = (void *)v22;
    if (*(void *)(v22 + 24) <= *(void *)(v22 + 16))
    {
      id v26 = v8;
      sub_1004C3374();
      uint64_t v23 = v28;
    }
    else
    {
      uint64_t v23 = (void *)v22;
      id v24 = v8;
    }
    sub_10046A394((uint64_t)v8, v23);
    *uint64_t v3 = (uint64_t)v23;
  }
  else
  {
    Swift::Int v11 = *(void *)(v6 + 40);
    swift_bridgeObjectRetain();
    Swift::Int v12 = sub_1007267E0(v11);
    uint64_t v13 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v14 = v12 & ~v13;
    if ((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      sub_100462C50(0, &qword_100A46860);
      id v15 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
      char v16 = sub_1007267F0();

      if (v16)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v20 = *(void **)(*(void *)(*v3 + 48) + 8 * v14);
        *a1 = v20;
        id v21 = v20;
        return 0;
      }
      uint64_t v17 = ~v13;
      while (1)
      {
        unint64_t v14 = (v14 + 1) & v17;
        if (((*(void *)(v6 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) == 0) {
          break;
        }
        id v18 = *(id *)(*(void *)(v6 + 48) + 8 * v14);
        char v19 = sub_1007267F0();

        if (v19) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v29 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    id v8 = a2;
    sub_1004C5CA8((uint64_t)v8, v14, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v29;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

Swift::Int sub_1004C2C2C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100431F80(&qword_100A46D80);
    uint64_t v2 = sub_1007269D0();
    uint64_t v14 = v2;
    sub_1007268E0();
    if (sub_100726950())
    {
      sub_100462C50(0, &qword_100A46860);
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1004C3374();
          uint64_t v2 = v14;
        }
        Swift::Int result = sub_1007267E0(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_100726950());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

uint64_t sub_1004C2E24()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100431F80(&qword_100A48620);
  uint64_t v3 = sub_1007269C0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_100726DD0();
      sub_100725B60();
      uint64_t result = sub_100726E30();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *uint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1004C3104()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v4);
  uint64_t v6 = (uint64_t *)((char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *v0;
  sub_100431F80(&qword_100A46D68);
  uint64_t v8 = sub_1007269C0();
  if (*(void *)(v7 + 16))
  {
    uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
    unint64_t v10 = (void *)(v7 + 56);
    uint64_t v11 = -1;
    if (v9 < 64) {
      uint64_t v11 = ~(-1 << v9);
    }
    unint64_t v12 = v11 & *(void *)(v7 + 56);
    int64_t v13 = (unint64_t)(v9 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v15 << 6);
      }
      else
      {
        int64_t v18 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
          __break(1u);
LABEL_28:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_22;
        }
        unint64_t v19 = v10[v18];
        ++v15;
        if (!v19)
        {
          int64_t v15 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_22;
          }
          unint64_t v19 = v10[v15];
          if (!v19)
          {
            int64_t v15 = v18 + 2;
            if (v18 + 2 >= v13) {
              goto LABEL_22;
            }
            unint64_t v19 = v10[v15];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v13)
              {
LABEL_22:
                swift_release();
                uint64_t v21 = 1 << *(unsigned char *)(v7 + 32);
                if (v21 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v10 = -1 << v21;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v19 = v10[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v15 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_28;
                  }
                  if (v15 >= v13) {
                    goto LABEL_22;
                  }
                  unint64_t v19 = v10[v15];
                  ++v20;
                  if (v19) {
                    goto LABEL_21;
                  }
                }
              }
              int64_t v15 = v20;
            }
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
      }
      sub_1004CBEB0(*(void *)(v7 + 48) + *(void *)(v3 + 72) * v17, (uint64_t)v6, type metadata accessor for SenderKeyInfo);
      uint64_t result = sub_1004C3614(v6, v8);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v8;
  return result;
}

uint64_t sub_1004C3374()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100431F80(&qword_100A46D80);
  uint64_t v3 = sub_1007269C0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v28 = v0;
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v28;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
      uint64_t result = sub_1007267E0(*(void *)(v4 + 40));
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v4 + 48) + 8 * v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_1004C3614(uint64_t *a1, uint64_t a2)
{
  sub_100726DD0();
  uint64_t v4 = a1[2];
  unint64_t v5 = a1[3];
  sub_100441FD4(v4, v5);
  sub_100725B60();
  sub_100442248(v4, v5);
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  sub_100441FD4(*a1, v7);
  sub_100725B60();
  sub_100442248(v6, v7);
  uint64_t v8 = type metadata accessor for SenderKeyInfo(0);
  sub_100725CC0();
  sub_1004CC294(&qword_100A46938, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1007263E0();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRetain();
  sub_100726490();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  sub_100726E30();
  unint64_t v9 = sub_1007268C0();
  *(void *)(a2 + 56 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
  uint64_t result = sub_1004CBEB0((uint64_t)a1, *(void *)(a2 + 48) + *(void *)(*(void *)(v8 - 8) + 72) * v9, type metadata accessor for SenderKeyInfo);
  ++*(void *)(a2 + 16);
  return result;
}

Swift::Int sub_1004C3804(Swift::Int result, unint64_t a2, unint64_t a3, char a4)
{
  unint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 <= v9 || (a4 & 1) == 0)
  {
    if (a4)
    {
      sub_1004C2E24();
    }
    else
    {
      if (v10 > v9)
      {
        uint64_t result = (Swift::Int)sub_1004C5E30();
        goto LABEL_123;
      }
      sub_1004C6400();
    }
    uint64_t v11 = *v4;
    sub_100726DD0();
    sub_100725B60();
    uint64_t result = sub_100726E30();
    uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
    a3 = result & ~v12;
    uint64_t v13 = v11 + 56;
    if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
    {
      uint64_t v88 = ~v12;
      uint64_t v84 = v11;
      uint64_t v86 = v11 + 56;
      BOOL v14 = __OFSUB__(HIDWORD(v8), v8);
      BOOL v85 = v14;
      unint64_t v87 = a2 >> 62;
      uint64_t v82 = (v8 >> 32) - (int)v8;
      uint64_t v83 = v8 >> 32;
      int v81 = v4;
      while (1)
      {
        unint64_t v15 = (uint64_t *)(*(void *)(v11 + 48) + 16 * a3);
        uint64_t v17 = *v15;
        unint64_t v16 = v15[1];
        uint64_t v18 = 0;
        switch(v16 >> 62)
        {
          case 1uLL:
            if (__OFSUB__(HIDWORD(v17), v17))
            {
              __break(1u);
LABEL_126:
              __break(1u);
LABEL_127:
              __break(1u);
LABEL_128:
              __break(1u);
LABEL_129:
              __break(1u);
LABEL_130:
              __break(1u);
LABEL_131:
              __break(1u);
LABEL_132:
              __break(1u);
LABEL_133:
              __break(1u);
LABEL_134:
              __break(1u);
LABEL_135:
              __break(1u);
LABEL_136:
              __break(1u);
LABEL_137:
              __break(1u);
LABEL_138:
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
LABEL_141:
              __break(1u);
LABEL_142:
              __break(1u);
LABEL_143:
              __break(1u);
LABEL_144:
              __break(1u);
LABEL_145:
              __break(1u);
LABEL_146:
              __break(1u);
LABEL_147:
              __break(1u);
LABEL_148:
              __break(1u);
            }
            uint64_t v18 = HIDWORD(v17) - (int)v17;
LABEL_21:
            sub_100441FD4(v17, v16);
LABEL_22:
            uint64_t v21 = BYTE6(a2);
            switch(a2 >> 62)
            {
              case 1uLL:
                uint64_t v21 = HIDWORD(v8) - (int)v8;
                if (v85) {
                  goto LABEL_127;
                }
                goto LABEL_26;
              case 2uLL:
                uint64_t v23 = *(void *)(v8 + 16);
                uint64_t v22 = *(void *)(v8 + 24);
                BOOL v24 = __OFSUB__(v22, v23);
                uint64_t v21 = v22 - v23;
                if (!v24) {
                  goto LABEL_26;
                }
                goto LABEL_128;
              case 3uLL:
                if (v18) {
                  goto LABEL_14;
                }
                goto LABEL_163;
              default:
LABEL_26:
                if (v18 != v21)
                {
LABEL_14:
                  uint64_t result = sub_100442248(v17, v16);
                  goto LABEL_15;
                }
                if (v18 < 1) {
                  goto LABEL_163;
                }
                break;
            }
            break;
          case 2uLL:
            uint64_t v20 = *(void *)(v17 + 16);
            uint64_t v19 = *(void *)(v17 + 24);
            uint64_t v18 = v19 - v20;
            if (!__OFSUB__(v19, v20)) {
              goto LABEL_21;
            }
            goto LABEL_126;
          case 3uLL:
            goto LABEL_22;
          default:
            uint64_t v18 = BYTE6(v16);
            goto LABEL_22;
        }
        switch(v16 >> 62)
        {
          case 1uLL:
            if ((int)v17 > v17 >> 32) {
              goto LABEL_130;
            }
            uint64_t v43 = (unsigned char *)sub_100725910();
            if (!v43) {
              goto LABEL_63;
            }
            uint64_t v44 = sub_100725940();
            if (__OFSUB__((int)v17, v44)) {
              goto LABEL_132;
            }
            v43 += (int)v17 - v44;
LABEL_63:
            sub_100725930();
            uint64_t v13 = v86;
            if (!v87)
            {
              *(void *)__s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v43) {
                goto LABEL_158;
              }
              uint64_t v50 = (uint64_t *)__s1;
              unint64_t v49 = v43;
LABEL_107:
              int v68 = memcmp(v49, v50, BYTE6(a2));
              uint64_t result = sub_100442248(v17, v16);
              if (!v68) {
                goto LABEL_164;
              }
              goto LABEL_15;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_141;
              }
              swift_retain();
              uint64_t v45 = sub_100725910();
              if (v45)
              {
                uint64_t v46 = sub_100725940();
                if (__OFSUB__((int)v8, v46)) {
                  goto LABEL_148;
                }
                v45 += (int)v8 - v46;
              }
              uint64_t v47 = sub_100725930();
              uint64_t v48 = (v8 >> 32) - (int)v8;
              if (v47 < v82) {
                uint64_t v48 = v47;
              }
              if (!v43) {
                goto LABEL_153;
              }
              if (!v45) {
                goto LABEL_154;
              }
              size_t v41 = v48;
              uint64_t v42 = v43;
              unint64_t v40 = (const void *)v45;
              goto LABEL_74;
            }
            uint64_t v69 = *(void *)(v8 + 16);
            uint64_t v70 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            size_t v71 = (char *)sub_100725910();
            if (v71)
            {
              uint64_t v72 = sub_100725940();
              if (__OFSUB__(v69, v72)) {
                goto LABEL_147;
              }
              v71 += v69 - v72;
            }
            BOOL v24 = __OFSUB__(v70, v69);
            int64_t v73 = v70 - v69;
            if (v24) {
              goto LABEL_142;
            }
            uint64_t v74 = sub_100725930();
            if (v74 >= v73) {
              size_t v75 = v73;
            }
            else {
              size_t v75 = v74;
            }
            unint64_t v5 = v81;
            if (!v43) {
              goto LABEL_161;
            }
            uint64_t v11 = v84;
            if (!v71) {
              goto LABEL_162;
            }
            int v36 = memcmp(v43, v71, v75);
            swift_release();
            goto LABEL_119;
          case 2uLL:
            uint64_t v29 = *(void *)(v17 + 16);
            swift_retain();
            swift_retain();
            uint64_t v30 = (char *)sub_100725910();
            if (!v30) {
              goto LABEL_39;
            }
            uint64_t v31 = sub_100725940();
            if (__OFSUB__(v29, v31)) {
              goto LABEL_131;
            }
            v30 += v29 - v31;
LABEL_39:
            sub_100725930();
            uint64_t v11 = v84;
            if (v87)
            {
              if (v87 == 1)
              {
                if (v83 < (int)v8) {
                  goto LABEL_135;
                }
                swift_retain();
                uint64_t v32 = (char *)sub_100725910();
                if (v32)
                {
                  uint64_t v33 = sub_100725940();
                  if (__OFSUB__((int)v8, v33)) {
                    goto LABEL_146;
                  }
                  v32 += (int)v8 - v33;
                }
                uint64_t v34 = sub_100725930();
                size_t v35 = (v8 >> 32) - (int)v8;
                if (v34 < v82) {
                  size_t v35 = v34;
                }
                if (!v30) {
                  goto LABEL_150;
                }
                if (!v32) {
                  goto LABEL_151;
                }
                int v36 = memcmp(v30, v32, v35);
                sub_100442248(v8, a2);
                swift_release();
              }
              else
              {
                uint64_t v62 = *(void *)(v8 + 16);
                uint64_t v80 = *(void *)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_100725910();
                if (v63)
                {
                  uint64_t v64 = sub_100725940();
                  if (__OFSUB__(v62, v64)) {
                    goto LABEL_145;
                  }
                  v63 += v62 - v64;
                }
                BOOL v24 = __OFSUB__(v80, v62);
                int64_t v65 = v80 - v62;
                if (v24) {
                  goto LABEL_140;
                }
                uint64_t v66 = sub_100725930();
                if (v66 >= v65) {
                  size_t v67 = v65;
                }
                else {
                  size_t v67 = v66;
                }
                if (!v30) {
                  goto LABEL_159;
                }
                uint64_t v11 = v84;
                if (!v63) {
                  goto LABEL_160;
                }
                int v36 = memcmp(v30, v63, v67);
                swift_release();
                swift_release();
                swift_release();
              }
              swift_release();
              uint64_t result = sub_100442248(v17, v16);
              unint64_t v5 = v81;
            }
            else
            {
              *(void *)__s1 = v8;
              *(_WORD *)&__s1[8] = a2;
              __s1[10] = BYTE2(a2);
              __s1[11] = BYTE3(a2);
              __s1[12] = BYTE4(a2);
              __s1[13] = BYTE5(a2);
              if (!v30) {
                goto LABEL_157;
              }
              int v36 = memcmp(v30, __s1, BYTE6(a2));
              swift_release();
LABEL_119:
              swift_release();
LABEL_120:
              uint64_t result = sub_100442248(v17, v16);
            }
            uint64_t v13 = v86;
            if (!v36) {
              goto LABEL_164;
            }
            goto LABEL_15;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)__s1 = 0;
            if (!v87) {
              goto LABEL_75;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_134;
              }
              sub_100441FD4(v8, a2);
              uint64_t v37 = sub_100725910();
              if (!v37) {
                goto LABEL_152;
              }
              uint64_t v26 = v37;
              uint64_t v38 = sub_100725940();
              uint64_t v28 = (int)v8 - v38;
              if (__OFSUB__((int)v8, v38)) {
                goto LABEL_139;
              }
              goto LABEL_55;
            }
            uint64_t v57 = *(void *)(v8 + 16);
            uint64_t v58 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            unint64_t v53 = (char *)sub_100725910();
            if (v53)
            {
              uint64_t v59 = sub_100725940();
              if (__OFSUB__(v57, v59)) {
                goto LABEL_144;
              }
              v53 += v57 - v59;
            }
            BOOL v24 = __OFSUB__(v58, v57);
            int64_t v55 = v58 - v57;
            if (v24) {
              goto LABEL_137;
            }
            uint64_t v56 = sub_100725930();
            uint64_t v11 = v84;
            if (!v53) {
              goto LABEL_156;
            }
            goto LABEL_87;
          default:
            *(void *)__s1 = v17;
            *(_WORD *)&__s1[8] = v16;
            __s1[10] = BYTE2(v16);
            __s1[11] = BYTE3(v16);
            __s1[12] = BYTE4(v16);
            __s1[13] = BYTE5(v16);
            if (!v87)
            {
LABEL_75:
              uint64_t v89 = v8;
              __int16 v90 = a2;
              char v91 = BYTE2(a2);
              char v92 = BYTE3(a2);
              char v93 = BYTE4(a2);
              char v94 = BYTE5(a2);
              unint64_t v49 = __s1;
              uint64_t v50 = &v89;
              goto LABEL_107;
            }
            if (v87 == 1)
            {
              if (v83 < (int)v8) {
                goto LABEL_133;
              }
              sub_100441FD4(v8, a2);
              uint64_t v25 = sub_100725910();
              if (!v25)
              {
                sub_100725930();
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                sub_100725930();
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                sub_100442248(v17, v16);
LABEL_164:
                sub_100726D30();
                __break(1u);
                JUMPOUT(0x1004C41F8);
              }
              uint64_t v26 = v25;
              uint64_t v27 = sub_100725940();
              uint64_t v28 = (int)v8 - v27;
              if (__OFSUB__((int)v8, v27)) {
                goto LABEL_138;
              }
LABEL_55:
              uint64_t v39 = sub_100725930();
              unint64_t v40 = (const void *)(v26 + v28);
              if (v39 >= v82) {
                size_t v41 = (v8 >> 32) - (int)v8;
              }
              else {
                size_t v41 = v39;
              }
              uint64_t v42 = __s1;
LABEL_74:
              int v36 = memcmp(v42, v40, v41);
              sub_100442248(v8, a2);
              goto LABEL_120;
            }
            uint64_t v51 = *(void *)(v8 + 16);
            uint64_t v52 = *(void *)(v8 + 24);
            swift_retain();
            swift_retain();
            unint64_t v53 = (char *)sub_100725910();
            if (v53)
            {
              uint64_t v54 = sub_100725940();
              if (__OFSUB__(v51, v54)) {
                goto LABEL_143;
              }
              v53 += v51 - v54;
            }
            BOOL v24 = __OFSUB__(v52, v51);
            int64_t v55 = v52 - v51;
            if (v24) {
              goto LABEL_136;
            }
            uint64_t v56 = sub_100725930();
            uint64_t v11 = v84;
            if (!v53) {
              goto LABEL_155;
            }
LABEL_87:
            if (v56 >= v55) {
              size_t v60 = v55;
            }
            else {
              size_t v60 = v56;
            }
            int v61 = memcmp(__s1, v53, v60);
            swift_release();
            swift_release();
            uint64_t result = sub_100442248(v17, v16);
            uint64_t v13 = v86;
            if (!v61) {
              goto LABEL_164;
            }
LABEL_15:
            a3 = (a3 + 1) & v88;
            if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
              goto LABEL_123;
            }
            break;
        }
      }
    }
  }
LABEL_123:
  uint64_t v76 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v77 = (uint64_t *)(*(void *)(v76 + 48) + 16 * a3);
  *uint64_t v77 = v8;
  v77[1] = a2;
  uint64_t v78 = *(void *)(v76 + 16);
  BOOL v24 = __OFADD__(v78, 1);
  uint64_t v79 = v78 + 1;
  if (v24) {
    goto LABEL_129;
  }
  *(void *)(v76 + 16) = v79;
  return result;
}

uint64_t sub_1004C4228(uint64_t *a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v9 = __chkstk_darwin(v7, v8);
  uint64_t v209 = (uint64_t)&v202 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v9, v11);
  BOOL v14 = (char *)&v202 - v13;
  uint64_t v16 = __chkstk_darwin(v12, v15);
  uint64_t v18 = (char *)&v202 - v17;
  uint64_t v20 = __chkstk_darwin(v16, v19);
  uint64_t v216 = (uint64_t)&v202 - v21;
  uint64_t v23 = __chkstk_darwin(v20, v22);
  uint64_t v25 = __chkstk_darwin(v23, v24);
  __chkstk_darwin(v25, v26);
  uint64_t v30 = (char *)&v202 - v29;
  unint64_t v31 = *(void *)(*v3 + 16);
  unint64_t v32 = *(void *)(*v3 + 24);
  os_log_type_t v206 = v3;
  uint64_t v207 = v33;
  if (v32 <= v31 || (a3 & 1) == 0)
  {
    uint64_t v217 = v28;
    uint64_t v218 = (uint64_t *)v27;
    if (a3)
    {
      sub_1004C3104();
    }
    else
    {
      if (v32 > v31)
      {
        sub_1004C5FE4();
        goto LABEL_257;
      }
      sub_1004C66B4();
    }
    uint64_t v34 = *v3;
    sub_100726DD0();
    uint64_t v35 = a1[2];
    unint64_t v36 = a1[3];
    sub_100441FD4(v35, v36);
    sub_100725B60();
    sub_100442248(v35, v36);
    uint64_t v37 = *a1;
    unint64_t v38 = a1[1];
    sub_100441FD4(*a1, v38);
    sub_100725B60();
    sub_100442248(v37, v38);
    sub_100725CC0();
    sub_1004CC294(&qword_100A46938, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1007263E0();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100726490();
    swift_bridgeObjectRetain();
    sub_100726490();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    Swift::Int v39 = sub_100726E30();
    uint64_t v40 = -1 << *(unsigned char *)(v34 + 32);
    a2 = v39 & ~v40;
    uint64_t v214 = v34 + 56;
    uint64_t v215 = v34;
    if ((*(void *)(v34 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      os_log_type_t v213 = v18;
      uint64_t v210 = v14;
      uint64_t v205 = v7;
      uint64_t v211 = ~v40;
      uint64_t v212 = *(void *)(v207 + 72);
      unint64_t v208 = a1;
      uint64_t v41 = v209;
      while (1)
      {
        sub_1004CBF18(*(void *)(v215 + 48) + v212 * a2, (uint64_t)v30, type metadata accessor for SenderKeyInfo);
        uint64_t v42 = *((void *)v30 + 2);
        unint64_t v43 = *((void *)v30 + 3);
        uint64_t v44 = a1[2];
        unint64_t v45 = a1[3];
        uint64_t v46 = 0;
        switch(v43 >> 62)
        {
          case 1uLL:
            LODWORD(v46) = HIDWORD(v42) - v42;
            if (__OFSUB__(HIDWORD(v42), v42)) {
              goto LABEL_260;
            }
            uint64_t v46 = (int)v46;
            break;
          case 2uLL:
            uint64_t v48 = *(void *)(v42 + 16);
            uint64_t v47 = *(void *)(v42 + 24);
            BOOL v49 = __OFSUB__(v47, v48);
            uint64_t v46 = v47 - v48;
            if (!v49) {
              break;
            }
            __break(1u);
LABEL_260:
            __break(1u);
LABEL_261:
            __break(1u);
LABEL_262:
            __break(1u);
            goto LABEL_263;
          case 3uLL:
            break;
          default:
            uint64_t v46 = BYTE6(v43);
            break;
        }
        unint64_t v50 = v45 >> 62;
        switch(v45 >> 62)
        {
          case 1uLL:
            LODWORD(v51) = HIDWORD(v44) - v44;
            if (__OFSUB__(HIDWORD(v44), v44)) {
              goto LABEL_262;
            }
            uint64_t v51 = (int)v51;
LABEL_24:
            if (v46 != v51)
            {
LABEL_34:
              uint64_t v59 = v217;
              sub_1004CBF18((uint64_t)v30, v217, type metadata accessor for SenderKeyInfo);
              size_t v60 = v218;
              sub_1004CBF18((uint64_t)a1, (uint64_t)v218, type metadata accessor for SenderKeyInfo);
              int v61 = (uint64_t *)v59;
LABEL_150:
              sub_1004CBE50((uint64_t)v61, type metadata accessor for SenderKeyInfo);
              sub_1004CBE50((uint64_t)v60, type metadata accessor for SenderKeyInfo);
              uint64_t v133 = v216;
              sub_1004CBF18((uint64_t)v30, v216, type metadata accessor for SenderKeyInfo);
              uint64_t v127 = (uint64_t)v213;
              sub_1004CBF18((uint64_t)a1, (uint64_t)v213, type metadata accessor for SenderKeyInfo);
              uint64_t v42 = (uint64_t)v210;
LABEL_151:
              sub_1004CBE50(v127, type metadata accessor for SenderKeyInfo);
              sub_1004CBE50(v133, type metadata accessor for SenderKeyInfo);
              sub_1004CBF18((uint64_t)v30, v42, type metadata accessor for SenderKeyInfo);
              sub_1004CBF18((uint64_t)a1, v41, type metadata accessor for SenderKeyInfo);
LABEL_152:
              sub_1004CBE50(v42, type metadata accessor for SenderKeyInfo);
              sub_1004CBE50(v41, type metadata accessor for SenderKeyInfo);
              sub_1004CBE50((uint64_t)v30, type metadata accessor for SenderKeyInfo);
              goto LABEL_153;
            }
            if (v46 < 1)
            {
LABEL_35:
              uint64_t v62 = v217;
              sub_1004CBF18((uint64_t)v30, v217, type metadata accessor for SenderKeyInfo);
              size_t v60 = v218;
              sub_1004CBF18((uint64_t)a1, (uint64_t)v218, type metadata accessor for SenderKeyInfo);
              int v61 = (uint64_t *)v62;
              goto LABEL_126;
            }
            break;
          case 2uLL:
            uint64_t v53 = *(void *)(v44 + 16);
            uint64_t v52 = *(void *)(v44 + 24);
            BOOL v49 = __OFSUB__(v52, v53);
            uint64_t v51 = v52 - v53;
            if (!v49) {
              goto LABEL_24;
            }
            goto LABEL_261;
          case 3uLL:
            if (!v46) {
              goto LABEL_35;
            }
            goto LABEL_34;
          default:
            uint64_t v51 = BYTE6(v45);
            goto LABEL_24;
        }
        switch(v43 >> 62)
        {
          case 1uLL:
            if ((int)v42 > v42 >> 32) {
              goto LABEL_268;
            }
            sub_100441FD4(*((void *)v30 + 2), *((void *)v30 + 3));
            uint64_t v74 = sub_100725910();
            if (v74)
            {
              uint64_t v75 = v74;
              uint64_t v76 = sub_100725940();
              if (__OFSUB__((int)v42, v76)) {
                goto LABEL_270;
              }
              uint64_t v204 = (const void *)(v75 + (int)v42 - v76);
            }
            else
            {
              uint64_t v204 = 0;
            }
            sub_100725930();
            a1 = v208;
            uint64_t v41 = v209;
            if (v50)
            {
              if (v50 == 1)
              {
                if (v44 >> 32 < (int)v44) {
                  goto LABEL_279;
                }
                swift_retain();
                int v81 = (char *)sub_100725910();
                if (v81)
                {
                  uint64_t v82 = sub_100725940();
                  if (__OFSUB__((int)v44, v82)) {
                    goto LABEL_287;
                  }
                  v81 += (int)v44 - v82;
                }
                a1 = v208;
                uint64_t v83 = sub_100725930();
                if (v83 >= (v44 >> 32) - (int)v44) {
                  size_t v84 = (v44 >> 32) - (int)v44;
                }
                else {
                  size_t v84 = v83;
                }
                if (!v204) {
                  goto LABEL_309;
                }
                uint64_t v41 = v209;
                if (!v81) {
                  goto LABEL_310;
                }
                int v73 = memcmp(v204, v81, v84);
                sub_100442248(v44, v45);
              }
              else
              {
                uint64_t v102 = *(void *)(v44 + 16);
                uint64_t v101 = *(void *)(v44 + 24);
                swift_retain();
                swift_retain();
                uint64_t v103 = sub_100725910();
                if (v103)
                {
                  uint64_t v104 = v103;
                  uint64_t v105 = sub_100725940();
                  if (__OFSUB__(v102, v105)) {
                    goto LABEL_286;
                  }
                  uint64_t v106 = (const void *)(v104 + v102 - v105);
                }
                else
                {
                  uint64_t v106 = 0;
                }
                BOOL v49 = __OFSUB__(v101, v102);
                int64_t v112 = v101 - v102;
                uint64_t v41 = v209;
                if (v49) {
                  goto LABEL_280;
                }
                uint64_t v113 = sub_100725930();
                if (v113 >= v112) {
                  size_t v114 = v112;
                }
                else {
                  size_t v114 = v113;
                }
                if (!v204) {
                  goto LABEL_318;
                }
                a1 = v208;
                if (!v106) {
                  goto LABEL_319;
                }
                int v73 = memcmp(v204, v106, v114);
                swift_release();
                swift_release();
              }
            }
            else
            {
              *(void *)__s1 = v44;
              *(_WORD *)&__s1[8] = v45;
              __s1[10] = BYTE2(v45);
              __s1[11] = BYTE3(v45);
              __s1[12] = BYTE4(v45);
              __s1[13] = BYTE5(v45);
              if (!v204) {
                goto LABEL_315;
              }
              int v73 = memcmp(v204, __s1, BYTE6(v45));
            }
            sub_100442248(v42, v43);
            goto LABEL_125;
          case 2uLL:
            uint64_t v63 = (const void *)(v43 & 0x3FFFFFFFFFFFFFFFLL);
            uint64_t v64 = *(void *)(v42 + 16);
            swift_retain();
            swift_retain();
            uint64_t v65 = sub_100725910();
            if (v65)
            {
              uint64_t v66 = v65;
              uint64_t v67 = sub_100725940();
              if (__OFSUB__(v64, v67)) {
                goto LABEL_269;
              }
              int v68 = (const void *)(v66 + v64 - v67);
            }
            else
            {
              int v68 = 0;
            }
            sub_100725930();
            a1 = v208;
            uint64_t v41 = v209;
            if (v50)
            {
              uint64_t v204 = v68;
              uint64_t v203 = v63;
              if (v50 != 1)
              {
                uint64_t v95 = *(void *)(v44 + 16);
                uint64_t v96 = *(void *)(v44 + 24);
                swift_retain();
                swift_retain();
                uint64_t v97 = sub_100725910();
                if (v97)
                {
                  uint64_t v98 = v97;
                  uint64_t v99 = sub_100725940();
                  if (__OFSUB__(v95, v99)) {
                    goto LABEL_284;
                  }
                  uint64_t v100 = (const void *)(v98 + v95 - v99);
                }
                else
                {
                  uint64_t v100 = 0;
                }
                uint64_t v41 = v209;
                if (__OFSUB__(v96, v95)) {
                  goto LABEL_278;
                }
                uint64_t v108 = sub_100725930();
                if (v108 >= v96 - v95) {
                  size_t v109 = v96 - v95;
                }
                else {
                  size_t v109 = v108;
                }
                if (!v204) {
                  goto LABEL_316;
                }
                a1 = v208;
                if (!v100) {
                  goto LABEL_317;
                }
                int v73 = memcmp(v204, v100, v109);
                swift_release();
                swift_release();
                swift_release();
                goto LABEL_115;
              }
              if (v44 >> 32 < (int)v44) {
                goto LABEL_273;
              }
              swift_retain();
              uint64_t v77 = sub_100725910();
              if (v77)
              {
                uint64_t v78 = v77;
                uint64_t v79 = sub_100725940();
                if (__OFSUB__((int)v44, v79)) {
                  goto LABEL_285;
                }
                uint64_t v80 = (const void *)(v78 + (int)v44 - v79);
              }
              else
              {
                uint64_t v80 = 0;
              }
              uint64_t v110 = sub_100725930();
              if (v110 >= (v44 >> 32) - (int)v44) {
                size_t v111 = (v44 >> 32) - (int)v44;
              }
              else {
                size_t v111 = v110;
              }
              uint64_t v41 = v209;
              if (!v204) {
                goto LABEL_311;
              }
              if (!v80) {
                goto LABEL_312;
              }
              int v73 = memcmp(v204, v80, v111);
              sub_100442248(v44, v45);
            }
            else
            {
              *(void *)__s1 = v44;
              *(_WORD *)&__s1[8] = v45;
              __s1[10] = BYTE2(v45);
              __s1[11] = BYTE3(v45);
              __s1[12] = BYTE4(v45);
              __s1[13] = BYTE5(v45);
              if (!v68) {
                goto LABEL_314;
              }
              int v73 = memcmp(v68, __s1, BYTE6(v45));
            }
            swift_release();
LABEL_115:
            swift_release();
            goto LABEL_125;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)__s1 = 0;
            if (!v50) {
              goto LABEL_52;
            }
            if (v50 == 1)
            {
              uint64_t v42 = (int)v44;
              uint64_t v54 = (v44 >> 32) - (int)v44;
              if (v44 >> 32 < (int)v44) {
                goto LABEL_271;
              }
              swift_retain();
              uint64_t v69 = sub_100725910();
              if (!v69) {
                goto LABEL_308;
              }
              uint64_t v56 = v69;
              uint64_t v70 = sub_100725940();
              uint64_t v58 = (int)v44 - v70;
              if (__OFSUB__((int)v44, v70)) {
                goto LABEL_277;
              }
LABEL_44:
              uint64_t v71 = sub_100725930();
              if (v71 >= v54) {
                size_t v72 = v54;
              }
              else {
                size_t v72 = v71;
              }
              int v73 = memcmp(__s1, (const void *)(v56 + v58), v72);
              sub_100442248(v44, v45);
              a1 = v208;
              uint64_t v41 = v209;
              goto LABEL_125;
            }
            uint64_t v85 = *(void *)(v44 + 16);
            uint64_t v86 = *(void *)(v44 + 24);
            swift_retain();
            swift_retain();
            unint64_t v87 = (char *)sub_100725910();
            if (v87)
            {
              uint64_t v88 = sub_100725940();
              if (__OFSUB__(v85, v88)) {
                goto LABEL_282;
              }
              v87 += v85 - v88;
            }
            int64_t v89 = v86 - v85;
            if (__OFSUB__(v86, v85)) {
              goto LABEL_274;
            }
            uint64_t v90 = sub_100725930();
            uint64_t v41 = v209;
            if (!v87) {
              goto LABEL_313;
            }
            break;
          default:
            *(void *)__s1 = *((void *)v30 + 2);
            *(_WORD *)&__s1[8] = v43;
            __s1[10] = BYTE2(v43);
            __s1[11] = BYTE3(v43);
            __s1[12] = BYTE4(v43);
            __s1[13] = BYTE5(v43);
            if (!v50)
            {
LABEL_52:
              uint64_t __s2 = v44;
              __int16 v220 = v45;
              char v221 = BYTE2(v45);
              char v222 = BYTE3(v45);
              char v223 = BYTE4(v45);
              char v224 = BYTE5(v45);
              int v73 = memcmp(__s1, &__s2, BYTE6(v45));
              goto LABEL_125;
            }
            if (v50 == 1)
            {
              uint64_t v42 = (int)v44;
              uint64_t v54 = (v44 >> 32) - (int)v44;
              if (v44 >> 32 < (int)v44) {
                goto LABEL_272;
              }
              swift_retain();
              uint64_t v55 = sub_100725910();
              if (!v55)
              {
                sub_100725930();
                __break(1u);
LABEL_307:
                __break(1u);
LABEL_308:
                sub_100725930();
                __break(1u);
LABEL_309:
                __break(1u);
LABEL_310:
                __break(1u);
LABEL_311:
                __break(1u);
LABEL_312:
                __break(1u);
LABEL_313:
                __break(1u);
LABEL_314:
                __break(1u);
LABEL_315:
                __break(1u);
LABEL_316:
                __break(1u);
LABEL_317:
                __break(1u);
LABEL_318:
                __break(1u);
LABEL_319:
                __break(1u);
LABEL_320:
                __break(1u);
LABEL_321:
                sub_100725930();
                __break(1u);
LABEL_322:
                __break(1u);
LABEL_323:
                __break(1u);
LABEL_324:
                __break(1u);
LABEL_325:
                __break(1u);
LABEL_326:
                __break(1u);
LABEL_327:
                __break(1u);
LABEL_328:
                __break(1u);
LABEL_329:
                __break(1u);
LABEL_330:
                __break(1u);
LABEL_331:
                __break(1u);
LABEL_332:
                sub_100725930();
                __break(1u);
LABEL_333:
                __break(1u);
LABEL_334:
                sub_1004CBE50(v42, type metadata accessor for SenderKeyInfo);
                sub_1004CBE50(v209, type metadata accessor for SenderKeyInfo);
                sub_1004CBE50((uint64_t)v30, type metadata accessor for SenderKeyInfo);
LABEL_335:
                sub_100726D30();
                __break(1u);
                JUMPOUT(0x1004C5C48);
              }
              uint64_t v56 = v55;
              uint64_t v57 = sub_100725940();
              uint64_t v58 = (int)v44 - v57;
              if (__OFSUB__((int)v44, v57)) {
                goto LABEL_276;
              }
              goto LABEL_44;
            }
            uint64_t v91 = *(void *)(v44 + 16);
            uint64_t v42 = *(void *)(v44 + 24);
            swift_retain();
            swift_retain();
            uint64_t v92 = sub_100725910();
            if (v92)
            {
              uint64_t v93 = v92;
              uint64_t v94 = sub_100725940();
              if (__OFSUB__(v91, v94)) {
                goto LABEL_283;
              }
              unint64_t v87 = (char *)(v93 + v91 - v94);
            }
            else
            {
              unint64_t v87 = 0;
            }
            int64_t v89 = v42 - v91;
            uint64_t v41 = v209;
            if (__OFSUB__(v42, v91)) {
              goto LABEL_275;
            }
            uint64_t v90 = sub_100725930();
            if (!v87) {
              goto LABEL_307;
            }
            break;
        }
        if (v90 >= v89) {
          size_t v107 = v89;
        }
        else {
          size_t v107 = v90;
        }
        int v73 = memcmp(__s1, v87, v107);
        swift_release();
        swift_release();
        a1 = v208;
LABEL_125:
        uint64_t v115 = v217;
        sub_1004CBF18((uint64_t)v30, v217, type metadata accessor for SenderKeyInfo);
        size_t v60 = v218;
        sub_1004CBF18((uint64_t)a1, (uint64_t)v218, type metadata accessor for SenderKeyInfo);
        int v61 = (uint64_t *)v115;
        if (v73) {
          goto LABEL_150;
        }
LABEL_126:
        uint64_t v42 = *v61;
        unint64_t v116 = v61[1];
        uint64_t v117 = *v60;
        unint64_t v118 = v60[1];
        uint64_t v119 = 0;
        switch(v116 >> 62)
        {
          case 1uLL:
            LODWORD(v119) = HIDWORD(v42) - v42;
            if (__OFSUB__(HIDWORD(v42), v42)) {
              goto LABEL_264;
            }
            uint64_t v119 = (int)v119;
            break;
          case 2uLL:
            uint64_t v121 = *(void *)(v42 + 16);
            uint64_t v120 = *(void *)(v42 + 24);
            BOOL v49 = __OFSUB__(v120, v121);
            uint64_t v119 = v120 - v121;
            if (!v49) {
              break;
            }
            goto LABEL_265;
          case 3uLL:
            break;
          default:
            uint64_t v119 = BYTE6(v116);
            break;
        }
        unint64_t v122 = v118 >> 62;
        switch(v118 >> 62)
        {
          case 1uLL:
            LODWORD(v123) = HIDWORD(v117) - v117;
            if (__OFSUB__(HIDWORD(v117), v117)) {
              goto LABEL_267;
            }
            uint64_t v123 = (int)v123;
LABEL_140:
            size_t v60 = v218;
            if (v119 != v123) {
              goto LABEL_150;
            }
            if (v119 < 1)
            {
LABEL_155:
              sub_1004CBE50((uint64_t)v61, type metadata accessor for SenderKeyInfo);
              sub_1004CBE50((uint64_t)v60, type metadata accessor for SenderKeyInfo);
              uint64_t v133 = v216;
              sub_1004CBF18((uint64_t)v30, v216, type metadata accessor for SenderKeyInfo);
              uint64_t v127 = (uint64_t)v213;
              sub_1004CBF18((uint64_t)a1, (uint64_t)v213, type metadata accessor for SenderKeyInfo);
              uint64_t v42 = (uint64_t)v210;
              goto LABEL_249;
            }
            break;
          case 2uLL:
            uint64_t v125 = *(void *)(v117 + 16);
            uint64_t v124 = *(void *)(v117 + 24);
            BOOL v49 = __OFSUB__(v124, v125);
            uint64_t v123 = v124 - v125;
            if (!v49) {
              goto LABEL_140;
            }
            goto LABEL_266;
          case 3uLL:
            if (!v119) {
              goto LABEL_155;
            }
            goto LABEL_150;
          default:
            uint64_t v123 = BYTE6(v118);
            goto LABEL_140;
        }
        uint64_t v126 = v117;
        switch(v116 >> 62)
        {
          case 1uLL:
            if ((int)v42 > v42 >> 32) {
              goto LABEL_281;
            }
            sub_100441FD4(*v61, v116);
            uint64_t v143 = sub_100725910();
            if (v143)
            {
              uint64_t v144 = v143;
              uint64_t v145 = sub_100725940();
              if (__OFSUB__((int)v42, v145)) {
                goto LABEL_289;
              }
              uint64_t v204 = (const void *)(v144 + (int)v42 - v145);
            }
            else
            {
              uint64_t v204 = 0;
            }
            a1 = v208;
            sub_100725930();
            uint64_t v41 = v209;
            if (v122)
            {
              if (v122 == 1)
              {
                if (v126 >> 32 < (int)v126) {
                  goto LABEL_298;
                }
                swift_retain();
                uint64_t v150 = (char *)sub_100725910();
                if (v150)
                {
                  uint64_t v151 = sub_100725940();
                  if (__OFSUB__((int)v126, v151)) {
                    goto LABEL_305;
                  }
                  v150 += (int)v126 - v151;
                }
                a1 = v208;
                uint64_t v152 = sub_100725930();
                if (v152 >= (v126 >> 32) - (int)v126) {
                  size_t v153 = (v126 >> 32) - (int)v126;
                }
                else {
                  size_t v153 = v152;
                }
                if (!v204) {
                  goto LABEL_326;
                }
                uint64_t v41 = v209;
                if (!v150) {
                  goto LABEL_327;
                }
                int v142 = memcmp(v204, v150, v153);
                sub_100442248(v126, v118);
              }
              else
              {
                uint64_t v172 = *(void *)(v126 + 16);
                uint64_t v171 = *(void *)(v126 + 24);
                swift_retain();
                swift_retain();
                uint64_t v173 = sub_100725910();
                if (v173)
                {
                  uint64_t v174 = v173;
                  uint64_t v175 = sub_100725940();
                  if (__OFSUB__(v172, v175)) {
                    goto LABEL_303;
                  }
                  uint64_t v176 = (const void *)(v174 + v172 - v175);
                }
                else
                {
                  uint64_t v176 = 0;
                }
                BOOL v49 = __OFSUB__(v171, v172);
                int64_t v184 = v171 - v172;
                uint64_t v41 = v209;
                if (v49) {
                  goto LABEL_299;
                }
                uint64_t v185 = sub_100725930();
                if (v185 >= v184) {
                  size_t v186 = v184;
                }
                else {
                  size_t v186 = v185;
                }
                if (!v204) {
                  goto LABEL_330;
                }
                a1 = v208;
                if (!v176) {
                  goto LABEL_331;
                }
                int v142 = memcmp(v204, v176, v186);
                swift_release();
                swift_release();
              }
            }
            else
            {
              *(void *)__s1 = v126;
              *(_WORD *)&__s1[8] = v118;
              __s1[10] = BYTE2(v118);
              __s1[11] = BYTE3(v118);
              __s1[12] = BYTE4(v118);
              __s1[13] = BYTE5(v118);
              if (!v204) {
                goto LABEL_329;
              }
              int v142 = memcmp(v204, __s1, BYTE6(v118));
            }
            sub_100442248(v42, v116);
            goto LABEL_247;
          case 2uLL:
            uint64_t v134 = *(void *)(v42 + 16);
            swift_retain();
            swift_retain();
            uint64_t v135 = sub_100725910();
            uint64_t v204 = (const void *)(v116 & 0x3FFFFFFFFFFFFFFFLL);
            if (v135)
            {
              uint64_t v136 = v135;
              uint64_t v137 = sub_100725940();
              uint64_t v127 = (uint64_t)v213;
              if (__OFSUB__(v134, v137)) {
                goto LABEL_288;
              }
              uint64_t v203 = (const void *)(v136 + v134 - v137);
              a1 = v208;
            }
            else
            {
              uint64_t v203 = 0;
              a1 = v208;
              uint64_t v127 = (uint64_t)v213;
            }
            sub_100725930();
            uint64_t v41 = v209;
            if (v122)
            {
              if (v122 != 1)
              {
                uint64_t v165 = *(void *)(v126 + 16);
                uint64_t v166 = *(void *)(v126 + 24);
                swift_retain();
                swift_retain();
                uint64_t v167 = sub_100725910();
                if (v167)
                {
                  uint64_t v168 = v167;
                  uint64_t v169 = sub_100725940();
                  if (__OFSUB__(v165, v169)) {
                    goto LABEL_302;
                  }
                  uint64_t v170 = (const void *)(v168 + v165 - v169);
                }
                else
                {
                  uint64_t v170 = 0;
                }
                uint64_t v41 = v209;
                if (__OFSUB__(v166, v165)) {
                  goto LABEL_297;
                }
                uint64_t v180 = sub_100725930();
                if (v180 >= v166 - v165) {
                  size_t v181 = v166 - v165;
                }
                else {
                  size_t v181 = v180;
                }
                uint64_t v127 = (uint64_t)v213;
                if (!v203) {
                  goto LABEL_322;
                }
                a1 = v208;
                if (!v170) {
                  goto LABEL_323;
                }
                int v142 = memcmp(v203, v170, v181);
                swift_release();
                swift_release();
                swift_release();
                goto LABEL_237;
              }
              if (v126 >> 32 < (int)v126) {
                goto LABEL_293;
              }
              swift_retain();
              uint64_t v146 = sub_100725910();
              if (v146)
              {
                uint64_t v147 = v146;
                uint64_t v148 = sub_100725940();
                if (__OFSUB__((int)v126, v148)) {
                  goto LABEL_304;
                }
                uint64_t v149 = (const void *)(v147 + (int)v126 - v148);
              }
              else
              {
                uint64_t v149 = 0;
              }
              a1 = v208;
              uint64_t v182 = sub_100725930();
              if (v182 >= (v126 >> 32) - (int)v126) {
                size_t v183 = (v126 >> 32) - (int)v126;
              }
              else {
                size_t v183 = v182;
              }
              uint64_t v41 = v209;
              if (!v203) {
                goto LABEL_324;
              }
              uint64_t v127 = (uint64_t)v213;
              if (!v149) {
                goto LABEL_325;
              }
              int v142 = memcmp(v203, v149, v183);
              sub_100442248(v126, v118);
            }
            else
            {
              *(void *)__s1 = v126;
              *(_WORD *)&__s1[8] = v118;
              __s1[10] = BYTE2(v118);
              __s1[11] = BYTE3(v118);
              __s1[12] = BYTE4(v118);
              __s1[13] = BYTE5(v118);
              if (!v203) {
                goto LABEL_328;
              }
              int v142 = memcmp(v203, __s1, BYTE6(v118));
            }
            swift_release();
LABEL_237:
            swift_release();
            uint64_t v42 = (uint64_t)v210;
            goto LABEL_248;
          case 3uLL:
            *(void *)&__s1[6] = 0;
            *(void *)__s1 = 0;
            uint64_t v127 = (uint64_t)v213;
            if (!v122)
            {
              uint64_t __s2 = v117;
              __int16 v220 = v118;
              char v221 = BYTE2(v118);
              char v222 = BYTE3(v118);
              char v223 = BYTE4(v118);
              char v224 = BYTE5(v118);
              int v142 = memcmp(__s1, &__s2, BYTE6(v118));
              uint64_t v42 = (uint64_t)v210;
              goto LABEL_248;
            }
            if (v122 == 1)
            {
              uint64_t v42 = (int)v117;
              uint64_t v128 = (v117 >> 32) - (int)v117;
              if (v117 >> 32 < (int)v117) {
                goto LABEL_290;
              }
              swift_retain();
              uint64_t v138 = sub_100725910();
              if (!v138) {
                goto LABEL_321;
              }
              uint64_t v130 = v138;
              uint64_t v139 = sub_100725940();
              uint64_t v132 = v42 - v139;
              if (__OFSUB__(v42, v139)) {
                goto LABEL_295;
              }
              goto LABEL_164;
            }
            uint64_t v154 = *(void *)(v117 + 16);
            uint64_t v155 = *(void *)(v117 + 24);
            swift_retain();
            swift_retain();
            uint64_t v156 = sub_100725910();
            if (v156)
            {
              uint64_t v157 = v156;
              uint64_t v158 = sub_100725940();
              if (__OFSUB__(v154, v158)) {
                goto LABEL_300;
              }
              uint64_t v159 = (const void *)(v157 + v154 - v158);
            }
            else
            {
              uint64_t v159 = 0;
            }
            int64_t v177 = v155 - v154;
            uint64_t v41 = v209;
            if (__OFSUB__(v155, v154)) {
              goto LABEL_294;
            }
            uint64_t v178 = sub_100725930();
            uint64_t v42 = (uint64_t)v210;
            if (!v159) {
              goto LABEL_320;
            }
            goto LABEL_217;
          default:
            *(void *)__s1 = *v61;
            *(_WORD *)&__s1[8] = v116;
            __s1[10] = BYTE2(v116);
            __s1[11] = BYTE3(v116);
            __s1[12] = BYTE4(v116);
            __s1[13] = BYTE5(v116);
            if (v122)
            {
              uint64_t v127 = (uint64_t)v213;
              if (v122 == 1)
              {
                uint64_t v42 = (int)v117;
                uint64_t v128 = (v117 >> 32) - (int)v117;
                if (v117 >> 32 < (int)v117) {
                  goto LABEL_291;
                }
                swift_retain();
                uint64_t v129 = sub_100725910();
                if (!v129) {
                  goto LABEL_332;
                }
                uint64_t v130 = v129;
                uint64_t v131 = sub_100725940();
                uint64_t v132 = v42 - v131;
                if (__OFSUB__(v42, v131)) {
                  goto LABEL_296;
                }
LABEL_164:
                uint64_t v140 = sub_100725930();
                if (v140 >= v128) {
                  size_t v141 = v128;
                }
                else {
                  size_t v141 = v140;
                }
                int v142 = memcmp(__s1, (const void *)(v130 + v132), v141);
                sub_100442248(v126, v118);
                a1 = v208;
                uint64_t v41 = v209;
                uint64_t v42 = (uint64_t)v210;
                goto LABEL_248;
              }
              uint64_t v160 = *(void *)(v117 + 16);
              uint64_t v161 = *(void *)(v117 + 24);
              swift_retain();
              swift_retain();
              uint64_t v162 = sub_100725910();
              if (v162)
              {
                uint64_t v163 = v162;
                uint64_t v164 = sub_100725940();
                if (__OFSUB__(v160, v164)) {
                  goto LABEL_301;
                }
                uint64_t v159 = (const void *)(v163 + v160 - v164);
              }
              else
              {
                uint64_t v159 = 0;
              }
              int64_t v177 = v161 - v160;
              uint64_t v41 = v209;
              if (__OFSUB__(v161, v160)) {
                goto LABEL_292;
              }
              uint64_t v178 = sub_100725930();
              uint64_t v42 = (uint64_t)v210;
              if (!v159) {
                goto LABEL_333;
              }
LABEL_217:
              if (v178 >= v177) {
                size_t v179 = v177;
              }
              else {
                size_t v179 = v178;
              }
              int v142 = memcmp(__s1, v159, v179);
              swift_release();
              swift_release();
              a1 = v208;
            }
            else
            {
              uint64_t __s2 = v117;
              __int16 v220 = v118;
              char v221 = BYTE2(v118);
              char v222 = BYTE3(v118);
              char v223 = BYTE4(v118);
              char v224 = BYTE5(v118);
              int v142 = memcmp(__s1, &__s2, BYTE6(v118));
LABEL_247:
              uint64_t v42 = (uint64_t)v210;
              uint64_t v127 = (uint64_t)v213;
            }
LABEL_248:
            uint64_t v133 = v216;
            sub_1004CBE50(v217, type metadata accessor for SenderKeyInfo);
            sub_1004CBE50((uint64_t)v218, type metadata accessor for SenderKeyInfo);
            sub_1004CBF18((uint64_t)v30, v133, type metadata accessor for SenderKeyInfo);
            sub_1004CBF18((uint64_t)a1, v127, type metadata accessor for SenderKeyInfo);
            if (v142) {
              goto LABEL_151;
            }
LABEL_249:
            char v187 = sub_100725C60();
            sub_1004CBE50(v127, type metadata accessor for SenderKeyInfo);
            sub_1004CBE50(v133, type metadata accessor for SenderKeyInfo);
            sub_1004CBF18((uint64_t)v30, v42, type metadata accessor for SenderKeyInfo);
            uint64_t v41 = v209;
            sub_1004CBF18((uint64_t)a1, v209, type metadata accessor for SenderKeyInfo);
            if ((v187 & 1) == 0) {
              goto LABEL_152;
            }
            uint64_t v188 = *(int *)(v205 + 28);
            uint64_t v189 = *(void *)(v42 + v188);
            uint64_t v190 = *(void *)(v42 + v188 + 8);
            uint64_t v191 = *(void *)(v42 + v188 + 16);
            uint64_t v192 = *(void *)(v42 + v188 + 24);
            int64_t v193 = (void *)(v41 + v188);
            uint64_t v194 = v193[2];
            uint64_t v195 = v193[3];
            if ((v189 != *v193 || v190 != v193[1]) && (sub_100726D20() & 1) == 0) {
              goto LABEL_152;
            }
            if (v191 == v194 && v192 == v195) {
              goto LABEL_334;
            }
            char v196 = sub_100726D20();
            sub_1004CBE50(v42, type metadata accessor for SenderKeyInfo);
            uint64_t v197 = v209;
            sub_1004CBE50(v209, type metadata accessor for SenderKeyInfo);
            uint64_t v41 = v197;
            sub_1004CBE50((uint64_t)v30, type metadata accessor for SenderKeyInfo);
            if (v196) {
              goto LABEL_335;
            }
LABEL_153:
            a2 = (a2 + 1) & v211;
            if (((*(void *)(v214 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              goto LABEL_257;
            }
            break;
        }
      }
    }
  }
LABEL_257:
  uint64_t v198 = *v206;
  *(void *)(*v206 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1004CBEB0((uint64_t)a1, *(void *)(v198 + 48) + *(void *)(v207 + 72) * a2, type metadata accessor for SenderKeyInfo);
  uint64_t v200 = *(void *)(v198 + 16);
  BOOL v49 = __OFADD__(v200, 1);
  uint64_t v201 = v200 + 1;
  if (v49)
  {
LABEL_263:
    __break(1u);
LABEL_264:
    __break(1u);
LABEL_265:
    __break(1u);
LABEL_266:
    __break(1u);
LABEL_267:
    __break(1u);
LABEL_268:
    __break(1u);
LABEL_269:
    __break(1u);
LABEL_270:
    __break(1u);
LABEL_271:
    __break(1u);
LABEL_272:
    __break(1u);
LABEL_273:
    __break(1u);
LABEL_274:
    __break(1u);
LABEL_275:
    __break(1u);
LABEL_276:
    __break(1u);
LABEL_277:
    __break(1u);
LABEL_278:
    __break(1u);
LABEL_279:
    __break(1u);
LABEL_280:
    __break(1u);
LABEL_281:
    __break(1u);
LABEL_282:
    __break(1u);
LABEL_283:
    __break(1u);
LABEL_284:
    __break(1u);
LABEL_285:
    __break(1u);
LABEL_286:
    __break(1u);
LABEL_287:
    __break(1u);
LABEL_288:
    __break(1u);
LABEL_289:
    __break(1u);
LABEL_290:
    __break(1u);
LABEL_291:
    __break(1u);
LABEL_292:
    __break(1u);
LABEL_293:
    __break(1u);
LABEL_294:
    __break(1u);
LABEL_295:
    __break(1u);
LABEL_296:
    __break(1u);
LABEL_297:
    __break(1u);
LABEL_298:
    __break(1u);
LABEL_299:
    __break(1u);
LABEL_300:
    __break(1u);
LABEL_301:
    __break(1u);
LABEL_302:
    __break(1u);
LABEL_303:
    __break(1u);
LABEL_304:
    __break(1u);
LABEL_305:
    __break(1u);
  }
  *(void *)(v198 + 16) = v201;
  return result;
}

void sub_1004C5CA8(uint64_t a1, unint64_t a2, char a3)
{
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_1004C3374();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1004C6254();
      goto LABEL_14;
    }
    sub_1004C68F0();
  }
  uint64_t v8 = *v3;
  Swift::Int v9 = sub_1007267E0(*(void *)(*v3 + 40));
  uint64_t v10 = -1 << *(unsigned char *)(v8 + 32);
  a2 = v9 & ~v10;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_100462C50(0, &qword_100A46860);
    id v11 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
    char v12 = sub_1007267F0();

    if (v12)
    {
LABEL_13:
      sub_100726D30();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v14 = *(id *)(*(void *)(v8 + 48) + 8 * a2);
        char v15 = sub_1007267F0();

        if (v15) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v16 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v16 + 48) + 8 * a2) = a1;
  uint64_t v17 = *(void *)(v16 + 16);
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18) {
    __break(1u);
  }
  else {
    *(void *)(v16 + 16) = v19;
  }
}

void *sub_1004C5E30()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A48620);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1007269B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    long long v17 = *(_OWORD *)(*(void *)(v2 + 48) + v16);
    *(_OWORD *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = (void *)sub_100441FD4(v17, *((unint64_t *)&v17 + 1));
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1004C5FE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v4);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100431F80(&qword_100A46D68);
  uint64_t v7 = *v0;
  uint64_t v8 = sub_1007269B0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v9;
    return result;
  }
  uint64_t v25 = v1;
  uint64_t result = (void *)(v8 + 56);
  uint64_t v11 = v7 + 56;
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v9 + 32)) + 63) >> 6;
  if (v9 != v7 || (unint64_t)result >= v11 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v7 + 56), 8 * v12);
  }
  int64_t v13 = 0;
  *(void *)(v9 + 16) = *(void *)(v7 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v7 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v21 >= v17) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_25;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_25;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_9:
    unint64_t v20 = *(void *)(v3 + 72) * v19;
    sub_1004CBF18(*(void *)(v7 + 48) + v20, (uint64_t)v6, type metadata accessor for SenderKeyInfo);
    uint64_t result = (void *)sub_1004CBEB0((uint64_t)v6, *(void *)(v9 + 48) + v20, type metadata accessor for SenderKeyInfo);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v17)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v25;
    goto LABEL_27;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_25;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

id sub_1004C6254()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A46D80);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1007269B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    int64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1004C6400()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100431F80(&qword_100A48620);
  uint64_t v3 = sub_1007269C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    unint64_t v21 = v19[1];
    sub_100726DD0();
    sub_100441FD4(v20, v21);
    sub_100725B60();
    uint64_t result = sub_100726E30();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1004C66B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v4);
  uint64_t v6 = (uint64_t *)((char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *v0;
  sub_100431F80(&qword_100A46D68);
  uint64_t v8 = sub_1007269C0();
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_24:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v10 = v7 + 56;
  uint64_t v11 = -1;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  unint64_t v12 = v11 & *(void *)(v7 + 56);
  int64_t v13 = (unint64_t)(v9 + 63) >> 6;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v16 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v17 = v16 | (v15 << 6);
      goto LABEL_6;
    }
    int64_t v18 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v18 >= v13) {
      goto LABEL_22;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v18);
    ++v15;
    if (!v19)
    {
      int64_t v15 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_22;
      }
      unint64_t v19 = *(void *)(v10 + 8 * v15);
      if (!v19)
      {
        int64_t v15 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_22;
        }
        unint64_t v19 = *(void *)(v10 + 8 * v15);
        if (!v19) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v15 << 6);
LABEL_6:
    sub_1004CBF18(*(void *)(v7 + 48) + *(void *)(v3 + 72) * v17, (uint64_t)v6, type metadata accessor for SenderKeyInfo);
    uint64_t result = sub_1004C3614(v6, v8);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13)
  {
LABEL_22:
    uint64_t result = swift_release_n();
    goto LABEL_24;
  }
  unint64_t v19 = *(void *)(v10 + 8 * v20);
  if (v19)
  {
    int64_t v15 = v20;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v15 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v15 >= v13) {
      goto LABEL_22;
    }
    unint64_t v19 = *(void *)(v10 + 8 * v15);
    ++v20;
    if (v19) {
      goto LABEL_21;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1004C68F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_100431F80(&qword_100A46D80);
  uint64_t v3 = sub_1007269C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v28 = v0;
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    Swift::Int v19 = *(void *)(v4 + 40);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t result = sub_1007267E0(v19);
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v13 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(void *)(*(void *)(v4 + 48) + 8 * v13) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v28;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1004C6B6C(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    unint64_t v13 = v11[1];
    sub_100441FD4(*v11, v13);
    sub_1004C7AF0(v12, v13, &v17);
    sub_10044CE88(v17, *((unint64_t *)&v17 + 1));
    uint64_t result = sub_100442248(v12, v13);
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

void *sub_1004C6D28(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v101 = a1 + 56;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v99 = ~v4;
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  int64_t v100 = (unint64_t)(63 - v4) >> 6;
  int64_t v7 = (char *)(a2 + 56);
  uint64_t v8 = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  uint64_t v108 = v7;
  uint64_t v102 = v8;
  while (1)
  {
    if (v6)
    {
      uint64_t v106 = (v6 - 1) & v6;
      int64_t v107 = v9;
      unint64_t v10 = __clz(__rbit64(v6)) | (v9 << 6);
    }
    else
    {
      int64_t v11 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_154;
      }
      if (v11 >= v100)
      {
LABEL_145:
        sub_100462C48();
        return (void *)v2;
      }
      unint64_t v12 = *(void *)(v101 + 8 * v11);
      int64_t v13 = v9 + 1;
      if (!v12)
      {
        int64_t v13 = v9 + 2;
        if (v9 + 2 >= v100) {
          goto LABEL_145;
        }
        unint64_t v12 = *(void *)(v101 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v9 + 3;
          if (v9 + 3 >= v100) {
            goto LABEL_145;
          }
          unint64_t v12 = *(void *)(v101 + 8 * v13);
          if (!v12)
          {
            int64_t v13 = v9 + 4;
            if (v9 + 4 >= v100) {
              goto LABEL_145;
            }
            unint64_t v12 = *(void *)(v101 + 8 * v13);
            if (!v12)
            {
              uint64_t v14 = v9 + 5;
              if (v9 + 5 >= v100) {
                goto LABEL_145;
              }
              unint64_t v12 = *(void *)(v101 + 8 * v14);
              if (!v12)
              {
                while (1)
                {
                  int64_t v13 = v14 + 1;
                  if (__OFADD__(v14, 1)) {
                    goto LABEL_171;
                  }
                  if (v13 >= v100) {
                    goto LABEL_145;
                  }
                  unint64_t v12 = *(void *)(v101 + 8 * v13);
                  ++v14;
                  if (v12) {
                    goto LABEL_24;
                  }
                }
              }
              int64_t v13 = v9 + 5;
            }
          }
        }
      }
LABEL_24:
      uint64_t v106 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
      int64_t v107 = v13;
    }
    unint64_t v15 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v10);
    uint64_t v17 = *v15;
    unint64_t v16 = v15[1];
    sub_100726DD0();
    sub_100441FD4(v17, v16);
    unint64_t v114 = v16;
    sub_100725B60();
    Swift::Int v18 = sub_100726E30();
    uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v20 = v18 & ~v19;
    if ((*(void *)&v7[(v20 >> 3) & 0xFFFFFFFFFFFFFF8] >> v20)) {
      break;
    }
LABEL_6:
    sub_100442248(v17, v114);
    uint64_t v8 = v102;
    int64_t v9 = v107;
    unint64_t v6 = v106;
  }
  unint64_t v21 = v114 >> 62;
  uint64_t v22 = ~v19;
  unint64_t v104 = HIDWORD(v17);
  BOOL v23 = __OFSUB__(HIDWORD(v17), v17);
  BOOL v111 = v23;
  size_t v110 = HIDWORD(v17) - (int)v17;
  size_t v115 = BYTE6(v114);
  unint64_t v113 = v114 & 0x3FFFFFFFFFFFFFFFLL;
  uint64_t v109 = (int)v17;
  uint64_t v105 = v17 >> 32;
  uint64_t v103 = (v17 >> 32) - (int)v17;
  uint64_t v112 = ~v19;
  while (2)
  {
    char v24 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v20);
    uint64_t v25 = *v24;
    unint64_t v26 = v24[1];
    uint64_t v27 = 0;
    switch(v26 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v25), v25))
        {
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
LABEL_154:
          __break(1u);
LABEL_155:
          __break(1u);
LABEL_156:
          __break(1u);
LABEL_157:
          __break(1u);
LABEL_158:
          __break(1u);
LABEL_159:
          __break(1u);
LABEL_160:
          __break(1u);
LABEL_161:
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
        }
        uint64_t v27 = HIDWORD(v25) - (int)v25;
LABEL_38:
        sub_100441FD4(v25, v26);
        break;
      case 2uLL:
        uint64_t v29 = *(void *)(v25 + 16);
        uint64_t v28 = *(void *)(v25 + 24);
        uint64_t v27 = v28 - v29;
        if (!__OFSUB__(v28, v29)) {
          goto LABEL_38;
        }
        goto LABEL_148;
      case 3uLL:
        break;
      default:
        uint64_t v27 = BYTE6(v26);
        break;
    }
    size_t v30 = v115;
    switch((int)v21)
    {
      case 1:
        size_t v30 = v110;
        if (v111) {
          goto LABEL_150;
        }
        goto LABEL_43;
      case 2:
        uint64_t v32 = *(void *)(v17 + 16);
        uint64_t v31 = *(void *)(v17 + 24);
        BOOL v33 = __OFSUB__(v31, v32);
        size_t v30 = v31 - v32;
        if (!v33) {
          goto LABEL_43;
        }
        goto LABEL_149;
      case 3:
        if (v27) {
          goto LABEL_31;
        }
        goto LABEL_140;
      default:
LABEL_43:
        if (v27 != v30)
        {
LABEL_31:
          sub_100442248(v25, v26);
          goto LABEL_32;
        }
        if (v27 >= 1)
        {
          switch(v26 >> 62)
          {
            case 1uLL:
              if ((int)v25 > v25 >> 32) {
                goto LABEL_151;
              }
              uint64_t v49 = sub_100725910();
              if (v49)
              {
                uint64_t v50 = v49;
                uint64_t v51 = sub_100725940();
                if (__OFSUB__((int)v25, v51)) {
                  goto LABEL_153;
                }
                uint64_t v52 = (const void *)(v50 + (int)v25 - v51);
                sub_100725930();
                if (!v21)
                {
LABEL_95:
                  *(_WORD *)__s1 = v17;
                  __s1[2] = BYTE2(v17);
                  __s1[3] = BYTE3(v17);
                  __s1[4] = v104;
                  __s1[5] = BYTE5(v17);
                  __s1[6] = BYTE6(v17);
                  __s1[7] = HIBYTE(v17);
                  *(_DWORD *)&__s1[8] = v114;
                  *(_WORD *)&__s1[12] = WORD2(v114);
                  if (!v52) {
                    goto LABEL_181;
                  }
                  int v57 = memcmp(v52, __s1, v115);
LABEL_97:
                  sub_100442248(v25, v26);
                  goto LABEL_137;
                }
              }
              else
              {
                uint64_t v52 = 0;
                sub_100725930();
                if (!v21) {
                  goto LABEL_95;
                }
              }
              if (v21 == 1)
              {
                if (v105 < v109) {
                  goto LABEL_163;
                }
                swift_retain();
                uint64_t v53 = sub_100725910();
                if (v53)
                {
                  uint64_t v54 = sub_100725940();
                  if (__OFSUB__(v109, v54)) {
                    goto LABEL_170;
                  }
                  v53 += v109 - v54;
                }
                uint64_t v55 = sub_100725930();
                size_t v56 = v103;
                if (v55 < v103) {
                  size_t v56 = v55;
                }
                if (!v52) {
                  goto LABEL_184;
                }
                if (!v53) {
                  goto LABEL_185;
                }
                size_t v47 = v56;
                uint64_t v48 = v52;
                uint64_t v46 = (const void *)v53;
LABEL_79:
                int v57 = memcmp(v48, v46, v47);
                sub_100442248(v17, v114);
                goto LABEL_97;
              }
              uint64_t v79 = *(void *)(v17 + 16);
              uint64_t v98 = *(void *)(v17 + 24);
              swift_retain();
              swift_retain();
              uint64_t v80 = sub_100725910();
              if (v80)
              {
                uint64_t v81 = v80;
                uint64_t v82 = sub_100725940();
                if (__OFSUB__(v79, v82)) {
                  goto LABEL_169;
                }
                uint64_t v83 = v79;
                size_t v84 = (const void *)(v81 + v79 - v82);
              }
              else
              {
                uint64_t v83 = v79;
                size_t v84 = 0;
              }
              int64_t v85 = v98 - v83;
              if (__OFSUB__(v98, v83)) {
                goto LABEL_164;
              }
              uint64_t v86 = sub_100725930();
              if (v86 >= v85) {
                size_t v87 = v85;
              }
              else {
                size_t v87 = v86;
              }
              if (!v52) {
                goto LABEL_175;
              }
              if (!v84) {
                goto LABEL_176;
              }
              int v57 = memcmp(v52, v84, v87);
LABEL_136:
              swift_release();
              swift_release();
              sub_100442248(v25, v26);
              int64_t v7 = v108;
LABEL_137:
              uint64_t v22 = v112;
              if (!v57) {
                goto LABEL_141;
              }
              break;
            case 2uLL:
              uint64_t v38 = *(void *)(v25 + 16);
              swift_retain();
              swift_retain();
              uint64_t v39 = sub_100725910();
              if (v39)
              {
                uint64_t v40 = v39;
                uint64_t v41 = sub_100725940();
                if (__OFSUB__(v38, v41)) {
                  goto LABEL_152;
                }
                uint64_t v42 = (const void *)(v40 + v38 - v41);
              }
              else
              {
                uint64_t v42 = 0;
              }
              sub_100725930();
              if (v21)
              {
                if (v21 == 1)
                {
                  if (v105 < v109) {
                    goto LABEL_157;
                  }
                  swift_retain();
                  uint64_t v59 = (char *)sub_100725910();
                  if (v59)
                  {
                    uint64_t v60 = sub_100725940();
                    if (__OFSUB__(v109, v60)) {
                      goto LABEL_168;
                    }
                    v59 += v109 - v60;
                  }
                  uint64_t v61 = sub_100725930();
                  size_t v62 = v103;
                  if (v61 < v103) {
                    size_t v62 = v61;
                  }
                  if (!v42) {
                    goto LABEL_178;
                  }
                  if (!v59) {
                    goto LABEL_179;
                  }
                  int v57 = memcmp(v42, v59, v62);
                  sub_100442248(v17, v114);
                }
                else
                {
                  uint64_t v97 = v2;
                  uint64_t v73 = *(void *)(v17 + 16);
                  uint64_t v98 = *(void *)(v17 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v74 = (char *)sub_100725910();
                  if (v74)
                  {
                    uint64_t v75 = sub_100725940();
                    if (__OFSUB__(v73, v75)) {
                      goto LABEL_167;
                    }
                    v74 += v73 - v75;
                  }
                  BOOL v33 = __OFSUB__(v98, v73);
                  int64_t v76 = v98 - v73;
                  if (v33) {
                    goto LABEL_162;
                  }
                  uint64_t v77 = sub_100725930();
                  if (v77 >= v76) {
                    size_t v78 = v76;
                  }
                  else {
                    size_t v78 = v77;
                  }
                  if (!v42) {
                    goto LABEL_173;
                  }
                  uint64_t v2 = v97;
                  if (!v74) {
                    goto LABEL_174;
                  }
                  int v57 = memcmp(v42, v74, v78);
                  swift_release();
                  swift_release();
                }
              }
              else
              {
                *(_WORD *)__s1 = v17;
                __s1[2] = BYTE2(v17);
                __s1[3] = BYTE3(v17);
                __s1[4] = v104;
                __s1[5] = BYTE5(v17);
                __s1[6] = BYTE6(v17);
                __s1[7] = HIBYTE(v17);
                *(_DWORD *)&__s1[8] = v114;
                *(_WORD *)&__s1[12] = WORD2(v114);
                if (!v42)
                {
                  __break(1u);
LABEL_173:
                  __break(1u);
LABEL_174:
                  __break(1u);
LABEL_175:
                  __break(1u);
LABEL_176:
                  __break(1u);
LABEL_177:
                  sub_100725930();
                  __break(1u);
LABEL_178:
                  __break(1u);
LABEL_179:
                  __break(1u);
LABEL_180:
                  sub_100725930();
                  __break(1u);
LABEL_181:
                  __break(1u);
LABEL_182:
                  __break(1u);
LABEL_183:
                  __break(1u);
LABEL_184:
                  __break(1u);
LABEL_185:
                  __break(1u);
                  swift_willThrow();
                  swift_errorRelease();
                  __break(1u);
                  swift_errorRelease();
                  swift_slowDealloc();
                  __break(1u);
                  JUMPOUT(0x1004C7AC0);
                }
                int v57 = memcmp(v42, __s1, v115);
              }
              goto LABEL_136;
            case 3uLL:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v21) {
                goto LABEL_80;
              }
              if (v21 == 1)
              {
                if (v105 < v109) {
                  goto LABEL_155;
                }
                sub_100441FD4(v17, v114);
                uint64_t v43 = sub_100725910();
                if (!v43) {
                  goto LABEL_180;
                }
                uint64_t v35 = v43;
                uint64_t v44 = sub_100725940();
                uint64_t v37 = v109 - v44;
                if (__OFSUB__(v109, v44)) {
                  goto LABEL_161;
                }
                goto LABEL_61;
              }
              uint64_t v63 = *(void *)(v17 + 16);
              uint64_t v64 = *(void *)(v17 + 24);
              swift_retain();
              swift_retain();
              uint64_t v65 = (char *)sub_100725910();
              if (v65)
              {
                uint64_t v66 = sub_100725940();
                if (__OFSUB__(v63, v66)) {
                  goto LABEL_166;
                }
                v65 += v63 - v66;
              }
              BOOL v33 = __OFSUB__(v64, v63);
              int64_t v67 = v64 - v63;
              if (v33) {
                goto LABEL_159;
              }
              uint64_t v68 = sub_100725930();
              if (!v65) {
                goto LABEL_183;
              }
              goto LABEL_109;
            default:
              *(void *)__s1 = v25;
              *(_WORD *)&__s1[8] = v26;
              __s1[10] = BYTE2(v26);
              __s1[11] = BYTE3(v26);
              __s1[12] = BYTE4(v26);
              __s1[13] = BYTE5(v26);
              if (!v21)
              {
LABEL_80:
                __int16 __s2 = v17;
                char v117 = BYTE2(v17);
                char v118 = BYTE3(v17);
                char v119 = v104;
                char v120 = BYTE5(v17);
                char v121 = BYTE6(v17);
                char v122 = HIBYTE(v17);
                int v123 = v114;
                __int16 v124 = WORD2(v114);
                int v58 = memcmp(__s1, &__s2, v115);
                sub_100442248(v25, v26);
                if (!v58) {
                  goto LABEL_141;
                }
                break;
              }
              if (v21 == 1)
              {
                if (v105 < v109) {
                  goto LABEL_156;
                }
                sub_100441FD4(v17, v114);
                uint64_t v34 = sub_100725910();
                if (!v34) {
                  goto LABEL_177;
                }
                uint64_t v35 = v34;
                uint64_t v36 = sub_100725940();
                uint64_t v37 = v109 - v36;
                if (__OFSUB__(v109, v36)) {
                  goto LABEL_160;
                }
LABEL_61:
                uint64_t v45 = sub_100725930();
                uint64_t v46 = (const void *)(v35 + v37);
                if (v45 >= v103) {
                  size_t v47 = v103;
                }
                else {
                  size_t v47 = v45;
                }
                uint64_t v48 = __s1;
                goto LABEL_79;
              }
              uint64_t v69 = *(void *)(v17 + 16);
              uint64_t v70 = *(void *)(v17 + 24);
              swift_retain();
              swift_retain();
              uint64_t v65 = (char *)sub_100725910();
              if (v65)
              {
                uint64_t v71 = sub_100725940();
                if (__OFSUB__(v69, v71)) {
                  goto LABEL_165;
                }
                v65 += v69 - v71;
              }
              BOOL v33 = __OFSUB__(v70, v69);
              int64_t v67 = v70 - v69;
              if (v33) {
                goto LABEL_158;
              }
              uint64_t v68 = sub_100725930();
              if (!v65) {
                goto LABEL_182;
              }
LABEL_109:
              if (v68 >= v67) {
                size_t v72 = v67;
              }
              else {
                size_t v72 = v68;
              }
              int v57 = memcmp(__s1, v65, v72);
              goto LABEL_136;
          }
LABEL_32:
          unint64_t v20 = (v20 + 1) & v22;
          if (((*(void *)&v7[(v20 >> 3) & 0xFFFFFFFFFFFFFF8] >> v20) & 1) == 0) {
            goto LABEL_6;
          }
          continue;
        }
LABEL_140:
        sub_100442248(v25, v26);
LABEL_141:
        uint64_t isStackAllocationSafe = sub_100442248(v17, v114);
        v126[0] = v102;
        v126[1] = v101;
        v126[2] = v99;
        v126[3] = v107;
        v126[4] = v106;
        char v90 = *(unsigned char *)(v2 + 32);
        unint64_t v91 = (unint64_t)((1 << v90) + 63) >> 6;
        size_t v92 = 8 * v91;
        if ((v90 & 0x3Fu) <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
        {
          __chkstk_darwin(isStackAllocationSafe, v89);
          memcpy((char *)&v97 - ((v92 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v92);
          uint64_t v93 = sub_1004C8544((unint64_t *)((char *)&v97 - ((v92 + 15) & 0x3FFFFFFFFFFFFFF0)), v91, v2, v20, v126);
          swift_release();
          sub_100462C48();
          return v93;
        }
        else
        {
          uint64_t v94 = (void *)swift_slowAlloc();
          memcpy(v94, v7, v92);
          uint64_t v95 = sub_1004C8544((unint64_t *)v94, v91, v2, v20, v126);
          swift_release();
          sub_100462C48();
          swift_slowDealloc();
          return v95;
        }
    }
  }
}

uint64_t sub_1004C7AF0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t v6 = *v3;
  sub_100726DD0();
  swift_bridgeObjectRetain();
  unint64_t v86 = a2;
  sub_100725B60();
  Swift::Int v7 = sub_100726E30();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  uint64_t v10 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_116:
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = xmmword_100795A50;
    return result;
  }
  uint64_t v11 = ~v8;
  unint64_t v12 = a2 >> 62;
  BOOL v13 = __OFSUB__(HIDWORD(a1), a1);
  BOOL v84 = v13;
  uint64_t v83 = v6 + 56;
  uint64_t v80 = (a1 >> 32) - (int)a1;
  uint64_t v81 = a1 >> 32;
  uint64_t v79 = v6;
  uint64_t v85 = ~v8;
  while (2)
  {
    uint64_t v14 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v9);
    uint64_t v15 = *v14;
    unint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v16 >> 62);
    uint64_t v18 = 0;
    switch(v16 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v15), v15))
        {
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          sub_1004C5E30();
          uint64_t v76 = *(void *)__s1;
          goto LABEL_119;
        }
        uint64_t v18 = HIDWORD(v15) - (int)v15;
LABEL_14:
        sub_100441FD4(v15, v16);
        break;
      case 2uLL:
        uint64_t v20 = *(void *)(v15 + 16);
        uint64_t v19 = *(void *)(v15 + 24);
        uint64_t v18 = v19 - v20;
        if (!__OFSUB__(v19, v20)) {
          goto LABEL_14;
        }
        goto LABEL_121;
      case 3uLL:
        break;
      default:
        uint64_t v18 = BYTE6(v16);
        break;
    }
    uint64_t v21 = BYTE6(v86);
    switch((int)v12)
    {
      case 1:
        uint64_t v21 = HIDWORD(a1) - (int)a1;
        if (v84) {
          goto LABEL_122;
        }
        goto LABEL_19;
      case 2:
        uint64_t v23 = *(void *)(a1 + 16);
        uint64_t v22 = *(void *)(a1 + 24);
        BOOL v24 = __OFSUB__(v22, v23);
        uint64_t v21 = v22 - v23;
        if (!v24) {
          goto LABEL_19;
        }
        goto LABEL_123;
      case 3:
        if (v18) {
          goto LABEL_7;
        }
        goto LABEL_117;
      default:
LABEL_19:
        if (v18 != v21)
        {
LABEL_7:
          sub_100442248(v15, v16);
          goto LABEL_8;
        }
        if (v18 >= 1)
        {
          switch((int)v17)
          {
            case 1:
              if ((int)v15 > v15 >> 32) {
                goto LABEL_124;
              }
              uint64_t v17 = (void *)sub_100725910();
              if (!v17) {
                goto LABEL_33;
              }
              uint64_t v29 = sub_100725940();
              if (__OFSUB__((int)v15, v29)) {
                goto LABEL_126;
              }
              uint64_t v17 = (void *)((char *)v17 + (int)v15 - v29);
LABEL_33:
              sub_100725930();
              uint64_t v11 = v85;
              if (!v12)
              {
                *(void *)__s1 = a1;
                *(_DWORD *)&__s1[8] = v86;
                *(_WORD *)&__s1[12] = WORD2(v86);
                if (!v17) {
                  goto LABEL_155;
                }
                uint64_t v49 = (uint64_t *)__s1;
                uint64_t v48 = v17;
                goto LABEL_101;
              }
              if (v12 == 1)
              {
                if (v81 < (int)a1) {
                  goto LABEL_136;
                }
                swift_retain();
                size_t v30 = (char *)sub_100725910();
                if (v30)
                {
                  uint64_t v31 = sub_100725940();
                  if (__OFSUB__((int)a1, v31)) {
                    goto LABEL_143;
                  }
                  v30 += (int)a1 - v31;
                }
                uint64_t v32 = sub_100725930();
                size_t v33 = (a1 >> 32) - (int)a1;
                if (v32 < v80) {
                  size_t v33 = v32;
                }
                if (!v17) {
                  goto LABEL_145;
                }
                if (!v30) {
                  goto LABEL_146;
                }
                int v34 = memcmp(v17, v30, v33);
                sub_100442248(a1, v86);
              }
              else
              {
                uint64_t v68 = *(void *)(a1 + 16);
                uint64_t v67 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v69 = (char *)sub_100725910();
                if (v69)
                {
                  uint64_t v70 = sub_100725940();
                  if (__OFSUB__(v68, v70)) {
                    goto LABEL_142;
                  }
                  v69 += v68 - v70;
                }
                BOOL v24 = __OFSUB__(v67, v68);
                int64_t v71 = v67 - v68;
                if (v24) {
                  goto LABEL_137;
                }
                uint64_t v72 = sub_100725930();
                if (v72 >= v71) {
                  size_t v73 = v71;
                }
                else {
                  size_t v73 = v72;
                }
                if (!v17) {
                  goto LABEL_156;
                }
                uint64_t v6 = v79;
                uint64_t v10 = v83;
                if (!v69) {
                  goto LABEL_157;
                }
                int v34 = memcmp(v17, v69, v73);
                swift_release();
                swift_release();
              }
              sub_100442248(v15, v16);
              goto LABEL_114;
            case 2:
              uint64_t v17 = (void *)(v16 & 0x3FFFFFFFFFFFFFFFLL);
              uint64_t v35 = *(void *)(v15 + 16);
              swift_retain();
              swift_retain();
              uint64_t v36 = (char *)sub_100725910();
              if (!v36) {
                goto LABEL_47;
              }
              uint64_t v37 = sub_100725940();
              if (__OFSUB__(v35, v37)) {
                goto LABEL_125;
              }
              v36 += v35 - v37;
LABEL_47:
              sub_100725930();
              uint64_t v10 = v83;
              if (v12)
              {
                if (v12 == 1)
                {
                  if (v81 < (int)a1) {
                    goto LABEL_130;
                  }
                  swift_retain();
                  uint64_t v38 = (char *)sub_100725910();
                  if (v38)
                  {
                    uint64_t v39 = sub_100725940();
                    if (__OFSUB__((int)a1, v39)) {
                      goto LABEL_141;
                    }
                    v38 += (int)a1 - v39;
                  }
                  uint64_t v40 = sub_100725930();
                  size_t v41 = (a1 >> 32) - (int)a1;
                  if (v40 < v80) {
                    size_t v41 = v40;
                  }
                  if (!v36) {
                    goto LABEL_147;
                  }
                  if (!v38) {
                    goto LABEL_148;
                  }
                  int v42 = memcmp(v36, v38, v41);
                  sub_100442248(a1, v86);
                  swift_release();
                }
                else
                {
                  uint64_t v60 = *(void *)(a1 + 16);
                  uint64_t v77 = *(void *)(a1 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v61 = (char *)sub_100725910();
                  if (v61)
                  {
                    uint64_t v62 = sub_100725940();
                    if (__OFSUB__(v60, v62)) {
                      goto LABEL_140;
                    }
                    v61 += v60 - v62;
                  }
                  BOOL v24 = __OFSUB__(v77, v60);
                  int64_t v63 = v77 - v60;
                  if (v24) {
                    goto LABEL_135;
                  }
                  uint64_t v64 = sub_100725930();
                  if (v64 >= v63) {
                    size_t v65 = v63;
                  }
                  else {
                    size_t v65 = v64;
                  }
                  if (!v36) {
                    goto LABEL_153;
                  }
                  uint64_t v6 = v79;
                  if (!v61) {
                    goto LABEL_154;
                  }
                  int v42 = memcmp(v36, v61, v65);
                  swift_release();
                  swift_release();
                  swift_release();
                }
                swift_release();
                sub_100442248(v15, v16);
                uint64_t v10 = v83;
              }
              else
              {
                *(void *)__s1 = a1;
                *(_DWORD *)&__s1[8] = v86;
                *(_WORD *)&__s1[12] = WORD2(v86);
                if (!v36) {
                  goto LABEL_152;
                }
                int v42 = memcmp(v36, __s1, BYTE6(v86));
                swift_release();
                swift_release();
                sub_100442248(v15, v16);
              }
              uint64_t v11 = v85;
              if (!v42) {
                goto LABEL_118;
              }
              break;
            case 3:
              *(void *)&__s1[6] = 0;
              *(void *)__s1 = 0;
              if (!v12) {
                goto LABEL_68;
              }
              if (v12 == 1)
              {
                if (v81 < (int)a1) {
                  goto LABEL_129;
                }
                sub_100441FD4(a1, v86);
                uint64_t v43 = sub_100725910();
                if (!v43) {
                  goto LABEL_149;
                }
                uint64_t v26 = v43;
                uint64_t v44 = sub_100725940();
                uint64_t v28 = (int)a1 - v44;
                if (__OFSUB__((int)a1, v44)) {
                  goto LABEL_134;
                }
                goto LABEL_63;
              }
              uint64_t v56 = *(void *)(a1 + 16);
              uint64_t v57 = *(void *)(a1 + 24);
              swift_retain();
              swift_retain();
              uint64_t v52 = (char *)sub_100725910();
              if (v52)
              {
                uint64_t v58 = sub_100725940();
                if (__OFSUB__(v56, v58)) {
                  goto LABEL_139;
                }
                v52 += v56 - v58;
              }
              BOOL v24 = __OFSUB__(v57, v56);
              int64_t v54 = v57 - v56;
              if (v24) {
                goto LABEL_132;
              }
              uint64_t v55 = sub_100725930();
              if (!v52) {
                goto LABEL_151;
              }
              goto LABEL_80;
            default:
              *(void *)__s1 = v15;
              *(_WORD *)&__s1[8] = v16;
              __s1[10] = BYTE2(v16);
              __s1[11] = BYTE3(v16);
              __s1[12] = BYTE4(v16);
              __s1[13] = BYTE5(v16);
              if (v12)
              {
                if (v12 == 1)
                {
                  if (v81 < (int)a1)
                  {
                    __break(1u);
LABEL_129:
                    __break(1u);
LABEL_130:
                    __break(1u);
LABEL_131:
                    __break(1u);
LABEL_132:
                    __break(1u);
LABEL_133:
                    __break(1u);
LABEL_134:
                    __break(1u);
LABEL_135:
                    __break(1u);
LABEL_136:
                    __break(1u);
LABEL_137:
                    __break(1u);
LABEL_138:
                    __break(1u);
LABEL_139:
                    __break(1u);
LABEL_140:
                    __break(1u);
LABEL_141:
                    __break(1u);
LABEL_142:
                    __break(1u);
LABEL_143:
                    __break(1u);
                  }
                  sub_100441FD4(a1, v86);
                  uint64_t v25 = sub_100725910();
                  if (!v25)
                  {
                    sub_100725930();
                    __break(1u);
LABEL_145:
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    sub_100725930();
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
                    JUMPOUT(0x1004C8514);
                  }
                  uint64_t v26 = v25;
                  uint64_t v27 = sub_100725940();
                  uint64_t v28 = (int)a1 - v27;
                  if (__OFSUB__((int)a1, v27)) {
                    goto LABEL_133;
                  }
LABEL_63:
                  uint64_t v45 = sub_100725930();
                  if (v45 >= v80) {
                    size_t v46 = (a1 >> 32) - (int)a1;
                  }
                  else {
                    size_t v46 = v45;
                  }
                  int v47 = memcmp(__s1, (const void *)(v26 + v28), v46);
                  sub_100442248(a1, v86);
                  sub_100442248(v15, v16);
                  uint64_t v6 = v79;
                  if (!v47) {
                    goto LABEL_118;
                  }
                }
                else
                {
                  uint64_t v50 = *(void *)(a1 + 16);
                  uint64_t v51 = *(void *)(a1 + 24);
                  swift_retain();
                  swift_retain();
                  uint64_t v52 = (char *)sub_100725910();
                  if (v52)
                  {
                    uint64_t v53 = sub_100725940();
                    if (__OFSUB__(v50, v53)) {
                      goto LABEL_138;
                    }
                    v52 += v50 - v53;
                  }
                  BOOL v24 = __OFSUB__(v51, v50);
                  int64_t v54 = v51 - v50;
                  if (v24) {
                    goto LABEL_131;
                  }
                  uint64_t v55 = sub_100725930();
                  if (!v52) {
                    goto LABEL_150;
                  }
LABEL_80:
                  if (v55 >= v54) {
                    size_t v59 = v54;
                  }
                  else {
                    size_t v59 = v55;
                  }
                  int v34 = memcmp(__s1, v52, v59);
                  swift_release();
                  swift_release();
                  sub_100442248(v15, v16);
                  uint64_t v10 = v83;
LABEL_114:
                  uint64_t v11 = v85;
                  if (!v34) {
                    goto LABEL_118;
                  }
                }
              }
              else
              {
LABEL_68:
                uint64_t v87 = a1;
                int v88 = v86;
                __int16 v89 = WORD2(v86);
                uint64_t v48 = __s1;
                uint64_t v49 = &v87;
LABEL_101:
                int v66 = memcmp(v48, v49, BYTE6(v86));
                sub_100442248(v15, v16);
                if (!v66) {
                  goto LABEL_118;
                }
              }
              break;
          }
LABEL_8:
          unint64_t v9 = (v9 + 1) & v11;
          if (((*(void *)(v10 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
            goto LABEL_116;
          }
          continue;
        }
LABEL_117:
        sub_100442248(v15, v16);
LABEL_118:
        swift_bridgeObjectRelease();
        uint64_t v17 = v78;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v76 = *v78;
        *(void *)__s1 = *v78;
        *size_t v78 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          goto LABEL_127;
        }
LABEL_119:
        *a3 = *(_OWORD *)(*(void *)(v76 + 48) + 16 * v9);
        sub_1004C9374(v9);
        *uint64_t v17 = *(void *)__s1;
        return swift_bridgeObjectRelease();
    }
  }
}

void *sub_1004C8544(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v8 = a3 + 56;
  uint64_t v103 = a3 + 56;
  uint64_t v96 = a5;
LABEL_2:
  uint64_t v93 = v7;
  while (1)
  {
LABEL_4:
    int64_t v10 = a5[3];
    unint64_t v9 = a5[4];
    if (v9)
    {
      uint64_t v11 = (v9 - 1) & v9;
      unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
    }
    else
    {
      int64_t v13 = v10 + 1;
      if (__OFADD__(v10, 1)) {
        goto LABEL_155;
      }
      int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
      if (v13 >= v14)
      {
        int64_t v13 = a5[3];
        goto LABEL_145;
      }
      uint64_t v15 = a5[1];
      unint64_t v16 = *(void *)(v15 + 8 * v13);
      if (!v16)
      {
        if (v10 + 2 >= v14) {
          goto LABEL_145;
        }
        unint64_t v16 = *(void *)(v15 + 8 * (v10 + 2));
        if (v16)
        {
          int64_t v13 = v10 + 2;
        }
        else
        {
          int64_t v17 = v10 + 3;
          if (v10 + 3 >= v14)
          {
            int64_t v13 = v10 + 2;
            goto LABEL_145;
          }
          unint64_t v16 = *(void *)(v15 + 8 * v17);
          if (v16)
          {
            int64_t v13 = v10 + 3;
          }
          else
          {
            int64_t v13 = v10 + 4;
            if (v10 + 4 >= v14) {
              goto LABEL_151;
            }
            unint64_t v16 = *(void *)(v15 + 8 * v13);
            if (!v16)
            {
              int64_t v13 = v14 - 1;
              int64_t v18 = v10 + 5;
              do
              {
                if (v14 == v18) {
                  goto LABEL_145;
                }
                unint64_t v16 = *(void *)(v15 + 8 * v18++);
              }
              while (!v16);
              int64_t v13 = v18 - 1;
            }
          }
        }
      }
      uint64_t v11 = (v16 - 1) & v16;
      unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
      int64_t v10 = v13;
    }
    uint64_t v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
    uint64_t v21 = *v19;
    unint64_t v20 = v19[1];
    a5[3] = v10;
    a5[4] = v11;
    sub_100726DD0();
    sub_100441FD4(v21, v20);
    sub_100725B60();
    Swift::Int v22 = sub_100726E30();
    uint64_t v23 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v104 = v20;
    if ((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24)) {
      break;
    }
LABEL_3:
    sub_100442248(v21, v104);
    a5 = v96;
  }
  unint64_t v25 = v20 >> 62;
  uint64_t v105 = ~v23;
  BOOL v26 = __OFSUB__(HIDWORD(v21), v21);
  BOOL v102 = v26;
  size_t __n = BYTE6(v20);
  uint64_t v100 = v21 >> 32;
  uint64_t v99 = (v21 >> 32) - (int)v21;
  while (2)
  {
    uint64_t v27 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v24);
    uint64_t v28 = *v27;
    unint64_t v29 = v27[1];
    uint64_t v30 = 0;
    switch(v29 >> 62)
    {
      case 1uLL:
        if (!__OFSUB__(HIDWORD(v28), v28))
        {
          uint64_t v30 = HIDWORD(v28) - (int)v28;
LABEL_35:
          sub_100441FD4(v28, v29);
LABEL_36:
          size_t v33 = __n;
          switch((int)v25)
          {
            case 1:
              size_t v33 = HIDWORD(v21) - (int)v21;
              if (v102) {
                goto LABEL_150;
              }
              goto LABEL_40;
            case 2:
              uint64_t v35 = *(void *)(v21 + 16);
              uint64_t v34 = *(void *)(v21 + 24);
              BOOL v36 = __OFSUB__(v34, v35);
              size_t v33 = v34 - v35;
              if (!v36) {
                goto LABEL_40;
              }
              goto LABEL_149;
            case 3:
              if (v30) {
                goto LABEL_28;
              }
              goto LABEL_139;
            default:
LABEL_40:
              if (v30 != v33)
              {
LABEL_28:
                sub_100442248(v28, v29);
LABEL_29:
                unint64_t v24 = (v24 + 1) & v105;
                if (((*(void *)(v8 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
                  goto LABEL_3;
                }
                continue;
              }
              if (v30 >= 1)
              {
                switch(v29 >> 62)
                {
                  case 1uLL:
                    if ((int)v28 > v28 >> 32)
                    {
                      __break(1u);
LABEL_153:
                      __break(1u);
LABEL_154:
                      __break(1u);
LABEL_155:
                      __break(1u);
LABEL_156:
                      __break(1u);
LABEL_157:
                      __break(1u);
LABEL_158:
                      __break(1u);
LABEL_159:
                      __break(1u);
LABEL_160:
                      __break(1u);
LABEL_161:
                      __break(1u);
LABEL_162:
                      __break(1u);
LABEL_163:
                      __break(1u);
LABEL_164:
                      __break(1u);
LABEL_165:
                      __break(1u);
LABEL_166:
                      __break(1u);
LABEL_167:
                      __break(1u);
LABEL_168:
                      __break(1u);
LABEL_169:
                      __break(1u);
LABEL_170:
                      __break(1u);
LABEL_171:
                      __break(1u);
LABEL_172:
                      __break(1u);
LABEL_173:
                      sub_100725930();
                      __break(1u);
LABEL_174:
                      sub_100725930();
                      __break(1u);
LABEL_175:
                      __break(1u);
LABEL_176:
                      __break(1u);
LABEL_177:
                      __break(1u);
LABEL_178:
                      __break(1u);
LABEL_179:
                      __break(1u);
LABEL_180:
                      __break(1u);
LABEL_181:
                      __break(1u);
LABEL_182:
                      __break(1u);
LABEL_183:
                      __break(1u);
LABEL_184:
                      __break(1u);
LABEL_185:
                      __break(1u);
LABEL_186:
                      __break(1u);
                    }
                    uint64_t v41 = sub_100725910();
                    if (v41)
                    {
                      uint64_t v42 = v41;
                      uint64_t v43 = sub_100725940();
                      if (__OFSUB__((int)v28, v43)) {
                        goto LABEL_154;
                      }
                      uint64_t v44 = (const void *)(v42 + (int)v28 - v43);
                    }
                    else
                    {
                      uint64_t v44 = 0;
                    }
                    sub_100725930();
                    uint64_t v8 = v103;
                    if (!v25)
                    {
                      *(void *)__s1 = v21;
                      *(_DWORD *)&__s1[8] = v104;
                      *(_WORD *)&__s1[12] = WORD2(v104);
                      if (!v44) {
                        goto LABEL_184;
                      }
                      int v59 = memcmp(v44, __s1, __n);
LABEL_123:
                      sub_100442248(v28, v29);
                      uint64_t v5 = a3;
                      if (!v59) {
                        goto LABEL_140;
                      }
                      goto LABEL_29;
                    }
                    if (v25 == 1)
                    {
                      if (v100 < (int)v21) {
                        goto LABEL_164;
                      }
                      swift_retain();
                      uint64_t v60 = (char *)sub_100725910();
                      if (v60)
                      {
                        uint64_t v61 = sub_100725940();
                        if (__OFSUB__((int)v21, v61)) {
                          goto LABEL_171;
                        }
                        v60 += (int)v21 - v61;
                      }
                      uint64_t v62 = sub_100725930();
                      size_t v63 = (v21 >> 32) - (int)v21;
                      if (v62 < v99) {
                        size_t v63 = v62;
                      }
                      if (!v44) {
                        goto LABEL_177;
                      }
                      if (!v60) {
                        goto LABEL_178;
                      }
                      int v59 = memcmp(v44, v60, v63);
                      sub_100442248(v21, v104);
                      goto LABEL_123;
                    }
                    uint64_t v80 = *(void *)(v21 + 16);
                    uint64_t v98 = *(char **)(v21 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v81 = sub_100725910();
                    if (v81)
                    {
                      uint64_t v82 = v81;
                      uint64_t v83 = sub_100725940();
                      if (__OFSUB__(v80, v83)) {
                        goto LABEL_170;
                      }
                      uint64_t v84 = v80;
                      uint64_t v85 = (const void *)(v82 + v80 - v83);
                    }
                    else
                    {
                      uint64_t v84 = v80;
                      uint64_t v85 = 0;
                    }
                    unint64_t v86 = &v98[-v84];
                    if (__OFSUB__(v98, v84)) {
                      goto LABEL_165;
                    }
                    uint64_t v87 = sub_100725930();
                    if (v87 >= (uint64_t)v86) {
                      size_t v88 = (size_t)v86;
                    }
                    else {
                      size_t v88 = v87;
                    }
                    if (!v44) {
                      goto LABEL_185;
                    }
                    if (!v85) {
                      goto LABEL_186;
                    }
                    int v53 = memcmp(v44, v85, v88);
LABEL_136:
                    swift_release();
                    swift_release();
                    sub_100442248(v28, v29);
                    uint64_t v5 = a3;
LABEL_137:
                    uint64_t v8 = v103;
                    if (!v53) {
                      goto LABEL_140;
                    }
                    break;
                  case 2uLL:
                    uint64_t v45 = *(void *)(v28 + 16);
                    swift_retain();
                    swift_retain();
                    uint64_t v46 = sub_100725910();
                    if (v46)
                    {
                      uint64_t v47 = v46;
                      uint64_t v48 = sub_100725940();
                      if (__OFSUB__(v45, v48)) {
                        goto LABEL_153;
                      }
                      uint64_t v97 = (void *)(v47 + v45 - v48);
                    }
                    else
                    {
                      uint64_t v97 = 0;
                    }
                    sub_100725930();
                    uint64_t v8 = v103;
                    if (!v25)
                    {
                      *(void *)__s1 = v21;
                      *(_DWORD *)&__s1[8] = v104;
                      *(_WORD *)&__s1[12] = WORD2(v104);
                      if (!v97) {
                        goto LABEL_181;
                      }
                      int v59 = memcmp(v97, __s1, __n);
LABEL_109:
                      swift_release();
                      goto LABEL_120;
                    }
                    if (v25 == 1)
                    {
                      if (v100 < (int)v21) {
                        goto LABEL_158;
                      }
                      swift_retain();
                      uint64_t v55 = (char *)sub_100725910();
                      if (v55)
                      {
                        uint64_t v56 = sub_100725940();
                        if (__OFSUB__((int)v21, v56)) {
                          goto LABEL_169;
                        }
                        v55 += (int)v21 - v56;
                      }
                      uint64_t v57 = sub_100725930();
                      size_t v58 = (v21 >> 32) - (int)v21;
                      if (v57 < v99) {
                        size_t v58 = v57;
                      }
                      if (!v97) {
                        goto LABEL_175;
                      }
                      if (!v55) {
                        goto LABEL_176;
                      }
                      int v59 = memcmp(v97, v55, v58);
                      sub_100442248(v21, v104);
                      goto LABEL_109;
                    }
                    uint64_t v74 = *(void *)(v21 + 16);
                    uint64_t v95 = *(void *)(v21 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v75 = (char *)sub_100725910();
                    if (v75)
                    {
                      uint64_t v76 = sub_100725940();
                      if (__OFSUB__(v74, v76)) {
                        goto LABEL_168;
                      }
                      v75 += v74 - v76;
                    }
                    BOOL v36 = __OFSUB__(v95, v74);
                    int64_t v77 = v95 - v74;
                    if (v36) {
                      goto LABEL_163;
                    }
                    uint64_t v78 = sub_100725930();
                    if (v78 >= v77) {
                      size_t v79 = v77;
                    }
                    else {
                      size_t v79 = v78;
                    }
                    if (!v97) {
                      goto LABEL_182;
                    }
                    uint64_t v8 = v103;
                    if (!v75) {
                      goto LABEL_183;
                    }
                    int v59 = memcmp(v97, v75, v79);
                    swift_release();
                    swift_release();
                    swift_release();
LABEL_120:
                    swift_release();
                    goto LABEL_123;
                  case 3uLL:
                    *(void *)&__s1[6] = 0;
                    *(void *)__s1 = 0;
                    if (!v25) {
                      goto LABEL_66;
                    }
                    if (v25 == 1)
                    {
                      if (v100 < (int)v21) {
                        goto LABEL_157;
                      }
                      sub_100441FD4(v21, v104);
                      uint64_t v49 = sub_100725910();
                      if (!v49) {
                        goto LABEL_174;
                      }
                      uint64_t v38 = v49;
                      uint64_t v50 = sub_100725940();
                      uint64_t v40 = (int)v21 - v50;
                      if (__OFSUB__((int)v21, v50)) {
                        goto LABEL_162;
                      }
LABEL_62:
                      uint64_t v51 = sub_100725930();
                      if (v51 >= v99) {
                        size_t v52 = (v21 >> 32) - (int)v21;
                      }
                      else {
                        size_t v52 = v51;
                      }
                      int v53 = memcmp(__s1, (const void *)(v38 + v40), v52);
                      sub_100442248(v21, v104);
                      sub_100442248(v28, v29);
                      goto LABEL_137;
                    }
                    uint64_t v70 = *(void *)(v21 + 16);
                    uint64_t v71 = *(void *)(v21 + 24);
                    swift_retain();
                    swift_retain();
                    int v66 = (char *)sub_100725910();
                    if (v66)
                    {
                      uint64_t v72 = sub_100725940();
                      if (__OFSUB__(v70, v72)) {
                        goto LABEL_167;
                      }
                      v66 += v70 - v72;
                    }
                    BOOL v36 = __OFSUB__(v71, v70);
                    int64_t v68 = v71 - v70;
                    if (v36) {
                      goto LABEL_160;
                    }
                    uint64_t v69 = sub_100725930();
                    if (!v66) {
                      goto LABEL_180;
                    }
LABEL_103:
                    if (v69 >= v68) {
                      size_t v73 = v68;
                    }
                    else {
                      size_t v73 = v69;
                    }
                    int v53 = memcmp(__s1, v66, v73);
                    goto LABEL_136;
                  default:
                    *(void *)__s1 = v28;
                    *(_WORD *)&__s1[8] = v29;
                    __s1[10] = BYTE2(v29);
                    __s1[11] = BYTE3(v29);
                    __s1[12] = BYTE4(v29);
                    __s1[13] = BYTE5(v29);
                    if (!v25)
                    {
LABEL_66:
                      uint64_t __s2 = v21;
                      int v108 = v104;
                      __int16 v109 = WORD2(v104);
                      int v54 = memcmp(__s1, &__s2, __n);
                      sub_100442248(v28, v29);
                      if (!v54) {
                        goto LABEL_140;
                      }
                      goto LABEL_29;
                    }
                    if (v25 == 1)
                    {
                      if (v100 < (int)v21) {
                        goto LABEL_156;
                      }
                      sub_100441FD4(v21, v104);
                      uint64_t v37 = sub_100725910();
                      if (!v37) {
                        goto LABEL_173;
                      }
                      uint64_t v38 = v37;
                      uint64_t v39 = sub_100725940();
                      uint64_t v40 = (int)v21 - v39;
                      if (__OFSUB__((int)v21, v39)) {
                        goto LABEL_161;
                      }
                      goto LABEL_62;
                    }
                    uint64_t v64 = *(void *)(v21 + 16);
                    uint64_t v65 = *(void *)(v21 + 24);
                    swift_retain();
                    swift_retain();
                    int v66 = (char *)sub_100725910();
                    if (v66)
                    {
                      uint64_t v67 = sub_100725940();
                      if (__OFSUB__(v64, v67)) {
                        goto LABEL_166;
                      }
                      v66 += v64 - v67;
                    }
                    BOOL v36 = __OFSUB__(v65, v64);
                    int64_t v68 = v65 - v64;
                    if (v36) {
                      goto LABEL_159;
                    }
                    uint64_t v69 = sub_100725930();
                    if (!v66) {
                      goto LABEL_179;
                    }
                    goto LABEL_103;
                }
                goto LABEL_29;
              }
LABEL_139:
              sub_100442248(v28, v29);
LABEL_140:
              sub_100442248(v21, v104);
              uint64_t v89 = (v24 >> 3) & 0x1FFFFFFFFFFFFFF8;
              uint64_t v90 = *(unint64_t *)((char *)a1 + v89);
              *(unint64_t *)((char *)a1 + v89) = v90 & ~(1 << v24);
              a5 = v96;
              if ((v90 & (1 << v24)) == 0) {
                goto LABEL_4;
              }
              uint64_t v7 = v93 - 1;
              if (__OFSUB__(v93, 1)) {
                goto LABEL_172;
              }
              if (v93 == 1) {
                return &_swiftEmptySetSingleton;
              }
              break;
          }
          goto LABEL_2;
        }
        __break(1u);
LABEL_148:
        __break(1u);
LABEL_149:
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        int64_t v13 = v17;
LABEL_145:
        a5[3] = v13;
        a5[4] = 0;
        swift_retain();
        return (void *)sub_1004C90D8(a1, a2, v93, v5);
      case 2uLL:
        uint64_t v32 = *(void *)(v28 + 16);
        uint64_t v31 = *(void *)(v28 + 24);
        uint64_t v30 = v31 - v32;
        if (!__OFSUB__(v31, v32)) {
          goto LABEL_35;
        }
        goto LABEL_148;
      case 3uLL:
        goto LABEL_36;
      default:
        uint64_t v30 = BYTE6(v29);
        goto LABEL_36;
    }
  }
}

uint64_t sub_1004C90D8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100431F80(&qword_100A48620);
  uint64_t result = sub_1007269E0();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    int64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    unint64_t v19 = v17[1];
    sub_100726DD0();
    sub_100441FD4(v18, v19);
    sub_100725B60();
    uint64_t result = sub_100726E30();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    uint64_t v28 = (uint64_t *)(*((void *)v8 + 6) + 16 * v23);
    *uint64_t v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

unint64_t sub_1004C9374(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1007268A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v6);
        uint64_t v11 = *v10;
        unint64_t v12 = v10[1];
        sub_100726DD0();
        sub_100441FD4(v11, v12);
        sub_100725B60();
        Swift::Int v13 = sub_100726E30();
        sub_100442248(v11, v12);
        unint64_t v14 = v13 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v14 < v9) {
            goto LABEL_5;
          }
        }
        else if (v14 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v14)
        {
LABEL_11:
          uint64_t v15 = *(void *)(v3 + 48);
          uint64_t v16 = (_OWORD *)(v15 + 16 * v2);
          int64_t v17 = (_OWORD *)(v15 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v16 >= v17 + 1))
          {
            *uint64_t v16 = *v17;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v18 = *(void *)(v3 + 16);
  BOOL v19 = __OFSUB__(v18, 1);
  uint64_t v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1004C954C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1004D10A4(&qword_100A46DB8, &qword_100A46DB0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100431F80(&qword_100A46DB0);
          unint64_t v12 = sub_1004C9A20(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_1004C9780(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1004D10A4(&qword_100A46D88, (uint64_t *)&unk_100A47F10);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          sub_100431F80((uint64_t *)&unk_100A47F10);
          unint64_t v12 = sub_1004C99B4(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_100462C50(0, (unint64_t *)&unk_100A48020);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

void (*sub_1004C99B4(void (**a1)(id *a1), unint64_t a2, uint64_t a3))(void *)
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1004C9AD0(v6, a2, a3);
  return sub_1004C9A1C;
}

void (*sub_1004C9A20(uint64_t (**a1)(), unint64_t a2, uint64_t a3))(void *)
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1004C9B58(v6, a2, a3);
  return sub_1004C9A1C;
}

void sub_1004C9A88(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1004C9AD0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_100726A10();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1004C9B50;
  }
  __break(1u);
  return result;
}

void sub_1004C9B50(id *a1)
{
}

uint64_t (*sub_1004C9B58(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_100726A10();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_1004D1198;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004C9BD8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004C9C10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v11 = __chkstk_darwin(v8 - 8, v10);
  Swift::Int v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11, v14);
  int64_t v17 = (char *)&v31 - v16;
  uint64_t v36 = a4;
  uint64_t v19 = a4 + 56;
  uint64_t v18 = *(void *)(a4 + 56);
  uint64_t v33 = -1 << *(unsigned char *)(a4 + 32);
  if (-v33 < 64) {
    uint64_t v20 = ~(-1 << -(char)v33);
  }
  else {
    uint64_t v20 = -1;
  }
  unint64_t v21 = v20 & v18;
  if (!a2)
  {
    int64_t v22 = 0;
    a3 = 0;
LABEL_34:
    uint64_t v30 = ~v33;
    *a1 = v36;
    a1[1] = v19;
    a1[2] = v30;
    a1[3] = v22;
    a1[4] = v21;
    return a3;
  }
  if (!a3)
  {
    int64_t v22 = 0;
    goto LABEL_34;
  }
  if (a3 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v32 = a1;
  int64_t v22 = 0;
  uint64_t v23 = 0;
  uint64_t v34 = v19;
  int64_t v35 = (unint64_t)(63 - v33) >> 6;
  int64_t v31 = v35 - 1;
  if (!v21) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v24 = __clz(__rbit64(v21));
  v21 &= v21 - 1;
  unint64_t v25 = v24 | (v22 << 6);
  while (1)
  {
    ++v23;
    uint64_t v29 = *(void *)(v9 + 72);
    sub_1004CBF18(*(void *)(v36 + 48) + v29 * v25, (uint64_t)v13, type metadata accessor for SenderKeyInfo);
    sub_1004CBEB0((uint64_t)v13, (uint64_t)v17, type metadata accessor for SenderKeyInfo);
    uint64_t result = sub_1004CBEB0((uint64_t)v17, a2, type metadata accessor for SenderKeyInfo);
    if (v23 == a3) {
      goto LABEL_33;
    }
    a2 += v29;
    if (v21) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
      __break(1u);
      goto LABEL_41;
    }
    if (v26 >= v35)
    {
      unint64_t v21 = 0;
      a3 = v23;
LABEL_33:
      a1 = v32;
      uint64_t v19 = v34;
      goto LABEL_34;
    }
    uint64_t v19 = v34;
    unint64_t v27 = *(void *)(v34 + 8 * v26);
    if (!v27) {
      break;
    }
LABEL_18:
    unint64_t v21 = (v27 - 1) & v27;
    unint64_t v25 = __clz(__rbit64(v27)) + (v26 << 6);
    int64_t v22 = v26;
  }
  v22 += 2;
  if (v26 + 1 >= v35)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26;
LABEL_39:
    a3 = v23;
    a1 = v32;
    goto LABEL_34;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v22);
  if (v27) {
    goto LABEL_14;
  }
  int64_t v28 = v26 + 2;
  if (v26 + 2 >= v35) {
    goto LABEL_36;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v28);
  if (v27) {
    goto LABEL_17;
  }
  int64_t v22 = v26 + 3;
  if (v26 + 3 >= v35)
  {
    unint64_t v21 = 0;
    int64_t v22 = v26 + 2;
    goto LABEL_39;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v22);
  if (v27)
  {
LABEL_14:
    int64_t v26 = v22;
    goto LABEL_18;
  }
  int64_t v28 = v26 + 4;
  if (v26 + 4 >= v35)
  {
LABEL_36:
    unint64_t v21 = 0;
    goto LABEL_39;
  }
  unint64_t v27 = *(void *)(v34 + 8 * v28);
  if (v27)
  {
LABEL_17:
    int64_t v26 = v28;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v26 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v26 >= v35)
    {
      unint64_t v21 = 0;
      int64_t v22 = v31;
      goto LABEL_39;
    }
    unint64_t v27 = *(void *)(v34 + 8 * v26);
    ++v28;
    if (v27) {
      goto LABEL_18;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1004C9F24(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1004CA124(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  unint64_t v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1007268E0();
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    uint64_t result = (void *)sub_100726680();
    uint64_t v4 = v27;
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v11 = 0;
    goto LABEL_38;
  }
  int64_t v9 = 0;
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = a4 + 56;
  uint64_t v8 = ~v19;
  uint64_t v20 = -v19;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v10 = v21 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v11 = 0;
LABEL_38:
    int64_t v22 = v24;
LABEL_41:
    *int64_t v22 = v4;
    v22[1] = v7;
    void v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (void *)v11;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v11 = 0;
  int64_t v25 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_100726950()) {
        goto LABEL_40;
      }
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v25)
    {
      unint64_t v10 = 0;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    if (v16) {
      goto LABEL_23;
    }
    int64_t v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      unint64_t v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        int64_t v15 = v9 + 3;
        goto LABEL_23;
      }
      int64_t v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        unint64_t v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v17);
      if (!v16)
      {
        int64_t v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          unint64_t v10 = 0;
          int64_t v9 = v17;
          goto LABEL_40;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v15);
        if (!v16)
        {
          int64_t v18 = v9 + 6;
          while (v25 != v18)
          {
            unint64_t v16 = *(void *)(v7 + 8 * v18++);
            if (v16)
            {
              int64_t v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v10 = 0;
          int64_t v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v15 = v17;
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    id v14 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      uint64_t v11 = a3;
LABEL_40:
      uint64_t v8 = v23;
      int64_t v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1004CA430(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v5 = __chkstk_darwin(v43, v4);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v5, v8);
  uint64_t v11 = (char *)&v42 - v10;
  uint64_t v13 = __chkstk_darwin(v9, v12);
  int64_t v15 = (char *)&v42 - v14;
  uint64_t v17 = __chkstk_darwin(v13, v16);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v21 = __chkstk_darwin(v17, v20);
  uint64_t v23 = (char *)&v42 - v22;
  __chkstk_darwin(v21, v24);
  int64_t v26 = (char *)&v42 - v25;
  char v27 = sub_100453588(*(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a2 + 16), *(void *)(a2 + 24));
  sub_1004CBF18(a1, (uint64_t)v26, type metadata accessor for SenderKeyInfo);
  sub_1004CBF18(a2, (uint64_t)v23, type metadata accessor for SenderKeyInfo);
  if ((v27 & 1) == 0)
  {
    sub_1004CBE50((uint64_t)v26, type metadata accessor for SenderKeyInfo);
    sub_1004CBE50((uint64_t)v23, type metadata accessor for SenderKeyInfo);
    sub_1004CBF18(a1, (uint64_t)v19, type metadata accessor for SenderKeyInfo);
    sub_1004CBF18(a2, (uint64_t)v15, type metadata accessor for SenderKeyInfo);
    goto LABEL_13;
  }
  char v28 = sub_100453588(*(void *)v26, *((void *)v26 + 1), *(void *)v23, *((void *)v23 + 1));
  sub_1004CBE50((uint64_t)v26, type metadata accessor for SenderKeyInfo);
  sub_1004CBE50((uint64_t)v23, type metadata accessor for SenderKeyInfo);
  sub_1004CBF18(a1, (uint64_t)v19, type metadata accessor for SenderKeyInfo);
  sub_1004CBF18(a2, (uint64_t)v15, type metadata accessor for SenderKeyInfo);
  if ((v28 & 1) == 0)
  {
LABEL_13:
    sub_1004CBE50((uint64_t)v15, type metadata accessor for SenderKeyInfo);
    sub_1004CBE50((uint64_t)v19, type metadata accessor for SenderKeyInfo);
    sub_1004CBF18(a1, (uint64_t)v11, type metadata accessor for SenderKeyInfo);
    sub_1004CBF18(a2, (uint64_t)v7, type metadata accessor for SenderKeyInfo);
    goto LABEL_14;
  }
  uint64_t v29 = v43;
  char v30 = sub_100725C60();
  sub_1004CBE50((uint64_t)v15, type metadata accessor for SenderKeyInfo);
  sub_1004CBE50((uint64_t)v19, type metadata accessor for SenderKeyInfo);
  sub_1004CBF18(a1, (uint64_t)v11, type metadata accessor for SenderKeyInfo);
  sub_1004CBF18(a2, (uint64_t)v7, type metadata accessor for SenderKeyInfo);
  if ((v30 & 1) == 0)
  {
LABEL_14:
    char v40 = 0;
    goto LABEL_15;
  }
  uint64_t v31 = *(int *)(v29 + 28);
  uint64_t v32 = *(void *)&v11[v31];
  uint64_t v33 = *(void *)&v11[v31 + 8];
  uint64_t v34 = *(void *)&v11[v31 + 16];
  uint64_t v35 = *(void *)&v11[v31 + 24];
  uint64_t v36 = &v7[v31];
  uint64_t v37 = *((void *)v36 + 2);
  uint64_t v38 = *((void *)v36 + 3);
  BOOL v39 = v32 == *(void *)v36 && v33 == *((void *)v36 + 1);
  if (v39 || (char v40 = 0, (sub_100726D20() & 1) != 0))
  {
    if (v34 == v37 && v35 == v38) {
      char v40 = 1;
    }
    else {
      char v40 = sub_100726D20();
    }
  }
LABEL_15:
  sub_1004CBE50((uint64_t)v11, type metadata accessor for SenderKeyInfo);
  sub_1004CBE50((uint64_t)v7, type metadata accessor for SenderKeyInfo);
  return v40 & 1;
}

uint64_t sub_1004CA804(void *a1, void *a2, void *a3, void *a4)
{
  id v7 = [a1 prefixedURI];
  uint64_t v8 = sub_100726430();
  uint64_t v10 = v9;

  id v11 = [a3 prefixedURI];
  uint64_t v12 = sub_100726430();
  uint64_t v14 = v13;

  if (v8 == v12 && v10 == v14)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v16 = sub_100726D20();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v17 = 0;
    if ((v16 & 1) == 0) {
      return v17 & 1;
    }
  }
  id v18 = [a2 prefixedURI];
  uint64_t v19 = sub_100726430();
  uint64_t v21 = v20;

  id v22 = [a4 prefixedURI];
  uint64_t v23 = sub_100726430();
  uint64_t v25 = v24;

  if (v19 == v23 && v21 == v25) {
    char v17 = 1;
  }
  else {
    char v17 = sub_100726D20();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v17 & 1;
}

double sub_1004CA980()
{
  id v0 = [self sharedInstance];
  NSString v1 = sub_100726420();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    sub_100726870();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_100462BE4((uint64_t)v6, (uint64_t)v7, &qword_100A44F00);
  if (!v8)
  {
    sub_10044C150((uint64_t)v7, &qword_100A44F00);
    return 432000.0;
  }
  sub_100462C50(0, (unint64_t *)&unk_100A468F0);
  if ((swift_dynamicCast() & 1) == 0) {
    return 432000.0;
  }
  id v3 = [v5 integerValue];

  double result = (double)(uint64_t)v3;
  if ((double)(uint64_t)v3 > 864000.0) {
    return 864000.0;
  }
  return result;
}

void *sub_1004CAAE8(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v2) {
      goto LABEL_3;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
LABEL_20:
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_100726BA0();
  if (!v2) {
    goto LABEL_21;
  }
LABEL_3:
  uint64_t v3 = 4;
  while (1)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v4 = (id)sub_100726A10();
    }
    else {
      id v4 = *(id *)(a1 + 8 * v3);
    }
    id v5 = v4;
    uint64_t v6 = v3 - 3;
    if (__OFADD__(v3 - 4, 1))
    {
      __break(1u);
      goto LABEL_20;
    }
    double result = [v4 prefixedURI];
    if (!result) {
      break;
    }
    uint64_t v8 = result;
    if ([result _appearsToBeDSID]
      || [v8 _appearsToBePseudonymID]
      || [v8 _appearsToBeTemporaryID])
    {
    }
    else
    {
      id v9 = [v5 tokenFreeURI];

      if (v9)
      {
        sub_100726550();
        if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_1007265A0();
        }
        sub_1007265C0();
        sub_100726590();
      }
    }
    ++v3;
    if (v6 == v2) {
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004CACD4()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004CAD24(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v11 = a9;
  uint64_t v12 = v9[4];
  uint64_t v61 = (void (*)(uint64_t))v9[5];
  uint64_t v64 = (void *)v9[2];
  id v13 = a1;
  swift_retain_n();
  id v14 = v13;
  int64_t v15 = sub_100725EB0();
  os_log_type_t v16 = sub_1007266E0();
  char v17 = v15;
  if (os_log_type_enabled(v15, v16))
  {
    os_log_type_t v59 = v16;
    uint64_t v60 = v12;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = (void *)swift_slowAlloc();
    v67[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315906;
    swift_beginAccess();
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_100726580();
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    sub_10043E578(v20, v22, v67);
    sub_100726830();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v18 + 12) = 2112;
    if (a1) {
      id v23 = v14;
    }
    sub_100726830();
    *uint64_t v19 = a1;

    *(_WORD *)(v18 + 22) = 1024;
    sub_100726830();
    *(_WORD *)(v18 + 28) = 1024;
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v17, v59, "Finished query for uris %s fromURI: %@ { success: %{BOOL}d offline: %{BOOL}d }", (uint8_t *)v18, 0x22u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v24 = (void *)(v60 + 16);
    if (a9) {
      goto LABEL_7;
    }
LABEL_41:
    swift_beginAccess();
    uint64_t v57 = swift_bridgeObjectRetain();
    v61(v57);
    return swift_bridgeObjectRelease();
  }

  swift_release_n();
  uint64_t v24 = (void *)(v12 + 16);
  if (!a9) {
    goto LABEL_41;
  }
LABEL_7:
  uint64_t v62 = a9 + 64;
  uint64_t v25 = 1 << *(unsigned char *)(a9 + 32);
  uint64_t v26 = -1;
  if (v25 < 64) {
    uint64_t v26 = ~(-1 << v25);
  }
  unint64_t v27 = v26 & *(void *)(a9 + 64);
  int64_t v63 = (unint64_t)(v25 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v65)
  {
    if (v27)
    {
      unint64_t v30 = __clz(__rbit64(v27));
      v27 &= v27 - 1;
      int64_t v65 = i;
      unint64_t v31 = v30 | (i << 6);
    }
    else
    {
      BOOL v32 = __OFADD__(i, 1);
      int64_t v33 = i + 1;
      if (v32) {
        goto LABEL_44;
      }
      if (v33 >= v63)
      {
LABEL_40:
        swift_release();
        goto LABEL_41;
      }
      unint64_t v34 = *(void *)(v62 + 8 * v33);
      if (!v34)
      {
        int64_t v35 = v33 + 1;
        if (v33 + 1 >= v63) {
          goto LABEL_40;
        }
        unint64_t v34 = *(void *)(v62 + 8 * v35);
        if (!v34)
        {
          int64_t v35 = v33 + 2;
          if (v33 + 2 >= v63) {
            goto LABEL_40;
          }
          unint64_t v34 = *(void *)(v62 + 8 * v35);
          if (!v34)
          {
            int64_t v35 = v33 + 3;
            if (v33 + 3 >= v63) {
              goto LABEL_40;
            }
            unint64_t v34 = *(void *)(v62 + 8 * v35);
            if (!v34)
            {
              while (1)
              {
                int64_t v33 = v35 + 1;
                if (__OFADD__(v35, 1)) {
                  goto LABEL_45;
                }
                if (v33 >= v63) {
                  goto LABEL_40;
                }
                unint64_t v34 = *(void *)(v62 + 8 * v33);
                ++v35;
                if (v34) {
                  goto LABEL_24;
                }
              }
            }
          }
        }
        int64_t v33 = v35;
      }
LABEL_24:
      unint64_t v27 = (v34 - 1) & v34;
      int64_t v65 = v33;
      unint64_t v31 = __clz(__rbit64(v34)) + (v33 << 6);
    }
    uint64_t v36 = v11;
    uint64_t v37 = *(void **)(*(void *)(v11 + 48) + 8 * v31);
    uint64_t v38 = v64;
    id v39 = v37;
    unint64_t v40 = swift_bridgeObjectRetain();
    uint64_t v41 = sub_1004CB650(v40, v38);

    swift_bridgeObjectRelease();
    swift_beginAccess();
    id v42 = v39;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = (void *)*v24;
    int v66 = (void *)*v24;
    *uint64_t v24 = 0x8000000000000000;
    unint64_t v46 = sub_10047B0C4((uint64_t)v42);
    uint64_t v47 = v44[2];
    BOOL v48 = (v45 & 1) == 0;
    uint64_t v49 = v47 + v48;
    if (__OFADD__(v47, v48)) {
      break;
    }
    char v50 = v45;
    if (v44[3] >= v49)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v53 = 8 * v46;
        if (v45) {
          goto LABEL_10;
        }
      }
      else
      {
        sub_1004BFE80();
        uint64_t v44 = v66;
        uint64_t v53 = 8 * v46;
        if (v50) {
          goto LABEL_10;
        }
      }
    }
    else
    {
      sub_1004BF3F4(v49, isUniquelyReferenced_nonNull_native);
      uint64_t v44 = v66;
      unint64_t v51 = sub_10047B0C4((uint64_t)v42);
      if ((v50 & 1) != (v52 & 1)) {
        goto LABEL_46;
      }
      unint64_t v46 = v51;
      uint64_t v53 = 8 * v51;
      if (v50)
      {
LABEL_10:
        uint64_t v29 = v44[7];
        swift_bridgeObjectRelease();
        *(void *)(v29 + v53) = v41;
        goto LABEL_11;
      }
    }
    v44[(v46 >> 6) + 8] |= 1 << v46;
    *(void *)(v44[6] + v53) = v42;
    *(void *)(v44[7] + v53) = v41;
    uint64_t v54 = v44[2];
    BOOL v32 = __OFADD__(v54, 1);
    uint64_t v55 = v54 + 1;
    if (v32) {
      goto LABEL_43;
    }
    v44[2] = v55;
    id v56 = v42;
LABEL_11:
    *uint64_t v24 = v44;
    swift_bridgeObjectRelease();

    swift_endAccess();
    uint64_t v11 = v36;
  }
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
  uint64_t result = sub_100726D40();
  __break(1u);
  return result;
}

uint64_t sub_1004CB340(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004CB350()
{
  return swift_release();
}

uint64_t sub_1004CB358()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 89, 7);
}

uint64_t sub_1004CB3C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 16);
  uint64_t v3 = *(void **)(v1 + 40);
  uint64_t v19 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  char v17 = *(void **)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 80);
  char v9 = *(unsigned char *)(v1 + 88);
  uint64_t v18 = (*(uint64_t (**)(void))((swift_isaMask & *v2) + 0xC0))();
  uint64_t v11 = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v6;
  *(void *)(v12 + 24) = v7;
  *(void *)(v12 + 32) = v3;
  *(void *)(v12 + 40) = v2;
  *(void *)(v12 + 48) = v5;
  *(void *)(v12 + 56) = v4;
  *(void *)(v12 + 64) = v8;
  *(unsigned char *)(v12 + 72) = v9;
  *(void *)(v12 + 80) = v17;
  id v13 = *(void (**)(void *, uint64_t, id, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t))((swift_isaMask & *v2) + 0x1C8);
  swift_retain();
  id v14 = v3;
  int64_t v15 = v2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v13(v17, v19, v14, v18, v11, v5, v4, sub_1004CB55C, v12);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1004CB560()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1004CB598()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

void sub_1004CB5F8(char a1, uint64_t a2)
{
  sub_1004AF698(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(unsigned __int8 *)(v2 + 40), *(void **)(v2 + 48), *(void **)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72));
}

uint64_t type metadata accessor for SenderKeyInfo(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A50B60);
}

void *sub_1004CB650(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62) {
    goto LABEL_22;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v25 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v23 = v4;
      uint64_t v24 = IDSRegistrationPropertySupportsSenderKey;
      unint64_t v21 = v3;
      unint64_t v22 = v3 & 0xC000000000000001;
      while (v6)
      {
        id v7 = (id)sub_100726A10();
LABEL_9:
        uint64_t v8 = v7;
        unint64_t v9 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          goto LABEL_21;
        }
        uint64_t v10 = (*(uint64_t (**)(void))((swift_isaMask & *a2) + 0xD8))();
        if (v11 >> 60 == 15)
        {
        }
        else
        {
          uint64_t v12 = v10;
          unint64_t v13 = v11;
          id v14 = [v8 capabilities];
          uint64_t v15 = (uint64_t)[v14 valueForCapability:v24];

          if (v15 < 1)
          {
            sub_10044CE88(v12, v13);
          }
          else
          {
            id v16 = [v8 pushToken];
            uint64_t v17 = sub_100725B50();
            unint64_t v19 = v18;

            LOBYTE(v16) = sub_100453588(v17, v19, v12, v13);
            sub_10044CE88(v12, v13);
            sub_100442248(v17, v19);
            if (v16)
            {
            }
            else
            {
              sub_100726A40();
              sub_100726A70();
              sub_100726A80();
              sub_100726A50();
            }
            unint64_t v3 = v21;
          }
          unint64_t v6 = v22;
          uint64_t v4 = v23;
        }
        ++v5;
        if (v9 == v4) {
          return _swiftEmptyArrayStorage;
        }
      }
      if (v5 < *(void *)(v25 + 16)) {
        break;
      }
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      uint64_t v4 = sub_100726BA0();
      if (!v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    id v7 = *(id *)(v3 + 8 * v5 + 32);
    goto LABEL_9;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1004CB8B4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

void *sub_1004CB9A8(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v5 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v6 = a1
     + ((*(unsigned __int8 *)(*(void *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v5 - 8) + 80));
  uint64_t v7 = *(void *)(*(void *)(v5 - 8) + 72);
  sub_1004CC294((unint64_t *)&unk_100A46920, (void (*)(uint64_t))type metadata accessor for SenderKeyInfo);
  uint64_t v8 = v7;
  swift_bridgeObjectRetain();
  unint64_t v9 = _swiftEmptyArrayStorage;
  uint64_t v18 = v8;
  do
  {
    uint64_t v10 = sub_1007258C0();
    if (v2)
    {
      swift_errorRelease();
      uint64_t v2 = 0;
    }
    else
    {
      uint64_t v12 = v10;
      uint64_t v13 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v9 = sub_1004BE840(0, v9[2] + 1, 1, v9);
      }
      unint64_t v15 = v9[2];
      unint64_t v14 = v9[3];
      if (v15 >= v14 >> 1) {
        unint64_t v9 = sub_1004BE840((void *)(v14 > 1), v15 + 1, 1, v9);
      }
      _OWORD v9[2] = v15 + 1;
      id v16 = &v9[2 * v15];
      v16[4] = v12;
      v16[5] = v13;
      uint64_t v8 = v18;
    }
    v6 += v8;
    --v3;
  }
  while (v3);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1004CBB80(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(type metadata accessor for SenderKeyInfo(0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_1004CBCD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SenderKeyInfo(0) - 8;
  uint64_t v4 = __chkstk_darwin(v2, v3);
  uint64_t v6 = (uint64_t *)((char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t result = __chkstk_darwin(v4, v7);
  unint64_t v11 = (char *)&v15 - v10;
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v14 = *(void *)(v9 + 72);
    do
    {
      sub_1004CBF18(v13, (uint64_t)v6, type metadata accessor for SenderKeyInfo);
      sub_1004C0EA4((uint64_t)v11, v6);
      uint64_t result = sub_1004CBE50((uint64_t)v11, type metadata accessor for SenderKeyInfo);
      v13 += v14;
      --v12;
    }
    while (v12);
  }
  return result;
}

uint64_t type metadata accessor for SenderKeyAndState(uint64_t a1)
{
  return sub_100440FD0(a1, qword_100A50B70);
}

uint64_t type metadata accessor for SenderKeyDistributionManager.SenderKeyURIMismatchMetric()
{
  return self;
}

uint64_t sub_1004CBE50(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004CBEB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004CBF18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004CBF80()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_1004CBFD0()
{
  uint64_t v1 = (void *)v0[2];
  uint64_t v2 = v0[3];
  uint64_t v3 = (void *)v0[5];
  uint64_t v23 = (void *)v0[4];
  uint64_t v4 = *(void *)(v2 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v2 + 40;
    uint64_t v6 = _swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_100725AC0();
      unint64_t v10 = v9;
      swift_bridgeObjectRelease();
      if (v10 >> 60 != 15)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v6 = sub_1004BE840(0, v6[2] + 1, 1, v6);
        }
        unint64_t v12 = v6[2];
        unint64_t v11 = v6[3];
        if (v12 >= v11 >> 1) {
          uint64_t v6 = sub_1004BE840((void *)(v11 > 1), v12 + 1, 1, v6);
        }
        _OWORD v6[2] = v12 + 1;
        uint64_t v7 = &v6[2 * v12];
        v7[4] = v8;
        v7[5] = v10;
      }
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  (*(void (**)(void *, void *, void *))((swift_isaMask & *v1) + 0x230))(v6, v23, v3);
  swift_bridgeObjectRelease();
  sub_100431F80((uint64_t *)&unk_100A46840);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_100797A20;
  *(void *)(v13 + 32) = v3;
  uint64_t v24 = v13;
  sub_100726590();
  uint64_t v14 = qword_100A4FBE8;
  id v15 = v3;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = qword_100A533B0;
  uint64_t v17 = *(void *)algn_100A533B8;
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v1;
  void v18[3] = v15;
  v18[4] = v23;
  unint64_t v19 = *(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t, void *, void (*)(uint64_t), void *))((swift_isaMask & *v1) + 0x1D8);
  id v20 = v15;
  unint64_t v21 = v1;
  v19(v24, v23, v16, v17, 2, _swiftEmptyArrayStorage, sub_1004D0A90, v18);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1004CC294(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004CC2DC()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_1004CC344()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = (void *)v0[4];
  uint64_t v3 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v4 = (void *)v0[7];
  uint64_t v6 = (void *)v0[8];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = (void *)result;
    uint64_t v42 = v5;
    uint64_t v44 = v6;
    id v9 = v1;
    id v10 = v2;
    id v11 = v9;
    id v12 = v10;
    uint64_t v13 = sub_100725EB0();
    os_log_type_t v14 = sub_1007266E0();
    uint64_t v43 = v4;
    uint64_t v45 = v3;
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = swift_slowAlloc();
      uint64_t v16 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 138412546;
      id v17 = v11;
      sub_100726830();
      *uint64_t v16 = v11;

      *(_WORD *)(v15 + 12) = 2112;
      id v18 = v12;
      sub_100726830();
      v16[1] = v12;

      uint64_t v3 = v45;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Dispatching existing recovery work item for toURI: %@ fromURI: %@", (uint8_t *)v15, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v19 = *(void *)(v3 + 16);
    if (v19)
    {
      id v41 = v12;
      swift_bridgeObjectRetain();
      uint64_t v20 = v3 + 40;
      unint64_t v21 = _swiftEmptyArrayStorage;
      do
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_100725AC0();
        unint64_t v25 = v24;
        swift_bridgeObjectRelease();
        if (v25 >> 60 != 15)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v21 = sub_1004BE840(0, v21[2] + 1, 1, v21);
          }
          unint64_t v27 = v21[2];
          unint64_t v26 = v21[3];
          if (v27 >= v26 >> 1) {
            unint64_t v21 = sub_1004BE840((void *)(v26 > 1), v27 + 1, 1, v21);
          }
          v21[2] = v27 + 1;
          unint64_t v22 = &v21[2 * v27];
          v22[4] = v23;
          v22[5] = v25;
        }
        v20 += 16;
        --v19;
      }
      while (v19);
      swift_bridgeObjectRelease();
      id v12 = v41;
    }
    else
    {
      unint64_t v21 = _swiftEmptyArrayStorage;
    }
    (*(void (**)(void *, id, id))((swift_isaMask & *v8) + 0x230))(v21, v12, v11);
    swift_bridgeObjectRelease();
    sub_100431F80((uint64_t *)&unk_100A46840);
    uint64_t v28 = swift_allocObject();
    *(_OWORD *)(v28 + 16) = xmmword_100797A20;
    *(void *)(v28 + 32) = v11;
    uint64_t v47 = v28;
    sub_100726590();
    uint64_t v29 = v12;
    uint64_t v30 = qword_100A4FBE8;
    id v31 = v11;
    if (v30 != -1) {
      swift_once();
    }
    uint64_t v32 = qword_100A533B0;
    uint64_t v46 = *(void *)algn_100A533B8;
    BOOL v33 = *(void *)(v42 + 16) != 0;
    unint64_t v34 = (void *)swift_allocObject();
    v34[2] = v8;
    v34[3] = v31;
    v34[4] = v29;
    int64_t v35 = *(void (**)(uint64_t, id, uint64_t, uint64_t, BOOL, uint64_t, void (*)(uint64_t), void *))((swift_isaMask & *v8) + 0x1D8);
    id v36 = v31;
    id v37 = v29;
    uint64_t v38 = v8;
    v35(v47, v37, v32, v46, v33, v42, sub_1004D0A90, v34);
    swift_bridgeObjectRelease();
    swift_release();
    swift_beginAccess();
    id v39 = v43;
    id v40 = v44;
    sub_1004BF320(v39, v40);
    swift_endAccess();

    return swift_release();
  }
  return result;
}

uint64_t sub_1004CC838()
{
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_1004CC890()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = (void *)v0[4];
  uint64_t v3 = (void *)v0[5];
  uint64_t v4 = (void *)v0[6];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = (void *)result;
    id v7 = v1;
    id v8 = v2;
    id v9 = v7;
    id v10 = v8;
    id v11 = sub_100725EB0();
    os_log_type_t v12 = sub_1007266E0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      os_log_type_t v14 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 138412546;
      unint64_t v26 = v4;
      unint64_t v25 = v11;
      id v15 = v9;
      sub_100726830();
      *os_log_type_t v14 = v9;

      *(_WORD *)(v13 + 12) = 2112;
      id v16 = v10;
      id v11 = v25;
      sub_100726830();
      v14[1] = v10;

      uint64_t v4 = v26;
      _os_log_impl((void *)&_mh_execute_header, v25, v12, "Dispatching existing device update work item for remoteURI: %@ localURI: %@", (uint8_t *)v13, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    sub_100431F80((uint64_t *)&unk_100A46840);
    uint64_t v17 = swift_allocObject();
    *(_OWORD *)(v17 + 16) = xmmword_100797A20;
    *(void *)(v17 + 32) = v9;
    uint64_t v27 = v17;
    sub_100726590();
    id v18 = (void *)swift_allocObject();
    v18[2] = v6;
    void v18[3] = v9;
    v18[4] = v10;
    uint64_t v19 = *(void (**)(uint64_t, id, unint64_t, unint64_t, void (*)(uint64_t), void *))((swift_isaMask & *v6) + 0x1D0);
    id v20 = v9;
    id v21 = v10;
    unint64_t v22 = v6;
    v19(v27, v21, 0xD000000000000012, 0x80000001008C3200, sub_1004D0A80, v18);
    swift_bridgeObjectRelease();
    swift_release();
    swift_beginAccess();
    id v23 = v3;
    id v24 = v4;
    sub_1004BF320(v23, v24);
    swift_endAccess();

    return swift_release();
  }
  return result;
}

uint64_t sub_1004CCBE0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_1004CCCD4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_1004D0A28();
  uint64_t result = sub_100726660();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_100441FD4(v5, *v4);
      sub_1004C0458(v7, v5, v6);
      sub_100442248(v7[0], v7[1]);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_1004CCD70()
{
  unint64_t result = qword_100A468D0;
  if (!qword_100A468D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A468D0);
  }
  return result;
}

unint64_t sub_1004CCDC4()
{
  unint64_t result = qword_100A468D8;
  if (!qword_100A468D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A468D8);
  }
  return result;
}

uint64_t sub_1004CCE18()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 48, 7);
}

void sub_1004CCE5C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain_n();
  id v10 = v1;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315650;
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_100726580();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    sub_10043E578(v6, v8, &v11);
    sub_100726830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2112;
    id v9 = v10;
    sub_100726830();
    *uint64_t v5 = v10;

    *(_WORD *)(v4 + 22) = 1024;
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Did roll and send new sender key to donated handle { URI: %s fromURI: %@} with success %{BOOL}d }", (uint8_t *)v4, 0x1Cu);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1004CD250(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80((uint64_t *)&unk_100A468B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004CD2B8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1004CD2E4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_1004CD32C()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain_n();
  id v11 = v1;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315650;
    uint64_t v6 = swift_bridgeObjectRetain();
    sub_1004BF224(v6);
    swift_bridgeObjectRelease();
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    uint64_t v7 = sub_100726580();
    unint64_t v9 = v8;
    swift_release();
    sub_10043E578(v7, v9, &v12);
    sub_100726830();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v4 + 12) = 2112;
    id v10 = v11;
    sub_100726830();
    *uint64_t v5 = v11;

    *(_WORD *)(v4 + 22) = 1024;
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Did generateAndSendKeyIfNeeded to donated handles {URIs: %s fromURI: %@} with success %{BOOL}d", (uint8_t *)v4, 0x1Cu);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

id sub_1004CD5DC(id result)
{
  if (!result) {
    return result;
  }
  uint64_t v2 = v1;
  os_log_type_t v3 = result;
  unint64_t result = [result uris];
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  uint64_t v5 = sub_100726570();

  id v6 = [v3 serviceIdentifier];
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_100726430();
    unint64_t v10 = v9;

    if (v8 == sub_100726430() && v10 == v11)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v13 = sub_100726D20();
      swift_bridgeObjectRelease();
      if ((v13 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        goto LABEL_10;
      }
    }
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    os_log_type_t v14 = sub_100725EB0();
    os_log_type_t v15 = sub_1007266E0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      v40[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_100726580();
      unint64_t v19 = v18;
      swift_bridgeObjectRelease();
      sub_10043E578(v17, v19, v40);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      swift_bridgeObjectRetain();
      v39[0] = sub_10043E578(v8, v10, v40);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Received deregistrationWillStart with uris: %s service: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }

    id v20 = _swiftEmptyArrayStorage;
    id v41 = _swiftEmptyArrayStorage;
    id v21 = sub_1004BBCD4(v5);
    if (v21)
    {
      unint64_t v22 = v21;
      uint64_t v23 = *(void *)(v5 + 16);
      if (!v23)
      {
        swift_bridgeObjectRelease();
LABEL_24:
        v40[0] = (uint64_t)_swiftEmptyArrayStorage;
        uint64_t v25 = v22[2];
        if (v25)
        {
          swift_bridgeObjectRetain();
          unint64_t v26 = v22 + 5;
          do
          {
            id v27 = objc_allocWithZone((Class)IDSURI);
            swift_bridgeObjectRetain();
            NSString v28 = sub_100726420();
            swift_bridgeObjectRelease();
            id v29 = [v27 initWithPrefixedURI:v28];

            if (v29)
            {
              sub_100726550();
              if (*(void *)((v40[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v40[0] & 0xFFFFFFFFFFFFFF8)
                                                                                   + 0x18) >> 1)
                sub_1007265A0();
              sub_1007265C0();
              sub_100726590();
            }
            v26 += 2;
            --v25;
          }
          while (v25);
          swift_bridgeObjectRelease();
          id v20 = (void *)v40[0];
        }
        swift_bridgeObjectRelease();
        uint64_t v30 = sub_1004BA248((unint64_t)v20, (uint64_t (*)(uint64_t, void, unint64_t))sub_1004C954C);
        goto LABEL_44;
      }
      uint64_t v24 = v5 + 32;
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_10044C6FC(v24, (uint64_t)v40);
        sub_10044C6FC((uint64_t)v40, (uint64_t)v39);
        if (!swift_dynamicCast()) {
          break;
        }
        swift_bridgeObjectRelease();
        sub_10044C6AC((uint64_t)v40);
        v24 += 32;
        if (!--v23)
        {
          swift_bridgeObjectRelease_n();
          goto LABEL_24;
        }
      }
      sub_10044C6AC((uint64_t)v40);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    id v31 = sub_1004BBE1C(v5);
    if (v31)
    {
      unint64_t v32 = (unint64_t)v31;
      uint64_t v33 = *(void *)(v5 + 16);
      if (v33)
      {
        uint64_t v34 = v5 + 32;
        swift_bridgeObjectRetain();
        while (1)
        {
          sub_10044C6FC(v34, (uint64_t)v40);
          sub_10044C6FC((uint64_t)v40, (uint64_t)v39);
          sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
          if (!swift_dynamicCast()) {
            break;
          }

          sub_10044C6AC((uint64_t)v40);
          v34 += 32;
          if (!--v33)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_42;
          }
        }
        sub_10044C6AC((uint64_t)v40);
        swift_bridgeObjectRelease();
        uint64_t v30 = swift_bridgeObjectRelease_n();
      }
      else
      {
        swift_bridgeObjectRelease();
LABEL_42:
        uint64_t v30 = sub_1004BA248(v32, (uint64_t (*)(uint64_t, void, unint64_t))sub_1004C954C);
      }
    }
    else
    {
      uint64_t v30 = swift_bridgeObjectRelease();
    }
LABEL_44:
    int64_t v35 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xA8))(v30);
    unint64_t v36 = (unint64_t)v41;
    double v37 = (*(double (**)(void))((swift_isaMask & *v2) + 0x2E0))();
    sub_100565EB0(v36, v37);

    return (id)swift_bridgeObjectRelease();
  }
LABEL_10:

  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_1004CDC18(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10098E5C0;
  v6._object = a2;
  unint64_t v4 = sub_100726C10(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t sub_1004CDC64(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10098E628;
  v6._object = a2;
  unint64_t v4 = sub_100726C10(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 4) {
    return 4;
  }
  else {
    return v4;
  }
}

uint64_t sub_1004CDCB0(void *a1)
{
  uint64_t v3 = sub_100431F80(&qword_100A46D08);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = a1[3];
  sub_10044C0F4(a1, v8);
  sub_1004CDFAC();
  sub_100726E50();
  if (v1)
  {
    sub_10044C6AC((uint64_t)a1);
  }
  else
  {
    v10[8] = 0;
    uint64_t v8 = sub_100726C40();
    char v11 = 1;
    sub_1004D08DC();
    sub_100726C50();
    sub_100431F80(&qword_100A46880);
    char v11 = 2;
    sub_1004D0930(&qword_100A46D18, &qword_100A468E8);
    sub_100726C50();
    sub_100431F80(&qword_100A468E0);
    char v11 = 3;
    sub_1004D09C4((unint64_t *)&unk_100A46D20);
    swift_bridgeObjectRetain();
    sub_100726C50();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    sub_10044C6AC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1004CDFAC()
{
  unint64_t result = qword_100A46908;
  if (!qword_100A46908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46908);
  }
  return result;
}

unint64_t sub_1004CE000()
{
  unint64_t result = qword_100A46910;
  if (!qword_100A46910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46910);
  }
  return result;
}

unint64_t sub_1004CE054()
{
  unint64_t result = qword_100A4FC30;
  if (!qword_100A4FC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A4FC30);
  }
  return result;
}

uint64_t sub_1004CE0A8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x52557265646E6573 && a2 == 0xE900000000000049;
  if (v3 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265766965636572 && a2 == 0xEB00000000495255)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_100726D20();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1004CE1AC(void *a1)
{
  uint64_t v3 = sub_100431F80(&qword_100A46D00);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3, v5);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1[4];
  sub_10044C0F4(a1, a1[3]);
  sub_1004CE054();
  sub_100726E50();
  if (v1)
  {
    sub_10044C6AC((uint64_t)a1);
  }
  else
  {
    char v12 = 0;
    uint64_t v8 = sub_100726C30();
    char v11 = 1;
    swift_bridgeObjectRetain();
    sub_100726C30();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
    swift_bridgeObjectRetain();
    sub_10044C6AC((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

unint64_t sub_1004CE3B4()
{
  unint64_t result = qword_100A4FC38;
  if (!qword_100A4FC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A4FC38);
  }
  return result;
}

unint64_t sub_1004CE408()
{
  unint64_t result = qword_100A46958;
  if (!qword_100A46958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46958);
  }
  return result;
}

unint64_t sub_1004CE45C()
{
  unint64_t result = qword_100A46978;
  if (!qword_100A46978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46978);
  }
  return result;
}

unint64_t sub_1004CE4B0()
{
  unint64_t result = qword_100A4FC40[0];
  if (!qword_100A4FC40[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A4FC40);
  }
  return result;
}

uint64_t type metadata accessor for IDSSenderKeySendContext()
{
  return self;
}

uint64_t sub_1004CE528(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6174614479656BLL && a2 == 0xE700000000000000;
  if (v3 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x444979656BLL && a2 == 0xE500000000000000 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4164657461657263 && a2 == 0xE900000000000074 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001008C3970)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_100726D20();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_1004CE6C8(uint64_t a1, uint64_t a2)
{
  BOOL v3 = a1 == 0x6F666E4979656BLL && a2 == 0xE700000000000000;
  if (v3 || (sub_100726D20() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A696C6169726573 && a2 == 0xEF65746174536465)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_100726D20();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1004CE7CC(unint64_t a1)
{
  if (a1 >= 8) {
    return 7;
  }
  else {
    return (0x605040302010007uLL >> (8 * a1));
  }
}

unint64_t sub_1004CE7F8()
{
  unint64_t result = qword_100A46990;
  if (!qword_100A46990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46990);
  }
  return result;
}

unint64_t sub_1004CE850()
{
  unint64_t result = qword_100A46998;
  if (!qword_100A46998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46998);
  }
  return result;
}

unint64_t sub_1004CE8A8()
{
  unint64_t result = qword_100A469A0;
  if (!qword_100A469A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A469A0);
  }
  return result;
}

unint64_t sub_1004CE900()
{
  unint64_t result = qword_100A469A8;
  if (!qword_100A469A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A469A8);
  }
  return result;
}

unint64_t sub_1004CE958()
{
  unint64_t result = qword_100A469B0;
  if (!qword_100A469B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A469B0);
  }
  return result;
}

unint64_t sub_1004CE9B0()
{
  unint64_t result = qword_100A469B8;
  if (!qword_100A469B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A469B8);
  }
  return result;
}

uint64_t sub_1004CEA04()
{
  return sub_1004CC294(&qword_100A469C0, (void (*)(uint64_t))type metadata accessor for SenderKeyInfo);
}

unint64_t sub_1004CEA50()
{
  unint64_t result = qword_100A469C8;
  if (!qword_100A469C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A469C8);
  }
  return result;
}

uint64_t sub_1004CEAA4()
{
  return type metadata accessor for SenderKeyDistributionManager(0);
}

uint64_t sub_1004CEAAC()
{
  uint64_t result = sub_100725ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for IDSGroupEncryptionPublicIdentityWrapMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SenderKeyMessageType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004CECD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SenderKeyMessageType()
{
  return &type metadata for SenderKeyMessageType;
}

ValueMetadata *type metadata accessor for SenderKeyMessageProtocolVersion()
{
  return &type metadata for SenderKeyMessageProtocolVersion;
}

uint64_t destroy for SenderKeyMessage()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SenderKeyMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SenderKeyMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for SenderKeyConversationPair(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t assignWithTake for SenderKeyMessage(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SenderKeyMessage(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SenderKeyMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SenderKeyMessage()
{
  return &type metadata for SenderKeyMessage;
}

ValueMetadata *type metadata accessor for SenderKeyMessage.CodingKeys()
{
  return &type metadata for SenderKeyMessage.CodingKeys;
}

ValueMetadata *type metadata accessor for SenderKeyURIPair()
{
  return &type metadata for SenderKeyURIPair;
}

uint64_t destroy for SenderKeyConversationPair()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SenderKeyConversationPair(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SenderKeyConversationPair(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SenderKeyConversationPair(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SenderKeyConversationPair()
{
  return &type metadata for SenderKeyConversationPair;
}

uint64_t *sub_1004CF070(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_100441FD4(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    unint64_t v10 = a2[3];
    sub_100441FD4(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    uint64_t v11 = *(int *)(a3 + 24);
    char v12 = (char *)a1 + v11;
    char v13 = (char *)a2 + v11;
    uint64_t v14 = sub_100725CC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    uint64_t v15 = *(int *)(a3 + 28);
    uint64_t v16 = (uint64_t *)((char *)a1 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = v17[3];
    void v16[2] = v17[2];
    v16[3] = v19;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1004CF194(uint64_t a1, uint64_t a2)
{
  sub_100442248(*(void *)a1, *(void *)(a1 + 8));
  sub_100442248(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100725CC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t *sub_1004CF238(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100441FD4(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_100441FD4(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  char v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (uint64_t *)((char *)a1 + v14);
  uint64_t v16 = (uint64_t *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  uint64_t v18 = v16[3];
  void v15[2] = v16[2];
  v15[3] = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *sub_1004CF30C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100441FD4(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100442248(v8, v9);
  uint64_t v10 = a2[2];
  unint64_t v11 = a2[3];
  sub_100441FD4(v10, v11);
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_100442248(v12, v13);
  uint64_t v14 = *(int *)(a3 + 24);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 24))(v15, v16, v17);
  uint64_t v18 = *(int *)(a3 + 28);
  uint64_t v19 = (uint64_t *)((char *)a1 + v18);
  uint64_t v20 = (uint64_t *)((char *)a2 + v18);
  *uint64_t v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v19[2] = v20[2];
  void v19[3] = v20[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1004CF414(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  unint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 28);
  uint64_t v12 = (_OWORD *)((char *)a1 + v11);
  unint64_t v13 = (_OWORD *)((char *)a2 + v11);
  long long v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  return a1;
}

uint64_t *sub_1004CF4B4(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100442248(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_100442248(v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (uint64_t *)((char *)a1 + v14);
  uint64_t v16 = (void *)((char *)a2 + v14);
  uint64_t v17 = v16[1];
  *uint64_t v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v18 = v16[3];
  void v15[2] = v16[2];
  v15[3] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004CF588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004CF59C);
}

uint64_t sub_1004CF59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100725CC0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 24);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 28) + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1004CF664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004CF678);
}

uint64_t sub_1004CF678(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100725CC0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 24);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 28) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1004CF73C()
{
  uint64_t result = sub_100725CC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1004CF7DC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v26 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = *a2;
    unint64_t v8 = a2[1];
    sub_100441FD4(*a2, v8);
    *a1 = v7;
    a1[1] = v8;
    uint64_t v9 = a2[2];
    unint64_t v10 = a2[3];
    sub_100441FD4(v9, v10);
    a1[2] = v9;
    a1[3] = v10;
    uint64_t v11 = type metadata accessor for SenderKeyInfo(0);
    uint64_t v12 = *(int *)(v11 + 24);
    uint64_t v13 = (char *)a1 + v12;
    uint64_t v14 = (char *)a2 + v12;
    uint64_t v15 = sub_100725CC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    uint64_t v16 = *(int *)(v11 + 28);
    uint64_t v17 = (uint64_t *)((char *)a1 + v16);
    uint64_t v18 = (uint64_t *)((char *)a2 + v16);
    uint64_t v19 = v18[1];
    *uint64_t v17 = *v18;
    v17[1] = v19;
    uint64_t v20 = v18[3];
    v17[2] = v18[2];
    v17[3] = v20;
    uint64_t v21 = *(int *)(a3 + 20);
    unint64_t v22 = (uint64_t *)((char *)a1 + v21);
    uint64_t v23 = (uint64_t *)((char *)a2 + v21);
    uint64_t v24 = *v23;
    unint64_t v25 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100441FD4(v24, v25);
    *unint64_t v22 = v24;
    v22[1] = v25;
  }
  return a1;
}

uint64_t sub_1004CF92C(uint64_t a1, uint64_t a2)
{
  sub_100442248(*(void *)a1, *(void *)(a1 + 8));
  sub_100442248(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t v4 = a1 + *(int *)(type metadata accessor for SenderKeyInfo(0) + 24);
  uint64_t v5 = sub_100725CC0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  uint64_t v7 = *v6;
  unint64_t v8 = v6[1];

  return sub_100442248(v7, v8);
}

uint64_t *sub_1004CF9EC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100441FD4(*a2, v7);
  *a1 = v6;
  a1[1] = v7;
  uint64_t v8 = a2[2];
  unint64_t v9 = a2[3];
  sub_100441FD4(v8, v9);
  a1[2] = v8;
  a1[3] = v9;
  uint64_t v10 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  uint64_t v15 = *(int *)(v10 + 28);
  uint64_t v16 = (uint64_t *)((char *)a1 + v15);
  uint64_t v17 = (uint64_t *)((char *)a2 + v15);
  uint64_t v18 = v17[1];
  *uint64_t v16 = *v17;
  v16[1] = v18;
  uint64_t v19 = v17[3];
  void v16[2] = v17[2];
  v16[3] = v19;
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = (uint64_t *)((char *)a1 + v20);
  unint64_t v22 = (uint64_t *)((char *)a2 + v20);
  uint64_t v23 = *v22;
  unint64_t v24 = v22[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_100441FD4(v23, v24);
  *uint64_t v21 = v23;
  v21[1] = v24;
  return a1;
}

uint64_t *sub_1004CFAEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  sub_100441FD4(*a2, v7);
  uint64_t v8 = *a1;
  unint64_t v9 = a1[1];
  *a1 = v6;
  a1[1] = v7;
  sub_100442248(v8, v9);
  uint64_t v10 = a2[2];
  unint64_t v11 = a2[3];
  sub_100441FD4(v10, v11);
  uint64_t v12 = a1[2];
  unint64_t v13 = a1[3];
  a1[2] = v10;
  a1[3] = v11;
  sub_100442248(v12, v13);
  uint64_t v14 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v15 = *(int *)(v14 + 24);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 24))(v16, v17, v18);
  uint64_t v19 = *(int *)(v14 + 28);
  uint64_t v20 = (uint64_t *)((char *)a1 + v19);
  uint64_t v21 = (char *)a2 + v19;
  *uint64_t v20 = *(uint64_t *)((char *)a2 + v19);
  v20[1] = *(uint64_t *)((char *)a2 + v19 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20[2] = *((void *)v21 + 2);
  v20[3] = *((void *)v21 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = *(int *)(a3 + 20);
  uint64_t v23 = (uint64_t *)((char *)a1 + v22);
  unint64_t v24 = (uint64_t *)((char *)a2 + v22);
  uint64_t v25 = *v24;
  unint64_t v26 = v24[1];
  sub_100441FD4(*v24, v26);
  uint64_t v27 = *v23;
  unint64_t v28 = v23[1];
  uint64_t *v23 = v25;
  v23[1] = v26;
  sub_100442248(v27, v28);
  return a1;
}

_OWORD *sub_1004CFC28(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v8 = *(int *)(v7 + 24);
  unint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  uint64_t v12 = *(int *)(v7 + 28);
  unint64_t v13 = (_OWORD *)((char *)a1 + v12);
  uint64_t v14 = (_OWORD *)((char *)a2 + v12);
  long long v15 = v14[1];
  *unint64_t v13 = *v14;
  v13[1] = v15;
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t *sub_1004CFCE0(uint64_t *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  unint64_t v7 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_100442248(v6, v7);
  uint64_t v8 = a1[2];
  unint64_t v9 = a1[3];
  *((_OWORD *)a1 + 1) = a2[1];
  sub_100442248(v8, v9);
  uint64_t v10 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v11 = *(int *)(v10 + 24);
  uint64_t v12 = (char *)a1 + v11;
  unint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  uint64_t v15 = *(int *)(v10 + 28);
  uint64_t v16 = (uint64_t *)((char *)a1 + v15);
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)((char *)a2 + v15 + 8);
  *uint64_t v16 = *(void *)((char *)a2 + v15);
  v16[1] = v18;
  swift_bridgeObjectRelease();
  uint64_t v19 = *((void *)v17 + 3);
  void v16[2] = *((void *)v17 + 2);
  v16[3] = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(int *)(a3 + 20);
  uint64_t v21 = *(uint64_t *)((char *)a1 + v20);
  unint64_t v22 = *(uint64_t *)((char *)a1 + v20 + 8);
  *(_OWORD *)((char *)a1 + v20) = *(_OWORD *)((char *)a2 + v20);
  sub_100442248(v21, v22);
  return a1;
}

uint64_t sub_1004CFDD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004CFDEC);
}

uint64_t sub_1004CFDEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SenderKeyInfo(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
    if (((4 * v10) & 0xC) != 0) {
      return 16 - ((4 * v10) & 0xC | (v10 >> 2));
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_1004CFEC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004CFED4);
}

uint64_t sub_1004CFED4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for SenderKeyInfo(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    uint64_t v11 = (void *)(a1 + *(int *)(a4 + 20));
    *uint64_t v11 = 0;
    v11[1] = (unint64_t)(((-(int)a2 >> 2) & 3) - 4 * a2) << 60;
  }
  return result;
}

uint64_t sub_1004CFFA0()
{
  uint64_t result = type metadata accessor for SenderKeyInfo(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for SenderKeyDistributionError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SenderKeyDistributionError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *uint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D0190);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SenderKeyDistributionError()
{
  return &type metadata for SenderKeyDistributionError;
}

ValueMetadata *type metadata accessor for SenderKeyAndState.CodingKeys()
{
  return &type metadata for SenderKeyAndState.CodingKeys;
}

uint64_t _s17identityservicesd16SenderKeyMessageV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s17identityservicesd16SenderKeyMessageV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D033CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SenderKeyInfo.CodingKeys()
{
  return &type metadata for SenderKeyInfo.CodingKeys;
}

unsigned char *_s17identityservicesd17SenderKeyAndStateV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004D0440);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SenderKeyConversationPair.CodingKeys()
{
  return &type metadata for SenderKeyConversationPair.CodingKeys;
}

unint64_t sub_1004D047C()
{
  unint64_t result = qword_100A50C80[0];
  if (!qword_100A50C80[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A50C80);
  }
  return result;
}

unint64_t sub_1004D04D4()
{
  unint64_t result = qword_100A50E90[0];
  if (!qword_100A50E90[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A50E90);
  }
  return result;
}

unint64_t sub_1004D052C()
{
  unint64_t result = qword_100A510A0[0];
  if (!qword_100A510A0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A510A0);
  }
  return result;
}

unint64_t sub_1004D0584()
{
  unint64_t result = qword_100A511B0;
  if (!qword_100A511B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A511B0);
  }
  return result;
}

unint64_t sub_1004D05DC()
{
  unint64_t result = qword_100A511B8[0];
  if (!qword_100A511B8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A511B8);
  }
  return result;
}

unint64_t sub_1004D0634()
{
  unint64_t result = qword_100A51240;
  if (!qword_100A51240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A51240);
  }
  return result;
}

unint64_t sub_1004D068C()
{
  unint64_t result = qword_100A51248[0];
  if (!qword_100A51248[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A51248);
  }
  return result;
}

unint64_t sub_1004D06E4()
{
  unint64_t result = qword_100A512D0;
  if (!qword_100A512D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A512D0);
  }
  return result;
}

unint64_t sub_1004D073C()
{
  unint64_t result = qword_100A512D8[0];
  if (!qword_100A512D8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100A512D8);
  }
  return result;
}

uint64_t sub_1004D0790()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004D07C8(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

unint64_t sub_1004D07E0()
{
  unint64_t result = qword_100A46CE8;
  if (!qword_100A46CE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46CE8);
  }
  return result;
}

unint64_t sub_1004D0834()
{
  unint64_t result = qword_100A46CF0;
  if (!qword_100A46CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46CF0);
  }
  return result;
}

unint64_t sub_1004D0888()
{
  unint64_t result = qword_100A46CF8;
  if (!qword_100A46CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46CF8);
  }
  return result;
}

unint64_t sub_1004D08DC()
{
  unint64_t result = qword_100A46D10;
  if (!qword_100A46D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46D10);
  }
  return result;
}

uint64_t sub_1004D0930(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100440798(&qword_100A46880);
    sub_1004CC294(a2, (void (*)(uint64_t))type metadata accessor for SenderKeyInfo);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004D09C4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100440798(&qword_100A468E0);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1004D0A28()
{
  unint64_t result = qword_100A46D50;
  if (!qword_100A46D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A46D50);
  }
  return result;
}

void sub_1004D0A80(uint64_t a1)
{
}

void sub_1004D0A90(uint64_t a1)
{
}

uint64_t sub_1004D0AA0()
{
  return _swift_deallocObject(v0, 40, 7);
}

void sub_1004D0AE8(uint64_t a1, char *a2)
{
  unsigned int v4 = *(void **)(v2 + 32);
  id v5 = *(id *)(v2 + 24);
  id v6 = v4;
  id v7 = v5;
  id v15 = v6;
  int v8 = sub_100725EB0();
  os_log_type_t v9 = sub_1007266E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    format = a2;
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 138412802;
    id v12 = v7;
    sub_100726830();
    *uint64_t v11 = v7;

    *(_WORD *)(v10 + 12) = 2112;
    id v13 = v15;
    sub_100726830();
    v11[1] = v15;

    *(_WORD *)(v10 + 22) = 1024;
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, format, (uint8_t *)v10, 0x1Cu);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1004D0D0C()
{
  return sub_100725BF0() & 1;
}

BOOL sub_1004D0D5C()
{
  return (sub_100726400() & 1) == 0;
}

uint64_t sub_1004D0E04()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

void sub_1004D0E64(uint64_t a1)
{
  sub_1004AE6E8(a1, *(void (**)(uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(unsigned char *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_1004D0EA4()
{
  return _swift_deallocObject(v0, 24, 7);
}

unint64_t sub_1004D0EE0()
{
  unint64_t result = qword_100A48B60;
  if (!qword_100A48B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48B60);
  }
  return result;
}

void sub_1004D0F34(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain_n();
  unsigned int v4 = sub_100725EB0();
  os_log_type_t v5 = sub_1007266E0();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)id v6 = 136315138;
    swift_bridgeObjectRetain();
    sub_10043E578(a1, a2, &v7);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1004D10A4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100440798(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004D10E8()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0x2B0))();
}

uint64_t type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A51378);
}

uint64_t sub_1004D12F4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    int v3 = (void *)result;
    uint64_t v4 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v0, ObjectType, v4);

    return v6;
  }
  return result;
}

uint64_t sub_1004D136C()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_typeAccordingToServer);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1004D13B4(char a1)
{
  char v2 = a1 & 1;
  int v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_typeAccordingToServer);
  uint64_t result = swift_beginAccess();
  *int v3 = v2;
  return result;
}

uint64_t (*sub_1004D1408())()
{
  return j_j__swift_endAccess;
}

uint64_t type metadata accessor for IDSGroupEncryptionControllerParticipantPreKeyState(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A51368);
}

uint64_t sub_1004D1484@<X0>(uint64_t a1@<X8>)
{
  return sub_1004D1560(&OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_preKeyState, type metadata accessor for IDSGroupEncryptionControllerParticipantPreKeyState, a1);
}

uint64_t sub_1004D14A4(uint64_t a1)
{
  return sub_1004D1648(a1, &OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_preKeyState, type metadata accessor for IDSGroupEncryptionControllerParticipantPreKeyState);
}

uint64_t (*sub_1004D14C4())()
{
  return j__swift_endAccess;
}

uint64_t type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A51388);
}

uint64_t sub_1004D1540@<X0>(uint64_t a1@<X8>)
{
  return sub_1004D1560(&OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_keyRecoveryState, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState, a1);
}

uint64_t sub_1004D1560@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  return sub_1004D15C0(v6, a3, a2);
}

uint64_t sub_1004D15C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004D1628(uint64_t a1)
{
  return sub_1004D1648(a1, &OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_keyRecoveryState, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState);
}

uint64_t sub_1004D1648(uint64_t a1, void *a2, uint64_t (*a3)(void))
{
  uint64_t v6 = v3 + *a2;
  swift_beginAccess();
  sub_1004D16B0(a1, v6, a3);
  return swift_endAccess();
}

uint64_t sub_1004D16B0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*sub_1004D1718())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004D1774(uint64_t a1)
{
  sub_100450D28(a1, (uint64_t)v6);
  if (!v7)
  {
    sub_100450D90((uint64_t)v6);
    goto LABEL_6;
  }
  type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_6:
    char v2 = 0;
    return v2 & 1;
  }
  if (*(void *)&v5[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID] == *(void *)(v1 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID))
  {

    char v2 = 1;
  }
  else
  {
    sub_100462C50(0, (unint64_t *)&qword_100A44F08);
    id v4 = *(id *)&v5[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken];
    char v2 = sub_1007267F0();
  }
  return v2 & 1;
}

uint64_t type metadata accessor for IDSGroupEncryptionControllerParticipant(uint64_t a1)
{
  return sub_100440FD0(a1, (uint64_t *)&unk_100A51398);
}

id sub_1004D1968(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v13 = objc_allocWithZone(v6);
  id v14 = sub_1004D3970((uint64_t)a1, a2, a3, a4, a5, a6);

  return v14;
}

uint64_t sub_1004D1A54()
{
  sub_1007269F0(33);
  swift_bridgeObjectRelease();
  strcpy((char *)v9, "<Participant ");
  HIWORD(v9[1]) = -4864;
  v10._countAndFlagsBits = sub_100726D00();
  sub_1007264C0(v10);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = 0x3D69727520;
  v11._object = (void *)0xE500000000000000;
  sub_1007264C0(v11);
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_allocatedURI);
  char v2 = *(void **)(v0 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_allocatedURI + 8);
  swift_bridgeObjectRetain();
  v12._countAndFlagsBits = v1;
  v12._object = v2;
  sub_1007264C0(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x3D6E656B6F74203BLL;
  v13._object = (void *)0xE800000000000000;
  sub_1007264C0(v13);
  id v3 = *(id *)(v0 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken);
  id v4 = [v3 description];
  uint64_t v5 = sub_100726430();
  uint64_t v7 = v6;

  v14._countAndFlagsBits = v5;
  v14._object = v7;
  sub_1007264C0(v14);

  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 62;
  v15._object = (void *)0xE100000000000000;
  sub_1007264C0(v15);
  return v9[0];
}

void sub_1004D1BD0(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_delegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    id v9 = (id)Strong;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v1, ObjectType, v5);
  }
  else
  {
    uint64_t v7 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    int v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    v8(a1, 1, 1, v7);
  }
}

uint64_t sub_1004D1CBC(uint64_t result, uint64_t a2, char a3, char a4)
{
  uint64_t v7 = result;
  if (a3) {
    uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))((swift_isaMask & *v4) + 0x118))(0, result, a2);
  }
  if (a4)
  {
    int v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))((swift_isaMask & *v4) + 0x118);
    return v8(1, v7, a2);
  }
  return result;
}

uint64_t sub_1004D1EB4(char a1, uint64_t a2, uint64_t a3)
{
  int v6 = a1 & 1;
  uint64_t v7 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState(0);
  __chkstk_darwin(v7, v8);
  Swift::String v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v11 = sub_1004D2058(v3, a2, a3);
  char v12 = sub_1004D22A8(v3, a2, a3);
  BOOL v13 = sub_1004D24F8(v3, a2, a3);
  uint64_t result = sub_100450980(v6, 1);
  if ((result & 1) == 0 || (v12 & 1) == 0 || v13)
  {
    uint64_t result = sub_100450980(v6, 0);
    if (result)
    {
      if (v11)
      {
        if (!v13) {
          return result;
        }
LABEL_9:
        BOOL v15 = 1;
        if ((v12 & 1) == 0)
        {
LABEL_10:
          BOOL v16 = sub_100450980(v6, 1);
LABEL_13:
          *(void *)Swift::String v10 = a2;
          *((void *)v10 + 1) = a3;
          unsigned char v10[16] = v15;
          v10[17] = v16;
          swift_storeEnumTagMultiPayload();
          uint64_t v17 = *(void (**)(char *))((swift_isaMask & *v3) + 0xF0);
          swift_bridgeObjectRetain();
          v17(v10);
          return sub_1004D27FC();
        }
LABEL_12:
        BOOL v16 = 1;
        goto LABEL_13;
      }
    }
    else if (v11)
    {
      goto LABEL_9;
    }
    BOOL v15 = sub_100450980(v6, 0);
    if ((v12 & 1) == 0) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_1004D2058(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  Swift::String v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8, v11);
  BOOL v13 = (char *)&v25 - v12;
  uint64_t v14 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState(0);
  uint64_t v16 = __chkstk_darwin(v14, v15);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0xE8))(v16);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if (v18[16] == 1)
    {
      if (*(void *)v18 == a2 && *((void *)v18 + 1) == a3)
      {
        swift_bridgeObjectRelease();
        char v22 = 1;
      }
      else
      {
        char v22 = sub_100726D20();
        swift_bridgeObjectRelease();
      }
      return v22 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_17:
    char v22 = 0;
    return v22 & 1;
  }
  if (EnumCaseMultiPayload != 1) {
    goto LABEL_17;
  }
  sub_1004D5414((uint64_t)v18, (uint64_t)v13);
  int v20 = v13[*(int *)(v6 + 28)];
  sub_1004D15C0((uint64_t)v13, (uint64_t)v10, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  if (v20 == 1)
  {
    if (*v10 == a2 && v10[1] == a3) {
      char v22 = 1;
    }
    else {
      char v22 = sub_100726D20();
    }
  }
  else
  {
    char v22 = 0;
  }
  sub_1004D3CD0((uint64_t)v13, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  sub_1004D3CD0((uint64_t)v10, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  return v22 & 1;
}

uint64_t sub_1004D22A8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  Swift::String v10 = (uint64_t *)((char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8, v11);
  BOOL v13 = (char *)&v25 - v12;
  uint64_t v14 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState(0);
  uint64_t v16 = __chkstk_darwin(v14, v15);
  uint64_t v18 = (char *)&v25 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0xE8))(v16);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    if (v18[17] == 1)
    {
      if (*(void *)v18 == a2 && *((void *)v18 + 1) == a3)
      {
        swift_bridgeObjectRelease();
        char v22 = 1;
      }
      else
      {
        char v22 = sub_100726D20();
        swift_bridgeObjectRelease();
      }
      return v22 & 1;
    }
    swift_bridgeObjectRelease();
LABEL_17:
    char v22 = 0;
    return v22 & 1;
  }
  if (EnumCaseMultiPayload != 1) {
    goto LABEL_17;
  }
  sub_1004D5414((uint64_t)v18, (uint64_t)v13);
  int v20 = v13[*(int *)(v6 + 32)];
  sub_1004D15C0((uint64_t)v13, (uint64_t)v10, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  if (v20 == 1)
  {
    if (*v10 == a2 && v10[1] == a3) {
      char v22 = 1;
    }
    else {
      char v22 = sub_100726D20();
    }
  }
  else
  {
    char v22 = 0;
  }
  sub_1004D3CD0((uint64_t)v13, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  sub_1004D3CD0((uint64_t)v10, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  return v22 & 1;
}

BOOL sub_1004D24F8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v31 = a3;
  uint64_t v5 = sub_100725CC0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
  uint64_t v12 = __chkstk_darwin(v10, v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12, v15);
  uint64_t v17 = (uint64_t *)((char *)&v30 - v16);
  uint64_t v18 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState(0);
  uint64_t v20 = __chkstk_darwin(v18, v19);
  char v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0xE8))(v20);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    unint64_t v26 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState;
    uint64_t v25 = (uint64_t)v22;
    goto LABEL_9;
  }
  sub_1004D5414((uint64_t)v22, (uint64_t)v17);
  if (*v17 == a2 && v17[1] == v31)
  {
    sub_1004D15C0((uint64_t)v17, (uint64_t)v14, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  }
  else
  {
    char v24 = sub_100726D20();
    sub_1004D15C0((uint64_t)v17, (uint64_t)v14, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
    if ((v24 & 1) == 0)
    {
      sub_1004D3CD0((uint64_t)v14, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
      uint64_t v25 = (uint64_t)v17;
      unint64_t v26 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest;
LABEL_9:
      sub_1004D3CD0(v25, v26);
      return 0;
    }
  }
  sub_100725CB0();
  sub_100725BC0();
  double v29 = v28;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  sub_1004D3CD0((uint64_t)v14, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  sub_1004D3CD0((uint64_t)v17, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  return v29 > 3.0;
}

uint64_t sub_1004D27FC()
{
  uint64_t v1 = sub_100725EF0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100725F20();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = __chkstk_darwin(v6, v8);
  uint64_t v11 = (char *)v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v0[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_hasScheduledKeyRecovery] & 1) == 0)
  {
    v0[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_hasScheduledKeyRecovery] = 1;
    v15[0] = *(void *)&v0[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_q];
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v0;
    aBlock[4] = sub_1004D53AC;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_100435714;
    aBlock[3] = &unk_10098F0D0;
    uint64_t v13 = _Block_copy(aBlock);
    uint64_t v14 = v0;
    sub_100725F00();
    v15[1] = _swiftEmptyArrayStorage;
    sub_1004D53CC((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004413A8((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    sub_100726890();
    sub_100726750();
    _Block_release(v13);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v6);
    return swift_release();
  }
  return result;
}

uint64_t sub_1004D2AC0(void *a1)
{
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
  __chkstk_darwin(v2, v3);
  uint64_t v5 = (uint64_t *)((char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState(0);
  uint64_t v8 = __chkstk_darwin(v6, v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v8, v11);
  uint64_t v14 = (char *)&v22 - v13;
  *((unsigned char *)a1 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_hasScheduledKeyRecovery) = 0;
  (*(void (**)(uint64_t))((swift_isaMask & *a1) + 0xE8))(v12);
  if (swift_getEnumCaseMultiPayload())
  {
    uint64_t v15 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState;
    uint64_t v16 = (uint64_t)v14;
  }
  else
  {
    uint64_t v17 = *(void *)v14;
    uint64_t v18 = *((void *)v14 + 1);
    char v19 = v14[16];
    char v20 = v14[17];
    sub_100725CB0();
    *uint64_t v5 = v17;
    v5[1] = v18;
    v5[2] = 0;
    *((unsigned char *)v5 + *(int *)(v2 + 28)) = v19;
    *((unsigned char *)v5 + *(int *)(v2 + 32)) = v20;
    sub_1004D15C0((uint64_t)v5, (uint64_t)v10, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *))((swift_isaMask & *a1) + 0xF0))(v10);
    (*(void (**)(void *))((swift_isaMask & *a1) + 0x148))(v5);
    uint64_t v16 = (uint64_t)v5;
    uint64_t v15 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest;
  }
  return sub_1004D3CD0(v16, v15);
}

void sub_1004D2D10(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_delegate;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    id v7 = (id)Strong;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, v1, ObjectType, v5);
  }
}

void sub_1004D2DB4(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v59 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState(0);
  __chkstk_darwin(v59, v7);
  size_t v58 = (char *)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for IDSGroupEncryptionControllerParticipantPreKeyState(0);
  __chkstk_darwin(v57, v9);
  id v56 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = v3;
  swift_bridgeObjectRetain_n();
  uint64_t v12 = (char *)v11;
  uint64_t v13 = sub_100725EB0();
  os_log_type_t v14 = sub_1007266E0();
  BOOL v15 = os_log_type_enabled(v13, v14);
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  if (v15)
  {
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = (void *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    uint64_t v63 = v55;
    *(_DWORD *)uint64_t v16 = 136315906;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_10043E578(a2, a3, &v63);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v16 + 12) = 2048;
    uint64_t v18 = *(void *)&v12[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID];

    uint64_t v62 = v18;
    sub_100726830();

    *(_WORD *)(v16 + 22) = 2080;
    uint64_t v19 = *(void *)&v12[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_allocatedURI];
    unint64_t v20 = *(void *)&v12[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_allocatedURI + 8];
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_10043E578(v19, v20, &v63);
    sub_100726830();

    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 32) = 2112;
    uint64_t v21 = *(void **)&v12[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken];
    uint64_t v62 = (uint64_t)v21;
    id v22 = v21;
    sub_100726830();
    *uint64_t v17 = v21;

    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%sParticipant %llu: uri=%s; token=%@", (uint8_t *)v16, 0x2Au);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v23 = v12;
  swift_bridgeObjectRetain_n();
  char v24 = v23;
  uint64_t v25 = sub_100725EB0();
  os_log_type_t v26 = sub_1007266E0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_10043E578(v61, a3, &v63);
    sub_100726830();
    uint64_t v28 = swift_bridgeObjectRelease_n();
    *(_WORD *)(v27 + 12) = 2080;
    LOBYTE(v62) = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v24) + 0xB8))(v28) & 1;
    uint64_t v29 = sub_100726480();
    uint64_t v62 = sub_10043E578(v29, v30, &v63);
    sub_100726830();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%s    typeAccordingToServer: %s", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  uint64_t v31 = v24;
  swift_bridgeObjectRetain_n();
  unint64_t v32 = v31;
  uint64_t v33 = sub_100725EB0();
  os_log_type_t v34 = sub_1007266E0();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_10043E578(v61, a3, &v63);
    sub_100726830();
    uint64_t v36 = swift_bridgeObjectRelease_n();
    *(_WORD *)(v35 + 12) = 2080;
    (*(void (**)(uint64_t))((swift_isaMask & *(void *)v32) + 0xD0))(v36);
    uint64_t v37 = sub_100726480();
    uint64_t v62 = sub_10043E578(v37, v38, &v63);
    sub_100726830();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "%s    preKeyState: %s", (uint8_t *)v35, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  id v39 = v32;
  swift_bridgeObjectRetain_n();
  id v40 = v39;
  id v41 = sub_100725EB0();
  os_log_type_t v42 = sub_1007266E0();
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v43 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    *(_DWORD *)uint64_t v43 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_10043E578(v61, a3, &v63);
    sub_100726830();
    uint64_t v44 = swift_bridgeObjectRelease_n();
    *(_WORD *)(v43 + 12) = 2080;
    (*(void (**)(uint64_t))((swift_isaMask & *(void *)v40) + 0xE8))(v44);
    uint64_t v45 = sub_100726480();
    uint64_t v62 = sub_10043E578(v45, v46, &v63);
    sub_100726830();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v41, v42, "%s    keyRecoveryState: %s", (uint8_t *)v43, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  uint64_t v47 = v40;
  swift_bridgeObjectRetain_n();
  BOOL v48 = v47;
  uint64_t v49 = sub_100725EB0();
  os_log_type_t v50 = sub_1007266E0();
  if (os_log_type_enabled(v49, v50))
  {
    uint64_t v51 = swift_slowAlloc();
    uint64_t v63 = swift_slowAlloc();
    *(_DWORD *)uint64_t v51 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v62 = sub_10043E578(v61, a3, &v63);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v51 + 12) = 2080;
    if (v48[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_hasScheduledKeyRecovery]) {
      uint64_t v52 = 1702195828;
    }
    else {
      uint64_t v52 = 0x65736C6166;
    }
    if (v48[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_hasScheduledKeyRecovery]) {
      unint64_t v53 = 0xE400000000000000;
    }
    else {
      unint64_t v53 = 0xE500000000000000;
    }
    uint64_t v62 = sub_10043E578(v52, v53, &v63);
    sub_100726830();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "%s    hasScheduledKeyRecvory: %s", (uint8_t *)v51, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

id sub_1004D3830()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004D3914()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x150))();
}

id sub_1004D3970(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a5;
  uint64_t v32 = a6;
  uint64_t v29 = a3;
  unint64_t v30 = a4;
  uint64_t v27 = a2;
  uint64_t v28 = a1;
  uint64_t v26 = sub_100726740();
  uint64_t v7 = *(void *)(v26 - 8);
  __chkstk_darwin(v26, v8);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100726700();
  __chkstk_darwin(v11, v12);
  uint64_t v13 = sub_100725F20();
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v25 = OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_q;
  v24[1] = sub_100462C50(0, (unint64_t *)&qword_100A45480);
  BOOL v15 = v6;
  sub_100725F00();
  os_log_type_t v34 = _swiftEmptyArrayStorage;
  sub_1004D53CC(&qword_100A44A68, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100431F80((uint64_t *)&unk_100A45490);
  sub_1004413A8((unint64_t *)&qword_100A44A70, (uint64_t *)&unk_100A45490);
  sub_100726890();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v26);
  *(void *)(v24[2] + v25) = sub_100726760();
  uint64_t v16 = &v15[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_delegate];
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v15[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_typeAccordingToServer] = 1;
  type metadata accessor for IDSGroupEncryptionControllerParticipantPreKeyState(0);
  swift_storeEnumTagMultiPayload();
  type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState(0);
  swift_storeEnumTagMultiPayload();
  v15[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_hasScheduledKeyRecovery] = 0;
  *((void *)v16 + 1) = v27;
  swift_unknownObjectWeakAssign();
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID] = v29;
  uint64_t v17 = v30;
  uint64_t v18 = v31;
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken] = v30;
  uint64_t v19 = &v15[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_allocatedURI];
  uint64_t v20 = v32;
  *uint64_t v19 = v18;
  v19[1] = v20;
  id v21 = v17;

  id v22 = (objc_class *)type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
  v33.receiver = v15;
  v33.super_class = v22;
  return objc_msgSendSuper2(&v33, "init");
}

uint64_t sub_1004D3CD0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *sub_1004D3D30(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v7 = sub_100725CC0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1004D3E80(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result <= 1)
  {
    uint64_t v3 = sub_100725CC0();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_1004D3EFC(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_100725CC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1004D4008(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004D3CD0((uint64_t)a1, type metadata accessor for IDSGroupEncryptionControllerParticipantPreKeyState);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_100725CC0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1004D4138(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_100725CC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1004D4244(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004D3CD0((uint64_t)a1, type metadata accessor for IDSGroupEncryptionControllerParticipantPreKeyState);
    if (swift_getEnumCaseMultiPayload() > 1)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_100725CC0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1004D437C()
{
  uint64_t result = sub_100725CC0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1004D4404(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = a3[6];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_100725CC0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[8];
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
  }
  return v4;
}

uint64_t sub_1004D4518(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_100725CC0();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *sub_1004D4590(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100725CC0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
  return a1;
}

void *sub_1004D4654(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = a3[6];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1004D4718(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = a3[6];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_100725CC0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[8];
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  return a1;
}

void *sub_1004D47C0(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = a3[6];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_100725CC0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[8];
  *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  *((unsigned char *)a1 + v11) = *((unsigned char *)a2 + v11);
  return a1;
}

uint64_t sub_1004D4870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004D4884);
}

uint64_t sub_1004D4884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100725CC0();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1004D4934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004D4948);
}

uint64_t sub_1004D4948(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100725CC0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1004D49F0()
{
  uint64_t result = sub_100725CC0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1004D4AA0(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      uint64_t v11 = (int *)type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
      uint64_t v12 = v11[6];
      uint64_t v13 = (char *)a1 + v12;
      uint64_t v14 = (char *)a2 + v12;
      uint64_t v15 = sub_100725CC0();
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      *((unsigned char *)a1 + v11[7]) = *((unsigned char *)a2 + v11[7]);
      *((unsigned char *)a1 + v11[8]) = *((unsigned char *)a2 + v11[8]);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1004D4C2C(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = a1 + *(int *)(type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0) + 24);
    uint64_t v4 = sub_100725CC0();
    int v5 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
    return v5(v3, v4);
  }
  else if (!result)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_1004D4CE4(void *a1, void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v8 = a2[1];
    *a1 = *a2;
    a1[1] = v8;
    a1[2] = a2[2];
    uint64_t v9 = (int *)type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
    uint64_t v10 = v9[6];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_100725CC0();
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    *((unsigned char *)a1 + v9[7]) = *((unsigned char *)a2 + v9[7]);
    *((unsigned char *)a1 + v9[8]) = *((unsigned char *)a2 + v9[8]);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((_WORD *)a1 + 8) = *((_WORD *)a2 + 8);
    swift_bridgeObjectRetain();
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_1004D4E2C(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004D3CD0((uint64_t)a1, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      uint64_t v7 = (int *)type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
      uint64_t v8 = v7[6];
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_100725CC0();
      uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      *((unsigned char *)a1 + v7[7]) = *((unsigned char *)a2 + v7[7]);
      *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      *((unsigned char *)a1 + 16) = *((unsigned char *)a2 + 16);
      *((unsigned char *)a1 + 17) = *((unsigned char *)a2 + 17);
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *sub_1004D4FB0(void *a1, void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v6 = (int *)type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
    uint64_t v7 = v6[6];
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_100725CC0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1004D50B0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004D3CD0((uint64_t)a1, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      uint64_t v6 = (int *)type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
      uint64_t v7 = v6[6];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_100725CC0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
      *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1004D51D4()
{
  uint64_t result = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1004D5268()
{
  return type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
}

uint64_t sub_1004D5270()
{
  uint64_t result = type metadata accessor for IDSGroupEncryptionControllerParticipantPreKeyState(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryState(319);
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1004D5374()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004D53AC()
{
  return sub_1004D2AC0(*(void **)(v0 + 16));
}

uint64_t sub_1004D53B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004D53C4()
{
  return swift_release();
}

uint64_t sub_1004D53CC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004D5414(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t UUID.getData.getter()
{
  uint64_t v9 = sub_100725D10();
  char v10 = v0;
  char v11 = v1;
  char v12 = v2;
  char v13 = v3;
  char v14 = v4;
  char v15 = v5;
  char v16 = v6;
  char v17 = v7;
  return sub_100466C6C((uint64_t)&v9, (uint64_t)&v18);
}

uint64_t static UUID.initFrom(data:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v4 = a2 >> 62;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v7) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
      }
      uint64_t v7 = (int)v7;
LABEL_6:
      if (v7 == 16)
      {
        if (!v4)
        {
          uint64_t v22 = a1;
          __int16 v23 = a2;
          char v24 = BYTE2(a2);
          char v25 = BYTE3(a2);
          char v26 = BYTE4(a2);
          char v27 = BYTE5(a2);
          id v16 = [objc_allocWithZone((Class)NSUUID) initWithUUIDBytes:&v22];
          sub_100725D00();

          uint64_t v17 = sub_100725D30();
          return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a3, 0, 1, v17);
        }
        if (v4 == 1)
        {
          if ((int)a1 <= a1 >> 32)
          {
            sub_100441FD4(a1, a2);
            uint64_t v11 = sub_100725910();
            if (!v11)
            {
LABEL_13:
              sub_100725930();
              sub_1004D58BC(v11, a3);
              return sub_100442248(a1, a2);
            }
            uint64_t v12 = sub_100725940();
            if (!__OFSUB__((int)a1, v12))
            {
              v11 += (int)a1 - v12;
              goto LABEL_13;
            }
            goto LABEL_31;
          }
          goto LABEL_29;
        }
        uint64_t v18 = *(void *)(a1 + 16);
        uint64_t v19 = *(void *)(a1 + 24);
        swift_retain();
        swift_retain();
        uint64_t v20 = sub_100725910();
        if (v20)
        {
          uint64_t v21 = sub_100725940();
          if (__OFSUB__(v18, v21)) {
            goto LABEL_32;
          }
          v20 += v18 - v21;
        }
        if (__OFSUB__(v19, v18)) {
          goto LABEL_30;
        }
        sub_100725930();
        sub_1004D58BC(v20, a3);
        swift_release();
        return swift_release();
      }
      else
      {
LABEL_16:
        uint64_t v14 = sub_100725D30();
        char v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
        return v15(a3, 1, 1, v14);
      }
    case 2uLL:
      uint64_t v9 = *(void *)(a1 + 16);
      uint64_t v8 = *(void *)(a1 + 24);
      BOOL v10 = __OFSUB__(v8, v9);
      uint64_t v7 = v8 - v9;
      if (!v10) {
        goto LABEL_6;
      }
      goto LABEL_28;
    case 3uLL:
      goto LABEL_16;
    default:
      uint64_t v7 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_1004D58BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1)
  {
    id v3 = [objc_allocWithZone((Class)NSUUID) initWithUUIDBytes:a1];
    sub_100725D00();

    uint64_t v4 = sub_100725D30();
    char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    uint64_t v6 = v4;
    uint64_t v7 = a2;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v9 = sub_100725D30();
    char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v6 = v9;
    uint64_t v7 = a2;
    uint64_t v8 = 1;
  }

  return v5(v7, v8, 1, v6);
}

id sub_1004D598C()
{
  id result = (id)im_primary_queue();
  if (!result) {
    __break(1u);
  }
  return result;
}

void registerSysdiagnoseBlock(title:queue:block:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v8[4] = a4;
  void v8[5] = a5;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1004D5A8C;
  void v8[3] = &unk_10098F0F8;
  uint64_t v6 = _Block_copy(v8);
  swift_retain();
  swift_release();
  NSString v7 = sub_100726420();
  sub_1003319E8(v6, (uint64_t)v7, a3);

  _Block_release(v6);
}

id sub_1004D5A8C(uint64_t a1)
{
  char v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  uint64_t v4 = v3;
  swift_release();
  if (v4)
  {
    NSString v5 = sub_100726420();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v5 = 0;
  }

  return v5;
}

uint64_t sub_1004D5B10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004D5B20()
{
  return swift_release();
}

unint64_t sub_1004D5B28(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A47230);
  uint64_t v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    unint64_t v6 = (unint64_t)*(v4 - 1);
    NSString v7 = *v4;
    sub_100441FD4(v5, v6);
    id v8 = v7;
    unint64_t result = sub_1004D97A4(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

char *sub_1004D5C48(void *a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return sub_1004D5C8C(a1, a2);
}

char *sub_1004D5C8C(void *a1, uint64_t a2)
{
  id v5 = v2;
  sub_1004DFE9C(6);
  uint64_t v6 = OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_lock;
  sub_100431F80((uint64_t *)&unk_100A454B0);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 16) = 0;
  *(void *)&v5[v6] = v7;
  *(void *)&v5[OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_continuationsForPreKeys] = _swiftEmptyArrayStorage;
  uint64_t v8 = OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_negotiators;
  *(void *)&v5[v8] = sub_1004D5B28((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v9 = (uint64_t *)&v5[OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_stopListening];
  uint64_t *v9 = 0;
  v9[1] = 0;
  *(void *)&v5[OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_identityProvider] = a1;
  *(void *)&v5[OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_metadataProvider] = a2;
  uint64_t v10 = *v9;
  uint64_t *v9 = 0;
  v9[1] = 0;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  sub_1004D5EC8(v10);

  v21.receiver = v5;
  v21.super_class = (Class)type metadata accessor for IDSGlobalLinkP2PKeyNegotiatorController();
  id v11 = objc_msgSendSuper2(&v21, "init");
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  void v20[4] = sub_1004D5F5C;
  v20[5] = v12;
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 1107296256;
  v20[2] = sub_100435714;
  v20[3] = &unk_10098F148;
  BOOL v13 = _Block_copy(v20);
  uint64_t v14 = (char *)v11;
  swift_release();
  id v15 = [a1 addPreKeyChangeHandler:v13];

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  _Block_release(v13);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v15;
  uint64_t v17 = (uint64_t (**)())&v14[OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_stopListening];
  uint64_t v18 = *(void *)&v14[OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_stopListening];
  *uint64_t v17 = sub_1004D6038;
  v17[1] = (uint64_t (*)())v16;
  sub_1004D5EC8(v18);
  return v14;
}

uint64_t sub_1004D5EC8(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t type metadata accessor for IDSGlobalLinkP2PKeyNegotiatorController()
{
  uint64_t result = qword_100A513D0;
  if (!qword_100A513D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004D5F24()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_1004D5F5C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v1 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x130))();
  }
}

uint64_t sub_1004D5FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004D5FF8()
{
  return swift_release();
}

uint64_t sub_1004D6000()
{
  _Block_release(*(const void **)(v0 + 16));

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_1004D6038()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

id sub_1004D6098()
{
  char v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_10043E578(0x74696E696564, 0xE600000000000000, &v12);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: deinitializing", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  id v5 = *(void (**)(uint64_t))&v0[OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_stopListening];
  if (v5)
  {
    swift_retain();
    uint64_t v6 = sub_100725EB0();
    os_log_type_t v7 = sub_1007266E0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      sub_10043E578(0x74696E696564, 0xE600000000000000, &v12);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: stop listening", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    v5(v9);
    sub_1004D5EC8((uint64_t)v5);
  }
  uint64_t v10 = (objc_class *)type metadata accessor for IDSGlobalLinkP2PKeyNegotiatorController();
  v13.receiver = v1;
  v13.super_class = v10;
  return objc_msgSendSuper2(&v13, "dealloc");
}

uint64_t sub_1004D641C(uint64_t a1, unint64_t a2, void *a3, unint64_t a4)
{
  uint64_t v5 = v4;
  swift_bridgeObjectRetain_n();
  id v10 = a3;
  swift_bridgeObjectRetain_n();
  id v11 = v10;
  uint64_t v12 = sub_100725EB0();
  os_log_type_t v13 = sub_1007266E0();
  uint64_t v124 = a1;
  uint64_t v125 = v5;
  unint64_t v129 = a4;
  char v122 = v11;
  uint64_t v123 = a2;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = v11;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v16 = (void *)swift_slowAlloc();
    v132[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315906;
    sub_10043E578(0xD000000000000038, 0x80000001008C3EB0, v132);
    sub_100726830();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10043E578(a1, a2, v132);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v15 + 22) = 2112;
    id v17 = v14;
    sub_100726830();
    *uint64_t v16 = v14;

    *(_WORD *)(v15 + 32) = 2080;
    uint64_t v5 = v125;
    sub_1004D962C();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_100726580();
    unint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v131[0] = sub_10043E578(v18, v20, v132);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s: forSession:%s localPushToken:%@ remotePushToken:%s", (uint8_t *)v15, 0x2Au);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    swift_bridgeObjectRelease_n();
  }

  objc_super v21 = *(void **)(v5 + OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_identityProvider);
  id v22 = [v21 localPublicPreKey];
  if (!v22)
  {
    uint64_t v63 = sub_100725EB0();
    os_log_type_t v64 = sub_1007266E0();
    if (os_log_type_enabled(v63, v64))
    {
      int64_t v65 = (uint8_t *)swift_slowAlloc();
      v132[0] = swift_slowAlloc();
      *(_DWORD *)int64_t v65 = 136315138;
      v131[0] = sub_10043E578(0xD000000000000038, 0x80000001008C3EB0, v132);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v63, v64, "%s: no localPublicPreKey ", v65, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 0;
  }
  __int16 v23 = v22;
  id v24 = [v21 localPrivatePreKey];
  if (!v24)
  {
    int v66 = sub_100725EB0();
    os_log_type_t v67 = sub_1007266E0();
    if (os_log_type_enabled(v66, v67))
    {
      int64_t v68 = (uint8_t *)swift_slowAlloc();
      v132[0] = swift_slowAlloc();
      *(_DWORD *)int64_t v68 = 136315138;
      v131[0] = sub_10043E578(0xD000000000000038, 0x80000001008C3EB0, v132);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v66, v67, "%s: no localPrivatePreKey", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 0;
  }
  char v25 = v24;
  id v120 = v23;
  id v117 = v25;
  uint64_t v28 = (void *)nullsub_37(v120, v117, v26, v27);
  unint64_t v30 = v29;
  uint64_t v31 = v28;
  uint64_t v32 = v30;
  objc_super v33 = _swiftEmptyArrayStorage;
  os_log_type_t v34 = sub_1004D92A4(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v36 = v34[2];
  unint64_t v35 = v34[3];
  int64_t v37 = v36 + 1;
  if (v36 >= v35 >> 1) {
    goto LABEL_39;
  }
  while (1)
  {
    v34[2] = v37;
    uint64_t v121 = (uint64_t)v34;
    unint64_t v38 = &v34[2 * v36];
    v38[4] = v31;
    v38[5] = v32;
    id v39 = objc_msgSend(v21, "previousLocalPublicPreKey", v116);
    uint64_t v127 = (unint64_t *)v21;
    if (v39)
    {
      id v40 = v39;
      id v41 = [v21 previousLocalPrivatePreKey];
      if (v41)
      {
        os_log_type_t v42 = v41;
        uint64_t v43 = v40;
        unint64_t v36 = v42;
        uint64_t v46 = nullsub_37(v43, v36, v44, v45);
        unint64_t v48 = v47;
        uint64_t v49 = (void *)v121;
        unint64_t isUniquelyReferenced_nonNull_native = *(void *)(v121 + 16);
        unint64_t v50 = *(void *)(v121 + 24);
        unint64_t v52 = isUniquelyReferenced_nonNull_native + 1;
        if (isUniquelyReferenced_nonNull_native >= v50 >> 1) {
LABEL_82:
        }
          uint64_t v49 = sub_1004D92A4((void *)(v50 > 1), v52, 1, v49);
        v49[2] = v52;
        uint64_t v121 = (uint64_t)v49;
        unint64_t v53 = &v49[2 * isUniquelyReferenced_nonNull_native];
        v53[4] = v46;
        v53[5] = v48;
      }
    }
    uint64_t v133 = v33;
    uint64_t v54 = v124;
    if (!(v129 >> 62))
    {
      uint64_t v55 = *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      char v118 = (void *)v32;
      char v119 = v31;
      if (!v55) {
        break;
      }
      goto LABEL_14;
    }
    swift_bridgeObjectRetain();
    uint64_t v55 = sub_100726BA0();
    char v118 = (void *)v32;
    char v119 = v31;
    if (!v55) {
      break;
    }
LABEL_14:
    uint64_t v31 = (char *)v129;
    objc_super v33 = (unint64_t *)(v129 & 0xC000000000000001);
    uint64_t v32 = 4;
    unint64_t v116 = ":remotePublicKey:)";
    while (1)
    {
      int64_t v37 = v32 - 4;
      if (!v33) {
        break;
      }
      id v56 = (id)sub_100726A10();
      objc_super v21 = (void *)(v32 - 3);
      if (__OFADD__(v37, 1)) {
        goto LABEL_38;
      }
LABEL_20:
      id v57 = v56;
      size_t v58 = sub_100725EB0();
      os_log_type_t v59 = sub_1007266E0();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = swift_slowAlloc();
        uint64_t v61 = (void *)swift_slowAlloc();
        v132[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v60 = 136315394;
        *(void *)(v60 + 4) = sub_10043E578(0xD000000000000038, 0x80000001008C3EB0, v132);
        *(_WORD *)(v60 + 12) = 2112;
        *(void *)(v60 + 14) = v57;
        void *v61 = v57;

        _os_log_impl((void *)&_mh_execute_header, v58, v59, "%s: getting remotePublicPreKey for push token %@", (uint8_t *)v60, 0x16u);
        sub_100431F80(&qword_100A44F10);
        swift_arrayDestroy();
        uint64_t v31 = (char *)v129;
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      id v62 = [v127 publicKeyForPushToken:v57];
      if (!v62)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v69 = v57;
        uint64_t v70 = sub_100725EB0();
        os_log_type_t v71 = sub_1007266E0();
        if (os_log_type_enabled(v70, v71))
        {
          uint64_t v72 = swift_slowAlloc();
          size_t v73 = (void *)swift_slowAlloc();
          v132[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v72 = 136315394;
          sub_10043E578(0xD000000000000038, 0x80000001008C3EB0, v132);
          sub_100726830();
          *(_WORD *)(v72 + 12) = 2112;
          v131[0] = (uint64_t)v69;
          id v74 = v69;
          sub_100726830();
          void *v73 = v69;

          _os_log_impl((void *)&_mh_execute_header, v70, v71, "%s: no remotePublicPreKey for push token %@", (uint8_t *)v72, 0x16u);
          sub_100431F80(&qword_100A44F10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        goto LABEL_52;
      }
      unint64_t v36 = (unint64_t)v62;
      sub_100726550();
      if (*(void *)(((unint64_t)v133 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v133 & 0xFFFFFFFFFFFFFF8)
                                                                                           + 0x18) >> 1)
        sub_1007265A0();
      sub_1007265C0();
      sub_100726590();

      ++v32;
      if (v21 == (void *)v55)
      {
        swift_bridgeObjectRelease();
        uint64_t v75 = v133;
        uint64_t v32 = (uint64_t)v118;
        uint64_t v31 = v119;
        uint64_t v54 = v124;
        goto LABEL_42;
      }
    }
    id v56 = *(id *)&v31[8 * v32];
    objc_super v21 = (void *)(v32 - 3);
    if (!__OFADD__(v37, 1)) {
      goto LABEL_20;
    }
LABEL_38:
    __break(1u);
LABEL_39:
    os_log_type_t v34 = sub_1004D92A4((void *)(v35 > 1), v37, 1, v34);
  }
  swift_bridgeObjectRelease();
  uint64_t v75 = _swiftEmptyArrayStorage;
LABEL_42:
  swift_bridgeObjectRetain();
  uint64_t v76 = sub_1004D8894(v54, v123, (__SecKey *)v120, (unint64_t)v75);
  swift_bridgeObjectRelease();
  if (!*(void *)(v76 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v87 = sub_100725EB0();
    os_log_type_t v88 = sub_1007266E0();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = (uint8_t *)swift_slowAlloc();
      v132[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v89 = 136315138;
      v131[0] = sub_10043E578(0xD000000000000038, 0x80000001008C3EB0, v132);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v87, v88, "%s: could not build key combos", v89, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

LABEL_52:
    return 0;
  }
  uint64_t v77 = OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_lock;
  uint64_t v78 = *(os_unfair_lock_s **)(v125 + OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_lock);
  uint64_t v127 = (unint64_t *)v76;
  swift_retain();
  os_unfair_lock_lock(v78 + 4);
  swift_release();
  uint64_t v31 = *(char **)(v76 + 16);
  if (v31)
  {
    size_t v79 = (uint64_t *)(v125 + OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_negotiators);
    swift_bridgeObjectRetain();
    swift_beginAccess();
    uint64_t v80 = (unint64_t *)(v76 + 40);
    uint64_t v81 = v31;
    do
    {
      uint64_t v82 = *v79;
      if (*(void *)(*v79 + 16))
      {
        uint64_t v84 = *(v80 - 1);
        unint64_t v83 = *v80;
        sub_100441FD4(v84, *v80);
        sub_100441FD4(v84, v83);
        swift_bridgeObjectRetain();
        unint64_t v85 = sub_1004D97A4(v84, v83);
        if (v86)
        {
          id v110 = *(id *)(*(void *)(v82 + 56) + 8 * v85);
          swift_bridgeObjectRelease();
          sub_100442248(v84, v83);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          id v90 = v110;
          BOOL v111 = sub_100725EB0();
          os_log_type_t v112 = sub_1007266E0();
          if (os_log_type_enabled(v111, v112))
          {
            uint64_t v113 = swift_slowAlloc();
            uint64_t v128 = (void *)swift_slowAlloc();
            v131[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v113 = 136315394;
            sub_10043E578(0xD000000000000038, 0x80000001008C3EB0, v131);
            sub_100726830();
            *(_WORD *)(v113 + 12) = 2112;
            id v114 = v90;
            sub_100726830();
            *uint64_t v128 = v90;

            _os_log_impl((void *)&_mh_execute_header, v111, v112, "%s: already have negotiator: %@", (uint8_t *)v113, 0x16u);
            sub_100431F80(&qword_100A44F10);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            sub_100442248(v84, v83);
          }
          else
          {
            sub_100442248(v84, v83);
          }
          size_t v115 = *(os_unfair_lock_s **)(v125 + v77);
          swift_retain();
          os_unfair_lock_unlock(v115 + 4);

LABEL_79:
          swift_release();
          return (uint64_t)v90;
        }
        swift_bridgeObjectRelease();
        sub_100442248(v84, v83);
        sub_100442248(v84, v83);
      }
      v80 += 2;
      --v81;
    }
    while (v81);
    swift_bridgeObjectRelease();
  }
  uint64_t v126 = v77;
  type metadata accessor for IDSGlobalLinkP2PKeyNegotiator();
  swift_bridgeObjectRetain();
  id v92 = v122;
  swift_bridgeObjectRetain();
  unint64_t v129 = (unint64_t)sub_1004DF584(v124, v123, (uint64_t)v92, v121, v129, (uint64_t)v75);
  if (!v31)
  {
LABEL_71:
    swift_bridgeObjectRelease();
    id v90 = (id)v129;
    unint64_t v104 = sub_100725EB0();
    os_log_type_t v105 = sub_1007266E0();
    if (os_log_type_enabled(v104, v105))
    {
      uint64_t v106 = swift_slowAlloc();
      int64_t v107 = (void *)swift_slowAlloc();
      v131[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v106 = 136315394;
      sub_10043E578(0xD000000000000038, 0x80000001008C3EB0, v131);
      sub_100726830();
      *(_WORD *)(v106 + 12) = 2112;
      id v108 = v90;
      sub_100726830();
      void *v107 = v90;

      _os_log_impl((void *)&_mh_execute_header, v104, v105, "%s: %@", (uint8_t *)v106, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    __int16 v109 = *(os_unfair_lock_s **)(v125 + v126);
    swift_retain();
    os_unfair_lock_unlock(v109 + 4);

    goto LABEL_79;
  }
  unint64_t v36 = v125 + OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_negotiators;
  objc_super v33 = v127 + 5;
  while (2)
  {
    uint64_t v46 = *(v33 - 1);
    unint64_t v48 = *v33;
    swift_beginAccess();
    sub_100441FD4(v46, v48);
    sub_100441FD4(v46, v48);
    uint64_t v32 = (uint64_t)(id)v129;
    unint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v40 = *(void **)v36;
    uint64_t v130 = *(void **)v36;
    *(void *)unint64_t v36 = 0x8000000000000000;
    unint64_t v52 = sub_1004D97A4(v46, v48);
    unint64_t v50 = v40[2];
    BOOL v96 = (v95 & 1) == 0;
    uint64_t v97 = v50 + v96;
    if (__OFADD__(v50, v96))
    {
      __break(1u);
LABEL_81:
      __break(1u);
      goto LABEL_82;
    }
    char v98 = v95;
    if (v40[3] >= v97)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        id v40 = v130;
        if ((v95 & 1) == 0) {
          goto LABEL_67;
        }
        goto LABEL_58;
      }
      sub_1004DA4C4();
      id v40 = v130;
      if (v98) {
        goto LABEL_58;
      }
LABEL_67:
      v40[(v52 >> 6) + 8] |= 1 << v52;
      uint64_t v101 = (uint64_t *)(v40[6] + 16 * v52);
      uint64_t *v101 = v46;
      v101[1] = v48;
      *(void *)(v40[7] + 8 * v52) = v32;
      uint64_t v102 = v40[2];
      BOOL v103 = __OFADD__(v102, 1);
      unint64_t v50 = v102 + 1;
      if (v103) {
        goto LABEL_81;
      }
      v40[2] = v50;
      sub_100441FD4(v46, v48);
LABEL_59:
      v33 += 2;
      *(void *)unint64_t v36 = v40;
      swift_bridgeObjectRelease();
      sub_100442248(v46, v48);
      swift_endAccess();
      sub_100442248(v46, v48);
      if (!--v31) {
        goto LABEL_71;
      }
      continue;
    }
    break;
  }
  sub_1004DA1BC(v97, isUniquelyReferenced_nonNull_native);
  unint64_t v99 = sub_1004D97A4(v46, v48);
  if ((v98 & 1) == (v100 & 1))
  {
    unint64_t v52 = v99;
    id v40 = v130;
    if ((v98 & 1) == 0) {
      goto LABEL_67;
    }
LABEL_58:
    uint64_t v93 = v40[7];
    uint64_t v94 = 8 * v52;

    *(void *)(v93 + v94) = v32;
    goto LABEL_59;
  }
  uint64_t result = sub_100726D40();
  __break(1u);
  return result;
}

uint64_t sub_1004D776C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[5] = a4;
  _OWORD v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return _swift_task_switch(sub_1004D7794, 0, 0);
}

uint64_t sub_1004D7794()
{
  uint64_t v14 = v0;
  unint64_t v1 = v0[5];
  unint64_t v2 = v0[3];
  os_log_type_t v3 = (void *)v0[4];
  uint64_t v4 = v0[2];
  v0[7] = OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_logger;
  if (sub_1004D641C(v4, v2, v3, v1))
  {
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
  else
  {
    os_log_type_t v7 = sub_100725EB0();
    os_log_type_t v8 = sub_1007266E0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136315138;
      *(void *)(v9 + 4) = sub_10043E578(0xD000000000000037, 0x80000001008C3CD0, &v13);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s: waiting for prekeys...", (uint8_t *)v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v10 = v0[6];
    uint64_t v11 = swift_task_alloc();
    v0[8] = v11;
    *(void *)(v11 + 16) = v10;
    uint64_t v12 = (void *)swift_task_alloc();
    v0[9] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1004D79BC;
    return withCheckedContinuation<A>(isolation:function:_:)();
  }
}

uint64_t sub_1004D79BC()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1004D7AD4, 0, 0);
}

uint64_t sub_1004D7AD4()
{
  uint64_t v13 = v0;
  uint64_t v1 = sub_100725EB0();
  os_log_type_t v2 = sub_1007266E0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    *(void *)(v3 + 4) = sub_10043E578(0xD000000000000037, 0x80000001008C3CD0, &v12);
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s: may have new prekeys, trying again...", (uint8_t *)v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (sub_1004D641C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40)))
  {
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  else
  {
    uint64_t v6 = sub_100725EB0();
    os_log_type_t v7 = sub_1007266E0();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 136315138;
      *(void *)(v8 + 4) = sub_10043E578(0xD000000000000037, 0x80000001008C3CD0, &v12);
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: waiting for prekeys...", (uint8_t *)v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v9 = *(void *)(v0 + 48);
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 64) = v10;
    *(void *)(v10 + 16) = v9;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_1004D79BC;
    return withCheckedContinuation<A>(isolation:function:_:)();
  }
}

uint64_t sub_1004D7DCC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A470D0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_lock;
  uint64_t v10 = *(os_unfair_lock_s **)(a2 + OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_lock);
  swift_retain();
  os_unfair_lock_lock(v10 + 4);
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  uint64_t v11 = (unint64_t *)(a2
                           + OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_continuationsForPreKeys);
  swift_beginAccess();
  unint64_t v12 = *v11;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v11 = v12;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    unint64_t v12 = sub_1004D93B4(0, *(void *)(v12 + 16) + 1, 1, v12);
    *uint64_t v11 = v12;
  }
  unint64_t v15 = *(void *)(v12 + 16);
  unint64_t v14 = *(void *)(v12 + 24);
  if (v15 >= v14 >> 1)
  {
    unint64_t v12 = sub_1004D93B4(v14 > 1, v15 + 1, 1, v12);
    *uint64_t v11 = v12;
  }
  *(void *)(v12 + 16) = v15 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v12+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(void *)(v5 + 72) * v15, v8, v4);
  swift_endAccess();
  uint64_t v16 = *(os_unfair_lock_s **)(a2 + v9);
  swift_retain();
  os_unfair_lock_unlock(v16 + 4);
  return swift_release();
}

uint64_t sub_1004D7FC4(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return _swift_task_switch(sub_1004D7FE8, 0, 0);
}

uint64_t sub_1004D7FE8()
{
  unint64_t v19 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_100725EB0();
  os_log_type_t v2 = sub_1007266E0();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = v0[5];
    uint64_t v17 = v0[4];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315394;
    v0[2] = sub_10043E578(0xD000000000000015, 0x80000001008C3D10, &v18);
    sub_100726830();
    *(_WORD *)(v4 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[3] = sub_10043E578(v17, v3, &v18);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%s: negotiator forGroup:%s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v5 = (void *)v0[6];
  uint64_t v6 = OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_metadataProvider;
  id v7 = [*(id *)((char *)v5+ OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_metadataProvider) localPushToken];
  v0[7] = v7;
  uint64_t v8 = *(void **)((char *)v5 + v6);
  swift_unknownObjectRetain();
  NSString v9 = sub_100726420();
  id v10 = [v8 remotePushTokensForGroup:v9];
  swift_unknownObjectRelease();

  sub_1004D962C();
  uint64_t v11 = sub_100726570();
  v0[8] = v11;

  uint64_t v16 = (uint64_t (*)(uint64_t, uint64_t, id, uint64_t))(*(void *)((swift_isaMask & *v5) + 0x110)
                                                              + **(int **)((swift_isaMask & *v5) + 0x110));
  unint64_t v12 = (void *)swift_task_alloc();
  v0[9] = v12;
  *unint64_t v12 = v0;
  v12[1] = sub_1004D833C;
  uint64_t v13 = v0[5];
  uint64_t v14 = v0[4];
  return v16(v14, v13, v7, v11);
}

uint64_t sub_1004D833C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1004D845C, 0, 0);
}

uint64_t sub_1004D845C()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 80);
  return v1(v2);
}

uint64_t sub_1004D863C(int a1, void *aBlock, void *a3)
{
  v3[2] = a3;
  v3[3] = _Block_copy(aBlock);
  uint64_t v5 = sub_100726430();
  uint64_t v7 = v6;
  v3[4] = v6;
  id v8 = a3;
  NSString v9 = (void *)swift_task_alloc();
  v3[5] = v9;
  void *v9 = v3;
  v9[1] = sub_1004D8728;
  v9[5] = v7;
  v9[6] = v8;
  v9[4] = v5;
  return _swift_task_switch(sub_1004D7FE8, 0, 0);
}

uint64_t sub_1004D8728(uint64_t a1)
{
  uint64_t v3 = *(void (***)(void, void))(*v1 + 24);
  uint64_t v4 = *(void **)(*v1 + 16);
  uint64_t v7 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  v3[2](v3, a1);
  _Block_release(v3);
  swift_unknownObjectRelease();
  uint64_t v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t sub_1004D8894(uint64_t a1, uint64_t a2, __SecKey *a3, unint64_t a4)
{
  unint64_t v4 = a4;
  if (!(a4 >> 62))
  {
    uint64_t v6 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v6) {
      goto LABEL_3;
    }
LABEL_16:
    id v10 = _swiftEmptyArrayStorage;
LABEL_17:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_100726BA0();
  uint64_t v6 = result;
  if (!result) {
    goto LABEL_16;
  }
LABEL_3:
  if (v6 >= 1)
  {
    uint64_t v8 = 0;
    unint64_t v9 = v4 & 0xC000000000000001;
    id v10 = _swiftEmptyArrayStorage;
    uint64_t v20 = a3;
    unint64_t v21 = v4;
    do
    {
      if (v9) {
        unint64_t v12 = (__SecKey *)sub_100726A10();
      }
      else {
        unint64_t v12 = (__SecKey *)*(id *)(v4 + 8 * v8 + 32);
      }
      uint64_t v13 = v12;
      uint64_t v14 = sub_1004D8A30(a1, a2, a3, v12);
      if (v15 >> 60 != 15)
      {
        uint64_t v16 = v14;
        unint64_t v17 = v15;
        sub_100441FD4(v14, v15);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v10 = sub_1004BE840(0, v10[2] + 1, 1, v10);
        }
        unint64_t v19 = v10[2];
        unint64_t v18 = v10[3];
        if (v19 >= v18 >> 1) {
          id v10 = sub_1004BE840((void *)(v18 > 1), v19 + 1, 1, v10);
        }
        v10[2] = v19 + 1;
        uint64_t v11 = &v10[2 * v19];
        v11[4] = v16;
        v11[5] = v17;
        sub_10044CE88(v16, v17);
        a3 = v20;
        unint64_t v4 = v21;
      }
      ++v8;
    }
    while (v6 != v8);
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004D8A30(uint64_t a1, uint64_t a2, __SecKey *a3, __SecKey *a4)
{
  uint64_t v6 = sub_100726470();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6, v8);
  id v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  CFErrorRef error = 0;
  CFDataRef v11 = SecKeyCopyExternalRepresentation(a3, &error);
  if (!v11
    || (CFDataRef v12 = v11,
        long long v43 = xmmword_100795A50,
        long long v45 = xmmword_100795A50,
        sub_100725B40(),
        v12,
        unint64_t v13 = *((void *)&v45 + 1),
        *((void *)&v45 + 1) >> 60 == 15))
  {
    CFErrorRef v14 = error;
    if (error)
    {
      unint64_t v15 = sub_100725EB0();
      os_log_type_t v16 = sub_1007266C0();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = swift_slowAlloc();
        *(void *)&long long v45 = swift_slowAlloc();
        *(_DWORD *)uint64_t v17 = 136315394;
        uint64_t v44 = sub_10043E578(0xD000000000000032, 0x80000001008C3E70, (uint64_t *)&v45);
        sub_100726830();
        *(_WORD *)(v17 + 12) = 2080;
        unint64_t v18 = v14;
        uint64_t v44 = (uint64_t)v18;
        type metadata accessor for CFError(0);
        sub_1004D974C();
        uint64_t v19 = sub_100726D50();
        unint64_t v21 = v20;

        uint64_t v44 = sub_10043E578(v19, v21, (uint64_t *)&v45);
        sub_100726830();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "%s: failed exporting local public key: %s", (uint8_t *)v17, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
    }
    return 0;
  }
  uint64_t v22 = v45;
  CFDataRef v23 = SecKeyCopyExternalRepresentation(a4, &error);
  if (v23)
  {
    CFDataRef v24 = v23;
    long long v45 = v43;
    sub_100725B40();

    unint64_t v25 = *((void *)&v45 + 1);
    if (*((void *)&v45 + 1) >> 60 != 15)
    {
      uint64_t v36 = v45;
      sub_100726460();
      uint64_t v37 = sub_100726440();
      unint64_t v39 = v38;
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      if (v39 >> 60 != 15)
      {
        long long v45 = xmmword_100794E40;
        sub_100725B70();
        sub_100725B70();
        sub_100725B70();
        sub_10044CE88(v37, v39);
        sub_10044CE88(v36, v25);
        sub_10044CE88(v22, v13);
        return v45;
      }
      unint64_t v35 = sub_100725EB0();
      os_log_type_t v40 = sub_1007266C0();
      if (os_log_type_enabled(v35, v40))
      {
        id v41 = (uint8_t *)swift_slowAlloc();
        *(void *)&long long v45 = swift_slowAlloc();
        *(_DWORD *)id v41 = 136315138;
        uint64_t v44 = sub_10043E578(0xD000000000000032, 0x80000001008C3E70, (uint64_t *)&v45);
        sub_100726830();
        _os_log_impl((void *)&_mh_execute_header, v35, v40, "%s: failed to convert sessionID to data", v41, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      sub_10044CE88(v36, v25);
      sub_10044CE88(v22, v13);
      goto LABEL_19;
    }
  }
  CFErrorRef v26 = error;
  if (error)
  {
    uint64_t v27 = sub_100725EB0();
    os_log_type_t v28 = sub_1007266C0();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      *(void *)&long long v45 = swift_slowAlloc();
      *(_DWORD *)uint64_t v29 = 136315394;
      uint64_t v44 = sub_10043E578(0xD000000000000032, 0x80000001008C3E70, (uint64_t *)&v45);
      sub_100726830();
      *(_WORD *)(v29 + 12) = 2080;
      *(void *)&long long v43 = v29 + 14;
      unint64_t v30 = v26;
      uint64_t v44 = (uint64_t)v30;
      type metadata accessor for CFError(0);
      uint64_t v31 = v22;
      sub_1004D974C();
      uint64_t v32 = sub_100726D50();
      unint64_t v34 = v33;

      uint64_t v44 = sub_10043E578(v32, v34, (uint64_t *)&v45);
      sub_100726830();
      uint64_t v22 = v31;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: failed exporting remote public key: %s", (uint8_t *)v29, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    unint64_t v35 = v26;
    sub_10044CE88(v22, v13);

LABEL_19:
    return 0;
  }
  sub_10044CE88(v22, v13);
  return 0;
}

uint64_t sub_1004D90C8()
{
  uint64_t v1 = sub_100431F80(&qword_100A470D0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_lock;
  uint64_t v7 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_lock);
  swift_retain();
  os_unfair_lock_lock(v7 + 4);
  swift_release();
  uint64_t v8 = (uint64_t *)(v0
                 + OBJC_IVAR____TtC17identityservicesd39IDSGlobalLinkP2PKeyNegotiatorController_continuationsForPreKeys);
  swift_beginAccess();
  uint64_t v9 = *v8;
  *uint64_t v8 = (uint64_t)_swiftEmptyArrayStorage;
  id v10 = *(os_unfair_lock_s **)(v0 + v6);
  swift_retain();
  os_unfair_lock_unlock(v10 + 4);
  swift_release();
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    CFErrorRef v14 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
    uint64_t v12 = v2 + 16;
    unint64_t v13 = v14;
    uint64_t v15 = v9 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    uint64_t v16 = *(void *)(v12 + 56);
    do
    {
      v13(v5, v15, v1);
      sub_1007265E0();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v5, v1);
      v15 += v16;
      --v11;
    }
    while (v11);
  }
  return swift_bridgeObjectRelease();
}

void *sub_1004D92A4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100431F80((uint64_t *)&unk_100A47238);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = _swiftEmptyArrayStorage;
      unint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004DA678(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1004D93B4(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    unint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100431F80((uint64_t *)&unk_100A47220);
  uint64_t v10 = *(void *)(sub_100431F80(&qword_100A470D0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_100726B80();
    __break(1u);
    return result;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_100431F80(&qword_100A470D0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1004DA870(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_1004D9624(uint64_t a1)
{
  return sub_1004D7DCC(a1, *(void *)(v1 + 16));
}

unint64_t sub_1004D962C()
{
  unint64_t result = qword_100A47A80;
  if (!qword_100A47A80)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100A47A80);
  }
  return result;
}

uint64_t sub_1004D966C()
{
  return type metadata accessor for IDSGlobalLinkP2PKeyNegotiatorController();
}

uint64_t sub_1004D9674()
{
  uint64_t result = sub_100725ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void type metadata accessor for CFError(uint64_t a1)
{
}

unint64_t sub_1004D974C()
{
  unint64_t result = qword_100A47168;
  if (!qword_100A47168)
  {
    type metadata accessor for CFError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A47168);
  }
  return result;
}

unint64_t sub_1004D97A4(uint64_t a1, unint64_t a2)
{
  sub_100726DD0();
  sub_100725B60();
  Swift::Int v4 = sub_100726E30();

  return sub_1004D981C(a1, a2, v4);
}

unint64_t sub_1004D981C(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = v3;
    unint64_t v8 = a2;
    uint64_t v10 = ~v5;
    unint64_t v80 = HIDWORD(a1);
    size_t v85 = HIDWORD(a1) - (int)a1;
    uint64_t v86 = ~v5;
    BOOL v11 = __OFSUB__(HIDWORD(a1), a1);
    BOOL v84 = v11;
    unint64_t v87 = a2 >> 62;
    uint64_t v82 = v3 + 64;
    uint64_t v83 = (int)a1;
    uint64_t v81 = a1 >> 32;
    uint64_t v78 = (a1 >> 32) - (int)a1;
    unint64_t v88 = a2 >> 62;
    size_t __n = BYTE6(a2);
    while (1)
    {
      unint64_t v12 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v6);
      uint64_t v14 = *v12;
      unint64_t v13 = v12[1];
      uint64_t v15 = 0;
      switch(v13 >> 62)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v14), v14))
          {
            __break(1u);
LABEL_121:
            __break(1u);
LABEL_122:
            __break(1u);
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
          }
          uint64_t v15 = HIDWORD(v14) - (int)v14;
LABEL_14:
          sub_100441FD4(v14, v13);
          break;
        case 2uLL:
          uint64_t v17 = *(void *)(v14 + 16);
          uint64_t v16 = *(void *)(v14 + 24);
          uint64_t v15 = v16 - v17;
          if (!__OFSUB__(v16, v17)) {
            goto LABEL_14;
          }
          goto LABEL_121;
        case 3uLL:
          break;
        default:
          uint64_t v15 = BYTE6(v13);
          break;
      }
      size_t v18 = __n;
      switch(v88)
      {
        case 1uLL:
          size_t v18 = v85;
          if (v84) {
            goto LABEL_122;
          }
          goto LABEL_19;
        case 2uLL:
          uint64_t v20 = *(void *)(a1 + 16);
          uint64_t v19 = *(void *)(a1 + 24);
          BOOL v21 = __OFSUB__(v19, v20);
          size_t v18 = v19 - v20;
          if (!v21) {
            goto LABEL_19;
          }
          goto LABEL_123;
        case 3uLL:
          if (v15) {
            goto LABEL_7;
          }
          goto LABEL_118;
        default:
LABEL_19:
          if (v15 == v18)
          {
            if (v15 < 1)
            {
LABEL_118:
              sub_100442248(v14, v13);
              return v6;
            }
            switch(v13 >> 62)
            {
              case 1uLL:
                if ((int)v14 > v14 >> 32) {
                  goto LABEL_124;
                }
                uint64_t v26 = sub_100725910();
                if (v26)
                {
                  uint64_t v27 = v26;
                  uint64_t v28 = sub_100725940();
                  if (__OFSUB__((int)v14, v28)) {
                    goto LABEL_126;
                  }
                  uint64_t v29 = (const void *)(v27 + (int)v14 - v28);
                }
                else
                {
                  uint64_t v29 = 0;
                }
                sub_100725930();
                uint64_t v10 = v86;
                if (!v87)
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v29) {
                    goto LABEL_154;
                  }
                  int v50 = memcmp(v29, __s1, __n);
LABEL_102:
                  sub_100442248(v14, v13);
                  uint64_t v4 = v82;
                  if (!v50) {
                    return v6;
                  }
                  break;
                }
                if (v87 == 1)
                {
                  if (v81 < v83) {
                    goto LABEL_135;
                  }
                  swift_retain();
                  uint64_t v46 = (char *)sub_100725910();
                  if (v46)
                  {
                    uint64_t v47 = sub_100725940();
                    if (__OFSUB__(v83, v47)) {
                      goto LABEL_142;
                    }
                    v46 += v83 - v47;
                  }
                  uint64_t v48 = sub_100725930();
                  size_t v49 = v78;
                  if (v48 < v78) {
                    size_t v49 = v48;
                  }
                  if (!v29) {
                    goto LABEL_147;
                  }
                  if (!v46) {
                    goto LABEL_148;
                  }
                  int v50 = memcmp(v29, v46, v49);
                  sub_100442248(a1, v8);
                  goto LABEL_102;
                }
                uint64_t v68 = *(void *)(a1 + 16);
                uint64_t v77 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                uint64_t v69 = sub_100725910();
                if (v69)
                {
                  uint64_t v70 = v69;
                  uint64_t v71 = sub_100725940();
                  if (__OFSUB__(v68, v71)) {
                    goto LABEL_141;
                  }
                  uint64_t v72 = (const void *)(v70 + v68 - v71);
                }
                else
                {
                  uint64_t v72 = 0;
                }
                if (__OFSUB__(v77, v68)) {
                  goto LABEL_136;
                }
                uint64_t v73 = sub_100725930();
                if (v73 >= v77 - v68) {
                  size_t v74 = v77 - v68;
                }
                else {
                  size_t v74 = v73;
                }
                if (!v29) {
                  goto LABEL_155;
                }
                unint64_t v8 = a2;
                if (!v72) {
                  goto LABEL_156;
                }
                int v45 = memcmp(v29, v72, v74);
LABEL_115:
                swift_release();
                swift_release();
                sub_100442248(v14, v13);
                uint64_t v4 = v82;
                uint64_t v10 = v86;
                if (!v45) {
                  return v6;
                }
                break;
              case 2uLL:
                uint64_t v30 = *(void *)(v14 + 16);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_100725910();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_100725940();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_125;
                  }
                  unint64_t v34 = (const void *)(v32 + v30 - v33);
                }
                else
                {
                  unint64_t v34 = 0;
                }
                sub_100725930();
                if (v87)
                {
                  if (v87 == 1)
                  {
                    if (v81 < v83) {
                      goto LABEL_129;
                    }
                    swift_retain();
                    id v41 = (char *)sub_100725910();
                    if (v41)
                    {
                      uint64_t v42 = sub_100725940();
                      if (__OFSUB__(v83, v42)) {
                        goto LABEL_140;
                      }
                      v41 += v83 - v42;
                    }
                    uint64_t v43 = sub_100725930();
                    size_t v44 = v78;
                    if (v43 < v78) {
                      size_t v44 = v43;
                    }
                    if (!v34) {
                      goto LABEL_145;
                    }
                    if (!v41) {
                      goto LABEL_146;
                    }
                    int v45 = memcmp(v34, v41, v44);
                    sub_100442248(a1, v8);
                  }
                  else
                  {
                    uint64_t v62 = *(void *)(a1 + 16);
                    uint64_t v76 = *(void *)(a1 + 24);
                    swift_retain();
                    swift_retain();
                    uint64_t v63 = (char *)sub_100725910();
                    if (v63)
                    {
                      uint64_t v64 = sub_100725940();
                      if (__OFSUB__(v62, v64)) {
                        goto LABEL_139;
                      }
                      v63 += v62 - v64;
                    }
                    BOOL v21 = __OFSUB__(v76, v62);
                    int64_t v65 = v76 - v62;
                    if (v21) {
                      goto LABEL_134;
                    }
                    uint64_t v66 = sub_100725930();
                    if (v66 >= v65) {
                      size_t v67 = v65;
                    }
                    else {
                      size_t v67 = v66;
                    }
                    if (!v34) {
                      goto LABEL_152;
                    }
                    unint64_t v8 = a2;
                    if (!v63) {
                      goto LABEL_153;
                    }
                    int v45 = memcmp(v34, v63, v67);
                    swift_release();
                    swift_release();
                  }
                }
                else
                {
                  LOWORD(__s1[0]) = a1;
                  BYTE2(__s1[0]) = BYTE2(a1);
                  BYTE3(__s1[0]) = BYTE3(a1);
                  BYTE4(__s1[0]) = v80;
                  BYTE5(__s1[0]) = BYTE5(a1);
                  BYTE6(__s1[0]) = BYTE6(a1);
                  HIBYTE(__s1[0]) = HIBYTE(a1);
                  LOWORD(__s1[1]) = v8;
                  BYTE2(__s1[1]) = BYTE2(v8);
                  BYTE3(__s1[1]) = BYTE3(v8);
                  BYTE4(__s1[1]) = BYTE4(v8);
                  BYTE5(__s1[1]) = BYTE5(v8);
                  if (!v34) {
                    goto LABEL_151;
                  }
                  int v45 = memcmp(v34, __s1, __n);
                }
                goto LABEL_115;
              case 3uLL:
                memset(__s1, 0, 14);
                if (!v87) {
                  goto LABEL_46;
                }
                if (v87 == 1)
                {
                  if (v81 < v83) {
                    goto LABEL_128;
                  }
                  swift_retain();
                  uint64_t v35 = sub_100725910();
                  if (!v35) {
                    goto LABEL_144;
                  }
                  uint64_t v23 = v35;
                  uint64_t v36 = sub_100725940();
                  uint64_t v25 = v83 - v36;
                  if (__OFSUB__(v83, v36)) {
                    goto LABEL_133;
                  }
LABEL_41:
                  uint64_t v37 = sub_100725930();
                  if (v37 >= v78) {
                    size_t v38 = v78;
                  }
                  else {
                    size_t v38 = v37;
                  }
                  int v39 = memcmp(__s1, (const void *)(v23 + v25), v38);
                  sub_100442248(a1, v8);
                  sub_100442248(v14, v13);
                  uint64_t v10 = v86;
                  if (!v39) {
                    return v6;
                  }
                }
                else
                {
                  uint64_t v57 = *(void *)(a1 + 16);
                  uint64_t v58 = *(void *)(a1 + 24);
                  swift_retain();
                  swift_retain();
                  unint64_t v53 = (char *)sub_100725910();
                  if (v53)
                  {
                    uint64_t v59 = sub_100725940();
                    if (__OFSUB__(v57, v59)) {
                      goto LABEL_138;
                    }
                    v53 += v57 - v59;
                  }
                  BOOL v21 = __OFSUB__(v58, v57);
                  int64_t v55 = v58 - v57;
                  if (v21) {
                    goto LABEL_131;
                  }
                  uint64_t v56 = sub_100725930();
                  if (!v53) {
                    goto LABEL_150;
                  }
LABEL_83:
                  if (v56 >= v55) {
                    size_t v60 = v55;
                  }
                  else {
                    size_t v60 = v56;
                  }
                  int v61 = memcmp(__s1, v53, v60);
                  swift_release();
                  swift_release();
                  sub_100442248(v14, v13);
                  unint64_t v8 = a2;
                  uint64_t v10 = v86;
                  if (!v61) {
                    return v6;
                  }
                }
                break;
              default:
                __s1[0] = v14;
                LOWORD(__s1[1]) = v13;
                BYTE2(__s1[1]) = BYTE2(v13);
                BYTE3(__s1[1]) = BYTE3(v13);
                BYTE4(__s1[1]) = BYTE4(v13);
                BYTE5(__s1[1]) = BYTE5(v13);
                if (!v87)
                {
LABEL_46:
                  __int16 __s2 = a1;
                  char v91 = BYTE2(a1);
                  char v92 = BYTE3(a1);
                  char v93 = v80;
                  char v94 = BYTE5(a1);
                  char v95 = BYTE6(a1);
                  char v96 = HIBYTE(a1);
                  __int16 v97 = v8;
                  char v98 = BYTE2(v8);
                  char v99 = BYTE3(v8);
                  char v100 = BYTE4(v8);
                  char v101 = BYTE5(v8);
                  int v40 = memcmp(__s1, &__s2, __n);
                  sub_100442248(v14, v13);
                  if (!v40) {
                    return v6;
                  }
                  break;
                }
                if (v87 == 1)
                {
                  if (v81 < v83) {
                    goto LABEL_127;
                  }
                  swift_retain();
                  uint64_t v22 = sub_100725910();
                  if (!v22)
                  {
                    sub_100725930();
                    __break(1u);
LABEL_144:
                    sub_100725930();
                    __break(1u);
LABEL_145:
                    __break(1u);
LABEL_146:
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
                    JUMPOUT(0x1004DA18CLL);
                  }
                  uint64_t v23 = v22;
                  uint64_t v24 = sub_100725940();
                  uint64_t v25 = v83 - v24;
                  if (__OFSUB__(v83, v24)) {
                    goto LABEL_132;
                  }
                  goto LABEL_41;
                }
                uint64_t v51 = *(void *)(a1 + 16);
                uint64_t v52 = *(void *)(a1 + 24);
                swift_retain();
                swift_retain();
                unint64_t v53 = (char *)sub_100725910();
                if (v53)
                {
                  uint64_t v54 = sub_100725940();
                  if (__OFSUB__(v51, v54)) {
                    goto LABEL_137;
                  }
                  v53 += v51 - v54;
                }
                BOOL v21 = __OFSUB__(v52, v51);
                int64_t v55 = v52 - v51;
                if (v21) {
                  goto LABEL_130;
                }
                uint64_t v56 = sub_100725930();
                if (!v53) {
                  goto LABEL_149;
                }
                goto LABEL_83;
            }
          }
          else
          {
LABEL_7:
            sub_100442248(v14, v13);
          }
          unint64_t v6 = (v6 + 1) & v10;
          if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          break;
      }
    }
  }
  return v6;
}

uint64_t sub_1004DA1BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A47230);
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v34 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v34 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v34 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v34 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = *(void **)(*(void *)(v5 + 56) + 8 * v21);
    long long v35 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v21);
    if ((a2 & 1) == 0)
    {
      sub_100441FD4(v35, *(void *)(*(void *)(v5 + 48) + 16 * v21 + 8));
      id v31 = v30;
    }
    sub_100726DD0();
    sub_100725B60();
    uint64_t result = sub_100726E30();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      long long v19 = v35;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      long long v19 = v35;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v18) = v19;
    *(void *)(*(void *)(v7 + 56) + 8 * v18) = v30;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  uint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
  if (v32 >= 64) {
    bzero(v23, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v32;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

id sub_1004DA4C4()
{
  unint64_t v1 = v0;
  sub_100431F80(&qword_100A47230);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 56) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 48) + v18);
    *(_OWORD *)(*(void *)(v4 + 48) + v18) = v19;
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
    sub_100441FD4(v19, *((unint64_t *)&v19 + 1));
    id result = v17;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1004DA678(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_1004DA76C()
{
  _Block_release(*(const void **)(v0 + 24));

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004DA7B4()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = (void *)v0[4];
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *unint64_t v5 = v1;
  v5[1] = sub_100462638;
  unint64_t v6 = (uint64_t (*)(int, void *, void *))((char *)&dword_100A47180 + dword_100A47180);
  return v6(v2, v3, v4);
}

uint64_t sub_1004DA870(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_100431F80(&qword_100A470D0) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

uint64_t sub_1004DA9CC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
  __chkstk_darwin(v4 - 8, v5);
  unint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  __chkstk_darwin(v8 - 8, v9);
  unint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
  __chkstk_darwin(v12 - 8, v13);
  unint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  __chkstk_darwin(v16, v17);
  long long v19 = (unsigned int *)((char *)&v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004DACE8(v2, (uint64_t)v19);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004DAD4C((uint64_t)v19, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet);
      uint64_t v20 = (uint64_t)sub_100451BBC(a1);
      unint64_t v21 = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet;
      uint64_t v22 = (uint64_t)v7;
      goto LABEL_8;
    case 2u:
      sub_1004DAD4C((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
      uint64_t v20 = (uint64_t)sub_10044DC84();
      unint64_t v21 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet;
      uint64_t v22 = (uint64_t)v15;
      goto LABEL_8;
    case 3u:
      uint64_t v23 = *((void *)v19 + 1);
      unint64_t v24 = *((void *)v19 + 2);
      uint64_t v25 = 0x10000000000;
      if (!*((unsigned char *)v19 + 5)) {
        uint64_t v25 = 0;
      }
      uint64_t v20 = (uint64_t)sub_100487230((uint64_t)a1, *v19 | ((unint64_t)*((unsigned __int8 *)v19 + 4) << 32) | v25, *((void *)v19 + 1), *((void *)v19 + 2));
      sub_100442248(v23, v24);
      return v20;
    default:
      sub_1004DAD4C((uint64_t)v19, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      uint64_t v20 = sub_100532260(a1);
      unint64_t v21 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet;
      uint64_t v22 = (uint64_t)v11;
LABEL_8:
      sub_1004DAE68(v22, (uint64_t (*)(void))v21);
      return v20;
  }
}

uint64_t type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer()
{
  uint64_t result = qword_100A51560;
  if (!qword_100A51560) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004DACE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004DAD4C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

BOOL sub_1004DADB4()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004DACE8(v0, (uint64_t)v4);
  BOOL v5 = swift_getEnumCaseMultiPayload() < 3;
  sub_1004DAE68((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
  return v5;
}

uint64_t sub_1004DAE68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1004DAEC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
  __chkstk_darwin(v2, v3);
  BOOL v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  __chkstk_darwin(v6, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004DACE8(v1, (uint64_t)v13);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_1004DAD4C((uint64_t)v13, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet);
    uint64_t v15 = *(void *)&v5[*(int *)(v2 + 28)];
    sub_1004DAE68((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet);
  }
  else if (EnumCaseMultiPayload)
  {
    sub_1004DAE68((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    return 0;
  }
  else
  {
    sub_1004DAD4C((uint64_t)v13, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
    uint64_t v15 = *(void *)&v9[*(int *)(v6 + 28)];
    sub_1004DAE68((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
  }
  return v15;
}

uint64_t sub_1004DB0C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
  __chkstk_darwin(v2 - 8, v3);
  BOOL v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  __chkstk_darwin(v14, v15);
  uint64_t v17 = (unsigned int *)((char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1004DACE8(v1, (uint64_t)v17);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004DAD4C((uint64_t)v17, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet);
      uint64_t v18 = sub_100451758();
      long long v19 = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet;
      uint64_t v20 = (uint64_t)v9;
      goto LABEL_8;
    case 2u:
      sub_1004DAD4C((uint64_t)v17, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
      uint64_t v18 = sub_10044DB9C();
      long long v19 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet;
      uint64_t v20 = (uint64_t)v5;
      goto LABEL_8;
    case 3u:
      uint64_t v21 = *((void *)v17 + 1);
      unint64_t v22 = *((void *)v17 + 2);
      uint64_t v23 = 0x10000000000;
      if (!*((unsigned char *)v17 + 5)) {
        uint64_t v23 = 0;
      }
      uint64_t v18 = sub_100487164(*v17 | ((unint64_t)*((unsigned __int8 *)v17 + 4) << 32) | v23, *((void *)v17 + 1), *((void *)v17 + 2));
      sub_100442248(v21, v22);
      return v18;
    default:
      sub_1004DAD4C((uint64_t)v17, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      uint64_t v18 = sub_100531BA4();
      long long v19 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet;
      uint64_t v20 = (uint64_t)v13;
LABEL_8:
      sub_1004DAE68(v20, (uint64_t (*)(void))v19);
      return v18;
  }
}

uint64_t sub_1004DB388()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
  __chkstk_darwin(v5, v6);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  __chkstk_darwin(v9, v10);
  uint64_t v12 = (char *)v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  __chkstk_darwin(v13, v14);
  uint64_t v16 = (char *)v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004DACE8(v0, (uint64_t)v16);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004DAD4C((uint64_t)v16, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet);
      sub_100726DE0(1uLL);
      sub_1004DBD38(&qword_100A44F60, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet);
      sub_1007263E0();
      uint64_t v17 = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet;
      uint64_t v18 = (uint64_t)v8;
      return sub_1004DAE68(v18, (uint64_t (*)(void))v17);
    case 2u:
      sub_1004DAD4C((uint64_t)v16, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
      sub_100726DE0(2uLL);
      sub_1004DBD38(&qword_100A44E18, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
      sub_1007263E0();
      uint64_t v17 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet;
      uint64_t v18 = (uint64_t)v4;
      return sub_1004DAE68(v18, (uint64_t (*)(void))v17);
    case 3u:
      int v19 = *(_DWORD *)v16;
      char v20 = v16[4];
      char v21 = v16[5];
      uint64_t v22 = *((void *)v16 + 1);
      unint64_t v23 = *((void *)v16 + 2);
      sub_100726DE0(3uLL);
      void v25[2] = v19;
      char v26 = v20;
      char v27 = v21;
      uint64_t v28 = v22;
      unint64_t v29 = v23;
      sub_100487B78();
      sub_1007263E0();
      return sub_100442248(v22, v23);
    default:
      sub_1004DAD4C((uint64_t)v16, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      sub_100726DE0(0);
      sub_1004DBD38(&qword_100A47250, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
      sub_1007263E0();
      uint64_t v17 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet;
      uint64_t v18 = (uint64_t)v12;
      return sub_1004DAE68(v18, (uint64_t (*)(void))v17);
  }
}

Swift::Int sub_1004DB754()
{
  return sub_100726E30();
}

Swift::Int sub_1004DB798()
{
  return sub_100726E30();
}

uint64_t sub_1004DB7DC(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = a2;
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v48 = (unsigned int *)((char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (unsigned int *)((char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  __chkstk_darwin(v10 - 8, v11);
  uint64_t v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v16 = __chkstk_darwin(v14, v15);
  uint64_t v18 = (unsigned int *)((char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = __chkstk_darwin(v16, v19);
  uint64_t v22 = (unsigned int *)((char *)&v48 - v21);
  uint64_t v24 = __chkstk_darwin(v20, v23);
  char v26 = (unsigned int *)((char *)&v48 - v25);
  __chkstk_darwin(v24, v27);
  unint64_t v29 = (char *)&v48 - v28;
  uint64_t v30 = sub_100431F80((uint64_t *)&unk_100A472F0);
  uint64_t v32 = __chkstk_darwin(v30 - 8, v31);
  uint64_t v34 = (char *)&v48 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v35 = &v34[*(int *)(v32 + 56)];
  sub_1004DACE8(a1, (uint64_t)v34);
  sub_1004DACE8(v49, (uint64_t)v35);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1004DACE8((uint64_t)v34, (uint64_t)v26);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_1004DAD4C((uint64_t)v35, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet);
        char v36 = sub_100452AC4(v26, v9);
        sub_1004DAE68((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet);
        uint64_t v37 = (uint64_t)v26;
        size_t v38 = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet;
        goto LABEL_21;
      }
      sub_1004DAE68((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet);
      goto LABEL_18;
    case 2u:
      sub_1004DACE8((uint64_t)v34, (uint64_t)v22);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        int v39 = v48;
        sub_1004DAD4C((uint64_t)v35, (uint64_t)v48, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
        char v36 = sub_10044E8F0(v22, v39);
        int v40 = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet;
        sub_1004DAE68((uint64_t)v39, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
        uint64_t v37 = (uint64_t)v22;
        goto LABEL_20;
      }
      sub_1004DAE68((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet);
      goto LABEL_18;
    case 3u:
      sub_1004DACE8((uint64_t)v34, (uint64_t)v18);
      uint64_t v41 = *((void *)v18 + 1);
      unint64_t v42 = *((void *)v18 + 2);
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        sub_100442248(v41, v42);
        goto LABEL_18;
      }
      uint64_t v43 = *((void *)v35 + 1);
      unint64_t v44 = *((void *)v35 + 2);
      uint64_t v45 = 0x10000000000;
      if (*((unsigned char *)v18 + 5)) {
        uint64_t v46 = 0x10000000000;
      }
      else {
        uint64_t v46 = 0;
      }
      if (!v35[5]) {
        uint64_t v45 = 0;
      }
      char v36 = sub_100487358(v46 | *v18 | ((unint64_t)*((unsigned __int8 *)v18 + 4) << 32), v41, v42, *(unsigned int *)v35 | ((unint64_t)v35[4] << 32) | v45, *((void *)v35 + 1), *((void *)v35 + 2));
      sub_100442248(v43, v44);
      sub_100442248(v41, v42);
      goto LABEL_22;
    default:
      sub_1004DACE8((uint64_t)v34, (uint64_t)v29);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1004DAE68((uint64_t)v29, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
LABEL_18:
        sub_1004DD294((uint64_t)v34);
        char v36 = 0;
      }
      else
      {
        sub_1004DAD4C((uint64_t)v35, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        char v36 = sub_10053384C(v29, v13);
        int v40 = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet;
        sub_1004DAE68((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet);
        uint64_t v37 = (uint64_t)v29;
LABEL_20:
        size_t v38 = v40;
LABEL_21:
        sub_1004DAE68(v37, (uint64_t (*)(void))v38);
LABEL_22:
        sub_1004DAE68((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
      }
      return v36 & 1;
  }
}

uint64_t sub_1004DBCF0()
{
  return sub_1004DBD38((unint64_t *)&unk_100A45430, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
}

uint64_t sub_1004DBD38(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004DBD80(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *(void *)a1 = *a2;
    a1 = v20 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
        uint64_t v37 = a2[1];
        unint64_t v38 = a2[2];
        sub_100441FD4(v37, v38);
        *(void *)(a1 + 8) = v37;
        *(void *)(a1 + 16) = v38;
        int v39 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
        uint64_t v40 = v39[6];
        uint64_t v41 = (void *)(a1 + v40);
        uint64_t v42 = (uint64_t)a2 + v40;
        uint64_t v43 = *(void **)((char *)a2 + v40);
        unint64_t v44 = *(void **)((char *)a2 + v40 + 8);
        *uint64_t v41 = v43;
        v41[1] = v44;
        uint64_t v45 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
        uint64_t v46 = v45[6];
        uint64_t v64 = v42 + v46;
        uint64_t v66 = (char *)v41 + v46;
        uint64_t v47 = sub_100725CC0();
        int v61 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16);
        id v48 = v43;
        id v49 = v44;
        v61(v66, v64, v47);
        uint64_t v50 = v45[7];
        uint64_t v51 = *(void **)(v42 + v50);
        *(void *)((char *)v41 + v50) = v51;
        *((unsigned char *)v41 + v45[8]) = *(unsigned char *)(v42 + v45[8]);
        *(void *)(a1 + v39[7]) = *(uint64_t *)((char *)a2 + v39[7]);
        uint64_t v52 = v39[8];
        uint64_t v53 = a1 + v52;
        uint64_t v54 = (uint64_t)a2 + v52;
        uint64_t v55 = sub_100725D30();
        uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 16);
        id v57 = v51;
        v56(v53, v54, v55);
        break;
      case 2u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
        uint64_t v21 = *(int *)(type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet() + 20);
        uint64_t v22 = (void *)(a1 + v21);
        uint64_t v23 = (uint64_t)a2 + v21;
        uint64_t v24 = *(void **)((char *)a2 + v21);
        uint64_t v25 = *(void **)((char *)a2 + v21 + 8);
        *uint64_t v22 = v24;
        v22[1] = v25;
        char v26 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
        uint64_t v27 = v26[6];
        uint64_t v63 = v23 + v27;
        int64_t v65 = (char *)v22 + v27;
        uint64_t v28 = sub_100725CC0();
        unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
        id v30 = v24;
        id v31 = v25;
        v29(v65, v63, v28);
        uint64_t v32 = v26[7];
        uint64_t v33 = *(void **)(v23 + v32);
        *(void *)((char *)v22 + v32) = v33;
        *((unsigned char *)v22 + v26[8]) = *(unsigned char *)(v23 + v26[8]);
        id v34 = v33;
        break;
      case 3u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
        *(unsigned char *)(a1 + 5) = *((unsigned char *)a2 + 5);
        uint64_t v36 = a2[1];
        unint64_t v35 = a2[2];
        sub_100441FD4(v36, v35);
        *(void *)(a1 + 8) = v36;
        *(void *)(a1 + 16) = v35;
        break;
      default:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
        *(void *)(a1 + 8) = a2[1];
        uint64_t v6 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
        uint64_t v7 = v6[6];
        uint64_t v8 = (void *)(a1 + v7);
        uint64_t v9 = (uint64_t)a2 + v7;
        uint64_t v11 = *(void **)((char *)a2 + v7);
        uint64_t v10 = *(void **)((char *)a2 + v7 + 8);
        *uint64_t v8 = v11;
        v8[1] = v10;
        uint64_t v12 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
        uint64_t v13 = v12[6];
        uint64_t v60 = v9 + v13;
        uint64_t v62 = (char *)v8 + v13;
        uint64_t v14 = sub_100725CC0();
        uint64_t v59 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        id v15 = v11;
        id v16 = v10;
        v59(v62, v60, v14);
        uint64_t v17 = v12[7];
        uint64_t v18 = *(void **)(v9 + v17);
        *(void *)((char *)v8 + v17) = v18;
        *((unsigned char *)v8 + v12[8]) = *(unsigned char *)(v9 + v12[8]);
        *(void *)(a1 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
        *(void *)(a1 + v6[8]) = *(uint64_t *)((char *)a2 + v6[8]);
        id v19 = v18;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1004DC170(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      uint64_t v2 = *(int *)(type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet() + 24);
      goto LABEL_7;
    case 1u:
      sub_100442248(*(void *)(a1 + 8), *(void *)(a1 + 16));
      uint64_t v3 = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
      uint64_t v4 = (id *)(a1 + *(int *)(v3 + 24));

      uint64_t v5 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
      uint64_t v6 = (char *)v4 + *(int *)(v5 + 24);
      uint64_t v7 = sub_100725CC0();
      (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

      uint64_t v8 = a1 + *(int *)(v3 + 32);
      uint64_t v9 = sub_100725D30();
      uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
      v10(v8, v9);
      break;
    case 2u:
      uint64_t v2 = *(int *)(type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet() + 20);
LABEL_7:
      uint64_t v11 = a1 + v2;

      uint64_t v12 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
      uint64_t v13 = v11 + *(int *)(v12 + 24);
      uint64_t v14 = sub_100725CC0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      id v15 = *(void **)(v11 + *(int *)(v12 + 28));

      break;
    case 3u:
      uint64_t v16 = *(void *)(a1 + 8);
      unint64_t v17 = *(void *)(a1 + 16);
      sub_100442248(v16, v17);
      break;
    default:
      return;
  }
}

uint64_t sub_1004DC39C(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
      uint64_t v35 = *(void *)(a2 + 8);
      unint64_t v36 = *(void *)(a2 + 16);
      sub_100441FD4(v35, v36);
      *(void *)(a1 + 8) = v35;
      *(void *)(a1 + 16) = v36;
      uint64_t v37 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
      uint64_t v38 = v37[6];
      int v39 = (void *)(a1 + v38);
      uint64_t v40 = a2 + v38;
      uint64_t v42 = *(void **)(a2 + v38);
      uint64_t v41 = *(void **)(a2 + v38 + 8);
      *int v39 = v42;
      v39[1] = v41;
      uint64_t v43 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
      uint64_t v44 = v43[6];
      uint64_t v60 = v40 + v44;
      uint64_t v63 = (char *)v39 + v44;
      uint64_t v45 = sub_100725CC0();
      uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16);
      id v46 = v42;
      id v47 = v41;
      v58(v63, v60, v45);
      uint64_t v48 = v43[7];
      id v49 = *(void **)(v40 + v48);
      *(void *)((char *)v39 + v48) = v49;
      *((unsigned char *)v39 + v43[8]) = *(unsigned char *)(v40 + v43[8]);
      *(void *)(a1 + v37[7]) = *(void *)(a2 + v37[7]);
      uint64_t v50 = v37[8];
      uint64_t v51 = a1 + v50;
      uint64_t v52 = a2 + v50;
      uint64_t v53 = sub_100725D30();
      uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16);
      id v55 = v49;
      v54(v51, v52, v53);
      break;
    case 2u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
      uint64_t v18 = *(int *)(type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet() + 20);
      id v19 = (void *)(a1 + v18);
      uint64_t v20 = a2 + v18;
      uint64_t v21 = *(void **)(a2 + v18);
      uint64_t v22 = *(void **)(a2 + v18 + 8);
      *id v19 = v21;
      v19[1] = v22;
      uint64_t v23 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
      uint64_t v24 = v23[6];
      uint64_t v62 = (char *)v19 + v24;
      uint64_t v25 = v20 + v24;
      uint64_t v26 = sub_100725CC0();
      uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
      id v28 = v21;
      id v29 = v22;
      v27(v62, v25, v26);
      uint64_t v30 = v23[7];
      id v31 = *(void **)(v20 + v30);
      *(void *)((char *)v19 + v30) = v31;
      *((unsigned char *)v19 + v23[8]) = *(unsigned char *)(v20 + v23[8]);
      id v32 = v31;
      break;
    case 3u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
      *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
      uint64_t v34 = *(void *)(a2 + 8);
      unint64_t v33 = *(void *)(a2 + 16);
      sub_100441FD4(v34, v33);
      *(void *)(a1 + 8) = v34;
      *(void *)(a1 + 16) = v33;
      break;
    default:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v4 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
      uint64_t v5 = v4[6];
      uint64_t v6 = (void *)(a1 + v5);
      uint64_t v7 = a2 + v5;
      uint64_t v8 = *(void **)(a2 + v5);
      uint64_t v9 = *(void **)(a2 + v5 + 8);
      *uint64_t v6 = v8;
      v6[1] = v9;
      uint64_t v10 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
      uint64_t v11 = v10[6];
      uint64_t v59 = v7 + v11;
      int v61 = (char *)v6 + v11;
      uint64_t v12 = sub_100725CC0();
      id v57 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16);
      swift_bridgeObjectRetain();
      id v13 = v8;
      id v14 = v9;
      v57(v61, v59, v12);
      uint64_t v15 = v10[7];
      uint64_t v16 = *(void **)(v7 + v15);
      *(void *)((char *)v6 + v15) = v16;
      *((unsigned char *)v6 + v10[8]) = *(unsigned char *)(v7 + v10[8]);
      *(void *)(a1 + v4[7]) = *(void *)(a2 + v4[7]);
      *(void *)(a1 + v4[8]) = *(void *)(a2 + v4[8]);
      id v17 = v16;
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t sub_1004DC750(uint64_t a1, int *a2)
{
  if ((int *)a1 != a2)
  {
    sub_1004DAE68(a1, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        int v19 = *a2;
        *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
        *(_DWORD *)a1 = v19;
        uint64_t v20 = *((void *)a2 + 1);
        unint64_t v21 = *((void *)a2 + 2);
        sub_100441FD4(v20, v21);
        *(void *)(a1 + 8) = v20;
        *(void *)(a1 + 16) = v21;
        uint64_t v22 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
        uint64_t v23 = v22[6];
        uint64_t v24 = (void *)(a1 + v23);
        uint64_t v25 = (uint64_t)a2 + v23;
        uint64_t v26 = *(void **)((char *)a2 + v23);
        *uint64_t v24 = v26;
        uint64_t v27 = *(void **)((char *)a2 + v23 + 8);
        v24[1] = v27;
        id v28 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
        uint64_t v29 = v28[6];
        uint64_t v64 = v25 + v29;
        uint64_t v66 = (char *)v24 + v29;
        uint64_t v30 = sub_100725CC0();
        uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16);
        id v31 = v26;
        id v32 = v27;
        v62(v66, v64, v30);
        uint64_t v33 = v28[7];
        uint64_t v34 = *(void **)(v25 + v33);
        *(void *)((char *)v24 + v33) = v34;
        *((unsigned char *)v24 + v28[8]) = *(unsigned char *)(v25 + v28[8]);
        *(void *)(a1 + v22[7]) = *(void *)((char *)a2 + v22[7]);
        uint64_t v35 = v22[8];
        uint64_t v36 = a1 + v35;
        uint64_t v37 = (uint64_t)a2 + v35;
        uint64_t v38 = sub_100725D30();
        int v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16);
        id v40 = v34;
        v39(v36, v37, v38);
        break;
      case 2u:
        int v41 = *a2;
        *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
        *(_DWORD *)a1 = v41;
        uint64_t v42 = *(int *)(type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet() + 20);
        uint64_t v43 = (void *)(a1 + v42);
        uint64_t v44 = (uint64_t)a2 + v42;
        uint64_t v45 = *(void **)((char *)a2 + v42);
        *uint64_t v43 = v45;
        id v46 = *(void **)((char *)a2 + v42 + 8);
        v43[1] = v46;
        id v47 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
        uint64_t v48 = v47[6];
        size_t v67 = (char *)v43 + v48;
        uint64_t v49 = v44 + v48;
        uint64_t v50 = sub_100725CC0();
        uint64_t v51 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 16);
        id v52 = v45;
        id v53 = v46;
        v51(v67, v49, v50);
        uint64_t v54 = v47[7];
        id v55 = *(void **)(v44 + v54);
        *(void *)((char *)v43 + v54) = v55;
        *((unsigned char *)v43 + v47[8]) = *(unsigned char *)(v44 + v47[8]);
        id v56 = v55;
        break;
      case 3u:
        int v57 = *a2;
        *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
        *(_DWORD *)a1 = v57;
        *(unsigned char *)(a1 + 5) = *((unsigned char *)a2 + 5);
        uint64_t v59 = *((void *)a2 + 1);
        unint64_t v58 = *((void *)a2 + 2);
        sub_100441FD4(v59, v58);
        *(void *)(a1 + 8) = v59;
        *(void *)(a1 + 16) = v58;
        break;
      default:
        int v4 = *a2;
        *(unsigned char *)(a1 + 4) = *((unsigned char *)a2 + 4);
        *(_DWORD *)a1 = v4;
        *(void *)(a1 + 8) = *((void *)a2 + 1);
        uint64_t v5 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
        uint64_t v6 = v5[6];
        uint64_t v7 = (void *)(a1 + v6);
        uint64_t v8 = (uint64_t)a2 + v6;
        uint64_t v9 = *(void **)((char *)a2 + v6);
        *uint64_t v7 = v9;
        uint64_t v10 = *(void **)((char *)a2 + v6 + 8);
        v7[1] = v10;
        uint64_t v11 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
        uint64_t v12 = v11[6];
        uint64_t v63 = v8 + v12;
        int64_t v65 = (char *)v7 + v12;
        uint64_t v13 = sub_100725CC0();
        int v61 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
        swift_bridgeObjectRetain();
        id v14 = v9;
        id v15 = v10;
        v61(v65, v63, v13);
        uint64_t v16 = v11[7];
        id v17 = *(void **)(v8 + v16);
        *(void *)((char *)v7 + v16) = v17;
        *((unsigned char *)v7 + v11[8]) = *(unsigned char *)(v8 + v11[8]);
        *(void *)(a1 + v5[7]) = *(void *)((char *)a2 + v5[7]);
        *(void *)(a1 + v5[8]) = *(void *)((char *)a2 + v5[8]);
        id v18 = v17;
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1004DCB40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
    uint64_t v16 = *(int *)(type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet() + 20);
    uint64_t v17 = a1 + v16;
    uint64_t v18 = a2 + v16;
    *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
    int v19 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    uint64_t v20 = v19[6];
    uint64_t v21 = v17 + v20;
    uint64_t v22 = v18 + v20;
    uint64_t v23 = sub_100725CC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
    *(void *)(v17 + v19[7]) = *(void *)(v18 + v19[7]);
    *(unsigned char *)(v17 + v19[8]) = *(unsigned char *)(v18 + v19[8]);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
    *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
    uint64_t v24 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
    uint64_t v25 = v24[6];
    uint64_t v26 = a1 + v25;
    uint64_t v27 = a2 + v25;
    *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
    id v28 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    uint64_t v29 = v28[6];
    uint64_t v30 = v26 + v29;
    uint64_t v31 = v27 + v29;
    uint64_t v32 = sub_100725CC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
    *(void *)(v26 + v28[7]) = *(void *)(v27 + v28[7]);
    *(unsigned char *)(v26 + v28[8]) = *(unsigned char *)(v27 + v28[8]);
    *(void *)(a1 + v24[7]) = *(void *)(a2 + v24[7]);
    uint64_t v33 = v24[8];
    uint64_t v34 = a1 + v33;
    uint64_t v35 = a2 + v33;
    uint64_t v36 = sub_100725D30();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
    swift_storeEnumTagMultiPayload();
  }
  else if (EnumCaseMultiPayload)
  {
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
    *(void *)(a1 + 8) = *(void *)(a2 + 8);
    uint64_t v7 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
    uint64_t v8 = v7[6];
    uint64_t v9 = a1 + v8;
    uint64_t v10 = a2 + v8;
    *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
    uint64_t v11 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    uint64_t v12 = v11[6];
    uint64_t v13 = v9 + v12;
    uint64_t v14 = v10 + v12;
    uint64_t v15 = sub_100725CC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
    *(void *)(v9 + v11[7]) = *(void *)(v10 + v11[7]);
    *(unsigned char *)(v9 + v11[8]) = *(unsigned char *)(v10 + v11[8]);
    *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
    *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1004DCE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1004DAE68(a1, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
      uint64_t v16 = *(int *)(type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet() + 20);
      uint64_t v17 = a1 + v16;
      uint64_t v18 = a2 + v16;
      *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
      int v19 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
      uint64_t v20 = v19[6];
      uint64_t v21 = v17 + v20;
      uint64_t v22 = v18 + v20;
      uint64_t v23 = sub_100725CC0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 32))(v21, v22, v23);
      *(void *)(v17 + v19[7]) = *(void *)(v18 + v19[7]);
      *(unsigned char *)(v17 + v19[8]) = *(unsigned char *)(v18 + v19[8]);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      uint64_t v24 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
      uint64_t v25 = v24[6];
      uint64_t v26 = a1 + v25;
      uint64_t v27 = a2 + v25;
      *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
      id v28 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
      uint64_t v29 = v28[6];
      uint64_t v30 = v26 + v29;
      uint64_t v31 = v27 + v29;
      uint64_t v32 = sub_100725CC0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
      *(void *)(v26 + v28[7]) = *(void *)(v27 + v28[7]);
      *(unsigned char *)(v26 + v28[8]) = *(unsigned char *)(v27 + v28[8]);
      *(void *)(a1 + v24[7]) = *(void *)(a2 + v24[7]);
      uint64_t v33 = v24[8];
      uint64_t v34 = a1 + v33;
      uint64_t v35 = a2 + v33;
      uint64_t v36 = sub_100725D30();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 32))(v34, v35, v36);
      swift_storeEnumTagMultiPayload();
    }
    else if (EnumCaseMultiPayload)
    {
      memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      uint64_t v7 = (int *)type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
      uint64_t v8 = v7[6];
      uint64_t v9 = a1 + v8;
      uint64_t v10 = a2 + v8;
      *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
      uint64_t v11 = (int *)type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
      uint64_t v12 = v11[6];
      uint64_t v13 = v9 + v12;
      uint64_t v14 = v10 + v12;
      uint64_t v15 = sub_100725CC0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(void *)(v9 + v11[7]) = *(void *)(v10 + v11[7]);
      *(unsigned char *)(v9 + v11[8]) = *(unsigned char *)(v10 + v11[8]);
      *(void *)(a1 + v7[7]) = *(void *)(a2 + v7[7]);
      *(void *)(a1 + v7[8]) = *(void *)(a2 + v7[8]);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1004DD18C()
{
  uint64_t result = type metadata accessor for IDSGroupEncryptionDesiredKeyMaterialSet();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for IDSGroupEncryptionDesiredKeyValueMaterialSet();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for IDSGroupEncryptionDesiredPreKeyMaterialSet();
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1004DD294(uint64_t a1)
{
  uint64_t v2 = sub_100431F80((uint64_t *)&unk_100A472F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1004DD2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if ((a4 & 0xC000000000000001) != 0) {
    uint64_t v4 = sub_100726920();
  }
  else {
    uint64_t v4 = *(void *)(a4 + 16);
  }
  return v4 > 0;
}

BOOL sub_1004DD330(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((a3 & 0xC000000000000001) != 0) {
    uint64_t v3 = sub_100726920();
  }
  else {
    uint64_t v3 = *(void *)(a3 + 16);
  }
  return v3 > 0;
}

uint64_t sub_1004DD36C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1007269F0(76);
  v15._object = (void *)0x80000001008C3EF0;
  v15._countAndFlagsBits = 0xD000000000000022;
  sub_1007264C0(v15);
  if ((a3 & 0xC000000000000001) != 0) {
    uint64_t v6 = sub_100726920();
  }
  else {
    uint64_t v6 = *(void *)(a3 + 16);
  }
  BOOL v7 = v6 <= 0;
  if (v6 <= 0) {
    v8._countAndFlagsBits = 0x65736C6166;
  }
  else {
    v8._countAndFlagsBits = 1702195828;
  }
  if (v7) {
    uint64_t v9 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v9 = (void *)0xE400000000000000;
  }
  v8._object = v9;
  sub_1007264C0(v8);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x616572636564202CLL;
  v16._object = (void *)0xED0000203A646573;
  sub_1007264C0(v16);
  if ((a4 & 0xC000000000000001) != 0) {
    uint64_t v10 = sub_100726920();
  }
  else {
    uint64_t v10 = *(void *)(a4 + 16);
  }
  BOOL v11 = v10 <= 0;
  if (v10 <= 0) {
    v12._countAndFlagsBits = 0x65736C6166;
  }
  else {
    v12._countAndFlagsBits = 1702195828;
  }
  if (v11) {
    uint64_t v13 = (void *)0xE500000000000000;
  }
  else {
    uint64_t v13 = (void *)0xE400000000000000;
  }
  v12._object = v13;
  sub_1007264C0(v12);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = 0x3A6465646461202CLL;
  v17._object = (void *)0xE900000000000020;
  sub_1007264C0(v17);
  type metadata accessor for IDSGroupEncryptionControllerMember();
  sub_1004DD58C();
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = sub_100726650();
  sub_1007264C0(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 0x65766F6D6572202CLL;
  v19._object = (void *)0xEB00000000203A64;
  sub_1007264C0(v19);
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = sub_100726650();
  sub_1007264C0(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 41;
  v21._object = (void *)0xE100000000000000;
  sub_1007264C0(v21);
  return 0;
}

unint64_t sub_1004DD58C()
{
  unint64_t result = qword_100A44A78;
  if (!qword_100A44A78)
  {
    type metadata accessor for IDSGroupEncryptionControllerMember();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A44A78);
  }
  return result;
}

uint64_t sub_1004DD5E4()
{
  return sub_1004DD36C(*v0, v0[1], v0[2], v0[3]);
}

void *sub_1004DD5F0(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRetain();
  sub_1004DD6B4(a2, a1);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1004DD6B4(a1, a2);
  swift_bridgeObjectRetain();
  uint64_t v5 = swift_bridgeObjectRetain();
  sub_1004DEF80(v5, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_1004DEF80(v6, a2);
  swift_bridgeObjectRelease();
  return v4;
}

void *sub_1004DD6B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_100726920();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_1004DD90C(a1);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= sub_100726920() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100726920();
  Swift::Int v7 = sub_1004DDBD0(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_1004DDDB8(a1, v2);
}

uint64_t sub_1004DD7BC(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_100726960();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v6 = sub_1007267E0(*(void *)(a2 + 40)),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  type metadata accessor for IDSGroupEncryptionControllerMember();
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_1007267F0();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_1007267F0();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

void sub_1004DD90C(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_100726920()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1007268E0();
      type metadata accessor for IDSGroupEncryptionControllerMember();
      sub_1004DD58C();
      sub_100726680();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v10 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v12 = v4;
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v12 = v4 + 1;
        if (!v15)
        {
          uint64_t v12 = v4 + 2;
          if (v4 + 2 >= v9) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 3;
            if (v4 + 3 >= v9) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v9) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v18 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v4 + 5;
                if (v4 + 5 >= v9) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v18 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_100462C48();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_36;
      }
      while (1)
      {
        Swift::String v17 = (void *)sub_1004DE2C8(v13);

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (sub_100726950())
        {
          type metadata accessor for IDSGroupEncryptionControllerMember();
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v19;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

Swift::Int sub_1004DDBD0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_100431F80(&qword_100A44D48);
    uint64_t v2 = sub_1007269D0();
    uint64_t v14 = v2;
    sub_1007268E0();
    if (sub_100726950())
    {
      type metadata accessor for IDSGroupEncryptionControllerMember();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_10043EBD0();
          uint64_t v2 = v14;
        }
        Swift::Int result = sub_1007267E0(*(void *)(v2 + 40));
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_100726950());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return v2;
}

void *sub_1004DDDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1007268E0();
    type metadata accessor for IDSGroupEncryptionControllerMember();
    sub_1004DD58C();
    sub_100726680();
    uint64_t v3 = v47;
    uint64_t v4 = v48;
    uint64_t v6 = v49;
    int64_t v5 = v50;
    unint64_t v7 = v51;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  uint64_t v44 = v6;
  int64_t v45 = v5;
  unint64_t v46 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        uint64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        uint64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v43 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v45 = v5;
          unint64_t v46 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v43 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v43 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v43 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          uint64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      uint64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = sub_100726950();
    if (!v16
      || (uint64_t v40 = v16,
          type metadata accessor for IDSGroupEncryptionControllerMember(),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          uint64_t v14 = v41,
          swift_unknownObjectRelease(),
          !v41))
    {
LABEL_53:
      sub_100462C48();
      return (void *)v2;
    }
LABEL_19:
    Swift::Int v17 = sub_1007267E0(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    type metadata accessor for IDSGroupEncryptionControllerMember();
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = sub_1007267F0();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = sub_1007267F0();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v42;
    uint64_t v6 = v44;
    int64_t v5 = v45;
    unint64_t v7 = v46;
  }
LABEL_47:

  char v32 = *(unsigned char *)(v2 + 32);
  unint64_t v33 = (unint64_t)((1 << v32) + 63) >> 6;
  size_t v34 = 8 * v33;
  if ((v32 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v31);
    memcpy((char *)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v34);
    sub_1004DE490((unint64_t *)((char *)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0)), v33, v2, v19, &v42);
    uint64_t v36 = v35;
    swift_release();
    sub_100462C48();
  }
  else
  {
    uint64_t v37 = (void *)swift_slowAlloc();
    memcpy(v37, (const void *)(v2 + 56), v34);
    sub_1004DE490((unint64_t *)v37, v33, v2, v19, &v42);
    uint64_t v36 = v38;
    swift_release();
    sub_100462C48();
    swift_slowDealloc();
  }
  return (void *)v36;
}

uint64_t sub_1004DE2C8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = sub_100726960();

    if (v6)
    {
      uint64_t v7 = sub_1004DE7EC();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = sub_1007267E0(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  type metadata accessor for IDSGroupEncryptionControllerMember();
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = sub_1007267F0();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = sub_1007267F0();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1004DE978();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_10047F2BC(v11);
  uint64_t *v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1004DE490(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  id v5 = a5;
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v38 = a3 + 56;
  while (2)
  {
    uint64_t v35 = v8;
    do
    {
      while (1)
      {
        if ((*v5 & 0x8000000000000000) == 0)
        {
          int64_t v10 = v5[3];
          unint64_t v9 = v5[4];
          if (v9)
          {
            uint64_t v11 = (v9 - 1) & v9;
            unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_7:
            char v13 = *(void **)(*(void *)(*v5 + 48) + 8 * v12);
            id v14 = v13;
            goto LABEL_8;
          }
          int64_t v27 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_47;
          }
          int64_t v28 = (unint64_t)(v5[2] + 64) >> 6;
          if (v27 >= v28)
          {
            char v13 = 0;
            uint64_t v11 = 0;
            goto LABEL_8;
          }
          uint64_t v29 = v5[1];
          unint64_t v30 = *(void *)(v29 + 8 * v27);
          if (v30)
          {
LABEL_22:
            uint64_t v11 = (v30 - 1) & v30;
            unint64_t v12 = __clz(__rbit64(v30)) + (v27 << 6);
            int64_t v10 = v27;
            goto LABEL_7;
          }
          if (v10 + 2 < v28)
          {
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 2));
            if (v30)
            {
              int64_t v27 = v10 + 2;
              goto LABEL_22;
            }
            if (v10 + 3 >= v28)
            {
              char v13 = 0;
              uint64_t v11 = 0;
              v10 += 2;
              goto LABEL_8;
            }
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 3));
            if (v30)
            {
              int64_t v27 = v10 + 3;
              goto LABEL_22;
            }
            int64_t v27 = v10 + 4;
            if (v10 + 4 >= v28)
            {
              char v13 = 0;
              uint64_t v11 = 0;
              v10 += 3;
LABEL_8:
              v5[3] = v10;
              v5[4] = v11;
              if (!v13) {
                goto LABEL_45;
              }
              goto LABEL_12;
            }
            unint64_t v30 = *(void *)(v29 + 8 * v27);
            if (v30) {
              goto LABEL_22;
            }
            int64_t v27 = v28 - 1;
            int64_t v33 = v10 + 5;
            while (v28 != v33)
            {
              unint64_t v30 = *(void *)(v29 + 8 * v33++);
              if (v30)
              {
                int64_t v27 = v33 - 1;
                goto LABEL_22;
              }
            }
          }
          char v13 = 0;
          uint64_t v11 = 0;
          int64_t v10 = v27;
          goto LABEL_8;
        }
        if (!sub_100726950()
          || (type metadata accessor for IDSGroupEncryptionControllerMember(),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              char v13 = v39,
              swift_unknownObjectRelease(),
              !v39))
        {
LABEL_45:
          swift_retain();
          sub_10043F58C(a1, a2, v35, a3);
          return;
        }
LABEL_12:
        Swift::Int v15 = sub_1007267E0(*(void *)(a3 + 40));
        uint64_t v16 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v17 = v15 & ~v16;
        unint64_t v18 = v17 >> 6;
        uint64_t v19 = 1 << v17;
        if (((1 << v17) & *(void *)(v38 + 8 * (v17 >> 6))) == 0) {
          goto LABEL_3;
        }
        type metadata accessor for IDSGroupEncryptionControllerMember();
        id v20 = *(id *)(*(void *)(a3 + 48) + 8 * v17);
        char v21 = sub_1007267F0();

        if (v21) {
          break;
        }
        uint64_t v22 = ~v16;
        for (unint64_t i = v17 + 1; ; unint64_t i = v24 + 1)
        {
          unint64_t v24 = i & v22;
          if (((*(void *)(v38 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0) {
            break;
          }
          id v25 = *(id *)(*(void *)(a3 + 48) + 8 * v24);
          char v26 = sub_1007267F0();

          if (v26)
          {

            unint64_t v18 = v24 >> 6;
            uint64_t v19 = 1 << v24;
            goto LABEL_25;
          }
        }
LABEL_3:

        id v5 = a5;
      }

LABEL_25:
      unint64_t v31 = a1[v18];
      a1[v18] = v31 & ~v19;
      BOOL v32 = (v19 & v31) == 0;
      id v5 = a5;
    }
    while (v32);
    uint64_t v8 = v35 - 1;
    if (__OFSUB__(v35, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v35 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_1004DE7EC()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_100726920();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_1004DDBD0(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = sub_1007267E0(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    type metadata accessor for IDSGroupEncryptionControllerMember();
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = sub_1007267F0();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_10047F2BC(v8);
      if (sub_1007267F0())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = sub_1007267F0();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

id sub_1004DE978()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A44D48);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1007269B0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    unint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    id result = v17;
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void sub_1004DEB24(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v28 = 0;
  int64_t v4 = 0;
  uint64_t v7 = *(void *)(a3 + 56);
  uint64_t v5 = a3 + 56;
  uint64_t v6 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v5 - 24);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v6;
  uint64_t v29 = v5;
  int64_t v30 = (unint64_t)(v8 + 63) >> 6;
  while (v10)
  {
    unint64_t v12 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v13 = v12 | (v4 << 6);
LABEL_22:
    unint64_t v17 = *(char **)(*(void *)(a3 + 48) + 8 * v13);
    int64_t v18 = *(void **)&v17[OBJC_IVAR____TtC17identityservicesd34IDSGroupEncryptionControllerMember_uri];
    unint64_t v19 = v17;
    if ([v18 isTokenURI])
    {
      id v20 = [v18 tokenFreeURI];
      type metadata accessor for IDSGroupEncryptionControllerMember();
      char v21 = *(uint64_t (**)(void))((swift_isaMask & *(void *)v19) + 0x60);
      id v22 = v20;
      char v23 = v21();
      id v24 = sub_100450ECC((uint64_t)v22, v23 & 1);
      char v25 = sub_1004DD7BC(v24, a4);

      if ((v25 & 1) == 0) {
        goto LABEL_5;
      }
    }
    else
    {

LABEL_5:
      *(unint64_t *)((char *)a1 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v28++, 1)) {
        goto LABEL_28;
      }
    }
  }
  int64_t v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v14 >= v30) {
    goto LABEL_25;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v14);
  ++v4;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v4 = v14 + 1;
  if (v14 + 1 >= v30) {
    goto LABEL_25;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v4);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v4 = v14 + 2;
  if (v14 + 2 >= v30) {
    goto LABEL_25;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v4);
  if (v15)
  {
LABEL_21:
    unint64_t v10 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v30)
  {
LABEL_25:
    swift_retain();
    sub_10043F58C(a1, a2, v28, a3);
    return;
  }
  unint64_t v15 = *(void *)(v29 + 8 * v16);
  if (v15)
  {
    int64_t v4 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v4 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v4 >= v30) {
      goto LABEL_25;
    }
    unint64_t v15 = *(void *)(v29 + 8 * v4);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
}

uint64_t sub_1004DEDB4(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, v10);
    bzero((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    sub_1004DEB24((unint64_t *)((char *)&v16 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    uint64_t v12 = v11;
    swift_release();
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    unint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v8);
    swift_bridgeObjectRetain();
    sub_1004DEB24((unint64_t *)v13, v7, a1, a2);
    uint64_t v12 = v14;
    swift_release();
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

Swift::Int sub_1004DEF80(uint64_t a1, uint64_t a2)
{
  if ((a1 & 0xC000000000000001) == 0) {
    return sub_1004DEDB4(a1, a2);
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRetain();
  sub_1007268E0();
  if (sub_100726950())
  {
    type metadata accessor for IDSGroupEncryptionControllerMember();
    do
    {
      swift_dynamicCast();
      uint64_t v10 = *(void **)((char *)v20 + OBJC_IVAR____TtC17identityservicesd34IDSGroupEncryptionControllerMember_uri);
      if (![v10 isTokenURI]) {
        goto LABEL_11;
      }
      id v11 = [v10 tokenFreeURI];
      uint64_t v12 = *(uint64_t (**)(void))((swift_isaMask & *v20) + 0x60);
      id v13 = v11;
      char v14 = v12();
      id v15 = sub_100450ECC((uint64_t)v13, v14 & 1);
      LOBYTE(v12) = sub_1004DD7BC(v15, a2);

      if (v12)
      {
      }
      else
      {
LABEL_11:
        if (*((void *)&_swiftEmptySetSingleton + 3) <= *((void *)&_swiftEmptySetSingleton + 2)) {
          sub_10043EBD0();
        }
        Swift::Int result = sub_1007267E0(*((void *)&_swiftEmptySetSingleton + 5));
        char v5 = (char *)&_swiftEmptySetSingleton + 56;
        uint64_t v6 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
        unint64_t v7 = result & ~v6;
        unint64_t v8 = v7 >> 6;
        if (((-1 << v7) & ~*((void *)&_swiftEmptySetSingleton + (v7 >> 6) + 7)) != 0)
        {
          unint64_t v9 = __clz(__rbit64((-1 << v7) & ~*((void *)&_swiftEmptySetSingleton + (v7 >> 6) + 7))) | v7 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v16 = 0;
          unint64_t v17 = (unint64_t)(63 - v6) >> 6;
          do
          {
            if (++v8 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v18 = v8 == v17;
            if (v8 == v17) {
              unint64_t v8 = 0;
            }
            v16 |= v18;
            uint64_t v19 = *(void *)&v5[8 * v8];
          }
          while (v19 == -1);
          unint64_t v9 = __clz(__rbit64(~v19)) + (v8 << 6);
        }
        *(void *)&v5[(v9 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v9;
        *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v9) = v20;
        ++*((void *)&_swiftEmptySetSingleton + 2);
      }
    }
    while (sub_100726950());
    uint64_t v3 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  swift_release();
  return (Swift::Int)v3;
}

uint64_t destroy for IDSGroupMembershipDiff()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for IDSGroupMembershipDiff(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IDSGroupMembershipDiff(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for IDSGroupMembershipDiff(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSGroupMembershipDiff(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSGroupMembershipDiff(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)Swift::Int result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)Swift::Int result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSGroupMembershipDiff()
{
  return &type metadata for IDSGroupMembershipDiff;
}

uint64_t sub_1004DF494()
{
  uint64_t v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_counter);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1004DF4DC(int a1)
{
  uint64_t v3 = (_DWORD *)(v1 + OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_counter);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1004DF528())()
{
  return j__swift_endAccess;
}

id sub_1004DF584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v13 = objc_allocWithZone(v6);
  return sub_1004DF5F8(a1, a2, a3, a4, a5, a6);
}

id sub_1004DF5F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(_DWORD *)&v6[OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_counter] = 1;
  uint64_t v13 = OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_lock;
  sub_100431F80((uint64_t *)&unk_100A454B0);
  uint64_t v14 = swift_allocObject();
  *(_DWORD *)(v14 + 16) = 0;
  *(void *)&v6[v13] = v14;
  id v15 = &v6[OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_sessionID];
  *(void *)id v15 = a1;
  *((void *)v15 + 1) = a2;
  *(void *)&v6[OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_localIdentities] = a4;
  *(void *)&v6[OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_localPushToken] = a3;
  *(void *)&v6[OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_remotePushTokens] = a5;
  *(void *)&v6[OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_remoteIdentities] = a6;
  v17.receiver = v6;
  v17.super_class = (Class)type metadata accessor for IDSGlobalLinkP2PKeyNegotiator();
  return objc_msgSendSuper2(&v17, "init");
}

uint64_t type metadata accessor for IDSGlobalLinkP2PKeyNegotiator()
{
  return self;
}

id sub_1004DF700()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_lock;
  uint64_t v3 = *(os_unfair_lock_s **)((char *)v0 + OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_lock);
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  uint64_t v4 = swift_release();
  char v5 = *(unsigned int (**)(uint64_t))((swift_isaMask & *v1) + 0x88);
  if (v5(v4) == -1) {
LABEL_5:
  }
    abort();
  uint64_t v6 = (void (*)(unsigned char *, void))(*(uint64_t (**)(unsigned char *))((swift_isaMask & *v1) + 0x98))(v17);
  if (*v7 == -1)
  {
    __break(1u);
    goto LABEL_5;
  }
  ++*v7;
  v6(v17, 0);
  type metadata accessor for IDSGlobalLinkP2PKeyNegotiation();
  uint64_t v8 = *(void *)((char *)v1 + OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_sessionID);
  uint64_t v9 = *(void *)((char *)v1 + OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_sessionID + 8);
  uint64_t v10 = swift_bridgeObjectRetain();
  int v11 = v5(v10);
  uint64_t v12 = *(void *)((char *)v1 + OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_localIdentities);
  uint64_t v13 = *(void *)((char *)v1 + OBJC_IVAR____TtC17identityservicesd29IDSGlobalLinkP2PKeyNegotiator_remoteIdentities);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v14 = sub_10052C98C(v1, (uint64_t)&off_10098F2C8, v8, v9, v11, v12, v13);
  id v15 = *(os_unfair_lock_s **)((char *)v1 + v2);
  swift_retain();
  os_unfair_lock_unlock(v15 + 4);
  swift_release();
  return v14;
}

uint64_t sub_1004DF904(unsigned int a1)
{
  LODWORD(v3) = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x88))();
  if (v3 <= a1) {
    uint64_t v3 = a1;
  }
  else {
    uint64_t v3 = v3;
  }
  uint64_t v4 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x90);

  return v4(v3);
}

id sub_1004DF9D0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSGlobalLinkP2PKeyNegotiator();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004DFA94()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0xC8))();
}

unint64_t sub_1004DFAC8(char a1)
{
  unint64_t result = 0x6F6B636547;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6174536F6B636547;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x72746E6F434D4B4DLL;
      break;
    case 4:
      unint64_t result = 0x72746E6F434D4B53;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0x7369737265504453;
      break;
    case 8:
      unint64_t result = 0x65686361434D4B4DLL;
      break;
    case 9:
      unint64_t result = 0x65686361434D4B53;
      break;
    case 10:
    case 13:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0xD000000000000013;
      break;
    case 12:
      unint64_t result = 0x73655370756F7247;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1004DFC9C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1004DFAC8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1004DFAC8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_100726D20();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_1004DFD28()
{
  char v1 = *v0;
  sub_100726DD0();
  sub_1004DFAC8(v1);
  sub_100726490();
  swift_bridgeObjectRelease();
  return sub_100726E30();
}

uint64_t sub_1004DFD8C()
{
  sub_1004DFAC8(*v0);
  sub_100726490();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1004DFDE0()
{
  char v1 = *v0;
  sub_100726DD0();
  sub_1004DFAC8(v1);
  sub_100726490();
  swift_bridgeObjectRelease();
  return sub_100726E30();
}

uint64_t sub_1004DFE40@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1004DFF54(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1004DFE70@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1004DFAC8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1004DFE9C(char a1)
{
  sub_1004DFAC8(a1);

  return sub_100725EC0();
}

uint64_t sub_1004DFEFC(char a1)
{
  sub_1004DFAC8(a1);

  return sub_100725EC0();
}

uint64_t sub_1004DFF54(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_10098F2D8;
  v6._object = a2;
  unint64_t v4 = sub_100726C10(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xE) {
    return 14;
  }
  else {
    return v4;
  }
}

unint64_t sub_1004DFFA4()
{
  unint64_t result = qword_100A47368;
  if (!qword_100A47368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A47368);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for LogCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for LogCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *unint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1004E0154);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LogCategory()
{
  return &type metadata for LogCategory;
}

unint64_t sub_1004E018C()
{
  unint64_t result = qword_100A44A70;
  if (!qword_100A44A70)
  {
    sub_100440798((uint64_t *)&unk_100A45490);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A44A70);
  }
  return result;
}

void *sub_1004E0254()
{
  char v1 = (void **)(v0
               + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_rootExchangeController);
  swift_beginAccess();
  int v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1004E0300(void *a1)
{
  sub_1004EC3EC(a1);
}

void (*sub_1004E0338(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  unsigned int v4 = (void **)(v1
               + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_rootExchangeController);
  swift_beginAccess();
  uint64_t v5 = *v4;
  v3[3] = *v4;
  id v6 = v5;
  return sub_1004E03C0;
}

void sub_1004E03C0(uint64_t a1, char a2)
{
  int v2 = *(void **)a1;
  unsigned int v4 = (void **)(*(void *)a1 + 24);
  id v3 = *v4;
  if (a2)
  {
    uint64_t v5 = v3;
    sub_1004EC3EC(v3);

    id v3 = *v4;
  }
  else
  {
    sub_1004EC3EC(*(void **)(*(void *)a1 + 24));
  }

  free(v2);
}

uint64_t sub_1004E043C()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1004E048C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_participantProvider;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1004E04F8(void *a1))(uint64_t a1, char a2)
{
  id v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_participantProvider;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100455C48;
}

uint64_t sub_1004E0580()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1004E05CC(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialProviders);
  swift_beginAccess();
  *id v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1004E0620())()
{
  return j__swift_endAccess;
}

uint64_t sub_1004E067C()
{
  uint64_t v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_needsMaterialUpdate);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1004E06C4(char a1)
{
  id v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_needsMaterialUpdate);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_1004E0710())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004E076C@<X0>(uint64_t a1@<X8>)
{
  return sub_1004E07EC(&OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialCurrentlySentToAVC, a1);
}

uint64_t sub_1004E0778(uint64_t a1)
{
  return sub_1004E0850(a1, &OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialCurrentlySentToAVC);
}

uint64_t (*sub_1004E0784())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004E07E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1004E07EC(&OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialCurrentlySentToFramework, a1);
}

uint64_t sub_1004E07EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *a1;
  swift_beginAccess();
  return sub_1004546B8(v4, a2, &qword_100A44A50);
}

uint64_t sub_1004E0844(uint64_t a1)
{
  return sub_1004E0850(a1, &OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialCurrentlySentToFramework);
}

uint64_t sub_1004E0850(uint64_t a1, void *a2)
{
  uint64_t v4 = v2 + *a2;
  swift_beginAccess();
  sub_1004EC5C0(a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1004E08A8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004E0904()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialGeneration;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1004E094C(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialGeneration);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_1004E0998())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004E09F4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_localParticipantID;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1004E0A3C(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_localParticipantID);
  swift_beginAccess();
  *id v3 = a1;
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v1
                                                                 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController))
                                  + 0x100))(a1);
  return (*(uint64_t (**)(void))((swift_isaMask & **(void **)(v1
                                                                          + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController))
                                           + 0x100))(*v3);
}

void (*sub_1004E0B44(void *a1))(void **a1, char a2)
{
  id v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_localParticipantID;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_1004E0BB0;
}

void sub_1004E0BB0(void **a1, char a2)
{
  id v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v5 = v3[3];
    uint64_t v4 = v3[4];
    (*(void (**)(void))((swift_isaMask & **(void **)(v5
                                                                  + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController))
                                   + 0x100))(*(void *)(v5 + v4));
    (*(void (**)(void))((swift_isaMask & **(void **)(v5
                                                                  + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController))
                                   + 0x100))(*(void *)(v5 + v4));
  }

  free(v3);
}

BOOL sub_1004E0CA4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_idsdSessionProvider);
  NSString v2 = sub_100726420();
  id v3 = [v1 sessionWithUniqueID:v2];

  if (v3) {
    swift_unknownObjectRelease();
  }
  return v3 != 0;
}

id sub_1004E0D1C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_idsdSessionProvider);
  NSString v2 = sub_100726420();
  id v3 = [v1 sessionWithUniqueID:v2];

  if (!v3) {
    return 0;
  }
  id v4 = [v3 sessionIsActive];
  swift_unknownObjectRelease();
  return v4;
}

char *sub_1004E0DAC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *a13)
{
  id v18 = objc_allocWithZone(v13);
  uint64_t v19 = sub_1004EC628(a1, a2, a3, a4, a5, a6, a8, a9, a10, a11, a12, a13);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return v19;
}

uint64_t sub_1004E0E78()
{
  uint64_t v1 = v0;
  NSString v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)id v4 = 136315138;
    sub_10043E578(0xD000000000000016, 0x80000001008C4160, &v8);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: reseting keys", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v6 = (*(uint64_t (**)(uint64_t))(**(void **)(v1
                                                        + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache)
                                          + 296))(v5);
  return (*(uint64_t (**)(uint64_t))(**(void **)(v1
                                                          + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmCache)
                                            + 296))(v6);
}

uint64_t sub_1004E1038()
{
  uint64_t v1 = v0;
  NSString v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    id v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)id v4 = 136315138;
    sub_10043E578(0xD000000000000013, 0x80000001008C4180, &v8);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v6 = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(v1
                                                                         + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController))
                                          + 0x190))(v5);
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(v1
                                                                           + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController))
                                            + 0x190))(v6);
}

uint64_t sub_1004E1210()
{
  uint64_t v1 = (*(uint64_t (**)(void))(**(void **)(v0
                                          + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache)
                            + 336))();
  uint64_t v2 = (*(uint64_t (**)(uint64_t))(**(void **)(v0
                                                        + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmCache)
                                          + 336))(v1);
  uint64_t v3 = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                         + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController))
                                          + 0x1F8))(v2);
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                           + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController))
                                            + 0x1F8))(v3);
}

uint64_t sub_1004E1354(char a1, void *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, int a7, void *a8, void *a9, unsigned __int8 a10, unint64_t a11, unsigned __int8 a12, unsigned __int8 a13)
{
  int v90 = a13;
  int v81 = a12;
  int v88 = a7;
  int v89 = a10;
  unint64_t v80 = a9;
  unsigned int v87 = a1 & 1;
  uint64_t v20 = sub_100725D30();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20, v22);
  id v24 = (char *)&v75 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = v13;
  uint64_t v83 = a2;
  char v25 = *(void (**)(char *, void *))(v21 + 16);
  char v26 = a2;
  uint64_t v27 = a3;
  unint64_t v28 = a6;
  uint64_t v79 = v29;
  v25(v24, v26);
  sub_100441FD4(v27, a4);
  sub_100441FD4(a5, a6);
  id v30 = a8;
  unint64_t v84 = a4;
  sub_100441FD4(v27, a4);
  uint64_t v91 = a5;
  sub_100441FD4(a5, a6);
  id v31 = v30;
  BOOL v32 = sub_100725EB0();
  os_log_type_t v33 = sub_1007266E0();
  int v34 = v33;
  BOOL v35 = os_log_type_enabled(v32, v33);
  unint64_t v85 = a11;
  id v36 = (id)(HIDWORD(a11) & 1);
  if (v35)
  {
    uint64_t v37 = swift_slowAlloc();
    id v86 = v31;
    uint64_t v38 = v37;
    uint64_t v75 = (void *)swift_slowAlloc();
    uint64_t v77 = swift_slowAlloc();
    v94[0] = v77;
    *(_DWORD *)uint64_t v38 = 136317698;
    os_log_t v76 = v32;
    uint64_t v92 = sub_10043E578(0xD00000000000007ALL, 0x80000001008C41A0, v94);
    sub_100726830();
    *(_WORD *)(v38 + 12) = 2080;
    LOBYTE(v92) = v87;
    uint64_t v39 = sub_100726480();
    uint64_t v78 = HIDWORD(a11) & 1;
    uint64_t v92 = sub_10043E578(v39, v40, v94);
    sub_100726830();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 22) = 2080;
    sub_1004ECCA4(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v41 = v79;
    uint64_t v42 = sub_100726D00();
    uint64_t v92 = sub_10043E578(v42, v43, v94);
    sub_100726830();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v41);
    *(_WORD *)(v38 + 32) = 2080;
    unint64_t v44 = v84;
    sub_100441FD4(v27, v84);
    uint64_t v45 = sub_100725AA0();
    LODWORD(v79) = v34;
    uint64_t v46 = v45;
    unint64_t v48 = v47;
    sub_100442248(v27, v44);
    uint64_t v92 = sub_10043E578(v46, v48, v94);
    sub_100726830();
    swift_bridgeObjectRelease();
    sub_100442248(v27, v44);
    sub_100442248(v27, v44);
    *(_WORD *)(v38 + 42) = 2080;
    uint64_t v49 = v91;
    sub_100441FD4(v91, v28);
    uint64_t v50 = sub_100725AA0();
    unint64_t v52 = v51;
    sub_100442248(v49, v28);
    uint64_t v92 = sub_10043E578(v50, v52, v94);
    sub_100726830();
    swift_bridgeObjectRelease();
    sub_100442248(v49, v28);
    sub_100442248(v49, v28);
    *(_WORD *)(v38 + 52) = 2080;
    LOBYTE(v92) = v88;
    uint64_t v53 = sub_100726480();
    uint64_t v92 = sub_10043E578(v53, v54, v94);
    sub_100726830();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 62) = 2112;
    uint64_t v92 = (uint64_t)v86;
    id v36 = v86;
    sub_100726830();
    *uint64_t v75 = v86;

    LOBYTE(v36) = v78;
    *(_WORD *)(v38 + 72) = 2080;
    id v55 = v80;
    uint64_t v92 = (uint64_t)v80;
    char v93 = v89 & 1;
    sub_100431F80(&qword_100A459F0);
    uint64_t v56 = sub_100726480();
    uint64_t v92 = sub_10043E578(v56, v57, v94);
    sub_100726830();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 82) = 2080;
    LODWORD(v92) = v85;
    BYTE4(v92) = (_BYTE)v36;
    sub_100431F80(&qword_100A47AD0);
    uint64_t v58 = sub_100726480();
    uint64_t v92 = sub_10043E578(v58, v59, v94);
    sub_100726830();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 92) = 1024;
    LODWORD(v92) = v81 & 1;
    sub_100726830();
    *(_WORD *)(v38 + 98) = 256;
    LOBYTE(v92) = v90;
    sub_100726830();
    os_log_t v60 = v76;
    _os_log_impl((void *)&_mh_execute_header, v76, (os_log_type_t)v79, "%s: kind: %s; ki: %s; ks: %s; wrappedKM: %s; wrapMode: %s; forPushToken: %@; participantID: %s; generationCounter:"
      " %s; isFromSender: %{BOOL}d; shortKILength: %hhu.",
      (uint8_t *)v38,
      0x65u);
    sub_100431F80(&qword_100A44F10);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    id v31 = v86;
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v21 + 8))(v24, v79);
    unint64_t v44 = v84;
    sub_100442248(v27, v84);
    sub_100442248(v27, v44);
    uint64_t v62 = v91;
    sub_100442248(v91, v28);
    sub_100442248(v62, v28);

    id v55 = v80;
  }
  uint64_t v63 = &OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache;
  if (v87) {
    uint64_t v63 = &OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmCache;
  }
  uint64_t v64 = *(void **)(v82 + *v63);
  uint64_t v65 = __chkstk_darwin(v87, v61);
  *((unsigned char *)&v75 - 112) = v88;
  uint64_t v66 = v91;
  *(&v75 - 13) = v67;
  *(&v75 - 12) = (void *)v66;
  *(&v75 - 11) = (void *)v28;
  *((unsigned char *)&v75 - 80) = v68 & 1;
  *(&v75 - 9) = v31;
  *((unsigned char *)&v75 - 64) = v65;
  *(&v75 - 7) = v83;
  *(&v75 - 6) = (void *)v27;
  *(&v75 - 5) = (void *)v44;
  *((_DWORD *)&v75 - 8) = v85;
  *((unsigned char *)&v75 - 28) = (_BYTE)v36;
  *((unsigned char *)&v75 - 27) = v90;
  *(&v75 - 3) = v55;
  *((unsigned char *)&v75 - 16) = v89 & 1;
  *(&v75 - 1) = v64;
  __chkstk_darwin(v65, v69);
  *(&v75 - 2) = sub_1004ECC18;
  *(&v75 - 1) = v70;
  uint64_t v72 = v71 + 4;
  swift_retain();
  os_unfair_lock_lock(v72);
  sub_10046C520(&v92);
  os_unfair_lock_unlock(v72);
  uint64_t v73 = v92;
  swift_release();
  return v73;
}

void sub_1004E1B54(int a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, void (*a4)(char *, uint64_t, uint64_t)@<X3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, unint64_t a11, uint64_t a12, unsigned __int8 a13, uint64_t a14, char a15, uint64_t a16)
{
  uint64_t v180 = a8;
  LODWORD(v175) = a7;
  uint64_t v164 = a6;
  int v169 = a5;
  uint64_t v177 = a3;
  uint64_t v178 = a4;
  LODWORD(v176) = a1;
  uint64_t v18 = sub_100725CC0();
  __chkstk_darwin(v18 - 8, v19);
  uint64_t v172 = (char *)&v158 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_100725D30();
  uint64_t v181 = *(void *)(v179 - 8);
  uint64_t v22 = __chkstk_darwin(v179, v21);
  uint64_t v163 = (char *)&v158 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v22, v24);
  uint64_t v166 = (char *)&v158 - v26;
  uint64_t v28 = __chkstk_darwin(v25, v27);
  uint64_t v167 = (char *)&v158 - v29;
  __chkstk_darwin(v28, v30);
  uint64_t v171 = (char *)&v158 - v31;
  unint64_t v173 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  __chkstk_darwin(v173, v32);
  uint64_t v174 = (char *)&v158 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_100431F80(&qword_100A451F0);
  uint64_t v36 = __chkstk_darwin(v34 - 8, v35);
  uint64_t v170 = (uint64_t)&v158 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __chkstk_darwin(v36, v38);
  uint64_t v41 = (char *)&v158 - v40;
  __chkstk_darwin(v39, v42);
  unint64_t v44 = (char *)&v158 - v43;
  uint64_t v45 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  uint64_t v46 = *(void *)(v45 - 8);
  uint64_t v48 = __chkstk_darwin(v45, v47);
  uint64_t v165 = (uint64_t)&v158 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = __chkstk_darwin(v48, v50);
  uint64_t v53 = (char *)&v158 - v52;
  unint64_t v54 = *(void **)((char *)a2
                   + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_identityController);
  (*(void (**)(uint64_t))((swift_isaMask & *v54) + 0x130))(v51);
  id v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 + 48);
  if (v55(v44, 1, v45) == 1)
  {
    uint64_t v56 = a9;
    sub_10044C150((uint64_t)v44, &qword_100A451F0);
    unint64_t v57 = sub_100725EB0();
    os_log_type_t v58 = sub_1007266E0();
    if (os_log_type_enabled(v57, v58))
    {
      unint64_t v59 = (uint8_t *)swift_slowAlloc();
      v183[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v59 = 136315138;
      uint64_t v182 = sub_10043E578(0xD00000000000007ALL, 0x80000001008C41A0, v183);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v57, v58, "%s: have no local identity", v59, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    id v60 = 0;
    goto LABEL_46;
  }
  uint64_t v162 = a9;
  unsigned int v159 = v175 & 1;
  BOOL v160 = v176 != 2;
  uint64_t v61 = sub_1004ED2B4((uint64_t)v44, (uint64_t)v53, type metadata accessor for IDSGroupEncryptionFullIdentity);
  (*(void (**)(uint64_t))((swift_isaMask & *v54) + 0xC0))(v61);
  uint64_t v168 = a2;
  uint64_t v62 = (void *)((char *)a2
                 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_cryptoHandler);
  uint64_t v63 = *(void *)((char *)a2
                  + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_cryptoHandler
                  + 24);
  uint64_t v64 = *(void *)((char *)a2
                  + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_cryptoHandler
                  + 32);
  sub_10044C0F4(v62, v63);
  uint64_t v65 = *(int *)(v45 + 20);
  uint64_t v161 = v53;
  uint64_t v66 = *(void **)&v53[v65];
  uint64_t v175 = (uint64_t)v41;
  size_t v67 = *(uint64_t (**)(uint64_t, void (*)(void, void, void), id, BOOL, uint64_t, uint64_t))(v64 + 16);
  id v68 = v66;
  uint64_t v69 = v67(v177, (void (*)(void, void, void))v178, v68, v160, v63, v64);
  unint64_t v71 = v70;
  char v73 = v72;

  if ((v73 & 1) == 0)
  {
    sub_100441FD4(v69, v71);
    goto LABEL_7;
  }
  uint64_t v102 = v170;
  sub_1004546B8(v175, v170, &qword_100A451F0);
  if (v55((char *)v102, 1, v45) == 1)
  {
    sub_10044C150(v102, &qword_100A451F0);
LABEL_28:
    uint64_t v56 = v162;
    uint64_t v136 = sub_100725EB0();
    os_log_type_t v137 = sub_1007266E0();
    if (os_log_type_enabled(v136, v137))
    {
      uint64_t v138 = (uint8_t *)swift_slowAlloc();
      v183[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v138 = 136315138;
      uint64_t v182 = sub_10043E578(0xD00000000000007ALL, 0x80000001008C41A0, v183);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v136, v137, "%s: could not decrypt", v138, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    if (v169)
    {
      if ((*(uint64_t (**)(void))((swift_isaMask & *v168) + 0x108))())
      {
        uint64_t v140 = v139;
        uint64_t ObjectType = swift_getObjectType();
        int v142 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v140 + 32))(v164, ObjectType, v140);
        swift_unknownObjectRelease();
        if (v142)
        {
          uint64_t v143 = sub_100725EB0();
          os_log_type_t v144 = sub_1007266E0();
          if (os_log_type_enabled(v143, v144))
          {
            uint64_t v145 = (uint8_t *)swift_slowAlloc();
            v183[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v145 = 136315138;
            uint64_t v182 = sub_10043E578(0xD00000000000007ALL, 0x80000001008C41A0, v183);
            sub_100726830();
            _os_log_impl((void *)&_mh_execute_header, v143, v144, "%s: because we could not decrypt, and this key belongs to the sender, kicking off key recovery for sender", v145, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }

          (*(void (**)(void, void, void))((swift_isaMask & *v142) + 0x118))(v159, *(void *)((char *)v168+ OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_sessionID), *(void *)((char *)v168+ OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_sessionID+ 8));
        }
      }
    }
    sub_10044C144(v69, v71, 1);
    goto LABEL_37;
  }
  BOOL v117 = v176 != 2;
  uint64_t v118 = v165;
  sub_1004ED2B4(v102, v165, type metadata accessor for IDSGroupEncryptionFullIdentity);
  uint64_t v119 = v62[3];
  uint64_t v120 = v62[4];
  sub_10044C0F4(v62, v119);
  uint64_t v121 = *(void **)(v118 + *(int *)(v45 + 20));
  char v122 = *(uint64_t (**)(uint64_t, void (*)(void, void, void), id, BOOL, uint64_t, uint64_t))(v120 + 16);
  uint64_t v123 = v69;
  id v124 = v121;
  uint64_t v125 = v122(v177, (void (*)(void, void, void))v178, v124, v117, v119, v120);
  unint64_t v127 = v126;
  LOBYTE(v119) = v128;
  sub_10044C144(v123, v71, 1);

  sub_1004ED31C(v118, type metadata accessor for IDSGroupEncryptionFullIdentity);
  if (v119)
  {
    uint64_t v69 = v125;
    unint64_t v71 = v127;
    goto LABEL_28;
  }
  sub_100441FD4(v125, v127);
  uint64_t v69 = v125;
  unint64_t v71 = v127;
LABEL_7:
  int v74 = a12;
  int v169 = a15 & 1;
  LODWORD(v170) = a13;
  uint64_t v75 = *(void (**)(char *, uint64_t, uint64_t))(v181 + 16);
  uint64_t v76 = (uint64_t)v171;
  uint64_t v176 = v181 + 16;
  uint64_t v177 = a14;
  uint64_t v178 = v75;
  v75(v171, v180, v179);
  uint64_t v77 = v172;
  sub_100725CB0();
  uint64_t v78 = v168;
  uint64_t v79 = *(void *)((char *)v168 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_groupID);
  uint64_t v80 = *(void *)((char *)v168
                  + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_groupID
                  + 8);
  if ((a12 & (unint64_t)&_mh_execute_header) != 0) {
    int v74 = 0;
  }
  swift_bridgeObjectRetain();
  sub_100441FD4(a10, a11);
  sub_100441FD4(v69, v71);
  uint64_t v157 = v177;
  uint64_t v156 = v80;
  uint64_t v177 = v69;
  int v81 = v78;
  uint64_t v82 = (uint64_t)v77;
  uint64_t v83 = v174;
  sub_1004846FC(0, v76, a10, a11, v69, v71, v82, v79, v174, v156, v74, 0, v170, v157, v169);
  uint64_t v84 = sub_100483C5C();
  unint64_t v85 = v173;
  id v86 = &v83[*(int *)(v173 + 52)];
  uint64_t v87 = *(void *)v86;
  char v88 = v86[8];
  uint64_t v89 = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)((char *)v78
                                                                          + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController))
                                           + 0xF8))(v84);
  if ((v88 & 1) == 0 && v87 == v89)
  {
    unint64_t v173 = v71;
    int v90 = v167;
    uint64_t v91 = v179;
    v178(v167, v180, v179);
    uint64_t v92 = sub_100725EB0();
    os_log_type_t v93 = sub_1007266E0();
    BOOL v94 = os_log_type_enabled(v92, v93);
    uint64_t v56 = v162;
    if (v94)
    {
      uint64_t v95 = v91;
      uint64_t v96 = swift_slowAlloc();
      v183[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v96 = 136315394;
      uint64_t v182 = sub_10043E578(0xD00000000000007ALL, 0x80000001008C41A0, v183);
      sub_100726830();
      *(_WORD *)(v96 + 12) = 2080;
      sub_1004ECCA4(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v97 = sub_100726D00();
      uint64_t v182 = sub_10043E578(v97, v98, v183);
      sub_100726830();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v181 + 8))(v90, v95);
      _os_log_impl((void *)&_mh_execute_header, v92, v93, "%s: ignore receiving our own ki: %s", (uint8_t *)v96, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v99 = v177;
      unint64_t v100 = v173;
      sub_100442248(v177, v173);
      sub_10044C144(v99, v100, 0);
      char v101 = v174;
    }
    else
    {

      uint64_t v129 = v177;
      unint64_t v130 = v173;
      sub_10044C144(v177, v173, 0);
      (*(void (**)(char *, uint64_t))(v181 + 8))(v90, v91);
      sub_100442248(v129, v130);
      char v101 = v83;
    }
    sub_1004ED31C((uint64_t)v101, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
LABEL_37:
    sub_10044C150(v175, &qword_100A451F0);
    sub_1004ED31C((uint64_t)v161, type metadata accessor for IDSGroupEncryptionFullIdentity);
    id v60 = 0;
LABEL_46:
    *uint64_t v56 = v60;
    return;
  }
  char v103 = (*(uint64_t (**)(unsigned char *))(*(void *)a16 + 232))(v83);
  unint64_t v104 = v166;
  uint64_t v105 = v179;
  v178(v166, v180, v179);
  if (v103)
  {
    char v106 = (*(uint64_t (**)(char *))(*(void *)a16 + 280))(v104);
    int64_t v107 = *(void (**)(char *, uint64_t))(v181 + 8);
    v181 += 8;
    v107(v104, v105);
    if (v106)
    {
      id v108 = v163;
      v178(v163, v180, v105);
      __int16 v109 = sub_100725EB0();
      os_log_type_t v110 = sub_1007266E0();
      if (os_log_type_enabled(v109, v110))
      {
        uint64_t v111 = v105;
        uint64_t v112 = swift_slowAlloc();
        uint64_t v180 = swift_slowAlloc();
        v183[0] = v180;
        *(_DWORD *)uint64_t v112 = 136315394;
        uint64_t v182 = sub_10043E578(0xD00000000000007ALL, 0x80000001008C41A0, v183);
        sub_100726830();
        *(_WORD *)(v112 + 12) = 2080;
        sub_1004ECCA4(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v113 = sub_100726D00();
        uint64_t v182 = sub_10043E578(v113, v114, v183);
        sub_100726830();
        swift_bridgeObjectRelease();
        v107(v108, v111);
        _os_log_impl((void *)&_mh_execute_header, v109, v110, "%s: ignore cached ki: %s", (uint8_t *)v112, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        uint64_t v115 = v177;
        sub_100442248(v177, v71);
        sub_10044C144(v115, v71, 0);
        unint64_t v116 = v174;
      }
      else
      {

        uint64_t v155 = v177;
        sub_10044C144(v177, v71, 0);
        v107(v108, v105);
        sub_100442248(v155, v71);
        unint64_t v116 = v83;
      }
      sub_1004ED31C((uint64_t)v116, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10044C150(v175, &qword_100A451F0);
      sub_1004ED31C((uint64_t)v161, type metadata accessor for IDSGroupEncryptionFullIdentity);
      id v60 = 0;
      uint64_t v56 = v162;
      goto LABEL_46;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v181 + 8))(v104, v105);
  }
  (*(void (**)(unsigned char *))(*(void *)a16 + 264))(v83);
  id v60 = sub_10048391C();
  int v131 = v159;
  if (sub_100450980(v159, 0))
  {
    uint64_t v132 = *(void **)((char *)v81
                    + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_idsdSessionProvider);
    NSString v133 = sub_100726420();
    id v134 = [v132 sessionWithUniqueID:v133];

    uint64_t v56 = v162;
    uint64_t v135 = v177;
    if (!v134)
    {
LABEL_43:
      (*(void (**)(unsigned char *))(*(void *)a16 + 272))(&v83[*(int *)(v85 + 20)]);
      sub_100442248(v135, v71);
      sub_10044C144(v135, v71, 0);
      sub_1004ED31C((uint64_t)v83, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10044C150(v175, &qword_100A451F0);
      sub_1004ED31C((uint64_t)v161, type metadata accessor for IDSGroupEncryptionFullIdentity);
      goto LABEL_46;
    }
    [v134 recvKeyMaterial:v60];
LABEL_42:
    swift_unknownObjectRelease();
    goto LABEL_43;
  }
  BOOL v146 = sub_100450980(v131, 1);
  uint64_t v56 = v162;
  uint64_t v135 = v177;
  if (!v146) {
    goto LABEL_43;
  }
  uint64_t v147 = *(void **)((char *)v168
                  + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_idsdSessionProvider);
  NSString v148 = sub_100726420();
  id v149 = [v147 sessionWithUniqueID:v148];

  if (!v149) {
    goto LABEL_43;
  }
  sub_100431F80(&qword_100A47370);
  uint64_t v150 = swift_allocObject();
  *(_OWORD *)(v150 + 16) = xmmword_100794E30;
  id v151 = [v60 dictionaryRepresentation];
  if (v151)
  {
    uint64_t v152 = v151;
    uint64_t v153 = sub_100726390();

    *(void *)(v150 + 32) = v153;
    sub_100431F80(&qword_100A47378);
    Class isa = sub_100726560().super.isa;
    swift_bridgeObjectRelease();
    [v149 recvStableKeyMaterialForFrameworkCache:isa];

    uint64_t v135 = v177;
    goto LABEL_42;
  }
  sub_10044C144(v177, v71, 0);
  __break(1u);
}

void sub_1004E2F58(uint64_t a1, uint64_t a2)
{
  if (*(void *)(v2 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache) == a2)
  {
    uint64_t v3 = *(void **)(v2
                  + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_idsdSessionProvider);
    NSString v4 = sub_100726420();
    id v5 = [v3 sessionWithUniqueID:v4];

    if (v5)
    {
      sub_100725D30();
      Class isa = sub_100726560().super.isa;
      [v5 invalidateKeyMaterialByKeyIndexes:isa];
      swift_unknownObjectRelease();
    }
  }
}

void sub_1004E3044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v64 = a3;
  uint64_t v8 = sub_100431F80(&qword_100A44A50);
  uint64_t v10 = __chkstk_darwin(v8 - 8, v9);
  uint64_t v12 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  id v15 = (char *)v54 - v14;
  uint64_t v16 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v19 = __chkstk_darwin(v16, v18);
  uint64_t v21 = (char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v19, v22);
  uint64_t v63 = (uint64_t)v54 - v24;
  __chkstk_darwin(v23, v25);
  uint64_t v27 = (char *)v54 - v26;
  if (*(void *)(v5 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmCache) == a1)
  {
    uint64_t v28 = *(void **)(v5
                   + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_idsdSessionProvider);
    NSString v29 = sub_100726420();
    uint64_t v62 = v21;
    uint64_t v30 = v29;
    id v31 = [v28 sessionWithUniqueID:v29];

    uint64_t v32 = (uint64_t)v62;
    if (v31)
    {
      id v61 = v31;
      sub_1004546B8(a4, (uint64_t)v15, &qword_100A44A50);
      uint64_t v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      if (v33(v15, 1, v16) == 1)
      {
        sub_10044C150((uint64_t)v15, &qword_100A44A50);
      }
      else
      {
        sub_1004ED2B4((uint64_t)v15, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        id v34 = sub_10048391C();
        id v35 = [v34 dictionaryRepresentation];

        if (v35)
        {
          uint64_t v36 = sub_100726390();

          swift_bridgeObjectRetain_n();
          uint64_t v37 = sub_100725EB0();
          os_log_type_t v38 = sub_1007266E0();
          int v59 = v38;
          if (os_log_type_enabled(v37, v38))
          {
            uint64_t v39 = swift_slowAlloc();
            uint64_t v60 = v36;
            uint64_t v40 = v39;
            uint64_t v58 = swift_slowAlloc();
            uint64_t v66 = v58;
            *(_DWORD *)uint64_t v40 = 136315394;
            unint64_t v57 = (char *)&type metadata for Any + 8;
            os_log_t v55 = (os_log_t)(v40 + 4);
            uint64_t v65 = sub_10043E578(0xD00000000000004ELL, 0x80000001008C4220, &v66);
            uint64_t v56 = &v66;
            sub_100726830();
            *(_WORD *)(v40 + 12) = 2080;
            v54[1] = v40 + 14;
            swift_bridgeObjectRetain();
            uint64_t v41 = sub_1007263A0();
            os_log_t v55 = v37;
            unint64_t v43 = v42;
            swift_bridgeObjectRelease();
            uint64_t v65 = sub_10043E578(v41, v43, &v66);
            sub_100726830();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            uint64_t v37 = v55;
            _os_log_impl((void *)&_mh_execute_header, v55, (os_log_type_t)v59, "%s: sending new SKM to IDSDSession: %s", (uint8_t *)v40, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v36 = v60;
            swift_slowDealloc();
          }
          else
          {
            swift_bridgeObjectRelease_n();
          }

          sub_100431F80(&qword_100A47370);
          uint64_t v44 = swift_allocObject();
          *(_OWORD *)(v44 + 16) = xmmword_100794E30;
          *(void *)(v44 + 32) = v36;
          sub_100431F80(&qword_100A47378);
          Class isa = sub_100726560().super.isa;
          swift_bridgeObjectRelease();
          [v61 recvStableKeyMaterialForFrameworkCache:isa];

          (*(void (**)(char *))(*(void *)a1 + 272))(&v27[*(int *)(v16 + 20)]);
        }
        sub_1004ED31C((uint64_t)v27, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v32 = (uint64_t)v62;
      }
      sub_1004546B8(v64, (uint64_t)v12, &qword_100A44A50);
      if (v33(v12, 1, v16) == 1)
      {
        swift_unknownObjectRelease();
        sub_10044C150((uint64_t)v12, &qword_100A44A50);
      }
      else
      {
        uint64_t v46 = v63;
        sub_1004ED2B4((uint64_t)v12, v63, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        sub_1004ED24C(v46, v32, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v47 = sub_100725EB0();
        os_log_type_t v48 = sub_1007266E0();
        if (os_log_type_enabled(v47, v48))
        {
          uint64_t v49 = swift_slowAlloc();
          uint64_t v66 = swift_slowAlloc();
          *(_DWORD *)uint64_t v49 = 136315394;
          uint64_t v65 = sub_10043E578(0xD00000000000004ELL, 0x80000001008C4220, &v66);
          sub_100726830();
          *(_WORD *)(v49 + 12) = 2080;
          sub_100725D30();
          sub_1004ECCA4(&qword_100A45210, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v50 = sub_100726D00();
          uint64_t v65 = sub_10043E578(v50, v51, &v66);
          sub_100726830();
          swift_bridgeObjectRelease();
          sub_1004ED31C((uint64_t)v62, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          _os_log_impl((void *)&_mh_execute_header, v47, v48, "%s: has outdated SKI %s", (uint8_t *)v49, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          sub_1004ED31C(v32, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        }
        id v52 = v61;
        Class v53 = sub_100725CE0().super.isa;
        [v52 hasOutdatedSKI:v53];
        swift_unknownObjectRelease();

        sub_1004ED31C(v46, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      }
    }
  }
}

void sub_1004E3820(void *a1, char a2, char a3)
{
  uint64_t v4 = v3;
  id v7 = a1;
  uint64_t v8 = sub_100725EB0();
  os_log_type_t v9 = sub_1007266E0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136315906;
    sub_10043E578(0xD000000000000035, 0x80000001008C4270, &v16);
    sub_100726830();
    *(_WORD *)(v10 + 12) = 2048;
    sub_100726830();

    *(_WORD *)(v10 + 22) = 1024;
    sub_100726830();
    *(_WORD *)(v10 + 28) = 1024;
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%s: forParticipant: %llu; forMKM: %{BOOL}d; forSKM: %{BOOL}d",
      (uint8_t *)v10,
      0x22u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v11 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v4) + 0xF0))();
  if (v11)
  {
    uint64_t v12 = v11;
    if (a2) {
      (*(void (**)(id, void))((swift_isaMask & *v11) + 0x108))(v7, 0);
    }
    if (a3) {
      (*(void (**)(id, uint64_t))((swift_isaMask & *v12) + 0x108))(v7, 1);
    }
  }
  else
  {
    uint64_t v13 = sub_100725EB0();
    os_log_type_t v14 = sub_1007266E0();
    if (os_log_type_enabled(v13, v14))
    {
      id v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)id v15 = 136315138;
      sub_10043E578(0xD000000000000035, 0x80000001008C4270, &v16);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "%s: no exchange controllers", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

void sub_1004E3C50(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest(0);
  uint64_t v10 = __chkstk_darwin(v8, v9);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10, v13);
  id v15 = (char *)&v30 - v14;
  uint64_t v16 = (char *)v3 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_l;
  sub_1004ED24C(a1, (uint64_t)&v30 - v14, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  uint64_t v17 = a2;
  uint64_t v33 = v16;
  uint64_t v18 = sub_100725EB0();
  os_log_type_t v19 = sub_1007266E0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v31 = a1;
    uint64_t v21 = v20;
    uint64_t v30 = swift_slowAlloc();
    uint64_t v35 = v30;
    *(_DWORD *)uint64_t v21 = 136315650;
    uint64_t v34 = sub_10043E578(0xD000000000000031, 0x80000001008C1A20, &v35);
    uint64_t v32 = a3;
    sub_100726830();
    *(_WORD *)(v21 + 12) = 2080;
    sub_1004ED24C((uint64_t)v15, (uint64_t)v12, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
    uint64_t v22 = sub_100726480();
    uint64_t v34 = sub_10043E578(v22, v23, &v35);
    sub_100726830();
    swift_bridgeObjectRelease();
    sub_1004ED31C((uint64_t)v15, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
    *(_WORD *)(v21 + 22) = 2048;
    uint64_t v24 = *(void *)&v17[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID];

    uint64_t v34 = v24;
    a3 = v32;
    sub_100726830();

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s: keyRecoveryRequest: %s; forParticipant: %llu",
      (uint8_t *)v21,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    a1 = v31;
    swift_slowDealloc();
  }
  else
  {

    sub_1004ED31C((uint64_t)v15, type metadata accessor for IDSGroupEncryptionControllerParticipantKeyRecoveryRequest);
  }
  uint64_t v25 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v4) + 0xF0))();
  if (v25)
  {
    uint64_t v26 = v25;
    (*(void (**)(uint64_t, char *, uint64_t))((swift_isaMask & *v25) + 0xF0))(a1, v17, a3);
  }
  else
  {
    uint64_t v27 = sub_100725EB0();
    os_log_type_t v28 = sub_1007266E0();
    if (os_log_type_enabled(v27, v28))
    {
      NSString v29 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      *(_DWORD *)NSString v29 = 136315138;
      uint64_t v34 = sub_10043E578(0xD000000000000031, 0x80000001008C1A20, &v35);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "%s: no exchange controllers", v29, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

void *sub_1004E40B8(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v218 = a4;
  uint64_t v199 = a2;
  uint64_t v220 = a1;
  uint64_t v216 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v8 = __chkstk_darwin(v216, v7);
  uint64_t v213 = (uint64_t)&v198 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8, v10);
  uint64_t v212 = (uint64_t)&v198 - v11;
  uint64_t v12 = sub_100431F80(&qword_100A453F8);
  uint64_t v14 = __chkstk_darwin(v12 - 8, v13);
  uint64_t v217 = (char *)&v198 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14, v16);
  uint64_t v215 = (char *)&v198 - v17;
  uint64_t v219 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v209 = *(uint64_t (**)())(v219 - 8);
  uint64_t v19 = __chkstk_darwin(v219, v18);
  uint64_t v204 = (uint64_t)&v198 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __chkstk_darwin(v19, v21);
  uint64_t v211 = (uint64_t)&v198 - v23;
  __chkstk_darwin(v22, v24);
  uint64_t v214 = (uint64_t)&v198 - v25;
  uint64_t v26 = sub_100431F80(&qword_100A44A50);
  __chkstk_darwin(v26 - 8, v27);
  uint64_t v210 = (uint64_t)&v198 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v223 = (char *)type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v29 = *((void *)v223 - 1);
  uint64_t v31 = __chkstk_darwin(v223, v30);
  uint64_t v206 = (uint64_t)&v198 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v31, v33);
  uint64_t v205 = (uint64_t)&v198 - v35;
  uint64_t v37 = __chkstk_darwin(v34, v36);
  uint64_t v203 = (uint64_t)&v198 - v38;
  uint64_t v40 = __chkstk_darwin(v37, v39);
  unint64_t v208 = (uint64_t (*)(uint64_t))((char *)&v198 - v41);
  uint64_t v43 = __chkstk_darwin(v40, v42);
  uint64_t v45 = (char *)&v198 - v44;
  uint64_t v47 = __chkstk_darwin(v43, v46);
  uint64_t v49 = (char *)&v198 - v48;
  char v233 = &_swiftEmptySetSingleton;
  uint64_t v50 = *(void **)((char *)v4
                   + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController);
  uint64_t v51 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v50) + 0x1F0))(v47);
  uint64_t v52 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v50) + 0x1D8))(v51);
  uint64_t v53 = *(void *)(v52 + 56);
  uint64_t v224 = v52 + 56;
  uint64_t v54 = 1 << *(unsigned char *)(v52 + 32);
  uint64_t v55 = -1;
  if (v54 < 64) {
    uint64_t v55 = ~(-1 << v54);
  }
  unint64_t v56 = v55 & v53;
  uint64_t v227 = v5;
  uint64_t v228 = v52;
  __int16 v229 = (uint64_t (*)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))((char *)v5
                                                                                     + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_l);
  int64_t v225 = (unint64_t)(v54 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v57 = 0;
  *(void *)&long long v58 = 136315394;
  long long v226 = v58;
  unint64_t v207 = (unint64_t)"ialSet(forGroupID:)";
  unint64_t v222 = 0x80000001008C1330;
  char v221 = (char *)&type metadata for Any + 8;
  uint64_t v200 = a3;
  if (v56) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v61 = v57 + 1;
  if (__OFADD__(v57, 1))
  {
    __break(1u);
    goto LABEL_127;
  }
  if (v61 < v225)
  {
    unint64_t v62 = *(void *)(v224 + 8 * v61);
    ++v57;
    if (v62) {
      goto LABEL_20;
    }
    int64_t v57 = v61 + 1;
    if (v61 + 1 >= v225) {
      goto LABEL_24;
    }
    unint64_t v62 = *(void *)(v224 + 8 * v57);
    if (v62) {
      goto LABEL_20;
    }
    int64_t v57 = v61 + 2;
    if (v61 + 2 >= v225) {
      goto LABEL_24;
    }
    unint64_t v62 = *(void *)(v224 + 8 * v57);
    if (v62)
    {
LABEL_20:
      unint64_t v56 = (v62 - 1) & v62;
      for (unint64_t i = __clz(__rbit64(v62)) + (v57 << 6); ; unint64_t i = v59 | (v57 << 6))
      {
        sub_1004ED24C(*(void *)(v228 + 48) + *(void *)(v29 + 72) * i, (uint64_t)v49, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        sub_1004ED2B4((uint64_t)v49, (uint64_t)v45, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
        uint64_t v64 = sub_100725EB0();
        os_log_type_t v65 = sub_1007266E0();
        if (os_log_type_enabled(v64, v65))
        {
          a3 = (char *)swift_slowAlloc();
          v239[0] = swift_slowAlloc();
          *(_DWORD *)a3 = v226;
          *(void *)(a3 + 4) = sub_10043E578(0xD000000000000027, v222, v239);
          *((_WORD *)a3 + 6) = 2080;
          uint64_t v66 = sub_100725CD0();
          *(void *)(a3 + 14) = sub_10043E578(v66, v67, v239);
          swift_bridgeObjectRelease();
          sub_1004ED31C((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          _os_log_impl((void *)&_mh_execute_header, v64, v65, "%s: including MKM with MKI: %s", (uint8_t *)a3, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          if (!v56) {
            goto LABEL_7;
          }
        }
        else
        {

          sub_1004ED31C((uint64_t)v45, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          if (!v56) {
            goto LABEL_7;
          }
        }
LABEL_6:
        unint64_t v59 = __clz(__rbit64(v56));
        v56 &= v56 - 1;
      }
    }
    int64_t v63 = v61 + 3;
    if (v63 < v225)
    {
      unint64_t v62 = *(void *)(v224 + 8 * v63);
      if (v62)
      {
        int64_t v57 = v63;
        goto LABEL_20;
      }
      while (1)
      {
        int64_t v57 = v63 + 1;
        if (__OFADD__(v63, 1)) {
          break;
        }
        if (v57 >= v225) {
          goto LABEL_24;
        }
        unint64_t v62 = *(void *)(v224 + 8 * v57);
        ++v63;
        if (v62) {
          goto LABEL_20;
        }
      }
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
  }
LABEL_24:
  uint64_t v68 = swift_release();
  char v232 = &_swiftEmptySetSingleton;
  uint64_t v69 = v210;
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)((char *)v227
                                                                 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController))
                                  + 0x118))(v68);
  if ((*(unsigned int (**)(uint64_t, uint64_t, char *))(v29 + 48))(v69, 1, v223) == 1)
  {
    uint64_t v70 = sub_10044C150(v69, &qword_100A44A50);
  }
  else
  {
    unint64_t v71 = v208;
    sub_1004ED2B4(v69, (uint64_t)v208, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v72 = v205;
    sub_1004ED24C((uint64_t)v71, v205, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v73 = v203;
    sub_10043F7EC(v203, v72);
    sub_1004ED31C(v73, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v74 = v206;
    sub_1004ED24C((uint64_t)v71, v206, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v75 = sub_100725EB0();
    os_log_type_t v76 = sub_1007266E0();
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      v239[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = v226;
      uint64_t v234 = sub_10043E578(0xD000000000000027, v207 | 0x8000000000000000, v239);
      sub_100726830();
      *(_WORD *)(v77 + 12) = 2080;
      uint64_t v78 = sub_100725CD0();
      uint64_t v234 = sub_10043E578(v78, v79, v239);
      sub_100726830();
      swift_bridgeObjectRelease();
      sub_1004ED31C(v74, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "%s: including SKM with SKI: %s", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_1004ED31C(v74, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    }

    uint64_t v70 = sub_1004ED31C((uint64_t)v71, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  }
  a3 = *(char **)((swift_isaMask & *v227) + 0x108);
  uint64_t v80 = ((uint64_t (*)(uint64_t))a3)(v70);
  if (v80)
  {
    uint64_t v82 = v81;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v84 = (*(uint64_t (**)(uint64_t, uint64_t))(v82 + 16))(ObjectType, v82);
    uint64_t v80 = swift_unknownObjectRelease();
    goto LABEL_34;
  }
  if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0) {
    goto LABEL_130;
  }
LABEL_33:
  uint64_t v84 = (uint64_t)&_swiftEmptySetSingleton;
LABEL_34:
  if (((uint64_t (*)(uint64_t))a3)(v80))
  {
    uint64_t v86 = v85;
    uint64_t v87 = swift_getObjectType();
    char v88 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v86 + 24))(v87, v86);
    swift_unknownObjectRelease();
  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_100726BA0())
  {
    sub_1004614E8((unint64_t)_swiftEmptyArrayStorage);
    char v88 = v197;
  }
  else
  {
    char v88 = &_swiftEmptySetSingleton;
  }
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v89 = sub_100725EB0();
  os_log_type_t v90 = sub_1007266E0();
  int v91 = v90;
  BOOL v92 = os_log_type_enabled(v89, v90);
  uint64_t v224 = (uint64_t)v88;
  if (v92)
  {
    uint64_t v93 = swift_slowAlloc();
    LODWORD(v225) = v91;
    uint64_t v94 = v93;
    char v223 = (char *)swift_slowAlloc();
    v239[0] = (uint64_t)v223;
    *(_DWORD *)uint64_t v94 = 136315650;
    uint64_t v234 = sub_10043E578(0xD000000000000027, v207 | 0x8000000000000000, v239);
    sub_100726830();
    *(_WORD *)(v94 + 12) = 2080;
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    sub_1004ECCA4((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
    swift_bridgeObjectRetain();
    uint64_t v95 = sub_100726650();
    unint64_t v97 = v96;
    swift_bridgeObjectRelease();
    uint64_t v234 = sub_10043E578(v95, v97, v239);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v94 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v98 = sub_100726650();
    unint64_t v100 = v99;
    swift_bridgeObjectRelease();
    uint64_t v234 = sub_10043E578(v98, v100, v239);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v89, (os_log_type_t)v225, "%s: computing for standard participants: %s; lightweight participants: %s",
      (uint8_t *)v94,
      0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  if ((v84 & 0xC000000000000001) != 0)
  {
    sub_1007268E0();
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    sub_1004ECCA4((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
    sub_100726680();
    uint64_t v84 = v234;
    char v221 = v235;
    uint64_t v101 = v236;
    int64_t v102 = v237;
    unint64_t v103 = v238;
  }
  else
  {
    int64_t v102 = 0;
    uint64_t v104 = -1 << *(unsigned char *)(v84 + 32);
    uint64_t v105 = *(void *)(v84 + 56);
    char v221 = (char *)(v84 + 56);
    uint64_t v106 = ~v104;
    uint64_t v107 = -v104;
    if (v107 < 64) {
      uint64_t v108 = ~(-1 << v107);
    }
    else {
      uint64_t v108 = -1;
    }
    unint64_t v103 = v108 & v105;
    uint64_t v101 = v106;
  }
  uint64_t v206 = v84 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v198 = v101;
  uint64_t v210 = (unint64_t)(v101 + 64) >> 6;
  char v223 = (char *)v209 + 48;
  unint64_t v202 = v207 | 0x8000000000000000;
  uint64_t v201 = (char *)&type metadata for Any + 8;
  uint64_t v205 = (uint64_t)&type metadata for Swift.AnyObject + 8;
  uint64_t v203 = v84;
  if ((v84 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      if (v103)
      {
        uint64_t v113 = (v103 - 1) & v103;
        unint64_t v114 = __clz(__rbit64(v103)) | (v102 << 6);
        int64_t v112 = v102;
        a3 = (char *)&swift_isaMask;
      }
      else
      {
        int64_t v115 = v102 + 1;
        a3 = (char *)&swift_isaMask;
        if (__OFADD__(v102, 1))
        {
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          uint64_t v80 = sub_100726BA0();
          if (v80)
          {
            sub_1004614E8((unint64_t)_swiftEmptyArrayStorage);
            uint64_t v84 = v80;
            goto LABEL_34;
          }
          goto LABEL_33;
        }
        if (v115 >= v210) {
          goto LABEL_84;
        }
        unint64_t v116 = *(void *)&v221[8 * v115];
        int64_t v112 = v102 + 1;
        if (!v116)
        {
          int64_t v112 = v102 + 2;
          if (v102 + 2 >= v210) {
            goto LABEL_84;
          }
          unint64_t v116 = *(void *)&v221[8 * v112];
          if (!v116)
          {
            int64_t v112 = v102 + 3;
            if (v102 + 3 >= v210) {
              goto LABEL_84;
            }
            unint64_t v116 = *(void *)&v221[8 * v112];
            if (!v116)
            {
              int64_t v112 = v102 + 4;
              if (v102 + 4 >= v210) {
                goto LABEL_84;
              }
              unint64_t v116 = *(void *)&v221[8 * v112];
              if (!v116)
              {
                int64_t v117 = v102 + 5;
                while (v210 != v117)
                {
                  unint64_t v116 = *(void *)&v221[8 * v117++];
                  if (v116)
                  {
                    int64_t v112 = v117 - 1;
                    goto LABEL_66;
                  }
                }
                goto LABEL_84;
              }
            }
          }
        }
LABEL_66:
        uint64_t v113 = (v116 - 1) & v116;
        unint64_t v114 = __clz(__rbit64(v116)) + (v112 << 6);
      }
      uint64_t v111 = *(id *)(*(void *)(v84 + 48) + 8 * v114);
      os_log_type_t v110 = v111;
      if (!v111) {
        goto LABEL_84;
      }
LABEL_68:
      int64_t v225 = v112;
      uint64_t v118 = OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID;
      uint64_t v119 = *(void *)((char *)v110
                       + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID);
      uint64_t v120 = *(uint64_t (**)(void *))((swift_isaMask & *v227) + 0x198);
      uint64_t v121 = v120(v111);
      if (v119 == v121)
      {
        char v122 = v110;
        uint64_t v123 = sub_100725EB0();
        os_log_type_t v124 = sub_1007266E0();
        if (os_log_type_enabled(v123, v124))
        {
          uint64_t v125 = swift_slowAlloc();
          unint64_t v126 = (void *)swift_slowAlloc();
          v239[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v125 = v226;
          *(void *)(v125 + 4) = sub_10043E578(0xD000000000000027, v202, v239);
          *(_WORD *)(v125 + 12) = 2112;
          *(void *)(v125 + 14) = v122;
          *unint64_t v126 = v110;

          _os_log_impl((void *)&_mh_execute_header, v123, v124, "%s: skipping standard localParticipant %@", (uint8_t *)v125, 0x16u);
          sub_100431F80(&qword_100A44F10);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        int64_t v102 = v225;
        unint64_t v103 = v113;
        if (v84 < 0) {
          break;
        }
      }
      else
      {
        unint64_t v222 = v113;
        uint64_t v127 = (uint64_t)v215;
        (*(void (**)(uint64_t))((swift_isaMask & *v110) + 0x108))(v121);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v223)(v127, 1, v219) == 1)
        {
          sub_10044C150(v127, &qword_100A453F8);
          char v128 = v110;
          uint64_t v129 = sub_100725EB0();
          os_log_type_t v130 = sub_1007266E0();
          if (os_log_type_enabled(v129, v130))
          {
            uint64_t v131 = swift_slowAlloc();
            uint64_t v132 = (void *)swift_slowAlloc();
            v239[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v131 = v226;
            *(void *)(v131 + 4) = sub_10043E578(0xD000000000000027, v207 | 0x8000000000000000, v239);
            *(_WORD *)(v131 + 12) = 2112;
            *(void *)(v131 + 14) = v128;
            *uint64_t v132 = v110;

            _os_log_impl((void *)&_mh_execute_header, v129, v130, "%s: Cannot generate desired material for %@: don't have standard participant's public key", (uint8_t *)v131, 0x16u);
            sub_100431F80(&qword_100A44F10);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
        }
        else
        {
          uint64_t v133 = v127;
          uint64_t v134 = v214;
          sub_1004ED2B4(v133, v214, type metadata accessor for IDSGroupEncryptionPublicIdentity);
          unint64_t v208 = type metadata accessor for IDSGroupEncryptionPublicIdentity;
          uint64_t v135 = v211;
          sub_1004ED24C(v134, v211, type metadata accessor for IDSGroupEncryptionPublicIdentity);
          uint64_t v136 = *(void *)((char *)v110 + v118);
          uint64_t v137 = v228;
          uint64_t v138 = swift_bridgeObjectRetain();
          uint64_t v139 = v120((void *)v138);
          uint64_t v140 = v213;
          sub_100533D88(0, v137, v135, v136, v139, v213);
          swift_storeEnumTagMultiPayload();
          uint64_t v141 = v212;
          sub_10045FA4C(v212, v140);
          uint64_t v209 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer;
          sub_1004ED31C(v141, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
          uint64_t v142 = (uint64_t)v232;
          sub_1004ED24C(v134, v135, v208);
          uint64_t v143 = *(void *)((char *)v110 + v118);
          uint64_t v144 = swift_bridgeObjectRetain();
          uint64_t v145 = v120((void *)v144);
          sub_100533D88(1, v142, v135, v143, v145, v140);
          swift_storeEnumTagMultiPayload();
          uint64_t v146 = v140;
          uint64_t v84 = v203;
          sub_10045FA4C(v141, v146);

          sub_1004ED31C(v141, (uint64_t (*)(void))v209);
          sub_1004ED31C(v214, type metadata accessor for IDSGroupEncryptionPublicIdentity);
        }
        int64_t v102 = v225;
        unint64_t v103 = v222;
        if (v84 < 0) {
          break;
        }
      }
    }
  }
  uint64_t v109 = sub_100726950();
  if (v109)
  {
    char v231 = (void *)v109;
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    os_log_type_t v110 = (void *)v239[0];
    uint64_t v111 = (void *)swift_unknownObjectRelease();
    int64_t v112 = v102;
    uint64_t v113 = v103;
    a3 = (char *)&swift_isaMask;
    if (v110) {
      goto LABEL_68;
    }
  }
  else
  {
    a3 = (char *)&swift_isaMask;
  }
LABEL_84:
  sub_100462C48();
  swift_bridgeObjectRelease();
  uint64_t v147 = v224;
  if ((v224 & 0xC000000000000001) != 0)
  {
    sub_1007268E0();
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    sub_1004ECCA4((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
    sub_100726680();
    uint64_t v147 = v239[0];
    unint64_t v222 = v239[1];
    NSString v148 = (uint64_t (*)(uint64_t))v239[2];
    uint64_t v149 = v239[3];
    unint64_t v150 = v239[4];
  }
  else
  {
    uint64_t v149 = 0;
    uint64_t v151 = -1 << *(unsigned char *)(v224 + 32);
    uint64_t v152 = *(void *)(v224 + 56);
    unint64_t v222 = v224 + 56;
    uint64_t v153 = ~v151;
    uint64_t v154 = -v151;
    if (v154 < 64) {
      uint64_t v155 = ~(-1 << v154);
    }
    else {
      uint64_t v155 = -1;
    }
    unint64_t v150 = v155 & v152;
    NSString v148 = (uint64_t (*)(uint64_t))v153;
  }
  uint64_t v156 = v218;
  uint64_t v157 = (uint64_t)v217;
  uint64_t v215 = (char *)(v147 & 0x7FFFFFFFFFFFFFFFLL);
  unint64_t v208 = v148;
  char v221 = (char *)(((unint64_t)v148 + 64) >> 6);
  uint64_t v210 = v207 | 0x8000000000000000;
  uint64_t v209 = (uint64_t (*)())((char *)&type metadata for Any + 8);
  uint64_t v214 = (uint64_t)&type metadata for Swift.AnyObject + 8;
  uint64_t v224 = v147;
  if ((v147 & 0x8000000000000000) == 0)
  {
    while (1)
    {
      if (v150)
      {
        uint64_t v162 = (v150 - 1) & v150;
        unint64_t v163 = __clz(__rbit64(v150)) | (v149 << 6);
        int64_t v161 = v149;
      }
      else
      {
        uint64_t v164 = v149 + 1;
        if (__OFADD__(v149, 1)) {
          goto LABEL_129;
        }
        if (v164 >= (uint64_t)v221) {
          goto LABEL_122;
        }
        unint64_t v165 = *(void *)(v222 + 8 * v164);
        int64_t v161 = v149 + 1;
        if (!v165)
        {
          int64_t v161 = v149 + 2;
          if (v149 + 2 >= (uint64_t)v221) {
            goto LABEL_122;
          }
          unint64_t v165 = *(void *)(v222 + 8 * v161);
          if (!v165)
          {
            int64_t v161 = v149 + 3;
            if (v149 + 3 >= (uint64_t)v221) {
              goto LABEL_122;
            }
            unint64_t v165 = *(void *)(v222 + 8 * v161);
            if (!v165)
            {
              int64_t v161 = v149 + 4;
              if (v149 + 4 >= (uint64_t)v221) {
                goto LABEL_122;
              }
              unint64_t v165 = *(void *)(v222 + 8 * v161);
              if (!v165)
              {
                uint64_t v166 = (char *)(v149 + 5);
                while (v221 != v166)
                {
                  unint64_t v165 = *(void *)(v222 + 8 * (void)v166++);
                  if (v165)
                  {
                    int64_t v161 = (int64_t)(v166 - 1);
                    goto LABEL_111;
                  }
                }
                goto LABEL_122;
              }
            }
          }
        }
LABEL_111:
        uint64_t v162 = (v165 - 1) & v165;
        unint64_t v163 = __clz(__rbit64(v165)) + (v161 << 6);
      }
      BOOL v160 = *(id *)(*(void *)(v147 + 48) + 8 * v163);
      unsigned int v159 = v160;
      if (!v160) {
        goto LABEL_122;
      }
LABEL_113:
      int64_t v225 = v161;
      uint64_t v228 = v162;
      uint64_t v167 = OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID;
      uint64_t v168 = *(void *)((char *)v159
                       + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID);
      int v169 = *(uint64_t (**)(void *))((swift_isaMask & *v227) + 0x198);
      uint64_t v170 = v169(v160);
      if (v168 == v170) {
        break;
      }
      (*(void (**)(uint64_t))((swift_isaMask & *v159) + 0x108))(v170);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v223)(v157, 1, v219) == 1)
      {
        sub_10044C150(v157, &qword_100A453F8);
        uint64_t v171 = v159;
        uint64_t v172 = sub_100725EB0();
        os_log_type_t v176 = sub_1007266E0();
        if (os_log_type_enabled(v172, v176))
        {
          uint64_t v177 = swift_slowAlloc();
          uint64_t v178 = (void *)swift_slowAlloc();
          char v231 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v177 = v226;
          *(void *)(v177 + 4) = sub_10043E578(0xD000000000000027, v207 | 0x8000000000000000, (uint64_t *)&v231);
          *(_WORD *)(v177 + 12) = 2112;
          *(void *)(v177 + 14) = v171;
          void *v178 = v159;

          _os_log_impl((void *)&_mh_execute_header, v172, v176, "%s: Cannot generate desired material for %@: don't have lightweight participant's public key", (uint8_t *)v177, 0x16u);
          sub_100431F80(&qword_100A44F10);
          swift_arrayDestroy();
          swift_slowDealloc();
          goto LABEL_119;
        }
LABEL_94:

LABEL_95:
        uint64_t v147 = v224;
        uint64_t v149 = v225;
        unint64_t v150 = v228;
        uint64_t v156 = v218;
        uint64_t v157 = (uint64_t)v217;
        if (v224 < 0) {
          goto LABEL_91;
        }
      }
      else
      {
        uint64_t v179 = v204;
        sub_1004ED2B4(v157, v204, type metadata accessor for IDSGroupEncryptionPublicIdentity);
        uint64_t v180 = (uint64_t)v232;
        uint64_t v181 = v211;
        sub_1004ED24C(v179, v211, type metadata accessor for IDSGroupEncryptionPublicIdentity);
        uint64_t v182 = *(void *)((char *)v159 + v167);
        uint64_t v183 = swift_bridgeObjectRetain();
        uint64_t v184 = v169((void *)v183);
        uint64_t v185 = v213;
        sub_100533D88(1, v180, v181, v182, v184, v213);
        swift_storeEnumTagMultiPayload();
        uint64_t v186 = v212;
        sub_10045FA4C(v212, v185);

        sub_1004ED31C(v186, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
        uint64_t v187 = v179;
        a3 = (char *)&swift_isaMask;
        sub_1004ED31C(v187, type metadata accessor for IDSGroupEncryptionPublicIdentity);
        uint64_t v147 = v224;
        uint64_t v149 = v225;
        unint64_t v150 = v228;
        if (v224 < 0) {
          goto LABEL_91;
        }
      }
    }
    uint64_t v171 = v159;
    uint64_t v172 = sub_100725EB0();
    os_log_type_t v173 = sub_1007266E0();
    if (os_log_type_enabled(v172, v173))
    {
      uint64_t v174 = swift_slowAlloc();
      uint64_t v175 = (void *)swift_slowAlloc();
      char v231 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v174 = v226;
      *(void *)(v174 + 4) = sub_10043E578(0xD000000000000027, v210, (uint64_t *)&v231);
      *(_WORD *)(v174 + 12) = 2112;
      *(void *)(v174 + 14) = v171;
      void *v175 = v159;

      _os_log_impl((void *)&_mh_execute_header, v172, v173, "%s: skipping lightweight localParticipant %@", (uint8_t *)v174, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
LABEL_119:
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_95;
    }
    goto LABEL_94;
  }
LABEL_91:
  uint64_t v158 = sub_100726950();
  if (v158)
  {
    uint64_t v230 = v158;
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    unsigned int v159 = v231;
    BOOL v160 = (void *)swift_unknownObjectRelease();
    int64_t v161 = v149;
    uint64_t v162 = v150;
    if (v159) {
      goto LABEL_113;
    }
  }
LABEL_122:
  sub_100462C48();
  uint64_t v188 = swift_bridgeObjectRelease();
  uint64_t v228 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v227) + 0x120))(v188);
  uint64_t v189 = *(void *)(v228 + 16);
  uint64_t v190 = v200;
  uint64_t v191 = v199;
  if (v189)
  {
    uint64_t v192 = (uint64_t *)(v228 + 40);
    do
    {
      uint64_t v193 = *v192;
      uint64_t v194 = swift_getObjectType();
      __int16 v229 = *(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))(v193 + 8);
      swift_unknownObjectRetain();
      uint64_t v195 = v229(v220, v191, v190, v156, v194, v193);
      sub_1004E5EDC(v195);
      swift_unknownObjectRelease();
      v192 += 2;
      --v189;
    }
    while (v189);
  }
  swift_bridgeObjectRelease();
  return v233;
}

uint64_t sub_1004E5EDC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v5 = __chkstk_darwin(v2 - 8, v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v5, v8);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t result = __chkstk_darwin(v9, v12);
  uint64_t v15 = (char *)&v27 - v14;
  int64_t v16 = 0;
  uint64_t v17 = a1 + 56;
  uint64_t v18 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & *(void *)(a1 + 56);
  int64_t v21 = (unint64_t)(v18 + 63) >> 6;
  while (1)
  {
    if (v20)
    {
      unint64_t v22 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v23 = v22 | (v16 << 6);
      goto LABEL_5;
    }
    int64_t v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v24 >= v21) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v17 + 8 * v24);
    ++v16;
    if (!v25)
    {
      int64_t v16 = v24 + 1;
      if (v24 + 1 >= v21) {
        return swift_release();
      }
      unint64_t v25 = *(void *)(v17 + 8 * v16);
      if (!v25)
      {
        int64_t v16 = v24 + 2;
        if (v24 + 2 >= v21) {
          return swift_release();
        }
        unint64_t v25 = *(void *)(v17 + 8 * v16);
        if (!v25)
        {
          int64_t v16 = v24 + 3;
          if (v24 + 3 >= v21) {
            return swift_release();
          }
          unint64_t v25 = *(void *)(v17 + 8 * v16);
          if (!v25) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v20 = (v25 - 1) & v25;
    unint64_t v23 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_5:
    sub_1004ED24C(*(void *)(a1 + 48) + *(void *)(v3 + 72) * v23, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_1004ED2B4((uint64_t)v15, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
    sub_10045FA4C((uint64_t)v11, (uint64_t)v7);
    uint64_t result = sub_1004ED31C((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionDesiredMaterialSetContainer);
  }
  int64_t v26 = v24 + 4;
  if (v26 >= v21) {
    return swift_release();
  }
  unint64_t v25 = *(void *)(v17 + 8 * v26);
  if (v25)
  {
    int64_t v16 = v26;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v16 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v16 >= v21) {
      return swift_release();
    }
    unint64_t v25 = *(void *)(v17 + 8 * v16);
    ++v26;
    if (v25) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1004E6148(uint64_t a1)
{
  uint64_t v2 = v1;
  if (!(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x108))()) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v5 = v4;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, ObjectType, v5);
  uint64_t v8 = swift_unknownObjectRelease();
  if (!v7) {
    return &_swiftEmptySetSingleton;
  }
  uint64_t v9 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v7) + 0xB0))(v8);

  if (!v9) {
    return &_swiftEmptySetSingleton;
  }
  if ((*(uint64_t (**)(void))((swift_isaMask & *v9) + 0x80))())
  {

    return &_swiftEmptySetSingleton;
  }
  uint64_t v12 = sub_100725EB0();
  os_log_type_t v13 = sub_1007266E0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    sub_10043E578(0xD000000000000024, 0x80000001008C42B0, &v15);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v10 = (*(uint64_t (**)(uint64_t))(**(void **)((char *)v2
                                                         + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache)
                                           + 320))(a1);

  return (void *)v10;
}

void sub_1004E63DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_10043E578(0xD000000000000018, 0x80000001008C42E0, &v13);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0xF0))(v5);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = (*(uint64_t (**)(void *))((swift_isaMask & *v6) + 0xD8))(v6);
    uint64_t v9 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x258))(v8);
    (*(void (**)(uint64_t))((swift_isaMask & *v1) + 0x268))(v9);
  }
  else
  {
    uint64_t v10 = sub_100725EB0();
    os_log_type_t v11 = sub_1007266E0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136315138;
      sub_10043E578(0xD000000000000018, 0x80000001008C42E0, &v13);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%s: no exchange controllers", v12, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1004E671C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_10043E578(0xD000000000000017, 0x80000001008C4300, &v13);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v7 = __chkstk_darwin(v5, v6);
  __chkstk_darwin(v7, v8);
  uint64_t v10 = v9 + 4;
  os_unfair_lock_lock(v9 + 4);
  sub_100469128();
  os_unfair_lock_unlock(v10);
  uint64_t v11 = (*(uint64_t (**)(void))(**(void **)(v1
                                           + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache)
                             + 288))();
  return (*(uint64_t (**)(uint64_t))(**(void **)(v1
                                                          + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmCache)
                                            + 288))(v11);
}

uint64_t sub_1004E6970(void *a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A44A50);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v7 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  v7(v5, 1, 1, v6);
  (*(void (**)(char *))((swift_isaMask & *a1) + 0x158))(v5);
  v7(v5, 1, 1, v6);
  (*(void (**)(char *))((swift_isaMask & *a1) + 0x170))(v5);
  return (*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x188))(0);
}

uint64_t sub_1004E6B20()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_10043E578(0xD00000000000002DLL, 0x80000001008C4320, &v7);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x218))(v5);
}

void sub_1004E6CA4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100725EB0();
  os_log_type_t v5 = sub_1007266E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_10043E578(0xD000000000000028, 0x80000001008C4350, &v7);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (*(void *)(v2 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache) == a1) {
    sub_1004E8AA0();
  }
}

void sub_1004E6E08(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_bridgeObjectRetain_n();
  uint64_t v4 = sub_100725EB0();
  os_log_type_t v5 = sub_1007266E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315394;
    sub_10043E578(0xD000000000000017, 0x80000001008C0670, &v13);
    sub_100726830();
    *(_WORD *)(v6 + 12) = 2080;
    type metadata accessor for IDSGroupEncryptionControllerMember();
    sub_1004ECCA4((unint64_t *)&qword_100A44A78, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerMember);
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_100726650();
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    sub_10043E578(v7, v9, &v13);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s: members %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  (*(void (**)(uint64_t))((swift_isaMask & **(void **)((char *)v2
                                                                 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController))
                                  + 0x140))(a1);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)((char *)v2
                                                                 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController))
                                  + 0x140))(a1);
  (*(void (**)(uint64_t))(**(void **)((char *)v2
                                                + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache)
                                  + 304))(a1);
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(**(void **)((char *)v2
                                                         + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmCache)
                                           + 304))(a1);
  uint64_t v11 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xF0))(v10);
  if (v11)
  {
    uint64_t v12 = v11;
    (*(void (**)(uint64_t))((swift_isaMask & *v11) + 0xF8))(a1);
  }
}

uint64_t sub_1004E71B4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100725EB0();
  os_log_type_t v5 = sub_1007266E0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_10043E578(0xD000000000000019, 0x80000001008C1DA0, &v13);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  unint64_t v8 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0xF0))(v7);
  if (v8)
  {
    unint64_t v9 = v8;
    (*(void (**)(uint64_t))((swift_isaMask & *v8) + 0x100))(a1);
  }
  uint64_t v10 = (*(uint64_t (**)(void *))((swift_isaMask & **(void **)((char *)v2
                                                                           + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController))
                                            + 0x160))(v8);
  uint64_t v11 = (*(uint64_t (**)(uint64_t))((swift_isaMask & **(void **)((char *)v2
                                                                          + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController))
                                           + 0x160))(v10);
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v2) + 0x218))(v11);
}

uint64_t sub_1004E7448()
{
  uint64_t v1 = sub_100431F80(&qword_100A44A50);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v8 = __chkstk_darwin(v5, v7);
  uint64_t v10 = &v28[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)((char *)v0
                                                                 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController))
                                  + 0x118))(v8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10044C150((uint64_t)v4, &qword_100A44A50);
    uint64_t v11 = sub_100725EB0();
    os_log_type_t v12 = sub_1007266E0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      uint64_t v29 = sub_10043E578(0xD000000000000020, 0x80000001008C46D0, &v30);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s: no current material", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v14 = sub_1004ED2B4((uint64_t)v4, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t v15 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0xF0))(v14);
  if (!v15)
  {
    int64_t v24 = sub_100725EB0();
    os_log_type_t v25 = sub_1007266E0();
    if (os_log_type_enabled(v24, v25))
    {
      int64_t v26 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)int64_t v26 = 136315138;
      uint64_t v29 = sub_10043E578(0xD000000000000020, 0x80000001008C46D0, &v30);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s: no exchange controllers", v26, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1004ED31C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    return 0;
  }
  uint64_t v17 = (void *)v15;
  uint64_t v18 = __chkstk_darwin(v15, v16);
  *(void *)&v28[-32] = v0;
  *(void *)&v28[-24] = v10;
  *(void *)&v28[-16] = v18;
  __chkstk_darwin(v18, v19);
  *(void *)&v28[-16] = sub_1004ED01C;
  *(void *)&v28[-8] = v20;
  unint64_t v22 = v21 + 4;
  os_unfair_lock_lock(v21 + 4);
  sub_1004ED04C(&v30);
  os_unfair_lock_unlock(v22);
  uint64_t v23 = v30;
  sub_1004ED31C((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);

  return v23;
}

void sub_1004E7914(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  unint64_t v116 = a3;
  int64_t v117 = a4;
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v9 = __chkstk_darwin(v6, v8);
  int64_t v115 = &v105[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9, v11);
  unint64_t v114 = &v105[-v13];
  __chkstk_darwin(v12, v14);
  uint64_t v113 = (uint64_t)&v105[-v15];
  uint64_t v16 = sub_100431F80(&qword_100A473A8);
  uint64_t v17 = v16 - 8;
  __chkstk_darwin(v16, v18);
  uint64_t v20 = &v105[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v21 = sub_100431F80(&qword_100A44A50);
  uint64_t v23 = __chkstk_darwin(v21 - 8, v22);
  os_log_type_t v110 = &v105[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v28 = &v105[-v27];
  uint64_t v30 = __chkstk_darwin(v26, v29);
  uint64_t v32 = &v105[-v31];
  uint64_t v34 = __chkstk_darwin(v30, v33);
  uint64_t v36 = &v105[-v35];
  uint64_t v37 = *(void (**)(uint64_t))((swift_isaMask & *(void *)a1) + 0x150);
  uint64_t v119 = a1;
  v37(v34);
  uint64_t v118 = a2;
  sub_1004ED24C(a2, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t v111 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v7 + 56);
  uint64_t v112 = v7 + 56;
  v111(v32, 0, 1, v6);
  uint64_t v38 = (uint64_t)&v20[*(int *)(v17 + 56)];
  sub_1004546B8((uint64_t)v36, (uint64_t)v20, &qword_100A44A50);
  sub_1004546B8((uint64_t)v32, v38, &qword_100A44A50);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  if (v39((uint64_t)v20, 1, v6) == 1)
  {
    sub_10044C150((uint64_t)v32, &qword_100A44A50);
    sub_10044C150((uint64_t)v36, &qword_100A44A50);
    if (v39(v38, 1, v6) == 1)
    {
      sub_10044C150((uint64_t)v20, &qword_100A44A50);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_1004546B8((uint64_t)v20, (uint64_t)v28, &qword_100A44A50);
  if (v39(v38, 1, v6) == 1)
  {
    sub_10044C150((uint64_t)v32, &qword_100A44A50);
    sub_10044C150((uint64_t)v36, &qword_100A44A50);
    sub_1004ED31C((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
LABEL_6:
    uint64_t v40 = sub_10044C150((uint64_t)v20, &qword_100A473A8);
    goto LABEL_10;
  }
  uint64_t v41 = v113;
  sub_1004ED2B4(v38, v113, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  sub_1004ECCA4(&qword_100A44D20, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  char v42 = sub_100726410();
  sub_1004ED31C(v41, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  sub_10044C150((uint64_t)v32, &qword_100A44A50);
  sub_10044C150((uint64_t)v36, &qword_100A44A50);
  sub_1004ED31C((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  uint64_t v40 = sub_10044C150((uint64_t)v20, &qword_100A44A50);
  if (v42)
  {
LABEL_8:
    uint64_t v28 = v114;
    sub_1004ED24C(v118, (uint64_t)v114, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    uint64_t v43 = sub_100725EB0();
    os_log_type_t v44 = sub_1007266E0();
    if (os_log_type_enabled((os_log_t)v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      v120[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 136315394;
      uint64_t v121 = sub_10043E578(0xD000000000000020, 0x80000001008C46D0, v120);
      sub_100726830();
      *(_WORD *)(v45 + 12) = 2080;
      sub_1004ECCA4(&qword_100A44D38, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v46 = sub_100726D00();
      uint64_t v121 = sub_10043E578(v46, v47, v120);
      sub_100726830();
      swift_bridgeObjectRelease();
      sub_1004ED31C((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)v43, v44, "%s: already sent %s", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_46;
    }
LABEL_15:

    sub_1004ED31C((uint64_t)v28, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    goto LABEL_46;
  }
LABEL_10:
  uint64_t v107 = v6;
  uint64_t v48 = v119;
  uint64_t v49 = *(void **)&v119[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController];
  uint64_t v50 = *(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v119) + 0x180);
  uint64_t v108 = (swift_isaMask & *(void *)v119) + 384;
  uint64_t v109 = v50;
  uint64_t v51 = v50(v40);
  uint64_t v52 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v49) + 0x170);
  unint64_t v114 = v49;
  LODWORD(v113) = v52(v51);
  uint64_t v53 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v116) + 0xE8))(v118);
  uint64_t v55 = _swiftEmptyArrayStorage;
  if (!(*(uint64_t (**)(void))((swift_isaMask & *v48) + 0x108))()) {
    goto LABEL_27;
  }
  uint64_t v56 = v54;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v43 = (*(uint64_t (**)(uint64_t, uint64_t))(v56 + 8))(ObjectType, v56);
  swift_unknownObjectRelease();
  if ((v43 & 0xC000000000000001) == 0)
  {
    uint64_t v59 = *(void *)(v43 + 16);
    if (v59)
    {
      os_log_type_t v124 = _swiftEmptyArrayStorage;
      sub_100726A60();
      uint64_t v121 = sub_1004805BC(v43);
      uint64_t v122 = v61;
      char v123 = v62 & 1;
      goto LABEL_18;
    }
    goto LABEL_26;
  }
  uint64_t v58 = sub_100726920();
  if (!v58)
  {
LABEL_26:
    swift_bridgeObjectRelease();
LABEL_27:
    uint64_t v75 = sub_1004ED090((unint64_t)v55);
    swift_bridgeObjectRelease();
    unint64_t v76 = (unint64_t)sub_1004E8998(v53, v75);
    if ((v76 & 0xC000000000000001) != 0) {
      uint64_t v77 = sub_100726920();
    }
    else {
      uint64_t v77 = *(void *)(v76 + 16);
    }
    swift_bridgeObjectRelease();
    if (v77)
    {
      if ((v53 & 0xC000000000000001) != 0) {
        uint64_t v78 = sub_100726920();
      }
      else {
        uint64_t v78 = *(void *)(v53 + 16);
      }
      swift_bridgeObjectRelease();
      BOOL v79 = v78 > 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      BOOL v79 = 1;
    }
    uint64_t v80 = &v119[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_l];
    uint64_t v81 = v119;
    uint64_t v82 = sub_100725EB0();
    os_log_type_t v83 = sub_1007266E0();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = swift_slowAlloc();
      v120[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v84 = 136316162;
      uint64_t v121 = sub_10043E578(0xD000000000000020, 0x80000001008C46D0, v120);
      BOOL v106 = v79;
      unint64_t v116 = v80;
      sub_100726830();
      *(_WORD *)(v84 + 12) = 1024;
      LODWORD(v121) = v113 & 1;
      uint64_t v85 = sub_100726830();
      *(_WORD *)(v84 + 18) = 2048;
      uint64_t v121 = v109(v85);
      uint64_t v86 = sub_100726830();
      *(_WORD *)(v84 + 28) = 2048;
      uint64_t v87 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v114) + 0x128))(v86);

      uint64_t v121 = v87;
      BOOL v79 = v106;
      sub_100726830();

      *(_WORD *)(v84 + 38) = 1024;
      LODWORD(v121) = v79;
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v82, v83, "%s: hasHardRollOccurred:%{BOOL}d (%llu < %llu) hasSentToAnyone:%{BOOL}d", (uint8_t *)v84, 0x2Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v88 = (uint64_t)v115;
    uint64_t v89 = *(void **)&v81[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_idsdSessionProvider];
    NSString v90 = sub_100726420();
    id v91 = [v89 sessionWithUniqueID:v90];

    if (v91)
    {
      uint64_t v92 = (*(uint64_t (**)(void))((swift_isaMask & *v114) + 0x1E0))();
      if (v92)
      {
        uint64_t v93 = (void *)v92;
        if ((v113 | v79))
        {
          sub_1004ED24C(v118, v88, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          uint64_t v94 = sub_100725EB0();
          os_log_type_t v95 = sub_1007266E0();
          if (os_log_type_enabled(v94, v95))
          {
            uint64_t v96 = swift_slowAlloc();
            unint64_t v116 = (void *)swift_slowAlloc();
            v120[0] = (uint64_t)v116;
            *(_DWORD *)uint64_t v96 = 136315394;
            uint64_t v121 = sub_10043E578(0xD000000000000020, 0x80000001008C46D0, v120);
            sub_100726830();
            *(_WORD *)(v96 + 12) = 2080;
            int64_t v115 = (unsigned char *)(v96 + 14);
            sub_1004ECCA4(&qword_100A44D38, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            uint64_t v97 = v88;
            uint64_t v98 = v107;
            uint64_t v99 = sub_100726D00();
            uint64_t v121 = sub_10043E578(v99, v100, v120);
            sub_100726830();
            swift_bridgeObjectRelease();
            sub_1004ED31C(v97, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            _os_log_impl((void *)&_mh_execute_header, v94, v95, "%s: sending to avc %s", (uint8_t *)v96, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            sub_1004ED31C(v88, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
            uint64_t v98 = v107;
          }
          uint64_t v102 = (uint64_t)v110;
          id v103 = [v91 recvKeyMaterial:v93];
          uint64_t v104 = (*(uint64_t (**)(id))((swift_isaMask & *v114) + 0x128))(v103);
          (*(void (**)(uint64_t))((swift_isaMask & *(void *)v81) + 0x188))(v104);
          sub_1004ED24C(v118, v102, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
          char v101 = 1;
          v111((unsigned char *)v102, 0, 1, v98);
          (*(void (**)(uint64_t))((swift_isaMask & *(void *)v81) + 0x158))(v102);
          swift_unknownObjectRelease();

          goto LABEL_47;
        }
        swift_unknownObjectRelease();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
LABEL_46:
    char v101 = 0;
LABEL_47:
    *int64_t v117 = v101;
    return;
  }
  uint64_t v59 = v58;
  os_log_type_t v124 = _swiftEmptyArrayStorage;
  sub_100726A60();
  uint64_t v121 = sub_1007268D0();
  uint64_t v122 = v60;
  char v123 = 1;
  if (v59 < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
LABEL_18:
  unint64_t v116 = (void *)v53;
  while (1)
  {
    while (1)
    {
      int64_t v68 = v121;
      uint64_t v69 = v122;
      char v70 = v123;
      sub_1004EC194(v121, v122, v123, v43);
      uint64_t v72 = v71;
      id v73 = *(id *)&v71[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken];

      sub_100726A40();
      sub_100726A70();
      sub_100726A80();
      sub_100726A50();
      if ((v43 & 0xC000000000000001) != 0) {
        break;
      }
      int64_t v63 = sub_1004801D0(v68, v69, v70, v43);
      uint64_t v65 = v64;
      char v67 = v66;
      sub_100482640(v68, v69, v70);
      uint64_t v121 = v63;
      uint64_t v122 = v65;
      char v123 = v67 & 1;
      if (!--v59) {
        goto LABEL_25;
      }
    }
    if ((v70 & 1) == 0) {
      break;
    }
    if (sub_1007268F0()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_100431F80(&qword_100A473B0);
    uint64_t v74 = (void (*)(uint64_t *, void))sub_100726670();
    sub_100726970();
    v74(v120, 0);
    if (!--v59)
    {
LABEL_25:
      sub_100482640(v121, v122, v123);
      uint64_t v55 = v124;
      swift_bridgeObjectRelease();
      uint64_t v53 = (uint64_t)v116;
      goto LABEL_27;
    }
  }
  __break(1u);
}

void *sub_1004E8998(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_100726920();
    if ((v2 & 0xC000000000000001) != 0) {
      goto LABEL_3;
    }
LABEL_9:
    if (v4 > *(void *)(v2 + 16) >> 3) {
      goto LABEL_10;
    }
LABEL_13:
    sub_1004EB028(a1);
    return (void *)v2;
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if ((a2 & 0xC000000000000001) == 0) {
    goto LABEL_9;
  }
LABEL_3:
  if (v2 < 0) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = v2 & 0xFFFFFFFFFFFFFF8;
  }
  if (v4 <= sub_100726920() / 8) {
    goto LABEL_13;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_100726920();
  Swift::Int v7 = sub_1004695AC(v5, v6);
  swift_bridgeObjectRelease();
  uint64_t v2 = v7;
LABEL_10:

  return sub_1004EB308(a1, v2);
}

void sub_1004E8AA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::Int v7 = sub_100725EB0();
  os_log_type_t v8 = sub_1007266E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v28 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315138;
    uint64_t v27 = sub_10043E578(0xD000000000000021, 0x80000001008C4700, &v28);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%s", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_idsdSessionProvider);
  NSString v11 = sub_100726420();
  id v12 = [v10 sessionWithUniqueID:v11];

  if (!v12) {
    return;
  }
  uint64_t v13 = (*(uint64_t (**)(void))(**(void **)(v1
                                           + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache)
                             + 208))();
  uint64_t v14 = v13;
  int64_t v15 = 0;
  uint64_t v16 = 1 << *(unsigned char *)(v13 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  uint64_t v18 = v13 + 56;
  unint64_t v19 = v17 & *(void *)(v13 + 56);
  int64_t v20 = (unint64_t)(v16 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_8;
    }
    int64_t v24 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v24 >= v20) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v18 + 8 * v24);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v24 + 1;
      if (v24 + 1 >= v20) {
        goto LABEL_24;
      }
      unint64_t v25 = *(void *)(v18 + 8 * v15);
      if (!v25)
      {
        int64_t v15 = v24 + 2;
        if (v24 + 2 >= v20) {
          goto LABEL_24;
        }
        unint64_t v25 = *(void *)(v18 + 8 * v15);
        if (!v25) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v19 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_8:
    sub_1004ED24C(*(void *)(v14 + 48) + *(void *)(v3 + 72) * v22, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    id v23 = sub_10048391C();
    [v12 recvKeyMaterial:v23];

    sub_1004ED31C((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  }
  int64_t v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_24:
    swift_unknownObjectRelease();
    swift_release();
    return;
  }
  unint64_t v25 = *(void *)(v18 + 8 * v26);
  if (v25)
  {
    int64_t v15 = v26;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v15 >= v20) {
      goto LABEL_24;
    }
    unint64_t v25 = *(void *)(v18 + 8 * v15);
    ++v26;
    if (v25) {
      goto LABEL_23;
    }
  }
LABEL_27:
  __break(1u);
}

uint64_t sub_1004E8E40()
{
  sub_1004E8AA0();

  return sub_1004E7448();
}

uint64_t sub_1004E8E68()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x258))();
}

void sub_1004E8EA4()
{
  uint64_t v1 = sub_100431F80(&qword_100A44A50);
  uint64_t v3 = __chkstk_darwin(v1 - 8, v2);
  uint64_t v63 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3, v5);
  Swift::Int v7 = (char *)&v58 - v6;
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  char v66 = *(NSObject **)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8, v9);
  id v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v10, v13);
  uint64_t v16 = (char *)&v58 - v15;
  __chkstk_darwin(v14, v17);
  unint64_t v19 = (char *)&v58 - v18;
  int64_t v20 = *(void **)(v0 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_idsdSessionProvider);
  NSString v21 = sub_100726420();
  id v22 = [v20 sessionWithUniqueID:v21];

  if (!v22)
  {
    char v66 = sub_100725EB0();
    os_log_type_t v51 = sub_1007266C0();
    if (os_log_type_enabled(v66, v51))
    {
      uint64_t v52 = (uint8_t *)swift_slowAlloc();
      uint64_t v68 = swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 136315138;
      uint64_t v67 = sub_10043E578(0xD000000000000026, 0x80000001008C4380, &v68);
      sub_100726830();
      _os_log_impl((void *)&_mh_execute_header, v66, v51, "%s: no ids session", v52, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      int64_t v57 = v66;
    }
    return;
  }
  uint64_t v61 = v8;
  char v62 = v7;
  uint64_t v58 = v12;
  id v59 = v22;
  uint64_t v60 = v0;
  uint64_t v23 = (*(uint64_t (**)(void))(**(void **)(v0
                                           + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmCache)
                             + 208))();
  uint64_t v24 = 0;
  uint64_t v25 = *(void *)(v23 + 56);
  uint64_t v65 = v23 + 56;
  uint64_t v26 = 1 << *(unsigned char *)(v23 + 32);
  uint64_t v27 = -1;
  if (v26 < 64) {
    uint64_t v27 = ~(-1 << v26);
  }
  unint64_t v28 = v27 & v25;
  int64_t v29 = (unint64_t)(v26 + 63) >> 6;
  uint64_t v30 = _swiftEmptyArrayStorage;
  uint64_t v64 = (char *)&type metadata for Any + 8;
  while (1)
  {
    if (v28)
    {
      unint64_t v31 = __clz(__rbit64(v28));
      v28 &= v28 - 1;
      unint64_t v32 = v31 | (v24 << 6);
      goto LABEL_23;
    }
    int64_t v33 = v24 + 1;
    if (__OFADD__(v24, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v33 >= v29) {
      goto LABEL_28;
    }
    unint64_t v34 = *(void *)(v65 + 8 * v33);
    ++v24;
    if (!v34)
    {
      uint64_t v24 = v33 + 1;
      if (v33 + 1 >= v29) {
        goto LABEL_28;
      }
      unint64_t v34 = *(void *)(v65 + 8 * v24);
      if (!v34)
      {
        uint64_t v24 = v33 + 2;
        if (v33 + 2 >= v29) {
          goto LABEL_28;
        }
        unint64_t v34 = *(void *)(v65 + 8 * v24);
        if (!v34) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v28 = (v34 - 1) & v34;
    unint64_t v32 = __clz(__rbit64(v34)) + (v24 << 6);
LABEL_23:
    sub_1004ED24C(*(void *)(v23 + 48) + (unint64_t)v66[9].isa * v32, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    sub_1004ED2B4((uint64_t)v19, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
    id v36 = sub_10048391C();
    id v37 = [v36 dictionaryRepresentation];

    if (v37)
    {
      uint64_t v38 = sub_100726390();

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v30 = sub_1004EAF18(0, v30[2] + 1, 1, v30);
      }
      unint64_t v40 = v30[2];
      unint64_t v39 = v30[3];
      if (v40 >= v39 >> 1) {
        uint64_t v30 = sub_1004EAF18((void *)(v39 > 1), v40 + 1, 1, v30);
      }
      v30[2] = v40 + 1;
      v30[v40 + 4] = v38;
    }
    sub_1004ED31C((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  }
  int64_t v35 = v33 + 3;
  if (v35 < v29)
  {
    unint64_t v34 = *(void *)(v65 + 8 * v35);
    if (!v34)
    {
      while (1)
      {
        uint64_t v24 = v35 + 1;
        if (__OFADD__(v35, 1)) {
          break;
        }
        if (v24 >= v29) {
          goto LABEL_28;
        }
        unint64_t v34 = *(void *)(v65 + 8 * v24);
        ++v35;
        if (v34) {
          goto LABEL_22;
        }
      }
LABEL_43:
      __break(1u);
LABEL_44:
      uint64_t v30 = sub_1004EAF18(0, v30[2] + 1, 1, v30);
LABEL_35:
      unint64_t v56 = v30[2];
      unint64_t v55 = v30[3];
      if (v56 >= v55 >> 1) {
        uint64_t v30 = sub_1004EAF18((void *)(v55 > 1), v56 + 1, 1, v30);
      }
      v30[2] = v56 + 1;
      v30[v56 + 4] = v29;
      sub_1004ED31C(v24, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      if (!v30[2])
      {
LABEL_38:
        swift_unknownObjectRelease();
        sub_10044C150(v23, &qword_100A44A50);
        swift_bridgeObjectRelease();
        return;
      }
LABEL_30:
      sub_100431F80(&qword_100A47378);
      Class isa = sub_100726560().super.isa;
      swift_bridgeObjectRelease();
      [v59 recvStableKeyMaterialForFrameworkCache:isa];
      swift_unknownObjectRelease();

      sub_10044C150(v23, &qword_100A44A50);
      return;
    }
    uint64_t v24 = v35;
    goto LABEL_22;
  }
LABEL_28:
  uint64_t v41 = swift_release();
  uint64_t v43 = __chkstk_darwin(v41, v42);
  *(&v58 - 2) = (char *)v44;
  __chkstk_darwin(v43, v45);
  *(&v58 - 2) = (char *)sub_1004ECD18;
  *(&v58 - 1) = (char *)v46;
  uint64_t v48 = v47 + 4;
  os_unfair_lock_lock(v47 + 4);
  uint64_t v23 = (uint64_t)v62;
  sub_100469128();
  os_unfair_lock_unlock(v48);
  uint64_t v49 = v63;
  sub_1004546B8(v23, v63, &qword_100A44A50);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v66[6].isa)(v49, 1, v61) == 1)
  {
    sub_10044C150(v49, &qword_100A44A50);
    if (!v30[2]) {
      goto LABEL_38;
    }
    goto LABEL_30;
  }
  uint64_t v24 = (uint64_t)v58;
  sub_1004ED2B4(v49, (uint64_t)v58, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  id v53 = sub_10048391C();
  id v54 = [v53 dictionaryRepresentation];

  if (v54)
  {
    int64_t v29 = sub_100726390();

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      goto LABEL_44;
    }
    goto LABEL_35;
  }
  __break(1u);
}

uint64_t sub_1004E9690@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a2;
  uint64_t v52 = (char *)sub_100431F80(&qword_100A473A8);
  __chkstk_darwin(v52, v3);
  uint64_t v53 = (uint64_t)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A44A50);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v51 = (uint64_t)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7, v9);
  uint64_t v50 = (uint64_t)&v45 - v11;
  uint64_t v13 = __chkstk_darwin(v10, v12);
  uint64_t v15 = (char *)&v45 - v14;
  uint64_t v17 = __chkstk_darwin(v13, v16);
  unint64_t v19 = (char *)&v45 - v18;
  __chkstk_darwin(v17, v20);
  id v22 = (char *)&v45 - v21;
  uint64_t v23 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v26 = __chkstk_darwin(v23, v25);
  uint64_t v49 = (uint64_t)&v45 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  unint64_t v31 = (char *)&v45 - v30;
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)((char *)a1
                                                                 + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController))
                                  + 0x118))(v29);
  unint64_t v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v32(v22, 1, v23) == 1)
  {
    sub_10044C150((uint64_t)v22, &qword_100A44A50);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v54, 1, 1, v23);
  }
  uint64_t v34 = sub_1004ED2B4((uint64_t)v22, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  int64_t v35 = *(void (**)(uint64_t))((swift_isaMask & *a1) + 0x168);
  uint64_t v46 = a1;
  v35(v34);
  sub_1004ED24C((uint64_t)v31, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  unint64_t v47 = *(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56);
  uint64_t v48 = v24 + 56;
  v47(v15, 0, 1, v23);
  uint64_t v36 = v53;
  uint64_t v37 = v53 + *((int *)v52 + 12);
  sub_1004546B8((uint64_t)v19, v53, &qword_100A44A50);
  sub_1004546B8((uint64_t)v15, v37, &qword_100A44A50);
  if (v32((char *)v36, 1, v23) != 1)
  {
    uint64_t v52 = v19;
    uint64_t v38 = v50;
    sub_1004546B8(v36, v50, &qword_100A44A50);
    if (v32((char *)v37, 1, v23) != 1)
    {
      uint64_t v40 = v49;
      sub_1004ED2B4(v37, v49, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_1004ECCA4(&qword_100A44D20, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      char v41 = sub_100726410();
      sub_1004ED31C(v40, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10044C150((uint64_t)v15, &qword_100A44A50);
      sub_10044C150((uint64_t)v52, &qword_100A44A50);
      sub_1004ED31C(v38, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      sub_10044C150(v36, &qword_100A44A50);
      unint64_t v39 = v46;
      if (v41) {
        goto LABEL_10;
      }
LABEL_12:
      uint64_t v42 = v51;
      sub_1004ED24C((uint64_t)v31, v51, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      uint64_t v43 = (uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v47;
      v47((char *)v42, 0, 1, v23);
      (*(void (**)(uint64_t))((swift_isaMask & *v39) + 0x170))(v42);
      uint64_t v44 = v54;
      sub_1004ED2B4((uint64_t)v31, v54, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
      return v43(v44, 0, 1, v23);
    }
    sub_10044C150((uint64_t)v15, &qword_100A44A50);
    sub_10044C150((uint64_t)v52, &qword_100A44A50);
    sub_1004ED31C(v38, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
LABEL_8:
    sub_10044C150(v36, &qword_100A473A8);
    unint64_t v39 = v46;
    goto LABEL_12;
  }
  sub_10044C150((uint64_t)v15, &qword_100A44A50);
  sub_10044C150((uint64_t)v19, &qword_100A44A50);
  if (v32((char *)v37, 1, v23) != 1) {
    goto LABEL_8;
  }
  sub_10044C150(v36, &qword_100A44A50);
LABEL_10:
  sub_1004ED31C((uint64_t)v31, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v47)(v54, 1, 1, v23);
}

uint64_t sub_1004E9D08(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = (os_unfair_lock_s *)(*(void *)((char *)v3
                                      + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_lock)
                          + 16);
  os_unfair_lock_lock(v8);
  sub_100482E74();
  os_unfair_lock_unlock(v8);
  swift_bridgeObjectRetain_n();
  uint64_t v9 = sub_100725EB0();
  os_log_type_t v10 = sub_1007266E0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    swift_bridgeObjectRetain();
    sub_10043E578(a2, a3, &v30);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%s    ", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_100725EB0();
  os_log_type_t v13 = sub_1007266E0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315138;
    swift_bridgeObjectRetain();
    sub_10043E578(a2, a3, &v30);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%s    MKM Controller", v14, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v15 = *(void **)((char *)v4
                   + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController);
  uint64_t v30 = a2;
  unint64_t v31 = a3;
  swift_bridgeObjectRetain();
  v32._countAndFlagsBits = 538976288;
  v32._object = (void *)0xE400000000000000;
  sub_1007264C0(v32);
  (*(void (**)(uint64_t, uint64_t, unint64_t))((swift_isaMask & *v15) + 0x200))(a1, v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v16 = sub_100725EB0();
  os_log_type_t v17 = sub_1007266E0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    swift_bridgeObjectRetain();
    sub_10043E578(a2, a3, &v30);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%s    ", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  unint64_t v19 = sub_100725EB0();
  os_log_type_t v20 = sub_1007266E0();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136315138;
    swift_bridgeObjectRetain();
    sub_10043E578(a2, a3, &v30);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%s    SKM Controller", v21, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v29 = v4;
  id v22 = *(void **)((char *)v4
                   + OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController);
  uint64_t v30 = a2;
  unint64_t v31 = a3;
  swift_bridgeObjectRetain();
  v33._countAndFlagsBits = 538976288;
  v33._object = (void *)0xE400000000000000;
  sub_1007264C0(v33);
  (*(void (**)(uint64_t, uint64_t, unint64_t))((swift_isaMask & *v22) + 0x200))(a1, v30, v31);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_100725EB0();
  os_log_type_t v24 = sub_1007266E0();
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v25 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v26 = a2;
    sub_10043E578(a2, a3, &v30);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s    ", v25, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    uint64_t v26 = a2;
    swift_bridgeObjectRelease_n();
  }

  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v29) + 0xF0))();
  if (result)
  {
    uint64_t v28 = (void *)result;
    uint64_t v30 = v26;
    unint64_t v31 = a3;
    swift_bridgeObjectRetain();
    v34._countAndFlagsBits = 538976288;
    v34._object = (void *)0xE400000000000000;
    sub_1007264C0(v34);
    (*(void (**)(uint64_t, uint64_t, unint64_t))((swift_isaMask & *v28) + 0x118))(a1, v30, v31);

    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1004EA518(uint64_t a1, uint64_t a2, unint64_t a3, void *a4)
{
  uint64_t v31 = sub_100431F80(&qword_100A44A50);
  __chkstk_darwin(v31, v8);
  uint64_t v30 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain_n();
  os_log_type_t v10 = a4;
  uint64_t v33 = a1;
  uint64_t v11 = sub_100725EB0();
  os_log_type_t v12 = sub_1007266E0();
  BOOL v13 = os_log_type_enabled(v11, v12);
  uint64_t v32 = a2;
  if (v13)
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_10043E578(a2, a3, &v35);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v15 = *(void *)&v10[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_sessionID];
    unint64_t v16 = *(void *)&v10[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_sessionID + 8];
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_10043E578(v15, v16, &v35);
    sub_100726830();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%sSession %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }

  swift_bridgeObjectRetain_n();
  os_log_type_t v17 = v10;
  uint64_t v18 = sub_100725EB0();
  os_log_type_t v19 = sub_1007266E0();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_10043E578(v32, a3, &v35);
    sub_100726830();
    uint64_t v21 = swift_bridgeObjectRelease_n();
    *(_WORD *)(v20 + 12) = 1024;
    char v22 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v17) + 0x138))(v21);

    LODWORD(v34) = v22 & 1;
    sub_100726830();

    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%s    needsMaterialUpdate: %{BOOL}d", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  uint64_t v23 = v17;
  os_log_type_t v24 = sub_100725EB0();
  os_log_type_t v25 = sub_1007266E0();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315394;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_10043E578(v32, a3, &v35);
    sub_100726830();
    uint64_t v27 = swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 12) = 2080;
    (*(void (**)(uint64_t))((swift_isaMask & *(void *)v23) + 0x150))(v27);
    uint64_t v28 = sub_100726480();
    uint64_t v34 = sub_10043E578(v28, v29, &v35);
    sub_100726830();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "%s    materialCurrentlySentToAVC: %s", (uint8_t *)v26, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

id sub_1004EAAE8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSGroupEncryptionControllerGroupSession();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004EACA0()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1B0))();
}

uint64_t sub_1004EACDC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x228))();
}

uint64_t sub_1004EAD18()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x208))();
}

uint64_t sub_1004EAD54()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x210))();
}

uint64_t sub_1004EAD90()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1B8))();
}

uint64_t sub_1004EADCC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1F0))();
}

uint64_t sub_1004EAE08()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1E8))();
}

uint64_t sub_1004EAE44()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x230))();
}

uint64_t sub_1004EAE80()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x260))();
}

uint64_t sub_1004EAEBC()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x270))();
}

void *sub_1004EAF18(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100431F80(&qword_100A47370);
      os_log_type_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      BOOL v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      os_log_type_t v10 = _swiftEmptyArrayStorage;
      BOOL v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1004ECF10(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void sub_1004EB028(uint64_t a1)
{
  if ((*(void *)v1 & 0xC000000000000001) != 0)
  {
    if (!sub_100726920()) {
      return;
    }
LABEL_5:
    if ((a1 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      sub_1007268E0();
      sub_100462C50(0, (unint64_t *)&qword_100A47A80);
      sub_1004ED1E4();
      sub_100726680();
      a1 = v20;
      uint64_t v18 = v21;
      uint64_t v3 = v22;
      uint64_t v4 = v23;
      unint64_t v5 = v24;
    }
    else
    {
      uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
      uint64_t v18 = a1 + 56;
      uint64_t v3 = ~v6;
      uint64_t v7 = -v6;
      if (v7 < 64) {
        uint64_t v8 = ~(-1 << v7);
      }
      else {
        uint64_t v8 = -1;
      }
      unint64_t v5 = v8 & *(void *)(a1 + 56);
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
    }
    int64_t v9 = (unint64_t)(v3 + 64) >> 6;
    if (a1 < 0) {
      goto LABEL_14;
    }
    while (1)
    {
      if (v5)
      {
        uint64_t v10 = (v5 - 1) & v5;
        unint64_t v11 = __clz(__rbit64(v5)) | (v4 << 6);
        uint64_t v12 = v4;
      }
      else
      {
        int64_t v14 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          return;
        }
        if (v14 >= v9) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v18 + 8 * v14);
        uint64_t v12 = v4 + 1;
        if (!v15)
        {
          uint64_t v12 = v4 + 2;
          if (v4 + 2 >= v9) {
            goto LABEL_36;
          }
          unint64_t v15 = *(void *)(v18 + 8 * v12);
          if (!v15)
          {
            uint64_t v12 = v4 + 3;
            if (v4 + 3 >= v9) {
              goto LABEL_36;
            }
            unint64_t v15 = *(void *)(v18 + 8 * v12);
            if (!v15)
            {
              uint64_t v12 = v4 + 4;
              if (v4 + 4 >= v9) {
                goto LABEL_36;
              }
              unint64_t v15 = *(void *)(v18 + 8 * v12);
              if (!v15)
              {
                uint64_t v12 = v4 + 5;
                if (v4 + 5 >= v9) {
                  goto LABEL_36;
                }
                unint64_t v15 = *(void *)(v18 + 8 * v12);
                if (!v15)
                {
                  uint64_t v16 = v4 + 6;
                  while (v9 != v16)
                  {
                    unint64_t v15 = *(void *)(v18 + 8 * v16++);
                    if (v15)
                    {
                      uint64_t v12 = v16 - 1;
                      goto LABEL_32;
                    }
                  }
LABEL_36:
                  sub_100462C48();
                  return;
                }
              }
            }
          }
        }
LABEL_32:
        uint64_t v10 = (v15 - 1) & v15;
        unint64_t v11 = __clz(__rbit64(v15)) + (v12 << 6);
      }
      id v13 = *(id *)(*(void *)(a1 + 48) + 8 * v11);
      if (!v13) {
        goto LABEL_36;
      }
      while (1)
      {
        os_log_type_t v17 = (void *)sub_1004EB848(v13);

        uint64_t v4 = v12;
        unint64_t v5 = v10;
        if ((a1 & 0x8000000000000000) == 0) {
          break;
        }
LABEL_14:
        if (sub_100726950())
        {
          sub_100462C50(0, (unint64_t *)&qword_100A47A80);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id v13 = v19;
          swift_unknownObjectRelease();
          uint64_t v12 = v4;
          uint64_t v10 = v5;
          if (v19) {
            continue;
          }
        }
        goto LABEL_36;
      }
    }
  }
  if (*(void *)(*(void *)v1 + 16)) {
    goto LABEL_5;
  }
}

void *sub_1004EB308(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return &_swiftEmptySetSingleton;
  }
  uint64_t v3 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1007268E0();
    sub_100462C50(0, (unint64_t *)&qword_100A47A80);
    sub_1004ED1E4();
    sub_100726680();
    uint64_t v3 = v47;
    uint64_t v4 = v48;
    uint64_t v6 = v49;
    int64_t v5 = v50;
    unint64_t v7 = v51;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v4 = a1 + 56;
    uint64_t v6 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    int64_t v5 = 0;
  }
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  uint64_t v44 = v6;
  int64_t v45 = v5;
  unint64_t v46 = v7;
  uint64_t v11 = v2 + 56;
  while (1)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if (v7)
      {
        uint64_t v12 = (v7 - 1) & v7;
        unint64_t v13 = __clz(__rbit64(v7)) | (v5 << 6);
LABEL_14:
        int64_t v14 = *(void **)(*(void *)(v3 + 48) + 8 * v13);
        id v15 = v14;
        goto LABEL_15;
      }
      int64_t v25 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        __break(1u);
      }
      int64_t v26 = (unint64_t)(v6 + 64) >> 6;
      if (v25 >= v26)
      {
        int64_t v14 = 0;
        uint64_t v12 = 0;
        goto LABEL_15;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v25);
      if (v27)
      {
LABEL_28:
        uint64_t v12 = (v27 - 1) & v27;
        unint64_t v13 = __clz(__rbit64(v27)) + (v25 << 6);
        int64_t v5 = v25;
        goto LABEL_14;
      }
      int64_t v28 = v5 + 2;
      if (v5 + 2 >= v26) {
        goto LABEL_44;
      }
      unint64_t v27 = *(void *)(v43 + 8 * v28);
      if (v27)
      {
LABEL_32:
        int64_t v25 = v28;
        goto LABEL_28;
      }
      if (v5 + 3 < v26)
      {
        unint64_t v27 = *(void *)(v43 + 8 * (v5 + 3));
        if (v27)
        {
          int64_t v25 = v5 + 3;
          goto LABEL_28;
        }
        int64_t v28 = v5 + 4;
        if (v5 + 4 >= v26)
        {
          int64_t v14 = 0;
          uint64_t v12 = 0;
          v5 += 3;
LABEL_15:
          int64_t v45 = v5;
          unint64_t v46 = v12;
          if (!v14) {
            goto LABEL_53;
          }
          goto LABEL_19;
        }
        unint64_t v27 = *(void *)(v43 + 8 * v28);
        if (v27) {
          goto LABEL_32;
        }
        int64_t v25 = v5 + 5;
        if (v5 + 5 < v26)
        {
          unint64_t v27 = *(void *)(v43 + 8 * v25);
          if (v27) {
            goto LABEL_28;
          }
          int64_t v25 = v26 - 1;
          int64_t v29 = v5 + 6;
          while (v26 != v29)
          {
            unint64_t v27 = *(void *)(v43 + 8 * v29++);
            if (v27)
            {
              int64_t v25 = v29 - 1;
              goto LABEL_28;
            }
          }
LABEL_44:
          int64_t v14 = 0;
          uint64_t v12 = 0;
          int64_t v5 = v25;
          goto LABEL_15;
        }
      }
      int64_t v14 = 0;
      uint64_t v12 = 0;
      int64_t v5 = v28;
      goto LABEL_15;
    }
    uint64_t v16 = sub_100726950();
    if (!v16
      || (uint64_t v40 = v16,
          sub_100462C50(0, (unint64_t *)&qword_100A47A80),
          swift_unknownObjectRetain(),
          swift_dynamicCast(),
          int64_t v14 = v41,
          swift_unknownObjectRelease(),
          !v41))
    {
LABEL_53:
      sub_100462C48();
      return (void *)v2;
    }
LABEL_19:
    Swift::Int v17 = sub_1007267E0(*(void *)(v2 + 40));
    uint64_t v18 = -1 << *(unsigned char *)(v2 + 32);
    unint64_t v19 = v17 & ~v18;
    if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
      goto LABEL_10;
    }
    sub_100462C50(0, (unint64_t *)&qword_100A47A80);
    id v20 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
    char v21 = sub_1007267F0();

    if (v21) {
      break;
    }
    uint64_t v22 = ~v18;
    while (1)
    {
      unint64_t v19 = (v19 + 1) & v22;
      if (((*(void *)(v11 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      id v23 = *(id *)(*(void *)(v2 + 48) + 8 * v19);
      char v24 = sub_1007267F0();

      if (v24) {
        goto LABEL_47;
      }
    }
LABEL_10:

    uint64_t v3 = v42;
    uint64_t v6 = v44;
    int64_t v5 = v45;
    unint64_t v7 = v46;
  }
LABEL_47:

  char v32 = *(unsigned char *)(v2 + 32);
  unint64_t v33 = (unint64_t)((1 << v32) + 63) >> 6;
  size_t v34 = 8 * v33;
  if ((v32 & 0x3Fu) < 0xE
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
  {
    __chkstk_darwin(isStackAllocationSafe, v31);
    memcpy((char *)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v34);
    sub_1004EBA20((unint64_t *)((char *)&v40 - ((v34 + 15) & 0x3FFFFFFFFFFFFFF0)), v33, v2, v19, &v42);
    uint64_t v36 = v35;
    swift_release();
    sub_100462C48();
  }
  else
  {
    uint64_t v37 = (void *)swift_slowAlloc();
    memcpy(v37, (const void *)(v2 + 56), v34);
    sub_1004EBA20((unint64_t *)v37, v33, v2, v19, &v42);
    uint64_t v36 = v38;
    swift_release();
    sub_100462C48();
    swift_slowDealloc();
  }
  return (void *)v36;
}

uint64_t sub_1004EB848(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = sub_100726960();

    if (v6)
    {
      uint64_t v7 = sub_1004EBFF8();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = sub_1007267E0(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_100462C50(0, (unint64_t *)&qword_100A47A80);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = sub_1007267F0();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = sub_1007267F0();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  uint64_t *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10046ACA4();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_10047F2BC(v11);
  uint64_t *v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

void sub_1004EBA20(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  id v5 = a5;
  uint64_t v7 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v37 = a3 + 56;
  while (2)
  {
    uint64_t v34 = v8;
    do
    {
      while (1)
      {
        if ((*v5 & 0x8000000000000000) == 0)
        {
          int64_t v10 = v5[3];
          unint64_t v9 = v5[4];
          if (v9)
          {
            uint64_t v11 = (v9 - 1) & v9;
            unint64_t v12 = __clz(__rbit64(v9)) | (v10 << 6);
LABEL_7:
            char v13 = *(void **)(*(void *)(*v5 + 48) + 8 * v12);
            id v14 = v13;
            goto LABEL_8;
          }
          int64_t v27 = v10 + 1;
          if (__OFADD__(v10, 1))
          {
            __break(1u);
            goto LABEL_47;
          }
          int64_t v28 = (unint64_t)(v5[2] + 64) >> 6;
          if (v27 >= v28)
          {
            char v13 = 0;
            uint64_t v11 = 0;
            goto LABEL_8;
          }
          uint64_t v29 = v5[1];
          unint64_t v30 = *(void *)(v29 + 8 * v27);
          if (v30)
          {
LABEL_22:
            uint64_t v11 = (v30 - 1) & v30;
            unint64_t v12 = __clz(__rbit64(v30)) + (v27 << 6);
            int64_t v10 = v27;
            goto LABEL_7;
          }
          if (v10 + 2 < v28)
          {
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 2));
            if (v30)
            {
              int64_t v27 = v10 + 2;
              goto LABEL_22;
            }
            if (v10 + 3 >= v28)
            {
              char v13 = 0;
              uint64_t v11 = 0;
              v10 += 2;
              goto LABEL_8;
            }
            unint64_t v30 = *(void *)(v29 + 8 * (v10 + 3));
            if (v30)
            {
              int64_t v27 = v10 + 3;
              goto LABEL_22;
            }
            int64_t v27 = v10 + 4;
            if (v10 + 4 >= v28)
            {
              char v13 = 0;
              uint64_t v11 = 0;
              v10 += 3;
LABEL_8:
              v5[3] = v10;
              v5[4] = v11;
              if (!v13) {
                goto LABEL_45;
              }
              goto LABEL_12;
            }
            unint64_t v30 = *(void *)(v29 + 8 * v27);
            if (v30) {
              goto LABEL_22;
            }
            int64_t v27 = v28 - 1;
            int64_t v32 = v10 + 5;
            while (v28 != v32)
            {
              unint64_t v30 = *(void *)(v29 + 8 * v32++);
              if (v30)
              {
                int64_t v27 = v32 - 1;
                goto LABEL_22;
              }
            }
          }
          char v13 = 0;
          uint64_t v11 = 0;
          int64_t v10 = v27;
          goto LABEL_8;
        }
        if (!sub_100726950()
          || (sub_100462C50(0, (unint64_t *)&qword_100A47A80),
              swift_unknownObjectRetain(),
              swift_dynamicCast(),
              char v13 = v38,
              swift_unknownObjectRelease(),
              !v38))
        {
LABEL_45:
          swift_retain();
          sub_1004EBD98(a1, a2, v34, a3);
          return;
        }
LABEL_12:
        Swift::Int v15 = sub_1007267E0(*(void *)(a3 + 40));
        uint64_t v16 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v17 = v15 & ~v16;
        unint64_t v18 = v17 >> 6;
        uint64_t v19 = 1 << v17;
        if (((1 << v17) & *(void *)(v37 + 8 * (v17 >> 6))) == 0) {
          goto LABEL_3;
        }
        sub_100462C50(0, (unint64_t *)&qword_100A47A80);
        id v20 = *(id *)(*(void *)(a3 + 48) + 8 * v17);
        char v21 = sub_1007267F0();

        if (v21) {
          break;
        }
        uint64_t v22 = ~v16;
        for (unint64_t i = v17 + 1; ; unint64_t i = v24 + 1)
        {
          unint64_t v24 = i & v22;
          if (((*(void *)(v37 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0) {
            break;
          }
          id v25 = *(id *)(*(void *)(a3 + 48) + 8 * v24);
          char v26 = sub_1007267F0();

          if (v26)
          {

            unint64_t v18 = v24 >> 6;
            uint64_t v19 = 1 << v24;
            goto LABEL_25;
          }
        }
LABEL_3:

        id v5 = a5;
      }

LABEL_25:
      id v5 = a5;
      unint64_t v31 = a1[v18];
      a1[v18] = v31 & ~v19;
    }
    while ((v19 & v31) == 0);
    uint64_t v8 = v34 - 1;
    if (__OFSUB__(v34, 1))
    {
LABEL_47:
      __break(1u);
      return;
    }
    if (v34 != 1) {
      continue;
    }
    break;
  }
}

uint64_t sub_1004EBD98(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v9 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_100431F80((uint64_t *)&unk_100A455F0);
  uint64_t result = sub_1007269E0();
  unint64_t v9 = (void *)result;
  uint64_t v29 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v29[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    Swift::Int v18 = v9[5];
    id v19 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1007267E0(v18);
    uint64_t v20 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v12 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v12 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v12 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(v9[6] + 8 * v23) = v19;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v29[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v29[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1004EBFF8()
{
  uint64_t v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_100726920();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_1004695AC(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = sub_1007267E0(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_100462C50(0, (unint64_t *)&qword_100A47A80);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = sub_1007267F0();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_10047F2BC(v8);
      if (sub_1007267F0())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = sub_1007267F0();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void sub_1004EC194(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_100726940();
      type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (sub_100726900() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_100726910();
  type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  Swift::Int v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = sub_1007267E0(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = sub_1007267F0();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = sub_1007267F0();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  uint64_t v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

void sub_1004EC3EC(void *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = &v1[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_rootExchangeController];
  swift_beginAccess();
  Swift::Int v5 = *(void **)v4;
  if (*(void *)v4
    && (unint64_t v6 = *(void (**)(void, void))((swift_isaMask & *v5) + 0xC0),
        Swift::Int v7 = v5,
        v6(0, 0),
        v7,
        (uint64_t v8 = *(void **)v4) != 0))
  {
    id v9 = *(void (**)(void, void))((swift_isaMask & *v8) + 0xA8);
    char v10 = v8;
    v9(0, 0);

    uint64_t v11 = *(void **)v4;
  }
  else
  {
    uint64_t v11 = 0;
  }
  *(void *)Swift::Int v4 = a1;
  id v12 = a1;

  char v13 = &v2[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_rootExchangeController];
  swift_beginAccess();
  uint64_t v14 = *(void **)v13;
  if (*(void *)v13)
  {
    id v15 = *(void (**)(char *, _UNKNOWN **))((swift_isaMask & *v14) + 0xC0);
    Swift::Int v16 = v14;
    uint64_t v17 = v2;
    v15(v2, &off_10098F540);

    Swift::Int v18 = *(void **)v13;
    if (*(void *)v13)
    {
      id v19 = *(void (**)(char *, _UNKNOWN **))((swift_isaMask & *v18) + 0xA8);
      uint64_t v20 = v17;
      unint64_t v21 = v18;
      v19(v2, &off_10098F4F8);
    }
  }
}

uint64_t sub_1004EC5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A44A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

char *sub_1004EC628(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  uint64_t v59 = a8;
  uint64_t v60 = a6;
  id v63 = a1;
  uint64_t v64 = a7;
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  uint64_t v61 = a10;
  uint64_t v62 = a9;
  int64_t v57 = a12;
  uint64_t v58 = a5;
  unint64_t v55 = a11;
  uint64_t v56 = a4;
  uint64_t v13 = sub_100726740();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13, v15);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100726700();
  __chkstk_darwin(v18, v19);
  uint64_t v20 = sub_100725F20();
  __chkstk_darwin(v20 - 8, v21);
  unint64_t v22 = v12;
  sub_1004DFE9C(5);
  uint64_t v52 = OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_q;
  sub_100462C50(0, (unint64_t *)&qword_100A45480);
  sub_100725F00();
  char v66 = _swiftEmptyArrayStorage;
  sub_1004ECCA4(&qword_100A44A68, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100431F80((uint64_t *)&unk_100A45490);
  sub_1004E018C();
  sub_100726890();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v17, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *(void *)&v22[v52] = sub_100726760();
  uint64_t v23 = OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_lock;
  sub_100431F80((uint64_t *)&unk_100A454B0);
  uint64_t v24 = swift_allocObject();
  *(_DWORD *)(v24 + 16) = 0;
  *(void *)&v22[v23] = v24;
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_rootExchangeController] = 0;
  unint64_t v25 = &v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_participantProvider];
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_participantProvider + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialProviders] = _swiftEmptyArrayStorage;
  v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_needsMaterialUpdate] = 1;
  BOOL v26 = &v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialCurrentlySentToAVC];
  uint64_t v27 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  int64_t v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56);
  v28(v26, 1, 1, v27);
  v28(&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialCurrentlySentToFramework], 1, 1, v27);
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_materialGeneration] = 0;
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_localParticipantID] = 0;
  uint64_t v29 = &v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_groupID];
  uint64_t v30 = v54;
  unint64_t v31 = v55;
  *uint64_t v29 = v53;
  v29[1] = v30;
  int64_t v32 = &v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_sessionID];
  unint64_t v33 = v57;
  uint64_t v34 = v58;
  *int64_t v32 = v56;
  v32[1] = v34;
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController] = v31;
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController] = v33;
  sub_1004407E0(v64, (uint64_t)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_cryptoHandler]);
  uint64_t v35 = v60;
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_idsdSessionProvider] = v59;
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_identityController] = v35;
  swift_beginAccess();
  *((void *)v25 + 1) = v61;
  swift_unknownObjectWeakAssign();
  type metadata accessor for IDSGroupEncryptionKeyMaterialCache2(0);
  uint64_t v36 = v31;
  uint64_t v37 = v33;
  swift_unknownObjectRetain();
  id v38 = v35;
  id v39 = v63;
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache] = sub_1005190A0((uint64_t)v39, 8);
  *(void *)&v22[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmCache] = sub_1005190A0((uint64_t)v39, 9);

  uint64_t v40 = (objc_class *)type metadata accessor for IDSGroupEncryptionControllerGroupSession();
  v65.receiver = v22;
  v65.super_class = v40;
  id v41 = objc_msgSendSuper2(&v65, "init");
  uint64_t v42 = *(void (**)(id, _UNKNOWN **))((swift_isaMask & *v36) + 0xA0);
  id v43 = v41;
  v42(v41, &off_10098F4D8);
  uint64_t v44 = *(void (**)(id, _UNKNOWN **))((swift_isaMask & *v37) + 0xA0);
  int64_t v45 = (char *)v43;
  v44(v41, &off_10098F4D8);
  unint64_t v46 = *(void (**)(id, _UNKNOWN **))(**(void **)&v45[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmCache]
                                               + 136);
  uint64_t v47 = v45;
  swift_retain();
  v46(v41, &off_10098F518);
  swift_release();
  uint64_t v48 = *(void (**)(id, _UNKNOWN **))(**(void **)&v47[OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmCache]
                                               + 136);
  uint64_t v49 = v47;
  v48(v41, &off_10098F518);

  sub_10044C6AC(v64);
  return v49;
}

void sub_1004ECC18(void *a1@<X8>)
{
  sub_1004E1B54(*(unsigned __int8 *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void (**)(char *, uint64_t, uint64_t))(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72), a1, *(void *)(v1 + 80), *(void *)(v1 + 88), *(unsigned int *)(v1 + 96) | ((unint64_t)*(unsigned __int8 *)(v1 + 100) << 32), *(unsigned char *)(v1 + 101), *(void *)(v1 + 104), *(unsigned char *)(v1 + 112), *(void *)(v1 + 120));
}

uint64_t sub_1004ECCA4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1004ECCEC()
{
  return sub_1004E6970(*(void **)(v0 + 16));
}

uint64_t sub_1004ECD18@<X0>(uint64_t a1@<X8>)
{
  return sub_1004E9690(*(void **)(v1 + 16), a1);
}

void sub_1004ECD44()
{
  sub_1004EA518(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t type metadata accessor for IDSGroupEncryptionControllerGroupSession()
{
  uint64_t result = qword_100A51770;
  if (!qword_100A51770) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004ECDC0()
{
  return type metadata accessor for IDSGroupEncryptionControllerGroupSession();
}

void sub_1004ECDC8()
{
  sub_100725ED0();
  if (v0 <= 0x3F)
  {
    sub_1004437B8();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_1004ECF10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_100431F80(&qword_100A47378);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_100726BF0();
  __break(1u);
  return result;
}

void sub_1004ED01C(char *a1@<X8>)
{
  sub_1004E7914(*(char **)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), a1);
}

void *sub_1004ED04C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_1004ED090(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_100726BA0();
    swift_bridgeObjectRelease();
  }
  sub_100462C50(0, (unint64_t *)&qword_100A47A80);
  sub_1004ED1E4();
  uint64_t result = sub_100726660();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_100726BA0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        unint64_t v6 = (void *)sub_100726A10();
        sub_10046B420(&v9, v6);
      }
    }
    else
    {
      Swift::Int v7 = (void **)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        sub_10046B420(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

unint64_t sub_1004ED1E4()
{
  unint64_t result = qword_100A48110;
  if (!qword_100A48110)
  {
    sub_100462C50(255, (unint64_t *)&qword_100A47A80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100A48110);
  }
  return result;
}

uint64_t sub_1004ED24C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004ED2B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004ED31C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1004ED37C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A47400);
  unint64_t v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    Swift::Int v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_10045C784(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004ED498(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A473F8);
  unint64_t v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10045C784(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004ED5AC(uint64_t a1)
{
  uint64_t v2 = sub_100431F80(&qword_100A47420);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2, v4);
  uint64_t v6 = (void *)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    id v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A473F0);
  uint64_t v7 = sub_100726BE0();
  id v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (uint64_t)v6 + *(int *)(v2 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_1004F72F4(v13, (uint64_t)v6);
    uint64_t v15 = *v6;
    unint64_t result = sub_1004F2D60(*v6);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v15;
    uint64_t v19 = v8[7];
    uint64_t v20 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    unint64_t result = sub_1004F6B60(v10, v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18);
    uint64_t v21 = v8[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004ED784(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A47418);
  uint64_t v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    unint64_t v6 = *v4;
    id v7 = (id)*(v4 - 2);
    sub_100441FD4(v5, v6);
    unint64_t result = sub_1004F2D60((uint64_t)v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v7;
    uint64_t v10 = (uint64_t *)(v2[7] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004ED8A0()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1004ED8EC()
{
  return swift_unknownObjectRelease();
}

void (*sub_1004ED948(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_delegate;
  v3[4] = v1;
  v3[5] = v4;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_1004ED9CC;
}

void sub_1004ED9CC(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

id sub_1004EDB08()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (id *)((char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_100431F80(&qword_100A451F0);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  char v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0x130))(v7);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    sub_10044C150((uint64_t)v9, &qword_100A451F0);
    return 0;
  }
  else
  {
    sub_1004EEA50((uint64_t)v9, (uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_1004EDCD8((uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    id v11 = v4[1];
    sub_1004EDCD8((uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
  }
  return v11;
}

uint64_t sub_1004EDCD8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_1004EDD6C()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A451F0);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  char v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0x130))(v7);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    sub_10044C150((uint64_t)v9, &qword_100A451F0);
    return 0;
  }
  else
  {
    sub_1004EEA50((uint64_t)v9, (uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_1004EDCD8((uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    unsigned int v12 = v4[*(int *)(v1 + 32)];
    sub_1004EDCD8((uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    return v12 > 1;
  }
}

id sub_1004EE0C4()
{
  uint64_t v1 = sub_100431F80(&qword_100A451F0);
  uint64_t v3 = __chkstk_darwin(v1 - 8, v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0x130))(v3);
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_10044C150((uint64_t)v5, &qword_100A451F0);
    return 0;
  }
  else
  {
    id v7 = *(id *)&v5[*(int *)(v6 + 20)];
    sub_1004EDCD8((uint64_t)v5, type metadata accessor for IDSGroupEncryptionFullIdentity);
  }
  return v7;
}

id sub_1004EE258()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A451F0);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0x130))(v7);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    sub_10044C150((uint64_t)v9, &qword_100A451F0);
    return 0;
  }
  else
  {
    sub_1004EEA50((uint64_t)v9, (uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_1004EDCD8((uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    id v11 = *(id *)&v4[*(int *)(v1 + 28)];
    sub_1004EDCD8((uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
  }
  return v11;
}

void *sub_1004EE664()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A451F0);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0x130))(v7);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    sub_10044C150((uint64_t)v9, &qword_100A451F0);
    return 0;
  }
  else
  {
    sub_1004EEA50((uint64_t)v9, (uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_1004EDCD8((uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    id v11 = sub_1005353E4();
    sub_1004EDCD8((uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
  }
  return v11;
}

id sub_1004EE884()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100431F80(&qword_100A451F0);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0xC0))(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1))
  {
    sub_10044C150((uint64_t)v10, &qword_100A451F0);
    return 0;
  }
  else
  {
    sub_1004EEA50((uint64_t)v10, (uint64_t)v5, type metadata accessor for IDSGroupEncryptionFullIdentity);
    sub_10044C150((uint64_t)v10, &qword_100A451F0);
    id v11 = *(id *)&v5[*(int *)(v1 + 20)];
    sub_1004EDCD8((uint64_t)v5, type metadata accessor for IDSGroupEncryptionFullIdentity);
  }
  return v11;
}

uint64_t sub_1004EEA50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_1004EEAFC()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v1, v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A451F0);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0xC0))(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5))
  {
    sub_10044C150((uint64_t)v14, &qword_100A451F0);
    return 0;
  }
  else
  {
    sub_1004EEA50((uint64_t)v14, (uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    sub_10044C150((uint64_t)v14, &qword_100A451F0);
    sub_1004EEA50((uint64_t)v9, (uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_1004EDCD8((uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    id v15 = *(id *)&v4[*(int *)(v1 + 28)];
    sub_1004EDCD8((uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
  }
  return v15;
}

void *sub_1004EEDDC()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A451F0);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0xC0))(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5))
  {
    sub_10044C150((uint64_t)v14, &qword_100A451F0);
    return 0;
  }
  else
  {
    sub_1004EEA50((uint64_t)v14, (uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    sub_10044C150((uint64_t)v14, &qword_100A451F0);
    sub_1004EEA50((uint64_t)v9, (uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_1004EDCD8((uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    id v15 = sub_1005353E4();
    sub_1004EDCD8((uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
  }
  return v15;
}

uint64_t sub_1004EF114()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_publicIdentitiesLock);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1004EF190((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1004EF190@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  objc_super v65 = a2;
  uint64_t v3 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v70 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8, v4);
  uint64_t v6 = (char *)&v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100431F80(&qword_100A47408);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v11 = (uint64_t *)((char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9, v12);
  uint64_t v14 = (void **)((char *)&v63 - v13);
  id v15 = (void *)sub_1004ED784((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v16 = *a1;
  uint64_t v17 = *(void *)(*a1 + 64);
  uint64_t v66 = *a1 + 64;
  uint64_t v18 = 1 << *(unsigned char *)(v16 + 32);
  uint64_t v19 = -1;
  if (v18 < 64) {
    uint64_t v19 = ~(-1 << v18);
  }
  unint64_t v20 = v19 & v17;
  int64_t v67 = (unint64_t)(v18 + 63) >> 6;
  int64_t v64 = v67 - 1;
  uint64_t v71 = v16;
  swift_bridgeObjectRetain();
  int64_t v72 = 0;
  uint64_t v68 = v11;
  uint64_t v69 = v14;
  while (1)
  {
    if (v20)
    {
      unint64_t v21 = __clz(__rbit64(v20));
      v20 &= v20 - 1;
      unint64_t v22 = v21 | (v72 << 6);
LABEL_8:
      uint64_t v23 = *(void *)(v71 + 56);
      uint64_t v24 = *(void **)(*(void *)(v71 + 48) + 8 * v22);
      *uint64_t v11 = v24;
      uint64_t v25 = v23 + *(void *)(v70 + 72) * v22;
      uint64_t v26 = sub_100431F80(&qword_100A47410);
      sub_1004EEA50(v25, (uint64_t)v11 + *(int *)(v26 + 48), type metadata accessor for IDSGroupEncryptionPublicIdentity);
      (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v11, 0, 1, v26);
      id v27 = v24;
      goto LABEL_27;
    }
    int64_t v28 = v72 + 1;
    if (__OFADD__(v72, 1)) {
      goto LABEL_47;
    }
    if (v28 < v67)
    {
      unint64_t v29 = *(void *)(v66 + 8 * v28);
      if (v29) {
        goto LABEL_12;
      }
      int64_t v30 = v72 + 2;
      ++v72;
      if (v28 + 1 < v67)
      {
        unint64_t v29 = *(void *)(v66 + 8 * v30);
        if (v29) {
          goto LABEL_15;
        }
        int64_t v72 = v28 + 1;
        if (v28 + 2 < v67)
        {
          unint64_t v29 = *(void *)(v66 + 8 * (v28 + 2));
          if (v29)
          {
            v28 += 2;
            goto LABEL_12;
          }
          int64_t v30 = v28 + 3;
          int64_t v72 = v28 + 2;
          if (v28 + 3 < v67) {
            break;
          }
        }
      }
    }
LABEL_26:
    uint64_t v31 = sub_100431F80(&qword_100A47410);
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v11, 1, 1, v31);
    unint64_t v20 = 0;
LABEL_27:
    sub_1004F728C((uint64_t)v11, (uint64_t)v14);
    uint64_t v32 = sub_100431F80(&qword_100A47410);
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v32 - 8) + 48))(v14, 1, v32) == 1)
    {
      uint64_t result = swift_release();
      *objc_super v65 = v15;
      return result;
    }
    unint64_t v33 = *v14;
    sub_1004F6B60((uint64_t)v14 + *(int *)(v32 + 48), (uint64_t)v6);
    id v34 = v33;
    uint64_t v35 = sub_1005353E4();
    if (v36 >> 60 != 15)
    {
      unint64_t v44 = v36;
      int64_t v45 = v35;
      unint64_t v73 = v20;
      unint64_t v46 = v6;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v74 = v15;
      unint64_t v49 = sub_1004F2D60((uint64_t)v34);
      uint64_t v50 = v15[2];
      BOOL v51 = (v48 & 1) == 0;
      uint64_t v52 = v50 + v51;
      if (__OFADD__(v50, v51))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
        goto LABEL_49;
      }
      char v53 = v48;
      if (v15[3] >= v52)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          id v15 = v74;
          if ((v48 & 1) == 0) {
            goto LABEL_37;
          }
        }
        else
        {
          sub_1004F4A7C();
          id v15 = v74;
          if ((v53 & 1) == 0) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_1004F31E4(v52, isUniquelyReferenced_nonNull_native);
        unint64_t v54 = sub_1004F2D60((uint64_t)v34);
        if ((v53 & 1) != (v55 & 1)) {
          goto LABEL_50;
        }
        unint64_t v49 = v54;
        id v15 = v74;
        if ((v53 & 1) == 0)
        {
LABEL_37:
          v15[(v49 >> 6) + 8] |= 1 << v49;
          *(void *)(v15[6] + 8 * v49) = v34;
          uint64_t v56 = (void *)(v15[7] + 16 * v49);
          *uint64_t v56 = v45;
          v56[1] = v44;
          uint64_t v57 = v15[2];
          BOOL v58 = __OFADD__(v57, 1);
          uint64_t v59 = v57 + 1;
          if (v58) {
            goto LABEL_48;
          }
          void v15[2] = v59;
          id v60 = v34;
          goto LABEL_42;
        }
      }
      uint64_t v61 = v15[7] + 16 * v49;
      sub_100442248(*(void *)v61, *(void *)(v61 + 8));
      *(void *)uint64_t v61 = v45;
      *(void *)(v61 + 8) = v44;
LABEL_42:

      swift_bridgeObjectRelease();
      uint64_t v6 = v46;
      uint64_t v11 = v68;
      uint64_t v14 = v69;
      unint64_t v20 = v73;
      goto LABEL_5;
    }
    swift_bridgeObjectRetain();
    unint64_t v37 = sub_1004F2D60((uint64_t)v34);
    char v39 = v38;
    swift_bridgeObjectRelease();
    if (v39)
    {
      unint64_t v73 = v20;
      char v40 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v74 = v15;
      if ((v40 & 1) == 0)
      {
        sub_1004F4A7C();
        id v15 = v74;
      }

      id v41 = (uint64_t *)(v15[7] + 16 * v37);
      uint64_t v42 = *v41;
      unint64_t v43 = v41[1];
      sub_1004F3E58(v37, (uint64_t)v15);

      swift_bridgeObjectRelease();
      sub_100442248(v42, v43);

      unint64_t v20 = v73;
    }
    else
    {
    }
LABEL_5:
    sub_1004EDCD8((uint64_t)v6, type metadata accessor for IDSGroupEncryptionPublicIdentity);
  }
  unint64_t v29 = *(void *)(v66 + 8 * v30);
  if (v29)
  {
LABEL_15:
    int64_t v28 = v30;
LABEL_12:
    unint64_t v20 = (v29 - 1) & v29;
    unint64_t v22 = __clz(__rbit64(v29)) + (v28 << 6);
    int64_t v72 = v28;
    goto LABEL_8;
  }
  while (1)
  {
    int64_t v28 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    if (v28 >= v67)
    {
      int64_t v72 = v64;
      goto LABEL_26;
    }
    unint64_t v29 = *(void *)(v66 + 8 * v28);
    ++v30;
    if (v29) {
      goto LABEL_12;
    }
  }
LABEL_49:
  __break(1u);
LABEL_50:
  sub_100462C50(0, (unint64_t *)&qword_100A47A80);
  uint64_t result = sub_100726D40();
  __break(1u);
  return result;
}

uint64_t sub_1004EF798(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100431F80(&qword_100A453F8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v10, v11);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_10044C150(a1, &qword_100A453F8);
    sub_1004F3060((uint64_t)a2, (uint64_t)v9);

    return sub_10044C150((uint64_t)v9, &qword_100A453F8);
  }
  else
  {
    sub_1004F6B60(a1, (uint64_t)v13);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_1004F4884((uint64_t)v13, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v18;

    return swift_bridgeObjectRelease();
  }
}

id sub_1004EF940(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  id v12 = sub_1004F593C(a1, a2, a3, a4, a5);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v12;
}

id sub_1004EFA84(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  id v13 = objc_allocWithZone(v6);
  id v14 = sub_1004F5D48(a1, a2, a3, a4, a5, a6);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v14;
}

uint64_t sub_1004EFB20()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_groupsLock);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  sub_1004F6150((void *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1004EFC64@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, void *a5@<X8>)
{
  uint64_t v10 = *a1;
  if (!*(void *)(*a1 + 16)) {
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  unint64_t v11 = sub_10045C784(a2, a3);
  if ((v12 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    type metadata accessor for IDSGroupEncryptionControllerGroup();
    id v15 = *(void **)&a4[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_config];
    uint64_t v16 = *(void **)&a4[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController];
    uint64_t v17 = *(void *)&a4[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_pushHandler];
    sub_1004407E0((uint64_t)&a4[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_cryptoHandler], (uint64_t)v24);
    uint64_t v18 = *(void *)&a4[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_sessionProvider];
    swift_bridgeObjectRetain();
    id v19 = v15;
    id v20 = v16;
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v21 = sub_1004F9FFC((uint64_t)a4, (uint64_t)&off_10098F5B0, a2, a3, v19, v20, v17, (uint64_t)v24, v18);
    swift_bridgeObjectRetain();
    id v13 = v21;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v24[0] = *a1;
    *a1 = 0x8000000000000000;
    sub_1004F4714((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *a1 = v24[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    char v14 = swift_isUniquelyReferenced_nonNull_native();
    v24[0] = a1[1];
    a1[1] = 0x8000000000000000;
    goto LABEL_6;
  }
  id v13 = *(id *)(*(void *)(v10 + 56) + 8 * v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char v14 = swift_isUniquelyReferenced_nonNull_native();
  v24[0] = a1[1];
  a1[1] = 0x8000000000000000;
LABEL_6:
  sub_1004F45A8(0, a2, a3, v14);
  a1[1] = v24[0];
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a5 = v13;
  return result;
}

uint64_t sub_1004EFE80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_publicIdentitiesLock);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1004F6180((uint64_t *)(v3 + 16), a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  return swift_release();
}

id sub_1004EFF04(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100725CC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4, v6);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A47D80);
  __chkstk_darwin(v9 - 8, v10);
  char v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v16 = (void *)((char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  v32[0] = [a1 wrapMode];
  id v17 = [a1 fromID];
  if (!v17)
  {
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v18 = v17;
  sub_100726430();

  id v19 = objc_allocWithZone((Class)IDSURI);
  NSString v20 = sub_100726420();
  swift_bridgeObjectRelease();
  id v21 = [v19 initWithPrefixedURI:v20];

  id v22 = [a1 pushToken];
  if (!v22)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v23 = (uint64_t)v22;
  id v24 = [a1 expirationDate];
  if (!v24)
  {
LABEL_12:
    id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v12, 1, 1, v4);
    goto LABEL_13;
  }
  uint64_t v25 = v24;
  sub_100725C70();

  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v12, v8, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v12, 0, 1, v4);
  id result = (id)(*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4);
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id result = [a1 publicIdentity];
  if (!result)
  {
LABEL_14:
    __break(1u);
    return result;
  }
  if (v32[0] == 1) {
    char v27 = 2;
  }
  else {
    char v27 = 1;
  }
  uint64_t v28 = sub_100535590((uint64_t)v21, v23, (uint64_t)v12, (uint64_t)result, v27, v16);
  unint64_t v29 = *(os_unfair_lock_s **)((char *)v2
                             + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_publicIdentitiesLock);
  __chkstk_darwin(v28, v30);
  v32[-2] = a1;
  v32[-1] = v16;
  swift_retain();
  os_unfair_lock_lock(v29 + 6);
  sub_1004F6308((uint64_t)&v29[4]);
  os_unfair_lock_unlock(v29 + 6);
  uint64_t v31 = swift_release();
  (*(void (**)(uint64_t))((swift_isaMask & *v2) + 0x198))(v31);
  return (id)sub_1004EDCD8((uint64_t)v16, type metadata accessor for IDSGroupEncryptionPublicIdentity);
}

id sub_1004F02D8(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_100431F80(&qword_100A453F8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [a2 pushToken];
  if (result)
  {
    uint64_t v10 = result;
    sub_1004EEA50(a3, (uint64_t)v8, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    uint64_t v11 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 0, 1, v11);
    return (id)sub_1004EF798((uint64_t)v8, v10);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1004F044C(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_1004F6334(a1, a2, a3, a4, a5, a6, a9, a10);
}

void sub_1004F0454(uint64_t a1, uint64_t a2, unint64_t a3, void *a4, uint64_t a5, unint64_t a6, uint64_t a7, void *a8, uint64_t a9)
{
  uint64_t v123 = a7;
  uint64_t v16 = sub_100431F80(&qword_100A453F8);
  __chkstk_darwin(v16 - 8, v17);
  unint64_t v116 = (char *)&v101 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v115 = *(void *)(v117 - 8);
  uint64_t v20 = __chkstk_darwin(v117, v19);
  uint64_t v113 = (char *)&v101 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20, v22);
  uint64_t v110 = (uint64_t)&v101 - v23;
  uint64_t v24 = sub_100725CC0();
  uint64_t v124 = *(void *)(v24 - 8);
  uint64_t v125 = v24;
  uint64_t v26 = __chkstk_darwin(v24, v25);
  uint64_t v112 = (char *)&v101 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __chkstk_darwin(v26, v28);
  uint64_t v122 = (char *)&v101 - v30;
  __chkstk_darwin(v29, v31);
  unint64_t v33 = (char *)&v101 - v32;
  uint64_t v126 = a1;
  id v34 = *(os_unfair_lock_s **)(a1 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_groupsLock);
  uint64_t v111 = a2;
  uint64_t v127 = a2;
  unint64_t v128 = a3;
  unint64_t v121 = a3;
  swift_retain();
  os_unfair_lock_lock(v34 + 8);
  sub_1004F7160((uint64_t)&v34[4], &v130);
  uint64_t v114 = 0;
  os_unfair_lock_unlock(v34 + 8);
  uint64_t v35 = v130;
  swift_release();
  if (v35
    && (unint64_t v36 = *(uint64_t (**)(void *))((swift_isaMask & *v35) + 0x2B8),
        unint64_t v37 = v35,
        char v38 = (void *)v36(a4),
        v37,
        v38,
        !v38))
  {
    unint64_t v80 = v121;
    swift_bridgeObjectRetain_n();
    id v81 = a4;
    uint64_t v82 = sub_100725EB0();
    os_log_type_t v83 = sub_1007266E0();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = swift_slowAlloc();
      uint64_t v85 = (void *)swift_slowAlloc();
      uint64_t v126 = swift_slowAlloc();
      os_log_type_t v130 = (void *)v126;
      *(_DWORD *)uint64_t v84 = 136315394;
      swift_bridgeObjectRetain();
      uint64_t v129 = sub_10043E578(v111, v80, (uint64_t *)&v130);
      sub_100726830();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v84 + 12) = 2112;
      uint64_t v129 = (uint64_t)v81;
      id v86 = v81;
      sub_100726830();
      *uint64_t v85 = v81;

      _os_log_impl((void *)&_mh_execute_header, v82, v83, "receive(publicKey): We'll drop this pre-key message for group %s since %@ is not in this group!", (uint8_t *)v84, 0x16u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    uint64_t v118 = a9;
    id v119 = a4;
    uint64_t v39 = v125;
    uint64_t v40 = v126 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_l;
    uint64_t v41 = v124;
    uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 16);
    uint64_t v109 = v124 + 16;
    uint64_t v108 = v42;
    v42(v33, v123, v125);
    sub_100441FD4(a5, a6);
    id v43 = a8;
    sub_100441FD4(a5, a6);
    id v44 = v43;
    int64_t v45 = sub_100725EB0();
    os_log_type_t v46 = sub_1007266E0();
    int v47 = v46;
    BOOL v48 = os_log_type_enabled(v45, v46);
    id v120 = v44;
    if (v48)
    {
      uint64_t v49 = swift_slowAlloc();
      uint64_t v102 = (void *)swift_slowAlloc();
      uint64_t v104 = swift_slowAlloc();
      os_log_type_t v130 = (void *)v104;
      *(_DWORD *)uint64_t v49 = 136315906;
      int v103 = v47;
      sub_100441FD4(a5, a6);
      uint64_t v50 = sub_100725AA0();
      BOOL v106 = v35;
      uint64_t v51 = v50;
      uint64_t v105 = v40;
      uint64_t v52 = v44;
      unint64_t v54 = v53;
      sub_100442248(a5, a6);
      uint64_t v129 = sub_10043E578(v51, v54, (uint64_t *)&v130);
      sub_100726830();
      swift_bridgeObjectRelease();
      sub_100442248(a5, a6);
      sub_100442248(a5, a6);
      *(_WORD *)(v49 + 12) = 2080;
      sub_1004F68BC(&qword_100A459E8, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v55 = sub_100726D00();
      uint64_t v129 = sub_10043E578(v55, v56, (uint64_t *)&v130);
      sub_100726830();
      swift_bridgeObjectRelease();
      uint64_t v107 = *(void (**)(char *, uint64_t))(v41 + 8);
      v107(v33, v125);
      *(_WORD *)(v49 + 22) = 2112;
      uint64_t v129 = (uint64_t)v52;
      id v57 = v52;
      uint64_t v35 = v106;
      sub_100726830();
      void *v102 = v52;

      *(_WORD *)(v49 + 32) = 2080;
      uint64_t v129 = v118;
      type metadata accessor for IDSRealTimeEncryptionKMWrapMode(0);
      uint64_t v58 = sub_100726480();
      uint64_t v129 = sub_10043E578(v58, v59, (uint64_t *)&v130);
      sub_100726830();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v45, (os_log_type_t)v103, "receive(publicKey): public key: %s serverDate:%s pushToken: %@ wrapMode: %s", (uint8_t *)v49, 0x2Au);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v39 = v125;
      swift_slowDealloc();
    }
    else
    {

      sub_100442248(a5, a6);
      sub_100442248(a5, a6);
      uint64_t v107 = *(void (**)(char *, uint64_t))(v41 + 8);
      v107(v33, v39);
    }
    id v60 = (void *)v126;
    uint64_t v61 = *(void *)(v126 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_cryptoHandler + 24);
    uint64_t v62 = *(void *)(v126 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_cryptoHandler + 32);
    sub_10044C0F4((void *)(v126 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_cryptoHandler), v61);
    uint64_t v63 = (void *)(*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v62 + 56))(a5, a6, v61, v62);
    int64_t v64 = v63;
    if (v65)
    {
      sub_1004F71E4(v63, 1);
      unint64_t v72 = v121;
      swift_bridgeObjectRetain_n();
      id v73 = v119;
      uint64_t v74 = sub_100725EB0();
      os_log_type_t v75 = sub_1007266C0();
      if (os_log_type_enabled(v74, v75))
      {
        uint64_t v76 = swift_slowAlloc();
        uint64_t v77 = (void *)swift_slowAlloc();
        os_log_type_t v130 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v76 = 136315394;
        swift_bridgeObjectRetain();
        uint64_t v129 = sub_10043E578(v111, v72, (uint64_t *)&v130);
        sub_100726830();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v76 + 12) = 2112;
        uint64_t v129 = (uint64_t)v73;
        id v78 = v73;
        BOOL v106 = v35;
        id v79 = v78;
        sub_100726830();
        *uint64_t v77 = v73;

        _os_log_impl((void *)&_mh_execute_header, v74, v75, "Couldn't create the public identity for the group %s, fromID: %@", (uint8_t *)v76, 0x16u);
        sub_100431F80(&qword_100A44F10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
    }
    else
    {
      uint64_t v66 = v122;
      sub_100725BD0();
      uint64_t v67 = (uint64_t)v116;
      (*(void (**)(id))((swift_isaMask & *v60) + 0x150))(v120);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v115 + 48))(v67, 1, v117) == 1)
      {
        sub_10044C150(v67, &qword_100A453F8);
        uint64_t v68 = v113;
        uint64_t v70 = v118;
        id v69 = v119;
        uint64_t v71 = (uint64_t)v112;
      }
      else
      {
        uint64_t v87 = v110;
        sub_1004F6B60(v67, v110);
        uint64_t v88 = sub_1005353E4();
        unint64_t v90 = v89;
        sub_100441FD4(a5, a6);
        if (v90 >> 60 == 15)
        {
          sub_10044CE88(a5, a6);
          sub_10044CE88((uint64_t)v88, v90);
          uint64_t v68 = v113;
          uint64_t v70 = v118;
          id v69 = v119;
          uint64_t v66 = v122;
          uint64_t v71 = (uint64_t)v112;
        }
        else
        {
          sub_100441FD4(a5, a6);
          char v91 = sub_100453588(a5, a6, (uint64_t)v88, v90);
          sub_10044CE88((uint64_t)v88, v90);
          sub_100442248(a5, a6);
          sub_100442248(a5, a6);
          uint64_t v68 = v113;
          uint64_t v70 = v118;
          id v69 = v119;
          uint64_t v66 = v122;
          uint64_t v71 = (uint64_t)v112;
          if (v91)
          {
            v107(v122, v39);
            v108(v66, v87 + *(int *)(v117 + 24), v39);
          }
        }
        sub_1004EDCD8(v87, type metadata accessor for IDSGroupEncryptionPublicIdentity);
      }
      v108((char *)v71, (uint64_t)v66, v39);
      id v92 = v69;
      id v93 = v120;
      sub_1004F71F0(v64, 0);
      if (v70 == 1) {
        char v94 = 2;
      }
      else {
        char v94 = 1;
      }
      uint64_t v95 = sub_100535590((uint64_t)v69, (uint64_t)v93, v71, (uint64_t)v64, v94, v68);
      uint64_t v96 = v39;
      uint64_t v97 = *(os_unfair_lock_s **)(v126
                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_publicIdentitiesLock);
      __chkstk_darwin(v95, v98);
      *(&v101 - 2) = (uint64_t)v93;
      *(&v101 - 1) = (uint64_t)v68;
      swift_retain();
      os_unfair_lock_lock(v97 + 6);
      sub_1004F71FC((uint64_t)&v97[4]);
      os_unfair_lock_unlock(v97 + 6);
      swift_release();
      if (v35)
      {
        uint64_t v99 = *(void (**)(void))((swift_isaMask & *v35) + 0x390);
        unint64_t v100 = v35;
        v99();

        sub_1004F71E4(v64, 0);
        v107(v122, v96);
      }
      else
      {
        v107(v122, v96);
        sub_1004F71E4(v64, 0);
      }
      sub_1004EDCD8((uint64_t)v68, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    }
  }
}

uint64_t sub_1004F1278(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v5 = sub_100431F80(&qword_100A453F8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1004EEA50(a3, (uint64_t)v8, type metadata accessor for IDSGroupEncryptionPublicIdentity);
  uint64_t v9 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 0, 1, v9);
  return sub_1004EF798((uint64_t)v8, a2);
}

uint64_t sub_1004F1518()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_publicIdentitiesLock);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1004F672C((uint64_t *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1004F1598@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = sub_100431F80(&qword_100A453F8);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10, v12);
  uint64_t v14 = (char *)&v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *a1;
  if (*(void *)(v15 + 16))
  {
    id v16 = a2;
    unint64_t v17 = sub_1004F2D60((uint64_t)v16);
    if (v18)
    {
      sub_1004EEA50(*(void *)(v15 + 56) + *(void *)(v11 + 72) * v17, (uint64_t)v9, type metadata accessor for IDSGroupEncryptionPublicIdentity);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
    }

    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
    {
      sub_1004F6B60((uint64_t)v9, (uint64_t)v14);
      id v20 = sub_100535630();
      uint64_t result = sub_1004EDCD8((uint64_t)v14, type metadata accessor for IDSGroupEncryptionPublicIdentity);
      goto LABEL_9;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, 1, 1, v10);
  }
  uint64_t result = sub_10044C150((uint64_t)v9, &qword_100A453F8);
  id v20 = 0;
LABEL_9:
  *a3 = v20;
  return result;
}

uint64_t sub_1004F1868(uint64_t a1, unint64_t a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_100725EF0();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  __chkstk_darwin(v8, v9);
  uint64_t v51 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_100725F20();
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52, v11);
  uint64_t v49 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100725EE0();
  uint64_t v43 = *(void *)(v44 - 8);
  __chkstk_darwin(v44, v13);
  uint64_t v15 = (uint64_t *)((char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v48 = sub_100725F50();
  uint64_t v47 = *(void *)(v48 - 8);
  uint64_t v17 = __chkstk_darwin(v48, v16);
  uint64_t v19 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17, v20);
  os_log_type_t v46 = (char *)&v41 - v21;
  uint64_t v22 = *(os_unfair_lock_s **)&v3[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_groupsLock];
  uint64_t v55 = a1;
  unint64_t v56 = a2;
  swift_retain();
  os_unfair_lock_lock(v22 + 8);
  sub_1004F6758((uint64_t)&v22[4]);
  os_unfair_lock_unlock(v22 + 8);
  swift_release();
  swift_bridgeObjectRetain_n();
  uint64_t v23 = sub_100725EB0();
  os_log_type_t v24 = sub_1007266E0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v45 = a1;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315650;
    uint64_t v42 = v4;
    uint64_t v57 = sub_10043E578(0xD00000000000001ALL, 0x80000001008C47B0, aBlock);
    sub_100726830();
    *(_WORD *)(v26 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_10043E578(a1, a2, aBlock);
    uint64_t v4 = v42;
    sub_100726830();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v26 + 22) = 2048;
    uint64_t v57 = *(void *)&a3;
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: scheduling cleaning up for group %s after %f seconds.", (uint8_t *)v26, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v27 = *(char **)&v4[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_q];
  uint64_t result = sub_100725F30();
  if ((~*(void *)&a3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (a3 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (a3 < 9.22337204e18)
  {
    *uint64_t v15 = (uint64_t)a3;
    uint64_t v29 = v43;
    uint64_t v30 = v44;
    (*(void (**)(void *, void, uint64_t))(v43 + 104))(v15, enum case for DispatchTimeInterval.seconds(_:), v44);
    uint64_t v31 = v46;
    uint64_t v42 = v27;
    sub_100725F40();
    (*(void (**)(void *, uint64_t))(v29 + 8))(v15, v30);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v47 + 8);
    uint64_t v33 = v48;
    v32(v19, v48);
    id v34 = (void *)swift_allocObject();
    uint64_t v35 = v45;
    v34[2] = v4;
    v34[3] = v35;
    v34[4] = a2;
    aBlock[4] = (uint64_t)sub_1004F6824;
    aBlock[5] = (uint64_t)v34;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_100435714;
    aBlock[3] = (uint64_t)&unk_10098F588;
    unint64_t v36 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    unint64_t v37 = v4;
    char v38 = v49;
    sub_100725F00();
    uint64_t v57 = (uint64_t)_swiftEmptyArrayStorage;
    sub_1004F68BC((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100431F80((uint64_t *)&unk_100A454C0);
    sub_1004413A8((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
    uint64_t v39 = v51;
    uint64_t v40 = v54;
    sub_100726890();
    sub_100726710();
    _Block_release(v36);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v39, v40);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v52);
    v32(v31, v33);
    return swift_release();
  }
LABEL_10:
  __break(1u);
  return result;
}

id sub_1004F201C()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100431F80(&qword_100A451F0);
  uint64_t v7 = __chkstk_darwin(v5 - 8, v6);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0x130))(v7);
  uint64_t v10 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48))(v9, 1, v10) == 1)
  {
    sub_10044C150((uint64_t)v9, &qword_100A451F0);
    return 0;
  }
  else
  {
    sub_1004EEA50((uint64_t)v9, (uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_1004EDCD8((uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    id v11 = sub_100535630();
    sub_1004EDCD8((uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
  }
  return v11;
}

id sub_1004F2230()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v1 - 8, v2);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5, v7);
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100431F80(&qword_100A451F0);
  uint64_t v12 = __chkstk_darwin(v10 - 8, v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0xC0))(v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v14, 1, v5))
  {
    sub_10044C150((uint64_t)v14, &qword_100A451F0);
    return 0;
  }
  else
  {
    sub_1004EEA50((uint64_t)v14, (uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    sub_10044C150((uint64_t)v14, &qword_100A451F0);
    sub_1004EEA50((uint64_t)v9, (uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    sub_1004EDCD8((uint64_t)v9, type metadata accessor for IDSGroupEncryptionFullIdentity);
    id v15 = sub_100535630();
    sub_1004EDCD8((uint64_t)v4, type metadata accessor for IDSGroupEncryptionPublicIdentity);
  }
  return v15;
}

id sub_1004F25F0()
{
  uint64_t v1 = sub_100431F80(&qword_100A451F0);
  uint64_t v3 = __chkstk_darwin(v1 - 8, v2);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0x130))(v3);
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6) == 1)
  {
    sub_10044C150((uint64_t)v5, &qword_100A451F0);
    return 0;
  }
  else
  {
    id v7 = sub_1005359BC();
    sub_1004EDCD8((uint64_t)v5, type metadata accessor for IDSGroupEncryptionFullIdentity);
  }
  return v7;
}

id sub_1004F277C()
{
  uint64_t v1 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1, v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100431F80(&qword_100A451F0);
  uint64_t v8 = __chkstk_darwin(v6 - 8, v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t))((swift_isaMask & **(void **)(v0
                                                                 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController))
                                  + 0xC0))(v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v10, 1, v1))
  {
    sub_10044C150((uint64_t)v10, &qword_100A451F0);
    return 0;
  }
  else
  {
    sub_1004EEA50((uint64_t)v10, (uint64_t)v5, type metadata accessor for IDSGroupEncryptionFullIdentity);
    sub_10044C150((uint64_t)v10, &qword_100A451F0);
    id v11 = sub_1005359BC();
    sub_1004EDCD8((uint64_t)v5, type metadata accessor for IDSGroupEncryptionFullIdentity);
  }
  return v11;
}

uint64_t sub_1004F2944()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_publicIdentitiesLock);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1004F29C0((uint64_t *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));

  return swift_release();
}

uint64_t sub_1004F29C0(uint64_t *a1)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1004F520C(v2, v3);
  uint64_t result = swift_bridgeObjectRelease_n();
  *a1 = v4;
  return result;
}

uint64_t sub_1004F2A14()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x198))();
}

void sub_1004F2A50(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_sessionProvider);
  NSString v4 = sub_100726420();
  id v5 = [v3 sessionWithUniqueID:v4];

  if (v5)
  {
    [v5 recvKeyMaterial:a1];
    swift_unknownObjectRelease();
  }
}

id sub_1004F2B24()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for IDSGroupEncryptionController2();
  return objc_msgSendSuper2(&v2, "dealloc");
}

uint64_t sub_1004F2C50()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x150))();
}

uint64_t sub_1004F2C8C()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1A0))();
}

uint64_t sub_1004F2CC8()
{
  return (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1A8))();
}

uint64_t sub_1004F2D04()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **v0) + 0x150))();
}

unint64_t sub_1004F2D60(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_1007267E0(*(void *)(v2 + 40));

  return sub_1004F2DA4(a1, v4);
}

unint64_t sub_1004F2DA4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_100462C50(0, (unint64_t *)&qword_100A47A80);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_1007267F0();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_1007267F0();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

uint64_t sub_1004F2EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10045C784(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 2;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1004F4C40();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(unsigned __int8 *)(*(void *)(v9 + 56) + v6);
  sub_1004F400C(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1004F2F90(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_10045C784(a1, a2);
  LOBYTE(a2) = v7;
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v9 = *v3;
  uint64_t v12 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1004F4DEC();
    uint64_t v9 = v12;
  }
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(*(void *)(v9 + 56) + 8 * v6);
  sub_1004F41E4(v6, v9);
  *uint64_t v3 = v9;
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1004F3060@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_1004F2D60(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v19 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_1004F4FA0();
      uint64_t v9 = v19;
    }

    uint64_t v10 = *(void *)(v9 + 56);
    uint64_t v11 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    uint64_t v18 = *(void *)(v11 - 8);
    sub_1004F6B60(v10 + *(void *)(v18 + 72) * v6, a2);
    sub_1004F43BC(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56);
    uint64_t v13 = a2;
    uint64_t v14 = 0;
    uint64_t v15 = v11;
  }
  else
  {
    uint64_t v16 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
  }

  return v12(v13, v14, 1, v15);
}

uint64_t sub_1004F31E4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A47418);
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v32 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v12 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v13 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v15 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v20 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v21 = v20 | (v15 << 6);
      }
      else
      {
        int64_t v22 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v12) {
          goto LABEL_33;
        }
        unint64_t v23 = v9[v22];
        ++v15;
        if (!v23)
        {
          int64_t v15 = v22 + 1;
          if (v22 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v23 = v9[v15];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v12)
            {
LABEL_33:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_40;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v9 = -1 << v31;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v23 = v9[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v15 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v15 >= v12) {
                  goto LABEL_33;
                }
                unint64_t v23 = v9[v15];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v15 = v24;
          }
        }
LABEL_30:
        unint64_t v11 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v15 << 6);
      }
      uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v21);
      if ((a2 & 1) == 0)
      {
        id v30 = v29;
        sub_100441FD4(v33, *((unint64_t *)&v33 + 1));
      }
      uint64_t result = sub_1007267E0(*(void *)(v7 + 40));
      uint64_t v16 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v17 = result & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v18 == v26;
          if (v18 == v26) {
            unint64_t v18 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v13 + 8 * v18);
        }
        while (v28 == -1);
        unint64_t v19 = __clz(__rbit64(~v28)) + (v18 << 6);
      }
      *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v7 + 48) + 8 * v19) = v29;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v19) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1004F34BC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A473F8);
  char v37 = a2;
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(unsigned char *)(*(void *)(v5 + 56) + v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_100726DD0();
    sub_100726490();
    uint64_t result = sub_100726E30();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(unsigned char *)(*(void *)(v7 + 56) + v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1004F37C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_100431F80(&qword_100A47400);
  char v38 = a2;
  uint64_t v6 = sub_100726BC0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    char v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_100726DD0();
    sub_100726490();
    uint64_t result = sub_100726E30();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    void *v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1004F3AD8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v41 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8, v6);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_100431F80(&qword_100A473F0);
  int v42 = a2;
  uint64_t v10 = sub_100726BC0();
  uint64_t v11 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v39 = v2;
  uint64_t v40 = (void *)(v9 + 64);
  if (v12 < 64) {
    uint64_t v14 = ~(-1 << v12);
  }
  else {
    uint64_t v14 = -1;
  }
  unint64_t v15 = v14 & v13;
  int64_t v16 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v17 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v19 = 0;
  while (1)
  {
    if (v15)
    {
      unint64_t v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v22 = v21 | (v19 << 6);
      goto LABEL_22;
    }
    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v23 >= v16) {
      break;
    }
    int64_t v24 = v40;
    unint64_t v25 = v40[v23];
    ++v19;
    if (!v25)
    {
      int64_t v19 = v23 + 1;
      if (v23 + 1 >= v16) {
        goto LABEL_34;
      }
      unint64_t v25 = v40[v19];
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v16)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v25 = v40[v26];
        if (!v25)
        {
          while (1)
          {
            int64_t v19 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_43;
            }
            if (v19 >= v16) {
              goto LABEL_34;
            }
            unint64_t v25 = v40[v19];
            ++v26;
            if (v25) {
              goto LABEL_21;
            }
          }
        }
        int64_t v19 = v26;
      }
    }
LABEL_21:
    unint64_t v15 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v19 << 6);
LABEL_22:
    BOOL v27 = *(void **)(*(void *)(v9 + 48) + 8 * v22);
    uint64_t v28 = *(void *)(v41 + 72);
    uint64_t v29 = *(void *)(v9 + 56) + v28 * v22;
    if (v42)
    {
      sub_1004F6B60(v29, (uint64_t)v8);
    }
    else
    {
      sub_1004EEA50(v29, (uint64_t)v8, type metadata accessor for IDSGroupEncryptionPublicIdentity);
      id v30 = v27;
    }
    uint64_t result = sub_1007267E0(*(void *)(v11 + 40));
    uint64_t v31 = -1 << *(unsigned char *)(v11 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v17 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v32) & ~*(void *)(v17 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v17 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v20 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(void *)(*(void *)(v11 + 48) + 8 * v20) = v27;
    uint64_t result = sub_1004F6B60((uint64_t)v8, *(void *)(v11 + 56) + v28 * v20);
    ++*(void *)(v11 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = v40;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v9 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v9 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v11;
  return result;
}

void sub_1004F3E58(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1007268A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = sub_1007267E0(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v3);
            unint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *uint64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            unint64_t v20 = (_OWORD *)(v19 + 16 * v3);
            unint64_t v21 = (_OWORD *)(v19 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *unint64_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *unint64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

unint64_t sub_1004F400C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1007268A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_100726DD0();
        swift_bridgeObjectRetain();
        sub_100726490();
        Swift::Int v9 = sub_100726E30();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          Swift::Int v12 = (_OWORD *)(v11 + 16 * v3);
          Swift::Int v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *Swift::Int v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (unsigned char *)(v14 + v3);
          uint64_t v16 = (unsigned char *)(v14 + v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *unint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_1004F41E4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_1007268A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_100726DD0();
        swift_bridgeObjectRetain();
        sub_100726490();
        Swift::Int v9 = sub_100726E30();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          Swift::Int v12 = (_OWORD *)(v11 + 16 * v3);
          Swift::Int v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *Swift::Int v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          unint64_t v15 = (void *)(v14 + 8 * v3);
          uint64_t v16 = (void *)(v14 + 8 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *unint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  *uint64_t v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_1004F43BC(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_1007268A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = sub_1007267E0(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 < v9 || v3 < v13) {
            goto LABEL_6;
          }
        }
        else if (v13 < v9 && v3 < v13)
        {
          goto LABEL_6;
        }
        uint64_t v16 = *(void *)(a2 + 48);
        uint64_t v17 = (void *)(v16 + 8 * v3);
        uint64_t v18 = (void *)(v16 + 8 * v6);
        if (v3 != v6 || v17 >= v18 + 1) {
          *uint64_t v17 = *v18;
        }
        uint64_t v19 = *(void *)(a2 + 56);
        uint64_t v20 = *(void *)(*(void *)(type metadata accessor for IDSGroupEncryptionPublicIdentity(0) - 8) + 72);
        int64_t v21 = v20 * v3;
        unint64_t v22 = v19 + v20 * v3;
        int64_t v23 = v20 * v6;
        unint64_t v24 = v19 + v20 * v6 + v20;
        if (v21 < v23 || v22 >= v24)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v21 == v23) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    BOOL v26 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v27 = *v26;
    uint64_t v28 = (-1 << v3) - 1;
  }
  else
  {
    BOOL v26 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v28 = *v26;
    uint64_t v27 = (-1 << a1) - 1;
  }
  *BOOL v26 = v28 & v27;
  uint64_t v29 = *(void *)(a2 + 16);
  BOOL v30 = __OFSUB__(v29, 1);
  uint64_t v31 = v29 - 1;
  if (v30)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v31;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_1004F45A8(char a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10045C784(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1004F4C40();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(unsigned char *)(v18[7] + v12) = a1 & 1;
      return result;
    }
    goto LABEL_11;
  }
  sub_1004F34BC(result, a4 & 1);
  uint64_t result = sub_10045C784(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_100726D40();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  *uint64_t v20 = a2;
  v20[1] = a3;
  *(unsigned char *)(v18[7] + v12) = a1 & 1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v23;

  return swift_bridgeObjectRetain();
}

void sub_1004F4714(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_10045C784(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1004F4DEC();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1004F37C8(v15, a4 & 1);
  unint64_t v20 = sub_10045C784(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_100726D40();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  BOOL v22 = (uint64_t *)(v18[6] + 16 * v12);
  *BOOL v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v18[2] = v25;

  swift_bridgeObjectRetain();
}

id sub_1004F4884(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v7 = (void *)*v3;
  unint64_t v9 = sub_1004F2D60((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_1004F4FA0();
      goto LABEL_7;
    }
    sub_1004F3AD8(v12, a3 & 1);
    unint64_t v19 = sub_1004F2D60((uint64_t)a2);
    if ((v13 & 1) == (v20 & 1))
    {
      unint64_t v9 = v19;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    sub_100462C50(0, (unint64_t *)&qword_100A47A80);
    id result = (id)sub_100726D40();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = v15[7];
    uint64_t v17 = v16
        + *(void *)(*(void *)(type metadata accessor for IDSGroupEncryptionPublicIdentity(0) - 8) + 72) * v9;
    return (id)sub_1004F7228(a1, v17);
  }
LABEL_13:
  sub_1004F49E8(v9, (uint64_t)a2, a1, v15);

  return a2;
}

uint64_t sub_1004F49E8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t result = sub_1004F6B60(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

void *sub_1004F4A7C()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A47418);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v23 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v23;
    id v19 = v17;
    uint64_t result = (void *)sub_100441FD4(v23, *((unint64_t *)&v23 + 1));
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1004F4C40()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A473F8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    LOBYTE(v16) = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    id v19 = (void *)(*(void *)(v4 + 48) + 16 * v15);
    *id v19 = v18;
    v19[1] = v17;
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = (_BYTE)v16;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1004F4DEC()
{
  uint64_t v1 = v0;
  sub_100431F80(&qword_100A47400);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_100726BB0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    int64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1004F4FA0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8, v3);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100431F80(&qword_100A473F0);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_100726BB0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    id result = (id)swift_release();
LABEL_25:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v25 = v1;
  id result = (id)(v7 + 64);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v10 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 64), 8 * v11);
  }
  int64_t v12 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v6 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_9;
    }
    int64_t v22 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v22 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v12;
    if (!v23)
    {
      int64_t v12 = v22 + 1;
      if (v22 + 1 >= v16) {
        goto LABEL_23;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v12);
      if (!v23) {
        break;
      }
    }
LABEL_22:
    unint64_t v15 = (v23 - 1) & v23;
    unint64_t v18 = __clz(__rbit64(v23)) + (v12 << 6);
LABEL_9:
    uint64_t v19 = 8 * v18;
    int64_t v20 = *(void **)(*(void *)(v6 + 48) + 8 * v18);
    unint64_t v21 = *(void *)(v26 + 72) * v18;
    sub_1004EEA50(*(void *)(v6 + 56) + v21, (uint64_t)v5, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    *(void *)(*(void *)(v8 + 48) + v19) = v20;
    sub_1004F6B60((uint64_t)v5, *(void *)(v8 + 56) + v21);
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v16)
  {
LABEL_23:
    id result = (id)swift_release();
    uint64_t v1 = v25;
    goto LABEL_25;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v12 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_23;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v12);
    ++v24;
    if (v23) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1004F520C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe, a2);
    bzero((char *)&v11 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_1004F5364((unint64_t *)((char *)&v11 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v7;
    }
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    sub_1004F5364((unint64_t *)v8, v5, v3);
    uint64_t v3 = v9;
    swift_slowDealloc();
  }
  return v3;
}

void sub_1004F5364(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v24 = a2;
  uint64_t v25 = a1;
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8, v6);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0;
  int64_t v9 = 0;
  uint64_t v10 = *(void *)(a3 + 64);
  uint64_t v27 = a3 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v9 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v14) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v27 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_24;
      }
      unint64_t v21 = *(void *)(v27 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v14) {
          goto LABEL_24;
        }
        unint64_t v21 = *(void *)(v27 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_5:
    unint64_t v17 = *(void **)(*(void *)(a3 + 48) + 8 * v16);
    sub_1004EEA50(*(void *)(a3 + 56) + *(void *)(v5 + 72) * v16, (uint64_t)v8, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    id v18 = v17;
    char v19 = sub_1005354B0();
    sub_1004EDCD8((uint64_t)v8, type metadata accessor for IDSGroupEncryptionPublicIdentity);

    if ((v19 & 1) == 0)
    {
      *(unint64_t *)((char *)v25 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
LABEL_24:
        sub_1004F55D4(v25, v24, v26, (void *)a3);
        return;
      }
    }
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v14) {
    goto LABEL_24;
  }
  unint64_t v21 = *(void *)(v27 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v14) {
      goto LABEL_24;
    }
    unint64_t v21 = *(void *)(v27 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
}

uint64_t sub_1004F55D4(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v43 = a1;
  uint64_t v7 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7 - 8, v8);
  uint64_t v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9, v12);
  uint64_t v44 = (uint64_t)&v42 - v13;
  if (!a3) {
    return (uint64_t)&_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_100431F80(&qword_100A473F0);
  uint64_t result = sub_100726BE0();
  uint64_t v15 = result;
  uint64_t v42 = a2;
  if (a2 < 1) {
    unint64_t v16 = 0;
  }
  else {
    unint64_t v16 = *v43;
  }
  uint64_t v17 = 0;
  uint64_t v18 = result + 64;
  while (1)
  {
    if (v16)
    {
      unint64_t v19 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v20 = v19 | (v17 << 6);
    }
    else
    {
      uint64_t v21 = v17 + 1;
      if (__OFADD__(v17, 1)) {
        goto LABEL_40;
      }
      if (v21 >= v42) {
        return v15;
      }
      unint64_t v22 = v43[v21];
      ++v17;
      if (!v22)
      {
        uint64_t v17 = v21 + 1;
        if (v21 + 1 >= v42) {
          return v15;
        }
        unint64_t v22 = v43[v17];
        if (!v22)
        {
          uint64_t v17 = v21 + 2;
          if (v21 + 2 >= v42) {
            return v15;
          }
          unint64_t v22 = v43[v17];
          if (!v22)
          {
            uint64_t v23 = v21 + 3;
            if (v23 >= v42) {
              return v15;
            }
            unint64_t v22 = v43[v23];
            if (!v22)
            {
              while (1)
              {
                uint64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v42) {
                  return v15;
                }
                unint64_t v22 = v43[v17];
                ++v23;
                if (v22) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v23;
          }
        }
      }
LABEL_24:
      unint64_t v16 = (v22 - 1) & v22;
      unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
    }
    uint64_t v24 = a4[7];
    uint64_t v25 = a4;
    uint64_t v26 = *(void **)(a4[6] + 8 * v20);
    uint64_t v27 = v44;
    uint64_t v28 = *(void *)(v45 + 72);
    sub_1004EEA50(v24 + v28 * v20, v44, type metadata accessor for IDSGroupEncryptionPublicIdentity);
    uint64_t v29 = v27;
    BOOL v30 = v11;
    sub_1004F6B60(v29, (uint64_t)v11);
    Swift::Int v31 = *(void *)(v15 + 40);
    id v32 = v26;
    uint64_t result = sub_1007267E0(v31);
    uint64_t v33 = -1 << *(unsigned char *)(v15 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v18 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v36 = __clz(__rbit64((-1 << v34) & ~*(void *)(v18 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      uint64_t v11 = v30;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v33) >> 6;
      uint64_t v11 = v30;
      do
      {
        if (++v35 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v39 = v35 == v38;
        if (v35 == v38) {
          unint64_t v35 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v18 + 8 * v35);
      }
      while (v40 == -1);
      unint64_t v36 = __clz(__rbit64(~v40)) + (v35 << 6);
    }
    *(void *)(v18 + ((v36 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v36;
    *(void *)(*(void *)(v15 + 48) + 8 * v36) = v32;
    uint64_t result = sub_1004F6B60((uint64_t)v11, *(void *)(v15 + 56) + v36 * v28);
    ++*(void *)(v15 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v25;
    if (!a3) {
      return v15;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

id sub_1004F593C(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  unint64_t v38 = a4;
  uint64_t v39 = a5;
  unint64_t v36 = a2;
  uint64_t v37 = a3;
  uint64_t v35 = a1;
  uint64_t v34 = sub_100726740();
  uint64_t v6 = *(void *)(v34 - 8);
  __chkstk_darwin(v34, v7);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100726700();
  __chkstk_darwin(v10, v11);
  uint64_t v12 = sub_100725F20();
  __chkstk_darwin(v12 - 8, v13);
  int64_t v14 = v5;
  sub_100725EC0();
  uint64_t v33 = OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_q;
  sub_100462C50(0, (unint64_t *)&qword_100A45480);
  sub_100725F00();
  uint64_t v41 = _swiftEmptyArrayStorage;
  sub_1004F68BC(&qword_100A44A68, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100431F80((uint64_t *)&unk_100A45490);
  sub_1004413A8((unint64_t *)&qword_100A44A70, (uint64_t *)&unk_100A45490);
  sub_100726890();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v9, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v34);
  *(void *)&v14[v33] = sub_100726760();
  uint64_t v15 = OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_groupsLock;
  unint64_t v16 = sub_1004ED37C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v17 = sub_1004ED498((uint64_t)_swiftEmptyArrayStorage);
  sub_100431F80(&qword_100A473B8);
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 32) = 0;
  *(void *)(v18 + 16) = v16;
  *(void *)(v18 + 24) = v17;
  *(void *)&v14[v15] = v18;
  uint64_t v19 = OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_publicIdentitiesLock;
  unint64_t v20 = sub_1004ED5AC((uint64_t)_swiftEmptyArrayStorage);
  sub_100431F80(&qword_100A473C0);
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + 24) = 0;
  *(void *)(v21 + 16) = v20;
  *(void *)&v14[v19] = v21;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  uint64_t v23 = v36;
  uint64_t v22 = v37;
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_config] = v36;
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_sessionProvider] = v22;
  uint64_t v25 = v38;
  uint64_t v24 = v39;
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController] = v38;
  *(void *)&v14[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_pushHandler] = v24;
  uint64_t v26 = type metadata accessor for IDSGroupEncryptionDefaultCryptoHandler();
  id v27 = v23;
  swift_unknownObjectRetain();
  id v28 = v25;
  swift_unknownObjectRetain();
  id v29 = IDSDSessionKeyValueDelivery.__allocating_init()();
  BOOL v30 = &v14[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_cryptoHandler];
  *((void *)v30 + 3) = v26;
  *((void *)v30 + 4) = &off_10098FC40;
  *(void *)BOOL v30 = v29;

  Swift::Int v31 = (objc_class *)type metadata accessor for IDSGroupEncryptionController2();
  v40.receiver = v14;
  v40.super_class = v31;
  return objc_msgSendSuper2(&v40, "init");
}

id sub_1004F5D48(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a6;
  uint64_t v41 = a5;
  uint64_t v38 = a3;
  uint64_t v39 = a4;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  uint64_t v35 = sub_100726740();
  uint64_t v7 = *(void *)(v35 - 8);
  __chkstk_darwin(v35, v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100726700();
  __chkstk_darwin(v11, v12);
  uint64_t v13 = sub_100725F20();
  __chkstk_darwin(v13 - 8, v14);
  uint64_t v15 = v6;
  sub_100725EC0();
  uint64_t v34 = OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_q;
  sub_100462C50(0, (unint64_t *)&qword_100A45480);
  sub_100725F00();
  uint64_t v43 = _swiftEmptyArrayStorage;
  sub_1004F68BC(&qword_100A44A68, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100431F80((uint64_t *)&unk_100A45490);
  sub_1004413A8((unint64_t *)&qword_100A44A70, (uint64_t *)&unk_100A45490);
  sub_100726890();
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v35);
  *(void *)&v15[v34] = sub_100726760();
  uint64_t v16 = OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_groupsLock;
  unint64_t v17 = sub_1004ED37C((uint64_t)_swiftEmptyArrayStorage);
  unint64_t v18 = sub_1004ED498((uint64_t)_swiftEmptyArrayStorage);
  sub_100431F80(&qword_100A473B8);
  uint64_t v19 = swift_allocObject();
  *(_DWORD *)(v19 + 32) = 0;
  *(void *)(v19 + 16) = v17;
  *(void *)(v19 + 24) = v18;
  *(void *)&v15[v16] = v19;
  uint64_t v20 = OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_publicIdentitiesLock;
  unint64_t v21 = sub_1004ED5AC((uint64_t)_swiftEmptyArrayStorage);
  sub_100431F80(&qword_100A473C0);
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(void *)(v22 + 16) = v21;
  *(void *)&v15[v20] = v22;
  swift_unknownObjectWeakInit();
  swift_beginAccess();
  swift_unknownObjectWeakAssign();
  uint64_t v24 = v37;
  uint64_t v23 = v38;
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_config] = v37;
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_sessionProvider] = v23;
  uint64_t v26 = v39;
  uint64_t v25 = v40;
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_identityController] = v39;
  *(void *)&v15[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_pushHandler] = v25;
  uint64_t v27 = v41;
  sub_1004407E0(v41, (uint64_t)&v15[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_cryptoHandler]);
  id v28 = v24;
  swift_unknownObjectRetain();
  id v29 = v26;
  swift_unknownObjectRetain();

  BOOL v30 = (objc_class *)type metadata accessor for IDSGroupEncryptionController2();
  v42.receiver = v15;
  v42.super_class = v30;
  id v31 = objc_msgSendSuper2(&v42, "init");
  sub_10044C6AC(v27);
  return v31;
}

uint64_t sub_1004F6150@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1004EFC64(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(char **)(v2 + 32), a2);
}

void sub_1004F6180(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *a1;
  if (*(void *)(*a1 + 16))
  {
    id v6 = *(id *)(v3 + 16);
    unint64_t v7 = sub_1004F2D60((uint64_t)v6);
    if (v8)
    {
      unint64_t v9 = v7;
      uint64_t v10 = *(void *)(v5 + 56);
      uint64_t v11 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
      uint64_t v12 = *(void *)(v11 - 8);
      sub_1004EEA50(v10 + *(void *)(v12 + 72) * v9, a2, type metadata accessor for IDSGroupEncryptionPublicIdentity);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a2, 0, 1, v11);
    }
    else
    {
      uint64_t v14 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a2, 1, 1, v14);
    }
  }
  else
  {
    uint64_t v13 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a2, 1, 1, v13);
  }
}

id sub_1004F6308(uint64_t a1)
{
  return sub_1004F02D8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1004F6334(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v42 = a8;
  uint64_t v49 = a6;
  uint64_t v38 = a5;
  unint64_t v39 = a2;
  uint64_t v40 = a3;
  uint64_t v37 = a1;
  uint64_t v45 = sub_100725EF0();
  uint64_t v48 = *(void *)(v45 - 8);
  __chkstk_darwin(v45, v12);
  uint64_t v44 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100725F20();
  uint64_t v46 = *(void *)(v14 - 8);
  uint64_t v47 = v14;
  __chkstk_darwin(v14, v15);
  uint64_t v41 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100725CC0();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  __chkstk_darwin(v17, v20);
  unint64_t v21 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = *(void *)&v8[OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_q];
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, a7, v17);
  unint64_t v22 = (*(unsigned __int8 *)(v18 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  unint64_t v23 = (v19 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (char *)swift_allocObject();
  uint64_t v25 = v38;
  *((void *)v24 + 2) = v8;
  *((void *)v24 + 3) = v25;
  *((void *)v24 + 4) = v49;
  *((void *)v24 + 5) = a4;
  *((void *)v24 + 6) = a1;
  unint64_t v26 = v39;
  *((void *)v24 + 7) = v39;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(&v24[v22], v21, v17);
  uint64_t v27 = v40;
  *(void *)&v24[v23] = v40;
  *(void *)&v24[(v23 + 15) & 0xFFFFFFFFFFFFFFF8] = v42;
  aBlock[4] = sub_1004F70BC;
  aBlock[5] = v24;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_100435714;
  aBlock[3] = &unk_10098F6B0;
  id v28 = _Block_copy(aBlock);
  id v29 = v8;
  swift_bridgeObjectRetain();
  id v30 = a4;
  sub_100441FD4(v37, v26);
  id v31 = v27;
  id v32 = v41;
  sub_100725F00();
  uint64_t v50 = _swiftEmptyArrayStorage;
  sub_1004F68BC((unint64_t *)&unk_100A46890, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100431F80((uint64_t *)&unk_100A454C0);
  sub_1004413A8((unint64_t *)&qword_100A468A0, (uint64_t *)&unk_100A454C0);
  uint64_t v34 = v44;
  uint64_t v33 = v45;
  sub_100726890();
  sub_100726750();
  _Block_release(v28);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v34, v33);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v32, v47);
  return swift_release();
}

uint64_t sub_1004F672C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004F1598(a1, *(void **)(v2 + 16), a2);
}

uint64_t sub_1004F6758(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)(a1 + 8) = 0x8000000000000000;
  sub_1004F45A8(1, v3, v4, isUniquelyReferenced_nonNull_native);
  *(void *)(a1 + 8) = v7;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1004F67E4()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1004F6824()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC17identityservicesd29IDSGroupEncryptionController2_groupsLock);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 32));
  sub_1004F6BC4((void *)(v1 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 32));
  return swift_release();
}

uint64_t sub_1004F68A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1004F68B4()
{
  return swift_release();
}

uint64_t sub_1004F68BC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for IDSGroupEncryptionController2()
{
  uint64_t result = qword_100A51790;
  if (!qword_100A51790) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1004F6950()
{
  return type metadata accessor for IDSGroupEncryptionController2();
}

uint64_t sub_1004F6958()
{
  uint64_t result = sub_100725ED0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for IDSGroupEncryptionController2.GroupsLock()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s17identityservicesd29IDSGroupEncryptionController2C10GroupsLockVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for IDSGroupEncryptionController2.GroupsLock(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for IDSGroupEncryptionController2.GroupsLock(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionController2.GroupsLock()
{
  return &type metadata for IDSGroupEncryptionController2.GroupsLock;
}

ValueMetadata *type metadata accessor for IDSGroupEncryptionController2.PublicIdentityState()
{
  return &type metadata for IDSGroupEncryptionController2.PublicIdentityState;
}

uint64_t sub_1004F6B60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1004F6BC4(void *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  unint64_t v2 = *(void *)(v1 + 24);
  uint64_t v4 = a1[1];
  if (*(void *)(v4 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v6 = sub_10045C784(v3, v2);
    if (v7)
    {
      char v8 = *(unsigned char *)(*(void *)(v4 + 56) + v6);
      swift_bridgeObjectRelease();
      if (v8)
      {
        uint64_t v9 = *a1;
        if (*(void *)(*a1 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v10 = sub_10045C784(v3, v2);
          if (v11)
          {
            uint64_t v12 = *(id *)(*(void *)(v9 + 56) + 8 * v10);
            swift_bridgeObjectRelease();
            (*(void (**)(uint64_t, unint64_t))((swift_isaMask & *v12) + 0x3B8))(v3, v2);
          }
          else
          {
            swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRetain();
        uint64_t v17 = (void *)sub_1004F2F90(v3, v2);
        swift_bridgeObjectRelease();

        swift_bridgeObjectRetain();
        sub_1004F2EC0(v3, v2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain_n();
        uint64_t v13 = sub_100725EB0();
        os_log_type_t v14 = sub_1007266E0();
        if (os_log_type_enabled(v13, v14))
        {
          uint64_t v15 = swift_slowAlloc();
          uint64_t v18 = swift_slowAlloc();
          *(_DWORD *)uint64_t v15 = 136315394;
          sub_10043E578(0xD00000000000001ALL, 0x80000001008C47B0, &v18);
          sub_100726830();
          *(_WORD *)(v15 + 12) = 2080;
          swift_bridgeObjectRetain();
          sub_10043E578(v3, v2, &v18);
          sub_100726830();
          swift_bridgeObjectRelease_n();
          uint64_t v16 = "%s: cleaned up for group %s.";
          goto LABEL_10;
        }
        goto LABEL_14;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_100725EB0();
  os_log_type_t v14 = sub_1007266E0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    sub_10043E578(0xD00000000000001ALL, 0x80000001008C47B0, &v18);
    sub_100726830();
    *(_WORD *)(v15 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10043E578(v3, v2, &v18);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    uint64_t v16 = "%s: does not need to clean up for group %s.";
LABEL_10:
    _os_log_impl((void *)&_mh_execute_header, v13, v14, v16, (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return;
  }
LABEL_14:

  swift_bridgeObjectRelease_n();
}

uint64_t sub_1004F6FB4()
{
  uint64_t v1 = sub_100725CC0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  swift_bridgeObjectRelease();
  sub_100442248(*(void *)(v0 + 48), *(void *)(v0 + 56));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

void sub_1004F70BC()
{
  uint64_t v1 = *(void *)(sub_100725CC0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_1004F0454(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), v0 + v2, *(void **)(v0 + v3), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_1004F7160@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)result;
  if (*(void *)(*(void *)result + 16))
  {
    uint64_t v6 = *(void *)(v3 + 16);
    uint64_t v7 = *(void *)(v3 + 24);
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_10045C784(v6, v7);
    if (v9)
    {
      unint64_t v10 = *(void **)(*(void *)(v5 + 56) + 8 * v8);
      id v11 = v10;
    }
    else
    {
      unint64_t v10 = 0;
    }
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v10 = 0;
  }
  *a2 = v10;
  return result;
}

void sub_1004F71E4(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

id sub_1004F71F0(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

uint64_t sub_1004F71FC(uint64_t a1)
{
  return sub_1004F1278(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1004F7228(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004F728C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47408);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004F72F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100431F80(&qword_100A47420);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1004F7364@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1004F6150(a1, a2);
}

uint64_t sub_1004F737C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1004F672C(a1, a2);
}

uint64_t sub_1004F73F4()
{
  return sub_100507514();
}

uint64_t sub_1004F7400(uint64_t a1)
{
  return sub_10050757C(a1, &OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_lock, (uint64_t (*)(uint64_t))&_swift_release);
}

uint64_t (*sub_1004F7420())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004F747C()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1004F74CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_delegate;
  swift_beginAccess();
  *(void *)(v4 + 8) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_1004F7538(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x38uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_delegate;
  v3[5] = v1;
  v3[6] = v4;
  uint64_t v5 = v1 + v4;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v7 = *(void *)(v5 + 8);
  v3[3] = Strong;
  v3[4] = v7;
  return sub_100455C48;
}

unint64_t sub_1004F75D0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(&qword_100A47470);
  uint64_t v2 = (void *)sub_100726BE0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_10045C784(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v11 = (uint64_t *)(v2[6] + 16 * result);
    *id v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1004F76EC(uint64_t a1, uint64_t *a2, uint64_t (*a3)(id))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v5 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100431F80(a2);
  uint64_t v5 = (void *)sub_100726BE0();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void **)(a1 + 40);
  while (1)
  {
    id v8 = *v7;
    id v9 = *(v7 - 1);
    id v10 = v8;
    unint64_t result = a3(v9);
    if (v12) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v13 = 8 * result;
    *(void *)(v5[6] + v13) = v9;
    *(void *)(v5[7] + v13) = v10;
    uint64_t v14 = v5[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v5[2] = v16;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1004F7804()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1004F7850(uint64_t a1)
{
  return sub_10050757C(a1, &OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_sessionsByID, (uint64_t (*)(uint64_t))&_swift_bridgeObjectRelease);
}

uint64_t (*sub_1004F7870())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004F78CC()
{
  return sub_100507514();
}

uint64_t sub_1004F78D8(uint64_t a1)
{
  return sub_10050757C(a1, &OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsLock, (uint64_t (*)(uint64_t))&_swift_release);
}

uint64_t (*sub_1004F78F8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004F799C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_preKeyAckCount;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1004F7A30(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_preKeyAckCount);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1004F7A7C())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004F7B20()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_localParticipantID;
  swift_beginAccess();
  return *(void *)v1;
}

void sub_1004F7BD0(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_localParticipantID);
  swift_beginAccess();
  *uint64_t v3 = a1;
  sub_1004F7C28();
}

void sub_1004F7C28()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x140))();
  uint64_t v2 = v1;
  uint64_t v3 = v1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(v1 + 64);
  uint64_t v7 = (void *)((char *)v0 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_localParticipantID);
  swift_beginAccess();
  int64_t v8 = 0;
  int64_t v9 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_23;
    }
    if (v16 >= v9) {
      goto LABEL_21;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v16);
    ++v8;
    if (!v17)
    {
      int64_t v8 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_21;
      }
      unint64_t v17 = *(void *)(v3 + 8 * v8);
      if (!v17)
      {
        int64_t v8 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_21;
        }
        unint64_t v17 = *(void *)(v3 + 8 * v8);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v8 << 6);
LABEL_5:
    char v12 = *(void **)(*(void *)(v2 + 56) + 8 * v11);
    uint64_t v13 = *v7;
    uint64_t v14 = *(void (**)(uint64_t))((swift_isaMask & *v12) + 0x1A0);
    BOOL v15 = v12;
    v14(v13);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_21:
    swift_release();
    return;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17)
  {
    int64_t v8 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v9) {
      goto LABEL_21;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_23:
  __break(1u);
}

void (*sub_1004F7E1C(uint64_t a1))(uint64_t a1, char a2)
{
  *(void *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1004F7E7C;
}

void sub_1004F7E7C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    sub_1004F7C28();
  }
}

void *sub_1004F7EFC()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_endpointSubscription);
  swift_beginAccess();
  uint64_t v2 = *v1;
  id v3 = v2;
  return v2;
}

void sub_1004F7FAC(void *a1)
{
  id v3 = (void **)(v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_endpointSubscription);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *id v3 = a1;
}

uint64_t (*sub_1004F8000())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004F80A4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_encryptionSequenceNumber;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1004F8138(uint64_t a1)
{
  id v3 = (void *)(v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_encryptionSequenceNumber);
  uint64_t result = swift_beginAccess();
  *id v3 = a1;
  return result;
}

uint64_t (*sub_1004F8184())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004F81E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_needsKMCacheResetAfter;
  swift_beginAccess();
  return sub_1004546B8(v3, a1, &qword_100A47D80);
}

uint64_t sub_1004F823C(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_needsKMCacheResetAfter;
  swift_beginAccess();
  sub_10050C6A0(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1004F8298())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1004F842C()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))() + 16);
  os_unfair_lock_lock(v1);
  sub_10050C748(&v4);
  os_unfair_lock_unlock(v1);
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

void sub_1004F84E8(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0) {
    sub_100726B10();
  }
  type metadata accessor for IDSGroupEncryptionControllerMember();
  sub_10050DC4C((unint64_t *)&qword_100A44A78, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerMember);
  v19[1] = (id)sub_100726660();
  if (v2)
  {
    uint64_t v3 = sub_100726AB0();
    unint64_t v18 = 0;
    uint64_t v4 = 0;
    unint64_t v5 = 0;
    unint64_t v1 = v3 | 0x8000000000000000;
  }
  else
  {
    uint64_t v6 = -1 << *(unsigned char *)(v1 + 32);
    unint64_t v18 = v1 + 64;
    uint64_t v4 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(v1 + 64);
  }
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(v4 + 64) >> 6;
  while ((v1 & 0x8000000000000000) != 0)
  {
    if (!sub_100726B50()) {
      goto LABEL_34;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v19[0];
    swift_unknownObjectRelease();
    if (!v14) {
      goto LABEL_34;
    }
    uint64_t v11 = v5;
    uint64_t v13 = v9;
LABEL_12:
    sub_100508E0C(v19, v14, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerMember, &qword_100A44D48, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerMember);

    uint64_t v9 = v13;
    unint64_t v5 = v11;
  }
  if (v5)
  {
    uint64_t v11 = (v5 - 1) & v5;
    unint64_t v12 = __clz(__rbit64(v5)) | (v9 << 6);
    uint64_t v13 = v9;
LABEL_11:
    id v14 = *(id *)(*(void *)(v1 + 56) + 8 * v12);
    if (!v14) {
      goto LABEL_34;
    }
    goto LABEL_12;
  }
  int64_t v15 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    if (v15 >= v10) {
      goto LABEL_34;
    }
    unint64_t v16 = *(void *)(v18 + 8 * v15);
    uint64_t v13 = v9 + 1;
    if (!v16)
    {
      uint64_t v13 = v9 + 2;
      if (v9 + 2 >= v10) {
        goto LABEL_34;
      }
      unint64_t v16 = *(void *)(v18 + 8 * v13);
      if (!v16)
      {
        uint64_t v13 = v9 + 3;
        if (v9 + 3 >= v10) {
          goto LABEL_34;
        }
        unint64_t v16 = *(void *)(v18 + 8 * v13);
        if (!v16)
        {
          uint64_t v13 = v9 + 4;
          if (v9 + 4 >= v10) {
            goto LABEL_34;
          }
          unint64_t v16 = *(void *)(v18 + 8 * v13);
          if (!v16)
          {
            uint64_t v13 = v9 + 5;
            if (v9 + 5 >= v10) {
              goto LABEL_34;
            }
            unint64_t v16 = *(void *)(v18 + 8 * v13);
            if (!v16)
            {
              uint64_t v17 = v9 + 6;
              while (v10 != v17)
              {
                unint64_t v16 = *(void *)(v18 + 8 * v17++);
                if (v16)
                {
                  uint64_t v13 = v17 - 1;
                  goto LABEL_30;
                }
              }
LABEL_34:
              sub_100462C48();
              return;
            }
          }
        }
      }
    }
LABEL_30:
    uint64_t v11 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v13 << 6);
    goto LABEL_11;
  }
  __break(1u);
}

void sub_1004F87D4(uint64_t a1)
{
  type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
  sub_10050DC4C((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
  int64_t v2 = 0;
  v13[1] = (id)sub_100726660();
  uint64_t v3 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_100508E0C(v13, *(id *)(*(void *)(a1 + 56) + 8 * v9), (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerParticipant, (uint64_t *)&unk_100A45420, (void (*)(void))type metadata accessor for IDSGroupEncryptionControllerParticipant);
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7)
  {
LABEL_23:
    swift_release();
    return;
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
}

uint64_t sub_1004F8B00()
{
  unint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))() + 16);
  os_unfair_lock_lock(v1);
  sub_10050C748(&v4);
  os_unfair_lock_unlock(v1);
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1004F8BBC@<X0>(uint64_t (*a1)(uint64_t)@<X1>, uint64_t *a2@<X8>)
{
  swift_beginAccess();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t result = a1(v4);
  *a2 = result;
  return result;
}

void sub_1004F8C3C()
{
  unint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x158))() + 16);
  os_unfair_lock_lock(v1);
  sub_10050C748(&v3);
  os_unfair_lock_unlock(v1);
  uint64_t v2 = v3;
  swift_release();
  sub_1004F87D4(v2);
}

Swift::Int sub_1004F8D14()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x258))();
  if ((v1 & 0xC000000000000001) == 0) {
    return sub_100509BF4(v1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_100509D6C);
  }
  uint64_t v2 = &_swiftEmptySetSingleton;
  sub_1007268E0();
  if (sub_100726950())
  {
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    do
    {
      uint64_t v3 = swift_dynamicCast();
      char v4 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v19) + 0xB8))(v3);
      if (sub_100450980(v4 & 1, 1)
        || (uint64_t v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v19) + 0xB0))()) == 0
        || (unint64_t v6 = v5, v7 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x80))(), v6, (v7 & 1) != 0))
      {
      }
      else
      {
        unint64_t v8 = *((void *)&_swiftEmptySetSingleton + 2);
        if (*((void *)&_swiftEmptySetSingleton + 3) <= v8) {
          sub_10047E014(v8 + 1, (uint64_t *)&unk_100A45420);
        }
        Swift::Int result = sub_1007267E0(*((void *)&_swiftEmptySetSingleton + 5));
        int64_t v10 = (char *)&_swiftEmptySetSingleton + 56;
        uint64_t v11 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*((void *)&_swiftEmptySetSingleton + (v12 >> 6) + 7)) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*((void *)&_swiftEmptySetSingleton + (v12 >> 6) + 7))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v15 = 0;
          unint64_t v16 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v16 && (v15 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v17 = v13 == v16;
            if (v13 == v16) {
              unint64_t v13 = 0;
            }
            v15 |= v17;
            uint64_t v18 = *(void *)&v10[8 * v13];
          }
          while (v18 == -1);
          unint64_t v14 = __clz(__rbit64(~v18)) + (v13 << 6);
        }
        *(void *)&v10[(v14 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v14;
        *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v14) = v19;
        ++*((void *)&_swiftEmptySetSingleton + 2);
      }
    }
    while (sub_100726950());
    uint64_t v2 = &_swiftEmptySetSingleton;
  }
  swift_release();
  return (Swift::Int)v2;
}

Class sub_1004F9014(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
  sub_10050DC4C((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
  v5.super.Class isa = sub_100726630().super.isa;
  swift_bridgeObjectRelease();

  return v5.super.isa;
}

Swift::Int sub_1004F90BC()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x258))();
  if ((v1 & 0xC000000000000001) == 0) {
    return sub_100509BF4(v1, (uint64_t (*)(char *, unint64_t, uint64_t))sub_10050A008);
  }
  uint64_t v2 = &_swiftEmptySetSingleton;
  sub_1007268E0();
  if (sub_100726950())
  {
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    do
    {
      uint64_t v3 = swift_dynamicCast();
      char v4 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v19) + 0xB8))(v3);
      if (sub_100450980(v4 & 1, 1)
        || (NSSet v5 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v19) + 0xB0))()) != 0
        && (unint64_t v6 = v5, v7 = (*(uint64_t (**)(void))((swift_isaMask & *v5) + 0x80))(), v6, (v7 & 1) != 0))
      {
        unint64_t v8 = *((void *)&_swiftEmptySetSingleton + 2);
        if (*((void *)&_swiftEmptySetSingleton + 3) <= v8) {
          sub_10047E014(v8 + 1, (uint64_t *)&unk_100A45420);
        }
        Swift::Int result = sub_1007267E0(*((void *)&_swiftEmptySetSingleton + 5));
        int64_t v10 = (char *)&_swiftEmptySetSingleton + 56;
        uint64_t v11 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
        unint64_t v12 = result & ~v11;
        unint64_t v13 = v12 >> 6;
        if (((-1 << v12) & ~*((void *)&_swiftEmptySetSingleton + (v12 >> 6) + 7)) != 0)
        {
          unint64_t v14 = __clz(__rbit64((-1 << v12) & ~*((void *)&_swiftEmptySetSingleton + (v12 >> 6) + 7))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v15 = 0;
          unint64_t v16 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v16 && (v15 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v17 = v13 == v16;
            if (v13 == v16) {
              unint64_t v13 = 0;
            }
            v15 |= v17;
            uint64_t v18 = *(void *)&v10[8 * v13];
          }
          while (v18 == -1);
          unint64_t v14 = __clz(__rbit64(~v18)) + (v13 << 6);
        }
        *(void *)&v10[(v14 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v14;
        *(void *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v14) = v19;
        ++*((void *)&_swiftEmptySetSingleton + 2);
      }
      else
      {
      }
    }
    while (sub_100726950());
    uint64_t v2 = &_swiftEmptySetSingleton;
  }
  swift_release();
  return (Swift::Int)v2;
}

uint64_t sub_1004F93BC()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x258))();
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_100726920();
    if (!v2) {
      goto LABEL_15;
    }
    uint64_t v3 = v2;
    unint64_t v26 = _swiftEmptyArrayStorage;
    sub_100726A60();
    uint64_t v23 = sub_1007268D0();
    uint64_t v24 = v4;
    char v25 = 1;
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (!v3)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v20 = _swiftEmptyArrayStorage;
LABEL_16:
    uint64_t v21 = sub_100481658((unint64_t)v20, (unint64_t *)&qword_100A47A80, (uint64_t)IDSPushToken_ptr, (unint64_t *)&qword_100A48110, (uint64_t *)&unk_100A455F0);
    swift_bridgeObjectRelease();
    return v21;
  }
  unint64_t v26 = _swiftEmptyArrayStorage;
  sub_100726A60();
  uint64_t v23 = sub_1004805BC(v1);
  uint64_t v24 = v5;
  char v25 = v6 & 1;
  while (1)
  {
LABEL_9:
    while (1)
    {
      int64_t v12 = v23;
      uint64_t v13 = v24;
      char v14 = v25;
      sub_1004EC194(v23, v24, v25, v1);
      unint64_t v16 = v15;
      id v17 = *(id *)&v15[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken];

      sub_100726A40();
      sub_100726A70();
      sub_100726A80();
      uint64_t result = sub_100726A50();
      if ((v1 & 0xC000000000000001) != 0) {
        break;
      }
      int64_t v7 = sub_1004801D0(v12, v13, v14, v1);
      uint64_t v9 = v8;
      char v11 = v10;
      sub_100482640(v12, v13, v14);
      uint64_t v23 = v7;
      uint64_t v24 = v9;
      char v25 = v11 & 1;
      if (!--v3) {
        goto LABEL_14;
      }
    }
    if ((v14 & 1) == 0) {
      break;
    }
    if (sub_1007268F0()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_100431F80(&qword_100A473B0);
    uint64_t v19 = (void (*)(uint64_t *, void))sub_100726670();
    sub_100726970();
    v19(&v22, 0);
    if (!--v3)
    {
LABEL_14:
      sub_100482640(v23, v24, v25);
      uint64_t v20 = v26;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

Class sub_1004F968C(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();

  sub_100462C50(0, (unint64_t *)&qword_100A47A80);
  sub_100480C20((unint64_t *)&qword_100A48110, (unint64_t *)&qword_100A47A80);
  v5.super.Class isa = sub_100726630().super.isa;
  swift_bridgeObjectRelease();

  return v5.super.isa;
}

uint64_t sub_1004F9734()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x260))();
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_100726920();
    if (!v2) {
      goto LABEL_15;
    }
    uint64_t v3 = v2;
    unint64_t v26 = _swiftEmptyArrayStorage;
    sub_100726A60();
    uint64_t v23 = sub_1007268D0();
    uint64_t v24 = v4;
    char v25 = 1;
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (!v3)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v20 = _swiftEmptyArrayStorage;
LABEL_16:
    uint64_t v21 = sub_100481658((unint64_t)v20, (unint64_t *)&qword_100A47A80, (uint64_t)IDSPushToken_ptr, (unint64_t *)&qword_100A48110, (uint64_t *)&unk_100A455F0);
    swift_bridgeObjectRelease();
    return v21;
  }
  unint64_t v26 = _swiftEmptyArrayStorage;
  sub_100726A60();
  uint64_t v23 = sub_1004805BC(v1);
  uint64_t v24 = v5;
  char v25 = v6 & 1;
  while (1)
  {
LABEL_9:
    while (1)
    {
      int64_t v12 = v23;
      uint64_t v13 = v24;
      char v14 = v25;
      sub_1004EC194(v23, v24, v25, v1);
      unint64_t v16 = v15;
      id v17 = *(id *)&v15[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken];

      sub_100726A40();
      sub_100726A70();
      sub_100726A80();
      uint64_t result = sub_100726A50();
      if ((v1 & 0xC000000000000001) != 0) {
        break;
      }
      int64_t v7 = sub_1004801D0(v12, v13, v14, v1);
      uint64_t v9 = v8;
      char v11 = v10;
      sub_100482640(v12, v13, v14);
      uint64_t v23 = v7;
      uint64_t v24 = v9;
      char v25 = v11 & 1;
      if (!--v3) {
        goto LABEL_14;
      }
    }
    if ((v14 & 1) == 0) {
      break;
    }
    if (sub_1007268F0()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_100431F80(&qword_100A473B0);
    uint64_t v19 = (void (*)(uint64_t *, void))sub_100726670();
    sub_100726970();
    v19(&v22, 0);
    if (!--v3)
    {
LABEL_14:
      sub_100482640(v23, v24, v25);
      uint64_t v20 = v26;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1004F9A04()
{
  uint64_t v1 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x268))();
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v2 = sub_100726920();
    if (!v2) {
      goto LABEL_15;
    }
    uint64_t v3 = v2;
    unint64_t v26 = _swiftEmptyArrayStorage;
    sub_100726A60();
    uint64_t v23 = sub_1007268D0();
    uint64_t v24 = v4;
    char v25 = 1;
    if ((v3 & 0x8000000000000000) == 0) {
      goto LABEL_9;
    }
    __break(1u);
  }
  uint64_t v3 = *(void *)(v1 + 16);
  if (!v3)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v20 = _swiftEmptyArrayStorage;
LABEL_16:
    uint64_t v21 = sub_100481658((unint64_t)v20, (unint64_t *)&qword_100A47A80, (uint64_t)IDSPushToken_ptr, (unint64_t *)&qword_100A48110, (uint64_t *)&unk_100A455F0);
    swift_bridgeObjectRelease();
    return v21;
  }
  unint64_t v26 = _swiftEmptyArrayStorage;
  sub_100726A60();
  uint64_t v23 = sub_1004805BC(v1);
  uint64_t v24 = v5;
  char v25 = v6 & 1;
  while (1)
  {
LABEL_9:
    while (1)
    {
      int64_t v12 = v23;
      uint64_t v13 = v24;
      char v14 = v25;
      sub_1004EC194(v23, v24, v25, v1);
      unint64_t v16 = v15;
      id v17 = *(id *)&v15[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken];

      sub_100726A40();
      sub_100726A70();
      sub_100726A80();
      uint64_t result = sub_100726A50();
      if ((v1 & 0xC000000000000001) != 0) {
        break;
      }
      int64_t v7 = sub_1004801D0(v12, v13, v14, v1);
      uint64_t v9 = v8;
      char v11 = v10;
      sub_100482640(v12, v13, v14);
      uint64_t v23 = v7;
      uint64_t v24 = v9;
      char v25 = v11 & 1;
      if (!--v3) {
        goto LABEL_14;
      }
    }
    if ((v14 & 1) == 0) {
      break;
    }
    if (sub_1007268F0()) {
      swift_isUniquelyReferenced_nonNull_native();
    }
    sub_100431F80(&qword_100A473B0);
    uint64_t v19 = (void (*)(uint64_t *, void))sub_100726670();
    sub_100726970();
    v19(&v22, 0);
    if (!--v3)
    {
LABEL_14:
      sub_100482640(v23, v24, v25);
      uint64_t v20 = v26;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
  }
  __break(1u);
  return result;
}

id sub_1004F9D00()
{
  return sub_1004F9D5C(&OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_mkmController);
}

id sub_1004F9D50()
{
  return sub_1004F9D5C(&OBJC_IVAR____TtC17identityservicesd40IDSGroupEncryptionControllerGroupSession_skmController);
}

id sub_1004F9D5C(void *a1)
{
  uint64_t v3 = sub_100431F80(&qword_100A44A50);
  uint64_t v5 = __chkstk_darwin(v3 - 8, v4);
  int64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v1) + 0x140))(v5);
  char v9 = *(unsigned char *)(v8 + 32);
  uint64_t v10 = 1 << v9;
  uint64_t v11 = -1;
  if (1 << v9 < 64) {
    uint64_t v11 = ~(-1 << (1 << v9));
  }
  unint64_t v12 = v11 & *(void *)(v8 + 64);
  if (v12)
  {
    unint64_t v13 = __clz(__rbit64(v12));
    goto LABEL_5;
  }
  unsigned int v19 = v9 & 0x3F;
  if (v19 <= 6) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v8 + 72);
  if (!v20)
  {
    if (v19 >= 8)
    {
      unint64_t v20 = *(void *)(v8 + 80);
      if (v20)
      {
        uint64_t v21 = 128;
        goto LABEL_11;
      }
      unint64_t v20 = *(void *)(v8 + 88);
      if (v20)
      {
        uint64_t v21 = 192;
        goto LABEL_11;
      }
      if (v19 > 8)
      {
        unint64_t v20 = *(void *)(v8 + 96);
        if (v20)
        {
          uint64_t v21 = 256;
          goto LABEL_11;
        }
        uint64_t v22 = 0;
        unint64_t v23 = (unint64_t)(v10 + 63) >> 6;
        if (v23 <= 5) {
          unint64_t v23 = 5;
        }
        uint64_t v24 = 8 * v23 - 40;
        uint64_t v21 = 256;
        while (v24 != v22)
        {
          unint64_t v20 = *(void *)(v8 + v22 + 104);
          v22 += 8;
          v21 += 64;
          if (v20) {
            goto LABEL_11;
          }
        }
      }
    }
LABEL_26:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v21 = 64;
LABEL_11:
  unint64_t v13 = __clz(__rbit64(v20)) + v21;
LABEL_5:
  char v14 = *(char **)(*(void *)(v8 + 56) + 8 * v13);
  char v15 = *(void (**)(void))((swift_isaMask & **(void **)&v14[*a1]) + 0x118);
  unint64_t v16 = v14;
  v15();
  uint64_t v17 = type metadata accessor for IDSGroupEncryptionKeyMaterialContent();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 48))(v7, 1, v17) == 1)
  {
    swift_bridgeObjectRelease();

    sub_10044C150((uint64_t)v7, &qword_100A44A50);
    return 0;
  }
  id v18 = sub_10048391C();
  swift_bridgeObjectRelease();

  sub_10050E240((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for IDSGroupEncryptionKeyMaterialContent);
  return v18;
}

id sub_1004F9FFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v18 = objc_allocWithZone(v9);
  id v19 = sub_10050C7C0(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  swift_unknownObjectRelease();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v19;
}

id sub_1004FA0C0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100725EB0();
  os_log_type_t v3 = sub_1007266E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    sub_10043E578(0x74696E696564, 0xE600000000000000, &v7);
    sub_100726830();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%s: deinit group", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = (objc_class *)type metadata accessor for IDSGroupEncryptionControllerGroup();
  v8.receiver = v1;
  v8.super_class = v5;
  return objc_msgSendSuper2(&v8, "dealloc");
}

uint64_t sub_1004FA40C()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x110))() + 16);
  os_unfair_lock_lock(v1);
  sub_100469128();
  os_unfair_lock_unlock(v1);
  swift_release();
  uint64_t v2 = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x208))(0);
  return (*(uint64_t (**)(uint64_t))((swift_isaMask & *v0) + 0x310))(v2);
}

uint64_t sub_1004FA598(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))((swift_isaMask & *v1) + 0x2B0))(a1, 0);
}

void sub_1004FA6C8(uint64_t a1, uint64_t a2)
{
  id v4 = v2;
  swift_bridgeObjectRetain_n();
  uint64_t v5 = v4;
  uint64_t v6 = sub_100725EB0();
  os_log_type_t v7 = sub_1007266E0();
  objc_super v8 = &qword_100794000;
  uint64_t v164 = v5;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v9 = swift_slowAlloc();
    v171[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136315650;
    uint64_t v166 = sub_10043E578(0xD00000000000002ELL, 0x80000001008C4C50, v171);
    sub_100726830();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v10 = *(void *)((char *)v5 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id);
    unint64_t v11 = *(void *)((char *)v5 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8);
    swift_bridgeObjectRetain();
    sub_10043E578(v10, v11, v171);
    sub_100726830();

    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 22) = 2080;
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_100726650();
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    uint64_t v166 = sub_10043E578(v12, v14, v171);
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%s: Group %s: withURIs=%s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    objc_super v8 = &qword_100794000;
    swift_slowDealloc();
    uint64_t v5 = v164;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  char v15 = *(uint64_t (**)(void))((swift_isaMask & *v5) + 0x248);
  uint64_t v16 = v15();
  unint64_t v17 = (unint64_t)sub_1004700E8(a1, v16);
  uint64_t v18 = swift_bridgeObjectRetain();
  uint64_t v19 = ((uint64_t (*)(uint64_t))v15)(v18);
  int64_t v146 = (int64_t)sub_1004700E8(v19, a1);
  swift_bridgeObjectRelease();
  unint64_t v143 = v17 & 0xC000000000000001;
  unint64_t v144 = v17;
  if ((v17 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1007268E0();
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    sub_100726680();
    unint64_t v17 = v166;
    NSString v148 = v167;
    uint64_t v20 = v168;
    int64_t v21 = v169;
    unint64_t v22 = v170;
  }
  else
  {
    uint64_t v23 = -1 << *(unsigned char *)(v17 + 32);
    NSString v148 = (char *)(v17 + 56);
    uint64_t v24 = ~v23;
    uint64_t v25 = -v23;
    if (v25 < 64) {
      uint64_t v26 = ~(-1 << v25);
    }
    else {
      uint64_t v26 = -1;
    }
    unint64_t v22 = v26 & *(void *)(v17 + 56);
    swift_bridgeObjectRetain();
    int64_t v21 = 0;
    uint64_t v20 = v24;
  }
  uint64_t v27 = 0;
  int64_t v147 = (unint64_t)(v20 + 64) >> 6;
  int v153 = v8[23];
  unint64_t v151 = v17;
  while ((v17 & 0x8000000000000000) != 0)
  {
    uint64_t v31 = sub_100726950();
    if (!v31) {
      goto LABEL_37;
    }
    unint64_t v165 = (void *)v31;
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v32 = (void *)v171[0];
    id v33 = (id)swift_unknownObjectRelease();
    int64_t v30 = v21;
    uint64_t v28 = v22;
    if (!v32) {
      goto LABEL_37;
    }
LABEL_29:
    unint64_t v157 = v28;
    int64_t v159 = v30;
    uint64_t v36 = (*(uint64_t (**)(id))((swift_isaMask & *v164) + 0x110))(v33);
    uint64_t v38 = __chkstk_darwin(v36, v37);
    uint64_t v40 = (os_unfair_lock_s *)(__chkstk_darwin(v38, v39) + 16);
    os_unfair_lock_lock(v40);
    sub_10050C748(v171);
    os_unfair_lock_unlock(v40);
    uint64_t v41 = (void *)v171[0];
    swift_release();
    uint64_t v154 = v41;
    id v42 = v41;
    uint64_t v43 = v164;
    id v44 = v32;
    id v45 = v42;
    uint64_t v46 = v43;
    id v47 = v44;
    uint64_t v48 = sub_100725EB0();
    os_log_type_t v49 = sub_1007266E0();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v162 = v27;
      uint64_t v50 = swift_slowAlloc();
      uint64_t v51 = (void *)swift_slowAlloc();
      v171[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = v153;
      uint64_t v53 = *(void *)&v46[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id];
      unint64_t v52 = *(void *)&v46[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8];
      swift_bridgeObjectRetain();
      *(void *)(v50 + 4) = sub_10043E578(v53, v52, v171);

      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2112;
      *(void *)(v50 + 14) = v47;
      *uint64_t v51 = v32;

      *(_WORD *)(v50 + 22) = 2112;
      *(void *)(v50 + 24) = v45;
      v51[1] = v154;

      _os_log_impl((void *)&_mh_execute_header, v48, v49, "Group %s: updateMembers: removed member with URI %@: %@", (uint8_t *)v50, 0x20u);
      sub_100431F80(&qword_100A44F10);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      unint64_t v17 = v151;
      uint64_t v27 = v162;
      swift_slowDealloc();
    }
    else
    {
    }
    unint64_t v22 = v157;
    int64_t v21 = v159;
  }
  if (v22)
  {
    uint64_t v28 = (v22 - 1) & v22;
    unint64_t v29 = __clz(__rbit64(v22)) | (v21 << 6);
    int64_t v30 = v21;
LABEL_28:
    id v33 = *(id *)(*(void *)(v17 + 48) + 8 * v29);
    id v32 = v33;
    if (!v33) {
      goto LABEL_37;
    }
    goto LABEL_29;
  }
  int64_t v30 = v21 + 1;
  if (__OFADD__(v21, 1)) {
    goto LABEL_142;
  }
  if (v30 < v147)
  {
    unint64_t v34 = *(void *)&v148[8 * v30];
    if (!v34)
    {
      int64_t v35 = v21 + 2;
      if (v21 + 2 >= v147) {
        goto LABEL_37;
      }
      unint64_t v34 = *(void *)&v148[8 * v35];
      if (v34) {
        goto LABEL_26;
      }
      int64_t v35 = v21 + 3;
      if (v21 + 3 >= v147) {
        goto LABEL_37;
      }
      unint64_t v34 = *(void *)&v148[8 * v35];
      if (v34)
      {
LABEL_26:
        int64_t v30 = v35;
      }
      else
      {
        int64_t v30 = v21 + 4;
        if (v21 + 4 >= v147) {
          goto LABEL_37;
        }
        unint64_t v34 = *(void *)&v148[8 * v30];
        if (!v34)
        {
          int64_t v54 = v21 + 5;
          do
          {
            if (v147 == v54) {
              goto LABEL_37;
            }
            unint64_t v34 = *(void *)&v148[8 * v54++];
          }
          while (!v34);
          int64_t v30 = v54 - 1;
        }
      }
    }
    uint64_t v28 = (v34 - 1) & v34;
    unint64_t v29 = __clz(__rbit64(v34)) + (v30 << 6);
    goto LABEL_28;
  }
LABEL_37:
  sub_100462C48();
  unint64_t v145 = v146 & 0xC000000000000001;
  if ((v146 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1007268E0();
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    sub_100726680();
    uint64_t v55 = v171[0];
    uint64_t v150 = v171[1];
    uint64_t v56 = v171[2];
    uint64_t v57 = v171[3];
    unint64_t v58 = v171[4];
  }
  else
  {
    uint64_t v59 = -1 << *(unsigned char *)(v146 + 32);
    uint64_t v150 = v146 + 56;
    uint64_t v60 = ~v59;
    uint64_t v61 = -v59;
    if (v61 < 64) {
      uint64_t v62 = ~(-1 << v61);
    }
    else {
      uint64_t v62 = -1;
    }
    unint64_t v58 = v62 & *(void *)(v146 + 56);
    uint64_t v63 = swift_bridgeObjectRetain();
    uint64_t v56 = v60;
    uint64_t v55 = v63;
    uint64_t v57 = 0;
  }
  int64_t v149 = (unint64_t)(v56 + 64) >> 6;
  uint64_t v152 = v55;
  while (2)
  {
    if (v55 < 0)
    {
      if (!sub_100726950()) {
        break;
      }
      sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v67 = v165;
      swift_unknownObjectRelease();
      int64_t v66 = v57;
      uint64_t v64 = v58;
      if (!v67) {
        break;
      }
      goto LABEL_62;
    }
    if (v58)
    {
      uint64_t v64 = (v58 - 1) & v58;
      unint64_t v65 = __clz(__rbit64(v58)) | (v57 << 6);
      int64_t v66 = v57;
      goto LABEL_61;
    }
    int64_t v66 = v57 + 1;
    if (__OFADD__(v57, 1)) {
      goto LABEL_143;
    }
    if (v66 < v149)
    {
      unint64_t v68 = *(void *)(v150 + 8 * v66);
      if (!v68)
      {
        uint64_t v69 = v57 + 2;
        if (v57 + 2 >= v149) {
          break;
        }
        unint64_t v68 = *(void *)(v150 + 8 * v69);
        if (v68) {
          goto LABEL_59;
        }
        uint64_t v69 = v57 + 3;
        if (v57 + 3 >= v149) {
          break;
        }
        unint64_t v68 = *(void *)(v150 + 8 * v69);
        if (v68)
        {
LABEL_59:
          int64_t v66 = v69;
        }
        else
        {
          int64_t v66 = v57 + 4;
          if (v57 + 4 >= v149) {
            break;
          }
          unint64_t v68 = *(void *)(v150 + 8 * v66);
          if (!v68)
          {
            uint64_t v89 = v57 + 5;
            do
            {
              if (v149 == v89) {
                goto LABEL_70;
              }
              unint64_t v68 = *(void *)(v150 + 8 * v89++);
            }
            while (!v68);
            int64_t v66 = v89 - 1;
          }
        }
      }
      uint64_t v64 = (v68 - 1) & v68;
      unint64_t v65 = __clz(__rbit64(v68)) + (v66 << 6);
LABEL_61:
      id v67 = *(id *)(*(void *)(v55 + 48) + 8 * v65);
      if (!v67) {
        break;
      }
LABEL_62:
      unint64_t v158 = v64;
      uint64_t v160 = v66;
      type metadata accessor for IDSGroupEncryptionControllerMember();
      id v155 = v67;
      id v70 = v67;
      id v71 = sub_100450ECC((uint64_t)v70, 1);
      uint64_t v72 = (*(uint64_t (**)(void))((swift_isaMask & *v164) + 0x110))();
      uint64_t v74 = __chkstk_darwin(v72, v73);
      uint64_t v76 = (os_unfair_lock_s *)(__chkstk_darwin(v74, v75) + 16);
      os_unfair_lock_lock(v76);
      sub_100482E74();
      os_unfair_lock_unlock(v76);
      swift_release();
      uint64_t v77 = v164;
      id v78 = v70;
      id v79 = v71;
      unint64_t v80 = v77;
      id v81 = v78;
      id v82 = v79;
      os_log_type_t v83 = sub_100725EB0();
      os_log_type_t v84 = sub_1007266E0();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v163 = v27;
        uint64_t v85 = swift_slowAlloc();
        id v86 = (void *)swift_slowAlloc();
        unint64_t v165 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v85 = v153;
        uint64_t v87 = *(void *)&v80[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id];
        unint64_t v88 = *(void *)&v80[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8];
        swift_bridgeObjectRetain();
        *(void *)(v85 + 4) = sub_10043E578(v87, v88, (uint64_t *)&v165);

        swift_bridgeObjectRelease();
        *(_WORD *)(v85 + 12) = 2112;
        *(void *)(v85 + 14) = v81;
        void *v86 = v155;

        *(_WORD *)(v85 + 22) = 2112;
        *(void *)(v85 + 24) = v82;
        v86[1] = v82;

        _os_log_impl((void *)&_mh_execute_header, v83, v84, "Group %s: updateMembers: added member with URI %@: %@", (uint8_t *)v85, 0x20u);
        sub_100431F80(&qword_100A44F10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v55 = v152;
        uint64_t v27 = v163;
        swift_slowDealloc();
      }
      else
      {
      }
      unint64_t v58 = v158;
      uint64_t v57 = v160;
      continue;
    }
    break;
  }
LABEL_70:
  sub_100462C48();
  if (!a2)
  {
    uint64_t v98 = v164;
    unint64_t v99 = v144;
    int64_t v100 = v146;
    if (v145) {
      goto LABEL_107;
    }
    goto LABEL_74;
  }
  swift_bridgeObjectRetain_n();
  unint64_t v90 = sub_100725EB0();
  os_log_type_t v91 = sub_1007266E0();
  id v92 = &off_100793000;
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v93 = swift_slowAlloc();
    unint64_t v165 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v93 = 136315394;
    sub_10043E578(0xD00000000000002ELL, 0x80000001008C4C50, (uint64_t *)&v165);
    sub_100726830();
    *(_WORD *)(v93 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v94 = sub_1007263A0();
    unint64_t v96 = v95;
    swift_bridgeObjectRelease();
    sub_10043E578(v94, v96, (uint64_t *)&v165);
    id v92 = &off_100793000;
    sub_100726830();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "%s: Updating members lightweightStatus based on %s", (uint8_t *)v93, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v97 = a2;
  int64_t v102 = 0;
  uint64_t v103 = a2 + 64;
  uint64_t v104 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v105 = -1;
  if (v104 < 64) {
    uint64_t v105 = ~(-1 << v104);
  }
  unint64_t v106 = v105 & *(void *)(a2 + 64);
  int64_t v107 = (unint64_t)(v104 + 63) >> 6;
  int v161 = *((void *)v92 + 489);
  if (!v106) {
    goto LABEL_80;
  }
LABEL_79:
  unint64_t v108 = __clz(__rbit64(v106));
  v106 &= v106 - 1;
  for (unint64_t i = v108 | (v102 << 6); ; unint64_t i = __clz(__rbit64(v111)) + (v102 << 6))
  {
    uint64_t v113 = (uint64_t *)(*(void *)(v97 + 48) + 16 * i);
    uint64_t v114 = *v113;
    unint64_t v115 = v113[1];
    uint64_t v116 = *(unsigned __int8 *)(*(void *)(v97 + 56) + i);
    id v117 = objc_allocWithZone((Class)IDSURI);
    swift_bridgeObjectRetain_n();
    NSString v118 = sub_100726420();
    swift_bridgeObjectRelease();
    id v119 = [v117 initWithPrefixedURI:v118];

    if (v119)
    {
      swift_bridgeObjectRelease();
      id v120 = (void *)(*(uint64_t (**)(id))((swift_isaMask & *v164) + 0x2B8))(v119);
      if (v120)
      {
        unint64_t v121 = v120;
        (*(void (**)(uint64_t))((swift_isaMask & *v120) + 0x88))(v116);
      }
      uint64_t v97 = a2;
      if (v106) {
        goto LABEL_79;
      }
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v122 = sub_100725EB0();
      uint64_t v123 = sub_1007266E0();
      if (os_log_type_enabled(v122, (os_log_type_t)v123))
      {
        uint64_t v124 = swift_slowAlloc();
        unint64_t v165 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v124 = v161;
        *(void *)(v124 + 4) = sub_10043E578(0xD00000000000002ELL, 0x80000001008C4C50, (uint64_t *)&v165);
        *(_WORD *)(v124 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v124 + 14) = sub_10043E578(v114, v115, (uint64_t *)&v165);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v122, (os_log_type_t)v123, "%s: Error initializing IDSURI for %s", (uint8_t *)v124, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

      uint64_t v97 = a2;
      if (v106) {
        goto LABEL_79;
      }
    }
LABEL_80:
    BOOL v110 = __OFADD__(v102++, 1);
    if (v110)
    {
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
      goto LABEL_145;
    }
    if (v102 >= v107) {
      goto LABEL_105;
    }
    unint64_t v111 = *(void *)(v103 + 8 * v102);
    if (!v111) {
      break;
    }
LABEL_90:
    unint64_t v106 = (v111 - 1) & v111;
  }
  int64_t v112 = v102 + 1;
  if (v102 + 1 >= v107) {
    goto LABEL_105;
  }
  unint64_t v111 = *(void *)(v103 + 8 * v112);
  if (v111) {
    goto LABEL_89;
  }
  int64_t v112 = v102 + 2;
  if (v102 + 2 >= v107) {
    goto LABEL_105;
  }
  unint64_t v111 = *(void *)(v103 + 8 * v112);
  if (v111) {
    goto LABEL_89;
  }
  int64_t v112 = v102 + 3;
  if (v102 + 3 >= v107)
  {
LABEL_105:
    uint64_t v98 = v164;
    goto LABEL_106;
  }
  unint64_t v111 = *(void *)(v103 + 8 * v112);
  if (v111)
  {
LABEL_89:
    int64_t v102 = v112;
    goto LABEL_90;
  }
  while (1)
  {
    int64_t v102 = v112 + 1;
    if (__OFADD__(v112, 1)) {
      goto LABEL_144;
    }
    if (v102 >= v107) {
      break;
    }
    unint64_t v111 = *(void *)(v103 + 8 * v102);
    ++v112;
    if (v111) {
      goto LABEL_90;
    }
  }
  uint64_t v98 = v164;
LABEL_106:
  unint64_t v99 = v144;
  int64_t v100 = v146;
  swift_release();
  if (!v145)
  {
LABEL_74:
    uint64_t v101 = *(void *)(v100 + 16);
    goto LABEL_108;
  }
LABEL_107:
  uint64_t v101 = sub_100726920();
LABEL_108:
  swift_bridgeObjectRelease();
  if (v101 < 1)
  {
    if (v143) {
      uint64_t v126 = sub_100726920();
    }
    else {
      uint64_t v126 = *(void *)(v99 + 16);
    }
    uint64_t v125 = swift_bridgeObjectRelease();
    if (v126 < 1)
    {
LABEL_138:
      (*(void (**)(unint64_t, unint64_t))((swift_isaMask & *v98) + 0x408))(0xD000000000000032, 0x80000001008C4C10);
      return;
    }
  }
  else
  {
    uint64_t v125 = swift_bridgeObjectRelease();
  }
  uint64_t v127 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v98) + 0x250))(v125);
  uint64_t v128 = (*(uint64_t (**)(void))((swift_isaMask & *v98) + 0x140))();
  uint64_t v129 = v128;
  int64_t v130 = 0;
  uint64_t v131 = v128 + 64;
  uint64_t v132 = 1 << *(unsigned char *)(v128 + 32);
  uint64_t v133 = -1;
  if (v132 < 64) {
    uint64_t v133 = ~(-1 << v132);
  }
  unint64_t v134 = v133 & *(void *)(v128 + 64);
  int64_t v135 = (unint64_t)(v132 + 63) >> 6;
  while (2)
  {
    if (v134)
    {
      unint64_t v136 = __clz(__rbit64(v134));
      v134 &= v134 - 1;
      unint64_t v137 = v136 | (v130 << 6);
LABEL_118:
      uint64_t v138 = *(void **)(*(void *)(v129 + 56) + 8 * v137);
      uint64_t v139 = *(void (**)(uint64_t))((swift_isaMask & *v138) + 0x238);
      uint64_t v140 = v138;
      v139(v127);

      continue;
    }
    break;
  }
  BOOL v110 = __OFADD__(v130++, 1);
  if (v110)
  {
    __break(1u);
    goto LABEL_141;
  }
  if (v130 >= v135) {
    goto LABEL_137;
  }
  unint64_t v141 = *(void *)(v131 + 8 * v130);
  if (v141)
  {
LABEL_132:
    unint64_t v134 = (v141 - 1) & v141;
    unint64_t v137 = __clz(__rbit64(v141)) + (v130 << 6);
    goto LABEL_118;
  }
  int64_t v142 = v130 + 1;
  if (v130 + 1 >= v135) {
    goto LABEL_137;
  }
  unint64_t v141 = *(void *)(v131 + 8 * v142);
  if (v141) {
    goto LABEL_131;
  }
  int64_t v142 = v130 + 2;
  if (v130 + 2 >= v135) {
    goto LABEL_137;
  }
  unint64_t v141 = *(void *)(v131 + 8 * v142);
  if (v141) {
    goto LABEL_131;
  }
  int64_t v142 = v130 + 3;
  if (v130 + 3 >= v135) {
    goto LABEL_137;
  }
  unint64_t v141 = *(void *)(v131 + 8 * v142);
  if (v141) {
    goto LABEL_131;
  }
  int64_t v142 = v130 + 4;
  if (v130 + 4 >= v135)
  {
LABEL_137:
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v98 = v164;
    goto LABEL_138;
  }
  unint64_t v141 = *(void *)(v131 + 8 * v142);
  if (v141)
  {
LABEL_131:
    int64_t v130 = v142;
    goto LABEL_132;
  }
  while (1)
  {
    int64_t v130 = v142 + 1;
    if (__OFADD__(v142, 1)) {
      break;
    }
    if (v130 >= v135) {
      goto LABEL_137;
    }
    unint64_t v141 = *(void *)(v131 + 8 * v130);
    ++v142;
    if (v141) {
      goto LABEL_132;
    }
  }
LABEL_145:
  __break(1u);
}

void *sub_1004FBE08(void *a1)
{
  os_log_type_t v3 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110);
  id v4 = (os_unfair_lock_s *)v3();
  os_unfair_lock_lock(v4 + 4);
  swift_release();
  uint64_t v5 = (void *)((char *)v1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_membersByURI);
  swift_beginAccess();
  uint64_t v6 = *v5;
  id v7 = a1;
  swift_bridgeObjectRetain();
  objc_super v8 = sub_1004FBF88(v7, v6);

  uint64_t v9 = swift_bridgeObjectRelease();
  if (!v8)
  {
    __chkstk_darwin(v9, v10);
    unint64_t v11 = swift_bridgeObjectRetain();
    sub_10050CF60(v11, (uint64_t (*)(id, id))sub_10050CEBC);
    unint64_t v13 = v12;
    objc_super v8 = v14;
    uint64_t v9 = swift_bridgeObjectRelease();
    if (v13) {

    }
    else {
      objc_super v8 = 0;
    }
  }
  char v15 = (os_unfair_lock_s *)((uint64_t (*)(uint64_t))v3)(v9);
  os_unfair_lock_unlock(v15 + 4);
  swift_release();
  return v8;
}

void *sub_1004FBF88(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_10047B0C4((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void **)(*(void *)(a2 + 56) + 8 * v6);
        id v8 = v5;
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_100726B40();

  if (!v4) {
    return 0;
  }
  type metadata accessor for IDSGroupEncryptionControllerMember();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v5 = v10;
  swift_unknownObjectRelease();
  return v5;
}

double sub_1004FC050@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  if (*(void *)(a3 + 16) && (unint64_t v6 = sub_10045C784(a1, a2), (v7 & 1) != 0))
  {
    uint64_t v8 = *(void *)(a3 + 56) + 32 * v6;
    sub_10044C6FC(v8, (uint64_t)a4);
  }
  else
  {
    double result = 0.0;
    *a4 = 0u;
    a4[1] = 0u;
  }
  return result;
}

uint64_t sub_1004FC114(uint64_t a1)
{
  id v3 = objc_allocWithZone((Class)IDSURI);
  swift_bridgeObjectRetain();
  NSString v4 = sub_100726420();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithPrefixedURI:v4];

  if (!v5) {
    return 0;
  }
  id v6 = [v5 URIByAddingPushToken:*(void *)(a1 + OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_pushToken)];

  if (!v6) {
    return 0;
  }
  uint64_t v7 = (*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x2B8))(v6);

  return v7;
}

void *sub_1004FC290(void *a1)
{
  uint64_t v2 = v1;
  NSString v4 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x110))() + 16);
  os_unfair_lock_lock(v4);
  sub_10050C748(&v11);
  os_unfair_lock_unlock(v4);
  uint64_t v5 = v11;
  swift_release();
  id v6 = a1;
  uint64_t v7 = sub_1004FBF88(v6, v5);

  swift_bridgeObjectRelease();
  if (v7)
  {
    uint64_t v8 = (*(uint64_t (**)(void *))((swift_isaMask & *v2) + 0x2D0))(v7);
  }
  else if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_100726BA0())
  {
    sub_1004614E8((unint64_t)_swiftEmptyArrayStorage);
    return (void *)v10;
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return (void *)v8;
}

Swift::Int sub_1004FC4C8(void *a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x258))();
  id v4 = a1;
  Swift::Int v5 = sub_10050D9A8(v3, v4);

  return v5;
}

uint64_t sub_1004FC67C(void *a1)
{
  uint64_t v3 = (*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x258))();
  id v4 = a1;
  sub_10050D294(v3);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();

  return v6;
}

uint64_t sub_1004FC7E4()
{
  uint64_t v1 = (os_unfair_lock_s *)((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x158))() + 16);
  os_unfair_lock_lock(v1);
  sub_10050C748(&v4);
  os_unfair_lock_unlock(v1);
  uint64_t v2 = v4;
  swift_release();
  return v2;
}

unint64_t sub_1004FC8A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = (uint64_t *)(a1 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_participantsByID);
  unint64_t result = swift_beginAccess();
  uint64_t v7 = *v5;
  if (*(void *)(v7 + 16) && (unint64_t result = sub_10045C7FC(a2), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void **)(*(void *)(v7 + 56) + 8 * result);
    unint64_t result = v9;
  }
  else
  {
    uint64_t v9 = 0;
  }
  *a3 = v9;
  return result;
}

void sub_1004FCA10(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1007268E0();
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    sub_100480C20((unint64_t *)&unk_100A46850, (unint64_t *)&unk_100A47EC0);
    sub_100726680();
    uint64_t v1 = v48;
    uint64_t v39 = v49;
    uint64_t v2 = v50;
    uint64_t v3 = v51;
    unint64_t v4 = v52;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v39 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v38 = (unint64_t)(v2 + 64) >> 6;
  uint64_t v40 = v1;
  while (2)
  {
    if ((v1 & 0x8000000000000000) == 0)
    {
      if (v4)
      {
        uint64_t v8 = (v4 - 1) & v4;
        unint64_t v9 = __clz(__rbit64(v4)) | (v3 << 6);
        uint64_t v10 = v3;
      }
      else
      {
        int64_t v12 = v3 + 1;
        if (__OFADD__(v3, 1)) {
          goto LABEL_69;
        }
        if (v12 >= v38) {
          goto LABEL_67;
        }
        unint64_t v13 = *(void *)(v39 + 8 * v12);
        uint64_t v10 = v3 + 1;
        if (!v13)
        {
          uint64_t v10 = v3 + 2;
          if (v3 + 2 >= v38) {
            goto LABEL_67;
          }
          unint64_t v13 = *(void *)(v39 + 8 * v10);
          if (!v13)
          {
            uint64_t v10 = v3 + 3;
            if (v3 + 3 >= v38) {
              goto LABEL_67;
            }
            unint64_t v13 = *(void *)(v39 + 8 * v10);
            if (!v13)
            {
              uint64_t v10 = v3 + 4;
              if (v3 + 4 >= v38) {
                goto LABEL_67;
              }
              unint64_t v13 = *(void *)(v39 + 8 * v10);
              if (!v13)
              {
                uint64_t v14 = v3 + 5;
                do
                {
                  if (v38 == v14) {
                    goto LABEL_67;
                  }
                  unint64_t v13 = *(void *)(v39 + 8 * v14++);
                }
                while (!v13);
                uint64_t v10 = v14 - 1;
              }
            }
          }
        }
        uint64_t v8 = (v13 - 1) & v13;
        unint64_t v9 = __clz(__rbit64(v13)) + (v10 << 6);
      }
      id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v9);
      if (v11) {
        goto LABEL_30;
      }
LABEL_67:
      sub_100462C48();
      return;
    }
    if (!sub_100726950()) {
      goto LABEL_67;
    }
    sub_100462C50(0, (unint64_t *)&unk_100A47EC0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v11 = v47;
    swift_unknownObjectRelease();
    uint64_t v10 = v3;
    uint64_t v8 = v4;
    if (!v47) {
      goto LABEL_67;
    }
LABEL_30:
    uint64_t v15 = (*(uint64_t (**)(id))((swift_isaMask & *v41) + 0x2C8))(v11);
    uint64_t v16 = v15;
    unint64_t v43 = v8;
    uint64_t v44 = v10;
    id v42 = v11;
    if ((v15 & 0xC000000000000001) != 0)
    {
      sub_1007268E0();
      type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
      sub_10050DC4C((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
      sub_100726680();
      uint64_t v16 = v53;
      uint64_t v46 = v54;
      uint64_t v17 = v55;
      uint64_t v18 = v56;
      unint64_t v19 = v57;
    }
    else
    {
      uint64_t v18 = 0;
      uint64_t v20 = -1 << *(unsigned char *)(v15 + 32);
      uint64_t v46 = v15 + 56;
      uint64_t v17 = ~v20;
      uint64_t v21 = -v20;
      if (v21 < 64) {
        uint64_t v22 = ~(-1 << v21);
      }
      else {
        uint64_t v22 = -1;
      }
      unint64_t v19 = v22 & *(void *)(v15 + 56);
    }
    int64_t v45 = (unint64_t)(v17 + 64) >> 6;
LABEL_38:
    uint64_t v24 = (char *)&_swiftEmptySetSingleton + 56;
    while (1)
    {
      uint64_t v25 = v18;
      if ((v16 & 0x8000000000000000) == 0) {
        break;
      }
      if (!sub_100726950()) {
        goto LABEL_8;
      }
      type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v28 = v47;
      swift_unknownObjectRelease();
      if (!v47) {
        goto LABEL_8;
      }
LABEL_61:
      uint64_t v32 = *(void *)&v28[OBJC_IVAR____TtC17identityservicesd39IDSGroupEncryptionControllerParticipant_participantID];
      uint64_t v33 = sub_100726DC0();
      uint64_t v34 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
      unint64_t v35 = v33 & ~v34;
      if (((*(void *)&v24[(v35 >> 3) & 0xFFFFFFFFFFFFFF8] >> v35) & 1) == 0) {
        goto LABEL_37;
      }
      uint64_t v36 = *((void *)&_swiftEmptySetSingleton + 6);
      if (*(void *)(v36 + 8 * v35) != v32)
      {
        uint64_t v37 = ~v34;
        while (1)
        {
          unint64_t v35 = (v35 + 1) & v37;
          if (((*(void *)&v24[(v35 >> 3) & 0xFFFFFFFFFFFFFF8] >> v35) & 1) == 0) {
            break;
          }
          if (*(void *)(v36 + 8 * v35) == v32) {
            goto LABEL_39;
          }
        }
LABEL_37:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        id v47 = (char *)&_swiftEmptySetSingleton;
        sub_1005096D4(v32, v35, isUniquelyReferenced_nonNull_native);

        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
LABEL_39:
    }
    if (v19)
    {
      unint64_t v26 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v27 = v26 | (v18 << 6);
LABEL_60:
      uint64_t v28 = (char *)*(id *)(*(void *)(v16 + 48) + 8 * v27);
      if (!v28) {
        goto LABEL_8;
      }
      goto LABEL_61;
    }
    int64_t v29 = v18 + 1;
    if (!__OFADD__(v18, 1))
    {
      if (v29 >= v45) {
        goto LABEL_8;
      }
      unint64_t v30 = *(void *)(v46 + 8 * v29);
      ++v18;
      if (!v30)
      {
        uint64_t v18 = v25 + 2;
        if (v25 + 2 >= v45) {
          goto LABEL_8;
        }
        unint64_t v30 = *(void *)(v46 + 8 * v18);
        if (!v30)
        {
          uint64_t v18 = v25 + 3;
          if (v25 + 3 >= v45) {
            goto LABEL_8;
          }
          unint64_t v30 = *(void *)(v46 + 8 * v18);
          if (!v30)
          {
            uint64_t v18 = v25 + 4;
            if (v25 + 4 >= v45) {
              goto LABEL_8;
            }
            unint64_t v30 = *(void *)(v46 + 8 * v18);
            if (!v30)
            {
              uint64_t v31 = v25 + 5;
              while (v45 != v31)
              {
                unint64_t v30 = *(void *)(v46 + 8 * v31++);
                if (v30)
                {
                  uint64_t v18 = v31 - 1;
                  goto LABEL_59;
                }
              }
LABEL_8:
              sub_100462C48();

              uint64_t v1 = v40;
              unint64_t v4 = v43;
              uint64_t v3 = v44;
              continue;
            }
          }
        }
      }
LABEL_59:
      unint64_t v19 = (v30 - 1) & v30;
      unint64_t v27 = __clz(__rbit64(v30)) + (v18 << 6);
      goto LABEL_60;
    }
    break;
  }
  __break(1u);
LABEL_69:
  __break(1u);
}

uint64_t sub_1004FD108(unint64_t a1, int a2)
{
  int v204 = a2;
  uint64_t v210 = type metadata accessor for IDSGroupEncryptionControllerParticipantPreKeyState(0);
  __chkstk_darwin(v210, v4);
  uint64_t v209 = (char *)v201 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for IDSGroupEncryptionPublicIdentity(0);
  __chkstk_darwin(v6 - 8, v7);
  uint64_t v216 = (uint64_t)v201 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100431F80(&qword_100A451F0);
  uint64_t v11 = __chkstk_darwin(v9 - 8, v10);
  unint64_t v13 = (char *)v201 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_isaMask & *v2;
  uint64_t v15 = *(uint64_t (**)(void))(v14 + 0x258);
  long long v226 = v2;
  uint64_t v228 = v15;
  uint64_t v229 = v14 + 600;
  *(void *)&long long v215 = ((uint64_t (*)(uint64_t))v15)(v11);
  unint64_t v16 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_100726BA0();
    swift_bridgeObjectRelease();
    if (v19 >= 1) {
      goto LABEL_3;
    }
  }
  else if (*(uint64_t *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 1)
  {
LABEL_3:
    uint64_t v17 = v228();
    if ((v17 & 0xC000000000000001) != 0) {
      uint64_t v18 = sub_100726920();
    }
    else {
      uint64_t v18 = *(void *)(v17 + 16);
    }
    swift_bridgeObjectRelease();
    LODWORD(v214) = v18 == 0;
    goto LABEL_9;
  }
  LODWORD(v214) = 0;
LABEL_9:
  uint64_t v20 = v226;
  uint64_t v21 = (char *)v226 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_l;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = v20;
  uint64_t v217 = v21;
  uint64_t v23 = sub_100725EB0();
  os_log_type_t v24 = sub_1007266E0();
  BOOL v25 = os_log_type_enabled(v23, v24);
  uint64_t v230 = (char *)v22;
  uint64_t v220 = (uint64_t)v13;
  if (v25)
  {
    uint64_t v26 = swift_slowAlloc();
    unint64_t v225 = swift_slowAlloc();
    *(void *)&long long __s1 = v225;
    *(_DWORD *)uint64_t v26 = 136316162;
    char v233 = (void *)sub_10043E578(0xD000000000000022, 0x80000001008C4CB0, (uint64_t *)&__s1);
    sub_100726830();
    *(_WORD *)(v26 + 12) = 2080;
    unint64_t v227 = a1 >> 62;
    uint64_t v27 = *(void *)&v230[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id];
    unint64_t v28 = *(void *)&v230[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8];
    swift_bridgeObjectRetain();
    char v233 = (void *)sub_10043E578(v27, v28, (uint64_t *)&__s1);
    sub_100726830();

    swift_bridgeObjectRelease();
    *(_WORD *)(v26 + 22) = 1024;
    LODWORD(v233) = v214;
    sub_100726830();
    *(_WORD *)(v26 + 28) = 1024;
    LODWORD(v233) = v204 & 1;
    sub_100726830();
    *(_WORD *)(v26 + 34) = 2080;
    sub_100462C50(0, &qword_100A47430);
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_100726580();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    char v233 = (void *)sub_10043E578(v29, v31, (uint64_t *)&__s1);
    uint64_t v22 = v230;
    unint64_t v13 = (char *)v220;
    sub_100726830();
    swift_bridgeObjectRelease_n();
    unint64_t v16 = v227;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v23, v24, "%s: Group %s: areWeProbablyJoining=%{BOOL}d, lightweight=%{BOOL}d, participants=%s", (uint8_t *)v26, 0x2Cu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }
  uint64_t v32 = (char *)a1;
  uint64_t v33 = v228();
  uint64_t v232 = v33;
  if (v16)
  {
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_100726BA0();
    uint64_t v36 = off_100A47000;
    if (v34) {
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v34 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v36 = off_100A47000;
    if (v34)
    {
LABEL_14:
      uint64_t v203 = (uint64_t *)((char *)v36[133] + (void)v22);
      unint64_t v225 = a1 & 0xC000000000000001;
      uint64_t v37 = (void (**)(void))(swift_isaMask & **(void **)((char *)v22
                                                          + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_identityController));
      uint64_t v224 = *(void *)((char *)v22
                       + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_identityController);
      v37 += 38;
      int64_t v38 = *v37;
      uint64_t v222 = (uint64_t)v37;
      char v223 = v38;
      LODWORD(v213) = v204 & 1;
      unint64_t v208 = &v234;
      uint64_t v39 = 4;
      *(void *)&long long v35 = 136315906;
      long long v202 = v35;
      v201[1] = (char *)&type metadata for Any + 8;
      uint64_t v219 = (char *)a1;
      char v221 = (void *)v34;
      while (1)
      {
        uint64_t v41 = v39 - 4;
        unint64_t v227 = v39;
        if (v225) {
          id v42 = (id)sub_100726A10();
        }
        else {
          id v42 = *(id *)&v32[8 * v39];
        }
        uint64_t v40 = v42;
        unint64_t v43 = (void *)(v41 + 1);
        if (__OFADD__(v41, 1))
        {
          __break(1u);
LABEL_217:
          __break(1u);
LABEL_218:
          __break(1u);
LABEL_219:
          __break(1u);
LABEL_220:
          __break(1u);
LABEL_221:
          __break(1u);
LABEL_222:
          __break(1u);
LABEL_223:
          __break(1u);
LABEL_224:
          __break(1u);
LABEL_225:
          __break(1u);
LABEL_226:
          __break(1u);
LABEL_227:
          __break(1u);
LABEL_228:
          __break(1u);
LABEL_229:
          __break(1u);
LABEL_230:
          __break(1u);
LABEL_231:
          __break(1u);
LABEL_232:
          __break(1u);
LABEL_233:
          __break(1u);
LABEL_234:
          __break(1u);
LABEL_235:
          __break(1u);
LABEL_236:
          __break(1u);
LABEL_237:
          __break(1u);
LABEL_238:
          __break(1u);
LABEL_239:
          __break(1u);
LABEL_240:
          __break(1u);
LABEL_241:
          __break(1u);
LABEL_242:
          __break(1u);
        }
        id v44 = [v42 participantPushToken];
        if (v44)
        {
          int64_t v45 = v44;
          uint64_t v46 = sub_100725B50();
          unint64_t v48 = v47;
        }
        else
        {
          uint64_t v46 = 0;
          unint64_t v48 = 0xF000000000000000;
        }
        v223();
        uint64_t v49 = type metadata accessor for IDSGroupEncryptionFullIdentity(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v13, 1, v49) != 1) {
          break;
        }
        sub_10044C150((uint64_t)v13, &qword_100A451F0);
        if (v48 >> 60 != 15)
        {
          uint64_t v50 = v43;
          uint64_t v51 = v40;
          uint64_t v52 = 0;
          unint64_t v53 = 0xF000000000000000;
LABEL_34:
          sub_10044CE88(v46, v48);
          sub_10044CE88(v52, v53);
LABEL_35:
          uint64_t v40 = v51;
          uint64_t v60 = (void *)(*(uint64_t (**)(void *))((swift_isaMask & *v22) + 0x2F8))(v51);
          uint64_t v32 = v219;
          if (v60)
          {
            uint64_t v61 = v60;
            uint64_t v62 = sub_1004FEF18(v60, v215);
            unint64_t v43 = v50;
            id v218 = v40;
            if (((v62 | v214) & 1) == 0)
            {
              uint64_t v63 = v209;
              sub_100725CB0();
              swift_storeEnumTagMultiPayload();
              uint64_t v62 = (*(uint64_t (**)(char *))((swift_isaMask & *v61) + 0xD8))(v63);
            }
            uint64_t v64 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v61) + 0xB8);
            char v65 = v64(v62) & 1;
            uint64_t v66 = (*(uint64_t (**)(void))((swift_isaMask & *v61) + 0xC0))(v213);
            LOBYTE(__s1) = v65;
            LOBYTE(v233) = v64(v66) & 1;
            sub_100451554();
            if ((sub_100726410() & 1) == 0)
            {
              id v67 = v61;
              unint64_t v68 = v22;
              uint64_t v69 = v67;
              id v70 = v68;
              id v71 = v69;
              uint64_t v72 = sub_100725EB0();
              os_log_type_t v73 = sub_1007266E0();
              LODWORD(v212) = v73;
              if (os_log_type_enabled(v72, v73))
              {
                uint64_t v74 = swift_slowAlloc();
                uint64_t v211 = (void *)swift_slowAlloc();
                uint64_t v206 = swift_slowAlloc();
                *(void *)&long long __s1 = v206;
                *(_DWORD *)uint64_t v74 = v202;
                os_log_t v205 = v72;
                unint64_t v207 = v43;
                uint64_t v75 = *v203;
                unint64_t v76 = v203[1];
                swift_bridgeObjectRetain();
                char v233 = (void *)sub_10043E578(v75, v76, (uint64_t *)&__s1);
                sub_100726830();

                unint64_t v43 = v207;
                swift_bridgeObjectRelease();
                *(_WORD *)(v74 + 12) = 2112;
                char v233 = v71;
                uint64_t v77 = v71;
                sub_100726830();
                void *v211 = v61;

                *(_WORD *)(v74 + 22) = 2080;
                LOBYTE(v233) = v65;
                uint64_t v78 = sub_100726480();
                char v233 = (void *)sub_10043E578(v78, v79, (uint64_t *)&__s1);
                sub_100726830();
                uint64_t v80 = swift_bridgeObjectRelease();
                *(_WORD *)(v74 + 32) = 2080;
                LOBYTE(v233) = v64(v80) & 1;
                uint64_t v81 = sub_100726480();
                char v233 = (void *)sub_10043E578(v81, v82, (uint64_t *)&__s1);
                sub_100726830();

                uint64_t v32 = v219;
                swift_bridgeObjectRelease();
                uint64_t v72 = v205;
                _os_log_impl((void *)&_mh_execute_header, v205, (os_log_type_t)v212, "Group %s: updateParticipants: updated participant %@ %s -> %s", (uint8_t *)v74, 0x2Au);
                sub_100431F80(&qword_100A44F10);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_arrayDestroy();
                swift_slowDealloc();
                uint64_t v22 = v230;
                swift_slowDealloc();
              }
              else
              {
              }
            }
            uint64_t v40 = (void *)sub_10050A4FC(v61);

            unint64_t v13 = (char *)v220;
            goto LABEL_18;
          }
          unint64_t v13 = (char *)v220;
          goto LABEL_39;
        }
LABEL_18:

        uint64_t v39 = v227 + 1;
        if (v43 == v221)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v33 = v232;
          goto LABEL_159;
        }
      }
      uint64_t v50 = v43;
      uint64_t v51 = v40;
      uint64_t v54 = (uint64_t)v13;
      uint64_t v55 = (uint64_t)v13;
      uint64_t v56 = v216;
      sub_10050E6AC(v54, v216, type metadata accessor for IDSGroupEncryptionPublicIdentity);
      sub_10050E240(v55, type metadata accessor for IDSGroupEncryptionFullIdentity);
      id v57 = *(id *)(v56 + 8);
      sub_10050E240(v56, type metadata accessor for IDSGroupEncryptionPublicIdentity);
      id v58 = [v57 rawToken];

      uint64_t v52 = sub_100725B50();
      unint64_t v53 = v59;

      if (v48 >> 60 == 15)
      {
        if (v53 >> 60 != 15) {
          goto LABEL_34;
        }
      }
      else
      {
        if (v53 >> 60 == 15) {
          goto LABEL_34;
        }
        uint64_t v83 = 0;
        switch(v48 >> 62)
        {
          case 1uLL:
            LODWORD(v83) = HIDWORD(v46) - v46;
            if (__OFSUB__(HIDWORD(v46), v46)) {
              goto LABEL_220;
            }
            uint64_t v83 = (int)v83;
            break;
          case 2uLL:
            uint64_t v85 = *(void *)(v46 + 16);
            uint64_t v84 = *(void *)(v46 + 24);
            BOOL v86 = __OFSUB__(v84, v85);
            uint64_t v83 = v84 - v85;
            if (!v86) {
              break;
            }
            goto LABEL_221;
          case 3uLL:
            break;
          default:
            uint64_t v83 = BYTE6(v48);
            break;
        }
        unint64_t v87 = v53 >> 62;
        unint64_t v13 = (char *)v220;
        switch(v53 >> 62)
        {
          case 1uLL:
            LODWORD(v88) = HIDWORD(v52) - v52;
            if (__OFSUB__(HIDWORD(v52), v52)) {
              goto LABEL_222;
            }
            uint64_t v88 = (int)v88;
LABEL_54:
            if (v83 != v88)
            {
LABEL_65:
              sub_10044CE88(v52, v53);
              sub_10044CE88(v46, v48);
              uint64_t v22 = v230;
              goto LABEL_35;
            }
            if (v83 < 1)
            {
LABEL_66:
              sub_10044CE88(v52, v53);
              sub_10044CE88(v46, v48);
              uint64_t v22 = v230;
              uint64_t v32 = v219;
              goto LABEL_32;
            }
            switch(v48 >> 62)
            {
              case 1uLL:
                if ((int)v46 > v46 >> 32) {
                  goto LABEL_224;
                }
                sub_100441FD4(v46, v48);
                unint64_t v96 = (char *)sub_100725910();
                if (!v96) {
                  goto LABEL_71;
                }
                uint64_t v97 = sub_100725940();
                if (__OFSUB__((int)v46, v97)) {
                  goto LABEL_226;
                }
                v96 += (int)v46 - v97;
LABEL_71:
                sub_100725930();
                if (v87)
                {
                  uint64_t v212 = v96;
                  if (v87 == 1)
                  {
                    if (v52 >> 32 < (int)v52) {
                      goto LABEL_235;
                    }
                    swift_retain();
                    uint64_t v98 = (char *)sub_100725910();
                    if (v98)
                    {
                      uint64_t v99 = sub_100725940();
                      if (__OFSUB__((int)v52, v99)) {
                        goto LABEL_242;
                      }
                      v98 += (int)v52 - v99;
                    }
                    uint64_t v22 = v230;
                    uint64_t v100 = sub_100725930();
                    if (v100 >= (v52 >> 32) - (int)v52) {
                      size_t v101 = (v52 >> 32) - (int)v52;
                    }
                    else {
                      size_t v101 = v100;
                    }
                    if (!v212) {
                      goto LABEL_244;
                    }
                    if (!v98) {
                      goto LABEL_245;
                    }
                    int v102 = memcmp(v212, v98, v101);
                    sub_10044CE88(v52, v53);
LABEL_98:
                    sub_10044CE88(v52, v53);
                    sub_10044CE88(v46, v48);
                    sub_10044CE88(v46, v48);
                    if (v102) {
                      goto LABEL_35;
                    }
                  }
                  else
                  {
                    uint64_t v138 = *(void *)(v52 + 16);
                    uint64_t v139 = *(void *)(v52 + 24);
                    swift_retain();
                    swift_retain();
                    id v120 = (char *)sub_100725910();
                    if (v120)
                    {
                      uint64_t v140 = sub_100725940();
                      if (__OFSUB__(v138, v140)) {
                        goto LABEL_241;
                      }
                      v120 += v138 - v140;
                    }
                    BOOL v86 = __OFSUB__(v139, v138);
                    uint64_t v141 = v139 - v138;
                    if (v86) {
                      goto LABEL_236;
                    }
                    uint64_t v142 = sub_100725930();
                    if (v142 >= v141) {
                      size_t v143 = v141;
                    }
                    else {
                      size_t v143 = v142;
                    }
                    uint64_t v22 = v230;
                    uint64_t v128 = (long long *)v212;
                    if (!v212) {
                      goto LABEL_255;
                    }
                    if (!v120) {
                      goto LABEL_256;
                    }
                    size_t v127 = v143;
LABEL_153:
                    int v137 = memcmp(v128, v120, v127);
LABEL_154:
                    swift_release();
                    swift_release();
                    sub_10044CE88(v52, v53);
                    sub_10044CE88(v46, v48);
                    sub_10044CE88(v46, v48);
                    if (v137) {
                      goto LABEL_35;
                    }
                  }
                }
                else
                {
                  *(void *)&long long __s1 = v52;
                  WORD4(__s1) = v53;
                  BYTE10(__s1) = BYTE2(v53);
                  BYTE11(__s1) = BYTE3(v53);
                  BYTE12(__s1) = BYTE4(v53);
                  BYTE13(__s1) = BYTE5(v53);
                  if (!v96) {
                    goto LABEL_254;
                  }
                  size_t v117 = BYTE6(v53);
                  p_s1 = (uint64_t *)&__s1;
                  unint64_t v115 = (long long *)v96;
LABEL_140:
                  int v114 = memcmp(v115, p_s1, v117);
LABEL_141:
                  sub_10044CE88(v52, v53);
                  sub_10044CE88(v46, v48);
                  sub_10044CE88(v46, v48);
                  uint64_t v22 = v230;
                  if (v114) {
                    goto LABEL_35;
                  }
                }
                break;
              case 2uLL:
                uint64_t v103 = *(void *)(v46 + 16);
                sub_100482480(v46, v48);
                swift_retain();
                swift_retain();
                uint64_t v104 = (char *)sub_100725910();
                uint64_t v212 = (void *)(v48 & 0x3FFFFFFFFFFFFFFFLL);
                if (!v104) {
                  goto LABEL_86;
                }
                uint64_t v105 = sub_100725940();
                if (__OFSUB__(v103, v105)) {
                  goto LABEL_225;
                }
                v104 += v103 - v105;
LABEL_86:
                sub_100725930();
                if (!v87)
                {
                  *(void *)&long long __s1 = v52;
                  WORD4(__s1) = v53;
                  BYTE10(__s1) = BYTE2(v53);
                  BYTE11(__s1) = BYTE3(v53);
                  BYTE12(__s1) = BYTE4(v53);
                  BYTE13(__s1) = BYTE5(v53);
                  if (!v104) {
                    goto LABEL_251;
                  }
                  int v129 = memcmp(v104, &__s1, BYTE6(v53));
                  swift_release();
                  swift_release();
                  sub_10044CE88(v52, v53);
                  sub_10044CE88(v46, v48);
                  sub_10044CE88(v46, v48);
                  uint64_t v22 = v230;
                  if (v129) {
                    goto LABEL_35;
                  }
                  goto LABEL_31;
                }
                uint64_t v211 = v104;
                if (v87 == 1)
                {
                  if (v52 >> 32 < (int)v52) {
                    goto LABEL_229;
                  }
                  swift_retain();
                  unint64_t v106 = (char *)sub_100725910();
                  if (v106)
                  {
                    uint64_t v107 = sub_100725940();
                    if (__OFSUB__((int)v52, v107)) {
                      goto LABEL_240;
                    }
                    v106 += (int)v52 - v107;
                  }
                  uint64_t v22 = v230;
                  uint64_t v108 = sub_100725930();
                  if (v108 >= (v52 >> 32) - (int)v52) {
                    size_t v109 = (v52 >> 32) - (int)v52;
                  }
                  else {
                    size_t v109 = v108;
                  }
                  if (!v211) {
                    goto LABEL_246;
                  }
                  if (!v106) {
                    goto LABEL_247;
                  }
                  int v102 = memcmp(v211, v106, v109);
                  sub_10044CE88(v52, v53);
                  swift_release();
                  swift_release();
                  goto LABEL_98;
                }
                uint64_t v130 = *(void *)(v52 + 16);
                uint64_t v131 = *(void *)(v52 + 24);
                swift_retain();
                swift_retain();
                uint64_t v132 = (char *)sub_100725910();
                if (v132)
                {
                  uint64_t v133 = sub_100725940();
                  if (__OFSUB__(v130, v133)) {
                    goto LABEL_239;
                  }
                  v132 += v130 - v133;
                }
                BOOL v86 = __OFSUB__(v131, v130);
                int64_t v134 = v131 - v130;
                if (v86) {
                  goto LABEL_234;
                }
                uint64_t v135 = sub_100725930();
                if (v135 >= v134) {
                  size_t v136 = v134;
                }
                else {
                  size_t v136 = v135;
                }
                uint64_t v22 = v230;
                if (!v211) {
                  goto LABEL_252;
                }
                if (!v132) {
                  goto LABEL_253;
                }
                int v137 = memcmp(v211, v132, v136);
                swift_release();
                swift_release();
                goto LABEL_154;
              case 3uLL:
                *(void *)((char *)&__s1 + 6) = 0;
                *(void *)&long long __s1 = 0;
                if (!v87) {
                  goto LABEL_109;
                }
                if (v87 == 1)
                {
                  uint64_t v91 = (v52 >> 32) - (int)v52;
                  if (v52 >> 32 < (int)v52) {
                    goto LABEL_228;
                  }
                  sub_100482480(v46, v48);
                  sub_100482480(v52, v53);
                  uint64_t v110 = sub_100725910();
                  if (!v110) {
                    goto LABEL_248;
                  }
                  uint64_t v93 = v110;
                  uint64_t v111 = sub_100725940();
                  uint64_t v95 = (int)v52 - v111;
                  if (__OFSUB__((int)v52, v111)) {
                    goto LABEL_233;
                  }
LABEL_105:
                  uint64_t v112 = sub_100725930();
                  if (v112 >= v91) {
                    size_t v113 = v91;
                  }
                  else {
                    size_t v113 = v112;
                  }
                  int v114 = memcmp(&__s1, (const void *)(v93 + v95), v113);
                  sub_10044CE88(v52, v53);
                  goto LABEL_141;
                }
                uint64_t v124 = *(void *)(v52 + 16);
                uint64_t v125 = *(void *)(v52 + 24);
                sub_100482480(v46, v48);
                swift_retain();
                swift_retain();
                id v120 = (char *)sub_100725910();
                if (v120)
                {
                  uint64_t v126 = sub_100725940();
                  if (__OFSUB__(v124, v126)) {
                    goto LABEL_238;
                  }
                  v120 += v124 - v126;
                }
                BOOL v86 = __OFSUB__(v125, v124);
                int64_t v122 = v125 - v124;
                if (v86) {
                  goto LABEL_231;
                }
                uint64_t v123 = sub_100725930();
                uint64_t v22 = v230;
                if (!v120) {
                  goto LABEL_250;
                }
LABEL_121:
                if (v123 >= v122) {
                  size_t v127 = v122;
                }
                else {
                  size_t v127 = v123;
                }
                uint64_t v128 = &__s1;
                goto LABEL_153;
              default:
                *(void *)&long long __s1 = v46;
                WORD4(__s1) = v48;
                BYTE10(__s1) = BYTE2(v48);
                BYTE11(__s1) = BYTE3(v48);
                BYTE12(__s1) = BYTE4(v48);
                BYTE13(__s1) = BYTE5(v48);
                if (!v87)
                {
LABEL_109:
                  char v233 = (void *)v52;
                  __int16 v234 = v53;
                  char v235 = BYTE2(v53);
                  char v236 = BYTE3(v53);
                  char v237 = BYTE4(v53);
                  char v238 = BYTE5(v53);
                  sub_100441FD4(v46, v48);
                  unint64_t v115 = &__s1;
                  p_s1 = (uint64_t *)&v233;
                  size_t v117 = BYTE6(v53);
                  goto LABEL_140;
                }
                if (v87 == 1)
                {
                  uint64_t v91 = (v52 >> 32) - (int)v52;
                  if (v52 >> 32 < (int)v52) {
                    goto LABEL_227;
                  }
                  sub_100482480(v46, v48);
                  sub_100482480(v52, v53);
                  uint64_t v92 = sub_100725910();
                  if (!v92)
                  {
                    sub_100725930();
                    __break(1u);
LABEL_244:
                    __break(1u);
LABEL_245:
                    __break(1u);
LABEL_246:
                    __break(1u);
LABEL_247:
                    __break(1u);
LABEL_248:
                    sub_100725930();
                    __break(1u);
LABEL_249:
                    __break(1u);
LABEL_250:
                    __break(1u);
LABEL_251:
                    __break(1u);
LABEL_252:
                    __break(1u);
LABEL_253:
                    __break(1u);
LABEL_254:
                    __break(1u);
LABEL_255:
                    __break(1u);
LABEL_256:
                    __break(1u);
                    JUMPOUT(0x1004FEEE8);
                  }
                  uint64_t v93 = v92;
                  uint64_t v94 = sub_100725940();
                  uint64_t v95 = (int)v52 - v94;
                  if (__OFSUB__((int)v52, v94)) {
                    goto LABEL_232;
                  }
                  goto LABEL_105;
                }
                uint64_t v118 = *(void *)(v52 + 16);
                uint64_t v119 = *(void *)(v52 + 24);
                sub_100482480(v46, v48);
                swift_retain();
                swift_retain();
                id v120 = (char *)sub_100725910();
                if (v120)
                {
                  uint64_t v121 = sub_100725940();
                  if (__OFSUB__(v118, v121)) {
                    goto LABEL_237;
                  }
                  v120 += v118 - v121;
                }
                BOOL v86 = __OFSUB__(v119, v118);
                int64_t v122 = v119 - v118;
                if (v86) {
                  goto LABEL_230;
                }
                uint64_t v123 = sub_100725930();
                uint64_t v22 = v230;
                if (!v120) {
                  goto LABEL_249;
                }
                goto LABEL_121;
            }
            break;
          case 2uLL:
            uint64_t v90 = *(void *)(v52 + 16);
            uint64_t v89 = *(void *)(v52 + 24);
            BOOL v86 = __OFSUB__(v89, v90);
            uint64_t v88 = v89 - v90;
            if (!v86) {
              goto LABEL_54;
            }
            goto LABEL_223;
          case 3uLL:
            if (v83) {
              goto LABEL_65;
            }
            goto LABEL_66;
          default:
            uint64_t v88 = BYTE6(v53);
            goto LABEL_54;
        }
      }
LABEL_31:
      uint64_t v32 = v219;
      unint64_t v13 = (char *)v220;
LABEL_32:
      uint64_t v40 = v51;
LABEL_39:
      unint64_t v43 = v50;
      goto LABEL_18;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_159:
  if ((v33 & 0xC000000000000001) != 0)
  {
    sub_1007268E0();
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    sub_10050DC4C((unint64_t *)&unk_100A45410, (void (*)(uint64_t))type metadata accessor for IDSGroupEncryptionControllerParticipant);
    sub_100726680();
    uint64_t v145 = *((void *)&__s1 + 1);
    uint64_t v33 = __s1;
    uint64_t v146 = v240;
    uint64_t v147 = v241;
    unint64_t v148 = v242;
  }
  else
  {
    uint64_t v147 = 0;
    uint64_t v149 = -1 << *(unsigned char *)(v33 + 32);
    uint64_t v145 = v33 + 56;
    uint64_t v150 = ~v149;
    uint64_t v151 = -v149;
    if (v151 < 64) {
      uint64_t v152 = ~(-1 << v151);
    }
    else {
      uint64_t v152 = -1;
    }
    unint64_t v148 = v152 & *(void *)(v33 + 56);
    uint64_t v146 = v150;
  }
  uint64_t v220 = v33 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v213 = v146;
  char v223 = (void (*)(void))((unint64_t)(v146 + 64) >> 6);
  LODWORD(v225) = v204 & 1;
  *(void *)&long long v144 = 136315650;
  long long v215 = v144;
  uint64_t v214 = (char *)&type metadata for Any + 8;
  uint64_t v219 = (char *)&type metadata for Swift.AnyObject + 8;
  id v218 = (id)v33;
  uint64_t v216 = v145;
  while (v33 < 0)
  {
    uint64_t v156 = sub_100726950();
    if (!v156) {
      goto LABEL_193;
    }
    uint64_t v231 = v156;
    type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    unint64_t v157 = v233;
    unint64_t v158 = (void *)swift_unknownObjectRelease();
    uint64_t v153 = v147;
    uint64_t v154 = v148;
    if (!v157) {
      goto LABEL_193;
    }
LABEL_190:
    unint64_t v227 = v154;
    uint64_t v162 = *(uint64_t (**)(void *))((swift_isaMask & *v157) + 0xB8);
    char v163 = v162(v158);
    if (sub_100450980(v163 & 1, v225))
    {
      uint64_t v224 = v153;
      uint64_t v164 = v157;
      unint64_t v165 = v22;
      uint64_t v166 = v164;
      uint64_t v167 = v165;
      uint64_t v168 = v166;
      int64_t v169 = sub_100725EB0();
      os_log_type_t v170 = sub_1007266E0();
      if (os_log_type_enabled(v169, v170))
      {
        uint64_t v171 = swift_slowAlloc();
        char v221 = (void *)swift_slowAlloc();
        uint64_t v222 = swift_slowAlloc();
        char v233 = (void *)v222;
        *(_DWORD *)uint64_t v171 = v215;
        uint64_t v173 = *(void *)((char *)v167 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id);
        unint64_t v172 = *(void *)((char *)v167 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8);
        swift_bridgeObjectRetain();
        *(void *)(v171 + 4) = sub_10043E578(v173, v172, (uint64_t *)&v233);

        uint64_t v174 = swift_bridgeObjectRelease();
        *(_WORD *)(v171 + 12) = 2080;
        LOBYTE(v231) = v162((void *)v174) & 1;
        uint64_t v175 = sub_100726480();
        *(void *)(v171 + 14) = sub_10043E578(v175, v176, (uint64_t *)&v233);

        uint64_t v145 = v216;
        swift_bridgeObjectRelease();
        *(_WORD *)(v171 + 22) = 2112;
        *(void *)(v171 + 24) = v168;
        *char v221 = v157;

        _os_log_impl((void *)&_mh_execute_header, v169, v170, "Group %s: updateParticipants: removing leftover %s participant %@", (uint8_t *)v171, 0x20u);
        sub_100431F80(&qword_100A44F10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v33 = (uint64_t)v218;
        swift_slowDealloc();
      }
      else
      {
      }
      (*(void (**)(void *))((swift_isaMask & *v167) + 0x300))(v168);
      uint64_t v22 = v230;
      uint64_t v153 = v224;
    }

    uint64_t v147 = v153;
    unint64_t v148 = v227;
  }
  if (v148)
  {
    uint64_t v154 = (v148 - 1) & v148;
    unint64_t v155 = __clz(__rbit64(v148)) | (v147 << 6);
    uint64_t v153 = v147;
    goto LABEL_189;
  }
  uint64_t v159 = v147 + 1;
  if (__OFADD__(v147, 1)) {
    goto LABEL_219;
  }
  if (v159 < (uint64_t)v223)
  {
    unint64_t v160 = *(void *)(v145 + 8 * v159);
    uint64_t v153 = v147 + 1;
    if (!v160)
    {
      uint64_t v153 = v147 + 2;
      if (v147 + 2 >= (uint64_t)v223) {
        goto LABEL_193;
      }
      unint64_t v160 = *(void *)(v145 + 8 * v153);
      if (!v160)
      {
        uint64_t v153 = v147 + 3;
        if (v147 + 3 >= (uint64_t)v223) {
          goto LABEL_193;
        }
        unint64_t v160 = *(void *)(v145 + 8 * v153);
        if (!v160)
        {
          uint64_t v153 = v147 + 4;
          if (v147 + 4 >= (uint64_t)v223) {
            goto LABEL_193;
          }
          unint64_t v160 = *(void *)(v145 + 8 * v153);
          if (!v160)
          {
            int v161 = (void (*)(void))(v147 + 5);
            do
            {
              if (v223 == v161) {
                goto LABEL_193;
              }
              unint64_t v160 = *(void *)(v145 + 8 * (void)v161);
              int v161 = (void (*)(void))((char *)v161 + 1);
            }
            while (!v160);
            uint64_t v153 = (uint64_t)v161 - 1;
          }
        }
      }
    }
    uint64_t v154 = (v160 - 1) & v160;
    unint64_t v155 = __clz(__rbit64(v160)) + (v153 << 6);
LABEL_189:
    unint64_t v158 = *(id *)(*(void *)(v33 + 48) + 8 * v155);
    unint64_t v157 = v158;
    if (!v158) {
      goto LABEL_193;
    }
    goto LABEL_190;
  }
LABEL_193:
  uint64_t v177 = sub_100462C48();
  uint64_t v178 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v22) + 0x140))(v177);
  uint64_t v179 = v178;
  int64_t v180 = 0;
  uint64_t v181 = v178 + 64;
  uint64_t v182 = 1 << *(unsigned char *)(v178 + 32);
  uint64_t v183 = -1;
  if (v182 < 64) {
    uint64_t v183 = ~(-1 << v182);
  }
  unint64_t v184 = v183 & *(void *)(v178 + 64);
  int64_t v185 = (unint64_t)(v182 + 63) >> 6;
  while (2)
  {
    if (v184)
    {
      unint64_t v186 = __clz(__rbit64(v184));
      v184 &= v184 - 1;
      unint64_t v187 = v186 | (v180 << 6);
LABEL_197:
      uint64_t v188 = *(id *)(*(void *)(v179 + 56) + 8 * v187);
      uint64_t v189 = v228();
      (*(void (**)(uint64_t))((swift_isaMask & *v188) + 0x240))(v189);

      swift_bridgeObjectRelease();
      continue;
    }
    break;
  }
  int64_t v190 = v180 + 1;
  if (__OFADD__(v180, 1)) {
    goto LABEL_217;
  }
  if (v190 < v185)
  {
    unint64_t v191 = *(void *)(v181 + 8 * v190);
    ++v180;
    if (!v191)
    {
      int64_t v180 = v190 + 1;
      if (v190 + 1 >= v185) {
        goto LABEL_213;
      }
      unint64_t v191 = *(void *)(v181 + 8 * v180);
      if (!v191)
      {
        int64_t v180 = v190 + 2;
        if (v190 + 2 >= v185) {
          goto LABEL_213;
        }
        unint64_t v191 = *(void *)(v181 + 8 * v180);
        if (!v191)
        {
          int64_t v192 = v190 + 3;
          if (v192 >= v185) {
            goto LABEL_213;
          }
          unint64_t v191 = *(void *)(v181 + 8 * v192);
          if (!v191)
          {
            while (1)
            {
              int64_t v180 = v192 + 1;
              if (__OFADD__(v192, 1)) {
                goto LABEL_218;
              }
              if (v180 >= v185) {
                goto LABEL_213;
              }
              unint64_t v191 = *(void *)(v181 + 8 * v180);
              ++v192;
              if (v191) {
                goto LABEL_212;
              }
            }
          }
          int64_t v180 = v192;
        }
      }
    }
LABEL_212:
    unint64_t v184 = (v191 - 1) & v191;
    unint64_t v187 = __clz(__rbit64(v191)) + (v180 << 6);
    goto LABEL_197;
  }
LABEL_213:
  uint64_t v193 = swift_release();
  uint64_t v194 = v230;
  uint64_t v195 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *(void *)v230) + 0x128))(v193);
  if (v195)
  {
    uint64_t v197 = v196;
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(void *, uint64_t, uint64_t))(v197 + 16))(v194, ObjectType, v197);
    uint64_t v195 = swift_unknownObjectRelease();
  }
  uint64_t v199 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v194) + 0x348))(v195);
  (*(void (**)(uint64_t))((swift_isaMask & *v194) + 0x390))(v199);
  return (*(uint64_t (**)(unint64_t, unint64_t))((swift_isaMask & *v194) + 0x408))(0xD000000000000026, 0x80000001008C4C80);
}

uint64_t sub_1004FEF18(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) != 0)
  {
    id v3 = a1;
    char v4 = sub_100726960();

    return v4 & 1;
  }
  if (!*(void *)(a2 + 16)
    || (Swift::Int v6 = sub_1007267E0(*(void *)(a2 + 40)),
        uint64_t v7 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v8 = v6 & ~v7,
        uint64_t v9 = a2 + 56,
        ((*(void *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0))
  {
LABEL_11:
    char v12 = 0;
    return v12 & 1;
  }
  type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
  id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v8);
  char v11 = sub_1007267F0();

  if ((v11 & 1) == 0)
  {
    uint64_t v13 = ~v7;
    unint64_t v14 = (v8 + 1) & v13;
    if ((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14))
    {
      do
      {
        id v15 = *(id *)(*(void *)(a2 + 48) + 8 * v14);
        char v12 = sub_1007267F0();

        if (v12) {
          break;
        }
        unint64_t v14 = (v14 + 1) & v13;
      }
      while (((*(void *)(v9 + ((v14 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v14) & 1) != 0);
      return v12 & 1;
    }
    goto LABEL_11;
  }
  char v12 = 1;
  return v12 & 1;
}

id sub_1004FF0EC(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 participantIdentifier];
  id v5 = (id)(*(uint64_t (**)(id))((swift_isaMask & *v1) + 0x2E0))(v4);
  if (!v5)
  {
    Swift::Int v6 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x158);
    uint64_t v7 = v6();
    uint64_t v9 = __chkstk_darwin(v7, v8);
    char v11 = (os_unfair_lock_s *)(__chkstk_darwin(v9, v10) + 16);
    os_unfair_lock_lock(v11);
    sub_10050C748(&v86);
    os_unfair_lock_unlock(v11);
    id v5 = v86;
    swift_release();
    if (v5)
    {
      unint64_t v82 = v6;
      id v12 = v5;
      uint64_t v13 = v1;
      id v14 = v12;
      id v15 = v13;
      unint64_t v16 = sub_100725EB0();
      os_log_type_t v17 = sub_1007266E0();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = swift_slowAlloc();
        uint64_t v78 = (void *)swift_slowAlloc();
        BOOL v86 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 136315394;
        uint64_t v19 = *(void *)&v15[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id];
        unint64_t v20 = *(void *)&v15[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8];
        swift_bridgeObjectRetain();
        sub_10043E578(v19, v20, (uint64_t *)&v86);
        sub_100726830();

        swift_bridgeObjectRelease();
        *(_WORD *)(v18 + 12) = 2112;
        id v21 = v14;
        id v77 = v14;
        uint64_t v22 = v16;
        id v23 = v21;
        sub_100726830();
        *uint64_t v78 = v5;

        _os_log_impl((void *)&_mh_execute_header, v22, v17, "Group %s: ensureParticipant: reviving formerly-active participant %@", (uint8_t *)v18, 0x16u);
        sub_100431F80(&qword_100A44F10);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        id v14 = v77;
      }
      else
      {
      }
      uint64_t v57 = v82();
      uint64_t v59 = __chkstk_darwin(v57, v58);
      uint64_t v61 = (os_unfair_lock_s *)(__chkstk_darwin(v59, v60) + 16);
      os_unfair_lock_lock(v61);
      sub_100482E74();
      os_unfair_lock_unlock(v61);
      swift_release();

      goto LABEL_22;
    }
    id v24 = [a1 participantPushToken];
    if (v24)
    {
      BOOL v25 = v24;
      uint64_t v26 = sub_100725B50();
      unint64_t v28 = v27;

      id v29 = objc_allocWithZone((Class)IDSPushToken);
      sub_100441FD4(v26, v28);
      Class isa = sub_100725B20().super.isa;
      id v31 = [v29 initWithData:isa];
      sub_100442248(v26, v28);

      if (v31)
      {
        id v32 = [a1 participantURI];
        if (v32)
        {
          uint64_t v33 = v32;
          uint64_t v79 = v26;
          unint64_t v83 = v28;
          uint64_t v34 = sub_100726430();
          long long v35 = v6;
          uint64_t v37 = v36;

          type metadata accessor for IDSGroupEncryptionControllerParticipant(0);
          id v38 = [a1 participantIdentifier];
          uint64_t v39 = v2;
          id v40 = v31;
          id v41 = sub_1004D1968(v39, (uint64_t)&off_10098F6D8, (uint64_t)v38, v40, v34, v37);
          uint64_t v42 = v35();
          uint64_t v44 = __chkstk_darwin(v42, v43);
          uint64_t v85 = v40;
          uint64_t v46 = (os_unfair_lock_s *)(__chkstk_darwin(v44, v45) + 16);
          os_unfair_lock_lock(v46);
          sub_100482E74();
          os_unfair_lock_unlock(v46);
          swift_release();
          unint64_t v47 = v39;
          id v48 = v41;
          uint64_t v49 = v47;
          id v5 = v48;
          uint64_t v50 = sub_100725EB0();
          os_log_type_t v51 = sub_1007266E0();
          if (os_log_type_enabled(v50, v51))
          {
            uint64_t v52 = swift_slowAlloc();
            unint64_t v53 = (void *)swift_slowAlloc();
            BOOL v86 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v52 = 136315394;
            uint64_t v55 = *(void *)&v49[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id];
            unint64_t v54 = *(void *)&v49[OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8];
            swift_bridgeObjectRetain();
            sub_10043E578(v55, v54, (uint64_t *)&v86);
            sub_100726830();

            swift_bridgeObjectRelease();
            *(_WORD *)(v52 + 12) = 2112;
            id v56 = v5;
            sub_100726830();
            *unint64_t v53 = v5;

            _os_log_impl((void *)&_mh_execute_header, v50, v51, "Group %s: ensureParticipant: created participant %@", (uint8_t *)v52, 0x16u);
            sub_100431F80(&qword_100A44F10);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
            sub_100442248(v79, v83);
          }
          else
          {
            sub_100442248(v79, v83);
          }
          goto LABEL_22;
        }
        uint64_t v69 = v2;
        id v70 = a1;
        id v71 = sub_100725EB0();
        os_log_type_t v72 = sub_1007266C0();
        if (os_log_type_enabled(v71, v72))
        {
          os_log_type_t v84 = v72;
          uint64_t v73 = swift_slowAlloc();
          BOOL v86 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v73 = 136315394;
          uint64_t v80 = v70;
          uint64_t v81 = v71;
          uint64_t v75 = *(void *)((char *)v69 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id);
          unint64_t v74 = *(void *)((char *)v69 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8);
          swift_bridgeObjectRetain();
          sub_10043E578(v75, v74, (uint64_t *)&v86);
          sub_100726830();

          swift_bridgeObjectRelease();
          *(_WORD *)(v73 + 12) = 2048;
          [v80 participantIdentifier];
          sub_100726830();

          id v71 = v81;
          _os_log_impl((void *)&_mh_execute_header, v81, v84, "Group %s: ensureParticipant: participant %llu missing participantURI", (uint8_t *)v73, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          sub_100442248(v26, v28);
        }
        else
        {
          sub_100442248(v26, v28);
        }
        goto LABEL_17;
      }
      sub_100442248(v26, v28);
    }
    uint64_t v62 = v2;
    id v63 = a1;
    uint64_t v64 = sub_100725EB0();
    os_log_type_t v65 = sub_1007266C0();
    if (os_log_type_enabled(v64, v65))
    {
      uint64_t v66 = swift_slowAlloc();
      BOOL v86 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v66 = 136315394;
      uint64_t v67 = *(void *)((char *)v62 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id);
      unint64_t v68 = *(void *)((char *)v62 + OBJC_IVAR____TtC17identityservicesd33IDSGroupEncryptionControllerGroup_id + 8);
      swift_bridgeObjectRetain();
      sub_10043E578(v67, v68, (uint64_t *)&v86);
      sub_100726830();

      swift_bridgeObjectRelease();
      *(_WORD *)(v66 + 12) = 2048;
      [v63 participantIdentifier];
      sub_100726830();

      _os_log_impl((void *)&_mh_execute_header, v64, v65, "Group %s: ensureParticipant: participant %llu missing pushToken", (uint8_t *)v66, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_17:
    id v5 = 0;
LABEL_22:
    (*(void (**)(unint64_t, unint64_t))((swift_isaMask & *v2) + 0x408))(0xD000000000000019, 0x80000001008C4CE0);
  }
  return v5;
}